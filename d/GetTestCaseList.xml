<?xml version="1.0" encoding="UTF-8"?>
<con:testSuite name="GetTestCaseList" disabled="true" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="WriteTestCaseInExcel" searchProperties="true" id="08b9aeb3-0017-44da-b314-c2ddb00b283c"><con:settings/><con:testStep type="groovy" name="WriteTestCaseInExcel"><con:settings/><con:config><script>import com.eviware.soapui.impl.wsdl.*;
import com.eviware.soapui.impl.wsdl.teststeps.*;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def isValidSuite = null;
def projectName = tP.getName();
log.info("Project Name : '" + projectName + "'");

String ingnoreSuiteNames = "P0 Test Cases,Suite2";

String [] ingnoreSuiteNamesList = ingnoreSuiteNames.split(",");

log.info("Get TestSuite List in project '" + tP.getName() + "'");
def suiteList = tP.getTestSuiteList();

log.info("Loop over Suite List!!! Start");

for (int i = 0; i &lt; suiteList.size(); i++) {
	def currentTestSuite = suiteList.get(i);
	log.info("Current Test Suite Name : '" + currentTestSuite.getName() + "'");
	log.info("currentTestSuite.isDisabled() : '" + currentTestSuite.isDisabled()  + "'");

	if (currentTestSuite.isDisabled() == false)
	{
		for(int m=0; m &lt; ingnoreSuiteNamesList.size(); m++ ){
			if( currentTestSuite.getName().toLowerCase().equals(ingnoreSuiteNamesList[m].toLowerCase()) ){
				isValidSuite = "FF";
				break;
			}else{
				isValidSuite = "TT";   
			}
		}
		if(isValidSuite == "TT"){
			def testCaseList = currentTestSuite.getTestCaseList();
	
			for (int j = 0; j &lt; testCaseList.size(); j++) {
				def  currentTestCase = testCaseList.get(j);
					if (currentTestCase.isDisabled() == false)
					{
						log.info("Current TestCase Name : '" + currentTestCase.getName() + "'");
			
						tC.getTestStepByName('DataSink').setPropertyValue("ProjectName",projectName);
						tC.getTestStepByName('DataSink').setPropertyValue("TestSuiteName",currentTestSuite.getName());
						tC.getTestStepByName('DataSink').setPropertyValue("TestCaseName",currentTestCase.getName());
			
						def testStep = tC.getTestStepByName('DataSink');
						testStep.run(testRunner, context)
					}
			}
		}else{
			log.info("Ignoring this test suite"); 
		}
	}
}</script></con:config></con:testStep><con:testStep type="datasource" name="DataSource" disabled="true"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Groovy"><con:configuration><script>import com.eviware.soapui.impl.wsdl.*;
import com.eviware.soapui.impl.wsdl.teststeps.*;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

String ingnoreSuiteNames = "Suite1,Suite2";

String [] ingnoreSuiteNamesList = ingnoreSuiteNames.split(",");

log.info("Get TestSuite List in project '" + tP.getName() + "'");
def suiteList = tP.getTestSuiteList();

log.info("Loop over Suite List!!! Start");

for (int i = 0; i &lt; suiteList.size(); i++) {
	def currentTestSuite = suiteList.get(i);
	log.info("Current Test Suite Name : '" + currentTestSuite.getName() + "'");
	log.info("currentTestSuite.isDisabled() : '" + currentTestSuite.isDisabled()  + "'");

	for(int m=0; m &lt; ingnoreSuiteNamesList.size(); m++ ){
			if( currentTestSuite.getName().toLowerCase().equals(ingnoreSuiteNamesList[m]) ){
				def testCaseList = currentTestSuite.getTestCaseList();
		
				for (int j = 0; j &lt; testCaseList.size(); j++) {
		
					def  currentTestCase = testCaseList.get(j);
					log.info("Current Test Case Name : '" + currentTestCase.getName());
		
					for(int k=0; k &lt; knownBugsList.size() ; k++){
						if(currentTestCase.getName().toLowerCase().startsWith(knownBugsList[k].toLowerCase())){
							log.info("Disable testcase");
							currentTestCase.setDisabled(true);
							log.info("TestCase disabled successfully");
							break;
						}
						
					}
				}                      
			}  
   } 
}</script></con:configuration></con:dataSource><con:property>ProjectName</con:property><con:property>SuiteName</con:property><con:property>TestCaseName</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="datasink" name="DataSink"><con:settings/><con:config xsi:type="con:DataSinkStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSink type="File"><con:configuration><fileName>../../../../../TestCases/${DataSink#ProjectName}.csv</fileName><separator>,</separator><quote>true</quote><trim>true</trim><append>false</append><encoding>Cp1252</encoding></con:configuration></con:dataSink><con:properties><con:property><con:name>ProjectName</con:name><con:value>STSAPI_NodeRole_NonCS_TCs_R6_LP1</con:value></con:property><con:property><con:name>TestSuiteName</con:name><con:value>7_STS Create Tokentype unamepasswd - DSP</con:value></con:property><con:property><con:name>TestCaseName</con:name><con:value>TC_DECE_56082 - STSGET - dsp - unamepasswd - FORBIDDEN - NODE_USER_SAML_ASSERTION.STATUS deleted - P0</con:value></con:property></con:properties></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>86ca5456-9bdd-4134-8ba0-48f40d57ef69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite>