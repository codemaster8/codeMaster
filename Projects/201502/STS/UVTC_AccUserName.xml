<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="R15_UVTC_AccUserName" resourceRoot="${projectDir}" soapui-version="4.6.1" defaultScriptLanguage="Groovy" activeEnvironment="Default" id="e43fa308-2cf3-4f2d-9afc-ed9adfb3e646" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.ProTestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="&lt;all>"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value="E:\DECE API\STS\Builds\R3\106.2.3\Reports106\STSAPI_Payload_NodeOId_TCs_R3"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Users\ralluri\Desktop\LatestProjects_Users\Build_4.1</con:setting></con:settings><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Account" type="rest" id="8252ba06-b20f-4a82-a0b6-fd7f3523ede0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="AccountCreate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account" id="ed70a636-717d-4786-b6de-deabd446719b"><con:settings/><con:parameters/><con:method name="AccountCreate" method="POST" id="09857898-3271-43d8-a451-d5bf44ce4858"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404 403 503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400 500</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>400 500 405 403 503</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="AccountCreate" mediaType="application/xml" postQueryString="false" id="ca4ff0a9-00f8-41e3-871a-d799b7db932c" sslKeystore="80080010.pem"><con:settings><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="http://www.decellc.org/schema/2010/10/dece"> 
<DisplayName>${#Project#AccountDisplayName}</DisplayName>
<Country>US</Country>
</Account>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="AccountGET" method="GET" id="09857898-3271-43d8-a451-d5bf44ce4858"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>201 303 200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404 403 503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400 500 401</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>400 500 405 403</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="AccountGET_BasicAuth" mediaType="application/xml" postQueryString="false" id="ca4ff0a9-00f8-41e3-871a-d799b7db932c" sslKeystore="500500.pem"><con:settings><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Device_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="http://www.decellc.org/schema/2010/10/dece"> 
<DisplayName>${#Project#AccountDisplayName}</DisplayName>
<Country>US</Country>
</Account>
]]></con:request><con:credentials><con:username>${#Project#UserName}</con:username><con:password>Password1</con:password><con:domain>DECE</con:domain><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request><con:request name="AccountGET_SAML" mediaType="application/xml" postQueryString="false" id="ca4ff0a9-00f8-41e3-871a-d799b7db932c" sslKeystore="500500.pem"><con:settings><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="http://www.decellc.org/schema/2010/10/dece"> 
<DisplayName>${#Project#AccountDisplayName}</DisplayName>
<Country>US</Country>
</Account>
]]></con:request><con:credentials><con:username/><con:password/><con:domain/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Account" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}" id="bda852c0-5ccd-41d2-911c-bdec0459e462"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="AccountGet" method="GET" id="5cccdc43-2b89-4e8c-88a3-390b7ef3f239"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 401 400</con:status><con:params/><con:element xmlns:urn="urn:oasis:names:tc:SAML:2.0:protocol">urn:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Account</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="AccountGet" mediaType="application/xml" sslKeystore="500500.pem" id="e1b8ad00-9ed3-4f09-980e-f2f86bdf18ca"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#NODEACCID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request><con:request name="AccountGet_BasicAuth" mediaType="application/xml" sslKeystore="500580.pem" id="e1b8ad00-9ed3-4f09-980e-f2f86bdf18ca"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@remove_empty_content">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:username>${#Project#UserName}</con:username><con:password>Password1</con:password><con:domain>DECE</con:domain><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="AB1E09D1A009474DE0401F0A07995BBC" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method><con:method name="AccountDelete" method="DELETE" id="3dd5e135-f342-47db-9631-1bec111dba45"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" sslKeystore="80080010.pem" id="7e19750b-606f-4d7d-bda7-cfa0c9074a64"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#NODEACCID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method><con:method name="AccountUpdate" method="PUT" id="5cccdc43-2b89-4e8c-88a3-390b7ef3f239"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:urn="urn:oasis:names:tc:SAML:2.0:protocol">urn:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Account</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Account</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:request name="AccountUpdate" mediaType="application/xml" sslKeystore="80080010.pem" id="e1b8ad00-9ed3-4f09-980e-f2f86bdf18ca" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="http://www.decellc.org/schema/2010/10/dece"> 
<DisplayName>${#Project#AccountDisplayName}</DisplayName>
<Country>US</Country>
</Account>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#NODEACCID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="FirstUserCreate" type="rest" id="63e68881-a234-4670-82d0-16b5421c30a4" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="FirstUserCreate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" id="9ed9c404-b207-4c25-a786-7bd711105b44"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:resource name="UserAPI" path="/{UserID}" id="8c72fe92-42e8-4bcc-bfc3-29cb8a3ca9cb"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>UserID</con:name><con:value>UserID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>UserID</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:resource name="User_StatusUpdate" path="/ResourceStatus/Current/Update" id="b0f04600-c6bc-42f8-b382-bdb9ef258eee"><con:settings/><con:parameters/><con:method name="UserStatusUpdate" method="PUT" id="5e4818b9-48a0-429e-aa1a-3379298d12be"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/06/coordinator">coor:ResourceStatus</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/06/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>303</con:status><con:params/></con:representation><con:request name="UserStatusUpdate" mediaType="application/xml" postQueryString="false" id="ae263fb2-2f71-4002-b6e4-7831863b5d6f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#Project#NODEACCID}"/>
  <con:entry key="UserID" value="${#Project#NODEUSERID}"/>
</con:parameters></con:request></con:method></con:resource><con:method name="UserGet" method="GET" id="55de7616-71c0-4cac-bade-e9aa4166e711"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/06/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/06/coordinator">coor:User</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="UserGet" mediaType="application/xml" id="86860311-fe06-418d-9e53-0c4d81aa0896" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="UserList" path="/List" id="16a08242-2ac7-42a8-b9c6-ca954b9794d4"><con:settings/><con:parameters/><con:method name="UserList" method="GET" id="e58e8f42-4a16-498a-86e7-a405a0125794"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:UserList</con:element></con:representation><con:request name="UserList" mediaType="application/xml" id="869ab87f-d5fa-4e59-8a29-1bca986023a1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="urn:dece:accountid:org:dece:${#Project#NODEACCID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource><con:method name="FirstUserCreate" method="POST" id="557bc5f3-c2ce-4146-81fc-71cdc6358536"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>404 403 500 400</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404 403 503 502</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>404 405 400 500</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403 400 404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="FirstUserCreate" mediaType="application/xml" postQueryString="false" id="54c781b4-bf2d-4e55-ab6c-fc7337e96457" sslKeystore="80080010.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:full" xmlns="http://www.decellc.org/schema/2010/10/dece" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
        	<GivenName>${#Project#UserName}</GivenName>
		<SurName>Harbor</SurName>
	</Name>	
	<ContactInfo>
	<PrimaryEmail>			
          <Value>testing@uvvutesting.biz</Value>
         <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</PrimaryEmail>
	<AlternateEmail>			
        <Value>testing@uvvutesting.biz</Value>			
        <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</AlternateEmail>
	<Address>
		<PostalAddress>45999 Center Oak Plaza</PostalAddress>
		<PostalCode>20166</PostalCode>
		<Locality>Sterling</Locality>
		<StateOrProvince>NJ</StateOrProvince>
                <Country>US</Country>
	</Address>
	</ContactInfo>
        <Languages>
		<Language>de</Language>	
	</Languages>
       <!-- <DateOfBirth> depricated </DateOfBirth> -->
       <Credentials> 
		<Username>NewnameShikha</Username>		  
                <Password>mypWd007</Password> 
	</Credentials>
<UserRecoveryTokens>
      <RecoveryItem>
		<QuestionID>1200</QuestionID>  
		<QuestionResponse>Turner</QuestionResponse>
       </RecoveryItem>
       <RecoveryItem>
		<QuestionID>1650</QuestionID>  
		<QuestionResponse>Phoenix</QuestionResponse>
       </RecoveryItem> 
</UserRecoveryTokens>
</User>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="urn%3Adece%3Aaccountid%3Aorg%%3A${#TestCase#NODE_ACCOUNT_ID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource><con:resource name="UserDelete" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" id="b4da2587-c2fe-45c4-aa0b-7bfdda8db2c0"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:value>${#TestCase#NODE_ACCOUNT_ID}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestCase#NODE_ACCOUNT_ID}</con:default></con:parameter><con:parameter disableUrlEncoding="true"><con:name>UserID</con:name><con:value>${#TestCase#NODE_USER_ID}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestCase#NODE_USER_ID}</con:default></con:parameter></con:parameters><con:method name="DeleteUser" method="DELETE" id="02c9752d-c22c-4713-874a-3f6c2b982142"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>412</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" id="0f18fdda-5e02-4f21-8def-a3f312f61ac8"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="AddNewUser" type="rest" id="785934cf-6e29-492d-9dd8-504d1aeb0b28" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#HostName}</con:endpoint></con:endpoints><con:resource name="AddUser" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" id="a8f8ca6d-db1b-4090-9ffc-68be2d519618"><con:settings/><con:parameters/><con:resource name="UserAPI" path="/{UserID}" id="20cfed44-6bef-4e69-8937-8a0ed4466e50"><con:settings/><con:parameters><con:parameter><con:name>UserID</con:name><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="UserDelete" method="DELETE" id="ec0bb443-5d9b-4e69-b1d5-c6cf6535c7e4"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>UserID</con:name><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 500 400</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="UserDelete" mediaType="application/xml" sslKeystore="80080010.pem" id="d0bc938e-dbab-4193-8cc9-85cb4f10c8bf"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="urn:dece:accountid:org:dece:${#Project#NODEACCID}"/>
  <con:entry key="UserID" value="urn:dece:userid:org:dece:${#Project#NODEUSERID1}"/>
</con:parameters></con:request></con:method><con:method name="UserGet" method="GET" id="b4c52e6c-50f0-4ebf-b8e3-ab596e55b443"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter disableUrlEncoding="true"><con:name>UserID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 404 500 400</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:User</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>404 400 405</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="UserGet" mediaType="application/xml" sslKeystore="80080010.pem" id="0a991f82-1623-4495-b24c-9cc11cc37183"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="UserUpdate" method="PUT" id="b4c52e6c-50f0-4ebf-b8e3-ab596e55b443"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value>urn:dece:accountid:org:dece:${#Project#NODEACCID}</con:value><con:style>TEMPLATE</con:style><con:default>urn:dece:accountid:org:dece:${#Project#NODEACCID}</con:default></con:parameter><con:parameter><con:name>UserID</con:name><con:value>urn:dece:userid:org:dece:${#Project#NODEUSERID}</con:value><con:style>TEMPLATE</con:style><con:default>urn:dece:userid:org:dece:${#Project#NODEUSERID}</con:default></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400 500 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:User</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>404 503</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:User</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403 400 404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>303</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>412</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="UserUpdate" mediaType="application/xml" sslKeystore="500500.pem" id="0a991f82-1623-4495-b24c-9cc11cc37183" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:full" xmlns="http://www.decellc.org/schema/2010/10/dece" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
        	<GivenName>${#Project#UserName}</GivenName>
		<SurName>Harbor</SurName>
	</Name>	
	<ContactInfo>
	<PrimaryEmail>			
          <Value>testing@uvvutesting.biz</Value>
         <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</PrimaryEmail>
	<AlternateEmail>			
        <Value>testing@uvvutesting.biz</Value>			
        <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</AlternateEmail>
	<Address>
		<PostalAddress>45999 Center Oak Plaza</PostalAddress>
		<PostalCode>20166</PostalCode>
		<Locality>Sterling</Locality>
		<StateOrProvince>NJ</StateOrProvince>
                <Country>US</Country>
	</Address>
	</ContactInfo>
        <Languages>
		<Language>de</Language>	
	</Languages>
       <!-- <DateOfBirth> depricated </DateOfBirth> -->
       <Credentials> 
		<Username>${#Project#UserName}</Username>		  
                <Password>mypWd007</Password> 
	</Credentials>
<UserRecoveryTokens>
      <RecoveryItem>
		<QuestionID>1200</QuestionID>  
		<QuestionResponse>Turner</QuestionResponse>
       </RecoveryItem>
       <RecoveryItem>
		<QuestionID>1650</QuestionID>  
		<QuestionResponse>Phoenix</QuestionResponse>
       </RecoveryItem> 
</UserRecoveryTokens>
</User>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:method name="AddUser" method="POST" id="c8e33bf9-7e9a-4fc7-a85d-b9258d44e3b4"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:urn="urn:oasis:names:tc:SAML:2.0:protocol">urn:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:urn="urn:oasis:names:tc:SAML:2.0:protocol">urn:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="AddUser" mediaType="application/xml" postQueryString="false" sslKeystore="80080010.pem" id="8f456815-cfce-46c5-9b39-907b23b9d134"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:full" xmlns="http://www.decellc.org/schema/2010/10/dece" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
        	<GivenName>${#Project#UserName}</GivenName>
		<SurName>Harbor</SurName>
	</Name>	
	<ContactInfo>
	<PrimaryEmail>			
          <Value>testing@uvvutesting.biz</Value>
         <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</PrimaryEmail>
	<AlternateEmail>			
        <Value>testing@uvvutesting.biz</Value>			
        <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</AlternateEmail>
	<Address>
		<PostalAddress>45999 Center Oak Plaza</PostalAddress>
		<PostalCode>20166</PostalCode>
		<Locality>Sterling</Locality>
		<StateOrProvince>NJ</StateOrProvince>
                <Country>US</Country>
	</Address>
	</ContactInfo>
        <Languages>
		<Language>de</Language>	
	</Languages>
       <!-- <DateOfBirth> depricated </DateOfBirth> -->
       <Credentials> 
		<Username>${#Project#UserName}</Username>		  
                <Password>mypWd007</Password> 
	</Credentials>
<UserRecoveryTokens>
      <RecoveryItem>
		<QuestionID>1200</QuestionID>  
		<QuestionResponse>Turner</QuestionResponse>
       </RecoveryItem>
       <RecoveryItem>
		<QuestionID>1650</QuestionID>  
		<QuestionResponse>Phoenix</QuestionResponse>
       </RecoveryItem> 
</UserRecoveryTokens>
</User>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="urn:dece:accountid:org:dece:${#Project#NODEACCID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Rights Token" type="rest" id="2cc5edf0-44c3-45c0-af0b-d6e19735bdd5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="Rights Token Get_List" path="${#TestCase#endPoint}" id="80183adb-1c5a-4de7-9d84-191f16c47def"><con:settings/><con:parameters/><con:method name="Rights Token Get" method="GET" id="8b4cec3d-fe23-4572-9b38-8f6059da115f"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 404 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:RightsTokenList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:RightsToken</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" id="dc5964a7-d54c-453b-85c8-f1cc8f5c4976"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Rights Token Create" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{RIGHTSTOKEN}/RightsToken" id="483f410c-4aec-4f56-bdb8-b53566c9bb97"><con:settings/><con:parameters><con:parameter><con:name>RIGHTSTOKEN</con:name><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="Rights Token Create" method="POST" id="1c20f275-4760-4c4b-994f-d981d038615c"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="0565a9cc-8569-46e9-a479-f8aacc70fa3f"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="AccountMergeTest" type="rest" id="6ba05ee5-e87a-41e2-93b7-5fac7723d364" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="AccountMergeTest" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{SurvivingAccountID}/Merge/Test/{RetiredAccountID}" id="d3ab43df-328b-4e09-8562-58a80596481d"><con:settings/><con:parameters><con:parameter><con:name>SurvivingAccountID</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>RetiredAccountID</con:name><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="Method 1" method="POST" id="449e438d-5c8b-4814-8ea3-5b23b2d9c7fc"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="cfd0be42-a0ab-4e51-972d-c4a67c9d1208"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="AccountMerge" type="rest" id="38577162-173b-4e3b-b7a4-7084681116dd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="AccountMerge" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{SurvivingAccountID}/Merge/{RetiredAccountID}" id="6ecab418-a971-4402-baea-c83b2ded7efc"><con:settings/><con:parameters><con:parameter><con:name>SurvivingAccountID</con:name><con:value>SurvivingAccountID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>SurvivingAccountID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>RetiredAccountID</con:name><con:value>RetiredAccountID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>RetiredAccountID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" method="POST" id="4659148b-17e0-4ad5-a68e-924d516aa757"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="acbfb94a-f132-4a9c-8d15-8b85ecc78c8c" sslKeystore="7600.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 Assertion=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"/>
  &lt;con:entry key="Authorization" value="SAML2 Assertion=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"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:AccountMerge xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/schema/md/v1.2/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd ">
<dece:UserReference ResourceDisposition="urn:dece:type:status:active">urn:dece:userid:org:dece:D842651EB198EA24E0401F0A07993565</dece:UserReference>                
<dece:UserReference ResourceDisposition="urn:dece:type:status:active">urn:dece:userid:org:dece:D842781AAA4A1E6FE0401F0A0799569A</dece:UserReference>                
</dece:AccountMerge>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="SurvivingAccountID" value="urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD842651EB188EA24E0401F0A07993565"/>
  <con:entry key="RetiredAccountID" value="urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD842781AAA3B1E6FE0401F0A0799569A"/>
</con:parameters></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="AccountMergeUndo" type="rest" id="216cdb32-edc4-42ff-940d-0a24ddc5b6ef" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints/><con:resource name="AccountMergeUndo" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{SurvivingAccountID}/Merge/Undo" id="a3a07d2e-db6c-4d70-a443-af62d5a50a00"><con:settings/><con:parameters><con:parameter><con:name>SurvivingAccountID</con:name><con:value>SurvivingAccountID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>SurvivingAccountID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" method="POST" id="4995638c-d575-4d0f-a861-2a267308a8d9"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="9f81ce2b-c5b6-493d-9b1f-7c101faacf30"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="UserResourceStatusUpdate" type="rest" id="3c0ff9bd-188e-4595-ac97-ec945cbf1b34" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="UserResourceStatusUpdate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}/ResourceStatus/Current/Update" id="a72ea2ab-ce4e-47cc-b28d-787420d41eae"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value>AccountID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>AccountID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>UserID</con:name><con:value>UserID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>UserID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="UserResourceStatusUpdate" method="PUT" id="bae01694-be77-463a-bcef-02134d4e45fb"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ResourceStatus</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="d9791dad-3957-43a7-9916-acc98d6cfcfe"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="AccountResourceStatusUpdate" type="rest" id="d2b48757-d9d7-48b6-99e2-5ffaec2a0276" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="AccountResourceStatusUpdate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/ResourceStatus/Current/Update" id="087a86a9-8ddc-4222-aa5e-8ea5f58f3b44"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value>AccountID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>AccountID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="ResourceStatusUpdate" method="PUT" id="a3720389-3d1d-49ca-8d11-1e6c7977a6b6"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="c5de7daa-09fc-46a7-9439-7290f79b45c1"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="STS" type="rest" id="2b399c77-329a-43cb-9c65-b90e43e27bf5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="STSCreate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/SecurityToken/SecurityTokenExchange" id="c9f3de54-1283-4f02-b8ea-7030652e5a47"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>tokentype</con:name><con:value>tokentype</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>tokentype</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter disableUrlEncoding="true"><con:name>audience</con:name><con:value>audience</con:value><con:style>QUERY</con:style><con:default>audience</con:default></con:parameter></con:parameters><con:method name="STSCreate" method="POST" id="dd8dec87-e935-415f-91f4-ef072cb2b292"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:proj="${#Project#coordinatorSchema}">proj:Credentials</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="8eccae92-53c1-462c-ad88-7bb2ab6bc7a9"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="STSGet" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/SecurityToken/Assertion/{assertionUUID}" id="f7ffc3a2-890e-4d43-8f2a-582eb82ffd58"><con:settings/><con:parameters><con:parameter><con:name>assertionUUID</con:name><con:value>assertionUUID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>assertionUUID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="STSGet" method="GET" id="5edddbc8-bc7c-4b0d-9fa5-394b1f0932ed"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:urn="urn:oasis:names:tc:SAML:2.0:assertion">urn:Assertion</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" id="198a8863-08df-42da-87ef-91fde7f4ac06"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Users" type="rest" id="7b549f36-fade-448e-abd1-eec08d8eff19" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:endpoint>${#Project#Query_HostName}</con:endpoint></con:endpoints><con:resource name="UserCreate" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" id="741ca285-16d9-469b-9763-d481e65a4edd"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="UserCreate" method="POST" id="7ab787fc-f35b-4e18-a1d5-8659cd87d6c5"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="f2a2c7e1-a731-4711-a1d2-ad4385d5961b"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="UserGet" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" id="dddb8d31-fc9b-4ad3-a2c7-6d3d2a08acbc"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter><con:name>UserID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="UserGet" method="GET" id="86bc739e-55c1-403f-8b8e-671a71a50685"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" accept="" id="bd30ed89-8660-4c25-9de9-24ddbaace996"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
</con:parameters></con:request></con:method><con:method name="Head" method="HEAD" id="5424c80b-2410-4ccf-b218-953fca62a19e"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" accept="" id="d198ce3e-5a8f-420b-816b-039a88347b62"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
</con:parameters></con:request></con:method><con:method name="Options" method="OPTIONS" id="a7936216-a184-4248-90a6-3b0ec3c9a594"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" accept="" id="7af2a6dc-278e-4e5f-b18f-0808d2067e82"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
</con:parameters></con:request></con:method><con:method name="Put" method="PUT" id="d964b6e3-2a95-4fe9-88da-73a5c7c9320c"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" accept="" id="4ff4e7d3-e01b-49f2-85c1-057d006ccb92"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
</con:parameters></con:request></con:method><con:method name="Post" method="POST" id="43ad5f93-c99c-43f2-9e6e-78ffa509bed7"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" accept="" id="171ff464-e8e8-414e-a096-0dca90d53ec1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
</con:parameters></con:request></con:method><con:method name="Delete" method="DELETE" id="5647073b-7013-48ab-b277-3e1078ed45dd"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" accept="" id="b17021e2-d598-4869-8f5b-79a254cb66a8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
</con:parameters></con:request></con:method></con:resource><con:resource name="UserUpdate" path="rest/${Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" id="4987e7c3-c85c-4cd2-9a1a-f856dbc6bc51"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter><con:name>UserID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="UserUpdate" method="PUT" id="6a470261-bac6-41cd-8a47-f505e28f02de"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="7f8ba311-ef9e-409b-8fc1-1e93ea6bb244"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="UserDelete" path="rest/${Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" id="cbcfbb23-7d33-4316-9687-dd77b7283e75"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter><con:name>UserID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="UserDelete" method="DELETE" id="bf6b949b-c75a-4925-9a83-1d665d93e67e"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" id="4317a0aa-8467-4ed6-b9ff-dce252c62a6c"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Policy_Create" type="rest" id="82d9cb90-27f6-448c-8acc-85de66a6aa54" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="Policy_Create_User" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" id="16f5e50e-05f4-4afc-8202-8f8f3e5b5bb5"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:value>NodeAccountId</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>NodeAccountId</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>NodeUserId</con:name><con:value>NodeUserId</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>NodeUserId</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>PolicyClass</con:name><con:value>PolicyClass</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>PolicyClass</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Policy_Create_User" method="POST" id="75ea3565-ad24-4ef6-a9df-579bdc2884c2"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/06/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:proj="${#Project#coordinatorSchema}">proj:PolicyList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>303</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="dc4ead41-f6a6-40ec-ab5b-30316b56c8d1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:request></con:method></con:resource><con:resource name="Policy_Create_Account" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/Policy/{PolicyClass}" id="f9144b89-8036-43e3-946f-846abd449aca"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:value>NodeAccountId</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>NodeAccountId</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>PolicyClass</con:name><con:value>PolicyClass</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>PolicyClass</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Policy_Create_Account" method="POST" id="fc4e7c8b-614a-4429-bd3b-857d42835992"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="c2ab245f-66de-4a8c-8868-24e357e9f68e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="UserValidationTokenCreate" type="rest" basePath="${#Project#HostName}" definitionUrl="C:\Users\ralluri\Desktop\LatestProjects_Users\Build_4.1\UserValidationTokenCreate_1.wadl" id="6cf0e6b0-9b3c-4aa4-9e2f-5b2c54dcc657" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Users/ralluri/Desktop/LatestProjects_Users/Build_4.1/UserValidationTokenCreate_1.wadl"><con:part><con:url>file:/C:/Users/ralluri/Desktop/LatestProjects_Users/Build_4.1/UserValidationTokenCreate_1.wadl</con:url><con:content><![CDATA[<application xmlns="http://wadl.dev.java.net/2009/02">
  <doc xml:lang="en" title="UserValidationTokenCreate"/>
  <resources base="${#Project#HostName}">
    <resource path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}/VerificationToken/{TokenType}" id="UserValidationTokenCreate">
      <doc xml:lang="en" title="UserValidationTokenCreate"/>
      <param name="AccountID" default="AccountID" type="xs:string" required="true" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <param name="UserID" default="UserID" type="xs:string" required="true" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <param name="TokenType" type="xs:string" required="false" default="" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <method name="POST" id="UserValidationTokenCreate">
        <doc xml:lang="en" title="UserValidationTokenCreate"/>
        <request>
          <representation mediaType="application/xml" element="dece:ErrorList" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </request>
        <response status="404 500">
          <representation mediaType="text/html"/>
        </response>
        <response status="400 401 403">
          <representation mediaType="application/xml" element="sch:ErrorList" xmlns:sch="http://www.decellc.org/schema"/>
        </response>
        <response status="405">
          <representation mediaType="text/plain"/>
        </response>
        <response status="">
          <representation mediaType="application/xml" element="dece:ErrorList" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="404">
          <representation mediaType="text/xml"/>
        </response>
        <response status="200">
          <representation mediaType="application/xml"/>
        </response>
        <response status="0">
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
        </response>
      </method>
      <method name="HEAD" id="HEAD">
        <doc xml:lang="en" title="HEAD"/>
        <request/>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
      </method>
      <method name="PUT" id="PUT">
        <doc xml:lang="en" title="PUT"/>
        <request>
          <representation mediaType="application/xml"/>
        </request>
        <response status="0">
          <representation mediaType=""/>
        </response>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="405">
          <representation mediaType="text/plain"/>
        </response>
      </method>
      <method name="GET" id="GET">
        <doc xml:lang="en" title="GET"/>
        <request/>
      </method>
      <method name="DELETE" id="DELETE">
        <doc xml:lang="en" title="DELETE"/>
        <request/>
        <response status="0">
          <representation mediaType=""/>
        </response>
        <response status="405">
          <representation mediaType="text/plain"/>
        </response>
      </method>
      <method name="OPTIONS" id="OPTIONS">
        <doc xml:lang="en" title="OPTIONS"/>
        <request/>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="0">
          <representation mediaType=""/>
        </response>
        <response status="403">
          <representation mediaType="application/xml" element="coor:ErrorList" xmlns:coor="http://www.decellc.org/schema/2012/03/coordinator"/>
        </response>
        <response status="405">
          <representation mediaType="text/xml" element="dece:ErrorList" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
      </method>
    </resource>
  </resources>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:endpoint>${#Project#Query_HostName}</con:endpoint></con:endpoints><con:resource name="UserValidationTokenCreate" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}/VerificationToken/{TokenType}" id="1cdca786-60ec-4661-86fe-6b63b2c9cae9"><con:settings/><con:parameters><con:parameter required="true"><con:name>AccountID</con:name><con:value>AccountID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>AccountID</con:default></con:parameter><con:parameter required="true"><con:name>UserID</con:name><con:value>UserID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>UserID</con:default></con:parameter><con:parameter><con:name>TokenType</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:method name="UserValidationTokenCreate" method="POST" id="a45071c6-67c4-438d-a473-ef62ebe9e5c4"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>404 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 403</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="1d919c86-bf18-45f1-8094-26107a084fce" mediaType="application/xml"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="HEAD" method="HEAD" id="269bb53f-002b-443b-9787-56f051922dc9"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="83ef019e-3a6d-4279-8e17-cf5669cb8f6c" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="PUT" method="PUT" id="d3ead78b-06c1-4a80-95ab-69528f8172d6"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="cd889be8-94b1-428d-8065-8fd9429ae39c" mediaType="application/xml"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="GET" method="GET" id="18274644-b5b3-4ba4-8c0e-ab60f33eb328"><con:settings/><con:parameters/><con:request name="Request 1" id="5d45a22c-8760-43e5-bdda-2d2d0d558b42" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="DELETE" method="DELETE" id="105a7433-2265-4eb8-b40d-ea5fb062c419"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="6458a416-4e65-4255-a098-a70a091bc584" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="OPTIONS" method="OPTIONS" id="1c02101f-8dc5-4ad8-a32a-843ceb214183"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/03/coordinator">coor:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="659f3acf-1ac5-4286-b28d-1c8d18cde47a" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite name="CommonTestSteps" disabled="true" id="6deffdf6-8888-4ac0-bba9-62ac3f5a0a8b"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AccountCreate API" searchProperties="true" id="479eed55-56cf-4644-909c-ecc3bc6c08e6"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="abd98d31-b87f-42e8-9463-e058a9cee1c1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


tC.setPropertyValue("ResponseType","SUCCESS");
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);

tC.setPropertyValue("AccountName",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="f64660b8-2eb9-49e5-8d7e-cda5e83f5f68"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeid"));

tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserCreate"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));

tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("GivenName",callTC.getPropertyValue("GivenName"));
tC.setPropertyValue("SurName",callTC.getPropertyValue("SurName"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Generate AccountName" id="efa477bd-4128-4b38-acb4-3621fa0edd65"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def today= System.currentTimeMillis();

tC.setPropertyValue("AccountName","UVTC_API_201502_"+today);
</script></con:config></con:testStep><con:testStep type="groovy" name="Set TOU Resource"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

String country = context.expand( '${#Project#Country}' );
def tOUUrl = context.expand( '${#Project#TOUUrl}' )

def touForCountry = "TOU_"+country
def consent_Version =  tP.getPropertyValue(touForCountry);

tP.setPropertyValue("policy_TOU",'https://'+ tOUUrl + '/Consent/Text/' + country + '/urn:dece:type:policy:TermsOfUse:' + consent_Version + '/html');

log.info "Policy TOU from Project level property " + tP.getPropertyValue("policy_TOU");</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="487b86f2-916b-4ac4-85f2-b438271ab942"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("Account_Create");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="Account_Create" id="9b047549-7177-4eb3-b7db-7821f715db01"><con:settings/><con:config service="Account" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account" methodName="AccountCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Account_Create" mediaType="application/xml;charset=UTF-8" postQueryString="false" id="ca4ff0a9-00f8-41e3-871a-d799b7db932c" accept="" sslKeystore="RET_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml;charset=UTF-8" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@remove_empty_content">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="${#Project#coordinatorSchema}"> 
	<DisplayName>${#TestCase#AccountName}</DisplayName>
	<Country>${#Project#Country}</Country>
	<UserList>
		<User UserClass="urn:dece:role:user:class:full" xmlns="${#Project#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
			<Name>
				<GivenName>${#TestCase#GivenName}</GivenName>
				<SurName>surname</SurName>
			</Name>	
			<ContactInfo>
				<PrimaryEmail>			
					<Value>${#Project#PrimaryEmail}</Value>
					<ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
				</PrimaryEmail>
			</ContactInfo>
			<Credentials> 
				<Username>${#TestCase#UserName}</Username>	
				<Password>${#Project#Password}</Password>
			</Credentials>
<PolicyList>
		<Policy>
			<PolicyClass>urn:dece:type:policy:TermsOfUse</PolicyClass>
			<Resource>${#Project#Policy_TOU}</Resource>
			<PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
		</Policy>
		<Policy>
			<PolicyClass>urn:dece:type:policy:ManageUserConsent</PolicyClass>
			<RequestingEntity>urn:dece:org:org:dece:${#TestCase#nodeid}</RequestingEntity>
			<PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
		</Policy>
	</PolicyList>
		</User>
	</UserList>
</Account>]]></con:request><con:originalUri>https://qa.p.uvvutest.biz/rest/1/11/Account</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="947149be-7bb0-4a3f-9591-1927886d48ad"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="80059cb1-1120-42ec-abba-9049b0d1725d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('Account_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate Response" id="04617aa3-e058-434d-b7f6-76e1732b3856"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def url       = context.expand( '${#Project#Provision_HostName}' );
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');


boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";

String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
		
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The supplied country code is invalid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code cannot be null.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "API call not authorized";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:UserNotActive";
	errorReason = "User is not active";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;	
	
}
// HTTP header status

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def hostAddress = b.getHost();
     log.info " hostAddress....     " + hostAddress;   
              
                if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
                {
                                tP.setPropertyValue("targetSystem","LP3ST");
                }
                else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
                {
                                tP.setPropertyValue("targetSystem","LP3CH");
                }
	def urlStr = b.getPath();

	if (tP.getPropertyValue("versionMinor") != tP.getPropertyValue("versionURLEncode"))
	{		
		assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");		
	} else {
		assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");
	}

	urlStr = URLDecoder.decode(urlStr);
	def arrayString = urlStr.split("Account/");
      arrayString= arrayString[1].split("/User/");
      log.info "Node_User_ID=="+arrayString[1]
      log.info "Node_Account_ID=="+arrayString[0]

       int lastColon = arrayString[1].lastIndexOf(':');
       accountid     = arrayString[0].substring(lastColon+4);
       userid     = arrayString[1].substring(lastColon +1);
       def useridfull = arrayString[1];    
       def accountidfull = arrayString[0];       
	                         
		tC.setPropertyValue("NODE_ACCOUNT_ID",accountid);
		tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",accountidfull);

		tC.setPropertyValue("NODE_USER_ID",userid);
		tC.setPropertyValue("NODE_USER_ID_FULL",useridfull);
	
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}




//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:testStep type="groovy" name="Return the NodeAccountId to the Calling Test Case" id="9f0ecc3c-b417-4dff-a62f-27336d819d23"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
callTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
callTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID"));
callTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
callTC.setPropertyValue("UserName",tC.getPropertyValue("UserName"));
callTC.setPropertyValue("UserName",tC.getPropertyValue("UserName"));
</script></con:config></con:testStep><con:properties><con:property><con:name>AccountName</con:name><con:value>UVTC_API_201502_1433878499698</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa1.q.uvvu.com/rest/2015/02/Account/urn:dece:accountid:org:dece:181BB82A75828D03E0533E991F0ABFA5/User/urn:dece:userid:org:dece:181BB82A75838D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">RET</con:value></con:property><con:property><con:name>ResponseType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>Account_Create_Firsrt_User_Create_STS_Policies</con:value></con:property><con:property><con:name>sName</con:name><con:value>First_User_Create</con:value></con:property><con:property><con:name>AccountCountry</con:name><con:value>NZ</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">181BB82A75828D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:181BB82A75828D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>181BB82A75838D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:181BB82A75838D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName</con:name><con:value>uvtc_firstuser_201502_20150610_010459</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>uvtc_firstuser_201502_20150610_010459</con:value></con:property><con:property><con:name>SurName</con:name><con:value>uvtc_firstuser_201502_20150610_010459</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>b8ba87db-df08-4f36-8c88-c580bb3ec25b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9ce61892-9d8a-4055-b161-e19938292410</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c50a4409-da80-4892-a2c3-07a22e674bd0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd13479c-f25a-495b-8c94-31e5557a93a8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AccountCreate API Old" searchProperties="true" id="11a715f3-fabc-4fee-900a-f24ebd6d9c5a"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="9ce61892-9d8a-4055-b161-e19938292410"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("accountname",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);

tC.setPropertyValue("ResponseType","SUCCESS");

tP.setPropertyValue("Request_XML",tP.getPropertyValue("Request_XML_Buffer"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="4dc8aec7-2e8e-4eef-9a55-46dedaad9403"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname);
def callTS = tP.getTestSuiteByName(callTSname);

tP.setPropertyValue("Country",callTS.getPropertyValue("Country"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));

def b = tC.getPropertyValue("nodeid");

log.info b;</script></con:config></con:testStep><con:testStep type="groovy" name="Generate AccountName" id="b8ba87db-df08-4f36-8c88-c580bb3ec25b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def today= new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("AccountName","accname_"+today);</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="1671024d-d72f-4387-92d2-ba0ce6079396"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 
import soapUIUtils.soapUIUtils;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
//def certPath = groovyUtils.projectPath

//Set fileKeyStorePath value 
//log.info "certPath: "+certPath;
//tP.setPropertyValue("certPath",""+certPath);

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")

myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("Account_Create");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="Account_Create" id="63a3307b-6106-4786-9cd4-e176efd0bf16"><con:settings/><con:config service="Account" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account" methodName="AccountCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Account_Create" mediaType="application/xml" postQueryString="false" id="ca4ff0a9-00f8-41e3-871a-d799b7db932c" accept="" sslKeystore="RET_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@remove_empty_content">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="${#Project#coordinatorSchema}"> 
<DisplayName>${#TestCase#AccountName}</DisplayName>
<Country>${#Project#Country}</Country>
</Account>]]></con:request><con:originalUri>https://qa1.p.uvvu.com/rest/2015/02/Account</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="947149be-7bb0-4a3f-9591-1927886d48ad"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="23303af8-41d1-41dc-8fef-fb959f9c4a2f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('Account_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 			
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);



tC.setPropertyValue("httpLocation", contentLocation);

</script></con:config></con:testStep><con:testStep type="groovy" name="Validate Response" id="bd82d430-2a93-49e7-b2a1-7b84f0809636"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def url       = context.expand( '${#Project#Provision_HostName}' );
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');


boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "Keep-Alive";

String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
		
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
		errorReason = "The supplied country code is invalid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
		errorReason = "The country code cannot be null.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
		errorReason = "API call not authorized";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserNotActive";
		errorReason = "User is not active";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
		errorReason = "Requesting User ID Not Specified";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;	
	
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
/*
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
*/
//Location Header

if (httpLocationHeader) {
      assert context.expand( '${#TestCase#httpLocation}') != null;


      def a = context.expand( '${#TestCase#httpLocation}');
      def b = a.toURL();
      def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

      if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO"){
                                
		assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
                 
          int lastColon = urlStr.lastIndexOf(':');
	     int lastSlash = urlStr.lastIndexOf('/');
	     accountid     = urlStr.substring(lastColon + 1);
	     def node_Account = urlStr.substring(lastSlash + 1);

          tC.setPropertyValue("NODE_ACCOUNT_ID",accountid);
                    
          tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",node_Account);                        
          tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",node_Account);                                                   
          
      } else {
            assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*");
            int lastColon = urlStr.lastIndexOf('%3A');
            int lastSlash = urlStr.lastIndexOf('/');
            accountid     = urlStr.substring(lastColon + 3);
            def node_Account = urlStr.substring(lastSlash + 1);

            tC.setPropertyValue("NODE_ACCOUNT_ID",accountid);
            
            tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",node_Account);
		  tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",node_Account);
      }

} else {
      	assert context.expand( '${#TestCase#httpLocation}') == "";
}





//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:testStep type="groovy" name="Return the NodeAccountId to the Calling Test Case" id="35d38137-3ff3-47da-9602-9bed11652bbf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("accountname",tC.getPropertyValue("accountname"));
callTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
callTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>httpConnect</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa1.q.uvvu.com/rest/2015/02/Account/urn:dece:accountid:org:dece:16ACF97A7D4418ACE05305991F0A9199</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">RET</con:value></con:property><con:property><con:name>ResponseType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>Account_Create_Firsrt_User_Create_STS_Policies</con:value></con:property><con:property><con:name>sName</con:name><con:value>First_User_Create</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">16ACF97A7D4418ACE05305991F0A9199</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>accountname</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">accname_20150522_074127</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:16ACF97A7D4418ACE05305991F0A9199</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:16ACF97A7D4418ACE05305991F0A9199</con:value></con:property><con:property><con:name>Consent_Version</con:name><con:value>20121024</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>b8ba87db-df08-4f36-8c88-c580bb3ec25b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9ce61892-9d8a-4055-b161-e19938292410</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c50a4409-da80-4892-a2c3-07a22e674bd0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd13479c-f25a-495b-8c94-31e5557a93a8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="User_DB_Validations" searchProperties="true" id="1cc8c7f1-8717-461e-801a-f31149324c32"><con:settings/><con:testStep type="groovy" name="Establish_TestCase_Properties" id="43c5dbf9-3574-4373-9d3f-f1b49a7247c5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("userType",null);
tC.setPropertyValue("Privilege",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("GivenName",null);
tC.setPropertyValue("SurName",null);
tC.setPropertyValue("PrimaryEmail",null);
tC.setPropertyValue("Language1",null);
tC.setPropertyValue("DisplayImageURL",null);
tC.setPropertyValue("AlternateEmail",null);
tC.setPropertyValue("PostalAddress",null);
tC.setPropertyValue("PostalCode",null);
tC.setPropertyValue("Locality",null);
tC.setPropertyValue("StateOrProvince",null);
tC.setPropertyValue("Country",null);
tC.setPropertyValue("TelephoneNumber",null);
tC.setPropertyValue("MobileTelephoneNumber",null);
tC.setPropertyValue("MeetsAgeOfMajority",null);
tC.setPropertyValue("DateOfBirth",null);
tC.setPropertyValue("urnUser",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("QuestionID1",null);
tC.setPropertyValue("QuestionResponse1",null);
tC.setPropertyValue("QuestionID2",null);
tC.setPropertyValue("QuestionResponse2",null);
tC.setPropertyValue("ResourceStatus",null);

tC.setPropertyValue("ResponseType",null);
tC.setPropertyValue("userType",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("NODE_USER_ID_FULL",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("user_oid",null);
tC.setPropertyValue("account_oid",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract_Required_Properties_from_Calling_TestCase" id="9597cca9-99cf-4605-8850-f3da92faacef"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("userType",callTC.getPropertyValue("userType"));
tC.setPropertyValue("GivenName",callTC.getPropertyValue("GivenName"));
tC.setPropertyValue("SurName",callTC.getPropertyValue("SurName"));
tC.setPropertyValue("PrimaryEmail",callTC.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("Language1",callTC.getPropertyValue("Language1"));
tC.setPropertyValue("DisplayImageURL",callTC.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",callTC.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",callTC.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",callTC.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",callTC.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",callTC.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",callTC.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",callTC.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",callTC.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("DateOfBirth",tP.getPropertyValue("DateOfBirth"));
tC.setPropertyValue("urnUser",callTC.getPropertyValue("urnUser"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",callTC.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",callTC.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",callTC.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",callTC.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",callTC.getPropertyValue("ResourceStatus"));

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("user_oid",callTC.getPropertyValue("user_oid"));
tC.setPropertyValue("account_oid",callTC.getPropertyValue("account_oid"));
tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserUpdate"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify_ACCOUNT_USER_Table" id="abb86f1f-38d1-4449-95aa-650ca561178f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("IsMinor","");

def dbHost = context.expand( '${#Project#targetSystem}' );
def userID = context.expand( '${#TestCase#user_oid}' );

def BirthDate = null;
def myXML1 = null;
def finalbday = null;

a = new dbUtils.dbUtils(log,dbHost);
b = new dbUtils.dbUser(log,dbHost);

Result = b.userGetRow(userID);

myXML1 = new XmlSlurper().parseText(Result);

log.info "Actual Rows ==  " + myXML1.ResultSet.Row.size();
		
 if(context.expand( '${#TestCase#ResponseType}')=='SUCCESS')
     {
        assert  myXML1.ResultSet.Row.size() == 1;
       	
       // assert myXML1.ResultSet.Row.STATUS == 'pending';
        assert myXML1.ResultSet.Row.PRIVILEGE == context.expand( '${#TestCase#Privilege}' );
        assert myXML1.ResultSet.Row.USERNAME == context.expand( '${#TestCase#UserName}' ) ;
        assert myXML1.ResultSet.Row.GIVEN_NAME == context.expand( '${#TestCase#GivenName}' ) ;
        assert myXML1.ResultSet.Row.SURNAME == context.expand( '${#TestCase#SurName}' ) ;
        assert myXML1.ResultSet.Row.PRIMARY_EMAIL == context.expand( '${#TestCase#PrimaryEmail}' ) ;
        assert myXML1.ResultSet.Row.TELEPHONE == context.expand( '${#TestCase#TelephoneNumber}' ) ;
        assert myXML1.ResultSet.Row.MOBILE_TELEPHONE == context.expand( '${#TestCase#MobileTelephoneNumber}' ) ;

        if(context.expand( '${#TestCase#DateOfBirth}' )== context.expand( '${#Project#CHILD_DOB_XML}' ))
        {

        	 log.info "I am CHILD";
        	 
           BirthDate = context.expand( '${#Project#CHILD_DOB_XML}' );
           assert myXML1.ResultSet.Row.AGE_CLASS == 'CHILD';

           tC.setPropertyValue("IsMinor","true");
           
         //  assert myXML1.ResultSet.Row.EMAIL_CLOCK_START_TIME == 'null' ;
         //  assert myXML1.ResultSet.Row.EMAIL_CLOCK_END_TIME == 'null' ;        
        } 
       
        else
        if(context.expand( '${#TestCase#DateOfBirth}' )== context.expand( '${#Project#YOUTH_DOB_XML}' ))
        {
        	log.info "I am YOUTH";
        	
          BirthDate = context.expand( '${#Project#YOUTH_DOB_XML}' );
          assert myXML1.ResultSet.Row.AGE_CLASS == 'YOUTH';

          tC.setPropertyValue("IsMinor","true");

                    
        //  assert myXML1.ResultSet.Row.EMAIL_CLOCK_START_TIME == 'null' ;
        //  assert myXML1.ResultSet.Row.EMAIL_CLOCK_END_TIME == 'null' ;

         } 
        else
        if(context.expand( '${#TestCase#DateOfBirth}' )== context.expand( '${#Project#ADULT_DOB_XML}' ))
        {

        	log.info "I am ADULT";
        	
          BirthDate = context.expand( '${#Project#ADULT_DOB_XML}' );
          
          assert myXML1.ResultSet.Row.AGE_CLASS == 'ADULT';

          tC.setPropertyValue("IsMinor","false");
          
        /* if(context.expand( '${#TestCase#attested}' ) == 'true')
          {
            assert myXML1.ResultSet.Row.EMAIL_CLOCK_START_TIME == 'null' ;
            assert myXML1.ResultSet.Row.EMAIL_CLOCK_END_TIME == 'null' ;
          }
          else
          {
            assert myXML1.ResultSet.Row.EMAIL_CLOCK_START_TIME != 'null' ;
            assert myXML1.ResultSet.Row.EMAIL_CLOCK_END_TIME != 'null' ;	
          }
          */ 
        } 

          // Retrieving Birth Date in proper format
 /******************************************************************************************************/
          
         bdaystring = myXML1.ResultSet.Row.BIRTH_DATE.toString();

         int lastspace = bdaystring.lastIndexOf(' ');

         finalbday = bdaystring.substring(0,lastspace);
          
         log.info "Birth Day:  " + finalbday;
       
        assert finalbday == BirthDate;

/******************************************************************************************************/

        assert myXML1.ResultSet.Row.COUNTRY == context.expand( '${#Project#GeoProfile}' );

        if(context.expand( '${#TestCase#attested}' ) == 'true')
        {
          assert myXML1.ResultSet.Row.PRIMARYEMAIL_VERIFICATION_DATE != null ;
          assert myXML1.ResultSet.Row.PRIMARYEMAIL_VERIFICATION_ENTY != null ;
          assert myXML1.ResultSet.Row.PRIMARYEMAIL_VERIFICATION_ID != null ;
        }  

      log.info "User Validations Passed";
               
   }// end if for success response check
  else
  {
  	assert  myXML1.ResultSet.Row.size() == 0;
  	log.info "No Validation Required";
  }
  

   
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify_NODE_USER_Table" id="c0be1fc5-2578-47b4-9cdb-492016e942e3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def dbHost = context.expand( '${#Project#targetSystem}' );
def userID = context.expand( '${#TestCase#user_oid}' );
def nodeid =context.expand('${#TestCase#nodeid}' );

a = new dbUtils.dbUtils(log,dbHost);
b = new dbUtils.dbUser(log,dbHost);
c=  new dbUtils.dbNode(log,dbHost);
//log.info b.accountGetfromNodeAccountId(accID);

String sql = """select to_char(rawtohex(NODE_OID)) NODE_OID from NODE_USER where USER_OID = '$userID'""";

log.info sql;

results = a.SelectFromDB(sql,dbHost);

log.info results;

/*
*  If zero length, no need to continue;
*/
 assert results.length() > 0;

  def myXML = new XmlSlurper().parseText(results);
  
  log.info "myXML.ResultSet.Row.size() is [" + myXML.ResultSet.Row.size() + "]";


if (context.expand( '${#TestCase#ResponseType}' ) == 'SUCCESS')
{
	assert myXML.ResultSet.Row.size() > 0;


	if(nodeid=="dece:cs"|| nodeid=="coord:cs" || nodeid=="portal" || nodeid=="portal:cs")
     {  
       assert myXML.ResultSet.Row.size() == 4;  
       //assert myXML.ResultSet.Row[0].NODE_OID == context.expand( '${#Project#Node_OID}' ); 
       log.info "DECE Node User Validation Passed";     
     }
     else
     { 
       assert myXML.ResultSet.Row.size() == 5;
      // assert myXML.ResultSet.Row[0].NODE_OID == context.expand( '${#Project#Node_OID}' );    
      // assert myXML.ResultSet.Row[1].NODE_OID == "10"; 
       log.info "3rd Party Node User Validation Passed";    
     }
	
}
else
{
	assert myXML.ResultSet.Row.size() == 0;
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify_USER_LEGAL_GUARDIAN_Table" id="5a5908f2-bbf4-4893-9a2b-ccd737924a0e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

if(context.expand( '${#TestCase#IsMinor}' )=="true")
{
def dbHost = context.expand( '${#Project#targetSystem}' );
def userID = context.expand( '${#TestCase#user_oid}' );

  a = new dbUtils.dbUtils(log,dbHost);
  b = new dbUtils.dbUser(log,dbHost);

  String sql = """select ATTESTATION_STATUS from USER_LEGAL_GUARDIAN where USER_OID ='$userID'""";
  results = a.SelectFromDB(sql,dbHost);

  /*
  *  If zero length, no need to continue;
  */
   assert results.length() > 0;

   def myXML = new XmlSlurper().parseText(results);
  
   log.info "myXML.ResultSet.Row.size() is [" + myXML.ResultSet.Row.size() + "]";

   assert myXML.ResultSet.Row.size() > 0;
	
   assert myXML.ResultSet.Row[0].ATTESTATION_STATUS == "pending";  

   log.info "Legal Guardian Validation Passed";	
}
else
{
	log.info "No Legal Guardian Validation Required";
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify_USER_Policies" id="49517fda-9cdf-4d09-80d5-39fc20518bd4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

if(context.expand( '${#TestCase#IsMinor}' )=="true")
{
def dbHost = context.expand( '${#Project#targetSystem}' );
def userID = context.expand( '${#TestCase#user_oid}' );

  a = new dbUtils.dbUtils(log,dbHost);
  b = new dbUtils.dbUser(log,dbHost);

  String sql = """select POLICY_CLASS,STATUS from POLICY P, POLICY_RELATIONSHIP PR where PR.POLICY_ACTOR = '"""+b.userGetfromNodeUserId(userID)+"""'
  and P.POLICY_OID = PR.POLICY_OID""";

  results = a.SelectFromDB(sql,dbHost);

  /*
  *  If zero length, no need to continue;
  */
   assert results.length() > 0;

   def myXML = new XmlSlurper().parseText(results);
  
   log.info "myXML.ResultSet.Row.size() is [" + myXML.ResultSet.Row.size() + "]";

   assert myXML.ResultSet.Row.size() > 0;
	
   assert myXML.ResultSet.Row[0].ATTESTATION_STATUS == "pending";  

   log.info "Legal Guardian Validation Passed";	
}
else
{
	log.info "No Legal Guardian Validation Required";
}
</script></con:config></con:testStep><con:properties><con:property><con:name>IsMinor</con:name><con:value/></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00004_UserUpdate_FUNC_CLG_Update_CHILD_DOB_TO_YOUTH_AGE</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Update_GeoProfile</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>Username</con:name><con:value>seconduser20130813_120746</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>seconduser20130813_120746</con:value></con:property><con:property><con:name>SurName</con:name><con:value>seconduser20130813_120746</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-08-17</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseType</con:name><con:value>DOB_NOT_EDITABLE</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE3CF68DF2A8CD783E0401F0A07994C97</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E3CF68DF2A8CD783E0401F0A07994C97</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>user_oid1</con:name><con:value>E2A349A2ABBCCB1DE0401F0A059926E1</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E3CF68DF2A8DD783E0401F0A07994C97</con:value></con:property><con:property><con:name>user_oid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E3CF692D5BE44697E0401F0A05993AD3</con:value></con:property><con:property><con:name>attested</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="FirstUserCreate API" searchProperties="true" id="0559683a-89a8-4543-9672-06581fc3aece"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="d582db6c-dcd9-48dc-aeb8-6739a143ca7b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("userType",null);
tC.setPropertyValue("Privilege",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("GivenName",null);
tC.setPropertyValue("SurName",null);
tC.setPropertyValue("PrimaryEmail",null);
tC.setPropertyValue("Language1",null);
tC.setPropertyValue("DisplayImageURL",null);
tC.setPropertyValue("AlternateEmail",null);
tC.setPropertyValue("PostalAddress",null);
tC.setPropertyValue("PostalCode",null);
tC.setPropertyValue("Locality",null);
tC.setPropertyValue("StateOrProvince",null);
tC.setPropertyValue("Country",null);
tC.setPropertyValue("TelephoneNumber",null);
tC.setPropertyValue("MobileTelephoneNumber",null);
tC.setPropertyValue("MeetsAgeOfMajority",null);
tC.setPropertyValue("DateOfBirth",null);
tC.setPropertyValue("urnUser",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("QuestionID1",null);
tC.setPropertyValue("QuestionResponse1",null);
tC.setPropertyValue("QuestionID2",null);
tC.setPropertyValue("QuestionResponse2",null);
tC.setPropertyValue("ResourceStatus",null);

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_USER_ID_FULL",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("user_oid1",null);
tC.setPropertyValue("account_oid",null);

tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("ResponseType",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="1ccb5a03-82ab-4a0b-98d6-d113aa76c42e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserCreate"));

tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("userType",callTC.getPropertyValue("userType"));
tC.setPropertyValue("GivenName",callTC.getPropertyValue("GivenName"));
tC.setPropertyValue("SurName",callTC.getPropertyValue("SurName"));
tC.setPropertyValue("PrimaryEmail",callTC.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("Language1",callTC.getPropertyValue("Language1"));
tC.setPropertyValue("DisplayImageURL",callTC.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",callTC.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",callTC.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",callTC.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",callTC.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",callTC.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",callTC.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",callTC.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",callTC.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("urnUser",callTC.getPropertyValue("urnUser"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",callTC.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",callTC.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",callTC.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",callTC.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",callTC.getPropertyValue("ResourceStatus"));

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("user_oid1",callTC.getPropertyValue("user_oid"));
tC.setPropertyValue("account_oid",callTC.getPropertyValue("account_oid"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Setting constants based on Geo Profile" id="b4e753b4-7766-4d87-8fc9-33de18c567ce"><con:settings/><con:config><script>import java.text.SimpleDateFormat;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/* Setting constants based on Geo Profile*/

if(tP.getPropertyValue("Country")=="US")
{
  tP.setPropertyValue("GeoProfile","US");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","13");
  tP.setPropertyValue("CHILD_MAX_AGE","12");
}
else
if(tP.getPropertyValue("Country")=="CA")
{
  tP.setPropertyValue("GeoProfile","CA");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","13");
  tP.setPropertyValue("CHILD_MAX_AGE","12");
}
else
if(tP.getPropertyValue("Country")=="GB")
{
  tP.setPropertyValue("GeoProfile","GB");          
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
else
if(tP.getPropertyValue("Country")=="AU")
{
  tP.setPropertyValue("GeoProfile","AU");          
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
  else
if(tP.getPropertyValue("Country")=="NZ")
{
  tP.setPropertyValue("GeoProfile","NZ");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
  else
if(tP.getPropertyValue("Country")=="IE")
{
  tP.setPropertyValue("GeoProfile","IE");             
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
else
if(tP.getPropertyValue("Country")=="AT")
{
  tP.setPropertyValue("GeoProfile","AT");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","14");
  tP.setPropertyValue("CHILD_MAX_AGE","13");
}
else
if(tP.getPropertyValue("Country")=="DE")
{
  tP.setPropertyValue("GeoProfile","DE");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","14");
  tP.setPropertyValue("CHILD_MAX_AGE","13");
}
  else
if(tP.getPropertyValue("Country")=="CH")
{
  tP.setPropertyValue("GeoProfile","CH");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
  else
if(tP.getPropertyValue("Country")=="FR")
{
  tP.setPropertyValue("GeoProfile","FR");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("CHILD_MAX_AGE","17");
}

	def userType = tC.getPropertyValue("userType")
	log.info "userType: "+userType;
	
	switch(userType){
	
	case "ADULT":
	
	Date dob = (new Date());
	dob = dob - ((tP.getPropertyValue("ADULT_MIN_AGE").toInteger()+1)*365);
	log.info "Adult DateOfBirth: "+dob.format('yyyy-MM-dd');
	tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
	tC.setPropertyValue("ADULT_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "YOUTH":
	
	Date dob = (new Date());
	dob = dob - ((tP.getPropertyValue("YOUTH_MIN_AGE").toInteger()+1)*365);
	log.info "YOUTH DateOfBirth: "+dob.format('yyyy-MM-dd');
	tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
	tC.setPropertyValue("YOUTH_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "CHILD":
	
	Date dob = (new Date());
	dob = dob - ((tP.getPropertyValue("CHILD_MAX_AGE").toInteger()-1)*365);
	log.info "CHILD DateOfBirth: "+dob.format('yyyy-MM-dd');
	tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
	tC.setPropertyValue("CHILD_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "ADULTPlus":
	
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, -1);
	def dob = sdf.format(calendar.getTime());
	log.info "AdultPlus DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	tC.setPropertyValue("ADULT_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "ADULTMinus":
	
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear1 = today.get(Calendar.YEAR)- tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear1-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, +1);
	def dob = sdf.format(calendar.getTime());
	log.info "ADULTMinus DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	tC.setPropertyValue("YOUTH_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "YOUTHPlus":
		
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, -1);
	def dob = sdf.format(calendar.getTime());
	log.info "YOUTHPlus DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob);
	tC.setPropertyValue("YOUTH_DOB_XML",dob.format('yyyy-MM-dd')); 
	break;

	case "YOUTHMinus":
   	
   	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, +1);
	def dob = sdf.format(calendar.getTime());
	log.info "YOUTHMinus DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	tC.setPropertyValue("CHILD_DOB_XML",dob.format('yyyy-MM-dd')); 
	break;

	case "ADULTToday":
	 
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, 0);
	def dob = sdf.format(calendar.getTime());
	log.info "ADULTToday DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	tC.setPropertyValue("ADULT_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "YOUTHToday":

	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear1 = today.get(Calendar.YEAR)- tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear1-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, 0);
	def dob = sdf.format(calendar.getTime());
	log.info "YOUTHToday DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	tC.setPropertyValue("YOUTH_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	default:
	log.info "userType is not matched!!"
	break;

	}

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="a961e1d1-6afc-401a-a431-2fa4d13c7282"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("User_Create");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="User_Create" id="1ab2b759-e404-4606-928e-6547f8a194a4"><con:settings/><con:config service="FirstUserCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" methodName="FirstUserCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User_Create" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="RET_concat.pem" id="5b03b964-c6b6-476e-9a1a-03cf53c05d40"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request>${#Project#Request_XML}</con:request><con:originalUri>https://qa1.p.uvvu.com/rest/2015/02/Account/urn:dece:accountid:org:dece:16ACF97A7BB418ACE05305991F0A9199/User</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1" id="dc7939c7-4e38-4936-ab5e-97a276c8b7cf"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="9a2735bd-9e06-45ac-a022-26bb0cc52d8c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('User_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 			
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);



tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="5c4445c6-ff35-4043-93a3-4a216f729ec0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
def primaryEmail = context.expand( '${#TestCase#PrimaryEmail}');
//def nodetype      = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "Keep-Alive";

String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/

if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
		expectHTTPconnection = "close";
	break;

	case "INVALID_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
		errorReason = "The supplied country code is invalid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
		expectHTTPconnection = "close";
	break;

	case "NULL_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
		errorReason = "The country code cannot be null.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
		expectHTTPconnection = "close";
	break;
	
	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
		errorReason = "API call not authorized";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserNotActive";
		errorReason = "User is not active";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
		errorReason = "Requesting User ID Not Specified";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
		expectHTTPconnection = "close";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

		case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The user does not have permission to create a full-access user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The user does not have permission to create a user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:FirstUserMustBe18OrOlder";
		errorReason = "First User must be 18 years or older";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBe18OrOlder";
	break;


	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The first user in a household account must be a full-access user.";
		errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;

	case "INVALID_PASSWORD":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorReason = "The password is not valid.";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPasswordNotValid";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPasswordNotValid";
		expectHTTPconnection = "close";
	break;

	case "INVALID_PRIMARY_EMAIL":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPrimaryEmailNotValid";
		errorReason = "The primary email address is not valid. - " + primaryEmail;
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPrimaryEmailNotValid";
		expectHTTPconnection = "close";
	break;
	
}

tC.setPropertyValue("expectHTTPstatus",expectHTTPstatus);


// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
/*
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
*/
//Location Header

if (httpLocationHeader) {
	 assert context.expand( '${#TestCase#httpLocation}') != null;

      def a = context.expand( '${#TestCase#httpLocation}');
      def b = a.toURL();
      def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

      if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO"){
                                
         assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
         
         int lastColon = urlStr.lastIndexOf(':');
         int lastSlash = urlStr.lastIndexOf('/');
         userid     = urlStr.substring(lastColon + 1);
         def node_User = urlStr.substring(lastSlash + 1);
                                           
         tC.setPropertyValue("NODE_USER_ID",userid);

         tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
         tC.setPropertyValue("NODE_USER_ID_FULL1",node_User);
      } else {

         assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");
         int lastColon = urlStr.lastIndexOf('%3A');
         int lastSlash = urlStr.lastIndexOf('/');
         userid     = urlStr.substring(lastColon + 3);
         def node_User = urlStr.substring(lastSlash + 1);
                                
         tC.setPropertyValue("NODE_USER_ID",userid);

        tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
         tC.setPropertyValue("NODE_USER_ID_FULL1",node_User);
       }
      }
                                

else {
                                
       	assert context.expand( '${#TestCase#httpLocation}') == "";
}





//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		log.info errorLink;
		log.info myXML.Error.ErrorLink.toString()
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract_Account_OID_and_User_OID" id="a9ef8808-d79a-4a4e-9d45-2735c979786a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def dbUser;

def expectHTTPstatus = tC.getPropertyValue("expectHTTPstatus");

if (expectHTTPstatus == "HTTP/1.1 201 Created")
     {  	
  		def dBHost = context.expand( '${#Project#targetsystem}' )
		
		try          {
		                dbUser = new dbUtils.dbUser(log,dBHost);
		                }
		catch(Throwable e) {
		                log.info "ERROR - dbUtils.dbUser - $e";
		                assert 1 == 2;
		                }
		finally {
		         try {
		                 String u = dbUser.userGetUserOID(tC.getPropertyValue("UserName").toLowerCase());
		                 String a = dbUser.userGetAccountOIDbyUsername(tC.getPropertyValue("UserName").toLowerCase());
		
		                 assert u.length() > 0;
		                 assert a.length() > 0;
		                 
		                 tC.setPropertyValue("user_oid", u);
		                 tC.setPropertyValue("account_oid", a);
		                }
		          catch(Throwable e) {
		                 log.info "ERROR - dbUtils.userGetUserOID - $e";
		                 assert 1 == 2;                     
		     		     }
				}
     }
     else
     {
     	log.info ("Can not retreive User_OID for a negative scenario");
     }
     

</script></con:config></con:testStep><con:testStep type="groovy" name="Return the Username and NodeUserId to the Calling Test Case" id="8d03f277-e3d8-4e06-a9fa-caced0727f8f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID"));
callTC.setPropertyValue("NODE_USER_ID1",tC.getPropertyValue("NODE_USER_ID"));
callTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
callTC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL1"));
callTC.setPropertyValue("UserName",tC.getPropertyValue("UserName"));
callTC.setPropertyValue("user_oid1",tC.getPropertyValue("user_oid"));
callTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));
callTC.setPropertyValue("DateOfBirth",tC.getPropertyValue("DateOfBirth"));</script></con:config></con:testStep><con:properties><con:property><con:name>AlternateEmail</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value/></con:property><con:property><con:name>coordinatorSchema</con:name><con:value>${#Project#coordinatorSchema}</con:value></con:property><con:property><con:name>Country</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1996-05-26</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>FirstFullUsername</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">uvtc_firstuser20150522_074128</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa1.q.uvvu.com/rest/2015/02/Account/urn:dece:accountid:org:dece:16ACF97A7D4418ACE05305991F0A9199/User/urn:dece:userid:org:dece:16ACF97A7D5018ACE05305991F0A9199</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>Language1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">en</con:value></con:property><con:property><con:name>Locality</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">16ACF97A7D4418ACE05305991F0A9199</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:16ACF97A7D4418ACE05305991F0A9199</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">16ACF97A7D5018ACE05305991F0A9199</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:16ACF97A7D5018ACE05305991F0A9199</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:16ACF97A7D5018ACE05305991F0A9199</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">full</con:value></con:property><con:property><con:name>QuestionID</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1650</con:value></con:property><con:property><con:name>QuestionResponse</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ResponseType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>sName</con:name><con:value>First_User_Create</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">uvtc_firstuser20150522_074128</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">+1.703598741</con:value></con:property><con:property><con:name>tName</con:name><con:value>Account_Create_Firsrt_User_Create_STS_Policies</con:value></con:property><con:property><con:name>urnUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>UserName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">uvtc_firstuser20150522_074128</con:value></con:property><con:property><con:name>userType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ADULT</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>user_oid</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>16ACF97A7D4518ACE05305991F0A9199</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectHTTPstatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1996-05-26</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>3d78db1c-105b-43a0-b406-6bb0f690c833</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662fb201-c4e7-401c-b10a-548ea13f5020</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserCreate API" searchProperties="true" id="30aefa36-5265-4855-8432-a953e41b8771"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="cc7ab515-dee1-4301-a271-69c0066d67df"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("userType",null);
tC.setPropertyValue("Privilege",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("GivenName",null);
tC.setPropertyValue("SurName",null);
tC.setPropertyValue("PrimaryEmail",null);
tC.setPropertyValue("Language1",null);
tC.setPropertyValue("DisplayImageURL",null);
tC.setPropertyValue("AlternateEmail",null);
tC.setPropertyValue("PostalAddress",null);
tC.setPropertyValue("PostalCode",null);
tC.setPropertyValue("Locality",null);
tC.setPropertyValue("StateOrProvince",null);
tC.setPropertyValue("Country",null);
tC.setPropertyValue("TelephoneNumber",null);
tC.setPropertyValue("MobileTelephoneNumber",null);
tC.setPropertyValue("MeetsAgeOfMajority",null);
tC.setPropertyValue("DateOfBirth",null);
tC.setPropertyValue("urnUser",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("QuestionID1",null);
tC.setPropertyValue("QuestionResponse1",null);
tC.setPropertyValue("QuestionID2",null);
tC.setPropertyValue("QuestionResponse2",null);
tC.setPropertyValue("ResourceStatus",null);

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_USER_ID_FULL",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("SAML",null);

tC.setPropertyValue("ResponseType","SUCCESS");

//def request_XML_Buffer = context.expand( '${#Project#Request_XML_Buffer}' )

//tP.setPropertyValue("Request_XML",request_XML_Buffer);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="815bff3b-842a-4070-86bb-cece5b19c7a8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tP.setPropertyValue("Request_XML",tP.getPropertyValue("Request_XML_Buffer"));

tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserCreate"));

tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("userType",callTC.getPropertyValue("userType"));
tC.setPropertyValue("GivenName",callTC.getPropertyValue("GivenName"));
tC.setPropertyValue("SurName",callTC.getPropertyValue("SurName"));
tC.setPropertyValue("PrimaryEmail",callTC.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("Language1",callTC.getPropertyValue("Language1"));
tC.setPropertyValue("DisplayImageURL",callTC.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",callTC.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",callTC.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",callTC.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",callTC.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",callTC.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",callTC.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",callTC.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",callTC.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("urnUser",callTC.getPropertyValue("urnUser"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",callTC.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",callTC.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",callTC.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",callTC.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",callTC.getPropertyValue("ResourceStatus"));
tC.setPropertyValue("LegalGuardian",callTC.getPropertyValue("LegalGuardian"));

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID1", callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL", callTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("SAML",callTC.getPropertyValue("SAML"));
tC.setPropertyValue("CLG_NODE_USER_ID",callTC.getPropertyValue("CLG_NODE_USER_ID"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Setting constants based on Geo Profile" id="f23d9bb0-0bd1-4723-928b-a9c1d99c147f"><con:settings/><con:config><script>import java.text.SimpleDateFormat;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/* Setting constants based on Geo Profile*/

if(tP.getPropertyValue("Country")=="US")
	{
		tP.setPropertyValue("GeoProfile","US");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","13");
		tP.setPropertyValue("CHILD_MAX_AGE","12");
	}
else
if(tP.getPropertyValue("Country")=="CA")
	{
		tP.setPropertyValue("GeoProfile","CA");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","13");
		tP.setPropertyValue("CHILD_MAX_AGE","12");
	}
else
if(tP.getPropertyValue("Country")=="GB")
	{
		tP.setPropertyValue("GeoProfile","GB");          
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="AU")
	{
		tP.setPropertyValue("GeoProfile","AU");          
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="NZ")
	{
		tP.setPropertyValue("GeoProfile","NZ");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="IE")
	{
		tP.setPropertyValue("GeoProfile","IE");             
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="AT")
	{
		tP.setPropertyValue("GeoProfile","AT");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","14");
		tP.setPropertyValue("CHILD_MAX_AGE","13");
	}
else
if(tP.getPropertyValue("Country")=="DE")
	{
		tP.setPropertyValue("GeoProfile","DE");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","14");
		tP.setPropertyValue("CHILD_MAX_AGE","13");
	}
else
if(tP.getPropertyValue("Country")=="CH")
	{
		tP.setPropertyValue("GeoProfile","CH");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="FR")
	{
		tP.setPropertyValue("GeoProfile","FR");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("CHILD_MAX_AGE","17");
	}


	def userType = tC.getPropertyValue("userType")
	log.info "userType: "+userType;
	
	switch(userType){
	
	case "ADULT":
		Date dob = (new Date());
		dob = dob - ((tP.getPropertyValue("ADULT_MIN_AGE").toInteger()+1)*365);
		log.info "Adult DateOfBirth: "+dob.format('yyyy-MM-dd');
		tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
		tC.setPropertyValue("ADULT_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "YOUTH":	
		Date dob = (new Date());
		dob = dob - ((tP.getPropertyValue("YOUTH_MIN_AGE").toInteger()+1)*365);
		log.info "YOUTH DateOfBirth: "+dob.format('yyyy-MM-dd');
		tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
		tC.setPropertyValue("YOUTH_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "CHILD":	
		Date dob = (new Date());
		dob = dob - ((tP.getPropertyValue("CHILD_MAX_AGE").toInteger()-1)*365);
		log.info "CHILD DateOfBirth: "+dob.format('yyyy-MM-dd');
		tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
		tC.setPropertyValue("CHILD_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "ADULTPlus":	
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
		log.info curYear;
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear-1900,curMonth,curDay); 
		log.info now; 
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, -1);
		def dob = sdf.format(calendar.getTime());
		log.info "AdultPlus DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("ADULT_DOB_XML",dob); 
	break;

	case "ADULTMinus":	
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear1 = today.get(Calendar.YEAR)- tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
		log.info curYear1;
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear1-1900,curMonth,curDay);  
		log.info now; 
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, +1);
		def dob = sdf.format(calendar.getTime());
		log.info "ADULTMinus DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("YOUTH_DOB_XML",dob);
	break;

	case "YOUTHPlus":
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, -1);
		def dob = sdf.format(calendar.getTime());
		log.info "YOUTHPlus DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob); 
		tC.setPropertyValue("YOUTH_DOB_XML",dob);
	break;

	case "YOUTHMinus":   	
	   	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, +1);
		def dob = sdf.format(calendar.getTime());
		log.info "YOUTHMinus DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("CHILD_DOB_XML",dob); 
	break;

	case "ADULTToday":	 
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, 0);
		def dob = sdf.format(calendar.getTime());
		log.info "ADULTToday DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("ADULT_DOB_XML",dob); 
	break;

	case "YOUTHToday":
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear1 = today.get(Calendar.YEAR)- tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear1-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, 0);
		def dob = sdf.format(calendar.getTime());
		log.info "YOUTHToday DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("YOUTH_DOB_XML",dob); 
	break;

	default:
		log.info "userType is not matched!!"
	break;

	}</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="5aec259f-6efc-4047-958a-f404549b66a3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")

myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("User_Create");

def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="User_Create" id="bdbb05a4-3195-40a4-a273-e98edb919cda"><con:settings/><con:config service="FirstUserCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" methodName="FirstUserCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User_Create" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="RET_CS_1_concat.pem" id="7c672fe7-b48d-4358-b1ed-a956c80e9bfa"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request>${#Project#Request_XML}
</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1" id="dc7939c7-4e38-4936-ab5e-97a276c8b7cf"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="bc996057-be4c-4bee-a9ac-43bd22a866c4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('User_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);



tC.setPropertyValue("httpLocation", contentLocation);

</script></con:config></con:testStep><con:testStep type="groovy" name="Test Case Name with Expected Result" disabled="true" id="d6783e9b-e68f-48ef-b658-7b9366e8ba55"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def httpStatus = context.expand( '${#TestCase#httpStatus}' )

logFile.append("${callTCname}"+"\t"+"$httpStatus" +"\n");</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="b31e8838-e244-4a70-b23e-27ecedeb39ef"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "Keep-Alive";

String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	   case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";		
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;


   case "INVALID_USER_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUsernameNotValid";
		errorReason = "The sign-in name is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUsernameNotValid";
	break;

   case "INVALID_GIVEN_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserGivenNameNotValid";
		errorReason = "The given name is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserGivenNameNotValid";
	break;

    case "INVALID_PASSWORD":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPasswordNotValid";
		errorReason = "The password is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPasswordNotValid";
	break;

    case "INVALID_SECURITY_ANS":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserSecurityAnswerNotValid";
		errorReason = "The answer to the security question is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserSecurityAnswerNotValid";
	break;

    case "INVALID_ADDRESS":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserAddressNotValid";
		errorReason = "The address is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserAddressNotValid";
	break;

	case "INVALID_SURNAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserSurnameNotValid";
		errorReason = "The surname is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserSurnameNotValid";
	break;


	case "INVALID_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
		errorReason = "The country code is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
		errorReason = "The country code is required.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "INVALID_PRIMARY_EMAIL":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPrimaryEmailNotValid";
		errorReason = "The primary email address is not valid." + primaryEmail;
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPrimaryEmailNotValid";
	break;
	
	case "INVALID_ALTERNATE_EMAIL":
			expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
			errorID     = "urn:dece:errorid:org:dece:AccountUserAlternateEmailNotValid";

			if(tP.getPropertyValue("AlternateEmail")=="")
			{
			  errorReason = "The alternate email address is not valid.";
			}
			else
			{
				errorReason = "The alternate email address is not valid. - " + tP.getPropertyValue("AlternateEmail");
			}
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserAlternateEmailNotValid";
	break;	
	
	
	case "INVALID_TELEPHONE":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserTelephoneNumberNotValid";
		errorReason = "The telephone number is not valid. - "+ context.expand('${#Project#TelephoneNo}');
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserTelephoneNumberNotValid";
	break;
	
	
	case "INVALID_PRIMARY_LANG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPrimaryLanguageNotValid";
		errorReason = "The primary language is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPrimaryLanguageNotValid";
	break;
	
	case "INVALID_LANG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserLanguageNotValid";
		errorReason = "The language is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserLanguageNotValid";
	break;
	
	case "DUPLICATE_LANG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserLanguageDuplicated";
		errorReason = "The language is a duplicate.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserLanguageDuplicated";
	break;
	
	case "DUPLICATE_EMAIL":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserEmailAddressDuplicated";
		errorReason = "The email address is a duplicate.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserEmailAddressDuplicated";
	break;

		
	case "USERNAME_EXISTS":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUsernameRegistered";
		errorReason = "The sign-in name already exists.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUsernameRegistered";
	break;

	case "INVALID_DOB":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserBirthDateNotValid";
		errorReason = "The date of birth is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserBirthDateNotValid";
	break;
	
	case "INVALID_CLG_STATUS":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:CLGStatusInRequestNotValid";
		errorReason = "The status of the connected legal guardian (CLG) must be active or pending.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#CLGStatusInRequestNotValid";
	break;
	
	
	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
		errorReason = "The API call is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";		
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_INACTIVE":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
		errorReason = "The requesting member is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;

	case "MAX_USERS_IN_ACCOUNT":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountActiveUserCountReachedMaxLimit";
		errorReason = "The maximum number of active members allowed has been reached.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountActiveUserCountReachedMaxLimit";
	break;
	
	case "USER_REQUESTING_NOT_PROVIDED":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
		errorReason = "Requesting User ID Not Specified";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

	case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The requesting member does not have permission to create a full-access member.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The requesting member does not have permission to create a member.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserMustBe18OrOlderToRegister";
		errorReason = "The member must be 18 or older.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserMustBe18OrOlderToRegister";
	break;
	
	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The first member must be a full-access member.";
		errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;
	
	case "FAU_MUST_BE_ABOVE18":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "A full-access member must be 18 or older.";
		errorID     = "urn:dece:errorid:org:dece:FullAccessUserMustBe18OrOlder";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FullAccessUserMustBe18OrOlder";
	break;
	
	case "LEGAL_GUARDIAN_REQD":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserRequiresLegalGuardianDeclared";
		errorReason = "The connected legal guardian (CLG) must be declared.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserRequiresLegalGuardianDeclared";
	break;
	
	case "CREATOR_MUST_BE_CLG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:CLGMustBeSameAsCreator";
		errorReason = "An underage member must be created by a connected legal guardian (CLG).";			       
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#CLGMustBeSameAsCreator";
	break;
	
	case "CREATOR_RESTRICTED_TO_BE_CLG":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The requesting member cannot create an underage member.";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateChildOrYouthUsers";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateChildOrYouthUsers";
	break;

	case "CLG_NOT_FOUND":
	     expectHTTPstatus   = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:LegalGuardianUserNotFound";
		errorReason = "The connected legal guardian (CLG) was not found.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#LegalGuardianUserNotFound";
	break;

	case "CLG_MUST_BE_FAU":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";		
		errorReason = "A connected legal guardian (CLG) must be a full-access member.";
		errorID     = "urn:dece:errorid:org:dece:LegalGuardianMustBeFullAccessUser";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#LegalGuardianMustBeFullAccessUser";
	break;

	case "CLG_STATUS_INVALID":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorReason = "The connected legal guardian (CLG) is not in a valid status.";
		errorID     = "urn:dece:errorid:org:dece:PendingCLGDeclaredNotInValidStatus";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#PendingCLGDeclaredNotInValidStatus";
	break;

     case "ACC_STATUS_INVALID":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountStatusNotValid";
		errorReason = "The account status is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountStatusNotValid";
	break;

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "STATUS_NOT_ALLOWED":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:ResourceStatusElementNotAllowed";
		errorReason = "The resource status element is not allowed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceStatusElementNotAllowed";
     break;

          case "DOB_NOT_CONSISTENT":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserDOBNotConsistentWithAgeOfMajorityDeclaration";
		errorReason = "The member's date of birth conflicts with the value of the AgeOfMajority attribute.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserDOBNotConsistentWithAgeOfMajorityDeclaration";
     break;

     case "AGE_OF_MAJORITY_BOOLEAN_ERROR":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:SaxParserException";
		errorReason = "cvc-datatype-valid.1.2.1: \'' is not a valid value for \'boolean\'.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#SaxParserException";
     break;

	case "DOB_DATATYPE_ERROR":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:SaxParserException";
		errorReason = "cvc-datatype-valid.1.2.3: \'' is not a valid value of union type \'DayOptionalDate-type\'.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#SaxParserException";
     break;

     case "INSUFFICIENT_PRIVILEGES":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "The user does not have permission to perform the requested action.";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;    

	
}

tC.setPropertyValue("expectHTTPstatus",expectHTTPstatus);

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
/*
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;
*/

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
/*
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
*/
//Location Header

if (httpLocationHeader) {
	 assert context.expand( '${#TestCase#httpLocation}') != null;

      def a = context.expand( '${#TestCase#httpLocation}');
      def b = a.toURL();
      def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

      if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
      	{                                
			assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
			
			int lastColon = urlStr.lastIndexOf(':');
			int lastSlash = urlStr.lastIndexOf('/');
			userid     = urlStr.substring(lastColon + 1);
			def node_User = urlStr.substring(lastSlash + 1);
			                                 
			tC.setPropertyValue("NODE_USER_ID",userid);			
			tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
      	} 
      else 
      	{
			assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");
			int lastColon = urlStr.lastIndexOf('%3A');
			int lastSlash = urlStr.lastIndexOf('/');
			userid     = urlStr.substring(lastColon + 3);
			def node_User = urlStr.substring(lastSlash + 1);
			                      
			tC.setPropertyValue("NODE_USER_ID",userid);			
			tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
      	}
                                
} else 
	{
       	assert context.expand( '${#TestCase#httpLocation}') == "";
	}





//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		log.info "Errorlink from Coord : " + myXML.Error.ErrorLink.toString();
		log.info "Errorlink  expected" + errorLink;
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract_Account_OID_and_User_OID" id="95f3189f-715e-4cef-bc91-14a1b4138b68"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def dbUser;

def expectHTTPstatus = tC.getPropertyValue("expectHTTPstatus");

if (expectHTTPstatus == "HTTP/1.1 201 Created")
     {
		def dBHost = context.expand( '${#Project#targetsystem}' )
		
		try          {
		                dbUser = new dbUtils.dbUser(log,dBHost);
		                }
		catch(Throwable e) {
		                log.info "ERROR - dbUtils.dbUser - $e";
		                assert 1 == 2;
		                }
		finally {
		         try {
		                String u = dbUser.userGetUserOID(tC.getPropertyValue("UserName").toLowerCase());
		                //String a = dbUser.userGetAccountOIDbyUsername(tC.getPropertyValue("UserName"))
		
		                 assert u.length() > 0;
		                 //assert a.length() > 0;
		                 
		                 tC.setPropertyValue("user_oid", u);
		                //tP.setPropertyValue("account_oid", a);
		                }
		          catch(Throwable e) 
		          	{
		                 log.info "ERROR - dbUtils.userGetUserOID - $e";
		                 assert 1 == 2;                     
		          	}
		}
     }
     else
     {
     	log.info ("Can not retreive User_OID for a negative scenario");
     }
     

</script></con:config></con:testStep><con:testStep type="groovy" name="Return the NodeAccountId and NodeUserId to the Calling Test Case" id="419e9428-03d9-4db9-8ef2-4eaee630ffe1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("UserName",tC.getPropertyValue("UserName"));
callTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID"));
callTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
callTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid"));
callTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

callTC.setPropertyValue("ADULT_DOB_XML",tC.getPropertyValue("ADULT_DOB_XML"));
callTC.setPropertyValue("YOUTH_DOB_XML",tC.getPropertyValue("YOUTH_DOB_XML"));
callTC.setPropertyValue("CHILD_DOB_XML",tC.getPropertyValue("CHILD_DOB_XML"));
callTC.setPropertyValue("DateOfBirth",tC.getPropertyValue("DateOfBirth"));</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Validate_Response" disabled="true" id="17e7e4a4-8bdd-4850-97a8-52aac8bc5a9b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "Keep-Alive";

String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#nodeIdRetailerforDeviceAuthToken}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#nodeIdRetailerforDeviceAuthToken}' );
}
if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The supplied country code is invalid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code cannot be null.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "API call not authorized";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:UserNotActive";
	errorReason = "User is not active";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

		case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The user does not have permission to create a full-access user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The user does not have permission to create a user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
			expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBe18OrOlder";
			errorReason = "First User must be 18 years or older";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBe18OrOlder";
	break;


	case "NO_MNG_ACC_CNST":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
			errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The first user in a household account must be a full-access user.";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;
	
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
/*
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
*/
//Location Header

if (httpLocationHeader) {
	 assert context.expand( '${#TestCase#httpLocation}') != null;

      def a = context.expand( '${#TestCase#httpLocation}');
      def b = a.toURL();
      def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

      if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO"){
                                
         assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
         
         int lastColon = urlStr.lastIndexOf(':');
         int lastSlash = urlStr.lastIndexOf('/');
         userid     = urlStr.substring(lastColon + 1);
         def node_User = urlStr.substring(lastSlash + 1);
                                           
         tC.setPropertyValue("NODE_USER_ID",userid);

         tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
         tC.setPropertyValue("NODE_USER_ID_FULL2",node_User);
      } else {
         assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");
         int lastColon = urlStr.lastIndexOf('%3A');
         int lastSlash = urlStr.lastIndexOf('/');
         userid     = urlStr.substring(lastColon + 3);
         def node_User = urlStr.substring(lastSlash + 1);
                                
         tC.setPropertyValue("NODE_USER_ID",userid);

         tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
         tC.setPropertyValue("NODE_USER_ID_FULL2",node_User);
      }
                                
} else {
                                
       	assert context.expand( '${#TestCase#httpLocation}') == "";
}





//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:testStep type="restrequest" name="Copy of User_Create" disabled="true" id="2519c470-f063-4e89-a74a-4c92d6a21e84"><con:settings/><con:config service="FirstUserCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" methodName="FirstUserCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of User_Create" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="RET_concat.pem" id="43ba7d20-ed9f-442c-84c0-94bb054fe9ef"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:${#TestCase#Privilege}" xmlns="${#TestCase#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
		<GivenName>${#TestCase#GivenName}</GivenName>
		<SurName>${#TestCase#SurName}</SurName>
	</Name>
	<DisplayImage>
		<DisplayImageURL Height="1" MimeType="" Width="1">${#TestCase#DisplayImageURL}
		</DisplayImageURL>
	</DisplayImage>
	<ContactInfo>
		<PrimaryEmail>
			<Value>${#TestCase#PrimaryEmail}</Value>
			</PrimaryEmail>
			<AlternateEmail>
				<Value>${#TestCase#AlternateEmail}</Value>
				</AlternateEmail>
			<Address>
				<PostalAddress>${#TestCase#PostalAddress}</PostalAddress>
				<PostalCode>${#TestCase#PostalCode}</PostalCode>
				<Locality>${#TestCase#Locality}</Locality>
				<StateOrProvince>${#TestCase#StateOrProvince}</StateOrProvince>
				<Country>${#TestCase#Country}</Country>
			</Address>
			<TelephoneNumber>			
					<Value>${#TestCase#TelephoneNumber}</Value>
				</TelephoneNumber>
				<MobileTelephoneNumber>
					<Value>${#TestCase#MobileTelephoneNumber}</Value>
				</MobileTelephoneNumber>
	</ContactInfo>
	<Languages>
		<Language>${#TestCase#Language1}</Language>
	</Languages>
	<!-- <DateOfBirth> depricated </DateOfBirth> -->
<!--	<LegalGuardian>${#TestCase#urnUser}${#TestCase#CLG_NODE_USER_ID}</LegalGuardian>-->
	<Credentials>
		<Username>${#TestCase#UserName}</Username>
		<Password>${#TestCase#password}</Password>
	</Credentials>
	<UserRecoveryTokens>
		<RecoveryItem>
			<QuestionID>${#TestCase#QuestionID1}</QuestionID>
			<QuestionResponse>${#TestCase#QuestionResponse1}</QuestionResponse>
		</RecoveryItem>
		<RecoveryItem>
			<QuestionID>${#TestCase#QuestionID2}</QuestionID>
			<QuestionResponse>${#TestCase#QuestionResponse2}</QuestionResponse>
		</RecoveryItem>
	</UserRecoveryTokens>
	${#TestCase#ResourceStatus}
</User>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1" id="dc7939c7-4e38-4936-ab5e-97a276c8b7cf"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1996-06-09</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2003-06-21</con:value></con:property><con:property><con:name>coordinatorSchema</con:name><con:value>${#Project#coordinatorSchema}</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1996-06-09</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE19F934C4E6BFA99E0401F0A05993DA2</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE19F95D7CFC268C9E0401F0A079952C9</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150605_025145</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa1.q.uvvu.com/rest/2015/02/Account/urn:dece:accountid:org:dece:17C2988F309363B9E0533D991F0A8093/User/urn:dece:userid:org:dece:17C2A3A43E6C6E10E0533D991F0A95E1</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/RET_CS_1_concat.pem</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17C2988F309363B9E0533D991F0A8093</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">17C2A3A43E6C6E10E0533D991F0A95E1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:17C2A3A43E6C6E10E0533D991F0A95E1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E56665ABC808DB00E0401F0A07993371</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc9o6EP4rjPvYMb4AwfYEZggkjVtICCackpeOkNeg1MhGkrnk11cy4AIJOZzz5Nn1avfbiz7tNUfz2PZanAMTJKGl9Tym3Mu1DS1j1EsQJ9yjaA7cE9gLWr2uZ5dND+2PaCW/09B+AUxqrjNxdBy5oFcdy9QdZDs6IAvC8GpSATSRppxn4FMuEBUNzTatmm5e6WZtaLqe5Xi2Wa5XrBetNALGpW9pUja1Hag1b2gzIVLPMFarVXlVKSdsatimaRk/e90Az2COtOb1NqM8EGvu7HE5BAxxjMs4mRvXxpHNdci9gEwpEhmDXazwXCzTMF1D2oScTL9oxVkIfRoludhGNKEEo5i8IVWfHohZEpZa8TRhRMzmZ5OwTOVYhzXWsVWlXzTjGNqFjo4QMo50PkPWztcAImBAMZSeB35D+3JZ1/KjQ4YojxI258fif8MDdAlxkkKo831aO2iXO/ygUs1rwJ5PcZxxsoQHNawpwsB33QR8uatSn0FE1l3C5YCuuUJnHMI7EbfV6JApcPF/GnTQnK2TEYozaLZ/+13c/lZPjdpPn8/q+D68+mEuu7et20YO4NA4VxSt3YonQ1kM0fbE82BBR09Jy7mLbFyLBjfBNz/u34/DXnXcMVvmiN5vKq3ROuzXkR+Mnsh4/DVZWL5166zuAp+uX8PFE/uW2q8uZJ1hrWMv2+h7b+oIetXtQv2F9ezxIvunO3tkw43f6vmuFTy9BvCjHncenFn6IqLN91F61zcXDD+sltVxNUNfv/br6T2Z1BCObixW64y7w+dGkc4B/mPd/s4H2eQVsNiLagz8TulOdgmJz8lMaUioR7mplyry4QKo0JrqlOIOL5N0R0JP9nArW/W27TrOXcV0q1eVG/fWrFUqHde17syWY7qVPclsUZxAbCc0IiqWotzt2HwOEM89DjQEpi+TTDId1z7x2EEClXw6kJcgoRyGiaRnK0JmFb8lTuxkrpW8Ou6G11bLt1ldKz0k4pE+slYkgB2RsmUfkfIAMEkJKOZWg83lZHMhi7FAy0zEVnmJyhQyye1M0axnV52awck8jUFBNeZJmMVQTmdpXhqDb7+2jjDPtYPbYX7dziZ2+m9fA2kTEmXAVS43IPsIH7wu1j6R8wnXDhPeu29lIVE3SxZUMIK3SI5//Z0TNSDFkMiMfrWDX9Yed2F+8fH3J41PQBmn9SgChUtyEHb/dstXQPJGc9/NBbLKi3K2XGZ5A6vVisGke0NVyDBtIwCcSWbbDJPfQI3Ci3HRM1IAPwle6I8hZmJGA4EEzOXAlXLxgr0hAK72Bl9elfWlS8lRSFk6AWvxka4dy51HIf50LcIeVnZS3ZefVcLCvx37wNdBHJmnXBsEoVMlqSdkc2YucCLdEkl+CTt0/pGDj4IfK4siF1iEHKhJJuD8n5JitYaGME4yKvyOlisOmTbHKTYpeH+N3rnJybzY7si/r3c6yUcAg9wJOcn9q0faU1eATg/Yehf0DGFXPiPsY3TNd+r3moM6nc548w8=</con:value></con:property><con:property><con:name>SAML2</con:name><con:value>SAML2 Assertion=null</con:value></con:property><con:property><con:name>SecondUserName</con:name><con:value>username_20130122_043244</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Create_API</con:value></con:property><con:property><con:name>StandardUserName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150605_025145</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>tName</con:name><con:value>User_Create_STS_Policies</con:value></con:property><con:property><con:name>UC_RequestBody_Mandatory</con:name><con:value/></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150605_025145</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>17C2A3A43E6D6E10E0533D991F0A95E1</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-27</con:value></con:property><con:property><con:name>expectHTTPstatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5ff78eb3-d79f-4f4a-b9a8-5ec1c84f61c0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3d78db1c-105b-43a0-b406-6bb0f690c833</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662fb201-c4e7-401c-b10a-548ea13f5020</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f23d9bb0-0bd1-4723-928b-a9c1d99c147f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95f3189f-715e-4cef-bc91-14a1b4138b68</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Child_UserCreate API" searchProperties="true" id="590b402e-4d94-4c2b-a26d-a4d3267a4ef0"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="825bf281-a9b5-44b0-a50f-928e16fbf440"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("userType",null);
tC.setPropertyValue("Privilege",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("GivenName",null);
tC.setPropertyValue("SurName",null);
tC.setPropertyValue("PrimaryEmail",null);
tC.setPropertyValue("Language1",null);
tC.setPropertyValue("DisplayImageURL",null);
tC.setPropertyValue("AlternateEmail",null);
tC.setPropertyValue("PostalAddress",null);
tC.setPropertyValue("PostalCode",null);
tC.setPropertyValue("Locality",null);
tC.setPropertyValue("StateOrProvince",null);
tC.setPropertyValue("Country",null);
tC.setPropertyValue("TelephoneNumber",null);
tC.setPropertyValue("MobileTelephoneNumber",null);
tC.setPropertyValue("MeetsAgeOfMajority",null);
tC.setPropertyValue("DateOfBirth",null);
tC.setPropertyValue("urnUser",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("QuestionID1",null);
tC.setPropertyValue("QuestionResponse1",null);
tC.setPropertyValue("QuestionID2",null);
tC.setPropertyValue("QuestionResponse2",null);
tC.setPropertyValue("ResourceStatus",null);

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_USER_ID_FULL",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("SAML",null);

tC.setPropertyValue("ResponseType","SUCCESS");
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="99a30dc4-36a4-4180-be54-b811a4ce9699"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserCreate"));

tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("userType",callTC.getPropertyValue("userType"));
tC.setPropertyValue("GivenName",callTC.getPropertyValue("GivenName"));
tC.setPropertyValue("SurName",callTC.getPropertyValue("SurName"));
tC.setPropertyValue("PrimaryEmail",callTC.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("Language1",callTC.getPropertyValue("Language1"));
tC.setPropertyValue("DisplayImageURL",callTC.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",callTC.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",callTC.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",callTC.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",callTC.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",callTC.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",callTC.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",callTC.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",callTC.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("urnUser",callTC.getPropertyValue("urnUser"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",callTC.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",callTC.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",callTC.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",callTC.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",callTC.getPropertyValue("ResourceStatus"));

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID1", callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL", callTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("SAML",callTC.getPropertyValue("SAML"));
tC.setPropertyValue("CLG_NODE_USER_ID", callTC.getPropertyValue("CLG_NODE_USER_ID"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Setting constants based on Geo Profile" id="f4225765-f21f-48e3-adb8-f313ff9798d1"><con:settings/><con:config><script>import java.text.SimpleDateFormat;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


/* Setting constants based on Geo Profile*/

if(tP.getPropertyValue("Country")=="US")
	{
		tP.setPropertyValue("GeoProfile","US");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","13");
		tP.setPropertyValue("CHILD_MAX_AGE","12");
	}
else
if(tP.getPropertyValue("Country")=="CA")
	{
		tP.setPropertyValue("GeoProfile","CA");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","13");
		tP.setPropertyValue("CHILD_MAX_AGE","12");
	}
else
if(tP.getPropertyValue("Country")=="GB")
	{
		tP.setPropertyValue("GeoProfile","GB");          
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="AU")
	{
		tP.setPropertyValue("GeoProfile","AU");          
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="NZ")
	{
		tP.setPropertyValue("GeoProfile","NZ");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="IE")
	{
		tP.setPropertyValue("GeoProfile","IE");             
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="AT")
	{
		tP.setPropertyValue("GeoProfile","AT");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","14");
		tP.setPropertyValue("CHILD_MAX_AGE","13");
	}
else
if(tP.getPropertyValue("Country")=="DE")
	{
		tP.setPropertyValue("GeoProfile","DE");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","14");
		tP.setPropertyValue("CHILD_MAX_AGE","13");
	}
else
if(tP.getPropertyValue("Country")=="CH")
	{
		tP.setPropertyValue("GeoProfile","CH");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="FR")
	{
		tP.setPropertyValue("GeoProfile","FR");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("CHILD_MAX_AGE","17");
	}


	def userType = tC.getPropertyValue("userType")
	log.info "userType: "+userType;
	
	switch(userType){
	
	case "ADULT":
		Date dob = (new Date());
		dob = dob - ((tP.getPropertyValue("ADULT_MIN_AGE").toInteger()+1)*365);
		log.info "Adult DateOfBirth: "+dob.format('yyyy-MM-dd');
		tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
		tC.setPropertyValue("ADULT_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "YOUTH":	
		Date dob = (new Date());
		dob = dob - ((tP.getPropertyValue("YOUTH_MIN_AGE").toInteger()+1)*365);
		log.info "YOUTH DateOfBirth: "+dob.format('yyyy-MM-dd');
		tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
		tC.setPropertyValue("YOUTH_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "CHILD":	
		Date dob = (new Date());
		dob = dob - ((tP.getPropertyValue("CHILD_MAX_AGE").toInteger()-1)*365);
		log.info "CHILD DateOfBirth: "+dob.format('yyyy-MM-dd');
		tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
		tC.setPropertyValue("CHILD_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "ADULTPlus":	
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, -1);
		def dob = sdf.format(calendar.getTime());
		log.info "AdultPlus DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("ADULT_DOB_XML",dob); 
	break;

	case "ADULTMinus":	
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear1 = today.get(Calendar.YEAR)- tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear1-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, +1);
		def dob = sdf.format(calendar.getTime());
		log.info "ADULTMinus DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("YOUTH_DOB_XML",dob);
	break;

	case "YOUTHPlus":
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, -1);
		def dob = sdf.format(calendar.getTime());
		log.info "YOUTHPlus DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob); 
		tC.setPropertyValue("YOUTH_DOB_XML",dob);
	break;

	case "YOUTHMinus":   	
	   	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, +1);
		def dob = sdf.format(calendar.getTime());
		log.info "YOUTHMinus DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("CHILD_DOB_XML",dob); 
	break;

	case "ADULTToday":	 
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, 0);
		def dob = sdf.format(calendar.getTime());
		log.info "ADULTToday DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("ADULT_DOB_XML",dob); 
	break;

	case "YOUTHToday":
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear1 = today.get(Calendar.YEAR)- tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear1-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, 0);
		def dob = sdf.format(calendar.getTime());
		log.info "YOUTHToday DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("YOUTH_DOB_XML",dob); 
	break;

	default:
		log.info "userType is not matched!!"
	break;

	}</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="e2c07c46-58e7-4b3c-80ae-dff6696e9073"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")

myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("User_Create");

def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="User_Create" id="66f614a6-ae05-4441-9809-1b9b0f97fbc1"><con:settings/><con:config service="FirstUserCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" methodName="FirstUserCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User_Create" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="RET_concat.pem" id="160e0a4a-ebee-4569-b05b-826aed773d12"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:${#TestCase#Privilege}" xmlns="${#TestCase#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
		<GivenName>${#TestCase#GivenName}</GivenName>
		<SurName>${#TestCase#SurName}</SurName>
	</Name>
	<DisplayImage>
		<DisplayImageURL Height="1" MimeType="" Width="1">${#TestCase#DisplayImageURL}
		</DisplayImageURL>
	</DisplayImage>
	<ContactInfo>
		<PrimaryEmail>
			<Value>${#TestCase#PrimaryEmail}</Value>
			</PrimaryEmail>
			<AlternateEmail>
				<Value>${#TestCase#AlternateEmail}</Value>
				</AlternateEmail>
			<Address>
				<PostalAddress>${#TestCase#PostalAddress}</PostalAddress>
				<PostalCode>${#TestCase#PostalCode}</PostalCode>
				<Locality>${#TestCase#Locality}</Locality>
				<StateOrProvince>${#TestCase#StateOrProvince}</StateOrProvince>
				<Country>${#TestCase#Country}</Country>
			</Address>
			<TelephoneNumber>			
					<Value>${#TestCase#TelephoneNumber}</Value>
				</TelephoneNumber>
				<MobileTelephoneNumber>
					<Value>${#TestCase#MobileTelephoneNumber}</Value>
				</MobileTelephoneNumber>
	</ContactInfo>
	<Languages>
		<Language>${#TestCase#Language1}</Language>
	</Languages>
	<!-- <DateOfBirth> depricated </DateOfBirth> -->
	<LegalGuardian>${#TestCase#urnUser}${#TestCase#CLG_NODE_USER_ID}</LegalGuardian>
	<Credentials>
		<Username>${#TestCase#UserName}</Username>
		<Password>${#TestCase#password}</Password>
	</Credentials>
	<UserRecoveryTokens>
		<RecoveryItem>
			<QuestionID>${#TestCase#QuestionID1}</QuestionID>
			<QuestionResponse>${#TestCase#QuestionResponse1}</QuestionResponse>
		</RecoveryItem>
		<RecoveryItem>
			<QuestionID>${#TestCase#QuestionID2}</QuestionID>
			<QuestionResponse>${#TestCase#QuestionResponse2}</QuestionResponse>
		</RecoveryItem>
	</UserRecoveryTokens>
	${#TestCase#ResourceStatus}
</User>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1" id="dc7939c7-4e38-4936-ab5e-97a276c8b7cf"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="00dbc9fe-3cb7-41a2-abca-24208936a03f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('User_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);



tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="296d9a97-360d-4cd6-9e68-561e11924715"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "Keep-Alive";

String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	   case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";		
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;


   case "INVALID_USER_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUsernameNotValid";
		errorReason = "The sign-in name is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUsernameNotValid";
	break;

   case "INVALID_GIVEN_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserGivenNameNotValid";
		errorReason = "The given name is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserGivenNameNotValid";
	break;

    case "INVALID_PASSWORD":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPasswordNotValid";
		errorReason = "The password is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPasswordNotValid";
	break;

    case "INVALID_SECURITY_ANS":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserSecurityAnswerNotValid";
		errorReason = "The answer to the security question is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserSecurityAnswerNotValid";
	break;

    case "INVALID_ADDRESS":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserAddressNotValid";
		errorReason = "The address is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserAddressNotValid";
	break;

	case "INVALID_SURNAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserSurnameNotValid";
		errorReason = "The surname is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserSurnameNotValid";
	break;


	case "INVALID_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
		errorReason = "The country code is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
		errorReason = "The country code is required.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "INVALID_PRIMARY_EMAIL":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPrimaryEmailNotValid";
		errorReason = "The primary email address is not valid." + primaryEmail;
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPrimaryEmailNotValid";
	break;
	
	case "INVALID_ALTERNATE_EMAIL":
			expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
			errorID     = "urn:dece:errorid:org:dece:AccountUserAlternateEmailNotValid";

			if(tP.getPropertyValue("AlternateEmail")=="")
			{
			  errorReason = "The alternate email address is not valid.";
			}
			else
			{
				errorReason = "The alternate email address is not valid. - " + tP.getPropertyValue("AlternateEmail");
			}
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserAlternateEmailNotValid";
	break;	
	
	
	case "INVALID_TELEPHONE":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserTelephoneNumberNotValid";
		errorReason = "The telephone number is not valid. - "+ context.expand('${#Project#TelephoneNo}');
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserTelephoneNumberNotValid";
	break;
	
	
	case "INVALID_PRIMARY_LANG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPrimaryLanguageNotValid";
		errorReason = "The primary language is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPrimaryLanguageNotValid";
	break;
	
	case "INVALID_LANG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserLanguageNotValid";
		errorReason = "The language is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserLanguageNotValid";
	break;
	
	case "DUPLICATE_LANG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserLanguageDuplicated";
		errorReason = "The language is a duplicate.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserLanguageDuplicated";
	break;
	
	case "DUPLICATE_EMAIL":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserEmailAddressDuplicated";
		errorReason = "The email address is a duplicate.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserEmailAddressDuplicated";
	break;

		
	case "USERNAME_EXISTS":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUsernameRegistered";
		errorReason = "The sign-in name already exists.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUsernameRegistered";
	break;

	case "INVALID_DOB":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserBirthDateNotValid";
		errorReason = "The date of birth is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserBirthDateNotValid";
	break;
	
	case "INVALID_CLG_STATUS":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:CLGStatusInRequestNotValid";
		errorReason = "The status of the connected legal guardian (CLG) must be active or pending.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#CLGStatusInRequestNotValid";
	break;
	
	
	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
		errorReason = "The API call is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";		
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_INACTIVE":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
		errorReason = "The requesting member is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;

	case "MAX_USERS_IN_ACCOUNT":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountActiveUserCountReachedMaxLimit";
		errorReason = "The maximum number of active members allowed has been reached.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountActiveUserCountReachedMaxLimit";
	break;
	
	case "USER_REQUESTING_NOT_PROVIDED":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
		errorReason = "Requesting User ID Not Specified";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

	case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The requesting member does not have permission to create a full-access member.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The requesting member does not have permission to create a member.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserMustBe18OrOlderToRegister";
		errorReason = "The member must be 18 or older.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserMustBe18OrOlderToRegister";
	break;
	
	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The first member must be a full-access member.";
		errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;
	
	case "FAU_MUST_BE_ABOVE18":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "A full-access member must be 18 or older.";
		errorID     = "urn:dece:errorid:org:dece:FullAccessUserMustBe18OrOlder";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FullAccessUserMustBe18OrOlder";
	break;
	
	case "LEGAL_GUARDIAN_REQD":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserRequiresLegalGuardianDeclared";
		errorReason = "The connected legal guardian (CLG) must be declared.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserRequiresLegalGuardianDeclared";
	break;
	
	case "CREATOR_MUST_BE_CLG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:CLGMustBeSameAsCreator";
		errorReason = "An underage member must be created by a connected legal guardian (CLG).";			       
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#CLGMustBeSameAsCreator";
	break;
	
	case "CREATOR_RESTRICTED_TO_BE_CLG":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The requesting member cannot create an underage member.";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateChildOrYouthUsers";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateChildOrYouthUsers";
	break;

	case "CLG_NOT_FOUND":
	     expectHTTPstatus   = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:LegalGuardianUserNotFound";
		errorReason = "The connected legal guardian (CLG) was not found.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#LegalGuardianUserNotFound";
	break;

	case "CLG_MUST_BE_FAU":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";		
		errorReason = "A connected legal guardian (CLG) must be a full-access member.";
		errorID     = "urn:dece:errorid:org:dece:LegalGuardianMustBeFullAccessUser";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#LegalGuardianMustBeFullAccessUser";
	break;

	case "CLG_STATUS_INVALID":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorReason = "The connected legal guardian (CLG) is not in a valid status.";
		errorID     = "urn:dece:errorid:org:dece:PendingCLGDeclaredNotInValidStatus";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#PendingCLGDeclaredNotInValidStatus";
	break;

     case "ACC_STATUS_INVALID":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountStatusNotValid";
		errorReason = "The account status is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountStatusNotValid";
	break;

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "STATUS_NOT_ALLOWED":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:ResourceStatusElementNotAllowed";
		errorReason = "The resource status element is not allowed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceStatusElementNotAllowed";
     break;

          case "DOB_NOT_CONSISTENT":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserDOBNotConsistentWithAgeOfMajorityDeclaration";
		errorReason = "The member's date of birth conflicts with the value of the AgeOfMajority attribute.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserDOBNotConsistentWithAgeOfMajorityDeclaration";
     break;

     case "AGE_OF_MAJORITY_BOOLEAN_ERROR":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:SaxParserException";
		errorReason = "cvc-datatype-valid.1.2.1: \'' is not a valid value for \'boolean\'.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#SaxParserException";
     break;

	case "DOB_DATATYPE_ERROR":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:SaxParserException";
		errorReason = "cvc-datatype-valid.1.2.3: \'' is not a valid value of union type \'DayOptionalDate-type\'.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#SaxParserException";
     break;

     case "INSUFFICIENT_PRIVILEGES":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "The user does not have permission to perform the requested action.";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;    

	
}

tC.setPropertyValue("expectHTTPstatus",expectHTTPstatus);

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
/*
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;
*/

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
/*
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
*/
//Location Header

if (httpLocationHeader) {
	 assert context.expand( '${#TestCase#httpLocation}') != null;

      def a = context.expand( '${#TestCase#httpLocation}');
      def b = a.toURL();
      def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

      if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
      	{                                
			assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
			
			int lastColon = urlStr.lastIndexOf(':');
			int lastSlash = urlStr.lastIndexOf('/');
			userid     = urlStr.substring(lastColon + 1);
			def node_User = urlStr.substring(lastSlash + 1);
			                                 
			tC.setPropertyValue("NODE_USER_ID",userid);
			
			tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
//			tC.setPropertyValue("NODE_USER_ID_FULL2",node_User);
      	} 
      else 
      	{
			assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");
			int lastColon = urlStr.lastIndexOf('%3A');
			int lastSlash = urlStr.lastIndexOf('/');
			userid     = urlStr.substring(lastColon + 3);
			def node_User = urlStr.substring(lastSlash + 1);
			                      
			tC.setPropertyValue("NODE_USER_ID",userid);
			
			tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
//			tC.setPropertyValue("NODE_USER_ID_FULL2",node_User);
      	}
                                
} else 
	{
       	assert context.expand( '${#TestCase#httpLocation}') == "";
	}





//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		log.info "Errorlink from Coord : " + myXML.Error.ErrorLink.toString();
		log.info "Errorlink  expected" + errorLink;
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract_Account_OID_and_User_OID" id="21b256c3-ed29-4524-b089-ee04998dee55"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def dbUser;

def expectHTTPstatus = tC.getPropertyValue("expectHTTPstatus");

if (expectHTTPstatus == "HTTP/1.1 201 Created")
     {
		def dBHost = context.expand( '${#Project#targetsystem}' )
		
		try          {
		                dbUser = new dbUtils.dbUser(log,dBHost);
		                }
		catch(Throwable e) {
		                log.info "ERROR - dbUtils.dbUser - $e";
		                assert 1 == 2;
		                }
		finally {
		         try {
		                String u = dbUser.userGetUserOID(tC.getPropertyValue("UserName").toLowerCase());
		                String a = dbUser.userGetAccountOIDbyUsername(tC.getPropertyValue("UserName").toLowerCase());
		
		                 assert u.length() > 0;
		                 assert a.length() > 0;
		                 
		                 tC.setPropertyValue("user_oid", u);
		                tP.setPropertyValue("account_oid", a);
		                }
		          catch(Throwable e) 
		          	{
		                 log.info "ERROR - dbUtils.userGetUserOID - $e";
		                 assert 1 == 2;                     
		          	}
		}
     }
     else
     {
     	log.info ("Can not retreive User_OID for a negative scenario");
     }
     

</script></con:config></con:testStep><con:testStep type="groovy" name="Return the NodeAccountId and NodeUserId to the Calling Test Case" id="923bc11c-f566-44fd-b0d4-223472578b8b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("UserName",tC.getPropertyValue("UserName"));
callTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID"));
callTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
callTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid"));

//callTC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//callTC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL2"));
//callTC.setPropertyValue("UserName2",tC.getPropertyValue("UserName"));
//callTC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));

callTC.setPropertyValue("ADULT_DOB_XML",tC.getPropertyValue("ADULT_DOB_XML"));
callTC.setPropertyValue("YOUTH_DOB_XML",tC.getPropertyValue("YOUTH_DOB_XML"));
callTC.setPropertyValue("CHILD_DOB_XML",tC.getPropertyValue("CHILD_DOB_XML"));
callTC.setPropertyValue("DateOfBirth",tC.getPropertyValue("DateOfBirth"));</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Validate_Response" disabled="true" id="0ae30dfa-cf71-4832-b3eb-6f8c3f9ca779"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "Keep-Alive";

String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#nodeIdRetailerforDeviceAuthToken}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#nodeIdRetailerforDeviceAuthToken}' );
}
if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The supplied country code is invalid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code cannot be null.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "API call not authorized";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:UserNotActive";
	errorReason = "User is not active";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

		case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The user does not have permission to create a full-access user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The user does not have permission to create a user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
			expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBe18OrOlder";
			errorReason = "First User must be 18 years or older";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBe18OrOlder";
	break;


	case "NO_MNG_ACC_CNST":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
			errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The first user in a household account must be a full-access user.";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;
	
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
/*
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
*/
//Location Header

if (httpLocationHeader) {
	 assert context.expand( '${#TestCase#httpLocation}') != null;

      def a = context.expand( '${#TestCase#httpLocation}');
      def b = a.toURL();
      def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

      if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO"){
                                
         assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
         
         int lastColon = urlStr.lastIndexOf(':');
         int lastSlash = urlStr.lastIndexOf('/');
         userid     = urlStr.substring(lastColon + 1);
         def node_User = urlStr.substring(lastSlash + 1);
                                           
         tC.setPropertyValue("NODE_USER_ID",userid);

         tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
         tC.setPropertyValue("NODE_USER_ID_FULL2",node_User);
      } else {
         assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");
         int lastColon = urlStr.lastIndexOf('%3A');
         int lastSlash = urlStr.lastIndexOf('/');
         userid     = urlStr.substring(lastColon + 3);
         def node_User = urlStr.substring(lastSlash + 1);
                                
         tC.setPropertyValue("NODE_USER_ID",userid);

         tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
         tC.setPropertyValue("NODE_USER_ID_FULL2",node_User);
      }
                                
} else {
                                
       	assert context.expand( '${#TestCase#httpLocation}') == "";
}





//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:properties><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-08</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E5A158E8FAED7930E0401F0A0599188B</con:value></con:property><con:property><con:name>coordinatorSchema</con:name><con:value>${#Project#coordinatorSchema}</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE19F934C4E6BFA99E0401F0A05993DA2</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE19F95D7CFC268C9E0401F0A079952C9</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>seconduser20130905_04010</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/07/Account/urn:dece:accountid:org:dece:E5A158BFEF210675E0401F0A07992D42/User/urn:dece:userid:org:dece:E5A158BFF59C0675E0401F0A07992D42</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/RET_concat.pem</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5A158BFEF210675E0401F0A07992D42</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E5A158BFEF210675E0401F0A07992D42</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E5A158BFF59C0675E0401F0A07992D42</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E5A158E8FAED7930E0401F0A0599188B</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5A158BFF59C0675E0401F0A07992D42</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E56665ABC808DB00E0401F0A07993371</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML2</con:name><con:value>SAML2 Assertion=null</con:value></con:property><con:property><con:name>SecondUserName</con:name><con:value>username_20130122_043244</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Create_GeoProfile</con:value></con:property><con:property><con:name>StandardUserName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>seconduser20130905_04010</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00033_UserCreate_AUTH_Creator_ADULT_Full_New_CHILD_Standard_201_CREATED_P1</con:value></con:property><con:property><con:name>UC_RequestBody_Mandatory</con:name><con:value/></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>UserName</con:name><con:value>seconduser20130905_04010</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5A158BFF59D0675E0401F0A07992D42</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-07</con:value></con:property><con:property><con:name>expectHTTPstatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5ff78eb3-d79f-4f4a-b9a8-5ec1c84f61c0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3d78db1c-105b-43a0-b406-6bb0f690c833</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662fb201-c4e7-401c-b10a-548ea13f5020</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f23d9bb0-0bd1-4723-928b-a9c1d99c147f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95f3189f-715e-4cef-bc91-14a1b4138b68</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateTOU_API" searchProperties="true" id="16c677b6-f520-424c-859c-233d39f17e8a"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="8529cb5b-1043-4fe4-a63c-7ff5f749fedd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

tC.setPropertyValue("expectErrType","SUCCESS");

if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
{
	tC.setPropertyValue("Policy_Class", "urn:dece:type:policy:TermsOfUse");
}
else
{
	tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:TermsOfUse", "UTF-8"));
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Set_TOU_Policy_Resource" id="919c3211-3cd2-4563-b11c-61993686b63e"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

String country = context.expand( '${#Project#Country}' );
def tOUUrl = context.expand( '${#Project#TOUUrl}' )

def touForCountry = "TOU_"+country
def consent_Version =  tP.getPropertyValue(touForCountry);

tP.setPropertyValue("policy_TOU",'https://'+ tOUUrl + '/Consent/Text/' + country + '/urn:dece:type:policy:TermsOfUse:' + consent_Version + '/html');

log.info "Policy TOU from Project level property " + tP.getPropertyValue("policy_TOU");</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="446919ce-41e2-4eb0-ae99-0dc6a9ebe7fc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("Policy_Create_TOU");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="Policy_Create_TOU" id="6716b347-39c7-4087-ac06-f4151b9859a2"><con:settings/><con:config service="Policy_Create" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="Policy_Create_User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Policy_Create_TOU" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="RET_concat.pem" id="c8d61b5f-4f4b-48b6-be36-bb124eb1ecb9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd"  xmlns:dece="${#Project#coordinatorSchema}"  xmlns:ds="http://www.w3.org/2000/09/xmldsig#"  xmlns:md="http://www.movielabs.com/md"  xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <dece:Policy>
    <dece:PolicyClass>urn:dece:type:policy:TermsOfUse</dece:PolicyClass>
    <dece:Resource>${#Project#Policy_TOU}</dece:Resource>
    <dece:RequestingEntity>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_REQ_ENTITY}</dece:RequestingEntity>
    <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
    <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_CREATED_BY}">
        <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
    </dece:ResourceStatus>
  </dece:Policy>
</dece:PolicyList>]]></con:request><con:originalUri>https://qa1.p.uvvu.com/rest/2015/02/Account/urn:dece:accountid:org:dece:16ACF97A7BB418ACE05305991F0A9199/User/urn:dece:userid:org:dece:16ACF97A7BC018ACE05305991F0A9199/Policy/urn:dece:type:policy:TermsOfUse</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="7500bbfc-112f-46fc-94b6-0bcbdf9cc744">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('Policy_Create_TOU');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                             contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);



tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="b87345d2-f2c4-4d7f-a05a-2dbf77ae994b">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D12F2DD48A10D559E0401F0A059918B0/User/urn:dece:userid:org:dece:D12F2DD48A1ED559E0401F0A059918B0/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa1.q.uvvu.com/rest/2015/02/Account/URN:DECE:ACCOUNTID:ORG:DECE:17C238D6B5F7B315E0533E991F0A5B6C/User/URN:DECE:USERID:ORG:DECE:17C238D6B651B315E0533E991F0A5B6C/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">17C238D6B5F7B315E0533E991F0A5B6C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17C238D6B5F7B315E0533E991F0A5B6C</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4E99389111664AEE0401F0A07990AF6</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E4E99389111664AEE0401F0A07990AF6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:17C238D6B651B315E0533E991F0A5B6C</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZWwZ24ArUMVlyHgn5AJJNuFlSpEbEDGSY8lc8vUrGfAAIVl2n1zdbnWfvuioLwSex07QEgJSSTkrreYxE0GubRhZygKOBRUBw3MQgSTBsNW/CpyyHeDdEaMUdhvG76pXiRy/XjVt/OKYLrIjszYGZGJwAYjvv6Cap0yFyCBkQmImG4ZjI8+0fdP27u1a4FUDB5XrnjcySo+QCuVbmZRtYwtqJRrGVMoksKzlclleVso8nViObSPrqX81JFOYY6N5sckoD5Q2t/akHAGBOCZlwufWhXVgcxGJYEgnDMsshW2s6LNYtmXXLWUTCTr5ZhRnIQrZmOdiBzPOKMExfce6Pn2QUx6VWvGEp1RO558mgWzt2IQVMQly2TfDOoR2pqMDhKnApphitPU1gDGkwAiUHgZhw/h2Xtfyo/cpZmLM07k4FP8bHmALiHkCkSl2aW2hne/wRKWaF0CCkJE4E3QB13pYE0xAbLsJ5HxXpdsUxnR1RYUa0JXQ6Kx9eEfiphpdOgEh/0+D9pqzcfKI4wya9adueDe7tOPxc/Lw3nVvXdnx+9ffn73nRg5g3zhXFK3diEdDWQzR5sTMfehXZ0vP79zW1jcVB/dQ1JZ0+VCZfpdV769fS2uI2qOex2/qdc/u3sjrv1v9YU2u358u/WfeW41e+z327sVi9FzzrgZ3wn7EldeRqD2+zLruG/KTqTW6dX7Ben2X0btR+BMt17b/NLt/mf0cLJ/GwEeDZftqcQnIgqqctdy2W/350Ht86g5HU3Xy8rUajoZho0hnD/+hbnfnh9nLDIjciXoMwm6pp7qE5ddkpjU0Mse5aZBo8hESmDSa+pTmjiBTdEejQPVwI6Nqx6nUun7b91C7grwftlep/KjXUc9ueW2/syOZDYojiB3OxlTH0pS7GZuvAZJ5IIBFkJoLnimmE8YXHrtY4lLIBuoScCbgnit6RoKvoro7qawndR+lyWxKV7N6Ml0sjdI1lzfsJm2NJaQHpIzQASkPgNCEgmZuPdhCTbaQqhhveJHJGJUXuMwgU9yeapoNHLfmWYLOkxg0VGvOoyyGcjJN8tJYYvN1TExErh38uM+v26eJHf/b1UDZRFQbCJ1LG1Qf4cTrgnaJfJ6wu5/wzn0ri6i+WaqgMqVkg+Tw15850QNSDInK6Hdn+BvtcBfmZx//eNL6ApR1XI8iULSge2F3b7d6BRRvNHfdfMOo/FbOFossb6DrVqxUubd0hSzbsYZAMsVs63v+CswqvFhnPSMF8KPghf4QYianbCixhLkauFIunrE3DEHovSFUV2V17lJyEFKVTsJKntJ1YrXzaMRfrkUkINpOqW/VZ8nT6E/HTvjai6PyVGuDpGyiJf2ErD+ZC8KVW6rIj6f7zk85OBX8UFkUucAi1UC9ZBI+/1PSrNYwMCE8YzLsGrlin2lznHKdQPDH6IObnMyL7Y7++3pn0nwECKidUNDcv36kA30F2GSPrbdBTxK216t+RdiH6Jof1B81e3U6nvHmPw==</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Update_Access_NonCS</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00005_UserUpdate_FUNC_NonCS_Full_Update_UserName_Others</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID_REQ_ENTITY</con:name><con:value>17C238D6B651B315E0533E991F0A5B6C</con:value></con:property><con:property><con:name>NODE_USER_ID_CREATED_BY</con:name><con:value>17C238D6B651B315E0533E991F0A5B6C</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bd6efb96-bbf3-4226-9917-48245caf20c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>919c3211-3cd2-4563-b11c-61993686b63e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateCLGAttestation" searchProperties="true" id="69fd4170-842f-452d-b5ba-2a3dcb222763"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="a5828f94-cccc-4748-9dad-1efb5f772df6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

tC.setPropertyValue("expectErrType","SUCCESS");

if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
{
	tC.setPropertyValue("Policy_Class","urn:dece:type:policy:CLGAttestation");
}
else
{
	tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:CLGAttestation", "UTF-8"));
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="6f62f720-8990-433e-b87f-e5bfb4b7fa27" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

//tC.setPropertyValue("Policy_Class", "urn:dece:type:policy:CLGAttestation");


</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="bff094a4-b826-48e4-aaae-7d970bff9b8f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreate_CLGAttestation");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreate_CLGAttestation" id="da6450e5-2ac6-49ec-9c68-d4d4c1a9849d"><con:settings/><con:config service="Policy_Create" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="Policy_Create_User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreate_CLGAttestation" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="RET_concat.pem" id="b71e846e-1fb9-4ae0-badf-968738d7edf4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd"  xmlns:dece="${#Project#coordinatorSchema}"  xmlns:ds="http://www.w3.org/2000/09/xmldsig#"  xmlns:md="http://www.movielabs.com/md"  xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <dece:Policy>
    <dece:PolicyClass>urn:dece:type:policy:CLGAttestation</dece:PolicyClass>
    <dece:Resource>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_CHILD}</dece:Resource>
    <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
    <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}">
        <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
    </dece:ResourceStatus>
  </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="93dd1a0e-f2c8-4cae-82ad-da0987ba710a">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreate_CLGAttestation');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                             contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);



tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="0670088e-40ce-4e40-85cd-2ab7e3bb76d5">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSx1XIhZRcVJAol116WtoCvey+VMaZgNvEobETLr/+2KGhQGkPeyQk5Ml45puZz599zlAcWX6TMUg5SajSa9fVZzcYIzuouZqDTE+zLdfR3LHtajCuVbGHHYydM1XpMZZBjzKOKK+rlmHamlHTTHdk2H7V9k2jYhreH1V5gJSJ0MKlYqjKIo4o84u0dTVLqZ8gRphPUQzM59gfNq+vfOHpoxKT2jhfoywSpo0p5zNf13ElAAxRhCs4ifVzfcfnPGD+kEwo4lkK7zkDVlff987n88q8WknSiW4ZhqEbni58AkYmp2rjpNwMQY+GyXrdQjShBKOIrJAEdQ18mgRKM5okKeHT+IvQpm4aMrQGC6xh06anqv6RoEB3ZKQdkClDGpsisww2gBBSoBiU+0Gvrp4eN8H13lGKKAuTNGZ767+DBDSHKJlBoLGyshLd8REPtKtxDtjvURxljOTQlzSZIQxMuU0hJIsrwgT5AqYU41cWTPxIyTLAfzOWc30bq4CuH+hOm0yA8f8zs+15raM8oCiDxqg1bv3KkzB6YffuaOXlj0+jZv96sDCTegFh23kNajPu9/U+WTfcet9EXow5zfTJz2rIU3a57F+vFvok/xE6FxeDZrdvvS76o9Xc/NMjncfbkUmc5T/h4len5dyEYdd4dJfcnJ7d9ZtxrXMypoJSgetG/MqMu5bbreZhdTJ8es28S2g/3V0+rB6uhsv+mOg/HgeM2nduzbhCPy9vfg9+42knfTXYIzOY/YDDE+/6p+3eNy/N1aRlgnfm8E79o6btGnaNpSQMs/ELYF4uJT16baUr5oX49/IiLSTQwsLVn0mNYhwoVxtyl5QWPxMCRAJfDHO97rbMs1q11uoalmfZXrdj2IbZNZqG43k1p3ZRatAaxR7EVkJDInNJlV3z53uAOPYZ0ABSLU8yPAWmfhOxjThSenQgDkdCGYwSoeKsyufma+5FS3BraGVOxk7ohmGqKv2E39CbtBlySHeV29lR7gFgMiMg5V3ymwmCMy5a8YbyjEdmJUcVCpm4AFKpwb5lu2c6I/EsAglUj5Mgi6Aym86Kxuhs/W9pCLPCOuiMinP3ZVn738oOCJ+ASAcma7kAMUU4cAUZZSFfFmwa2wWX4ZtZQOTxEu3kKcFrJLufPlgi6bGhiKjouTV8NkvcG/ejt3/eqX8DSt/vxyZRkJOttOVdKq4HIR6NcppvqPJWyfI8K+bnSGFMRXhd6KOpDwFnQt2Wo+QVqL4JoR91uWxQ72Xe2HfxZXxKhxxxiAXblGJ5xMtiCEy+LHrilCyOfbbspBR947Dgh2ytSDxAJOJv3yjYx9JPmG/F3zxJg49xHYi1lUfUKZ4TnNCJXMlrZPkFKXAiwhKhe0m6HfxQgEPJd42bJm+wcMGmccbh6y+KFLS6ijBOMsp7bbUwbItsgZMvZ+B/OH0KUwj5+828YF/ezE/XV0MhdzFSN77kv501UtAFgyofAAWWuroQD02RnE62RP0d4Cddr1nuRbtrWW7N2tZ1x7A2ur5bSeOT+bNlq6f756HxLw==</con:value></con:property><con:property><con:name>tName</con:name><con:value>Child_User_Create_STS_Policies</con:value></con:property><con:property><con:name>sName</con:name><con:value>Child_User_Create_API</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E48705C62976FCB4E0401F0A079971D7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D12F2DD48A10D559E0401F0A059918B0/User/urn:dece:userid:org:dece:D12F2DD48A1ED559E0401F0A059918B0/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/11/Account/urn:dece:accountid:org:dece:FC156628BDF22862E0401F0A0799702B/User/urn:dece:userid:org:dece:FC1565BA1C6F077DE0401F0A07997011/Policy/urn:dece:type:policy:CLGAttestation</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn:dece:type:policy:CLGAttestation</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/RET_concat.pem</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:FC1565BA1C6F077DE0401F0A07997011</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC156628BDF22862E0401F0A0799702B</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E486FC50804D1AE5E0401F0A05991EF2</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E2E22E83505CC024E0401F0A0599357E</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC15636CF029249FE0401F0A0799676B</con:value></con:property><con:property><con:name>CHILD_NODE_USER_ID</con:name><con:value>E2E25B1DF5BEDD19E0401F0A07991448</con:value></con:property><con:property><con:name>NODE_USER_ID_CHILD</con:name><con:value>FC1565BA1C6F077DE0401F0A07997011</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bd6efb96-bbf3-4226-9917-48245caf20c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyGet" searchProperties="true" id="23d09377-9e3c-47e0-92cd-8d7e2ed8d6fd"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="3f9a5121-1ba4-4ce7-9098-b2a7278fb180"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("ENCODED_NODE_USER_ID",null);
tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("SAML",null);
tC.setPropertyValue("expectErrType",null);
tC.setPropertyValue("policyCLASS",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="21cf2586-d1ed-4fdc-832a-472a816d6528"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("NODE_USER_ID",callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID",callTC.getPropertyValue("NODE_ACCOUNT_ID"));
if (tP.getPropertyValue("versionMinor")=="06" || tP.getPropertyValue("versionMinor")=="07"){
	
			tC.setPropertyValue("ENCODED_NODE_USER_ID", URLEncoder.encode("urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"), "UTF-8"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			log.info ""+URLEncoder.encode("urn:dece:type:policy:"+callTC.getPropertyValue("POLICY_CLASS"), "UTF-8");
			tC.setPropertyValue("policyClass",URLEncoder.encode("urn:dece:type:policy:"+callTC.getPropertyValue("POLICY_CLASS"), "UTF-8"));
			
			
			}else{
				tC.setPropertyValue("ENCODED_NODE_USER_ID", "urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			tC.setPropertyValue("policyClass","urn:dece:type:policy:"+callTC.getPropertyValue("POLICY_CLASS"));
			}

tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));
tC.setPropertyValue("expectErrType",callTC.getPropertyValue("PolicyGetResponseType"));


if (tC.getPropertyValue("expectErrType") == null ||
	tC.getPropertyValue("expectErrType") == "") {
		tC.setPropertyValue("expectErrType","SUCCESS");
}




</script></con:config></con:testStep><con:testStep type="groovy" name="Set Pem" id="eaa96ed5-3cca-4156-8a09-c54bea8b60f0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("Policy Get");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="Policy_Get" id="389957f2-2644-4f4d-9932-dab29dae6557"><con:settings/><con:config service="Policy_Create" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="Policy_Create_User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Policy_Get" mediaType="application/xml" postQueryString="false" id="5f69bee2-aa40-4fda-8c93-343b49e4a52e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="3764bed9-292d-4b3e-8638-5dd84e1225de">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('Policy Get');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                                contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);



tC.setPropertyValue("httpContentLocation", contentLocation);


 </script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="3bb99271-32ca-4459-9ddc-4ca05ee135c6">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def XMLbody    = tC.getPropertyValue("XMLbody");
def httpStatus = tC.getPropertyValue("httpStatus");

String policyWasFound = "false";
String xmlPolicyClass = "";
String tcPolicyClass  = tC.getPropertyValue("policyClass");

/*
*  We can assume that if we get returned an HTTP status 
*  of 'HTTP/1.1 200 OK' the policy was found.  However,
*  it is never a bad idea to doublecheck.
*/

/*
*  The body should not be null...something should be
*  there.
*/
assert XMLbody.size() > 0;

if (XMLbody != null) {
                def myXML = new XmlSlurper().parseText(XMLbody);

                xmlPolicyClass = myXML.Policy[0].PolicyClass.text();
}

log.info "xmlPolicyClass [$xmlPolicyClass] - tcPolicyClass[$tcPolicyClass]";
                                
if (httpStatus == "HTTP/1.1 200 OK" || xmlPolicyClass == tcPolicyClass) {
                policyWasFound = "true";
                def PolicyID = context.expand( '${#TestCase#XMLbody#declare namespace ns1=\'http://www.decellc.org/schema/2013/10/coordinator\'; //ns1:PolicyList[1]/ns1:Policy[1]/@PolicyID}' )
                log.info "================="+PolicyID
                tC.setPropertyValue("PolicyID",PolicyID);
}


tC.setPropertyValue("policyExists", policyWasFound);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Return policyId" id="db2d7a86-6720-4405-a764-6b8d396ae082"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("PolicyID",tC.getPropertyValue("PolicyID"));

</script></con:config></con:testStep><con:properties><con:property><con:name>NODE_USER_ID</con:name><con:value>D84127385A77AB9FE0401F0A0799779D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>D841235B02690A67E0401F0A05995219</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>7600</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>POLICY_ID</con:name><con:value/></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_ 20008 - SAMLExchange - retailer - saml2 - FORBIDDEN - Active full user - with deleted ULC</con:value></con:property><con:property><con:name>sName</con:name><con:value>STS Create and SAML Exchange - FUNC</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 404 Not Found</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>837</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AUserLinkConsent</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<PolicyList xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Policy PolicyID="urn:dece:policyid:org:dece:D8412DEC2C19E6E5E0401F0A059962B6">
      <PolicyClass>urn:dece:type:policy:UserLinkConsent</PolicyClass>
      <Resource>urn:dece:userid:org:dece:D84127385A77AB9FE0401F0A0799779D</Resource>
      <RequestingEntity>urn:dece:org:org:dece:7600</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreatedBy="urn:dece:userid:org:dece:D84127385A77AB9FE0401F0A0799779D" CreationDate="2013-03-19T05:14:46.000Z">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
</PolicyList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>952</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyExists</con:name><con:value>true</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD84127385A77AB9FE0401F0A0799779D</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD841235B02690A67E0401F0A05995219</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\ISC_Nodes\7600.pem</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>urn:dece:policyid:org:dece:D8412DEC2C19E6E5E0401F0A059962B6</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5935459c-5982-4cb1-9974-1d4d88038a65</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9bbb88e5-07dd-4d4f-ba3c-1c734ce9be3a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyDelete" searchProperties="true" id="853b66b1-2855-4d93-8f16-0c0514cd932e"><con:settings/><con:testStep type="groovy" name="Set Pem" id="6a0df690-63bf-4b9c-ae59-c6c2ff9420bf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("Policy Delete");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="17df3acf-9f74-4983-9c2c-7ca80c9272ea">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def tStep  = tC.getTestStepByName('Policy Delete');

/*
*  Get the HTTP headers
*/
def status = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];

log.info status[0];
log.info contentLocation;
log.info connection[0];
log.info contentType[0];
log.info contentLength[0];

tC.setPropertyValue("status",status[0]);
tC.setPropertyValue("contentType", contentType[0]);
tC.setPropertyValue("contentLength", contentLength[0]);
//tC.setPropertyValue("contentLocation", contentLocation[0]);

if (contentLength[0].toInteger() > 0) {
	rawResp = new ByteArrayOutputStream();
    def rawResp = tStep.httpRequest.response.getRawResponseData();
     strVal  = new String(rawResp);
      log.info strVal[0];

    int startAssert = strVal.indexOf("&lt;?xml version=\"1.0\" ");

	String XMLbody  = strVal.substring(startAssert, strVal.size());
     
	tC.setPropertyValue("XMLbody", XMLbody);
}</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers and save assertion" id="3d442766-d852-4dda-8d00-1ca77ae70830">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
def expectErrType = tC.getPropertyValue("expectErrType");
log.info(expectErrType);
def XMLbody       = tC.getPropertyValue("XMLbody");

boolean dobodyXML = true;
boolean doContentTypeHeader = true;
boolean doConnectionClose = false;
boolean doContentLocaton  = true;
boolean contentLengthZero = false;

String errorID     = "";
String errorReason = "";
String errorLink   = "";
String expectHTTPstatus = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";

if (expectErrType == "") {
	expectErrType = "SUCCESS";
}

this.log.info "expectErrType is $expectErrType";
switch (expectErrType) {
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 200 OK";
		expectHTTPcontenttype = "application/xml";
		contentLengthZero = true;
		doContentLocaton  = false;
		dobodyXML = false;
		
	break;
	case "FORBIDDEN":
	default:
		errorReason = "assertion_not_found";
		errorID = "urn:dece:errorid:org:dece:securitycontext:unauthorized";
		errorLink = "https://qa.q.uvvu.com:7001/deceerrors/error/error_response.html";
		orgRequest = "";
		doContentLocaton  = false;
		dobodyXML = true;
	break;
}

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("status");
assert tC.getPropertyValue("status") == expectHTTPstatus;

// Connection

if (doConnectionClose) {
	this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("connection");
	assert tC.getPropertyValue("connection") == expectHTTPconnection;
}


//Content-Length
/*if (contentLengthZero) {
	//assert tC.getPropertyValue("contentLength").toInteger() == 0;
} else {
	//assert tC.getPropertyValue("contentLength").toInteger() > 0;
}
	

if (doContentTypeHeader) {
	assert tC.getPropertyValue("contentType") == expectHTTPcontenttype;
}

// Content-Location
if (doContentLocaton) {
	assert tC.getPropertyValue("contentLocation") != null;
	
	def b = tC.getPropertyValue("contentLocation").toURL();
	assert b.getPath().matches("");
	def parms = b.getPath().split("/");
	
	tC.setPropertyValue("assertionUUID",parms[parms.size() - 1]);
} else {
	assert tC.getPropertyValue("contentLocation") == null;
}

if (dobodyXML) {
	if (XMLbody.length() > 0) {
		def myXML = new XmlSlurper().parseText(XMLbody);

		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode: Expect[$errorID] Received: " + myXML.Error.@ErrorID.toString();
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason: Expect[$errorReason] Received: " + myXML.Error.Reason.toString();
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorReason: Expect[$errorLink] Received: " + myXML.Error.ErrorLink.toString();
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} else {
		return false;
	}
} */</script></con:config>
      </con:testStep><con:properties><con:property><con:name>NODE_USER_ID</con:name><con:value>D84127385A77AB9FE0401F0A0799779D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>D841235B02690A67E0401F0A05995219</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>POLICY_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:policyid:org:dece:E617180F360A7374E0401F0A05995FE1</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00011_US_UserGet_FUNC_YOUTH_SAU_Get_CHILD_Blocked_tou_P2</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Get_GeoProfile</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 404 Not Found</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>765</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD84127385A77AB9FE0401F0A0799779D</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD841235B02690A67E0401F0A05995219</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>urn%3Adece%3Apolicyid%3Aorg%3Adece%3AD8412DEC2C19E6E5E0401F0A059962B6</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:/certs/RET_concat.pem</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E6170EEF63CD2F20E0401F0A05994E39</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ErrorList xmlns="http://www.decellc.org/schema/2013/06/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
    <Error ErrorID="urn:dece:errorid:org:dece:Policy:PolicyNotFound">
        <Reason Language="en">The policy was not found.</Reason>
        <OriginalRequest>https://qa.p.uvvu.com:7001/rest/1/07/Account/urn:dece:accountid:org:dece:E6170EEF63CD2F20E0401F0A05994E39/Policy/urn:dece:policyid:org:dece:E617180F360A7374E0401F0A05995FE1</OriginalRequest>
        <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/07/error/en/ErrorList.html#Policy:PolicyNotFound</ErrorLink>
    </Error>
</ErrorList>
]]></con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetPem" searchProperties="true" id="9eefa1a9-efcc-493d-a73f-76683cebfde6"><con:settings/><con:testStep type="groovy" name="Set Pem" id="6512c4b0-42ef-4467-b104-ffa33eace57b"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import org.apache.commons.lang.SystemUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def projectPath = groovyUtils.projectPath

def eNV = context.expand( '${#Project#ENV}' )

def propertiesPath = null;

if (System.properties['os.name'].toLowerCase().contains('windows')) 
	{
    		log.info "it's Windows OS!!";
    		File temp = new File( projectPath + "\\..\\..\\..\\Properties\\");
    		propertiesPath = temp.getCanonicalPath();
	} 
else 
	{
    		log.info "it's Linux OS!!";
    		File temp = new File(projectPath + "/../../../Properties/");
    		propertiesPath = temp.getCanonicalPath();
	}
	
log.info("Properties File Location : '" + propertiesPath+ "'");




def propMap=[:]
BufferedReader reader = new BufferedReader(new FileReader(propertiesPath + "/" + eNV +"project.properties"));

String line;
while ((line = reader.readLine()) != null)
      {
	       if (line.trim().length()==0) continue;
	       if (line.charAt(0)=='#') continue;
	
	       int delimPosition = line.indexOf("=");
	       String key = line.substring(0, delimPosition-0).trim();
	       String value = line.substring(delimPosition+1).trim();
	       propMap.put(key, value);
      }


if (System.properties['os.name'].toLowerCase().contains('windows')) 
      {
            log.info "it's Windows OS!!!";
            File temp = new File( projectPath + "\\..\\..\\..\\Certs\\" + eNV + "\\");
    		  certPath = temp.getCanonicalPath();      
      } 
else 
      {
            log.info "it's Linux OS!!!";
            File temp = new File(projectPath + "/../../../Certs/" + eNV + "/");
    		  certPath = temp.getCanonicalPath();
      }  
      
 log.info("Cert path: " + certPath );  
                  
def nodeId = context.expand( '${#TestCase#nodeid}' )

log.info "nodeId: "+nodeId;

 if (nodeId == "dece:cs")
       {
             nodeId = "dececs";
       }
 else if (nodeId == "coord:cs")
       {
             nodeId = "coordcs";
       }
 else
       {
             nodeId = nodeId;
       }


//log.info "~~~~~~~~~~~~" +nodeId
boolean imFine = true;
def pwd = null;
def certMatchesNodeID = context.expand( '${#Project#CertMatchesNodeID}' )
log.info("CertMatchesNodeID : '" + certMatchesNodeID + "'");
if (certMatchesNodeID == "YES")
{
		File f1 = new File(certPath+"/"+nodeId + "_concat.pem");
		File f2 = new File(certPath+"/"+nodeId + ".jks");
		File f3 = new File(certPath+"/truststore-"+nodeId + ".jks");
		File f4 = new File(certPath+"/"+nodeId + ".pem");

		log.info("F1 : '" + f1.getPath()+ "'");
		log.info("F2 : '" + f2.getPath()+ "'");
		log.info("F3 : '" + f3.getPath()+ "'");
		log.info("F4 : '" + f4.getPath()+ "'");
	
	// sets the certificate from the specific folder when the certname and NodeId are same
	  if(f1.exists()) 
             {
                   keyStorePath = certPath+"/"+nodeId + "_concat.pem";
                   pwd = "123"
                   log.info("F1 file exists!!!");
                   log.info("keyStorePath : '" + keyStorePath + "'");      
             }
	  else if(f2.exists())
             {
                  	keyStorePath = certPath+"/"+nodeId + ".jks";
                   	pwd = "abcd1234" 
                   	log.info("F2 file exists!!!");
                   log.info("keyStorePath : '" + keyStorePath + "'");          
             }
	  else if(f3.exists())
             {
                  	keyStorePath = certPath+"/truststore-"+nodeId + ".jks";
                   	pwd = "12elma";
				log.info("F3 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");
             }
	  else if(f4.exists()) 
             {
                   	keyStorePath = certPath+"/"+nodeId + ".pem";
                   	pwd = "123";
                   	log.info("F4 file exists!!!");
                   log.info("keyStorePath : '" + keyStorePath + "'");       
             }
	  else
             {
                  	log.info "No cert file is Found!!!";
                  	imFine = false;
             }
}
else
{
	//to get the certificate name from another property based on the nodeid property.
		
	
       def value = propMap.find{ it.value == nodeId }?.key
       def certName = testProject.getPropertyValue(value+"_cert");       
       log.info "cert name .... " + certName;

		File f1 = new File(certPath+"/"+certName + "_concat.pem");
		File f2 = new File(certPath+"/"+certName + ".jks");
		File f3 = new File(certPath+"/truststore-"+certName + ".jks");
		File f4 = new File(certPath+"/"+certName + ".pem");

		log.info("F1 : '" + f1.getPath()+ "'");
		log.info("F2 : '" + f2.getPath()+ "'");
		log.info("F3 : '" + f3.getPath()+ "'");
		log.info("F4 : '" + f4.getPath()+ "'");      
		     
       if(f1.exists()) 
             {
             		
				keyStorePath = certPath+"/"+certName + "_concat.pem";
				pwd = "123";
				log.info("F1 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");     
             }
       else if(f2.exists())
             {
				keyStorePath = certPath+"/"+certName + ".jks";
				pwd = "abcd1234";
				log.info("F2 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");           
             }
       else if(f3.exists())
             {
                  	keyStorePath = certPath+"/truststore-"+certName + ".jks";
                   	pwd = "abcd1234";
                   	log.info("F3 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");
                   	         
             }
       else if(f4.exists()) 
             {
				keyStorePath = certPath+"/"+certName + ".pem";
				pwd = "123";  
				log.info("F4 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");     
             }
       else
			{
			log.info "No cert file is Found!!!";
			imFine = false;
			}                             
}


if(imFine)
{
      def callTSname = testCase.getPropertyValue("sName");
      def callTCname = testCase.getPropertyValue("tName");
      
      def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
      
      callTC.setPropertyValue("keyStorePath","$keyStorePath");
      testCase.setPropertyValue("keyStorePath","$keyStorePath");
      
      SoapUI.settings.setString( SSLSettings.KEYSTORE, keyStorePath );
      SoapUI.settings.setString( SSLSettings.KEYSTORE_PASSWORD, pwd);
      log.info 'pwd='+pwd
}

assert imFine == true;
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set Pem" disabled="true" id="df4a47e1-8d15-4db1-a8f8-91c78059650a"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String nodeId = testCase.getPropertyValue("nodeid");

log.info "nodeId: "+nodeId;

if (nodeId == "dece:cs")
	{
		nodeId = "dececs";
	}
else if (nodeId == "coord:cs")
	{
		nodeId = "coordcs";
	}
else
	{
		nodeId = nodeId;
	}
String certPath = testProject.getPropertyValue("certPath");

File f1 = new File(certPath+"/"+nodeId + "_concat.pem");
File f2 = new File(certPath+"/"+nodeId + ".jks");
File f3 = new File(certPath+"/truststore-"+nodeId + ".jks");

boolean imFine = true;

if(f1.exists()) 
	{
		keyStorePath = certPath+"/"+nodeId + "_concat.pem";
		pwd = "123"	
	 }
 else if(f2.exists())
	 {
	 	keyStorePath = certPath+"/"+nodeId + ".jks";
		pwd = "abcd1234"	
	 }
 else if(f3.exists())
	 {
	 	keyStorePath = certPath+"/truststore-"+nodeId + ".jks";
		pwd = "abcd1234"	
	 }
 else
	 {
	 	log.info "Error!";
	 	imFine = false;
	 }


if(imFine)
{
	log.info "keyStorePath: "+keyStorePath;
	def callTSname = testCase.getPropertyValue("sName");
	def callTCname = testCase.getPropertyValue("tName");
	
	def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
	
	callTC.setPropertyValue("keyStorePath","$keyStorePath");
	
	SoapUI.settings.setString( SSLSettings.KEYSTORE, keyStorePath );
	SoapUI.settings.setString( SSLSettings.KEYSTORE_PASSWORD, pwd);
	log.info 'pwd='+pwd
}

assert imFine == true;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">RET</con:value></con:property><con:property><con:name>tName</con:name><con:value>STS_API</con:value></con:property><con:property><con:name>sName</con:name><con:value>CommonTestSteps</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateULC_nodes" searchProperties="true" id="3217055c-57f5-4f6b-8986-5c97d330161d"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="7b00abc6-17e9-4793-8beb-c38a75a236da"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("ENCODED_NODE_USER_ID",null);
tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("SAML",null);
tC.setPropertyValue("expectErrType",null);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="a0a81299-e499-4d96-8fe3-ee9125bfe1ac"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("NODE_USER_ID",callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID",callTC.getPropertyValue("NODE_ACCOUNT_ID"));

if (tP.getPropertyValue("versionMinor")=="06" || tP.getPropertyValue("versionMinor")=="07"){
			tC.setPropertyValue("ENCODED_NODE_USER_ID", URLEncoder.encode("urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"), "UTF-8"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			}else{
				tC.setPropertyValue("ENCODED_NODE_USER_ID", "urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			}
			
tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));
tC.setPropertyValue("expectErrType",callTC.getPropertyValue("PolicyCreateResponseType"));
tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:UserLinkConsent", "UTF-8"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="afad6394-18c1-41f0-834e-d5fd2a0de724"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreateSinglePolicyPost_ULC");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="4ed4c6fb-f157-4d76-90cf-c2111034e717">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreateSinglePolicyPost_ULC');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;
/*

def expXML = tStep.httpRequest.response.getResponseContent();
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/
tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                               contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);



tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="7065e381-9693-46c0-afa3-f3f540ed93ee">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>tName</con:name><con:value>WithRightsLockerDataGet and MUC</con:value></con:property><con:property><con:name>sName</con:name><con:value>ISC_TestCases</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>D8BE7D11CB019805E0401F0A07992E11</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>D8BE7D11CAE49805E0401F0A07992E11</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>7600</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>connection</con:name><con:value>close</con:value></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D14403889CD0F3ECE0401F0A07992161/User/urn:dece:userid:org:dece:D14403889CDFF3ECE0401F0A07992161/Policy/urn:dece:type:policy:UserLinkConsent</con:value></con:property><con:property><con:name>policyId</con:name><con:value>urn:dece:type:policy:UserLinkConsent</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D8BE7D11CAE49805E0401F0A07992E11/User/urn:dece:userid:org:dece:D8BE7D11CB019805E0401F0A07992E11/Policy/urn:dece:type:policy:UserLinkConsent</con:value></con:property><con:property><con:name>ENNODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD3DD6C150D6CC4DCE0401F0A0799470D</con:value></con:property><con:property><con:name>ENNODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD3CD44C830AA5460E0401F0A079913BD</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AUserLinkConsent</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD8BE7D11CAE49805E0401F0A07992E11</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD8BE7D11CB019805E0401F0A07992E11</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\ISC_Nodes\7600.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateMUC_nodes" searchProperties="true" id="02e196fd-6a33-458f-a779-20bdcb8f65f6"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="4a1fa38b-4b5a-43bc-b4ac-c8b2cd422c62"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("ENCODED_NODE_USER_ID",null);
tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("SAML",null);
tC.setPropertyValue("expectErrType",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="78a51972-e97c-4fcc-a444-ae8c86a62bc6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("NODE_USER_ID",callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID",callTC.getPropertyValue("NODE_ACCOUNT_ID"));

if (tP.getPropertyValue("versionMinor")=="06" || tP.getPropertyValue("versionMinor")=="07"){
			tC.setPropertyValue("ENCODED_NODE_USER_ID", URLEncoder.encode("urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"), "UTF-8"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			}else{
				tC.setPropertyValue("ENCODED_NODE_USER_ID", "urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			}
			
tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));
tC.setPropertyValue("expectErrType",callTC.getPropertyValue("PolicyCreateResponseType"));
tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:ManageUserConsent", "UTF-8"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="45db53d0-e287-4b60-a809-f9e6735e4f2f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreateSinglePolicyPost_MUC");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="517a95b3-ce83-437a-827d-5e49fdb10fa1">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreateSinglePolicyPost_MUC');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;
/*

def expXML = tStep.httpRequest.response.getResponseContent();
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/
tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                              contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);



tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="6a93b9aa-b6dc-4adf-983f-0d78466e7a19">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>tName</con:name><con:value>WithRightsLockerDataGet and MUC</con:value></con:property><con:property><con:name>sName</con:name><con:value>ISC_TestCases</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>D8BE7D11CB019805E0401F0A07992E11</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>D8BE7D11CAE49805E0401F0A07992E11</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>7600</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D8BE7D11CAE49805E0401F0A07992E11/User/urn:dece:userid:org:dece:D8BE7D11CB019805E0401F0A07992E11/Policy/urn:dece:type:policy:ManageUserConsent</con:value></con:property><con:property><con:name>ENNODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD3CD43AEEE91F252E0401F0A079913BF</con:value></con:property><con:property><con:name>ENNODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD3CD44C830AA5460E0401F0A079913BD</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AManageUserConsent</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD8BE7D11CB019805E0401F0A07992E11</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD8BE7D11CAE49805E0401F0A07992E11</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\ISC_Nodes\7600.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f2eeb936-13ad-4f02-a213-128d8a600f31</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="STS_API" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="96fdea5e-3165-42ad-86cd-31f66cb06840">
      <con:settings/>
      <con:testStep type="groovy" name="Establish Test Case Properties" id="8d99845d-0452-49bb-a8f5-2896b6015b82">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("tokentype",null);
tC.setPropertyValue("audience",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);

tC.setPropertyValue("expectErrType","SUCCESS");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="9aff558f-0c81-4342-9dad-da83ccae2322">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def dbUtils;

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

def callTS = tP.getTestSuiteByName(callTSname);

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeid"));
tC.setPropertyValue("username",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));

if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
{
	tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
	tP.setPropertyValue("audience",tP.getPropertyValue("audience"));
}
else
{
	tC.setPropertyValue("tokentype",URLEncoder.encode(tP.getPropertyValue("urntokenType_userpassword"), "UTF-8"));
	tP.setPropertyValue("audience",URLEncoder.encode(tP.getPropertyValue("audience"), "UTF-8"));
}

	</script></con:config>
      </con:testStep>
      
      
      
      
      <con:testStep type="groovy" name="Establish pem" id="94b59c95-ff72-47e3-9fd0-fd8d7afd897f">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("POST - STS");
RestTestRequestStep testStep1 = tC.getTestStepByName("GET - STS");

def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);</script></con:config>
      </con:testStep>
      
      <con:testStep type="restrequest" name="POST - STS" id="da50ab70-c483-4d4b-82bc-3d3ee831cc7f"><con:settings/><con:config service="STS" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/SecurityToken/SecurityTokenExchange" methodName="STSCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - STS" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="RET_concat.pem" id="0a42d53c-8ab6-4129-a95e-e8774442052b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes" ?> 
  <Credentials xmlns="${#Project#coordinatorSchema}">
  <Username>${#TestCase#username}</Username> 
  <Password>${#TestCase#password}</Password> 
  </Credentials>
]]></con:request><con:originalUri>https://qa1.p.uvvu.com/rest/2015/02/SecurityToken/SecurityTokenExchange</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="audience" value="${#Project#audience}"/>
  <con:entry key="tokentype" value="${#TestCase#tokentype}"/>
</con:parameters></con:restRequest></con:config></con:testStep>
      <con:testStep type="groovy" name="Extract Response Body and Headers" id="df8432c8-f922-431d-8412-7c2cdebc6bd5">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def tStep = tC.getTestStepByName('POST - STS');

tC.setPropertyValue("status", null);
tC.setPropertyValue("connection", null);
tC.setPropertyValue("contentType", null);
tC.setPropertyValue("contentLength", null);
tC.setPropertyValue("contentLocation", null);
/*
*  Get the HTTP headers
*/
String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("versionMajor");
String minor = tP.getPropertyValue("versionMinor");

tP.setPropertyValue("targetURL","qa.p.uvvu.com:7001");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("status", status);
tC.setPropertyValue("connection", connection);
tC.setPropertyValue("contentType", contentType);
tC.setPropertyValue("contentLength", contentLength);
tC.setPropertyValue("contentLocation", contentLocation);

this.log.info "contentLength [$contentLength]";
this.log.info "status [$status]";
this.log.info "contentType [$contentType]";
this.log.info "contentLocation [$contentLocation]";

/*
 *if (contentLength.toInteger() > 0) {
	rawResp = new ByteArrayOutputStream();
     rawResp = tStep.httpRequest.response.getRawResponseData();
     strVal  = new String(rawResp);

     int startAssert = strVal.indexOf("&lt;?xml version=\"1.0\" ");
  
	String XMLbody  = strVal.substring(startAssert, strVal.length());
     
	tC.setPropertyValue("XMLbody", XMLbody);
}
*/</script></con:config>
      </con:testStep>
      
      
      <con:testStep type="groovy" name="Verify Response Body and Headers and save assertion" id="10cc5667-c75c-4a90-a82a-1824ee53661f">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def url           = tP.getPropertyValue("targetURL");
//def urnacct       = tP.getPropertyValue("urnaccount");
//def urnstream     = tP.getPropertyValue("urnstream");
def expectErrType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");
def nodeaccountid = tC.getPropertyValue("nodeaccountid");

boolean dobodyXML = true;
boolean doContentTypeHeader = true;
boolean doConnectionClose = false;
boolean doContentLocaton  = false;
boolean contentLengthZero = false;

String errorID     = "";
String errorReason = "";
String errorLink   = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
//String orgRequest  = url + "/dece/Account/" + urnacct + nodeaccountid;
String expectHTTPstatus = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";


if (expectErrType == "") {
	expectErrType = "SUCCESS";
}

this.log.info "expectErrType is $expectErrType";
switch (expectErrType) {
	case "SUCCESS":
	default:
		expectHTTPstatus = "HTTP/1.1 201 Created";
		expectHTTPcontenttype = "application/xml";
		contentLengthZero = false;
		doContentLocaton  = true;
		doContentTypeHeader = false;
		dobodyXML = true;
	break;
}

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("status");
//assert tC.getPropertyValue("status") == expectHTTPstatus;

// Connection
log.info "doConnectionClose=="+doConnectionClose;
if (doConnectionClose) {
	this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("connection");
	assert tC.getPropertyValue("connection") == expectHTTPconnection;
}
/*
//Content-Length
if (contentLengthZero) {
	//assert tC.getPropertyValue("contentLength").toInteger() > 0;
} else {
	//assert tC.getPropertyValue("contentLength").toInteger() > 0;
}
*/	

if (doContentTypeHeader) {
	assert tC.getPropertyValue("contentType") == expectHTTPcontenttype;
}

// Content-Location
log.info "doContentLocaton=="+doContentLocaton;
if (doContentLocaton) {
	assert tC.getPropertyValue("contentLocation") != null;
	
	def b = tC.getPropertyValue("contentLocation").toURL();
	log.info "Path=="+b.getPath();
	assert b.getPath().matches("/rest/$major/$minor/SecurityToken/Assertion/[_,0-9,a-f,-]*");
	def parms = b.getPath().split("/");
	tC.setPropertyValue("assertionUUID",parms[parms.size() - 1]);
} else {
	//assert tC.getPropertyValue("contentLocation") == null;
}

if (dobodyXML) {
	if (XMLbody.length() > 0) {
		def myXML = new XmlSlurper().parseText(XMLbody);

		// Verify response sizes...
		assert myXML.saml2:Assertion.size() == 1;
		assert myXML.ds:Signature.size()    == 1;
		assert myXML.ds:SignedInfo.size()   == 1;
		assert myXML.ds:DigestValue.size()  == 1;
		assert myXML.ds:SignatureValue.size()  == 1;
		assert myXML.ds:X509Certificate.size() == 1;
		assert myXML.saml2:NameID.size()    == 1;
		assert myXML.saml2:AudienceRestriction.size() == 1;
		assert myXML.saml2:AssertionURIRef.size() == 1;
		assert myXML.saml2:AssertionURIRef.size() == 1;
	}
}</script></con:config>
      </con:testStep>
      
      
      
      
      
      
      
      
      
      
      <con:testStep type="groovy" name="Return the assertion information to the Calling Test Case" id="1cd14bc0-eb33-4ec8-8ab7-7a9b2117a533">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("assertionUUID",null);
callTC.setPropertyValue("assertionUUID",null);
callTC.setPropertyValue("assertionUUID",tC.getPropertyValue("assertionUUID"));
callTC.setPropertyValue("assertionUUID1",tC.getPropertyValue("assertionUUID"));</script></con:config>
      </con:testStep><con:testStep type="restrequest" name="GET - STS" id="4b0cf0d9-17c7-4733-94ec-6eb365739027"><con:settings/><con:config service="STS" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/SecurityToken/Assertion/{assertionUUID}" methodName="STSGet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - STS" mediaType="application/xml" sslKeystore="RET_concat.pem" accept="" id="43821f9d-0ac7-4861-8d10-e1e5eaabafb2"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:originalUri>https://qa1.q.uvvu.com/rest/2015/02/SecurityToken/Assertion/_ac74b714-6c7e-4458-a12d-19a1d9c5f5c1</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="assertionUUID" value="${#TestCase#assertionUUID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers 1" id="7b8e54fb-3bba-4c8d-874b-d02580a5e4e1">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def tStep  = tC.getTestStepByName('GET - STS');

/*
*  Get the HTTP headers
*/
String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("versionMajor");
String minor = tP.getPropertyValue("versionMinor");
String XMLbody = "";

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

//def expXML = tStep.httpRequest.response.getResponseContent();
this.log.info tStep.httpRequest.response.getRawResponseData();
//new b = tStep.httpRequest.response.getResponseContent();

rawResp = new ByteArrayOutputStream();

rawResp = tStep.httpRequest.response.getRawResponseData();
strVal  = new String(rawResp);
log.info strVal;

int startAssert = strVal.indexOf("&lt;?xml version=\"1.0\" ");
log.info  "startAssert: "+startAssert;

if (startAssert > 0) {
	XMLbody  = strVal.substring(startAssert, strVal.length());
}

tC.setPropertyValue("XMLbody", XMLbody);
tC.setPropertyValue("status", status);
tC.setPropertyValue("connection", connection);
tC.setPropertyValue("contentType", contentType);
tC.setPropertyValue("contentLength", contentLength);
tC.setPropertyValue("contentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Extract Key Elements from &lt;Assertion> Body" id="82ae25a2-0b92-49c1-8931-c55837fede73">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def XMLbody = tC.getPropertyValue("XMLbody");
def expectErrType = tC.getPropertyValue("expectErrType");

int lastColon = 0;
int lastSlash = 0;

if (expectErrType == "" || expectErrType == "SUCCESS") {
	tC.setPropertyValue("SAML",null);
	tC.setPropertyValue("NODE_ACCOUNT_ID",null);
	tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
	tC.setPropertyValue("NODE_USER_ID",null);
	tC.setPropertyValue("NODE_USER_ID_FULL",null);
	
	if (XMLbody.length() > 0) {
		def myXML = new XmlSlurper().parseText(XMLbody).declareNamespace(saml2: "urn:oasis:names:tc:SAML:2.0:assertion");

			// Verify response sizes...
			assert myXML.size() == 1;

			def accountId = myXML."saml2:AttributeStatement"."saml2:Attribute"."saml2:AttributeValue";
			def userId    = myXML."saml2:Subject"."saml2:NameID";
			def NotBefore = myXML."saml2:Conditions".@NotBefore.text();
			def NotOnOrAfter = myXML."saml2:Conditions".@NotOnOrAfter.text();
			def AudienceRestriction = myXML."saml2:Conditions".AudienceRestriction;
			
			this.log.info "accountId [$accountId]";
			this.log.info "userId [$userId]";
			this.log.info "NotBefore [$NotBefore]";
			this.log.info "NotOnOrAfter [$NotOnOrAfter]";
			this.log.info "AudienceRestriction [$AudienceRestriction]";
						
			//tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",accountId.toString());
			//tC.setPropertyValue("NODE_USER_ID_FULL",userId.toString());
			tC.setPropertyValue("assertionNotBefore",NotBefore.toString());
			tC.setPropertyValue("assertionNotOnOrAfter",NotOnOrAfter.toString());
			tC.setPropertyValue("assertionAudienceRestriction",NotBefore.toString());
			tC.setPropertyValue("NODE_ACCOUNT_ID",accountId.toString().substring(accountId.toString().lastIndexOf(':') + 1).toString());
			tC.setPropertyValue("NODE_USER_ID",userId.toString().substring(userId.toString().lastIndexOf(':') + 1).toString());
			
			if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
			{
                    tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",accountId.toString());
				tC.setPropertyValue("NODE_USER_ID_FULL",userId.toString());
        	     } 
        	     else 
        	     {
				tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(accountId.toString()));
				tC.setPropertyValue("NODE_USER_ID_FULL",URLEncoder.encode(userId.toString()));        	     	
		     }
	} 
	else {
		return false;
	}
}</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="37f5c654-ca5e-427b-b887-ca786a315e6f">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def url           = tP.getPropertyValue("targetURL");
//def urnacct       = tP.getPropertyValue("urnaccount");
//def urnstream     = tP.getPropertyValue("urnstream");
def expectErrType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");
def nodeaccountid = tC.getPropertyValue("nodeaccountid");

boolean dobodyXML = true;
boolean doContentTypeHeader = true;
boolean doConnectionClose = false;
boolean doContentLocaton  = false;
boolean contentLengthZero = false;

String errorID     = "";
String errorReason = "";
String errorLink   = "";
//String orgRequest  = url + "/dece/Account/" + urnacct + nodeaccountid;
String expectHTTPstatus = "HTTP/1.1 200 OK";
String expectHTTPconnection  = "close";


if (expectErrType == "") {
	expectErrType = "SUCCESS";
}

this.log.info "expectErrType is $expectErrType";
switch (expectErrType) {
	case "SUCCESS":
	default:
		expectHTTPstatus = "HTTP/1.1 200 OK";
		expectHTTPcontenttype = "application/xml";
		contentLengthZero = false;
		doContentLocaton  = false;
		doContentTypeHeader = false;
		dobodyXML = true;
	break;
}

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("status");
//assert tC.getPropertyValue("status") == expectHTTPstatus;

// Connection

if (doConnectionClose) {
	this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("connection");
	assert tC.getPropertyValue("connection") == expectHTTPconnection;
}
/*
//Content-Length
if (contentLengthZero) {
	//assert tC.getPropertyValue("contentLength").toInteger() == 0;
} else {
	//assert tC.getPropertyValue("contentLength").toInteger() > 0;
}
*/	

if (doContentTypeHeader) {
	assert tC.getPropertyValue("contentType") == expectHTTPcontenttype;
}

// Content-Location
if (doContentLocaton) {
	assert tC.getPropertyValue("contentLocation") != null;
	
	def b = tC.getPropertyValue("contentLocation").toURL();
	assert b.getPath().matches("/dece/SecurityToken/Assertion/[0-9,a-f,-]*");
	def parms = b.getPath().split("/");
	
	tC.setPropertyValue("assertionUUID",parms[parms.size() - 1]);
} else {
	assert tC.getPropertyValue("contentLocation") == null;
}

if (dobodyXML) {
	if (XMLbody.length() > 0) {
		def myXML = new XmlSlurper().parseText(XMLbody);

		// Verify response sizes...
		assert myXML.saml2:Assertion.size() == 1;
		assert myXML.ds:Signature.size()    == 1;
		assert myXML.ds:SignedInfo.size()   == 1;
		assert myXML.ds:DigestValue.size()  == 1;
		assert myXML.ds:SignatureValue.size()  == 1;
		assert myXML.ds:X509Certificate.size() == 1;
		assert myXML.saml2:NameID.size()    == 1;
		assert myXML.saml2:AudienceRestriction.size() == 1;
		assert myXML.saml2:AssertionURIRef.size() == 1;
		assert myXML.saml2:AssertionURIRef.size() == 1;
/*
		
		// ErrorCode
		this.log.info "ErrorCode: Expect[$errorID] Received: " + myXML.Error.@ErrorID.toString();
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason: Expect[$errorReason] Received: " + myXML.Error.Reason.toString();
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorReason: Expect[$errorLink] Received: " + myXML.Error.ErrorLink.toString();
		assert myXML.Error.ErrorLink.toString() == errorLink;
		*/
	} else {
		return false;
	}
}



</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Deflate and encode the &lt;Assertion>" id="8811ac5c-ff1b-42f9-bffc-d75fd43ab9d9">
        <con:settings/>
        <con:config><script>import java.util.zip.Deflater;
import org.w3c.tools.codec.Base64Encoder;
import java.io.ByteArrayOutputStream;
import java.util.zip.DeflaterOutputStream;
import java.lang.*;

import org.opensaml.xml.util.Base64;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)


int compressedLength = 0;
//String XMLbody = tC.getPropertyValue("XMLassertion").toString();
String XMLbodyRaw = tC.getPropertyValue("XMLbody").toString();

int startAssert = XMLbodyRaw.indexOf("&lt;saml2:Assertion ");
int endAssert   = XMLbodyRaw.indexOf("&lt;/saml2:Assertion>");


String XMLbody = XMLbodyRaw.substring(startAssert, endAssert + 18).trim();
String base64encodeStr = "";

this.log.info "XMLbody is [$XMLbody]";

def myXML = new XmlSlurper().parseText(XMLbody);
tC.setPropertyValue("assertId",myXML.@ID.toString());

// Perform Deflation
//byte[] xmlBytes = XMLbody.trim().getBytes();
byte [] xmlBytes = new byte[XMLbody.trim().length()];

Deflater compresser = new Deflater(Deflater.DEFLATED, true);
compresser.setInput(XMLbody.trim().getBytes());
compresser.finish();
compressedLength = compresser.deflate(xmlBytes);

byte [] subArray = Arrays.copyOfRange(xmlBytes, 0, compressedLength);
base64encodeStr = Base64.encodeBytes(subArray,Base64.DONT_BREAK_LINES);
// finally, URL encode it
tC.setPropertyValue("SAML", "SAML2 Assertion="+base64encodeStr);


</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Return extracted Properties back to calling Test Case" id="5ed538ec-cb66-4e35-9b47-6082c2e69ccd">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

String acctID = tC.getPropertyValue("NODE_ACCOUNT_ID");
String userID = tC.getPropertyValue("NODE_USER_ID");

callTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));
//callTC.setPropertyValue("SAML_USER1",tC.getPropertyValue("SAML"));

if (acctID != null &amp;&amp; acctID.length() > 0) {
	
	callTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
	//callTC.setPropertyValue("NODE_ACCOUNT_ID1",tC.getPropertyValue("NODE_ACCOUNT_ID"));
	callTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
	//callTC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
} else {
	callTC.setPropertyValue("assertionAccountId","ERROR");
}
if (userID != null &amp;&amp; userID.length() > 0) {
	callTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID"));
	//callTC.setPropertyValue("NODE_USER_ID1",tC.getPropertyValue("NODE_USER_ID"));
	callTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
	//callTC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL"));
} else {
	callTC.setPropertyValue("assertionUserId","ERROR");
}</script></con:config>
      </con:testStep><con:properties>
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
      <con:property><con:name>keyStorePath</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>tName</con:name><con:value>Account_Create_Firsrt_User_Create_STS_Policies</con:value></con:property><con:property><con:name>sName</con:name><con:value>First_User_Create</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>audience</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value>uvtc_firstuser_201502_20150610_010459</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>connection</con:name><con:value>close</con:value></con:property><con:property><con:name>contentType</con:name><con:value>text/xml; charset=UTF-8</con:value></con:property><con:property><con:name>contentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>contentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorStatusCode</con:name><con:value/></con:property><con:property><con:name>errorReason</con:name><con:value/></con:property><con:property><con:name>errorID</con:name><con:value/></con:property><con:property><con:name>assertionUUIDprior</con:name><con:value>_732606f9-3702-470e-9ecf-2bbb514a18ba</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_658e1332-9074-4cdf-be37-fc55228b0d70</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<?xml version="1.0" encoding="UTF-8"?><saml2:Assertion xmlns:saml2="urn:oasis:names:tc:SAML:2.0:assertion" ID="_658e1332-9074-4cdf-be37-fc55228b0d70" IssueInstant="2015-06-09T19:31:51.671Z" Version="2.0" xmlns:xs="http://www.w3.org/2001/XMLSchema"><saml2:Issuer>http://c.decellc.com/</saml2:Issuer><ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#"><ds:SignedInfo><ds:CanonicalizationMethod Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"/><ds:SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/><ds:Reference URI="#_658e1332-9074-4cdf-be37-fc55228b0d70"><ds:Transforms><ds:Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/><ds:Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"><ec:InclusiveNamespaces xmlns:ec="http://www.w3.org/2001/10/xml-exc-c14n#" PrefixList="xs"/></ds:Transform></ds:Transforms><ds:DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/><ds:DigestValue>QGUYNEjGeRGlSdl6Zce8BPhEvA8=</ds:DigestValue></ds:Reference></ds:SignedInfo><ds:SignatureValue>Sl5+i9XTXS3K/Z6PbLKmx+1oYB544Y+j0iftktBRprmstO6kMoIy+5lNHyMRTorJZfH5nbcLOABSaDCNPG9HGQB+rLmoowUXHsaoafwUQ5CQNh3ebbmkBL+NZTU/ZI1CPg/22xHla+cwQqI1eP6KByiLG3ysyA9xV/buUf6LFbA=</ds:SignatureValue></ds:Signature><saml2:Subject><saml2:NameID Format="urn:oasis:names:tc:SAML:2.0:nameid-format:persistent">urn:dece:userid:org:dece:181BB82A75838D03E0533E991F0ABFA5</saml2:NameID><saml2:SubjectConfirmation Method="urn:oasis:names:tc:SAML:2.0:cm:sender-vouches"><saml2:SubjectConfirmationData InResponseTo="_pste7uln6pj3sz9ja25mywyz" NotOnOrAfter="2015-06-09T22:31:51.671Z" Recipient="https://stdecqavutl1.va.neustar.com:2485/simplesaml/module.php/saml/sp/saml2-acs.php/RET"/></saml2:SubjectConfirmation></saml2:Subject><saml2:Conditions NotBefore="2015-06-09T19:31:41.671Z" NotOnOrAfter="2015-06-10T01:31:51.671Z"><saml2:AudienceRestriction><saml2:Audience>urn:dece:org:org:dece:RET_CS_1</saml2:Audience><saml2:Audience>urn:dece:org:org:dece:RET</saml2:Audience></saml2:AudienceRestriction></saml2:Conditions><saml2:Advice><saml2:AssertionURIRef>https://qa1.q.uvvu.com:443/rest/2015/02/SecurityToken/Assertion/_658e1332-9074-4cdf-be37-fc55228b0d70</saml2:AssertionURIRef></saml2:Advice><saml2:AuthnStatement AuthnInstant="2015-06-09T19:31:51.671Z" SessionIndex="_658e1332-9074-4cdf-be37-fc55228b0d70"><saml2:AuthnContext><saml2:AuthnContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:Password</saml2:AuthnContextClassRef><saml2:AuthenticatingAuthority>urn:dece:org:org:dece:coordinator</saml2:AuthenticatingAuthority></saml2:AuthnContext></saml2:AuthnStatement><saml2:AttributeStatement><saml2:Attribute Name="accountID" NameFormat="urn:dece:type:accountID"><saml2:AttributeValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xs:string">urn:dece:accountid:org:dece:181BB82A75828D03E0533E991F0ABFA5</saml2:AttributeValue></saml2:Attribute></saml2:AttributeStatement></saml2:Assertion>]]></con:value></con:property><con:property><con:name>username1</con:name><con:value>firstuser20130726_035156</con:value></con:property><con:property><con:name>SAML</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SAML2 Assertion=nVZrU/I6EP4rTN+PTOmNInSEGS5eOCIioKN8cUK6hWibYJNy8de/SYEKiBzO+dTZ7Wb32Uue7CVHUWh7dc4hFoTR3DIKKfdSbVVLYuoxxAn3KIqAewJ7g/p9x7MLpoe2R7Rcu1XV3kpuGSzHsfWKeVHUi9gP9DE4F3qAXde2y2PTvzClKecJtCkXiIqqZpuWq5sl3awMrYrnWJ5rFUoX1kjLPUPMpW9pUpCn1qCWvKpNhZh5hrFYLAoLp8DiiWGbpmW83HcGeAoR0mqX64zSQHFtY48LPmAIQ1zALDIujT2bS597AzKhSCQxbGL5v8UyDbNiSBufk8kfLTsLfpsGLBWbiDJKMArJF1L1uQcxZX6uHk5YTMQ0+jUJy1SOdVhiHVtF+kcz9qGd6WgPYcyRzqfI2vjqQwAxUAy5p367qv05r2vp0WGMKA9YHPF98b/hATqHkM3A1/k2rQ208x0eqVTtErDXpjhMOJlDVw3rDGHgm24CPt9VrhdDQJYdwuWALrlCZ+zCOxDX1WiRCXDxfxq005y1k2cUJlB7vHl67V6930D/Jhz4YWmEodzoTa/m9XI1BbBrnCqy1q7Fg6HMhmh9YhC6eVJ5Gb4MnDtjVOqNO3fRMm+x14ZbLL7m300SiA/R6M9kguKh9HHP2qu8G3ZvV/f9IYv/GQW3Lh3jzkO9MUCtZrd3U7m9eWzk407E2OLp5ZYjhoLF06PbfOxOHRiPo49GJ98dDZ+MUdtq9mQh7OVtiPJ48fjZtqBXumusSOfGWfFVvbJ8NsbJU1DqXI/r1SydHfz7uu2dHyTjd8BiK6oxaLdy17JLSJwmM6Uhvh6kpt5MkQ8XQIVWU6cUd3iJpDvie7KHa9kqW41G2a5fuGWn3DKdK9N1nKtKxbo2643rurslmTWKA4hNRgOiYinKXY/NaYA48jhQH2J9zhLJdFw74bGFBMq1aV9eAkY5DJmk55nM5yIJaWn27vCvyjuy3Wi1WH1puS4TD/QhrgcC4j1Ktu09Su4DJjMCirfVWHM511zIUnyieSJCqzBHBQqJZPZYkaxnF8uuwUk0C0EBNSLmJyEUZtNZWhiDr7+2jjBPtf2rYXrZfk3r8N+2AtLGJ8qAq1waILsIR96W4jaR4wlb5tC0dhPeuq8nPlH3SpZTxASvkez/+p4SNR7ZiMiM3pqDN2uLOzM/+/jPk8YJUMZhPbJA/pzshN2+3PINkKxR23bzE1mFz0IynydpA4tFx4ile0NVyDBtYwA4kby2GrIPoEbmxTjrEcmAHwTP9PsQEzGlA4EERHLgcql4xtYwAK62hra8KMtzV5K9kLJ0ApbimK4Zyo1HIT65FGEPKzup7snPgsX+d8eO+NqJI/OUS4MgdKIk9YCsfpkLzKRbIqmPxbvOjzk4FnxfmRU5wyLkQI0TAb//ySlOq2oIY5ZQ0W5pqWKXZ1OcYjUD79voh5uUyrPdjvz7cqeTdAQwyI2Qk9S/eqI9dQXoZIerN0F/oWv7FF3vo6v9UP/U7NTpcMZrfwE=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>181BB82A75828D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:181BB82A75828D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>181BB82A75838D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:181BB82A75838D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>assertionNotBefore</con:name><con:value>2015-06-09T19:31:41.671Z</con:value></con:property><con:property><con:name>assertionNotOnOrAfter</con:name><con:value>2015-06-10T01:31:51.671Z</con:value></con:property><con:property><con:name>assertionAudienceRestriction</con:name><con:value>2015-06-09T19:31:41.671Z</con:value></con:property><con:property><con:name>assertId</con:name><con:value>_658e1332-9074-4cdf-be37-fc55228b0d70</con:value></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>555384c9-6fa2-448b-a38e-713264e945f2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserGet_API" searchProperties="true" id="a9371951-a0d7-4374-b477-39820ba727c5"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="34eab9ef-094b-4ea5-b816-16bad8f3019a"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="SetPem" id="ab184205-d3f8-4833-a390-e2590f4dff15"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("User_Get");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="User_Get" id="34ea641f-a94a-47d6-9957-cf0f9e5f051c"><con:settings/><con:config service="Users" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" methodName="UserGet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User_Get" mediaType="application/xml" sslKeystore="RET_concat.pem" id="04184b93-6200-4f4a-b10a-be2cbef95060"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="3475aa35-aee4-44f3-bc56-b7358d0abca8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('User_Get');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String ETag = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);



tC.setPropertyValue("httpLocation", contentLocation);

//tC.setPropertyValue("ETagPrior",tC.getPropertyValue("ETag"));
tC.setPropertyValue("ETag", ETag);

//log.info "ETagPrior: " + tC.getPropertyValue("ETagPrior")+", ETag: "+ tC.getPropertyValue("ETag");
//assert tC.getPropertyValue("ETagPrior")!= tC.getPropertyValue("ETag");
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="621e6c79-25ba-4fc8-86b5-0fa7a2e3401f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseTypeUserGet}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

def RequestorType = "";
def RequestorClass = "";
def Requestee = "";

def usernamestring = "";
def givennamestring = "";
def surnamestring = "";

int firstmask = 0;
int lastmask = 0;

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#TestCase#AccountID}')+ "/User/" + context.expand('${#TestCase#UserID}');
String expectHTTPstatus      = "HTTP/1.1 200 OK";
String expectHTTPconnection  = "Keep-Alive";

String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
	break;

	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
		errorReason = "The API call is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_VALID":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserIdInvalid";
		errorReason = "The user ID is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
		expectHTTPconnection = "close";
	break;

	case "USER_INACTIVE":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
		errorReason = "The requesting member is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;

     case "URL_NOT_FOUND":
		expectHTTPstatus = "HTTP/1.1 404 Not Found";
		expectHTTPcontenttype = "text/xml"
		XMLbodynull     = true;
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	case "MTHD_NOT_ALLWD":
		expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
		expectHTTPcontenttype = "text/plain; charset=UTF-8"
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	case "USER_NOT_IN_ACC":
		expectHTTPstatus = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:UserNotFound";
		errorReason = "The user ID was not found.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotFound";
	break;

     case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;

	case "NO_ENABLE_MNG_USR_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the EnableManageUserConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:EnableManageUserConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:EnableManageUserConsentRequired";
	break;

	case "NO_MNG_USR_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageUserConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
	break;

	case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		//errorReason = "The identified account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "SPL_CS_ALLOWED_ACCT":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;

     case "SPL_CS_ALLOWED_USER":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToDeleteSuspendedUsers";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToDeleteSuspendedUsers";
     break;

    case "REQUESTEE_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorReason = "The member has been removed.";
		errorID     = "urn:dece:errorid:org:dece:AccountUserStatusDeleted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserStatusDeleted";
		expectHTTPconnection = "close";
	break;
      
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

      def a = context.expand( '${#TestCase#httpLocation}');
      def b = a.toURL();
      def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

      if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
      	{                                
			assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
			
			int lastColon = urlStr.lastIndexOf(':');
			int lastSlash = urlStr.lastIndexOf('/');
			userid     = urlStr.substring(lastColon + 1);
			def node_User = urlStr.substring(lastSlash + 1);
			                                 
			tC.setPropertyValue("NODE_USER_ID",userid);			
			tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
      	} 
      else 
      	{
			assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");
			int lastColon = urlStr.lastIndexOf('%3A');
			int lastSlash = urlStr.lastIndexOf('/');
			userid     = urlStr.substring(lastColon + 3);
			def node_User = urlStr.substring(lastSlash + 1);
			                      
			tC.setPropertyValue("NODE_USER_ID",userid);			
			tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
      	}
	
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}




//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}


if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorLink Received [" + myXML.Error.ErrorLink.toString() + "] Exp[$errorLink]";
		assert myXML.Error.ErrorLink.toString() == errorLink;

	} 
  else
  {
   //Data Types
   // RequestorType: Self, CLG, CS, Other
   // RequestorClass: BAU,SAU,FAU
   //Requestee: CHILD, YOUTH, ADULT

   RequestorType = context.expand( '${#TestCase#RequestorType}');
   RequestorClass = context.expand( '${#TestCase#RequestorClass}');
   Requestee = context.expand( '${#TestCase#Requestee}');

    // Following Fields returned for Everyone
    // Contact Info shwon only for CLG or Self or Portal:CS or DECE:CS or COORD:CS - kalyan 05092013
    if ( (RequestorType == "Other")  || (RequestorType == "CS")|| (RequestorType == "SPLCS"))
    {
         assert myXML.@UserClass.size() == 1;
         assert myXML.@UserClass.toString().matches("urn:dece:role:user:class:[a-z]*");
         
         assert myXML.Credentials.size() == 1;
         assert myXML.Credentials.Username.size() == 1;
         assert myXML.Credentials.Password.size() == 0;

         assert myXML.Name.size() == 1;
         assert myXML.Name.GivenName.size() == 1;
         assert myXML.Name.SurName.size() == 1;
            
         assert myXML.Languages.size() == 1;
         assert myXML.Languages.Language.size() > 0;
     
         assert myXML.ResourceStatus.size() == 1;
         assert myXML.ResourceStatus.Current.size() == 1;
    }
    else
    {
    	    assert myXML.@UserClass.size() == 1;
         assert myXML.@UserClass.toString().matches("urn:dece:role:user:class:[a-z]*");
         
         assert myXML.Credentials.size() == 1;
         assert myXML.Credentials.Username.size() == 1;
         assert myXML.Credentials.Password.size() == 0;

         assert myXML.Name.size() == 1;
         assert myXML.Name.GivenName.size() == 1;
         assert myXML.Name.SurName.size() == 1;
  /*      
         def a = myXML.DisplayImage.DisplayImageURL;
         log.info a ;
		//def b = a.toURL();
		//log.info b;
		 log.info "Response_DisplayImageURL: "+a.getPath();
         assert  a.matches("https://qa.uvvu.com:7001/ssp/image?type=image&amp;imageId=[0-9,A-F]*");
        log.info "here";
*/
        
         assert myXML.ContactInfo.size() == 1;
         assert myXML.ContactInfo.Address.size() == 1;
         assert myXML.ContactInfo.Address.PostalAddress.size() == 1;
         assert myXML.ContactInfo.Address.PostalCode.size() == 1;
         assert myXML.ContactInfo.Address.Locality.size() == 1;
         assert myXML.ContactInfo.Address.StateOrProvince.size() == 1;
         assert myXML.ContactInfo.Address.Country.size() == 1;
         assert myXML.ContactInfo.TelephoneNumber.size() == 1;
         assert myXML.ContactInfo.TelephoneNumber.Value.size() == 1;
         assert myXML.ContactInfo.MobileTelephoneNumber.size() == 1;
         assert myXML.ContactInfo.MobileTelephoneNumber.Value.size() == 1;
     
         assert myXML.Languages.size() == 1;
         assert myXML.Languages.Language.size() > 0;
     
         assert myXML.ResourceStatus.size() == 1;
         assert myXML.ResourceStatus.Current.size() == 1;
    }
         if ((RequestorType == "CS")|| (RequestorType == "SPLCS"))
         {
           assert myXML.ResourceStatus.History.size() > 0; 	
         } 
         else
         {
           assert myXML.ResourceStatus.History.size() == 0; 	
         }

   /******************************************************************************************************************/
           
   //Filtering fields based on PI and Access levels

   if(Requestee == "CHILD")
    {

    	  this.log.info "Getting CHILD details";
    	  
  	 if((RequestorType == "CLG") || (RequestorType == "Self") || (RequestorType == "SPLCS"))
  	 {
  	   /****************DOB, Security Token and Email Shown only to Self,CLG and CS**********/
         assert myXML.DateOfBirth.size() == 1;     
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0;
        
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;     
  	 }
  	 else
  	  {
         /****************DOB, Security Token and Email not shown to CS and others**********/
         assert myXML.DateOfBirth.size() == 0;     
       //  assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() == 0;
         //assert myXML.LegalGuardian.size() == 1; 

         assert myXML.ContactInfo.PrimaryEmail.size() == 0;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 0;
  	   

         /**************Verifying Masking of CHILD PI details *******************/
          
         usernamestring = myXML.Credentials.Username.toString();
         givennamestring = myXML.Name.GivenName.toString();
         surnamestring = myXML.Name.SurName.toString();
                
         //*************Verifying Masking of CHILD UserName details ******************

         //firstmask = usernamestring.indexOf('u');
        lastmask = usernamestring.length();
        
     log.info firstmask;
 		 log.info  lastmask;
        usernamestring = usernamestring.substring(1,lastmask-1);
        //usernamestring = "••••••";
   log.info usernamestring;
//        assert usernamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
         assert usernamestring == "••••••";

       //*************Verifying Masking of CHILD GivenName details ******************
          
        //firstmask = givennamestring.indexOf('â');
        lastmask = givennamestring.length();

         givennamestring = givennamestring.substring(1,lastmask-1);

       // assert givennamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
        assert givennamestring == "••••••";

         //*************Verifying Masking of CHILD SurName details ******************
          
       // firstmask = surnamestring.indexOf('â');
        lastmask = surnamestring.length();

         surnamestring = surnamestring.substring(1,lastmask-1);

       //assert surnamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";     
      assert surnamestring == "••••••";        
    }
  	 if ((RequestorType == "CS")|| (RequestorType == "SPLCS"))
          {
             this.log.info "Getting CHILD CLG details for CS";
             
             assert myXML.LegalGuardian.size() > 0; 

              if(myXML.LegalGuardian.size() == 1)     	
             {
           	 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");	
             }
             else
             if(myXML.LegalGuardian.size() == 2)     	
             {
                if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                	assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else
               if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
             	{
           	  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";	
               } 
            }         
          else if(myXML.LegalGuardian.size() != 0)     	
                {
            	   this.log.info "Getting CHILD Active CLG details for NonCS";
            	 
           	   assert myXML.LegalGuardian.size() == 1;   
           	   assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";	
               }
           else
               {
            	 this.log.info "Getting CHILD Pending CLG details for NonCS";
           	 assert myXML.LegalGuardian.size() == 0;  
              }
          }
    }  
   else if((RequestorClass == "FAU") || (RequestorClass == "SAU") || (RequestorType == "Self")|| (RequestorType == "SPLCS")|| (RequestorType == "CS"))
    {
    	       	  
    	    assert myXML.DateOfBirth.size() == 1; 
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0; 

         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;
         
          if(Requestee == "YOUTH")	
          {
            this.log.info "Getting YOUTH details";
            assert myXML.LegalGuardian.size() == 0; 
/*
             if(RequestorType == "CS")
            {
              assert myXML.LegalGuardian.size() > 0; 

              if(myXML.LegalGuardian.size() == 1)     	
             {
           	 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");	
             }
             else if(myXML.LegalGuardian.size() == 2)     	
             {
           	 if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                	assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
             	{
           	  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";	
               } 
            }
            else if(myXML.LegalGuardian.size() != 0)     	
            {
           	 assert myXML.LegalGuardian.size() == 1;   
           	 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";	
            }
           else
            {
           	 assert myXML.LegalGuardian.size() == 0;  
            }      	
          }
*/          
       }  
     else
        {
           this.log.info "Getting ADULT details";	
           //assert myxml.LegalGuardian.size() == 0; 	
		assert myXML.LegalGuardian.size() == 0; 	
        }
    }  
     else 
    {   
    	    this.log.info "BAU geting other's details";
    	    
    	    assert myXML.DateOfBirth.size() == 1; 
        // assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() == 0; 
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1; 
         
         if(Requestee == "YOUTH")	
          {
            if(myXML.LegalGuardian.size() != 0)     	
            {
           	 assert myXML.LegalGuardian.size() == 1;   
           	 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";	
            }
          else
            {
           	 assert myXML.LegalGuardian.size() == 0;  
            }	
          }
          else
          {
            assert myXML.LegalGuardian.size() == 0; 	
          }      	
    }       
    
  }	// end if for SUCCESS response
} // end if for XML Body Validations
</script></con:config></con:testStep><con:testStep type="groovy" name="Return_ETag_to_Calling_TestCase" id="492e96de-f3da-485b-bd40-0c97736d4383"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));</script></con:config></con:testStep><con:properties><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"E71D15E51CCE0124E0401F0A079930BC:DA855416"</con:value></con:property><con:property><con:name>ETagPrior</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>2683</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs//RET_concat.pem</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E71D152E3AE61F8FE0401F0A079911AF</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E71D152E3AF91F8FE0401F0A079911AF</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E5F850C559F9CD04E0401F0A05993FCD</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E71D152E3AF91F8FE0401F0A079911AF</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E5F850C559F9CD04E0401F0A05993FCD</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>FAU</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>sName</con:name><con:value>06.Functional_UserGet_NonCS</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00042_UserGet_FUNC_NonCS_Full_Get_Self by P Host</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E603BD56DDEEF0CEE0401F0A07990E43</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E5F850C559FACD04E0401F0A05993FCD</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<User UserClass="urn:dece:role:user:class:full" UserID="urn:dece:userid:org:dece:E71D152E3AF91F8FE0401F0A079911AF" xmlns="http://www.decellc.org/schema/2013/06/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Name>
      <GivenName>userget_firstuser20130924_032954</GivenName>
      <SurName>userget_firstuser20130924_032954</SurName>
   </Name>
   <DisplayImage>
      <DisplayImageURL>https://qa.uvvu.com:7001/ssp/image?type=image&amp;imageId=E71D152E3AFA1F8FE0401F0A079911AF</DisplayImageURL>
   </DisplayImage>
   <ContactInfo>
      <PrimaryEmail VerificationStatus="urn:dece:type:status:pending">
         <Value>testing@uvvutesting.biz</Value>
      </PrimaryEmail>
      <AlternateEmail Notify="false" VerificationStatus="urn:dece:type:status:pending">
         <Value>testing_+428@uvvutesting.biz</Value>
      </AlternateEmail>
      <Address>
         <PostalAddress>46000 Center Oak Plaza</PostalAddress>
         <PostalCode>20166</PostalCode>
         <Locality>Sterling</Locality>
         <StateOrProvince>VA</StateOrProvince>
         <Country>US</Country>
      </Address>
      <TelephoneNumber>
         <Value>+1.703598741</Value>
      </TelephoneNumber>
      <MobileTelephoneNumber>
         <Value>+1.703598742</Value>
      </MobileTelephoneNumber>
   </ContactInfo>
   <Languages>
      <Language primary="true">en-us</Language>
      <Language primary="false">en</Language>
   </Languages>
   <!-- <DateOfBirth> depricated </DateOfBirth> -->
   <Credentials>
      <Username>userget_firstuser20130924_032954</Username>
   </Credentials>
   <UserRecoveryTokens>
      <RecoveryItem>
         <QuestionID>1200</QuestionID>
         <Question>What is the name of your favorite movie?</Question>
         <QuestionResponse>myname</QuestionResponse>
      </RecoveryItem>
      <RecoveryItem>
         <QuestionID>1650</QuestionID>
         <Question>What is the name of your favorite song?</Question>
         <QuestionResponse>myname</QuestionResponse>
      </RecoveryItem>
   </UserRecoveryTokens>
   <ResourceStatus>
      <Current ModifiedBy="urn:dece:org:org:dece:RET" ModificationDate="2013-09-24T07:30:03.623Z" CreatedBy="urn:dece:org:org:dece:RET" CreationDate="2013-09-24T07:29:54.946Z">
         <Value>urn:dece:type:status:active</Value>
         <Description>Flipping User Status to active</Description>
      </Current>
   </ResourceStatus>
</User>]]></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>cc891f73-44b8-47ce-9d08-8d9a2f63ef82</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c72b5513-a556-4ec7-9925-002c39bb23ff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9c734ae7-5af5-42b8-9df0-6dd308e44f7c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateMUC_API" searchProperties="true" id="b842e70d-a8b1-44af-91c2-44516599f032"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="2f6f11e4-b262-4539-abd5-dcf3510bdfe2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

tC.setPropertyValue("expectErrType","SUCCESS");

if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
{
	tC.setPropertyValue("Policy_Class","urn:dece:type:policy:ManageUserConsent");
}
else
{
	tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:ManageUserConsent", "UTF-8"));
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="27537223-b9a8-499b-a470-acb6da6bdf9e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("Policy_Create_MUC");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="Policy_Create_MUC" id="f76eca3c-e908-4cf1-b469-d0a951aec9da"><con:settings/><con:config service="Policy_Create" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="Policy_Create_User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Policy_Create_MUC" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="RET_concat.pem" id="dbe7d0de-9ead-4e02-95f8-cc7d14f1af68"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd"  xmlns:dece="${#Project#coordinatorSchema}"  xmlns:ds="http://www.w3.org/2000/09/xmldsig#"  xmlns:md="http://www.movielabs.com/md"  xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <dece:Policy>
    <dece:PolicyClass>urn:dece:type:policy:ManageUserConsent</dece:PolicyClass>
    <dece:Resource>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_REQ_ENTITY}</dece:Resource>
    <dece:RequestingEntity>urn:dece:org:org:dece:${#TestCase#nodeid}</dece:RequestingEntity>
    <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
    <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_CREATED_BY}">
        <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
    </dece:ResourceStatus>
  </dece:Policy>
</dece:PolicyList>]]></con:request><con:originalUri>https://qa1.p.uvvu.com/rest/2015/02/Account/urn:dece:accountid:org:dece:16ACF97A7BB418ACE05305991F0A9199/User/urn:dece:userid:org:dece:16ACF97A7BC018ACE05305991F0A9199/Policy/urn:dece:type:policy:ManageUserConsent</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="108dd42e-fbb2-4593-9363-554ce4b665e0">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('Policy_Create_MUC');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                             contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);



tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="9a0b83a1-cd94-4313-934e-0b62adf8fad7">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZWwZ24ArUMVlyHgn5AJJNuFlSpEbEDGSY8lc8vUrGfAAIVl2n1zdbnWfvuioLwSex07QEgJSSTkrreYxE0GubRhZygKOBRUBw3MQgSTBsNW/CpyyHeDdEaMUdhvG76pXiRy/XjVt/OKYLrIjszYGZGJwAYjvv6Cap0yFyCBkQmImG4ZjI8+0fdP27u1a4FUDB5XrnjcySo+QCuVbmZRtYwtqJRrGVMoksKzlclleVso8nViObSPrqX81JFOYY6N5sckoD5Q2t/akHAGBOCZlwufWhXVgcxGJYEgnDMsshW2s6LNYtmXXLWUTCTr5ZhRnIQrZmOdiBzPOKMExfce6Pn2QUx6VWvGEp1RO558mgWzt2IQVMQly2TfDOoR2pqMDhKnApphitPU1gDGkwAiUHgZhw/h2Xtfyo/cpZmLM07k4FP8bHmALiHkCkSl2aW2hne/wRKWaF0CCkJE4E3QB13pYE0xAbLsJ5HxXpdsUxnR1RYUa0JXQ6Kx9eEfiphpdOgEh/0+D9pqzcfKI4wya9adueDe7tOPxc/Lw3nVvXdnx+9ffn73nRg5g3zhXFK3diEdDWQzR5sTMfehXZ0vP79zW1jcVB/dQ1JZ0+VCZfpdV769fS2uI2qOex2/qdc/u3sjrv1v9YU2u358u/WfeW41e+z327sVi9FzzrgZ3wn7EldeRqD2+zLruG/KTqTW6dX7Ben2X0btR+BMt17b/NLt/mf0cLJ/GwEeDZftqcQnIgqqctdy2W/350Ht86g5HU3Xy8rUajoZho0hnD/+hbnfnh9nLDIjciXoMwm6pp7qE5ddkpjU0Mse5aZBo8hESmDSa+pTmjiBTdEejQPVwI6Nqx6nUun7b91C7grwftlep/KjXUc9ueW2/syOZDYojiB3OxlTH0pS7GZuvAZJ5IIBFkJoLnimmE8YXHrtY4lLIBuoScCbgnit6RoKvoro7qawndR+lyWxKV7N6Ml0sjdI1lzfsJm2NJaQHpIzQASkPgNCEgmZuPdhCTbaQqhhveJHJGJUXuMwgU9yeapoNHLfmWYLOkxg0VGvOoyyGcjJN8tJYYvN1TExErh38uM+v26eJHf/b1UDZRFQbCJ1LG1Qf4cTrgnaJfJ6wu5/wzn0ri6i+WaqgMqVkg+Tw15850QNSDInK6Hdn+BvtcBfmZx//eNL6ApR1XI8iULSge2F3b7d6BRRvNHfdfMOo/FbOFossb6DrVqxUubd0hSzbsYZAMsVs63v+CswqvFhnPSMF8KPghf4QYianbCixhLkauFIunrE3DEHovSFUV2V17lJyEFKVTsJKntJ1YrXzaMRfrkUkINpOqW/VZ8nT6E/HTvjai6PyVGuDpGyiJf2ErD+ZC8KVW6rIj6f7zk85OBX8UFkUucAi1UC9ZBI+/1PSrNYwMCE8YzLsGrlin2lznHKdQPDH6IObnMyL7Y7++3pn0nwECKidUNDcv36kA30F2GSPrbdBTxK216t+RdiH6Jof1B81e3U6nvHmPw==</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00005_UserUpdate_FUNC_NonCS_Full_Update_UserName_Others</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Update_Access_NonCS</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4E99389111664AEE0401F0A07990AF6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">17C238D6B5F7B315E0533E991F0A5B6C</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D12F2DD48A10D559E0401F0A059918B0/User/urn:dece:userid:org:dece:D12F2DD48A1ED559E0401F0A059918B0/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa1.q.uvvu.com/rest/2015/02/Account/URN:DECE:ACCOUNTID:ORG:DECE:17C238D6B5F7B315E0533E991F0A5B6C/User/URN:DECE:USERID:ORG:DECE:17C238D6B651B315E0533E991F0A5B6C/Policy/urn:dece:type:policy:ManageUserConsent</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn:dece:type:policy:ManageUserConsent</con:value></con:property><con:property><con:name>ENNODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD3CD43AEEE91F252E0401F0A079913BF</con:value></con:property><con:property><con:name>ENNODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD3CD44C830AA5460E0401F0A079913BD</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE1B04F1ACAC275C1E0401F0A079905C0</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE1B04F1ACAA475C1E0401F0A079905C0</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:17C238D6B651B315E0533E991F0A5B6C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17C238D6B5F7B315E0533E991F0A5B6C</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E4E99389111664AEE0401F0A07990AF6</con:value></con:property><con:property><con:name>NODE_USER_ID_REQ_ENTITY</con:name><con:value>17C238D6B651B315E0533E991F0A5B6C</con:value></con:property><con:property><con:name>NODE_USER_ID_CREATED_BY</con:name><con:value>17C238D6B651B315E0533E991F0A5B6C</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bd6efb96-bbf3-4226-9917-48245caf20c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateULC_API" searchProperties="true" id="83f8ec9e-e670-4d15-9748-2397296769d1"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="4a37609c-d0d9-4bf4-ac1b-5ec09ed8407c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

tC.setPropertyValue("expectErrType","SUCCESS");

if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
{
	tC.setPropertyValue("Policy_Class","urn:dece:type:policy:UserLinkConsent");
}
else
{
	tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:UserLinkConsent", "UTF-8"));
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="7446b881-17aa-4acf-b603-755b3c8b554c"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreate_ULC");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreate_ULC" id="782980bf-25bb-45ca-878f-7e356eaea285"><con:settings/><con:config service="Policy_Create" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="Policy_Create_User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreate_ULC" mediaType="application/xml" postQueryString="false" sslKeystore="RET_concat.pem" accept="" id="894cf72a-71ec-44fb-9e26-f35335a2a9a3"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd"  xmlns:dece="${#Project#coordinatorSchema}"  xmlns:ds="http://www.w3.org/2000/09/xmldsig#"  xmlns:md="http://www.movielabs.com/md"  xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <dece:Policy>
    <dece:PolicyClass>urn:dece:type:policy:UserLinkConsent</dece:PolicyClass>
    <dece:Resource>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_REQ_ENTITY}</dece:Resource>
    <dece:RequestingEntity>urn:dece:org:org:dece:${#TestCase#nodeid}</dece:RequestingEntity>
    <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
    <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_CREATED_BY}">
        <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
    </dece:ResourceStatus>
  </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="56a69daa-d796-481f-ac85-61449b0380a4">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreate_ULC');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                             contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);



tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="4ce68f8c-17e7-4615-b0b6-23c09aac6482">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17C238D6B5F7B315E0533E991F0A5B6C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:17C238D6B651B315E0533E991F0A5B6C</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZWwZ24ArUMVlyHgn5AJJNuFlSpEbEDGSY8lc8vUrGfAAIVl2n1zdbnWfvuioLwSex07QEgJSSTkrreYxE0GubRhZygKOBRUBw3MQgSTBsNW/CpyyHeDdEaMUdhvG76pXiRy/XjVt/OKYLrIjszYGZGJwAYjvv6Cap0yFyCBkQmImG4ZjI8+0fdP27u1a4FUDB5XrnjcySo+QCuVbmZRtYwtqJRrGVMoksKzlclleVso8nViObSPrqX81JFOYY6N5sckoD5Q2t/akHAGBOCZlwufWhXVgcxGJYEgnDMsshW2s6LNYtmXXLWUTCTr5ZhRnIQrZmOdiBzPOKMExfce6Pn2QUx6VWvGEp1RO558mgWzt2IQVMQly2TfDOoR2pqMDhKnApphitPU1gDGkwAiUHgZhw/h2Xtfyo/cpZmLM07k4FP8bHmALiHkCkSl2aW2hne/wRKWaF0CCkJE4E3QB13pYE0xAbLsJ5HxXpdsUxnR1RYUa0JXQ6Kx9eEfiphpdOgEh/0+D9pqzcfKI4wya9adueDe7tOPxc/Lw3nVvXdnx+9ffn73nRg5g3zhXFK3diEdDWQzR5sTMfehXZ0vP79zW1jcVB/dQ1JZ0+VCZfpdV769fS2uI2qOex2/qdc/u3sjrv1v9YU2u358u/WfeW41e+z327sVi9FzzrgZ3wn7EldeRqD2+zLruG/KTqTW6dX7Ben2X0btR+BMt17b/NLt/mf0cLJ/GwEeDZftqcQnIgqqctdy2W/350Ht86g5HU3Xy8rUajoZho0hnD/+hbnfnh9nLDIjciXoMwm6pp7qE5ddkpjU0Mse5aZBo8hESmDSa+pTmjiBTdEejQPVwI6Nqx6nUun7b91C7grwftlep/KjXUc9ueW2/syOZDYojiB3OxlTH0pS7GZuvAZJ5IIBFkJoLnimmE8YXHrtY4lLIBuoScCbgnit6RoKvoro7qawndR+lyWxKV7N6Ml0sjdI1lzfsJm2NJaQHpIzQASkPgNCEgmZuPdhCTbaQqhhveJHJGJUXuMwgU9yeapoNHLfmWYLOkxg0VGvOoyyGcjJN8tJYYvN1TExErh38uM+v26eJHf/b1UDZRFQbCJ1LG1Qf4cTrgnaJfJ6wu5/wzn0ri6i+WaqgMqVkg+Tw15850QNSDInK6Hdn+BvtcBfmZx//eNL6ApR1XI8iULSge2F3b7d6BRRvNHfdfMOo/FbOFossb6DrVqxUubd0hSzbsYZAMsVs63v+CswqvFhnPSMF8KPghf4QYianbCixhLkauFIunrE3DEHovSFUV2V17lJyEFKVTsJKntJ1YrXzaMRfrkUkINpOqW/VZ8nT6E/HTvjai6PyVGuDpGyiJf2ErD+ZC8KVW6rIj6f7zk85OBX8UFkUucAi1UC9ZBI+/1PSrNYwMCE8YzLsGrlin2lznHKdQPDH6IObnMyL7Y7++3pn0nwECKidUNDcv36kA30F2GSPrbdBTxK216t+RdiH6Jof1B81e3U6nvHmPw==</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn:dece:type:policy:UserLinkConsent</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value>https://qa1.q.uvvu.com/rest/2015/02/Account/URN:DECE:ACCOUNTID:ORG:DECE:17C238D6B5F7B315E0533E991F0A5B6C/User/URN:DECE:USERID:ORG:DECE:17C238D6B651B315E0533E991F0A5B6C/Policy/urn:dece:type:policy:UserLinkConsent</con:value></con:property><con:property><con:name>NODE_USER_ID_CREATED_BY</con:name><con:value>17C238D6B651B315E0533E991F0A5B6C</con:value></con:property><con:property><con:name>NODE_USER_ID_REQ_ENTITY</con:name><con:value>17C238D6B651B315E0533E991F0A5B6C</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bd6efb96-bbf3-4226-9917-48245caf20c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>43c5dbf9-3574-4373-9d3f-f1b49a7247c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateGeoPrivacyAssent" searchProperties="true" id="1a42b403-fac9-4e9b-beba-08428b612d51"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="8115a839-72ad-411b-a9a4-d5875210b62c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

tC.setPropertyValue("expectErrType","SUCCESS");

if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
{
	tC.setPropertyValue("Policy_Class","urn:dece:type:policy:GeoPrivacyAssent");
}
else
{
	tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:GeoPrivacyAssent", "UTF-8"));
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="2be07e21-4be8-40f1-83e7-1b8f57847b2d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreateSinglePolicyPost_CLGAttestation");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateGeoPrivacyAssent" id="b305b9d4-15fd-4703-8e5a-891fd81e2ce0"><con:settings/><con:config service="Policy_Create" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="Policy_Create_User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateGeoPrivacyAssent" mediaType="application/xml" postQueryString="false" accept="" id="9d609a17-02d2-48a8-bf0d-c99e8bd7fa8a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd"  xmlns:dece="${#Project#coordinatorSchema}"  xmlns:ds="http://www.w3.org/2000/09/xmldsig#"  xmlns:md="http://www.movielabs.com/md"  xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <dece:Policy>
    <dece:PolicyClass>urn:dece:type:policy:GeoPrivacyAssent</dece:PolicyClass>
    <dece:Resource>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_REQ_ENTITY}</dece:Resource>
    <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
    <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_CREATED_BY}">
        <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
    </dece:ResourceStatus>
  </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="b6911ceb-53ee-41a7-9be5-93f4bcaa15d9">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreateGeoPrivacyAssent');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                             contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);



tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="ee2e0b7e-288a-4384-94fd-cb6f4729c239">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSx1XIhZRcVJAol116WtoCvey+VMaZgNvEobETLr/+2KGhQGkPeyQk5Ml45puZz599zlAcWX6TMUg5SajSa9fVZzcYIzuouZqDTE+zLdfR3LHtajCuVbGHHYydM1XpMZZBjzKOKK+rlmHamlHTTHdk2H7V9k2jYhreH1V5gJSJ0MKlYqjKIo4o84u0dTVLqZ8gRphPUQzM59gfNq+vfOHpoxKT2jhfoywSpo0p5zNf13ElAAxRhCs4ifVzfcfnPGD+kEwo4lkK7zkDVlff987n88q8WknSiW4ZhqEbni58AkYmp2rjpNwMQY+GyXrdQjShBKOIrJAEdQ18mgRKM5okKeHT+IvQpm4aMrQGC6xh06anqv6RoEB3ZKQdkClDGpsisww2gBBSoBiU+0Gvrp4eN8H13lGKKAuTNGZ767+DBDSHKJlBoLGyshLd8REPtKtxDtjvURxljOTQlzSZIQxMuU0hJIsrwgT5AqYU41cWTPxIyTLAfzOWc30bq4CuH+hOm0yA8f8zs+15raM8oCiDxqg1bv3KkzB6YffuaOXlj0+jZv96sDCTegFh23kNajPu9/U+WTfcet9EXow5zfTJz2rIU3a57F+vFvok/xE6FxeDZrdvvS76o9Xc/NMjncfbkUmc5T/h4len5dyEYdd4dJfcnJ7d9ZtxrXMypoJSgetG/MqMu5bbreZhdTJ8es28S2g/3V0+rB6uhsv+mOg/HgeM2nduzbhCPy9vfg9+42knfTXYIzOY/YDDE+/6p+3eNy/N1aRlgnfm8E79o6btGnaNpSQMs/ELYF4uJT16baUr5oX49/IiLSTQwsLVn0mNYhwoVxtyl5QWPxMCRAJfDHO97rbMs1q11uoalmfZXrdj2IbZNZqG43k1p3ZRatAaxR7EVkJDInNJlV3z53uAOPYZ0ABSLU8yPAWmfhOxjThSenQgDkdCGYwSoeKsyufma+5FS3BraGVOxk7ohmGqKv2E39CbtBlySHeV29lR7gFgMiMg5V3ymwmCMy5a8YbyjEdmJUcVCpm4AFKpwb5lu2c6I/EsAglUj5Mgi6Aym86Kxuhs/W9pCLPCOuiMinP3ZVn738oOCJ+ASAcma7kAMUU4cAUZZSFfFmwa2wWX4ZtZQOTxEu3kKcFrJLufPlgi6bGhiKjouTV8NkvcG/ejt3/eqX8DSt/vxyZRkJOttOVdKq4HIR6NcppvqPJWyfI8K+bnSGFMRXhd6KOpDwFnQt2Wo+QVqL4JoR91uWxQ72Xe2HfxZXxKhxxxiAXblGJ5xMtiCEy+LHrilCyOfbbspBR947Dgh2ytSDxAJOJv3yjYx9JPmG/F3zxJg49xHYi1lUfUKZ4TnNCJXMlrZPkFKXAiwhKhe0m6HfxQgEPJd42bJm+wcMGmccbh6y+KFLS6ijBOMsp7bbUwbItsgZMvZ+B/OH0KUwj5+828YF/ezE/XV0MhdzFSN77kv501UtAFgyofAAWWuroQD02RnE62RP0d4Cddr1nuRbtrWW7N2tZ1x7A2ur5bSeOT+bNlq6f756HxLw==</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00005_UserUpdate_FUNC_NonCS_Full_Update_UserName_Others</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Update_Access_NonCS</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4DAFF5120AEA1B8E0401F0A079957C6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D12F2DD48A10D559E0401F0A059918B0/User/urn:dece:userid:org:dece:D12F2DD48A1ED559E0401F0A059918B0/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/11/Account/urn:dece:accountid:org:dece:FC156628BDF22862E0401F0A0799702B/User/urn:dece:userid:org:dece:FC1565BA1C6F077DE0401F0A07997011/Policy/urn:dece:type:policy:GeoPrivacyAssent</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn:dece:type:policy:GeoPrivacyAssent</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">/opt/dece/certs/RET_concat.pem</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:FC1565BA1C6F077DE0401F0A07997011</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC156628BDF22862E0401F0A0799702B</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E4DAFF51203BA1B8E0401F0A079957C6</con:value></con:property><con:property><con:name>NODE_USER_ID_REQ_ENTITY</con:name><con:value>FC1565BA1C6F077DE0401F0A07997011</con:value></con:property><con:property><con:name>NODE_USER_ID_CREATED_BY</con:name><con:value>FC15636CF029249FE0401F0A0799676B</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bd6efb96-bbf3-4226-9917-48245caf20c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6f62f720-8990-433e-b87f-e5bfb4b7fa27</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update_UserStatus" searchProperties="true" id="8b84599f-9011-4a1a-a266-93bd146fbbc4"><con:settings/><con:testStep type="groovy" name="Update_User_Status" id="6ec2efe5-9d4b-4be7-afd4-000076dada5e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def status = context.expand( '${#TestCase#Status}' )
def userID = context.expand( '${#TestCase#User_OID}' )

def dbHost = context.expand( '${#Project#targetSystem}' );

a = new dbUtils.dbUtils(log,dbHost);

String sql = """update ACCOUNT_USER set STATUS = '$status' where USER_OID =  hextoraw('$userID')""";

log.info "SQL : " + sql;

a.dbConnExecuteUpdate(sql,dbHost);
</script></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>deleted</con:value></con:property><con:property><con:name>UserID</con:name><con:value>${#TestCase#UserID}</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E357C457986AEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE357C457986AEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>user_oid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">17C1DBB1D035A826E0533D991F0A3A09</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E357C457986BEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00027_FUNC_UVTC_UserName_RequestorUser_any_with_active_status_RequesteeUser_any_and_deleted_UnlockMe_200_OK_P2</con:value></con:property><con:property><con:name>sName</con:name><con:value>03.UserValidationTokenCreate_FUNC_P1</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20130917_070832</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update_AccStatus" searchProperties="true" id="80487ede-aacb-4a03-9614-e48d276255d6"><con:settings/><con:testStep type="groovy" name="Update_AccStatus" id="ee521f02-7420-44a3-a842-dcf9ac88d4f8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def status = context.expand( '${#TestCase#Status}' )
def accountID = context.expand( '${#TestCase#account_oid}' )

a = new dbUtils.dbAccount(log,context.expand( '${#Project#targetSystem}' ));

assert a.accountSetStatus(accountID,status) == 1;

</script></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>mergedeleted</con:value></con:property><con:property><con:name>UserID</con:name><con:value>${#TestCase#UserID}</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E357C457986AEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE357C457986AEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>user_oid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00040_UserGet_FUNC_NonCS_Get_AccStatus_Mergedeleted_P2</con:value></con:property><con:property><con:name>sName</con:name><con:value>06.Functional_UserGet_NonCS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5fdeaf38-c814-4c84-a148-2fc4448e3d23</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7ebe7972-d488-48c3-9a7f-c13ef2cdf20d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update_Policy_Status" searchProperties="true" id="0fe6ceb2-bf24-4dc3-a614-abc94dd19143"><con:settings/><con:testStep type="groovy" name="Update_Policy_Status" id="d3c3b099-610c-4859-9bdc-74333e63bbf1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def status = context.expand( '${#TestCase#Status}' )
def policyclass = context.expand( '${#TestCase#Policy}' )
def username = context.expand( '${#TestCase#Username}' )

def dbHost = context.expand( '${#Project#targetSystem}' );

a = new dbUtils.dbUtils(log,dbHost);


//String sql = """update POLICY set STATUS = '$status' where CREATED_BY = hextoraw('$userID') and POLICY_CLASS = '$Policy'""";


String sql = """update policy set status = '$status' where status = 'active' and policy_oid in (select policy_oid from policy_relationship where policy_actor in 
((select user_oid from account_user where lower(username) = lower('$username')),
(select account_oid from account_user where lower(username) = lower('$username')))) and policy_class='$policyclass'"""



log.info "SQL : " + sql;

a.dbConnExecuteUpdate(sql,dbHost);






</script></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>deleted</con:value></con:property><con:property><con:name>UserID</con:name><con:value>${#TestCase#UserID}</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E357C457986AEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE357C457986AEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>user_oid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E67B0B0EA6B4A35AE0401F0A059938AF</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E357C457986BEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00016_UserGet_FUNC_NonCS_No_ManageUserConsent_P1</con:value></con:property><con:property><con:name>sName</con:name><con:value>06.Functional_UserGet_NonCS</con:value></con:property><con:property><con:name>Policy</con:name><con:value>200</con:value></con:property><con:property><con:name>username</con:name><con:value>usercreate20130924_032248</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5fdeaf38-c814-4c84-a148-2fc4448e3d23</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7ebe7972-d488-48c3-9a7f-c13ef2cdf20d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RenameTCs" searchProperties="true" id="9dedc8c4-1bc7-4f3d-90f8-76fc1c3bb757"><con:settings/><con:testStep type="groovy" name="Rename" id="84eb1ee1-1b12-4b35-b3fc-c9932c9de6b7"><con:settings/><con:config><script>import java.io.*;

def testCase  = testRunner.getTestCase();
def testSuite = "04.UserValidationTokenCreate_Access_P1";

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

BufferedReader br = new BufferedReader(new FileReader("C:\\Users\\ralluri\\Desktop\\TCs.txt"));

def newTestCaseName;

log.info "TCCount:"+TCCount;

for(i = 0; i &lt;= TCCount - 1; i++)
{               
                def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);

                newTestCaseName = br.readLine();
                log.info "Input Test Case Name: "+newTestCaseName;
                
                                targetTestCase.setFailOnError(true);
                                targetTestCase.name = newTestCaseName;    
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Get_Responses" id="e30d35b2-c0e5-4faf-b4af-527cf400ad64"><con:settings/><con:config><script>import java.io.*;

//def commonTestStep = "User_Delete_API";

def testCase  = testRunner.getTestCase();
def TSList = testRunner.testCase.testSuite.project.getTestSuiteList();
def TSCount = testRunner.testCase.testSuite.project.getTestSuiteCount();

//def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
//def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();


log.info "TS List:"+TSList[0].name;

//log.info "TCCount:"+TCCount;

for(k in (0..TSCount-1))
      {
            def testSuite = TSList[k].name;
            def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList(); 
            def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();
            log.info "TestSuite  " + testSuite +"  TCCount:"+TCCount;
            log.info "TSList[k].disabled " + TSList[k].disabled 
            
            if ((TSList[k].disabled).toString() != "true")
            {                              
                  for(i in (0..TCCount-1))                                                                  
				{                                                                                         
                  	try {
                        		def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
						def targetStep = targetTestCase.getTestStepByName(commonTestStep);
						log.info  testSuite + " " + targetTestCase.name+" "+targetStep.getPropertyValue("ResponseType");         
                  		}
                  	catch(Throwable e) {
                        log.info "Exception : " + e;
                        }                                                                              
                   }                              
            }
      }
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserValidationTokenCreate_Account_User" searchProperties="true" id="87aaa131-c493-425d-8953-d52f00d1d732"><con:settings/><con:testStep type="groovy" name="SetPem" id="26c150b6-7f6b-48dc-aab8-87bbc685357a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("UserValidationTokenCreate");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="UserValidationTokenCreate" id="56be7576-4e05-403d-ac6e-a74625044df0"><con:settings/><con:config service="UserValidationTokenCreate" resourcePath="${#Project#HostName}/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}/VerificationToken/{TokenType}" methodName="UserValidationTokenCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserValidationTokenCreate" mediaType="application/xml" postQueryString="false" sslKeystore="ACCESS_concat.pem" id="bc89fd3d-63d7-4393-8f06-84b03c63632f" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">Mandatory and Data</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:originalUri>https://qa1.p.uvvu.com/rest/2015/02/Account//User/urn:dece:userid:org:dece:16ACF97A7BC018ACE05305991F0A9199/VerificationToken/urn:dece:type:token:ValidateEmail</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="TokenType" value="${#TestCase#TokenType}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Response_Details" id="8fb8431a-4b55-4dfb-9130-7551c6ce2568"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('UserValidationTokenCreate');
def expXML = tStep.httpRequest.response.getResponseContent();
log.info "Extracting Response Details"

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);



tC.setPropertyValue("httpLocation", contentLocation);

log.info "End of Extracting Response Details"
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response_Details" id="a31e63bb-2b6d-48de-a27b-50f6b97d7da3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#errorRespType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;


String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype =  context.expand('${#Project#expectHTTPcontenttype}');
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
                errorHost = "http://error.decellc.org";
} else {
                errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
               case "SUCCESS":        
                			  log.info "Success message --->"	                        
                                expectHTTPstatus   = "HTTP/1.1 200 OK";
                                XMLbodynull        = true;
                                httpLocationHeader = true;
                                //this.log.info "Hello";
                break;           
                
                case "API_NOT_AUTH":
                		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
                		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
                		//errorReason = "API call not authorized";
					errorReason = "The API call is not authorized.";
                		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
                break;

                case "ACCOUNT_FORBIDDEN":
                          expectHTTPstatus = "HTTP/1.1 403 Forbidden";                               
                          errorID = "urn:dece:errorid:org:dece:AccountIdUnmatched";
                          //errorReason = "Request Account ID not match";
					 errorReason = "The account ID does not match.";
                          errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
                break;

                case "SECURITY_FORBIDDEN":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";                               
                                errorID = "urn:dece:errorid:org:dece:securitycontext:unauthorized";
                                errorReason = "The request is not authorized.";							
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html";
                break;

                case "NOT_FOUND":
                                expectHTTPstatus = "HTTP/1.1 404 Not Found";                               
                                 XMLbodynull        = true;
                                 httpLocationHeader = true;
                                 expectHTTPcontenttype = "text/xml;charset=UTF-8";                               
                break;   
			
			case "INVALID_TOKENTYPE":						
                                expectHTTPstatus = "HTTP/1.1 400 Bad Request";                               
                                errorID = "urn:dece:errorid:org:dece:TokenTypeNotValid";
                                //errorReason = "Token type in the request is not valid";
						  errorReason = "The token type is not valid";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#TokenTypeNotValid";
                break;   

			case "INVALID_METHOD":
						expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
						errorID = "urn:dece:error:MalformedRequest";
						//errorReason = "405 Method Not Allowed. The request cannot be fulfilled because the method is unknown or not supported at the requested server.";	
						errorReason = "The request cannot be fulfilled because the method is unknown or not supported by the server.";							
			break;
			
			case "INVALID_USERID":						
                                expectHTTPstatus = "HTTP/1.1 400 Bad Request";                               
                                errorID = "urn:dece:errorid:org:dece:UserIdInvalid";
                                //errorReason = "The supplied UserID is invalid.";
						   errorReason = "The user ID is not valid.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
                break;   
                case "FORBIDDEN_COORD":
			               expectHTTPstatus = "HTTP/1.1 403 Forbidden";
						errorID = "urn:dece:errorid:org:dece:RequestCannotBeServiced";
						//errorReason = "Coordinator cannot service the request.";
						errorReason = "The request cannot be serviced.";
						errorLink = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestCannotBeServiced";
			break;
			case "USER_STATUS_NOT_VALID":
						expectHTTPstatus = "HTTP/1.1 400 Bad Request";
						errorID = "urn:dece:errorid:org:dece:UserStatusNotValid";
						//errorReason = "The user status is invalid.";
						errorReason = "The member\'s status is not valid.";
						errorLink = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserStatusNotValid";					
			break;
			case "REQUESTOR_NOT_ACTIVE":
						expectHTTPstatus = "HTTP/1.1 403 Forbidden";
						errorID = "urn:dece:errorid:org:dece:RequestorNotActive";
						//errorReason = "The requestor is not active.";
						errorReason = "The requesting member is not active.";
						errorLink = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";	
			break;
			case "FORBIDDEN_USER_LINK_CONSENT":
						expectHTTPstatus = "HTTP/1.1 403 Forbidden";
						errorID = "urn:dece:errorid:org:dece:Policy:UserLinkConsentRequired";
						errorReason = "The setting of the \"User Link Consent\" policy prevents the requested action from being completed.";
						errorLink = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:UserLinkConsentRequired";	
			break;

			case "Invalid_Assertion":
						expectHTTPstatus = "HTTP/1.1 403 Forbidden";
						errorID = "urn:dece:errorid:org:dece:securitycontext:InvalidAssertion";
						errorReason = "The security token is required.";
						errorLink = "$errorHost/rest/$major/$minor/error/en/ErrorList.html";	
			break;
						
			
}

// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
log.info("Assert On Http Status");
log.info("Actual : '" + context.expand( '${#TestCase#httpStatus}' ) +"'");
log.info("Expected : '" + expectHTTPstatus +"'");
assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
/*
if (XMLbodynull) {
                //assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
                //assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
*/


log.info("Assert on Content-Type");
log.info("Expected : '" + expectHTTPcontenttype + "'");
log.info("Actual : '" + context.expand( '${#TestCase#httpContentType}') + "'"); 



//XML body should be null test
if (XMLbodynull) {

                assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
                def myXML = new XmlSlurper().parseText(XMLbody);
  
                if (errorRespType != "SUCCESS" ) {
                                // Verify response sizes...
                                assert myXML.Error.size() == 1;
                                assert myXML.Error.Reason.size() == 1;
                                assert myXML.Error.OriginalRequest.size() == 1;
                                assert myXML.Error.ErrorLink.size() == 1;
                                
                                // ErrorCode
                                this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
                                assert myXML.Error.@ErrorID.toString() == errorID;
                
                                // ErrorReason
                                this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
                                assert myXML.Error.Reason.toString() == errorReason;

                                // ErrorLink
                            //    assert myXML.Error.ErrorLink.toString() == errorLink;
                } 
                
 } 



</script></con:config></con:testStep><con:properties><con:property><con:name>TokenType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:token:UnlockMe</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>text/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorRespType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/ACCESS_concat.pem</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00040_PERM_UVTC_UserName_Valid_Role_AccessPortal_with_TokenType_UnlockMe_200_OK_P2</con:value></con:property><con:property><con:name>sName</con:name><con:value>02.UserValidationTokenCreate_PERM_P1</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>ACCESS</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VynlMGW8sxhWoYsnCDdmAMCQvU0JuQIktGUsGwtePZMABAhlmnlzdbnWfXnTUVxyFge3VOYdYEEZzyzCg3Eu1VS2JqccQJ9yjKATuCez16g8dz86bHtoe0XLtVlX7u+hUyqWR7+u+47t6wSmb+ghMrJexM6oULQsjjKUp5wm0KReIiqpmm1ZRN0u6WelbFc+xvEIxb7vmu5YbQMylb2mSN7UNqCWvalMhIs8wFotFfuHkWTwxbNO0jOFDp4enECKtdrXOKA0U1zb2OO8DhiDAecxC48rYs7nyudcjE4pEEsMmln8qlmmYFUPa+JxMLrTsLPhtOmap2ESUUYJRQFZI1ecBxJT5uXowYTER0/BkEpapHOuwxDq2CvRCM/ahneloD2HMkc6nyNr46sIYYqAYcq/ddlW7OK9r6dF+jCgfszjk++J/wwN0DgGLwNf5Nq0NtPMdHqlU7Qqw16Y4SDiZw6Ma1ghh4JtuAj7fVe45hjFZdgiXA7rkCp2xC+9AXFejRSbAxf9p0E5z1k4GKEig5t+1S0tcDmgwmYrb1Ssa4cgZjlsPU1ZNAewap4qstWvxYCizIVqfQOXxW+9PRZDXO0afisHn4v3xsdIqvjT6L0OHTsT746zDCy1r+DBySuXWfa85ub//8F96cfinbCW35ZYgw8tFNHWj9lvJtimPP+P+3XDVKLaHo2Wl6w4apeRu8Adffr58NIfB/cj0B4Mi67jd4dga88Fft7fh/M4IPsqvbgdfvjmL58LsfTJ4BNRn1uohuV6GH6JrVrN0dvDv67Z3vpeMPgCLrajGoN3K3cguIfE7mSkN8fVxaupFiny4ACq0mjqluMNLJN0R35M9XMuWazUarl0vF23XbZnOtVl0nOtKxbox642benFLMmsUBxCbjI6JiqUodz02vwPEoceB+hDrc5ZIpuPaLx5bSKBcm3blJWCUQ59JerYmoYQOvjtb4NKHhb/G4WrlRwVHyz0y8USf4vpYQLzHyba9x8ldwCQioIhbzTWXg82FrMUMzRMRWPk5ylNIJLXHimU9u+AWDU7CKACF1AiZnwSQj6ZRWhmDr7+2jjBPtd3rfnrbTuZ1+G9bAmnjE2XAVS4NkG2EI4+Ls03keMKW2Tet3YS37uuJT9TFkvUUMcFrJPu/vsdEzUc2I/Vm87rX26LOjM87LMvx86TxCyTjsBpZIH9OdsJuH275BEjSqG17OUNWfpZP5vMkbV+h4BixdG+o+himbfQAJ5LWvvrsE6iReTHOekMy4AfBM/0+xERMaU8gAaEct1wqnrE09ICrpaEt78ny3I1kL6QsnYClOKZrBnLhUYh/3Ymwh5WdVD/Lz4LF/nfHjvjaiSPzlDuDIHSiJPV+fJ2YC8ykWyKZj8W7zo85OBZ8X5kVOcMi5ECNEgGn/+QUpVU1WT2WUNFuaalil2ZTnOIrAu/b6IeblMmz1Y78+26nk3QEMMiFkJPUv3qhPXUF6GSHqjdBT7B1+Te23kdX+6H+qdmp0+GM1/4B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:181BB82A75288D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:181BB82A75278D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>181BB82A68DC8D03E0533E991F0ABFA5</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>05f29811-9d45-4892-ab42-c44278163a96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>QC_TestPlanDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestLabDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestSet</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="First_User_Create" disabled="true" id="8460a866-5bc0-4352-88b9-9f8720556504"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Account_Create_Firsrt_User_Create_STS_Policies" searchProperties="true" id="bf6be7d4-9561-4c60-9314-ec69bcea736d"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="f05e0c99-e0d5-45df-a3a3-69bdd405b626"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def uname= "uvtc_firstuser_201502_"+ new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);

tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));




</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Create" id="b22f4d74-fbc4-4f52-a231-a2af54a4c7b5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("AccountCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for First User Create" id="57425f41-8bed-43f1-9682-e8ddf1503292" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "uvtc_firstuser"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);

tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call First User Create" id="89dbbb5b-ca70-4576-bddc-ad8814220224" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("FirstUserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS API for First User" id="c59c261e-5586-4111-b07d-6cd1242ceabb">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def callTSname = tS.getPropertyValue("sName");

def callTS = tP.getTestSuiteByName(callTSname);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;



tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID1",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call Policy Create - TOU" id="e6208c62-8032-4167-8fe7-b1e646db891c" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateTOU_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call Policy Create - MUC" id="46b32662-9018-40a0-a4f9-f1cc928f2dae" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateMUC_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20150522_074127</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>181BB82A75828D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:181BB82A75828D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>uvtc_firstuser_201502_20150610_010459</con:value></con:property><con:property><con:name>SurName</con:name><con:value>uvtc_firstuser_201502_20150610_010459</con:value></con:property><con:property><con:name>UserName</con:name><con:value>uvtc_firstuser_201502_20150610_010459</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>181BB82A75838D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A75838D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:181BB82A75838D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A75838D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>16ACF97A7D4518ACE05305991F0A9199</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1996-05-26</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_658e1332-9074-4cdf-be37-fc55228b0d70</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_658e1332-9074-4cdf-be37-fc55228b0d70</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZrU/I6EP4rTN+PTOmNInSEGS5eOCIioKN8cUK6hWibYJNy8de/SYEKiBzO+dTZ7Wb32Uue7CVHUWh7dc4hFoTR3DIKKfdSbVVLYuoxxAn3KIqAewJ7g/p9x7MLpoe2R7Rcu1XV3kpuGSzHsfWKeVHUi9gP9DE4F3qAXde2y2PTvzClKecJtCkXiIqqZpuWq5sl3awMrYrnWJ5rFUoX1kjLPUPMpW9pUpCn1qCWvKpNhZh5hrFYLAoLp8DiiWGbpmW83HcGeAoR0mqX64zSQHFtY48LPmAIQ1zALDIujT2bS597AzKhSCQxbGL5v8UyDbNiSBufk8kfLTsLfpsGLBWbiDJKMArJF1L1uQcxZX6uHk5YTMQ0+jUJy1SOdVhiHVtF+kcz9qGd6WgPYcyRzqfI2vjqQwAxUAy5p367qv05r2vp0WGMKA9YHPF98b/hATqHkM3A1/k2rQ208x0eqVTtErDXpjhMOJlDVw3rDGHgm24CPt9VrhdDQJYdwuWALrlCZ+zCOxDX1WiRCXDxfxq005y1k2cUJlB7vHl67V6930D/Jhz4YWmEodzoTa/m9XI1BbBrnCqy1q7Fg6HMhmh9YhC6eVJ5Gb4MnDtjVOqNO3fRMm+x14ZbLL7m300SiA/R6M9kguKh9HHP2qu8G3ZvV/f9IYv/GQW3Lh3jzkO9MUCtZrd3U7m9eWzk407E2OLp5ZYjhoLF06PbfOxOHRiPo49GJ98dDZ+MUdtq9mQh7OVtiPJ48fjZtqBXumusSOfGWfFVvbJ8NsbJU1DqXI/r1SydHfz7uu2dHyTjd8BiK6oxaLdy17JLSJwmM6Uhvh6kpt5MkQ8XQIVWU6cUd3iJpDvie7KHa9kqW41G2a5fuGWn3DKdK9N1nKtKxbo2643rurslmTWKA4hNRgOiYinKXY/NaYA48jhQH2J9zhLJdFw74bGFBMq1aV9eAkY5DJmk55nM5yIJaWn27vCvyjuy3Wi1WH1puS4TD/QhrgcC4j1Ktu09Su4DJjMCirfVWHM511zIUnyieSJCqzBHBQqJZPZYkaxnF8uuwUk0C0EBNSLmJyEUZtNZWhiDr7+2jjBPtf2rYXrZfk3r8N+2AtLGJ8qAq1waILsIR96W4jaR4wlb5tC0dhPeuq8nPlH3SpZTxASvkez/+p4SNR7ZiMiM3pqDN2uLOzM/+/jPk8YJUMZhPbJA/pzshN2+3PINkKxR23bzE1mFz0IynydpA4tFx4ile0NVyDBtYwA4kby2GrIPoEbmxTjrEcmAHwTP9PsQEzGlA4EERHLgcql4xtYwAK62hra8KMtzV5K9kLJ0ApbimK4Zyo1HIT65FGEPKzup7snPgsX+d8eO+NqJI/OUS4MgdKIk9YCsfpkLzKRbIqmPxbvOjzk4FnxfmRU5wyLkQI0TAb//ySlOq2oIY5ZQ0W5pqWKXZ1OcYjUD79voh5uUyrPdjvz7cqeTdAQwyI2Qk9S/eqI9dQXoZIerN0F/oWv7FF3vo6v9UP/U7NTpcMZrfwE=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZrU/I6EP4rTN+PTOmNInSEGS5eOCIioKN8cUK6hWibYJNy8de/SYEKiBzO+dTZ7Wb32Uue7CVHUWh7dc4hFoTR3DIKKfdSbVVLYuoxxAn3KIqAewJ7g/p9x7MLpoe2R7Rcu1XV3kpuGSzHsfWKeVHUi9gP9DE4F3qAXde2y2PTvzClKecJtCkXiIqqZpuWq5sl3awMrYrnWJ5rFUoX1kjLPUPMpW9pUpCn1qCWvKpNhZh5hrFYLAoLp8DiiWGbpmW83HcGeAoR0mqX64zSQHFtY48LPmAIQ1zALDIujT2bS597AzKhSCQxbGL5v8UyDbNiSBufk8kfLTsLfpsGLBWbiDJKMArJF1L1uQcxZX6uHk5YTMQ0+jUJy1SOdVhiHVtF+kcz9qGd6WgPYcyRzqfI2vjqQwAxUAy5p367qv05r2vp0WGMKA9YHPF98b/hATqHkM3A1/k2rQ208x0eqVTtErDXpjhMOJlDVw3rDGHgm24CPt9VrhdDQJYdwuWALrlCZ+zCOxDX1WiRCXDxfxq005y1k2cUJlB7vHl67V6930D/Jhz4YWmEodzoTa/m9XI1BbBrnCqy1q7Fg6HMhmh9YhC6eVJ5Gb4MnDtjVOqNO3fRMm+x14ZbLL7m300SiA/R6M9kguKh9HHP2qu8G3ZvV/f9IYv/GQW3Lh3jzkO9MUCtZrd3U7m9eWzk407E2OLp5ZYjhoLF06PbfOxOHRiPo49GJ98dDZ+MUdtq9mQh7OVtiPJ48fjZtqBXumusSOfGWfFVvbJ8NsbJU1DqXI/r1SydHfz7uu2dHyTjd8BiK6oxaLdy17JLSJwmM6Uhvh6kpt5MkQ8XQIVWU6cUd3iJpDvie7KHa9kqW41G2a5fuGWn3DKdK9N1nKtKxbo2643rurslmTWKA4hNRgOiYinKXY/NaYA48jhQH2J9zhLJdFw74bGFBMq1aV9eAkY5DJmk55nM5yIJaWn27vCvyjuy3Wi1WH1puS4TD/QhrgcC4j1Ktu09Su4DJjMCirfVWHM511zIUnyieSJCqzBHBQqJZPZYkaxnF8uuwUk0C0EBNSLmJyEUZtNZWhiDr7+2jjBPtf2rYXrZfk3r8N+2AtLGJ8qAq1waILsIR96W4jaR4wlb5tC0dhPeuq8nPlH3SpZTxASvkez/+p4SNR7ZiMiM3pqDN2uLOzM/+/jPk8YJUMZhPbJA/pzshN2+3PINkKxR23bzE1mFz0IynydpA4tFx4ile0NVyDBtYwA4kby2GrIPoEbmxTjrEcmAHwTP9PsQEzGlA4EERHLgcql4xtYwAK62hra8KMtzV5K9kLJ0ApbimK4Zyo1HIT65FGEPKzup7snPgsX+d8eO+NqJI/OUS4MgdKIk9YCsfpkLzKRbIqmPxbvOjzk4FnxfmRU5wyLkQI0TAb//ySlOq2oIY5ZQ0W5pqWKXZ1OcYjUD79voh5uUyrPdjvz7cqeTdAQwyI2Qk9S/eqI9dQXoZIerN0F/oWv7FF3vo6v9UP/U7NTpcMZrfwE=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A75828D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A75828D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:${#Project#nodeidRTLCS}</con:value></con:property><con:property><con:name>UserPassword</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c59c261e-5586-4111-b07d-6cd1242ceabb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>tName</con:name><con:value>TC_DECE_00041_PERM_UVTC_UserName_Valid_Role_Retailer_CS_with_TokenType_UnlockMe_200_OK_P2</con:value></con:property><con:property><con:name>sName</con:name><con:value>02.UserValidationTokenCreate_PERM_P1</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E603091B0B6BE1E4E0401F0A05995622</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E603091B0B6BE1E4E0401F0A05995622</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E6030B86105B021EE0401F0A07992E9E</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E6030B86105B021EE0401F0A07992E9E</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:${#Project#nodeidRTLCS}</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="User_Create_API" disabled="true" id="bb3eee6b-9748-481b-8f8b-ddd65c4e633d"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="User_Create_STS_Policies" searchProperties="true" id="d4a22e7e-29ae-4d26-b76c-def0e45086de"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="27d7ed5d-3471-474a-90b0-bd0d0ce61dc1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("userType",null);
tC.setPropertyValue("Privilege",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("GivenName",null);
tC.setPropertyValue("SurName",null);
tC.setPropertyValue("PrimaryEmail",null);
tC.setPropertyValue("Language1",null);
tC.setPropertyValue("DisplayImageURL",null);
tC.setPropertyValue("AlternateEmail",null);
tC.setPropertyValue("PostalAddress",null);
tC.setPropertyValue("PostalCode",null);
tC.setPropertyValue("Locality",null);
tC.setPropertyValue("StateOrProvince",null);
tC.setPropertyValue("Country",null);
tC.setPropertyValue("TelephoneNumber",null);
tC.setPropertyValue("MobileTelephoneNumber",null);
tC.setPropertyValue("MeetsAgeOfMajority",null);
tC.setPropertyValue("DateOfBirth",null);
tC.setPropertyValue("urnUser",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("QuestionID1",null);
tC.setPropertyValue("QuestionResponse1",null);
tC.setPropertyValue("QuestionID2",null);
tC.setPropertyValue("QuestionResponse2",null);
tC.setPropertyValue("ResourceStatus",null);

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_USER_ID_FULL",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("SAML",null);
tC.setPropertyValue("ResponseType",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="e4457366-ffe3-4c20-9707-5fb5d033e5ab"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tS.getPropertyValue("sName");
def callTCname = tS.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tP.setPropertyValue("Request_XML",tP.getPropertyValue("Request_XML_Buffer"));

tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserCreate"));

tC.setPropertyValue("SAML",callTC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("userType",callTC.getPropertyValue("userType"));
tC.setPropertyValue("GivenName",callTC.getPropertyValue("GivenName"));
tC.setPropertyValue("SurName",callTC.getPropertyValue("SurName"));
tC.setPropertyValue("PrimaryEmail",callTC.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("Language1",callTC.getPropertyValue("Language1"));
tC.setPropertyValue("DisplayImageURL",callTC.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",callTC.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",callTC.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",callTC.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",callTC.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",callTC.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",callTC.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",callTC.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",callTC.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("urnUser",callTC.getPropertyValue("urnUser"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",callTC.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",callTC.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",callTC.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",callTC.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",callTC.getPropertyValue("ResourceStatus"));
tC.setPropertyValue("LegalGuardian",callTC.getPropertyValue("LegalGuardian"));

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID1", callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL", callTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("SAML",callTC.getPropertyValue("SAML"));
tC.setPropertyValue("CLG_NODE_USER_ID",callTC.getPropertyValue("CLG_NODE_USER_ID"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create" id="eff808d4-5ee2-4e3d-966f-5d272d65ca38"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS API" id="6636aab1-4384-4223-849b-2de54e1e4327">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tS.getPropertyValue("sName");

def callTS = tP.getTestSuiteByName(callTSname);

tP.setPropertyValue("audience",callTS.getPropertyValue("audience"));

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

//tC.setPropertyValue("SAML_USER2",context.expand( '${#TestCase#SAML}'));
//tC.setPropertyValue("NODE_ACCOUNT_ID1",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
//tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
//tC.setPropertyValue("NODE_USER_ID2",context.expand( '${#TestCase#NODE_USER_ID}'));
//tC.setPropertyValue("NODE_USER_ID_FULL2",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call Policy Create - TOU" id="2bb0ae99-3f69-42b2-86cc-f20b02406a96"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateTOU_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call Policy Create - MUC" id="c5d7788d-ec5f-48aa-80db-33364e868aca"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateMUC_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1996-06-09</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_753d2697-0ab2-410d-8fe1-ae4eec66b185</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_753d2697-0ab2-410d-8fe1-ae4eec66b185</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2003-06-21</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1996-06-09</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E5F8A903DB8B8399E0401F0A07992F13:DC7DFFA6"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150605_025145</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17C2988F309363B9E0533D991F0A8093</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">17C2A3A43E6C6E10E0533D991F0A95E1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:17C2A3A43E6C6E10E0533D991F0A95E1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E5F89A132C6625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E56B6CBBFC218D76E0401F0A07991CCF</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc9o6EP4rjPvYMb4AwfYEZggkjVtICCackpeOkNeg1MhGkrnk11cy4AIJOZzz5Nn1avfbiz7tNUfz2PZanAMTJKGl9Tym3Mu1DS1j1EsQJ9yjaA7cE9gLWr2uZ5dND+2PaCW/09B+AUxqrjNxdBy5oFcdy9QdZDs6IAvC8GpSATSRppxn4FMuEBUNzTatmm5e6WZtaLqe5Xi2Wa5XrBetNALGpW9pUja1Hag1b2gzIVLPMFarVXlVKSdsatimaRk/e90Az2COtOb1NqM8EGvu7HE5BAxxjMs4mRvXxpHNdci9gEwpEhmDXazwXCzTMF1D2oScTL9oxVkIfRoludhGNKEEo5i8IVWfHohZEpZa8TRhRMzmZ5OwTOVYhzXWsVWlXzTjGNqFjo4QMo50PkPWztcAImBAMZSeB35D+3JZ1/KjQ4YojxI258fif8MDdAlxkkKo831aO2iXO/ygUs1rwJ5PcZxxsoQHNawpwsB33QR8uatSn0FE1l3C5YCuuUJnHMI7EbfV6JApcPF/GnTQnK2TEYozaLZ/+13c/lZPjdpPn8/q+D68+mEuu7et20YO4NA4VxSt3YonQ1kM0fbE82BBR09Jy7mLbFyLBjfBNz/u34/DXnXcMVvmiN5vKq3ROuzXkR+Mnsh4/DVZWL5166zuAp+uX8PFE/uW2q8uZJ1hrWMv2+h7b+oIetXtQv2F9ezxIvunO3tkw43f6vmuFTy9BvCjHncenFn6IqLN91F61zcXDD+sltVxNUNfv/br6T2Z1BCObixW64y7w+dGkc4B/mPd/s4H2eQVsNiLagz8TulOdgmJz8lMaUioR7mplyry4QKo0JrqlOIOL5N0R0JP9nArW/W27TrOXcV0q1eVG/fWrFUqHde17syWY7qVPclsUZxAbCc0IiqWotzt2HwOEM89DjQEpi+TTDId1z7x2EEClXw6kJcgoRyGiaRnK0JmFb8lTuxkrpW8Ou6G11bLt1ldKz0k4pE+slYkgB2RsmUfkfIAMEkJKOZWg83lZHMhi7FAy0zEVnmJyhQyye1M0axnV52awck8jUFBNeZJmMVQTmdpXhqDb7+2jjDPtYPbYX7dziZ2+m9fA2kTEmXAVS43IPsIH7wu1j6R8wnXDhPeu29lIVE3SxZUMIK3SI5//Z0TNSDFkMiMfrWDX9Yed2F+8fH3J41PQBmn9SgChUtyEHb/dstXQPJGc9/NBbLKi3K2XGZ5A6vVisGke0NVyDBtIwCcSWbbDJPfQI3Ci3HRM1IAPwle6I8hZmJGA4EEzOXAlXLxgr0hAK72Bl9elfWlS8lRSFk6AWvxka4dy51HIf50LcIeVnZS3ZefVcLCvx37wNdBHJmnXBsEoVMlqSdkc2YucCLdEkl+CTt0/pGDj4IfK4siF1iEHKhJJuD8n5JitYaGME4yKvyOlisOmTbHKTYpeH+N3rnJybzY7si/r3c6yUcAg9wJOcn9q0faU1eATg/Yehf0DGFXPiPsY3TNd+r3moM6nc548w8=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150605_025145</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20150605_025145</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>firstuser20130903_114248</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130903_114310</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>seconduser20130902_104922</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>17C2A3A43E6D6E10E0533D991F0A95E1</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>E5F89A132C6725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E56B6CBBFC228D76E0401F0A07991CCF</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-27</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>httpConnect</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>27d7ed5d-3471-474a-90b0-bd0d0ce61dc1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e4457366-ffe3-4c20-9707-5fb5d033e5ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00038_FUNC_UVTC_UserName_RequestorUser_any_status_RequesteeUser_any_and_active_ResetPassword_Role_RET_CS_200_OK_P1</con:value></con:property><con:property><con:name>sName</con:name><con:value>03.UserValidationTokenCreate_FUNC_P1</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:${#Project#nodeidRTLCS}</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Child_User_Create_API" disabled="true" id="54815342-06ed-46f6-8c4a-58ec79f8092e"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Child_User_Create_STS_Policies" searchProperties="true" id="d28a0c5d-89e3-4133-8e7a-f724774172a5"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="5693d113-a944-4e94-85b2-a927e8d069f2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("userType",null);
tC.setPropertyValue("Privilege",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("GivenName",null);
tC.setPropertyValue("SurName",null);
tC.setPropertyValue("PrimaryEmail",null);
tC.setPropertyValue("Language1",null);
tC.setPropertyValue("DisplayImageURL",null);
tC.setPropertyValue("AlternateEmail",null);
tC.setPropertyValue("PostalAddress",null);
tC.setPropertyValue("PostalCode",null);
tC.setPropertyValue("Locality",null);
tC.setPropertyValue("StateOrProvince",null);
tC.setPropertyValue("Country",null);
tC.setPropertyValue("TelephoneNumber",null);
tC.setPropertyValue("MobileTelephoneNumber",null);
tC.setPropertyValue("MeetsAgeOfMajority",null);
tC.setPropertyValue("DateOfBirth",null);
tC.setPropertyValue("urnUser",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("QuestionID1",null);
tC.setPropertyValue("QuestionResponse1",null);
tC.setPropertyValue("QuestionID2",null);
tC.setPropertyValue("QuestionResponse2",null);
tC.setPropertyValue("ResourceStatus",null);


tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("CLG_NODE_USER_ID",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_USER_ID_FULL",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("SAML",null);
tC.setPropertyValue("ResponseType",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="7ac260eb-6a2a-4109-b5c6-3cd49ff237a3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tS.getPropertyValue("sName");
def callTCname = tS.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tP.setPropertyValue("Request_XML",tP.getPropertyValue("Request_XML_Buffer"));

tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserCreate"));

tC.setPropertyValue("SAML",callTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("CLG_NODE_USER_ID",callTC.getPropertyValue("CLG_NODE_USER_ID"));

tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("userType",callTC.getPropertyValue("userType"));
tC.setPropertyValue("GivenName",callTC.getPropertyValue("GivenName"));
tC.setPropertyValue("SurName",callTC.getPropertyValue("SurName"));
tC.setPropertyValue("PrimaryEmail",callTC.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("Language1",callTC.getPropertyValue("Language1"));
tC.setPropertyValue("DisplayImageURL",callTC.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",callTC.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",callTC.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",callTC.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",callTC.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",callTC.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",callTC.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",callTC.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",callTC.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("urnUser",callTC.getPropertyValue("urnUser"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",callTC.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",callTC.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",callTC.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",callTC.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",callTC.getPropertyValue("ResourceStatus"));
tC.setPropertyValue("LegalGuardian",callTC.getPropertyValue("LegalGuardian"));

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID1", callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL", callTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("SAML",callTC.getPropertyValue("SAML"));
tC.setPropertyValue("CLG_NODE_USER_ID",callTC.getPropertyValue("CLG_NODE_USER_ID"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create" id="edccc006-9b15-43ef-8621-56f953f987c0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Policy Create - CLGAttestation for Child User" id="f0b3d2fd-8570-4db7-8628-d08eae32ed7f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateCLGAttestation")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("NODE_ACCOUNT_ID", tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("CLG_NODE_USER_ID", tC.getPropertyValue("CLG_NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_CHILD", tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL", tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("NODE_USER_ID_FULL", tC.getPropertyValue("NODE_USER_ID_FULL"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call Policy Create - TOU for Child User" id="6b04f029-d0fe-4566-b432-6718ef8c346a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateTOU_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("CLG_NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call Policy Create - GeoPrivacyAssent for Child User" id="7a1bd6ce-43ac-496e-9a3d-20a51123738e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateGeoPrivacyAssent")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("CLG_NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));



//myTC.setPropertyValue("tName",tC.getName());
//myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call Policy Create - MUC for Child User" id="9e683dae-6936-4421-9e5b-6cf051307e19"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateMUC_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("CLG_NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS API" id="c5295d99-5448-463a-a7c7-16da5cdfeac0">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tS.getPropertyValue("sName");

def callTS = tP.getTestSuiteByName(callTSname);

tP.setPropertyValue("audience",callTS.getPropertyValue("audience"));


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

//tC.setPropertyValue("SAML_USER2",context.expand( '${#TestCase#SAML}'));
//tC.setPropertyValue("NODE_ACCOUNT_ID1",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
//tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
//tC.setPropertyValue("NODE_USER_ID2",context.expand( '${#TestCase#NODE_USER_ID}'));
//tC.setPropertyValue("NODE_USER_ID_FULL2",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config>
      </con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-06-23</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_23451b94-890a-4ed9-8cab-f6312df8fd9c</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_23451b94-890a-4ed9-8cab-f6312df8fd9c</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2003-06-21</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>FC15636CF029249FE0401F0A0799676B</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2003-06-21</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E5F8A903DB8B8399E0401F0A07992F13:DC7DFFA6"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140618_123412</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>FC156628BDF22862E0401F0A0799702B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC156628BDF22862E0401F0A0799702B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>FC1565BA1C6F077DE0401F0A07997011</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:FC1565BA1C6F077DE0401F0A07997011</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E5F89A132C6625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E56B6CBBFC218D76E0401F0A07991CCF</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZZb+o8EH3vr4jSxypkAQJEBYmltOlGy9Lt5co4A7hNHBo7kPbXXzs0KVDox/0kJOTJeObMzPGxTxkKfMtpMgYRJyFV3E5d/WMVS2VzXCtp1ZqBtBJ4Na2K0Vib2EXT8ibViVfDquIyFoNLGUeU11XLMEuaYWtmdWiUnGLJMcuFil15UZUHiJgILVwKhqokgU+Zk6atq3FEnRAxwhyKAmAOx86geXPtCE8HZZjUxukKZZowasw4nzu6jgseYPB9XMBhoJ/qGz6nHnMGZEoRjyP4yumxuvq1d7lcFpbFQhhNdcswDN2o6cLHY2R6rDaOss3guXQSrtZtRENKMPLJJ5KgboDPQk9p+tMwInwW7Alt6qYhQ2uQYA2bJXqs6t8JUnQHRtoAGTGksRkys2B9mEAEFIMy6rt19fiwCa72DiNE2SSMAra1/jdIQBfgh3PwNJZVlqE7POKOdjVOATsuxX7MyAJuJU3mCANT7iKYkOSaMEE+jynp+JWEiR/JWAb4X8Zyqq9jFdD1Hd3pkCkw/n9mtj6vVZQH5MfQGAVvwe3JE+91q/zts9UipXsoLoyHyoVbTyGsO69A5eP+Wm+TNefW16ZWp3RFoO3a1w83vk6Cc7sFL5fnzYuLq7H+UnloX7aez+n7yc3FuDsqJqNWqA+HPfQejM7K528n8YhX+9HsfGoatenR58uAm7PgusWSi8X9Za8ZxLdWdxzhx0rt+S1Enj0f92HU/ng9uR8/PVv6YoyIPeBFYOX7bvzoPg7M9tXda2wnL0fLm3mvV7v8tNvVs+tbPD0/M+rfNa3XsGnMJGEQj18B82wp6eF2lK6YF+K/y4u0EE+bpK7OXGoU40C52pC7pLQ4sRAg4jlimKt1t22W7XKrabbtrlGpdM6MkmF2jaZRqdUqhmlmGrRCsQWxHdIJkbmkyq748ztAHDgMqAeRtghjPAOm/hKxgzhSXNoXhyOkDIahUHFzTCcJWlRrpFgpT18hSYIxm0TVUFVuQ96jvag54RBtSndlQ7r7gMmcgNR3SXAmGM646MU7WsTcNwsLVKAQixsgkiLsWKVqWWckmPsgkepB6MU+FOazedoZna3+LQ1hllr7Z8P04O2ta/tb1gLh4xHpwGQtLRBjhB13kJEVsrdg01gvOAvfjD0iz5foJ48IXiHZ/PRNE8mPnCOioj/twZ+cC7n7wdt/7tR/AaVv9yNP5C3IWtrsMhX3g1CPRjbNd1R4L8SLRZzOryKVMRLhdSGQpj4AHAt5+xiGb0D1PIR+0O2So97KnNs38cV8RgcccQgE25R0ecDTYgBMPi1ccUySQ98tGylF3zgkfJet7YsXiET86yMFO1j6CfOd+FuGkfc9rh2x1vKIOsV7ghM6lSt5j3zsIQUORVgihC+M1oPvCrAr+aYxb3KOhQs2jWMO+78oUtHqKsI4jCl3O2pqWFfZFCf/mIPz7fQjTKrkX1dzwvZezU831wOhdwFSc1/y384aSemCQZUvgBRLXU3ES1Mkp9M1Vf8C+EPYbava6nQtq2pbm8JutfIGblTS+GH+aVnr6fZ5aPwF</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140618_123412</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20140618_123412</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>firstuser20130903_114248</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130903_114310</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>seconduser20130902_104922</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>FC1565BA1C70077DE0401F0A07997011</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>E5F89A132C6725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E56B6CBBFC228D76E0401F0A07991CCF</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-27</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>27d7ed5d-3471-474a-90b0-bd0d0ce61dc1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e4457366-ffe3-4c20-9707-5fb5d033e5ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c5295d99-5448-463a-a7c7-16da5cdfeac0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00037_FUNC_UVTC_UserName_RequestorUserChild_any_status_RequesteeOtherUser_blocked_ResetPassword_Role_RET_CS_200_OK_P1</con:value></con:property><con:property><con:name>sName</con:name><con:value>03.UserValidationTokenCreate_FUNC_P1</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:RET_CS_1</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="UtilitySuite" disabled="true" id="56504d5d-b17b-4d74-8d59-e378d9cb5d8e"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RenameTestCases" searchProperties="true" id="a6aedc74-2e80-4072-acc9-9a81d460d8d0"><con:settings/><con:testStep type="groovy" name="Rename" id="bfe26527-140b-449b-8595-f477a9df684f"><con:settings/><con:config><script>import java.io.*;

def testCase  = testRunner.getTestCase();
def testSuite = "04.UserValidationTokenCreate_Access_P1";

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

BufferedReader br = new BufferedReader(new FileReader("C:\\Users\\ksaxena\\Desktop\\TestCaseNames.txt"));

def newTestCaseName;

log.info "TCCount:"+TCCount;

for(i = 0; i &lt;= TCCount - 1; i++)
{               
                def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);

                newTestCaseName = br.readLine();
                log.info "Input Test Case Name: "+newTestCaseName;
                
                                targetTestCase.setFailOnError(true);
                                targetTestCase.name = newTestCaseName;    
}
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="SetupScripts" id="8dd771ff-756a-4400-91ff-848431856bf2"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Setup_P0" searchProperties="true" id="6aba6096-792b-416d-85d5-32309af12af7"><con:settings/><con:testStep type="groovy" name="Set ENV Properties" id="c591f02a-964f-4d6a-bdc6-f37205a07f69"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

log.info("Set Environment properties!!!");
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def projectPath = groovyUtils.projectPath
log.info("Project Path : '" + projectPath + "'");

def eNV = context.expand( '${#Project#ENV}' )
log.info("Environment: '" + eNV+ "'");

def propertiesPath = null;

if (System.properties['os.name'].toLowerCase().contains('windows')) 
	{
    		log.info "it's Windows OS!!";
    		File temp = new File( projectPath + "\\..\\..\\..\\Properties\\");
    		propertiesPath = temp.getCanonicalPath();
	} 
else 
	{
    		log.info "it's Linux OS!!";
    		File temp = new File(projectPath + "/../../../Properties/");
    		propertiesPath = temp.getCanonicalPath();
	}
	
log.info("Properties File Location : '" + propertiesPath+ "'");


def propMap=[:]
BufferedReader reader = new BufferedReader(new FileReader(propertiesPath + "/" + eNV +"project.properties"));
log.info("Load property file : '" + propertiesPath + "/" + eNV +"project.properties"+ "'");
String line;
while ((line = reader.readLine()) != null)
	{
		if (line.trim().length()==0) continue;
		if (line.charAt(0)=='#') continue;

		int delimPosition = line.indexOf("=");
		String key = line.substring(0, delimPosition-0).trim();
		String value = line.substring(delimPosition+1).trim();
		propMap.put(key, value);
	}

propMap.each{ k, v -> tP.setPropertyValue(k,v)}

</script></con:config></con:testStep><con:testStep type="groovy" name="Set_CoordinatorSchema" id="5f89078a-f14a-497d-865d-b5bcf51a089b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

log.info "versionMinor: "+tP.getPropertyValue("versionMinor");

def v2 = context.expand( '${#Project#versionMinor}' )
def schema = tP.getPropertyValue("coordinatorSchema_"+v2);

tP.setPropertyValue("coordinatorSchema",schema);
log.info "Setting the coordinatorSchema value ---- "+schema;
</script></con:config></con:testStep><con:testStep type="datasource" name="Country" id="4b2b8629-6bbb-48a4-8621-fc35a2afc97b"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">US&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">GB&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">CA&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">IE&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">AU&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">NZ&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">AT&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">DE&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">CH&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">FR&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">BE&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">NL&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">LU&lt;/con:entry></row></con:configuration></con:dataSource><con:property>Country</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="groovy" name="TOUSetup" id="4bba1227-f241-4c91-9b9d-c681aaf18366"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def tP = testSuite.getProject();

def dBHost = context.expand( '${#Project#targetSystem}' )

def country = context.expand( '${Country#Country}' )

def a = new dbUtils.dbUtils(log,dBHost);
String sql = """select consent_version from (select
	            consent_version            
	            from
	            CONSENT
	            where
	            CONSENT_URN = 'urn:dece:type:policy:TermsOfUse'
	            and
	            COUNTRY = '""" + country + """'
	            order by
	            consent_version desc)
	            where rownum &lt; 2""";             
	log.info sql;
        
        results = a.SelectFromDB(sql,dBHost);

//                            a.dbConnClose();
       assert results.length() > 0;
       log.info "results" + results;

       def myXML = new XmlSlurper().parseText(results);   

       log.info myXML.ResultSet.Row.CONSENT_VERSION.text();
                testCase.setPropertyValue("Consent_Version",myXML.ResultSet.Row.CONSENT_VERSION.text());
                

def consent_Version = context.expand( '${#TestCase#Consent_Version}' )

tP.setPropertyValue("TOU_"+country,consent_Version);


</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="23860d24-1570-43bd-a33c-4d533fa93a3c"><con:settings/><con:config><dataSourceStep>Country</dataSourceStep><targetStep>TOUSetup</targetStep></con:config></con:testStep><con:testStep type="groovy" name="Prioritize" id="1180ade8-3cc7-4fbc-a85d-12cabd0b9a6e"><con:settings/><con:config><script>import com.eviware.soapui.impl.wsdl.*;
import com.eviware.soapui.impl.wsdl.teststeps.*;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def enablePriorityScript = context.expand( '${#Project#enablePriorityScript}' )
tC.getTestStepByName("DataSource Loop").setDisabled(false);

def executionPriority = context.expand('${#Project#disablePriority}');
def priority = context.expand('${#Project#disablePriority}').split(",");
def coords = context.expand('${#Project#coords}').split(",");//COORD-1000,COORD-2010
//log.info("Inside setUp for project '" + tP.getName() + "'");
def suiteList = tP.getTestSuiteList();
if(enablePriorityScript=='true')
{
log.info '----------------------------------------';

	tP.getTestSuiteList().each
		{	thisSuite->
				if( !thisSuite.isDisabled())
				{
					thisSuite.getTestCaseList().each
					{tCase->
						tCase.setDisabled(false); 		//Enabled everything
						//log.info '@@@@ ENABLING '+ thisSuite.getName() +' :: ' + tCase.getName();
						
							for (def prior : priority)
							{
								if (prior!='' &amp;&amp; tCase.getName().toUpperCase().contains(prior))
								{
									tCase.setDisabled(true); 	//Enable needed Priority
									log.info '!!!! Disabling'+ thisSuite.getName() +' :: ' + tCase.getName();
									break;
								}
							}
							coords.each //coord
							{ 
								if (tCase.getName().toUpperCase().contains(it))
								{
									tCase.setDisabled(true);		//Disable COORD issues
									log.info it+'#### Disabling COORD'+ thisSuite.getName() +' :: ' + tCase.getName();
									return true;
								}
							}
						
					}
				}
		}
	
	log.info "Disabled TCs with below Priorities : " ;
	priority.each{log.info it;}
	log.info "Disabled TCs with below COORDs: " ;
	coords.each{log.info it;}
	log.info '----------------------------------------';
}</script></con:config></con:testStep><con:properties><con:property><con:name>Consent_Version</con:name><con:value>20140811</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>48eef7a0-e5f2-4926-99bb-c9ecd11b1888</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c0f3550c-c4aa-4ddc-abb8-3d629c23599f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="01.UserValidationTokenCreate_PYLD_P2" id="d9769715-b88e-4406-9323-a39af683b3d1"><con:settings><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Users\ralluri\Desktop\LatestProjects_Users\Build_4.1</con:setting></con:settings><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00001_PYLD_UVTC_UserName_AccountID_UserID_SAML_Valid_200_OK_P2" searchProperties="true" id="cd7f6d76-5103-4ac6-9a10-95e3d5202668"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="80682d3f-8605-474e-b99d-c59e51e9d5a3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="add3fb0f-97f1-4f59-b0ed-6803f94b2a16"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="d7ffaf98-9757-4b64-9682-e6c0c1468310"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A63F58D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E69037541D3A38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A63F58D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A63F68D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A63F68D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZrU/I6EP4rTN+PTukFEOgIM1BAq+IF0IN+cUKy0GibQpMC+uvfpEAFRA7nfOrsdrP77CVP9oKjMLCdBucQCxqx3DIMGHdSbU1LYuZEiFPuMBQCdwR2+o3urWPnTQdtjmg5r1XT3ooEzhECpEOlTPQiMomOSLmqEzIeFaojG9ujijTlPAGPcYGYqGm2aZV081w3qwOr6tglxy7ky1XzVcs9Q8ylb2mSN7U1qCWvab4QU8cwFotFflHIR/HEsE3TMobd2z72IURa/WKVURoorq/tcZ4AhiDAeRyFxoWxY3NBuNOnE4ZEEsM6FvktlmmYVUPaEE4nf7TsLBCPjaNUdBGLGMUooF9I1acLwo9IrhFMopgKP/w1CctUjnVYYh1bRfZHM3ahnehoB2HMkc59ZK199WAMMTAMuaeeV9P+nNa19OggRoyPozjku+J/wwNsDkE0BaLzTVpraKc7PFCp+gVgx2M4SDidw50a1inCwNfdBHy6q9xDDGO6vKVcDuiSK3TGNrw9cVWNFp0AF/+nQVvNWTl5RkECdfTeHPSMu4Uo8vtJhAvNl3lzZl2ZX9yrpQC2jVNF1tqVuDeU2RCtToQwgY9OtfAakrYoX42bX9b1S/D0cF8l4urs8ZGYbsFtvCdeufuc3Lgv97ImbXb9Wn5yr3rtwvCMJV8zXE284Xvi3nH3mj+YMP7sPn6+dPujzuXz0OfGy4dPz8QluRtMY7oQLWvuf5aukXv1TKPGJVu4zQf/Jn7kV+3bs5tBd3z2NTHmyLt2311r+M9ZLx7eDvqVWpbOFv5d3ebO95PRO2CxEdUYeK1cR3YJieNkpjSU6OPU1Jkq8uECmNDq6pTiDieRdEeJI3u4kq2K1WxW7MZ5oXNeaZmFtlkqFNrVqtUxG81Oo7QhmRWKPYhuxMZUxVKUuxqb4wBx6HBgBGJ9HiWS6bh2xGMLCZTzWE9egohxGESSnq1ZNP0qlSy2LNum8KvleAG2T6ZLLXcXiXt2HzfGAuIdTrbtHU7uAaZTCoq41VxzOdhcyFrM0DwRgZWfozyDRFJ7rFjWsYuVksFpOA1AITXCiCQB5Kf+NK2MwVdfW0eYp9pee5Detl/z2v+3KYG0IVQZcJVLE2Qb4cDjYm0SOZywZQ5MazvhjftGQqi6WLKeIqZ4hWT31/eYqPnIZkRm9Ob236wN7sz85OM/TxpHQBn79cgCkTndCrt5uuUjIGmjvunmDFn5WT6Zz5O0gcViwYile0NVyDBtow84kcT2OYg+gBmZF+OkVyQDvhc80+9CTITP+gIJCOXA5VLxhLWhD1ytDZ68KctTd5KdkLJ0ApbikM4N5MqjEB/dirCDlZ1UP8jPIorJd8cO+NqKI/OUW4OgbKIk9YJ8/jIXOJJuqeS+KN52fsjBoeC7yqzIGRYhB2qUCPj9T06RWk1DGEcJE15LSxXbRJviFJ9TcL6NfrhJuTxb7ui/b3c6TUcAg1wJOU39qzfaUVeATbbIeh30F74uHePrXXT1H+qfmq067c94/S8=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_125830</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E69037541DE038AAE0401F0A059918D0</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13602d08-9c94-45c0-9151-f446f7597ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9225d8a-71fc-436d-a964-369cbdfcdd97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00002_PYLD_UVTC_UserName_SAML_Invalid_403_FORBIDDEN_P2" searchProperties="true" id="9044e18b-ff8a-4ac5-85bd-9186a18d6583"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="4432aa35-f648-453e-9f24-65f461a6bc8f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="a1d89b3e-5f30-4061-9520-e41717e8027e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="a624d347-41c1-4dcc-8385-7f690d2e5b73"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML","SAML2 Assertion=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");
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","Invalid_Assertion");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A64508D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E69037541D3A38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A64508D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A64518D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A64518D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZSwLSMAVqIIQEmYIyWAyl31JCbkNSmyZSLIhfP1IBhwgJMvuk6vbre7TFx31hSRxhL22lCAUS3hpGUdcerm2aaWCewmRTHqcxCA9RT2/fTvwcBl5ZHvEKvW7TeuxUa0E4QRje9JoBHZ1QkObVLBrozBsYEQDF0KqTaVMoc+lIlw1LYzcmo3ObNQYuw0P17wKLrsI/2OVfoKQ2rc2KSNrA2opm9ZMqbnnOIvForyolBMxdTBCrvP7duDTGcTEal2sM8oDidbGnpYDoBBFtEyT2Llw9mwuAun5bMqJSgVsYgUfxUIOajjaJpBs+sUqzkLQ52GSi5eEJ5xRErEVMfW5BTVLglI7miaCqVn8YRIuMo5tWFKbulX+xXL2oZ3oaA+hkMSWM+JufI0gBAGcQulh1G9aX07rWn50LAiXYSJiuS/+NzzAM4iSOQS23Ka1gXa6wyOVal0A9fqcRqlkGQzNsM4JBbnpJtDTXZXuBYRsOWBSD+hSGnTOLrwDcV2NLpuCVP+nQTvNWTv5SaIUWgPo+NytDs6zc0eg2++9l6fadU9BjdFmDmDXOFcUrV2LB0NZDNH6xC+/h8LX3yz+4WY3Ek9W91+vnya3WRp20tViGGEy7HZ+92qXXd9R7W/4dVH99iR65BwNasFD/Wpx9yfo1K9++LP74fUPgdvs7Dz01ezPdeX5+7fr/q8+gg4eXV/dkWf8upKNdFjvVX99XQ3o6rmyYrh9N+n05HT+rOSwL+LlQycc3iz9m7a8u3wRGbr5Oqh0ZiKZ3zaLdHbw7+u2d95PJ09A1VY0Y9Dvlnq6S0R9TmZGwwI7zE29uSEfqYArq2VOGe7wUk13LPB0D9eyW3c7nTpun1Vrbr2LKleoVqlcNRpuD7U7vXZtSzJrFAcQLxMeMhPLUO56bD4HSGNPAg9A2FmSaqaT1iceu0SRUp+P9CVIuIRxouk5rookwRNcq66wO6fni5hkUkVPml2Hibrjd6IdKhB7nIzxHiePgLI5A0PcZq6lHmypdC1eSJaqyC1npMwh1dQuDMt6uFqvOZLF8wgMUidOgjSC8nw2zyvjyPUX24TKXDu6Gue37cO8Dv9tS6BtAmYMpMmlA7qNcORxwdtEjifsojFydxPeum+nATMXS9dTCUbXSPZ/vY2JmY9iRnRGj5f+o7vFXZiffPz9SecTUM5hPYpAQcZ2wm6fbv0IaNpobbv5QtzySznNsjRvYLVacYR275gKOQg7PtBUE9vrOHkG7hRenJNekQL4QfBCvw8xVTPuK6Ig1gNXysUT1gYfpFkb+vqmLE/dSfZC6tIpWKpjustIrzwG8adbEfWosdPqe/1ZJCJ469gRXztxdJ56a1CMT41kXpDXD+aCJtot09yXiF3nxxwcC76vLIpcYFF6oCapgo//lAypNS1CaZJy1e9auWKXaHOc6nUO3pvROzc5lxfLHfv37c5m+QhQ0CuhZLl/80Z75grw6Q5Zb4J+wNfoM77eR9d6p36v2anT4Yy3/gI=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_125839</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E69037541DE038AAE0401F0A059918D0</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13602d08-9c94-45c0-9151-f446f7597ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9225d8a-71fc-436d-a964-369cbdfcdd97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00003_PYLD_UVTC_UserName_SAML_Null_403_FORBIDDEN_P2" searchProperties="true" id="3f7f009f-80bd-4fdd-8df9-3337a99a44c4"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="090c85ac-7994-43bf-8307-7eb40f7919f9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="69d4ed97-e0fb-4e83-b698-d241c65bd733"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="f5206af4-8aff-432d-a399-965889f4a47e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML","SAML2 Assertion=");
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SECURITY_FORBIDDEN");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A64A98D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E69037541D3A38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A64A98D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A64AA8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A64AA8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZrU/I6EP4rTP14pqQpF2lHmCmCxyqKUnSOfnFCGkq0TUuTcvv1b1KgAiKHcz51drvZffaSJ3vFURSatsM5SQWNWWkRhYzbubapZSmzY8QptxmKCLcFtj3noWebZcNG2yNaye00tQ9kjmrIQCO9YUCoV+GY6CPDMnQ4atRrFQuOsVWRppxnxGVcICaammnAmm7UdcMaQss2a3alUa7Wa+9a6ZWkXPqWJmVD24Ba8KY2ESKxAZjP5+V5pRynATANA4J/HnoenpAIaa2rdUZ5oLS1scdln2AShriM4whcgT2bK5/bHg0YEllKNrH832IZwLCAtPE5DS604izxXTaOc/EasZhRjEK6Qqo+D0RMYr/khEGcUjGJfk0CGsqxThZYx7DKLjSwD+1MR3sIU450PkFw42tAxiQlDJPSy8BtahfndS0/OkwR4+M4jfi++N/wEDYjYZwQX+fbtDbQznd4pFKtK4Jtl+Ew43RGHtWwJggTvukmwee7Kj2lZEwXPcrlgC64Qgd24R2I62p0aEC4+D8N2mnO2skrCjPSgp3Vgq8ul9Mv1xl5jYoVvbUv+06lDarNHMCuca4oWrsWD4ayGKL1iVvhT+55cGcN6vevS3x/OwwXn8Mv9xGGwrlrLPhfwRS1P4PVc/86ufU+a172ZvRfkvvBE3hwzKHl38yfn0QjcKtmGEy73TtoJl7v8SXtvYez91en7pDq+Gk0CAfThwT+XWGvL6IfYGs6Nt87Pd+hPWdSWTWeUG3a6Y5W4c3znTF9T6Ggpr98qwPgPS47c9FJ3WaRzg7+fd32znvZ6JNgsRXVGLid0o3sEhKnyUxpqK+Pc1M7UeTDBWFCa6lTijvsTNId9W3Zw7UMG7DdbphOveo4jY5R6Rq1SqVrWfDGcNo3Tm1LMmsUBxCvYzamKpai3PXYnAaII5sT5pNUn8WZZDqunfDYQQKVXDaQlyBmnAxjSc9hfBmlyKpPZxP/cjUOv4IarF42oFZ6jEWf9VNnLEi6R8mmuUfJA4JpQonibTXWXM41F7IUUzTLRAjLM1RmJJPMniqStc1qowY4jZKQKKAgiv0sJOVkkuSFAXz9NXWEea4ddIf5Zfs1rcN/2wpIG58qA65yaRPZRXLkbTG3iRxPGBpDA+4mvHXvZD5V90qWU6QUr5Hs//qeEjUexYjIjD6uvQ+4xV2Yn33850lwAhQ4rEcRyJ/RnbDbl1u+AZI1WttuThEsT8vZbJblDaxWKyCV7oGqEDBM4BGcSV5bDuMvwkDhBZz1iBTAD4IX+n2ImZgwTyBBIjlwpVw8Y2vwCFdbgysvyuLclWQvpCydIAtxTHcdyo1HIT65FGEbKzupfpKfeZz63x074msnjsxTLg2CskBJ6gFZ/jIXOJZuqaS+ON11fszBseD7yqLIBRYhB2qUCfL7n5LitKaGMI4zJtyOlit2eTbHKZYJsb+NfrjJqbzY7ei/L3c6zUcAE7kRcpr7V0+0ra4AC3a4ehP0F7q2TtH1PrrWD/VPzU6dDme89Qc=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8uwqYiVpGoQVFRccePmLRxGQNlk2PTXv4NGT5KTnC/vd6XT09P99ELPM8/Y8Fy2DTBGUewEflmRXir/CAy/YxFD1xqsiWp1EzI1AUKuhmjDNBoMzbLsrlJWME6Q4uPY8OOXCkszXI0Wagyv0XybbbS55lOT5vVKeYUiTEwTlSe6Us4918ftq9uXShL57cDADm77hodwO4btBVBHbaLZNu6YKq/PN5RXh9GrHcdhm6Lgk4kgcl34BAOPeqY+6DybuL1wLN+Ikwi9+TTxS+XtbJZlTxn3FEQWxdI0TdECRXRM7Fi/Kq+l+2FkKv4+uK07hh/4DjRc52IUoFQU24FZBq4VRE5se9+YZiiGLkzXUA5rkKn7vyrUbwdXdD+09AFkhI0atg3mbmyO9ihCPkTl5Vx5qfz6WQVvZ7XI8PE+iDz8af3fICE/RW4QIrOG75Hd0f3c4hfpen1GsK340E2wk6Jx0SahAREuTyO0d/KRg0nzmbh8LX85x/cOQ/C/lOSZeo+TwKa+yIzkWAjH/0+93tfqZmVluAl6XWc2vlhSMtT4y9ay+VjUpRnk6qlDv1whvFe+gXqU+m39uVEfffV2qJtxl9UuNcNwt2mazS2wU1oBu/VUlAJZOsT7znqkw54bM9veIesNfT5zxczseQd3ixDY5GqVj6fmpTlbN0ut1uEwEaWZkK+ldAJ57nKqOq1zmrR2nj2JNGfMm1kjy3qdUDtVtT7O7OU5Pmbn0z6cS6thrz72+6k51neGXgJ7L+QH3CiKO54H54e4u3z5HdP7GIq4huh8DbL4v2nQgmTExmPRKSbFnnyeMXpVFaVTlTodgDoWyBQRWIo4uoCxaB1P9tHpCRktgtmyCyRwVucgk6yttJrNhnJmrlauvlK6XVGd17M+2EolsiHJ+UrSNwPaWOvhlu3S+kIUzc082HGD0Owfs74Nx6qmZmNNOasHOR9rMr2+yqycrC/qQWUm2pIrrQ+ioM7lTMquHiU5s8f6eh5ul0IGL/JMBfUeYJZyx1b7mrdiIDe34UEeqeB4lYu22lmt1FzWwLQkWuMViU3rdPUQema481z7nfE+Ma6ZvdV513MT/SIf1I7c6yxOvYWy46SZPADz7XK3Xh2NdTctwf4Y7O4enYZjbILM0luZNNsOhoGu2Ckcg5ksijNA0kUDVekNQNATgVoHTn7pHMRm0DG7GTVgcakquL3m5uycNtjo0a7BtFrMdrRuTk9NSfar+jDZHWzV3nQn1eHCTJdCLFy2OK2mTcNhYB7uZxu5Hw/zfX+2KO2mUr6B/appDSj3InQjlR+A6HK2XdWax+vmBJ93zn6/FjeTusvvXZWbh3t3H55xVQtmx4huiohjqe05HcYlYKkiAL3D8iDOVLFVJNVUstlWFQ3QleMEXA5sPGRXp0E/deGWA0E+XE8Ox7fCmFImi1Q2k0lbyaWWBMyiCP3FUu4ewFK0rEi05K44gxKYbZVhtiX5WvaJ8uc8dq95tGQRyJwOmkK/xC1pIZ7Ei3odnH1x6XcFWz3la7Pp0fwJyaPFOKxnKh7vfX0dHFXPiZZRslgOh+NRvtOS3vFAZtWeXgxTTi/J6TEEznio2UcpkIxpuN3GYdWHEYyV0FOV/DLR8aHl7Dx6UG0w4pSWIM8uvV227BmyPoysBTPsz/0pxwslnOzPfa96aGXrqrZohrzZ8ffS+Uzp0YoOQNAV5o2TmbPs0V5mo2a2H4DjzmDHuSuIZ0Ee6hrM5rPheuFVG6VGOhp59EWj6uNwki16WV2ezaqcKWp9DYeRs01aVh5NfJPdGnEz1elV0wndo8AmR60ecivLI8WakmHGq9PSrL6BumfxIRxQcyoFMr8fKb3z7mJcQm8CbwP083R4CG/zg3o/WT6MnjvpWJBuRTC+L4sLSJHKXXIrGPHfCUwhccza/qraDgsWhGPkx5XX4lRBXtoJoTiO2SZXxm0tNwWa4xt1RpK6XAsAma7TTJcGdEMQmJZE31nODcUniJ3A3zuFr4LH3W6pvwOEXhsj30RRLQ0SaCNc+YvFIl9lxZ+T6zfwMdICwhNBqyNxbKsh002Z6QCZkSW+wXXEusABvisTtjcO4ok/icA+RtEHjsjQHzjiHEEndFBBJIvbFJPrFMckJScjTWKXeUqNJx8lhGpGBdtrs/VWg8KOF7qoAEx5gZm46Cm0w2uCKHz7ZWsGxFfpXNb+URad603/bYif9+7ZIDqmUyjgIh4RkYqiLwgvew/m+6C590HfzYPEdIoLnaQ2jhx4Q/Jx63fHFK3yaBcS1R3yQ/Oz4INV6nNAD0dm6sBHzz+eA4RNEr7xei/JyXg6PSVpmlyLwBdcKiLmKYaieWqBYEII0VkLjsinHiaoH3HRB+pPnh/yj/iS2PYXMfmePdIy5evyBw+RBcLFQ0QhLZ//9JXzwSXJW4zy+CtZxyXvlQLxX580sA0LPSKekp8siMzf5frC1js/JM5igDm+VawK5nn+pilgQMw6ZIgF0XvjXxn4yvlH4SPJDywx6aZdEqPvd8rFdHqpGBAGiR8rUuUqeD8xrzjjc4jav5X+MHPlfm9kPsffkvmNOlqQ2eUZlYeu87+Va861XSAip7BzxfJSycm7lDj3rXcT+g3g10OaA38b0h8jef1D/KfkXU4/fw+v/wI=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdbk6q6En73V1iuR8sBFEGsmakKFxUV71dedmEIiHKTgKC/fgcdXTprZp3Z50nT6XR/faHz5RUbnlttAoxRFDuBX1Tlt9I/sGbxNGfAikGzVoU1BLoiWAhVWM40eMusV2lGKBVVjBOk+jg2/PitRGS1Ci1UGHrGMM1ao1nnXlimqpeKCxRhYpqovNClYua5Pm5e3L6VkshvBgZ2cNM3PISbMWxOgdZvEs2mccNUen+9orw4jN63cRw2KQq+mAgi14UvMPCoV+pJ59XEzalj+0acROjDp4nfSh9n0zR9SWsvQWRTVZqmKVqgiI6JHftX6b1wO4xM1beC61oy/MB3oOE6ZyMHpaF4G5hF4NpB5MRb7xvTDMXQuekKymAFMqz/q0T9dnBB90NLTyAjbFTw1mBuxibIQhHyISrOJ+pb6dfPKng9O4sMH1tB5OFP6/8GCflH5AYhMiv4FtkN3c8tfpGu91cEm6oP3QQ7RzTI2yQ0IMLFUYQsJ+s7mDSfiYuX8hczfOswBP9LSV6pR5wENvVFZmTHRjj+f+r1WKurlYXhJujd3Az9NIrj2AyrDb5BeccumC5lmtHttwuER+UrqHupP9afG/XeVx+HgH6QAEWFHW+43wWCyLOzATQyqC43IyFgww6KDHleXfBhnwnP7GFSV5aOMRqMeQLMtI6Gmkq4fPYtY68VOlun7ojlyBsmPWdxpgd+bX5QyhvHX/P9APM06YFso8/XEh+zHD0x1Ho2yDY0lyJFreKyARJ1vOLHOsesCo59ED3KmdTrKdAXYuZt12+/Y3qMIY+rh06XIPP/qzotyEZs3BdSPiks8nnG6F1TVaksSxJAkg1SVQS2KvbPYCDa+8N277SFlBbBeN4CMjhpE5DK9lpejMc9JTUXC1dfqK2WqE3YtAPWcoFsyEq2kPVVlzaWeriutmh9KormahJsat3Q7OzTzhYOtJmWDmbqSdsp2WCm0MuLzM7I+qztNGY4m9cKy50oaBMlldOLR1lJtwN9OQnXcyGFZ2WsAbYNmLkibbXOzFswsDbZwp3S18D+Ihe3mrRYaJkyA6OCaA8WJLaZ1NJD6JnhxnO3D8Y7xPjMbC9Om7ab6Gdlp0lKW5oe2lN1U5PHShdM1vPNcrE3lq1jAXYGYHPzSEpsrILU1hupPF53e4Gubo9wAMaKKI4BSRcNNLXdBUFbBBoLnOws7UQukMxWSnWruFAW3Da3OjmHFTbatGswjQaz7i+50YGTFb+s95LNbqttV61huTc1j3MhFs5rfCwfOcNhYBZa45XSiXuZ1RlPC5uRnK1gp2zaXco9C61I47sgOp+2rmZP4iU3xKeNY1lLcTVkXd5ytdoktFwrPOHyLBjvI5oTUa1KrU/HXlwAtiYC0N7Nd+JYExt5Uk01Ha810QAtJU7AeVeNe9XFods5unBdA0HWWw53+4/CmHKqiFQ6VkhbKYWGDMy8CJ3pXGntwFy07Ui0lZY4hjIYr9Veuib5mneI8uc8ti55tBURKDUdcEKnUJvTQjyMpywLTr4491vCVjtkS5PzaP6AlP50ELKphgeWry+DveY50TxKpvNeb9DPNrOkvd+RWWXR096xpheU4z4EzqA32+7lQDZG4Xodh2UfRjBWQ09Ts/NQx7uGs/HobrnOiCNahnx17m3SedtQ9F5kT5leZ+KParxQwIl16njlXSNdlmdTLuRNybfk04nSowUdgKAlTOoHM6tW99t52udSqwv2G6M6yFxBPAlKT5/BdDLuLadeuV6oH/t9jz7PKHYQDtNpO2WV8bhcM8VZZ4bDyFknDTuLhr5ZXRsxd9TpBeeE7l6oJvsZG9YWtkeKNTqaIa+NCmN2BXXP5kPYpSbUESi81Vfbp83ZOIfeEF4H6OfpcBde5wf1OFmeRs+NdExJtyIY35b5BaTKxRa5FYz47wQmlzhmxbqoNsOcBeEY+XHpPT+Vk5dmQiiOYzbJlXFdKxzNKTItiVydkxotUaFZmmnRgOYFgZZ4+cZyrig+QZQC33JyXzmPu95SfwcIvSZGvomiyjFI4Bbh0l8s5vkqqv6EXL+Bj9EsIDyRVoSayHMyy9JyQ6ySvmbrXJ0XW4pYbzE8VyoOgnjoDyNgxSh65ojsE0ecIOiEDsqJZH6bYnKd4pik5GAck9hlXo7Gi48SQjWjnO01q2yjTmHHC12UA6a8wExc9BJuw0uCKHz9rVYMiC/SiTL7R51Kl5v+2xA/792yQXRMJ1fAeTwiIhVFXxBe9hbM90Hzj0HfzIPEdPILnaQ2jhx4RfK89btj8la5twuJ6gb5rvlZ8GSV+hzQ3ZF5dOC95+/PAcImCd94v5XkYLwcXpLjMbkUgc+5VETMUwxF89QUwYQQotMs2COfupugfsRF76g/eb7Ln/El8dafxuR79kjLFC/LHzxEpgjnDxGVtHz201fOk0uStxhl8VcyySXvlRzxX580sAlzPSIekZ80iMzf5frC1oMfEmc+wBzfzlc58zx90xQwIGYdMsSC6NH4Vwa+cv4svCf5jiUm3bRJYvT9TjGfTm8lA8Ig8WNVLl0EjxPzgjM+haj5W+kPMxfu90HmM/wtmV9p/SmZXZ5Ruus6/1u54lzaBSJyCjsXLG+ljLxLiXPffpjQHwD/GNKAURhRAIKkgE9DunVP4FMk73+I/5Q85PTz9/D+Lw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_125846</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E69037541DE038AAE0401F0A059918D0</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13602d08-9c94-45c0-9151-f446f7597ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9225d8a-71fc-436d-a964-369cbdfcdd97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00004_PYLD_UVTC_UserName_AccountID_Null_404_NOT_FOUND_P2" searchProperties="true" id="bcd6ba86-2613-4b48-913a-208703287c10"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="43fbe32e-6d57-47d1-9695-31b84217f1ed"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="b7d32feb-5b76-49c1-880e-19ad790f767e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="d10cf3f0-af70-4904-80c7-381720c5b2f2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","NOT_FOUND");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A65028D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E69037541D3A38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A65028D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A65038D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A65038D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VynlMGS8swa5AFQEy4wlZIblJXlJCbkCJLYEkm+XrRzLgACG53Pvk6nar+/Sioz4XKI5cvykEcEkYLczjiAo/09aNhFOfIUGET1EMwpfY7zWvu75btH20OWIUgnbdeCuVB+B4nmvW3FLNLIduxRy4nm1WKtVS9Qx7IYRDZSpEAgEVElFZN1zbqZh21bS9vuP5bsUvV4qOXX01Ck/AhfKtTIq2sQY1F3VjLOXEt6zZbFaclYqMjyzXth3r+brbw2OIkdE4X2WUBeKNtT0uhoAhinARs9g6t3ZszkPh98iIIplwWMcKv4tlW7ZnKZtQkNGJkZ+FMKBDloktRBklGEVkiXR9rkGOWVhoRiPGiRzH3ybh2NqxCXNsYqdMTwxrF9qRjnYQcoFMMUbO2tcDDIEDxVB4fAjqxslxXcuO9jmiYsh4LHbF/4YHaAoRm0Boik1aa2jHOzxQqcY5YD+gOEoESeFGD+sEYRDrbgI+3lXhjsOQzLtEqAGdC43O2oa3J66q0SYjEPL/NGirOSsnTyhKoPFkL+1l+Z7dDUYhm92kk7P+LHnmV78CVs8AbBtniry1K3FvKPMhWp3Ao9r8l9e7FzfNoaSvAKcpPx16rU75dMin771bgdLLP+3g+o59PL/gp27ouDXb8X4/dq9cGUbd+Jb2x48kHbwsPR7d9dPH4Wh435Kni9mfIMCsU768d2n8z3XH+iClwcujt/x9de9EXkyqYDuLrjW/aUJp+vBa8XpPiz+BytI6vWx73uusex+80MngfYmvkuqsnqezhX9Xt7nzvWTwDlhuRD0GQbtwqbqE5M9kpjUkNIeZqT/R5CMkUGk09CnNHX6i6I6EvurhSnZqzsVFzW1WK3ap1rZLHbtSKnU8z7m0mxeXzcqGZFYo9iC2GB0SHUtT7mpsfgaIY18ADYGbKUsU0wnjB49tJFEhoA/qEjAqoM8UPXPwBH+X74P0bOp8jBYVXoaZF57VjMINk7f0lqtJAL7Dya67w8kPgMmEgCZuPddCDbaQqhZTlCYycoopKlJIFLVzzbK+W65VLEHiSQQaqRWzMImgOBlPsspYYvV1TYRFpn3o9LPb9m1e+/82JVA2IdEGQudyAaqNcOBxKW0SOZywY/dtZzvhjftmEhJ9sVQ9JSd4hWT31+eY6PnIZ0Rl9NbqvTkb3Ln50ce/nrR+AGXt1yMPFKZkK+zm6VaPgKKNxqabU+QUp8UkTZOsgeVyyeLKvaUrZNmu1QOcKGJb9NkHUCv3Yh31iuTA94Ln+l2IiRzTnkQSYjVwhUw8Ym3ogdBrQ6BuyvzYnWQnpCqdhLk8pGtFauXRiH/cirCPtZ1S36nPjPHws2MHfG3FUXmqrUESOtKSfkEW38wFZsotUdzH+LbzQw4OBd9V5kXOsUg1UINEwvd/CprU6gbCmCVUBm0jU2wTbYZTLibgfxp9cZNxeb7ckX/f7kySjQAGtRIKkvnXb7SvrwAdbZH1Oug3fO3+xNe76Bpf1F81W3Xan/HGXw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8uwqYiVpGoQVFRccePmLRxGQNlk2PTXv4NGT5KTnC/vd6XT09P99ELPM8/Y8Fy2DTBGUewEflmRXir/CAy/YxFD1xqsiWp1EzI1AUKuhmjDNBoMzbLsrlJWME6Q4uPY8OOXCkszXI0Wagyv0XybbbS55lOT5vVKeYUiTEwTlSe6Us4918ftq9uXShL57cDADm77hodwO4btBVBHbaLZNu6YKq/PN5RXh9GrHcdhm6Lgk4kgcl34BAOPeqY+6DybuL1wLN+Ikwi9+TTxS+XtbJZlTxn3FEQWxdI0TdECRXRM7Fi/Kq+l+2FkKv4+uK07hh/4DjRc52IUoFQU24FZBq4VRE5se9+YZiiGLkzXUA5rkKn7vyrUbwdXdD+09AFkhI0atg3mbmyO9ihCPkTl5Vx5qfz6WQVvZ7XI8PE+iDz8af3fICE/RW4QIrOG75Hd0f3c4hfpen1GsK340E2wk6Jx0SahAREuTyO0d/KRg0nzmbh8LX85x/cOQ/C/lOSZeo+TwKa+yIzkWAjH/0+93tfqZmVluAl6XWc2vlhSMtT4y9ay+VjUpRnk6qlDv1whvFe+gXqU+m39uVEfffV2qJtxl9UuNcNwt2mazS2wU1oBu/VUlAJZOsT7znqkw54bM9veIesNfT5zxczseQd3ixDY5GqVj6fmpTlbN0ut1uEwEaWZkK+ldAJ57nKqOq1zmrR2nj2JNGfMm1kjy3qdUDtVtT7O7OU5Pmbn0z6cS6thrz72+6k51neGXgJ7L+QH3CiKO54H54e4u3z5HdP7GIq4huh8DbL4v2nQgmTExmPRKSbFnnyeMXpVFaVTlTodgDoWyBQRWIo4uoCxaB1P9tHpCRktgtmyCyRwVucgk6yttJrNhnJmrlauvlK6XVGd17M+2EolsiHJ+UrSNwPaWOvhlu3S+kIUzc082HGD0Owfs74Nx6qmZmNNOasHOR9rMr2+yqycrC/qQWUm2pIrrQ+ioM7lTMquHiU5s8f6eh5ul0IGL/JMBfUeYJZyx1b7mrdiIDe34UEeqeB4lYu22lmt1FzWwLQkWuMViU3rdPUQema481z7nfE+Ma6ZvdV513MT/SIf1I7c6yxOvYWy46SZPADz7XK3Xh2NdTctwf4Y7O4enYZjbILM0luZNNsOhoGu2Ckcg5ksijNA0kUDVekNQNATgVoHTn7pHMRm0DG7GTVgcakquL3m5uycNtjo0a7BtFrMdrRuTk9NSfar+jDZHWzV3nQn1eHCTJdCLFy2OK2mTcNhYB7uZxu5Hw/zfX+2KO2mUr6B/appDSj3InQjlR+A6HK2XdWax+vmBJ93zn6/FjeTusvvXZWbh3t3H55xVQtmx4huiohjqe05HcYlYKkiAL3D8iDOVLFVJNVUstlWFQ3QleMEXA5sPGRXp0E/deGWA0E+XE8Ox7fCmFImi1Q2k0lbyaWWBMyiCP3FUu4ewFK0rEi05K44gxKYbZVhtiX5WvaJ8uc8dq95tGQRyJwOmkK/xC1pIZ7Ei3odnH1x6XcFWz3la7Pp0fwJyaPFOKxnKh7vfX0dHFXPiZZRslgOh+NRvtOS3vFAZtWeXgxTTi/J6TEEznio2UcpkIxpuN3GYdWHEYyV0FOV/DLR8aHl7Dx6UG0w4pSWIM8uvV227BmyPoysBTPsz/0pxwslnOzPfa96aGXrqrZohrzZ8ffS+Uzp0YoOQNAV5o2TmbPs0V5mo2a2H4DjzmDHuSuIZ0Ee6hrM5rPheuFVG6VGOhp59EWj6uNwki16WV2ezaqcKWp9DYeRs01aVh5NfJPdGnEz1elV0wndo8AmR60ecivLI8WakmHGq9PSrL6BumfxIRxQcyoFMr8fKb3z7mJcQm8CbwP083R4CG/zg3o/WT6MnjvpWJBuRTC+L4sLSJHKXXIrGPHfCUwhccza/qraDgsWhGPkx5XX4lRBXtoJoTiO2SZXxm0tNwWa4xt1RpK6XAsAma7TTJcGdEMQmJZE31nODcUniJ3A3zuFr4LH3W6pvwOEXhsj30RRLQ0SaCNc+YvFIl9lxZ+T6zfwMdICwhNBqyNxbKsh002Z6QCZkSW+wXXEusABvisTtjcO4ok/icA+RtEHjsjQHzjiHEEndFBBJIvbFJPrFMckJScjTWKXeUqNJx8lhGpGBdtrs/VWg8KOF7qoAEx5gZm46Cm0w2uCKHz7ZWsGxFfpXNb+URad603/bYif9+7ZIDqmUyjgIh4RkYqiLwgvew/m+6C590HfzYPEdIoLnaQ2jhx4Q/Jx63fHFK3yaBcS1R3yQ/Oz4INV6nNAD0dm6sBHzz+eA4RNEr7xei/JyXg6PSVpmlyLwBdcKiLmKYaieWqBYEII0VkLjsinHiaoH3HRB+pPnh/yj/iS2PYXMfmePdIy5evyBw+RBcLFQ0QhLZ//9JXzwSXJW4zy+CtZxyXvlQLxX580sA0LPSKekp8siMzf5frC1js/JM5igDm+VawK5nn+pilgQMw6ZIgF0XvjXxn4yvlH4SPJDywx6aZdEqPvd8rFdHqpGBAGiR8rUuUqeD8xrzjjc4jav5X+MHPlfm9kPsffkvmNOlqQ2eUZlYeu87+Va861XSAip7BzxfJSycm7lDj3rXcT+g3g10OaA38b0h8jef1D/KfkXU4/fw+v/wI=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_125853</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E69037541DE038AAE0401F0A059918D0</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13602d08-9c94-45c0-9151-f446f7597ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9225d8a-71fc-436d-a964-369cbdfcdd97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00005_PYLD_UVTC_UserName_AccountID_mismatch_403_FORBIDDEN_P2_UV -135" searchProperties="true" id="f2d342a1-45f0-472e-aefb-62e05bb555c1"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="9332797f-3fbf-41e2-8d90-4f10d845ba3b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="c0ab3d29-7d91-45f1-b41a-3486991e706f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="1d437b5c-d0a8-4b85-9393-8f7931f0b729"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL","urn:dece:accountid:org:dece:E69037541D3A38AAE0401F0A059918D0");

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","ACCOUNT_FORBIDDEN");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A655B8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E69037541D3A38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A655B8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A655C8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A655C8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+o6EP4rTP3olL5APdARZnjzHBTEKRwVvzgh3ZZgm2CTAvLrb1KgAqKXez91drvZffYlT/aaoziy3QbnkAjCaGEVR5S7mbampQl1GeKEuxTFwF2B3WGj33Ptoumi3RGt0G3XtNdK4Fglywr0UrVs6mVkVXXkBxXdstFkgrBTMc2yNOU8hS7lAlFR02zTcnTzSjerI6vq2o7rWMXSVeVFKzxCwqVvaVI0tS2oFa9pUyHmrmEsl8vislRkSWjYpmkZz/3eEE8hRlr9epNRFiipb+1x0QcMUYSLmMXGtXFgc+1zd0hCikSawDaW/10s0zCrhrTxOQkvtPws+F0asExsIcoowSgia6Tq0wcxZX6hEYUsIWIaf5uEZSrHOqywjq0yvdCMQ2hnOjpAmHCk8ymytr48CCABiqHw1+vWtIvzupYdHSWI8oAlMT8U/xseoAuI2Bx8ne/S2kI73+GJStWvAbtdiqOUkwXcq2GdIwx8203A57sqPCQQkFWPcDmgK67QGfvwjsRNNdokBC7+T4P2mrNx8oiiFOoRNETYF2xUWVwa47lXnc0hMttN725cywDsG2eKvLUb8Wgo8yHanHh+H7Znv3pQGvSaqTH+83BLJ6PfdiNq2e35bF0p90fVYLby7n43mqLfeluyUQfdx1PfXozvP57f0fBu/BS+LQd34Aj7Fx89IK90H9rIHg68x4dw5qyf3j7Ae3hMo8Fzb7D2o+C2U5lZTp9R336atC/X49Yo+XAiL3b+XHp3lT4n/efQn922l+2X9d+o8+vlvjMMWC1PZw//oW5354fpZAZY7EQ1Bt124UZ2CYmfyUxpiK8Hmak7V+TDBVCh1dUpxR1uKumO+K7s4Ua2KlazWbEbV47TqrTNUsd0SqVOtWrdmI3mTcPZkcwGxRHEFqMBUbEU5W7G5meAOHY5UB8SfcFSyXRc+8FjGwlU6FJPXgJGOYyYpGfr7c1OV36CIEwdBNNqGjrrKxILrXDPxIAOkkYgIDngZNs+4GQPMJkTUMSt5prLweZC1uIdLVIRWcUFKlJIJbUnimVdu1xxDE7ieQQKqREzP42gOJ/Os8oYfPO1dYR5pvU6o+y2fZvX8b9dCaSNT5QBV7k0QbYRTjwu5V0ipxO2zJFp7Se8c99IfaIulqynSAjeIDn89Tkmaj7yGZEZvbaGr9YOd25+9vGvJ40fQBnH9cgD+QuyF3b3dMtHQNJGfdfNd2QV34vpYpFmDSyXS0Yi3RuqQoZpG0PAqSS2jxF7A2rkXoyzXpEc+FHwXH8IMRVTOhRIQCwHrpCJZ6wNQ+BqbejKm7I6dyc5CClLJ2AlTulakVx5FOIftyLsYmUn1Q/ys2SJ/9mxE7724sg85dYgCA2VpF6Qj2/mAjPplkjuY8m+81MOTgU/VOZFzrEIOVCTVMD3fwqK1GoawpilVHTbWqbYJ9oMp/iYg/tp9MVNxuX5ckf+fbvTSTYCGORKyEnmX73RrroCNNwj623Qb/i6+RNfH6Krf1F/1ezV6XjG6/8A</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_125859</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E69037541DE038AAE0401F0A059918D0</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13602d08-9c94-45c0-9151-f446f7597ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9225d8a-71fc-436d-a964-369cbdfcdd97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00006_PYLD_UVTC_UserName_UserID_Null_404_NOT_FOUND_P2" searchProperties="true" id="068a81cc-c4b6-431e-ae10-abd34aaf73f2"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="e0334118-c713-4cab-b414-a8ed3a5e7cff"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="903da48f-9f85-4c47-bdc0-226f521b72e8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="698df6f0-0f6b-4eaf-a161-4645eddcf0bc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",null);
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","NOT_FOUND");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A65B48D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E69037541D3A38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A65B48D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A65B58D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A65B58D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o6EP4rjPuYMb5w9wRmuCQpbUhygKZNXjpCXttKbcmxJEPy6ysZcICQHM558ux6tfvtRZ/2nKMkdr0+55AJwmhllcSUe4W2a8iMegxxwj2KEuCewN6sP7n23Krtoe0RozIedY3fuIn9ZrsWmE7b9s266zdMBK3AbOJ6DdUXtWYQ+MqUcwljygWiomu4ttMw7aZpd+ZOx3MbXqNVbbXcR6NyDxlXvpVJ1TY2oFa8a0RCpJ5lLZfL6rJWZVloubbtWL8m1zMcQYKM3vk6oyJQ1tvY46oPGOIYVzFLrHNrz+bc596MhBQJmcEmlv9RLNuyO5ay8TkJvxjlWfDHNGCFOESUUYJRTF6Rrs8ERMT8Sj8OWUZElHyYhGNrxyassImdOv1iWPvQTnS0hzDjyOQRcja+phBABhRD5cd03DW+nNa14ug8Q5QHLEv4vvjf8ADNIWYp+CbfprWBdrrDI5XqnQP2xhTHkpMcbvSwpggD33QT8OmuKncZBGR1Tbga0BXX6KxdeAfiuhojEgIX/6dBO81ZO7lHsYRee3D1w/8zJT73a1Ht281Y3jts8PNi8fjQLQDsGheKsrVr8WAoyyFan5hNg1H0dTA6m5PHn08Prs0mNHebef3x7DWa3b7mjWx0uby5imO2aMbpw9XTHyTrLSbz4FeaPbabl+H3Red6uGrOJ8GtPXsI71/Cxzw+m8wn31oZj4bUR9f54OKBJ8nzWdgfPljCaqfRYhHGEWtN/4msPpFXw6dWIGXtKrgbL+HrjXh1rmEZyx93zF9I+R3DNOyW6ezg39dt7/xMLp4Ai62ox2A8qlyqLiHxOZlpDfHNoDD1Uk0+XAAVRk+f0tzhSUV3xPdUD9ey03YGg7bbbzYGjfbIrl3YjVrtotNxLu3+4LLf2JLMGsUBxCGjAdGxNOWux+ZzgDjxOFAfMjNnUjEdNz7xOEICVcZ0qi4BoxzmTNFz5sRO/LKANMtRbHe4aOfyKXl2jcoNE7f0NusHArI9SnbdPUqeAiYpAc3beqy5mmsuVCmeUS5F7FRzVKUgFbNnmmQ9t95uWJwkaQwaqJUwX8ZQTaO0KIzF11/XRJgX2unFvLhsH6Z1+G9bAWXjE23AdS4DUF2EI29LfZvI8YQde247uwlv3felT/S9UuUUGcFrJPu/3qZEj0c5Iiqj38PZb2eLuzQ/+fj7k9YnoKzDepSB/JzshN2+3OoNUKzR23bzGTnV56rMc1k0sF6vWZlyb+kKWbZrzQBLxWsvc/YHqFV6sU56RErgB8FL/T5EKSI6E0hAogauUognbA0z4HprGKuLsjp1JdkLqUonYCWO6Yax2ng04k+XIuxhbafUd+qzZNlb4sd87cRReaqlQRAaakk/IC8fzAVmyi1R1MeyXefHHBwLvq8si1xiEWqgFlLAx38qmtO6BsKYSSrGI6NQ7PJsgVO8pOC9Gb1zU1B5uduRf1/uTFKMAAa1EXJS+NdPtKevAA13uHoT9AO6rn9G1/voeu/U7zU7dTqc8d5f</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_12595</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E69037541DE038AAE0401F0A059918D0</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13602d08-9c94-45c0-9151-f446f7597ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9225d8a-71fc-436d-a964-369cbdfcdd97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00007_PYLD_UVTC_UserName_UserID_Invalid_403_FORBIDDEN_P2" searchProperties="true" id="dd061d42-c06f-4d80-a94d-3d81285e3984"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="a89ffad2-b70c-4b0f-a6a1-004172352b5a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="ef94be0a-d6c8-49c7-9c75-154b095d720f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="d0b3f0d7-5c4a-44c0-94e2-376e0bdc88c6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_FULL","fd14545f4354453433435644");
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","INVALID_USERID");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A660D8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E69037541D3A38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A660D8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A660E8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A660E8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynmkjGVziXEFqgiXHSaQIUCyTF5SQm5AGVsCSzaQr1/JgAPksuw+Qbdb3acvOuobgcPA8RpCQCQpZ7lNGDDhpdqaEUfM41hQ4TEcgvAk8UaNfs9zCsjDhyNGrtuqGS/liu9f+1AykU0cs2QXr033eqr+ua7rlLA9raCyMhUihi4TEjNZMxxkl01UMVF1bFc9p+KhUsF2q89G7gkioXwrkwIy9qA2omYspFx6lrVerwvrYoFHc8tByLYm/d6ILCDERv1ml1EaKKrv7UnBBwJBQAqEh9aNdWJz4wtvROcMyziCfSz/q1jIQlVL2fiCzq+M7Cz4XTbjqdjEjDNKcEDfsK5PH+SC+7lGMOcRlYvwyyRspB2bsCEmsUvsyrBOoV3o6ARhJLApFtje+xrCDCJgBHKPw27NuLqsa+nRcYSZmPEoFKfif8MDLIGAL8E3xSGtPbTLHX5SqfoNEK/LSBALmsC9HtYlJiD23QRyuavcIIIZ3fSoUAO6ERqddQzvTNxVo0XnIOT/adBRc3ZOnnAQQ/11IobQi/LOZMKSefPe8mchYUGr0yzVUgDHxqkia+1OPBvKbIh2J8jwKe5s26M16uetn71t/mHlFCuT7fXgx3Swpc2fnX6zFUBj2q8OxsgZSmfKkn7we9FZXnOaLzZ71c6iQf7Idvn591+u3fwxf+3mq/Hjdb4bwYhO7x7HlPde6fC++JDc0umkP0mS9gxVb58f3cHdpPW8XC/yQef56e5x/vP+obidui6v9spu0pgEf/eLjaEfPLbjTreWpXOE/1R3uPOjePoKRB5EPQbdVq6juoTl92SmNdQ3Z6mpt9TkIyQwadT1Kc0dXqzojvqe6uFOtl379tZ1GpUKarstVGyjcrHYrlbtDmrcdhrlA8nsUJxBbHI2ozqWptzd2HwPkISeAOZDZCY8VkwnjG88trDEuS4bqkvAmYAxV/RMKK++IfcVyYpvr2i4qtBVwt/KkZG75/IX+xU1ZhKiE052nBNOHgKhSwqauPVcCzXYQqparHASy8AuJLjAIFbUHmmW9ZySW7YEDZcBaKRWyP04gMJysUwrY4ndr2NiIlLtsD1Ob9uXeZ1/O5RA2fhUGwidyy2oNsKHx6XslQ+JfJ6wjcbIPk744L4R+1RfLFVPGVGyQ3L66X1M9HxkM6IyemmOXuwD7sz84uMfT1rfgLLO65EF8hN6FPbwdKtHQNFG/dDNFbYLq0KcJHHawFKpaEXKvaUrZCHHGgGJFbFtx/wPMCvzYl30imTAz4Jn+lOIsVywkcQSQjVwuVS8YG0YgdBrQ1fdlM2lO8lJSFU6CRv5ma4ZqJVHI/52KyIe0XZKPVA/ax757x37xNdRHJWn2hokZXMt6Rdk+8VcEK7cUsV9PDp2/pmDz4KfKrMiZ1ikGqhpLOHrLzlNajUDE8JjJrstI1UcE22KU26X4L0bfXCTcnm23NF/3+5Mmo4AAbUSCpr612+0p68Amx+R9T7oF3zd+o6vT9HVP6g/ao7qdD7j9X8A</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_125912</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E69037541DE038AAE0401F0A059918D0</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13602d08-9c94-45c0-9151-f446f7597ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9225d8a-71fc-436d-a964-369cbdfcdd97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00008_PYLD_UVTC_UserName_AccountID_not_Existed_403_FORBIDDEN_P2_UV -135" searchProperties="true" id="0e877829-9312-4c9e-9263-9d0e9f520d72"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="5972d5f8-f517-45b4-baef-7e61a904dcba"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="c577f5fc-a2b3-492b-ac2b-becacc71c8fe"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="4c88a79b-6e85-4369-b645-c337777dd104"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL","urn:dece:accountid:org:dece:BF9B730FBABCDEFGH0401F0A07995726");

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","ACCOUNT_FORBIDDEN");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A66668D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E69037541D3A38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A66668D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A66678D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A66678D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbV+o6EP4rrO7n0gtQS5ewFoooiiIXdW9eXCGdlrjbpDYpF3/9SQpUQPRwzlPXTCcz31zyZc45iiPba3EOqSCMlpZxRLmXaxtallKPIU64R1EM3BPYG7Xue55dNj20PaKVuu2G9upi6+zMhanuBnZdr9ZcR0eOU9FdqFaDwKmdYd+Rppxn0KVcICoamm1aNd10dLM+tuqe7XiWVT6rOROt9Awpl76lSdnUNqCWvKHNhEg8w1gsFuVFpczS0LBN0zJ+3/dGeAYx0prn64zyQGlzY4/LPmCIIlzGLDbOjT2bc597IxJSJLIUNrH872KZhlk3pI3PSfhLK86C36UBy8VLRBklGEXkA6n63IOYMb/UikKWEjGLv03CMpVjHZZYx1aV/tKMfWgnOtpDmHKk8xmyNr6GEEAKFEPpadhtaL9O61p+dJwiygOWxnxf/G94gM4hYgn4Ot+mtYF2usMjlWqeA/a6FEcZJ3N4UMOaIAx8003Ap7sqPaYQkGWPcDmgS67QGbvwDsR1NdokBC7+T4N2mrN28oyiDJrR+8L8mLxcDFHv/s25vq0MhzU7ng6vgkUjB7BrnCuK1q7Fg6Eshmh9ouP3ni+TSeeDj7u3A3THjcGkclMdud03EdQn4Spr9WvVaX9wN3mfBhWjfl13++KN36L+jW9m7VFmvUS3y7AWV3tXzG4nN+274ON6Wrt7enlakXnW6fX82cDo8IfkYdVD950XPHTpKn77+2c8E6POXTTpomko/opqwuaV+UX7hvb79qPtPwO+pHe/gz+DxeCd40GjSGcH/75ue+dH2fQNsNiKagy67VJHdgmJn8lMaYivB7mplyjy4QKo0JrqlOIOL5N0R3xP9nAtW651ceHaLcdxzty2Wbkya5XKVb1udczWRadV25LMGsUBxEtGA6JiKcpdj83PAHHscaA+pPqcZZLpuPaDxzYSqNSlQ3kJGOUwZpKeqfURhcJJ6zgMrTm41GRZFIbsQys9MNGn/bQVCEj3ONm29zh5CJgkBBRxq7nmcrC5kLV4R/NMRFZ5jsoUMkntqWJZz666NYOTOIlAITVi5mcRlJNZklfG4OuvrSPMc+3wapzftm/zOvy3LYG08Yky4CqXC5BthCOPi7lN5HjCljk2rd2Et+5bmU/UxZL1FCnBayT7vz7HRM1HMSMyo9fL0au1xV2Yn3z860njB1DGYT2KQP6c7ITdPt3yEZC00dx28x1Z5fdyNp9neQOr1YqRSveGqpBh2sYIcCaJbTVmf4EahRfjpFekAH4QvNDvQ8zEjI4EEhDLgSvl4glrwwi4Whu68qYsT91J9kLK0glYimO6y0iuPArxj1sR9rCyk+pH+Vmw1P/s2BFfO3FknnJrEISGSlIvyOqbucBMuiWS+1i66/yYg2PB95VFkQssQg7UNBPw/Z+SIrWGhjBmGRXdtpYrdok2xylWCXifRl/c5FxeLHfk37c7neQjgEGuhJzk/tUb7akrQMMdst4E/YavnZ/4eh9d84v6q2anTocz3vwH</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8uwqYiVpGoQVFRccePmLRxGQNlk2PTXv4NGT5KTnC/vd6XT09P99ELPM8/Y8Fy2DTBGUewEflmRXir/CAy/YxFD1xqsiWp1EzI1AUKuhmjDNBoMzbLsrlJWME6Q4uPY8OOXCkszXI0Wagyv0XybbbS55lOT5vVKeYUiTEwTlSe6Us4918ftq9uXShL57cDADm77hodwO4btBVBHbaLZNu6YKq/PN5RXh9GrHcdhm6Lgk4kgcl34BAOPeqY+6DybuL1wLN+Ikwi9+TTxS+XtbJZlTxn3FEQWxdI0TdECRXRM7Fi/Kq+l+2FkKv4+uK07hh/4DjRc52IUoFQU24FZBq4VRE5se9+YZiiGLkzXUA5rkKn7vyrUbwdXdD+09AFkhI0atg3mbmyO9ihCPkTl5Vx5qfz6WQVvZ7XI8PE+iDz8af3fICE/RW4QIrOG75Hd0f3c4hfpen1GsK340E2wk6Jx0SahAREuTyO0d/KRg0nzmbh8LX85x/cOQ/C/lOSZeo+TwKa+yIzkWAjH/0+93tfqZmVluAl6XWc2vlhSMtT4y9ay+VjUpRnk6qlDv1whvFe+gXqU+m39uVEfffV2qJtxl9UuNcNwt2mazS2wU1oBu/VUlAJZOsT7znqkw54bM9veIesNfT5zxczseQd3ixDY5GqVj6fmpTlbN0ut1uEwEaWZkK+ldAJ57nKqOq1zmrR2nj2JNGfMm1kjy3qdUDtVtT7O7OU5Pmbn0z6cS6thrz72+6k51neGXgJ7L+QH3CiKO54H54e4u3z5HdP7GIq4huh8DbL4v2nQgmTExmPRKSbFnnyeMXpVFaVTlTodgDoWyBQRWIo4uoCxaB1P9tHpCRktgtmyCyRwVucgk6yttJrNhnJmrlauvlK6XVGd17M+2EolsiHJ+UrSNwPaWOvhlu3S+kIUzc082HGD0Owfs74Nx6qmZmNNOasHOR9rMr2+yqycrC/qQWUm2pIrrQ+ioM7lTMquHiU5s8f6eh5ul0IGL/JMBfUeYJZyx1b7mrdiIDe34UEeqeB4lYu22lmt1FzWwLQkWuMViU3rdPUQema481z7nfE+Ma6ZvdV513MT/SIf1I7c6yxOvYWy46SZPADz7XK3Xh2NdTctwf4Y7O4enYZjbILM0luZNNsOhoGu2Ckcg5ksijNA0kUDVekNQNATgVoHTn7pHMRm0DG7GTVgcakquL3m5uycNtjo0a7BtFrMdrRuTk9NSfar+jDZHWzV3nQn1eHCTJdCLFy2OK2mTcNhYB7uZxu5Hw/zfX+2KO2mUr6B/appDSj3InQjlR+A6HK2XdWax+vmBJ93zn6/FjeTusvvXZWbh3t3H55xVQtmx4huiohjqe05HcYlYKkiAL3D8iDOVLFVJNVUstlWFQ3QleMEXA5sPGRXp0E/deGWA0E+XE8Ox7fCmFImi1Q2k0lbyaWWBMyiCP3FUu4ewFK0rEi05K44gxKYbZVhtiX5WvaJ8uc8dq95tGQRyJwOmkK/xC1pIZ7Ei3odnH1x6XcFWz3la7Pp0fwJyaPFOKxnKh7vfX0dHFXPiZZRslgOh+NRvtOS3vFAZtWeXgxTTi/J6TEEznio2UcpkIxpuN3GYdWHEYyV0FOV/DLR8aHl7Dx6UG0w4pSWIM8uvV227BmyPoysBTPsz/0pxwslnOzPfa96aGXrqrZohrzZ8ffS+Uzp0YoOQNAV5o2TmbPs0V5mo2a2H4DjzmDHuSuIZ0Ee6hrM5rPheuFVG6VGOhp59EWj6uNwki16WV2ezaqcKWp9DYeRs01aVh5NfJPdGnEz1elV0wndo8AmR60ecivLI8WakmHGq9PSrL6BumfxIRxQcyoFMr8fKb3z7mJcQm8CbwP083R4CG/zg3o/WT6MnjvpWJBuRTC+L4sLSJHKXXIrGPHfCUwhccza/qraDgsWhGPkx5XX4lRBXtoJoTiO2SZXxm0tNwWa4xt1RpK6XAsAma7TTJcGdEMQmJZE31nODcUniJ3A3zuFr4LH3W6pvwOEXhsj30RRLQ0SaCNc+YvFIl9lxZ+T6zfwMdICwhNBqyNxbKsh002Z6QCZkSW+wXXEusABvisTtjcO4ok/icA+RtEHjsjQHzjiHEEndFBBJIvbFJPrFMckJScjTWKXeUqNJx8lhGpGBdtrs/VWg8KOF7qoAEx5gZm46Cm0w2uCKHz7ZWsGxFfpXNb+URad603/bYif9+7ZIDqmUyjgIh4RkYqiLwgvew/m+6C590HfzYPEdIoLnaQ2jhx4Q/Jx63fHFK3yaBcS1R3yQ/Oz4INV6nNAD0dm6sBHzz+eA4RNEr7xei/JyXg6PSVpmlyLwBdcKiLmKYaieWqBYEII0VkLjsinHiaoH3HRB+pPnh/yj/iS2PYXMfmePdIy5evyBw+RBcLFQ0QhLZ//9JXzwSXJW4zy+CtZxyXvlQLxX580sA0LPSKekp8siMzf5frC1js/JM5igDm+VawK5nn+pilgQMw6ZIgF0XvjXxn4yvlH4SPJDywx6aZdEqPvd8rFdHqpGBAGiR8rUuUqeD8xrzjjc4jav5X+MHPlfm9kPsffkvmNOlqQ2eUZlYeu87+Va861XSAip7BzxfJSycm7lDj3rXcT+g3g10OaA38b0h8jef1D/KfkXU4/fw+v/wI=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_125919</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E69037541DE038AAE0401F0A059918D0</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13602d08-9c94-45c0-9151-f446f7597ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9225d8a-71fc-436d-a964-369cbdfcdd97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00009_PYLD_UVTC_UserName_UserID_not_Existed_403_FORBIDDEN_P2" searchProperties="true" id="c90cc730-0050-4c1a-a52e-655a7d34e311"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="e6eac25e-f1a0-4a05-99c2-d1a151ff88d6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="2398da35-36a6-442a-9b97-d3526fd0f102"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="efedbeab-4212-4a2d-8c52-f90453787d9a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_FULL","urn:dece:userid:org:dece:C01ACACC558795CE0401F0A05990C5E");
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","INVALID_USERID");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A66BF8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E69037541D3A38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A66BF8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A66C08D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A66C08D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZXwBAnYFqoyBFAmBBNhMMi8pRW5AGVs2kmwgXz+SuQQIYdl9cnW71X36oqO+5igKbdfjHJggMS0so5ByN9fWtZRRN0accJeiCLgrsDvy7nuuXTRdtD2iFbqtuvZaqZYnjmMH+gSZVb2M7JKOasjREdgl661k12qOKU05T6FLuUBU1DXbtCq6eaWbzthyXPvKtapFx3R+a4UnYFz6liZFeWoNasnr2kyIxDWMxWJRXJSKMZsatmlaxvN9b4RnECGtcb3OKA/EGht7XAwAQxjiIo4j49o4sLkOuDsiU4pEymATK/gulmmYjiFtAk6mP7TdWQi6dBLnoo9oTAlGIflAqj73IGZxUPDCacyImEXfJmGZyrEOS6xjq0x/aMYhtAsdHSBkHOl8hqyNryFMgAHFUPhn2K1rPy7rWn50zBDlk5hF/FD8b3iAZhDGCQQ636a1gXa5wxOValwDdrsUhyknGfTVsCYIA990E/DlrgoPDCZk2SNcDuiSK3TGPrwjcV2NFpkCF/+nQXvNWTt5QmEKjTK/qdzS95cMPYwt7LUSu1xBgzCc2I/1HMC+ca7YtXYtHg3lbojWJ/6kce0lXD3NPqLs49EuPd2/RBXft289/uZNq+XBldnrTVbhajRukjRbLrNOz3p6H3i3MbqxH+jLKLEGqZgPxpV3/H7bfjYHSMyGo/mv5Jn2ps8wTUc3XjLu9yt3Yb9tl8kvMfztLTs3SfXOZ29zkvZD37eCdrZq/1xNHkOHV1mrufBR2rKMrD/1q3f0kfk/N+ke4T/Ube/8KH17Byy2ohqDbqvQkV1C4jyZKQ2RlyA3dRNFPlwAFVpDnVLc4aaS7kjgyh6uZatmNZs127u68s1ayyy1zUqp1HYcq2N6zY5X2ZLMGsURRD+mE6JiKcpdj815gDhyOdAAmJ7FqWQ6rp3x2EICFbp0KC9BTDmMY0nP9oqToFY1Z7xkUWTaAWfAsqupVujHYkAHzJsIYAeUbNsHlDwETBICirfVWHM511zIUsxRlorQKmaoSCGVzM4Uybp2uVYxOImSEBRQI4qDNIRiMkvywhh8/bV1hHmuHbbH+WX7Nq3jf9sKSJuAKAOucmmC7CKceFvMbSKnE7bMsWntJ7x176UBUfdKllMwgtdIDn99Tokaj92IyIxe/dGrtcW9M7/4+NeTxhlQxnE9doGCjOyF3b7c8g2QrNHYdnOOrOK8mGZZmjewXC4ZTLo3VIUM0zZGgFPJa6tx/AeosfNiXPSI7IAfBd/pDyGmYkZHAgmI5MAVcvGCrWEEXG0NXXlRlpeuJAchZekELMUpnR/KjUchPrsUYRcrO6l+kJ9FzILPjp3wtRdH5imXBkHoVEnqAVl9Mxc4lm6JpL6Y7Ts/5eBU8EPlrsg7LEIO1Fsq4Ps/BcVpdQ1hHKdUdFtartjn2RynWCXgfhp9cZNT+W63I/++3OkkHwEMciPkJPevnmhXXQE63ePqTdDTdN3snKPrQ3SNL+qvmr06Hc944y8=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_125926</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E69037541DE038AAE0401F0A059918D0</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13602d08-9c94-45c0-9151-f446f7597ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9225d8a-71fc-436d-a964-369cbdfcdd97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00010_PYLD_UVTC_UserName_TokenType_Null_404_NOT_FOUND_P2" searchProperties="true" id="dcb4d336-d55f-4619-864d-2e98d1882831"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="b7af59b5-ebec-4acd-9309-c81302ae9836"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="02ce1ef2-a14c-440f-a358-8b473486736f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="9d83f07e-b4c0-49c2-b89b-af850ca73533"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",null);
myTC.setPropertyValue("errorRespType","NOT_FOUND");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A67188D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E69037541D3A38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A67188D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A67198D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A67198D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMrIMIdgVqOKSZEgIyQaSnZmXKSE3oMSWHUsyl69fyYAHCMmy++Tqdqv79EVHfSlIFLp+SwhIJYt5aRGFXPi5tmGplPsxEUz4nEQgfEn9Yeu+77tlxyfbI1ap121Yv8e06kFw7tl1h2C7SjHYBAeOfYGBVCtu3alcgDYVQkGPC0m4bFiug89tp2Y73gh7vlvz3WrZrXi/rNILpEL71iZlx9qAWoiGNZMy8RGaz+fleaUcp1PkOg5GP+77QzqDiFjNy3VGeaC0ubGn5QAohCEt0zhCl2jP5jIQ/pBNOZEqhU2s4LNYDnI8pG0CwabfrOIsBD0+iXOxQ3jMGSUhWxFTn3uQszgotcJpnDI5iz5NAjvGsQ0LalNc5d8stA/tREd7CFNBbDEjeOPrCSaQAqdQen7qNaxvp3UtPzpKCReTOI3Evvjf8ADPIIwTCGyxTWsD7XSHRyrVvATq9zgNlWAZDMywJoSC2HQT6OmuSo8pTNiiz4Qe0IUw6NAuvANxXY0um4KQ/6dBO81ZO3khoYJmi0wHs4vuw2q16gr2Mr+5c/Hdff2XE101cgC7xrmiaO1aPBjKYojWJ/o/MzR75bejK9zD593rs447eW0Prh9e4K+zGzcZ4/cRfnPuWq9nL8/Pz+qxqr4/AR95t4/0Memrm/a0ejeGq0iqx0wu2dyTP91ZtfvG6UpVfoy8GcKJ1x6830JnQuejVN1519nqoR0s01btb6Z+QdsjL7VJp//QQdOzPlGi/X05uDmL3nD3+fZ2cHFfqaLF2eK5UaSzg39ft73zQzV+BSq3ohmDXrd0rbtE5NdkZjQssCe5qZ8Y8hESuLSa5pThDl9pumOBr3u4lnEdt9t1t1W7wF6961SunPNK5crz8LXTal+3zrcks0ZxALET8wkzsQzlrsfma4A08gXwAFI7i5VmOmF94bFLJCn1+JO+BDEXMIo1PS+j12CRBLXsPaktx1ktpKvJeIk9qzSI5QN/SFsTCekeJbvuHiU/AWUJA8PbZqyFnmshdSneSaZkiMsZKXNQmtlTQ7L6XP0cCRYlIRigKIoDFUI5mSV5YZBYf12bUJFrn65G+WX7NK3Df9sKaJuAGQNhcmmD7iIceVvwNpHjCWNn5ODdhLfuWypg5l7pcsqU0TWS/V9/psSMRzEiOqPfneFvvMVdmJ98/ONJ9AUodFiPIlCQsZ2w25dbvwGaNZrbbr4TXH4vqyxTeQOr1QpKtXtkKoQcFw2BKs1ry1H8BhwVXtBJj0gB/CB4od+HqOSMDyWREOmBK+XiCVvDEITZGnr6oixOXUn2QurSSVjIY7pOqDceg/jLpYj61Nhp9aP+zOM0+NOxI7524ug89dIgGZ8ayTwgy0/mgsbaLdPUF6e7zo85OBZ8X1kUucAi9UCNlYTP/5QMpzUsQmmsuOx1rVyxy7M5TrlMwP9j9MFNTuXFbsf+fbmzWT4CVO+R2j73b55o31wBPt3h6k3QT+i6/hVd76NrflB/1OzU6XDGm/8A</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_125932</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E69037541DE038AAE0401F0A059918D0</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13602d08-9c94-45c0-9151-f446f7597ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9225d8a-71fc-436d-a964-369cbdfcdd97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00011_PYLD_UVTC_UserName_TokenType_Invalid_403_FORBIDDEN_P2" searchProperties="true" id="5dac02ca-33ba-4703-b59e-8ec28e50d030"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="2c005e46-8003-41e7-975a-0058e688707f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="26d67d50-3270-4905-92e7-9c9b16965c68"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="614d5e07-aeac-4cb4-95b6-f68cd6fae599"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType","recovermypassword");
myTC.setPropertyValue("errorRespType","INVALID_TOKENTYPE");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A67718D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E69037541D3A38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A67718D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A67728D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A67728D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZrU/I6EP4rTP3olF6oCB1hBsRLFdEXENQvTky3EN82gSYt4K8/SYEKiBzO+dTZ7Wb32Uue7AVHUWi7Dc4hFoTRwjwKKXczbU1LYuoyxAl3KYqAuwK7vcZD27WLpovWR7SC16pp79Xque3AeVm3nMqZ7liOr1eC0odugX1eCZAvf4E05TwBj3KBqKhptmmd6WZZN6t9q+raZbdkFssl800rDCDm0rc0KZraCtSc17SxEBPXMGazWXFWKrJ4ZNimaRkvD+0eHkOEtPrFMqMsUFxf2eOiDxjCEBcxi4wLY8vmwuduj4woEkkMq1j+b7FMw6wa0sbnZHSi5WfB92jAMvESUUYJRiH5Qqo+DyDGzC80whGLiRhHvyZhmcqxDnOsY8uhJ5qxDe1IR1sIY450PkbWylcXAoiBYig8d72adnJc17Kj/RhRHrA44tvif8MDNIWQTcDX+TqtFbTjHe6pVP0CsOtRHCacpNBRwzpBGPiqm4CPd1V4iiEg8zbhckDnXKEzNuHtiMtqtMgIuPg/DdpoztLJAIUJ1J9fHoajRzR6vPHNETWv/Jc/A9K8CZ9fnVoGYNM4U+StXYo7Q5kP0fLEG5rNrbg1mI29L9tqBc/JkPeGDnNuZ6wcV5z245toW9fde/8+Sp4+6cvrcNH3KqMw6NzSIL5LgxfvKzL7nbd22+reLnp3ndebYJ4m94PTULyixvzuzwBb6c2rg+4+uy9DMM5x2YZO2J76U+YvvkpDAn0bxk0f353efrUXp9OgiQHdp175sz/oD3pOp+INPp9reTob+Ld16zvfSz4+AYu1qMbAaxWuZZeQOExmSkN8PchM3YkiHy6ACq2uTinucBNJd8R3ZQ+XslWxms2K3Sifn9uVllm6Ms9Kpatq1bo2G83rxtmaZJYodiBeMhoQFUtR7nJsDgPEkcuB+hDrKUsk03HtgMcWEqjg0a68BIxy6DNJz18xHjEznY8x/is+RZAG1mI8N32t0GHikT7GjUBAvEXJtr1FyV3AZEJA8bYaay7nmgtZiilKExFaxRQVKSSS2WNFsq4tCcXgJJqEoIAaEfOTEIqT8SQrjMGXX1tHmGfa7lU/u2y/prX7b10BaeMTZcBVLk2QXYQ9b4u9TmR/wpbZN63NhNfuG4lP1L2S5RQxwUsk27++p0SNRz4iMqP3y967tcadmx99/OdJ4wAoY7ceeSA/JRth1y+3fAMka9TX3ZwiqzgtJmmaZA10nJIRS/eGqpBh2kYPcCJ5bdFnf4EauRfjqEckB74TPNdvQ0zEmPYEEhDJgStk4hFbQw+42ho8eVHmx64kWyFl6QTMxT7dZSg3HoX44FKEXazspPpJfmYs9r87tsfXRhyZp1waBKEjJakHZPHLXGAm3RJJfSzedL7Pwb7g28q8yDkWIQfqIxHw+5+C4rSahjBmCRVeS8sUmzyb4RSLCbjfRj/cZFSe73bk35c7nWQjgOUeKe0z/+qJdtUVoKMNrl4F/YWurUN0vY2u/kP9U7NRp90Zr/8D</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8uwqYiVpGoQVFRccePmLRxGQNlk2PTXv4NGT5KTnC/vd6XT09P99ELPM8/Y8Fy2DTBGUewEflmRXir/CAy/YxFD1xqsiWp1EzI1AUKuhmjDNBoMzbLsrlJWME6Q4uPY8OOXCkszXI0Wagyv0XybbbS55lOT5vVKeYUiTEwTlSe6Us4918ftq9uXShL57cDADm77hodwO4btBVBHbaLZNu6YKq/PN5RXh9GrHcdhm6Lgk4kgcl34BAOPeqY+6DybuL1wLN+Ikwi9+TTxS+XtbJZlTxn3FEQWxdI0TdECRXRM7Fi/Kq+l+2FkKv4+uK07hh/4DjRc52IUoFQU24FZBq4VRE5se9+YZiiGLkzXUA5rkKn7vyrUbwdXdD+09AFkhI0atg3mbmyO9ihCPkTl5Vx5qfz6WQVvZ7XI8PE+iDz8af3fICE/RW4QIrOG75Hd0f3c4hfpen1GsK340E2wk6Jx0SahAREuTyO0d/KRg0nzmbh8LX85x/cOQ/C/lOSZeo+TwKa+yIzkWAjH/0+93tfqZmVluAl6XWc2vlhSMtT4y9ay+VjUpRnk6qlDv1whvFe+gXqU+m39uVEfffV2qJtxl9UuNcNwt2mazS2wU1oBu/VUlAJZOsT7znqkw54bM9veIesNfT5zxczseQd3ixDY5GqVj6fmpTlbN0ut1uEwEaWZkK+ldAJ57nKqOq1zmrR2nj2JNGfMm1kjy3qdUDtVtT7O7OU5Pmbn0z6cS6thrz72+6k51neGXgJ7L+QH3CiKO54H54e4u3z5HdP7GIq4huh8DbL4v2nQgmTExmPRKSbFnnyeMXpVFaVTlTodgDoWyBQRWIo4uoCxaB1P9tHpCRktgtmyCyRwVucgk6yttJrNhnJmrlauvlK6XVGd17M+2EolsiHJ+UrSNwPaWOvhlu3S+kIUzc082HGD0Owfs74Nx6qmZmNNOasHOR9rMr2+yqycrC/qQWUm2pIrrQ+ioM7lTMquHiU5s8f6eh5ul0IGL/JMBfUeYJZyx1b7mrdiIDe34UEeqeB4lYu22lmt1FzWwLQkWuMViU3rdPUQema481z7nfE+Ma6ZvdV513MT/SIf1I7c6yxOvYWy46SZPADz7XK3Xh2NdTctwf4Y7O4enYZjbILM0luZNNsOhoGu2Ckcg5ksijNA0kUDVekNQNATgVoHTn7pHMRm0DG7GTVgcakquL3m5uycNtjo0a7BtFrMdrRuTk9NSfar+jDZHWzV3nQn1eHCTJdCLFy2OK2mTcNhYB7uZxu5Hw/zfX+2KO2mUr6B/appDSj3InQjlR+A6HK2XdWax+vmBJ93zn6/FjeTusvvXZWbh3t3H55xVQtmx4huiohjqe05HcYlYKkiAL3D8iDOVLFVJNVUstlWFQ3QleMEXA5sPGRXp0E/deGWA0E+XE8Ox7fCmFImi1Q2k0lbyaWWBMyiCP3FUu4ewFK0rEi05K44gxKYbZVhtiX5WvaJ8uc8dq95tGQRyJwOmkK/xC1pIZ7Ei3odnH1x6XcFWz3la7Pp0fwJyaPFOKxnKh7vfX0dHFXPiZZRslgOh+NRvtOS3vFAZtWeXgxTTi/J6TEEznio2UcpkIxpuN3GYdWHEYyV0FOV/DLR8aHl7Dx6UG0w4pSWIM8uvV227BmyPoysBTPsz/0pxwslnOzPfa96aGXrqrZohrzZ8ffS+Uzp0YoOQNAV5o2TmbPs0V5mo2a2H4DjzmDHuSuIZ0Ee6hrM5rPheuFVG6VGOhp59EWj6uNwki16WV2ezaqcKWp9DYeRs01aVh5NfJPdGnEz1elV0wndo8AmR60ecivLI8WakmHGq9PSrL6BumfxIRxQcyoFMr8fKb3z7mJcQm8CbwP083R4CG/zg3o/WT6MnjvpWJBuRTC+L4sLSJHKXXIrGPHfCUwhccza/qraDgsWhGPkx5XX4lRBXtoJoTiO2SZXxm0tNwWa4xt1RpK6XAsAma7TTJcGdEMQmJZE31nODcUniJ3A3zuFr4LH3W6pvwOEXhsj30RRLQ0SaCNc+YvFIl9lxZ+T6zfwMdICwhNBqyNxbKsh002Z6QCZkSW+wXXEusABvisTtjcO4ok/icA+RtEHjsjQHzjiHEEndFBBJIvbFJPrFMckJScjTWKXeUqNJx8lhGpGBdtrs/VWg8KOF7qoAEx5gZm46Cm0w2uCKHz7ZWsGxFfpXNb+URad603/bYif9+7ZIDqmUyjgIh4RkYqiLwgvew/m+6C590HfzYPEdIoLnaQ2jhx4Q/Jx63fHFK3yaBcS1R3yQ/Oz4INV6nNAD0dm6sBHzz+eA4RNEr7xei/JyXg6PSVpmlyLwBdcKiLmKYaieWqBYEII0VkLjsinHiaoH3HRB+pPnh/yj/iS2PYXMfmePdIy5evyBw+RBcLFQ0QhLZ//9JXzwSXJW4zy+CtZxyXvlQLxX580sA0LPSKekp8siMzf5frC1js/JM5igDm+VawK5nn+pilgQMw6ZIgF0XvjXxn4yvlH4SPJDywx6aZdEqPvd8rFdHqpGBAGiR8rUuUqeD8xrzjjc4jav5X+MHPlfm9kPsffkvmNOlqQ2eUZlYeu87+Va861XSAip7BzxfJSycm7lDj3rXcT+g3g10OaA38b0h8jef1D/KfkXU4/fw+v/wI=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_125938</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E69037541DE038AAE0401F0A059918D0</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13602d08-9c94-45c0-9151-f446f7597ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9225d8a-71fc-436d-a964-369cbdfcdd97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00012_PYLD_UVTC_UserName_TokenType_CaseChange_Validate_Email_200_OK_P2" searchProperties="true" id="f73388dc-658d-4171-a0db-6e3e2f8795eb"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="ac2ece1c-e0af-44e1-880f-fff2010b6e6d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="7a0efcc4-2046-46cd-b872-29148e8861c5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="36ed28fa-ae31-418a-b92b-9cecad77b2df"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A67CA8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E69037541D3A38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A67CA8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A67CB8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A67CB8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4BfKNmytQZUIuTAiTBZLJ5GVKkdsgxpaMJRuyX7+SAQ8QkmX3ydXtVvfpi476QuA4sj1fCEgl5ayyjiMmvELbMbKUeRwLKjyGYxCeJN7Evx96ds308O6IURn0O8YvN7CCwDYbVce2gqobhkH1FYfNaitwGrjZxODYRJkKkcGACYmZ7Bi2adWr6ojZnlptz254TqPWNt0Xo/IEqVC+lUnNNLag1qJjzKVMPIRWq1Vt5dR4OkO2aVro+X44IXOIsdG92GRUBEq7W3tSC4BAFJEa4TG6QAc2F4HwJnTGsMxS2MYKPoplIrONlE0g6OyLUZ6FYMBCXoiXmHFGCY7o31jX5x7knAcVP5rxlMp5/GESlqkdV2FNqsRy2RcDHUI709EBwlTgqphja+trDCGkwAhUHseDjvHlvK4VR6cpZiLkaSwOxf+GB1gOEU8gqIpdWlto5zs8UanuBRBvwEiUCZrDSA9rggmIbTeBnO+q8pBCSNdDKtSAroVGh/bhHYmbavTpDIT8Pw3aa87GyROOMuiSZRQ/PbR+r6Tzs7nsZWhguzc3t/W3/L5TANg3LhRlazfi0VCWQ7Q5EcOoHaGU919nzWH4HFrzlnhYurdOb2q+rO1JKwwenhbj0Us8HvaSx2DUx9/i5x/1PPcRwibI/tS8ntyNbsXtijWT+gP3v+az4fevg+XbcHH17XHWu1+2rl3euHGf5jfRaDyR5sJ05hzd/ViufrbMzGkkQF+cv2BwR5MXcplJf/VTyD5cL83m4vdy0lw4Pr/yO2U6e/gPdbs7P8leF0DkTtRjMOhXrlWXsPyczLSGBtWwMPUSTT5CApNGV5/S3OFliu5o4KkebmSrZfV6LdtvNC97rb7pXJl1x7lqt61r0+9d+/UdyWxQHEG85CykOpam3M3YfA6QxJ4AFkBazXmmmE4Yn3jsY4krAzZWl4AzAVOu6HndymXbdqTbDN7clZXOl02LLeZ1ozLi8jv7nvqhhPSAkm37gJLHQGhCQfO2Hmuh5lpIVYolzjMZWbUc1xhkitlTTbKe7bbqSNA4iUADRTEPsghqyTwpCoPE5mtXMRGFdnw1LS7bh2kd/9tVQNkEVBsInUsPVBfhxNti7xI5nbBlTk1rP+Gdez8LqL5XqpwypWSD5PDXnynR41GOiMro1+Xkl7XDXZqfffz9SfQJKHRcjzJQkNO9sLuXW70BijW6u24usVVb1rI8z4oGuq6DUuUe6Qoh00YTIJnitbcp/w0MlV7QWY9ICfwoeKk/hJjJOZtILCFWA1cpxDO2hgkIvTUM1EVZn7uSHIRUpZOwlqd0l5HaeDTiT5ci4hFtp9QP6rPiafCnYyd87cVReaqlQVI205J+QN4+mAvClVuqqI+n+85POTgV/FBZFrnEItVAvWYSPv5T0ZzWMTAhPGNy0DcKxT7PFjjlWwLeH6N3bgoqL3c7+u/LXZUWI0BAbYSCFv71E+3pK8Bme1y9DfoBXfuf0fUhuu479XvNXp2OZ7z7Dw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_125945</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E69037541DE038AAE0401F0A059918D0</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13602d08-9c94-45c0-9151-f446f7597ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9225d8a-71fc-436d-a964-369cbdfcdd97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00013_PYLD_UVTC_UserName_TokenType_CaseChange_ResetPassword_200_OK_P2" searchProperties="true" id="e0466b30-a393-4485-a3fb-c1b98b77dd64"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="de43e5fb-185f-4c83-aa49-b68d2972cc5d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="5209a663-4f24-4241-94e5-fc6ee1fa7258"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="8c27e8ed-65a0-4298-ae56-b4655e4f9dee"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A68258D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E69037541D3A38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A68258D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A68268D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A68268D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0Vynk2lm0g4ApUEQgZGMgFSGaSlykhN1gZWyKWbC5fv5IBBwjJsvvk6nar+/RFR30lcBQ6XlMIiCXlrLCMQia8TFs3kph5HAsqPIYjEJ4k3qg56HtOEXl4d8QodNt1488UTVy/XPZNVKsgs1Sr1cyq69pmxa46xMfIuSxfKlMhEugyITGTdcNBdtlEFXVkbNc8p+KV3KJTs1+NwjPEQvlWJkVkbEEtRd0IpJx7lrVYLIoLt8jjmeUgZFu/B/0RCSDCRuNqk1EWKG5s7UnRBwJhSIqER9aVdWBz5QtvRGcMyySGbSz/q1jIQjVL2fiCzi6M/Cz4XTblmdjCjDNKcEjXWNdnADLgfqEZznhMZRB9mYSNtGMTlsQkdoldGNYhtDMdHSCMBTZFgO2tryFMIQZGoPA07NaNi/O6lh0dx5iJKY8jcSj+NzzAUgj5HHxT7NLaQjvf4YlKNa6AeF1GwkTQFO70sM4xAbHtJpDzXRUeYpjSZZ8KNaBLodFZ+/COxE012nQGQv6fBu01Z+PkGYcJNEY/w2c7XPVx+ur/HsjliJXXt37pffD4Us8A7Btniry1G/FoKPMh2pxodh576x+lscvRy/yXM16/WoRXV71q8Da+WfMb2W4F659PfsdF1Q567lcGNrz7YjCMW0FvHg3tp7R3d9m3ms816OB0NXh6qwzhetinw1hMEhrcrtEi4IvXsvUr6vVccl9atR/F4O519CwGD4ldjVHrMUW1dfnp6adgL2ln/jLo3T9cB29vpdvX0sMPa/b38nfrrVrP09nDf6jb3flRMnkDIneiHoNuu9BRXcLyezLTGuqb08zUm2vyERKYNBr6lOYOL1F0R31P9XAj21X7+rrqNCtVp1JtI/cGlV33plazO6h53WmWdySzQXEEscXZlOpYmnI3Y/M9QBJ5ApgPsZnyRDGdML7x2MYSF7psqC4BZwLGXNEzyMuJxBgu0WRty4nth0E8WaMyMQp3XN6z+7g5lRAfcLLjHHDyEAidU9DEredaqMEWUtXiHaeJDO1iiosMEkXtsWZZzylVy5ag0TwEjdSKuJ+EUJwH86wylth8HRMTkWmHN+Pstn2Z1/G/XQmUjU+1gdC5XINqI5x4XNxdIqcTttEY2fsJ79w3E5/qi6XqKWNKNkgOf32MiZ6PfEZURn9aoz/2Dndufvbxzyetb0BZx/XIA/kp3Qu7e7rVI6Boo7Hr5ju2i+/FJE2TrIGlkmvFyr2lK2QhxxoBSRSxrcb8LzAr92Kd9YrkwI+C5/pDiIkM2EhiCZEauEImnrE2jEDotaGrbsry3J3kIKQqnYSlPKVrhWrl0Yi/3YqIR7SdUj+oz4LH/kfHTvjai6PyVFuDpGymJf2CrL6YC8KVW6q4j8f7zk85OBX8UJkXOcci1UBNEglf/yloUqsbmBCeMNltG5lin2gznHI1B+/D6JObjMvz5Y7++3Zn0mwECKiVUNDMv36jPX0F2GyPrLdBv+Dr8nd8fYiu8Un9WbNXp+MZb/wD</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_125951</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E69037541DE038AAE0401F0A059918D0</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13602d08-9c94-45c0-9151-f446f7597ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9225d8a-71fc-436d-a964-369cbdfcdd97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00014_PYLD_UVTC_UserName_TokenType_CaseChange_UnlockMe_200_OK_P2" searchProperties="true" id="e8d58ded-a5df-4053-8eb9-24a283dd8164"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="431a9d96-4154-40fb-89ed-5d60dc3e1e59"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="2f8ab2e1-6c1c-4ebe-b0f9-b113388e4dbe"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="87714fb3-54c2-4041-8cee-c4e99a314336"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A68808D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E69037541D3A38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A68808D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A68818D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A68818D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+o4EP4rKOexCrkQUhIVpACtlgO0iEC3PS+VcQy4BDvYDpf++rXDpYQCy+5TNJPxzDcXf54HDuax7QecIyYwJYX1PCbcz7RVLWXEp4Bj7hMwR9wX0A+Dbse3i6YP9ke0QqtZ1T5A6d5yoOPqkQlM3XFcU/eAY+rl8r3tOZbpuciVppynqEW4AERUNdu0yrrp6qY3sDzfdn3HK9577h+t8IoYl76lSdHUdqDWvKpNhUh8w1itVsVVqUjZxLBN0zLeup0QTtEcaLWHbUZZIFbb2cNihCCKY1iEdG48GDmbh4j7IZ4QIFKGdrGiS7FMw/QMaRNxPPmlHc6iqEXGNBMbgFCCIYjxF1D16SIxpVEhiCeUYTGdX0zCMpVjHa2hDi2H/NKMPLQbHeUQMg50PgXWzlcfjRFDBKLCsN+qar9u61p2dMAA4WPK5jwv/jc8iCxRTBMU6Xyf1g7a7Q7PVKr2gKDfIjBOOV6iZzWsCYCI77qJ4O2uCj2GxnjdwVwO6JordMYxvBNxW40mniAu/k+DjpqzdfIK4hTVGtBtL6b1ZLPiT1/D0OG413vftOvjkFYzAMfGmeLQ2q14MpSHIdqeGGE2qv8VB8uGORkE5cnnWnTv7uas2XbT9nDW7yzLIKDgJUGLvw1vNGsE9rjx7DVe7sqzp1czofXSV68LAIHJ5GvWmy5W7ckn7aatxaK56q4iZzgcT9PJnfOnA94X5SE2WNq1h+1S0+3c/97UK+sk6KSMvb559swdLjhj/Tcnin8H7y4bht44fHFnvc9Gn+7SPcGf1+3vfJiOPhEUe1GNQatZeJJdAuI6mSkNjvRxZuoniny4QERoNXVKcYefSrrDkS97uJWtilWvV+zArVSsStMsPZrlUunR86wnM6g/BeU9yWxRnEBsUDLGKpai3O3YXAcI5z5HJEJMX9JUMh3XrnhsAgEKLdKXl4ASjgZU0rNl2TPsxbNKJU4iK/FGU+LyWQI3sVZ4puKFvLBgLBDLkbJt50i5jyBOMFLMrQaby8nmQhZjAZapiK3iEhQJSiW3M0Wzvu1UygbH8yRGCqoxp1Eao2IyTbLSGHz7tXUAeabtPw6y63YxsdN/+xpImwgrA65yqSPZR3TmdSntEzmfsGUOTOs44b37II2wulmyoIJhuEWS//U9J2pADkMiM/pohB/WHvfB/ObjP08aV0AZp/U4BIqW+Cjs/u2Wr4Dkjdq+mwtgFRfFdLlMswY6Tslg0r2hKmSYthEimEpm2wzoDBHj4MW46Rk5AD8JftDnIaZiSkIBBJrLgStk4g17Q4i42hta8qqsb11KciFl6QRai3O6Rix3HoX46loEfajspLonPyvKou+OnfF1FEfmKdcGgclESeoJ2VyYC0ilWyzJj7Jj5+ccnAueVx6KfMAi5ECNUoEu/ykoVqtqAEKaEtFqapnimGkznGKTIP/b6IebjMwP2x3+9/VOx9kIQCR3Qo4z/+qR9tUVIJMjtt4FvUDY5jXCzqOr/VD/1BzV6XTGa/8A</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_125957</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E69037541DE038AAE0401F0A059918D0</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13602d08-9c94-45c0-9151-f446f7597ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9225d8a-71fc-436d-a964-369cbdfcdd97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00015_PYLD_UVTC_UserName_AccountID_urn_namespace_CaseChange_200_OK_P2" searchProperties="true" id="3cff50ba-c6bf-42e0-bf84-c9f480024bab"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="4bbf270d-ee58-48f7-a7c4-488a2c7f7aeb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="22db2c47-f421-4048-a712-ed7fe22ce3d2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="eb1f2ae5-9769-4b7c-b84f-f5a38da2291d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
def node_AccountID = tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1").toUpperCase();
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",node_AccountID);

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A68DB8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E69037541D3A38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A68DB8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A68DC8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A68DC8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZZc6pKEP4rFucxhSyiQSpa5ZLFHOMxwSw3L6lxaHQSGJAZwOTXnxlUosbkeu8T1U1P99fLfNNnDIWB6XQYg4STiFaWYUCZU2hbSppQJ0KMMIeiEJjDseN2boaOWdUdtDmiVAb9lvJi2mDpul1TTRNM1WrYTdWGZlNtTqenYE1rp6c6EqaMpTCgjCPKW4qpG3VVb6h6c2I0HbPh1BtVw7KflcoDJEz4FiZVXVmDWrKWMuc8djQtz/NqXqtGyUwzdd3Qnm6GLp5DiJT22SqjIlDSXtvjqgcYggBXcRRqZ9qOzZnHHJfMKOJpAutY3nexdE1vasLGY2T2SynPgjegflSIPUQjSjAKyAeS9bkBPo+8SieYRQnh8/DbJAxdOlZhiVVsWPSXou1CO9LRDsKEIZXNkbH2dQc+JEAxVO7vBi3l13FdK45OEkSZHyUh2xX/Gx6gGQRRDJ7KNmmtoR3v8ECl2meAnQHFQcpIBiM5rDHCwNbdBHy8q8o4AZ8sh4SJAV0yiU7bhrcnrqrRJzNg/P80aKs5KycPKEihfV1DdxdLf2mfADbmtYWfcXP6CJfj+LZVANg2LhRla1fi3lCWQ7Q6MZqOr/OI5ODx+/qlftJ/zZsXpxxNmyev/qRzdY8eEG/wJ9J//ifQrJPrrts0ho83+vR12fMHWa+uI+SNvLfxPL63c/Npkfevh7d85F2h9+wkNv3T+agbPHh92/39NEkvh4+ZC+RyDG7odt6DR982wsWl6b899W7HYKGPc6vR75HoovG2fK6b55PZ7+HpdX7l560ynS38u7rNnXfT6StgvhHlGAz6lQvRJcR/JjOpIZ7qF6ZOLMmHcaBcactTkjucVNAd8RzRw5Vs2Ea3a5udht3v2X29dq7Xa7XzZtO40Dvdi059QzIrFHsQexH1iYwlKXc1Nj8DxKHDgHqQqFmUCqZjyg8e+4ijyoDeiUsQUQaTSNBz/pF9kMQOjDm8TSFeELy035FlKJVRxP/QP0nH55DsULJp7lDyHWASE5C8LceaiblmXJRigbKUB0Y1Q1UKqWD2RJKsY1p2XWMkjAOQQLUw8tIAqvE8LgqjsdXXVBFmhfbufFJctm/T2v+3qYCw8Yg0YDKXLoguwoG3xdokcjhhQ5/oxnbCG/ed1CPyXoly8oTgFZLdX59TIsejHBGR0UvPfTE2uEvzo49/Pan9AErbr0cZyMvIVtjNyy3eAMEa7U03F8ioLqpplqVFAy2rpiXCvSYrpOmm5gJOBa+9T6I3oFrpRTvqESmB7wUv9bsQUz6nLkccQjFwlUI8YmtwgcmtYSAuyvLYlWQnpCgdhyU/pOsFYuORiH9cirCDpZ1Qj8UnjxLvs2MHfG3FEXmKpYETOpOSfEDev5kLHAm3RFBflGw7P+TgUPBdZVnkEgsXAzVNOXz/pyI5raUgjKOU8kFfKRTbPFvg5O8xOJ9GX9wUVF7uduTflzuVFCOAQWyEjBT+5RPtyCtAZ1tcvQ76DV13f6LrXXTtL+qvmq067c94+y8=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_01004</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E69037541DE038AAE0401F0A059918D0</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13602d08-9c94-45c0-9151-f446f7597ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9225d8a-71fc-436d-a964-369cbdfcdd97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00016_PYLD_UVTC_UserName_UserID_urn_namespace_CaseChange_200_OK_P2" searchProperties="true" id="74d4ed0f-1614-4d2a-8ab3-d5ef6a5d7fed"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="c5d81931-a1dd-45da-9d82-666cc2e15770"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="695bd405-af9b-4649-a29c-752ef24e2fee"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="b4046510-56a6-43a9-8d89-302e5ca9f9a7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));

def node_UserID = tC.getPropertyValue("NODE_USER_ID_FULL1").toUpperCase();
myTC.setPropertyValue("NODE_USER_ID_FULL",node_UserID);
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A69368D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E69037541D3A38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A69368D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A69378D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A69378D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZrU/I6EP4rTP3olN4QoSPMIFWH9wVxoCL6xQnpApGSQJIW9NefpEAFvBzO+dTZ7Wb32Uue7JVA89j1G0IAl4TRwnoeU+Fn2pqRcOozJIjwKZqD8CX2+41O23eLto92R4xCK6gZr67jRVXkgel4ZdcslUvYRMgBE0YYIVwdge2WlKkQCbSokIjKmuHazoVpl027GjpV3730ba/olEsvRmEAXCjfyqRoG1tQa1EzplIufMtarVbFlVdkfGK5tu1Yw067j6cwR0b9apNRFojXt/a4GAGGOMZFzObWlXVgcxUJv08mFMmEwzZW9FMs27KrlrKJBJmcGflZiFp0zDKxiSijBKOYfCBdnw7IKYsKjXjCOJHT+Y9JOLZ2bMIam9gp0TPDOoR2oqMDhFwgU0yRs/XVgzFwoBgKj71WzTg7rWvZ0ZAjKsaMz8Wh+N/wAE0hZguITLFLawvtdIffVKp+BdhvURwngqRwr4d1gTCIbTcBn+6q8MBhTNZtItSAroVGZ+3DOxI31QjIBIT8Pw3aa87GyQDFCdQ/Km07fUp69gwjmrK7Ye/mj9fph7NnVssA7Btniry1G/FoKPMh2pzg7ZfV4pIt+HL4UnbEczBbDUnQ6fabg+cyvb2NHxvw4p6jIBxWzjtv3VV7VUZhkyaDh+HH28NwMH7uhE+j1PKmvNdorJ/W7XU7dt3Ua0/trl22p0Ev/HuOZu1h+DJb3/0NP7w3ep/yof2QkMl9m1RL9yPgneve6O5P/BKcB9eToN8MK+FyMGhWUtR9ePaceB0+1vJ09vAf6nZ3vp+M3gDLnajHoBUUblWXkPydzLSGROY4M/UXmnyEBCqNuj6lucNPFN2RyFc93MhOxbm+rriNctW7rAS2d2NfeN5Nterc2o3r28bFjmQ2KI4gNhkdEx1LU+5mbH4HiOe+ABoBN1OWKKYTxi8eAyRRoUV76hIwKiBkip5p1VuML0dTnoolsJnzPl1y8cFWRuGeyS7t8sZYAj+gZNc9oOQeYLIgoHlbj7VQcy2kKsUSpYmMnWKKihQSxexck6zvlioXliDzRQwaqDVnURJDcTFdZIWxxObrmgiLTNu7CbPL9mNax/92FVA2EdEGQudyDaqL8OVtKfsXu0S+T9ixQ9vZT3jnvpFERN8rVU7JCd4gOfz1OSV6PPIRURm9Nvuvzg53bn7y8a8nrV9AWcf1yANFKdkLu3u51RugWKO+6+YSOcVlMUnTJGtgqeRZXLm3dIUs27X6gBPFa+8hmwG1ci/WSY9IDvwoeK4/hJjIKe1LJGGuBq6QiSdsDX0QemtoqYuyPnUlOQipSidhLb/TNWO18WjEvy5F2MfaTqkf1GfFePTZsW987cVReaqlQRI60ZJ+QN5/mAvMlFuiqI/xfeffOfgu+KEyL3KORaqBGiUSfv5T0JxWMxDGLKGyFRiZYp9nM5zyfQH+p9EXNxmV57sd+fflziTZCGBQG6EgmX/9RPv6CtDJHldvg/5A1+Xf6PoQXf2L+qtmr07HM17/Bw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_010010</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E69037541DE038AAE0401F0A059918D0</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13602d08-9c94-45c0-9151-f446f7597ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9225d8a-71fc-436d-a964-369cbdfcdd97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00017_PYLD_UVTC_UserName_With_Method_HEAD_405_METHOD_NOT_ALLOWED_P2" searchProperties="true" id="b9144e54-2b16-4091-ad76-269930a52a0f"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="35fa7b4a-105b-46ad-8fd3-9b2211850869"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="3af24c23-b5d2-414d-885b-038362ffadca"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID_FULL",myTC.getPropertyValue("NODE_USER_ID_FULL1"));


</script></con:config></con:testStep><con:testStep type="restrequest" name="UserValidationTokenCreate_HEAD" id="4d3af36d-dc7e-4bad-a4c1-0244edc6973c"><con:settings/><con:config service="UserValidationTokenCreate" resourcePath="${#Project#HostName}/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}/VerificationToken/{TokenType}" methodName="HEAD" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserValidationTokenCreate_HEAD" mediaType="application/xml" postQueryString="false" sslKeystore="999901.pem" id="f64c911e-05a4-4a5e-a05b-a17e71ecb358"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">Mandatory and Data</con:setting><con:setting id="RecordRequestRepresentations">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="TokenType" value="${#Project#TokenType_VE}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Response_Details" id="66d1c1f7-8cca-4995-ab0a-b5b4c379f15a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('UserValidationTokenCreate_HEAD');
def expXML = tStep.httpRequest.response.getResponseContent();
log.info "Extracting Response Details"

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);



tC.setPropertyValue("httpLocation", contentLocation);

log.info "End of Extracting Response Details"
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response_Details" id="92ef5a3b-6eb7-43d7-8160-c9d625139fc1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def url = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#errorRespType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
                errorHost = "http://error.decellc.org";
} else {
                errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
                case "SUCCESS":                                
                                expectHTTPstatus   = "HTTP/1.1 200 OK";
                                XMLbodynull        = true;
                                httpLocationHeader = true;
                                //this.log.info "Hello";
                break;

                case "INVALID_DISPLAY_NAME":
                     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
                      errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
                      erorReason = "The display name exceeds 256 characters (or is empty).";
                      errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
                break;

                case "INVALID_COUNTRY":
                	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
                	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
                	errorReason = "The supplied country code is invalid.";
                	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
                break;

                case "NULL_COUNTRY":
                	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
                	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
                	errorReason = "The country code cannot be null.";
                	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
                break;
                
                case "API_NOT_AUTH":
                	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
                	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
                	errorReason = "API call not authorized";
                	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
                break;

                case "ACCOUNT_FORBIDDEN":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";                               
                                errorID = "urn:dece:errorid:org:dece:AccountIdUnmatched";
                                errorReason = "Request Account ID not match";
                                errorLink   = "https://qa.q.uvvu.com:7001/rest/1/02/error/en/ErrorList.html#AccountIdUnmatched";
                break;

                case "SECURITY_FORBIDDEN":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";                               
                                errorID = "urn:dece:errorid:org:dece:securitycontext:forbidden:1122";
                                errorReason = "forbidden";
                                errorLink   = "https://qa.q.uvvu.com:7001/deceerrors/error/error_response.html";
                break;

                case "NOT_FOUND":
                                expectHTTPstatus = "HTTP/1.1 404 Not Found";
                                XMLbodynull        = true;
                                httpLocationHeader = true;                               
                               // errorID = "urn:dece:errorid:org:dece:securitycontext:forbidden:1122";
                                //errorReason = "forbidden";
                                //errorLink   = "https://qa.q.uvvu.com:7001/deceerrors/error/error_response.html";
                break;   
			
			case "INVALID_TOKENTYPE":
						  expectHTTPstatus = "HTTP/1.1 400 Bad Request";                               
                                errorID = "urn:dece:errorid:org:dece:TokenTypeNotValid";
                                errorReason = "Token type in the request is not valid";
                                errorLink   = "https://qa.q.uvvu.com:7001/rest/1/02/error/en/ErrorList.html#TokenTypeNotValid";
                break;     
                
			 
               case "INVALID_METHOD":
						expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
						errorID = "urn:dece:error:MalformedRequest";
						errorReason = "405 Method Not Allowed. The request cannot be fulfilled because the method is unknown or not supported at the requested server.";
						expectHTTPcontenttype = "text/plain;charset=UTF-8";
			break;     
            
}

// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
                //assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
               //assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
                assert context.expand( '${#TestCase#httpLocation}') != null;

                def a = context.expand( '${#TestCase#httpLocation}');
                def b = a.toURL();
                def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

                assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
                
                int lastColon = urlStr.lastIndexOf(':');
                int lastSlash = urlStr.lastIndexOf('/');
                accountid     = urlStr.substring(lastColon + 1);
                //streamidFULL = urlStr.substring(lastSlash + 1);

                //this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

                tP.setPropertyValue("NODEACCID",accountid);
                //tC.setPropertyValue("streamhandleFULL",streamidFULL);
} else {
                assert context.expand( '${#TestCase#httpLocation}') == "";
}




//XML body should be null test
if (XMLbodynull) {

                assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
                def myXML = new XmlSlurper().parseText(XMLbody);
  
                if (errorRespType != "SUCCESS" ) {
                                // Verify response sizes...
                                assert myXML.Error.size() == 1;
                                assert myXML.Error.Reason.size() == 1;
                                assert myXML.Error.OriginalRequest.size() == 1;
                                assert myXML.Error.ErrorLink.size() == 1;
                                
                                // ErrorCode
                                this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
                                assert myXML.Error.@ErrorID.toString() == errorID;
                
                                // ErrorReason
                                this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
                                assert myXML.Error.Reason.toString() == errorReason;

                                // ErrorLink
                                assert myXML.Error.ErrorLink.toString() == errorLink;
                } 
                
 } 



</script></con:config></con:testStep><con:properties><con:property><con:name>errorRespType</con:name><con:value>INVALID_METHOD</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 405 Method Not Allowed</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>text/plain; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VyvOYMpYXFrsCVaw1ZEjgBibbS0qR26CJLYMlG5KvH8mAA4Tkcu+Tq9ut7tOLjvqS4yi0vBbnkAgas9I6Chn3cm1DSxPmxZhT7jEcAfcE8Sat66FnlZGHd0e00qDb0J4tC+xq1a3qdlDzdcep1fQ6OEgPcNVEdRc54IM05TyFAeMCM9HQLGRWdFTVkTs1Xc+qeSYq2071SSvdQcKlb2lSRtoW1Jo3tLkQC88wVqtVeWWX42RmWAiZxsP1cELmEGGtebnJKA+UNLf2pOwDgTAkZRJHxqVxYHPpc29CZwyLNIFtLP+rWMhAriFtfE5nP7TiLPgDFsS52MEsZpTgkL5jVZ9rEPPYL7XCWZxQMY++TMJEyrEOa6IT02E/NOMQ2pmODhAmHOt8js2tr1sIIAFGoPT7dtDQfpzXtfzoNMGMB3ES8UPxv+EBlkEYL8DX+S6tLbTzHZ6oVPMSiDdgJEw5zeBGDesCE+DbbgI531VpnEBA10PK5YCuuUJn7MM7EjfV6NIZcPF/GrTXnI2TOxym0KxfXd2NfvVRO3zo3MxHw/ET2O36sD3KnEYOYN84VxSt3YhHQ1kM0eZE+8p5fHKSNOhNW86f5Of9zYUzRFeDWmdyzWavzoS8dyr924us9+vXdf9iSu3FxfC1Mrrimdt75D2nlgV/+vb1a8TkxQsvlqP1eCaW/fen/shZ9QKTzybWsDKoPyHz9wM2lm0/GhHTniXjVefm8Um0l1XcHqc0iqt3Y/Mft3sRvj467cW9Se+CIbyPaln6k1zV7x8bRTp7+A91uzs/SV/+ABE7UY3BoFvqyy5h8T2ZKQ319SA39RaKfLgAJrSmOqW4w0sl3VHfkz3cyGbdbLfrVqvqula9i+weqth2z3XNPmq1+63KjmQ2KI4gdmIWUBVLUe5mbL4HSCKPA/Mh0bM4lUzHtW88drHApQG7lZcgZhymsaRn9wVR/sZtHsZzczavQLW6sFil5mqlm1iM2ChpBQKSA062rANOvgVCFxQUcau55nKwuZC1WOIsFaFZznCZQSqpPVEs61lOvWJwGi1CUEiNKPbTEMqL+SKvjME3X0vHhOfa2940v21f5nX8b1cCaeNTZcBVLm2QbYQTjwvaJXI6YRNNkbmf8M59K/WpuliyniKhZIPk8NfHmKj5KGZEZvTcmTybO9yF+dnHP580vgFlHNejCORndC/s7umWj4Ckjeaum0tslpflNMvSvIGOYxuJdG+oChnIMiZAUklsb9P4FZhReDHOekUK4EfBC/0hxFTM2URgAZEcuFIunrE2TICrtWEgb8r63J3kIKQsnYC1OKXrhHLlUYi/3YqIR5SdVI/lZxUn/kfHTvjaiyPzlFuDoGymJPWCvH0xFySWbqnkvjjZd37Kwangh8qiyAUWIQfqJRXw9Z+SIrWGhgmJUyYGXS1X7BNtjlO8LcD7MPrkJufyYrmj/77d6TQfASIXSWmf+1dvtKeuAJvtkfU26Bd8bX7H14fomp/UnzV7dTqe8eZf</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:181BB82A69918D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:181BB82A69928D03E0533E991F0ABFA5</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>6f52c49b-d09b-4191-87f8-f972a9963290</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1a8514b6-f24b-4ffb-b164-e2b1dd94d326</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00018_PYLD_UVTC_UserName_With_Method_PUT_405_METHOD_NOT_ALLOWED_P2" searchProperties="true" id="9b198477-a333-4259-852d-9ac029eae034"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="574e90e9-6c4d-4200-9fcc-87e21b62e23d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="383ca8bc-5c76-41fc-9696-7de0dbf3a5e2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID_FULL",myTC.getPropertyValue("NODE_USER_ID_FULL1"));


</script></con:config></con:testStep><con:testStep type="restrequest" name="UserValidationTokenCreate_PUT" id="4c7cdba9-26c9-40ae-bc33-6a450d608128"><con:settings/><con:config service="UserValidationTokenCreate" resourcePath="${#Project#HostName}/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}/VerificationToken/{TokenType}" methodName="PUT" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserValidationTokenCreate_PUT" mediaType="application/xml" postQueryString="false" sslKeystore="999901.pem" id="db9e1323-d307-4a85-b7bd-d4e9dee4f7d5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="TokenType" value="${#Project#TokenType_VE}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>errorRespType</con:name><con:value>INVALID_METHOD</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value>PUT method is not allowed for API call: https://qa.q.uvvu.com:7001/rest/1/07/Account/urn:dece:accountid:org:dece:E74A26B2D27731AAE0401F0A05994546/User/urn:dece:userid:org:dece:E74A27AA50195634E0401F0A05994540/VerificationToken/urn:dece:type:token:ValidateEmail
</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 405 Method Not Allowed</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>text/plain;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>261</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc9o6EP4rjPvYMfIFiPEEZiAQ6hOSUEySpi8dIS+gYkvEkoH011cy4AAhOZzz5Nn1avfbiz7tpcBJ7PgtISCVlLPSOomZ8HNtw8hS5nMsqPAZTkD4kvhh67bvO2XLx7sjRinoNIxf1QmA61kTM3KdullxaxdmveJhs163Lzw38qwx2MpUiAwCJiRmsmE4ll01rZpp1Ud23XcufLtWrtuVn0bpEVKhfCuTsmVsQa1Fw5hJufARWq1W5ZVb5ukUOZZlox+3/ZDMIMFG83KTUR4obW7tSTkCAnFMyoQn6BId2FxGwg/plGGZpbCNFX0Uy0JWHSmbSNDpF6M4C1HAJjwXrzDjjBIc0z9Y1+cW5IxHpVY85SmVs+TDJGxLOzZhTUxiV9gXAx1CO9PRAcJUYFPMsL31NYQJpMAIlB6GQcP4cl7X8qOjFDMx4WkiDsX/hgfYEmK+gMgUu7S20M53eKJSzUsgfsBInAm6hDs9rAtMQGy7CeR8V6VBChO67lOhBnQtNDq0D+9I3FSjQ6cg5P9p0F5zNk4ecZxB837deflx5aGfvV5//LT2buPVn6e1O7DnvJED2DfOFUVrN+LRUBZDtDkhVz3n67A2qT1UHr8P725Tb7Dq1WrTqNdpfX0eWRdw/7CokH++XXx1b6a21wkXN7VgWO1ijOY/eukY3diu9zjgaFarT2Tc866+P3Tb3Qyt7n9HgXXRd9z5qntHgzQcu+tgdPMY3jjzget8m1fb30eELXqttF55nv2MRLvjyIkdjvvh8+r6hQ4666c+SZ5HlcF1wueNIp09/Ie63Z0Ps/FvIHIn6jEIOqVr1SUsPyczraGROclN/YUmHyGBSaOpT2nu8DNFdzTyVQ83su3Z7bbntGr1btvrWG7XqrpuV92ba6vVvm5VdySzQXEE8YqzCdWxNOVuxuZzgCTxBbAIUnPJM8V0wvjEYwdLXArYUF0CzgSMuKLn6RRcFvPqjNcdez51anO8rC3tpWLXOy7v2X3amkhIDzjZcQ44eQiELiho4tZzLdRgC6lq8YKXmYzt8hKXGWSK2lPNsr5T8apI0GQRg0aKEh5lMZQXs0VeGSQ2X8fEROTaYXeU37YP8zr+tyuBsomoNhA6lzaoNsKJx8XaJXI6YdsaWfZ+wjv3rSyi+mKpesqUkg2Sw19vY6Lno5gRldGvq/CXvcNdmJ99/P1J9AkodFyPIlC0pHthd0+3egQUbTR33XzBdvmlnC2XWd7ASsVFqXKPdIWQ5aAQSKaI7XXE58BQ4QWd9YoUwI+CF/pDiJmcsVBiCYkauFIunrE2hCD02hCom7I+dyc5CKlKJ2EtT+muYrXyaMSfbkXEJ9pOqQfqs+Jp9NaxE7724qg81dYgKZtqSb8grx/MBeHKLVXcx9N956ccnAp+qCyKXGCRaqDGmYSP/5Q0qTUMTAjPmAw6Rq7YJ9ocp3xdgP9m9M5NzuXFckf/fbszaT4CBNRKKGjuX7/Rvr4CbLpH1tugH/B16zO+PkTXfKd+r9mr0/GMN/8C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:181BB82A69EA8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:181BB82A69EB8D03E0533E991F0ABFA5</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fae5f753-895e-47d5-a752-4010e714aeb9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00019_PYLD_UVTC_UserName_With_Method_DELETE_405_METHOD_NOT_ALLOWED_P2" searchProperties="true" id="2f39ba34-580d-4070-8216-7b56c6123265"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="5968a253-2b65-41cc-ba30-9f0188d432b8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="4e98d082-0541-4bc6-87af-096f467b2708"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID_FULL",myTC.getPropertyValue("NODE_USER_ID_FULL1"));


</script></con:config></con:testStep><con:testStep type="restrequest" name="UserValidationTokenCreate_DELETE" id="834cf19b-a77d-4954-8d99-93c87d02cd29"><con:settings/><con:config service="UserValidationTokenCreate" resourcePath="${#Project#HostName}/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}/VerificationToken/{TokenType}" methodName="DELETE" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserValidationTokenCreate_DELETE" mediaType="application/xml" postQueryString="false" sslKeystore="999901.pem" id="857f172c-10a6-41ea-8b33-b24bf5a71ce8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="TokenType" value="${#Project#TokenType_VE}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>errorRespType</con:name><con:value>INVALID_METHOD</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value>DELETE method is not allowed for API call: https://qa.p.uvvu.com:7001/rest/1/07/Account/urn:dece:accountid:org:dece:E74A414050821B36E0401F0A05994517/User/urn:dece:userid:org:dece:E74A2BD42D79036CE0401F0A07995CC1/VerificationToken/urn:dece:type:token:ValidateEmail
</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 405 Method Not Allowed</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>text/plain;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>264</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMvIFAnYFqkwIO8xCYIBMMvOSUuQ2aGJLxJLBydevZMADhGTZfXJ1u9V9+qKjvhI4iR0/EAJSSTmr5EnMhF9oW0aWMp9jQYXPcALCl8SfBsOB71QtH++OGJV+t2U8WrjWcK2wbnqRE5q1p8g1vSaEZh0aNvEaUMdNV5kKkUGfCYmZbBmOZddN69K0vJnt+U7Dd9xqw/V+GZUfkArlW5lULWMLKhctYyHl0kdovV5X126Vp3PkWJaNHoaDKVlAgo321SajIlDa3tqTaggE4phUCU/QFTqwuQqFP6VzhmWWwjZW+FEsC1keUjahoPMvRnkWwj6LeCFeY8YZJTimb1jXZwhywcNKEM95SuUi+TAJ29KOTciJSewa+2KgQ2hnOjpAmApsigW2t74mEEEKjEDlbtJvGV/O61pxdJZiJiKeJuJQ/G94gK0g5ksVQezS2kI73+GJSrWvgPh9RuJM0BXc6mFdYgJi200g57uqjFOIaD6gQg1oLjQ6tA/vSNxUo0vnIOT/adBeczZOfuA4gza6TKMcR9fPD7VG0IsesmX/Gh7GbtL82SoA7BsXirK1G/FoKMsh2pzIGveX7KLm/R11//oOInxrDH6PemJiI088D2VQv5A/GbIj7nXuc0nI/eiit8o5niVo0ITx3fe3UZTDG1q/ZsObFV9+l99Sko4D9Bb3+DpInwcDa47nX3EjEZ01euhOb7zRGIbf0OBi6M7SJKhxPB+i2tizsjWx+rd3X3sXQ94VnWCW/ppd1L7awd1kOBsNW2U6e/gPdbs7P82efgORO1GPQb9b6akuYfk5mWkNDc2oMPWXmnyEBCaNtj6lucPPFN3R0Fc93Mh20+50mk5wGdRqza7l3lh1173xPLtnBZ1eUN+RzAbFEcRrziKqY2nK3YzN5wBJ4gtgIaTmimeK6YTxicculrjSZxN1CTgTMOOKni+feMN9YWEE6/xFhgnN505d/KZG5ZbLERulQSQhPaBkxzmg5AkQuqSgeVuPtVBzLaQqxQteZTK2qytcZZApZk81yfpOrVlHgibLGDRQlPAwi6G6XCyLwiCx+TomJqLQTm5mxWX7MK3jf7sKKJuQagOhc+mA6iKceFvsXSKnE7atmWXvJ7xzH2Qh1fdKlVOmlGyQHP76MyV6PMoRURk9Xk8f7R3u0vzs4+9Pok9AoeN6lIHCFd0Lu3u51RugWKO96+YLtqsv1Wy1yooG1mouSpV7pCuELAdNgWSK115n/BkYKr2gsx6REvhR8FJ/CDGTCzaVWEKiBq5SiGdsDVMQemvoq4uSn7uSHIRUpZOQy1O661htPBrxp0sR8Ym2U+qx+qx5Gv7p2Alfe3FUnmppkJTNtaQfkNcP5oJw5ZYq6uPpvvNTDk4FP1SWRS6xSDVQT5mEj/9UNKe1DEwIz5jsd41Csc+zBU75ugT/j9E7NwWVl7sd/fflzqTFCBBQG6GghX/9RPv6CrD5Hldvg35A1+5ndH2Irv1O/V6zV6fjGW//Aw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:181BB82A6A438D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:181BB82A6A448D03E0533E991F0ABFA5</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>220cee83-c733-474f-a198-50663c32945e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00020_PYLD_UVTC_UserName_With_Method_GET_405_METHOD_NOT_ALLOWED_P2" searchProperties="true" id="696d08ce-c2c5-4b75-9968-64d6817e7384"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="c6204ca8-ad76-44cc-b096-39ca83511e15"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="6c68b703-6f4b-4275-aece-d6e0fede9988"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID_FULL",myTC.getPropertyValue("NODE_USER_ID_FULL1"));


</script></con:config></con:testStep><con:testStep type="restrequest" name="UserValidationTokenCreate_GET" id="d20d7b1e-23f3-418e-84fb-a1f7ac612846"><con:settings/><con:config service="UserValidationTokenCreate" resourcePath="${#Project#HostName}/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}/VerificationToken/{TokenType}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserValidationTokenCreate_GET" mediaType="application/xml" postQueryString="false" sslKeystore="999901.pem" id="1d4ea664-9073-4f71-8397-f3a665375fb2"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="TokenType" value="${#Project#TokenType_VE}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>errorRespType</con:name><con:value>INVALID_METHOD</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 405 Method Not Allowed</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>text/plain; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>237</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value/></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZWQbCLYrUGUCTDETkgyQ27xMKXIblNgSsWQM+fqVDDhASJbdJ1e3W92nLzrqc4GT2PEDISCVlLPKMomZ8Atty8hS5nMsqPAZTkD4kvjjYHjpO1XLx9sjRmXQbRl/68StW/UITLCfambdsyPzyXPOzDrGttcAm3jekzIVIoMBExIz2TIcy26Y1plpeRPb852m73hV13P/GJU7SIXyrUyqlrEBtRQtYybl3Ecoz/NqXqvydIocy7LRw/ByTGaQYKN9vs6oCJS2N/akGgKBOCZVwhN0jvZszkPhj+mUYZmlsIkVfhbLQpaHlE0o6PSbUZ6FcMAiXogXmHFGCY7pG9b1GYKc8bASxFOeUjlLPk3CtrRjE5bEJHadfTPQPrQTHe0hTAU2xQzbG18jiCAFRqByOxq0jG+nda04OkkxExFPE7Ev/jc8wBYQ8zmEptimtYF2usMjlWqfA/EHjMSZoAu40sM6xwTEpptATndVuUkhostLKtSALoVGh3bhHYjranTpFIT8Pw3aac7ayR2OM2jf1G5F/1f95/1lb4WSsPOCBg9PbCXervJWAWDXuFCUrV2LB0NZDtH6xH3NdWcP3qTmXuS0efe46r0Ev/64Iyf8MZ+lzdub8D5PkfM9vB8OO95wkXb6VDZefr8SdD+9GaDlMBTDh6Z3LRej3vPsijYaP6dWM0qf+4+Tq2aQTPjDdHk96jaaKKg/vj00H88klre1HhPPPxaxRYM73stnOfk+a151IRhH08csqDd+5GGGRzYbRb+dt3v3tv/YKtPZwb+v2975cfb0DERuRT0Gg26lr7qE5ddkpjU0NKPC1J9r8hESmDTa+pTmDj9TdEdDX/VwLduu3em4TnAWeF23a9V6VqNW63me3beCTj9obElmjeIA4gVnEdWxNOWux+ZrgCTxBbAQUnPBM8V0wvjCYxdLXBmwkboEnAmYcEXPuYzcGp+/uLHdnK6Ys3BeGbfyzKhccXnNrtMgkpDuUbLj7FHyCAidU9C8rcdaqLkWUpXiFS8yGdvVBa4yyBSzp5pkfafuNpCgyTwGDRQlPMxiqM5n86IwSKy/jomJKLSj3qS4bJ+mdfhvWwFlE1JtIHQuHVBdhCNvi71N5HjCtjWx7N2Et+6DLKT6XqlyypSSNZL9X+9TosejHBGV0d+L8V97i7s0P/n4x5PoC1DosB5loHBBd8JuX271BijWaG+7+Yrt6ms1WyyyooH1eg2lyj3SFUKWg8ZAMsVrqwl/AYZKL+ikR6QEfhC81O9DzOSMjRVjQKIGrlKIJ2wNYxB6axioi7I8dSXZC6lKJ2Epj+kuYrXxaMRfLkXEJ9pOqW/UJ+dp+N6xI7524qg81dIgKZtqST8gq0/mgnDllirq4+mu82MOjgXfV5ZFLrFINVBPmYTP/1Q0p7UMTAjPmBx0jUKxy7MFTrmag/9u9MFNQeXlbkf/fbkzaTECBNRGKGjhXz/Rvr4CbLrD1Zugn9D1xVd0vY+u/UH9UbNTp8MZb/8D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:181BB82A6A9C8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:181BB82A6A9D8D03E0533E991F0ABFA5</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>a390397e-f583-4a7f-b991-88363c00d5ce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00021_PYLD_UVTC_UserName_With_Method_OPTIONS_405_METHOD_NOT_ALLOWED_P2" searchProperties="true" id="c48e1cbb-28c4-403c-8806-0aad39d33f4b"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="e808424f-3f2e-46e3-ba80-5fdaccc551be"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="4b178100-07f3-4fdd-be59-41db3368bc71"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID_FULL",myTC.getPropertyValue("NODE_USER_ID_FULL1"));


</script></con:config></con:testStep><con:testStep type="restrequest" name="UserValidationTokenCreate_OPTIONS" id="0feefcee-1fee-4e8c-b6b3-a75c99abaf2e"><con:settings/><con:config service="UserValidationTokenCreate" resourcePath="${#Project#HostName}/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}/VerificationToken/{TokenType}" methodName="OPTIONS" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserValidationTokenCreate_OPTIONS" mediaType="application/xml" postQueryString="false" sslKeystore="999901.pem" id="2f9250bb-57ad-4972-9f8b-bf03592e7c51"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="TokenType" value="${#Project#TokenType_VE}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>errorRespType</con:name><con:value>INVALID_METHOD</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 405 Method Not Allowed</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>text/plain; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>237</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value/></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VyveRMl4wmytQxTohgSyYZHLzklLkBpTYkrFkIPfrRzLgAAGGmSdXt1vdpxcd9RVHYWC7Tc4hFoTR3CoMKHdTbV1LYuoyxAl3KQqBuwK7XnM4cO2C6aLtES3X79S1N2xaftEqv+tlgKrumHZNr5WqFb1YQxY4VacymTjSlPME+pQLREVds02rpJtl3ayNrZprV9xiuWBb1quWe4aYS9/SpGBqG1ArXtdmQkSuYSyXy8KyWGDx1LBN0zJehgMPzyBEWuNqnVEaKG5s7HHBBwxBgAuYhcaVsWdz5XPXI1OKRBLDJpZ/KpZpmDVD2vicTH9p2Vnw+3TCUrGNKKMEo4D8Qao+QxAz5ueawZTFRMzCk0lYpnKswwrr2HLoL83Yh3ahoz2EMUc6nyFr42sEE4iBYsg9jfp17ddlXUuPjmNE+YTFId8X/xseoAsIWAS+zrdpbaBd7vBIpRpXgN0+xUHCyQLu1LBGCAPfdBPw5a5yDzFMyGpAuBzQFVfojF14B+K6Gh0yBS7+T4N2mrN28oyCBBqvf8f4eWUPe62X/PvgYdm9nT88P3wyPOnWUwC7xqkia+1aPBjKbIjWJ+a/f9deB59D/3Z8U23zpwFpj55Q99b0/OgmuukZvHwdDSqD+WvRHKBgHFxfh0OGHFFuDRf55LGYd24XYXID/an3svpISo/oPk88dD/plIndZY81p9jyXo18x6l8kVVIpsPB+OXdGQyjkDk304WZVCvohYwNG1XDjolKvf4H9/v+3RNpjf7K3yTFEPe63rzi1LN0dvDv67Z33kvePwCLrajGoN/J9WSXkDhPZkpDfH2SmrqRIh8ugAqtoU4p7nATSXfEd2UP17JVtVqtqt0sN3vlascsds1Ssdit1aye2Wz1mqUtyaxRHEBsMzohKpai3PXYnAeIQ5cD9SHWFyyRTMe1Mx47SKBcn47kJWCUw5hJeo6mESMzPwyioCLsygSXubDMTy13x8Q9vY+bEwHxHiPb9h4jjwCTiICibTXVXI41F7ISc7RIRGAVFqhAIZHEHiuOdW2nWjI4CaMAFE4jZH4SQCGaRWldDL7+2jrCPNWOuuP0rp3M6vDftgDSxifKgKtcWiCbCEeeFnubyPGELXNsWrsJb903E5+oayWrKWKC10j2f30PiZqObEJkRm9t783a4s7MLz7+86RxBpRxWI8skL8gO2G3D7d8AiRpNLbdnCOrMC8ki0WSNtBxikYs3RuqQoZpGx7gRNLa15h9AjUyL8ZFb0gG/CB4pt+HmIgZ9QQSEMqBy6XiBUuDB1wtDX15T1aXbiR7IWXpBKzEMV07kAuPQnx2J8IuVnZS/SA/Sxb73x074msnjsxT7gyC0KmS1PvxdWIuMJNuiWQ+Fu86P+bgWPB9ZVbkDIuQA/WeCDj9J6cora4hjFlCRb+jpYpdmk1xiq8I3G+jH25SJs9WO/Lvu51O0hHAIBdCTlL/6oV21RWg0x2q3gQ9wdalc2y9j67xQ/1Ts1Onwxlv/AM=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:181BB82A6AF58D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:181BB82A6AF68D03E0533E991F0ABFA5</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>53b8f6c2-5384-4d77-b942-11ffc26207ae</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>role</con:name><con:value>nodeIdRTL</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:${#Project#nodeidRTLCS}</con:value></con:property></con:properties><con:tearDownScript>if(context.expand( '${#Project#runTeardown}' )=='true')
	{
	log.info("Executing TearDown for Suite '" + testSuite.getName() + "'");
	
	for ( testCaseResult in runner.results )
	{
	   currentTestCaseName = testCaseResult.getTestCase().name;  
	   currentTestCase = testCaseResult.getTestCase(); 
	   log.info("Current TestCase : '"+ currentTestCaseName + "'");
	   log.info("Current TestCase Status : '" + testCaseResult.getStatus().toString() + "'");
	   
	   if ( testCaseResult.getStatus().toString() == 'FAILED' )
	   {
	      log.info("Re-executing failed TC");
	      def currentRunnerTC = currentTestCase.run(null, false);
	      log.info("Status on re-execution : '" + currentRunnerTC.status + "'");
	   }
	}
	log.info("Execution of TearDown for Suite '" + testSuite.getName() + "' Completed" );
}</con:tearDownScript><con:reportParameters/></con:testSuite><con:testSuite name="02.UserValidationTokenCreate_PERM_P1" id="f8b23f5d-8dc9-4454-ad51-d1c9435922da"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00001_PERM_UVTC_UserName_Valid_Role_DECE:CS_with_TokenType_ValidateEmail_200_OK_P1" searchProperties="true" id="f767bf88-3fc4-4d5e-a30d-3b96494c4540"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="cfac1731-90f4-4ec9-b537-461bfefac301"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="7886ff54-17c6-459b-baf5-b1f6d8a0213a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DECE_CS" id="22f42ff8-ad11-4298-b202-9673b9381d12"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDECECS"));
//tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdDECE"));
tP.setPropertyValue("audience","");</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full DECE" id="ee3dea82-0c8d-42d2-810c-f35cf3750370">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("UserName",tC.getPropertyValue("UserName1"));


def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;


tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID1",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="a1c9b742-e3ed-4d6e-8fe8-7864db770adb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>181BB82A6B488D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:181BB82A6B488D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>uvtc_firstuser_201502_20150610_010058</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>181BB82A6B498D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A6B498D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:181BB82A6B498D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A6B498D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_010058</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_b23566ad-3bd6-4cda-b220-f5c88c223cc3</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_b23566ad-3bd6-4cda-b220-f5c88c223cc3</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VyveRMt6AgCtQBYHcUIGEAFkuL1NClm0xRna0GMLXj2TAwYRkmHlyqd06fXrRka4ZWEW222EMUY5jUtqsIsLczNrSBCVuDBhmLgErxFwO3WlnNHTtiumCwxatNOi1tL8WtlOr14GnOwuvrlehB/SFbZu6X4ONBrRtB0JHujIm0IAwDghvabZp1XSzrpvNmdV07Su3dlWxbXuulV4QZRJbulRMbU9qw1payHniGsZ6va6snUpMA8M2Tct4Gw2nMEQroLWvdxllgWh77w8rHoIoimAFxivj2ij4XHvMneKAAC4o2sfyvotlGmbTkD4ew8EvLd+LvAHx42x5A0hMMAQR3gJVnxHiYeyVOlEQU8zD1bdJWKYC1tEG6tCqkl+aUaR2IVCBIWVAZyGw9lgT5COKCESl58mgpf26rGvZ1hkFhPkxXbHi8r/xQSRFUZwgT2eHtPbULgc8U6n2NYLugMBIMJyiBzWsCYCI7buJ4OVQpTFFPt4MMZMDumGKnXFM72S5q0YPB4jx/9Ogo+bsQF5AJFC7sb4tv91RkWynv3vNxvwlHI9jy7ljT4NWRuDYOTPkrd0tT4YyH6Ldjvvhtvv7jxk+hlflt3XwlAJ/9HEX3kTDxngWWRTZb7fzea0Opqn5Zi4ZSLuMOGvQ709fnzna+osl+wPK1eApuB8/Lp3o+d1/ZcHSTEI2Hwvj/uqlfjVL6g1Iy/2uaDoPj/1wZAeT8nO/441G989G1R8NjXL9NS7fv5r9xBDzQTOdPEdDp5qOhku69Zf1QTlirTydI/5F2+HMT8ViiSA/LNUYDHqlW9klwH8WM2XBnu5nrm6ixIdxRLjWVruUdrhCyh32XNnD3dpqWN1uw+7Uu9Vmo2c6fbPmOP1m07o1O93bTu0gMjsWJxRvYuJjFUtJ7m5sfiYIVy5DxENUT2MhlY5pPyD2AAelAZnIQxAThmaxlOcqEsBKm2IDYWKtt0uL2h+pHYiVVnqI+SN5pB2fI1rQZNsuaPIEQZxgpIRbzTWTg824rMU7SAWPrEoKKgQJKe1UqaxrVxs1g+FVEiHF1FjFnohQJQmTrDIG231tHUCWWbOywt2J+za303+HMkgfDysHpvLpItlKdOaCqR6SOZ+0ZZ5cRAf4jvCwOlyyppxiuGNS/PU5KmpG8jnZZ3WgnXufGgrIxmlSeTAvxTAf+Pzalmouz3/70JZ3YFXeKyJNRdaJatUxqIQ3VJqGaRtTBIVUqI9Z/DciRo5iXHQd5MRPguf2IkXBQzLlgKOVnJxStrzg/p8ipu7/gRz5zaWPi0JIWTqONvyc7SaSbxfF+MfnDXSh8pPmsfysY+p9duwM1lEcmae8/jkmgVqpq+Djm9mAsYTFUsRiegx+DuBc8KIxL3LOhcuBWgiOvv9TUurU0gCEsSB80NMyw7FiZjz5R4LcT6cvMJko5680/O/PNB1nIwCRfNsxnOGry9ZVR4AER6q7D/qN8DZ+Et4iu/YX81fLUZ1OZ7z9Dw==</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VyveRMt6AgCtQBYHcUIGEAFkuL1NClm0xRna0GMLXj2TAwYRkmHlyqd06fXrRka4ZWEW222EMUY5jUtqsIsLczNrSBCVuDBhmLgErxFwO3WlnNHTtiumCwxatNOi1tL8WtlOr14GnOwuvrlehB/SFbZu6X4ONBrRtB0JHujIm0IAwDghvabZp1XSzrpvNmdV07Su3dlWxbXuulV4QZRJbulRMbU9qw1payHniGsZ6va6snUpMA8M2Tct4Gw2nMEQroLWvdxllgWh77w8rHoIoimAFxivj2ij4XHvMneKAAC4o2sfyvotlGmbTkD4ew8EvLd+LvAHx42x5A0hMMAQR3gJVnxHiYeyVOlEQU8zD1bdJWKYC1tEG6tCqkl+aUaR2IVCBIWVAZyGw9lgT5COKCESl58mgpf26rGvZ1hkFhPkxXbHi8r/xQSRFUZwgT2eHtPbULgc8U6n2NYLugMBIMJyiBzWsCYCI7buJ4OVQpTFFPt4MMZMDumGKnXFM72S5q0YPB4jx/9Ogo+bsQF5AJFC7sb4tv91RkWynv3vNxvwlHI9jy7ljT4NWRuDYOTPkrd0tT4YyH6Ldjvvhtvv7jxk+hlflt3XwlAJ/9HEX3kTDxngWWRTZb7fzea0Opqn5Zi4ZSLuMOGvQ709fnzna+osl+wPK1eApuB8/Lp3o+d1/ZcHSTEI2Hwvj/uqlfjVL6g1Iy/2uaDoPj/1wZAeT8nO/441G989G1R8NjXL9NS7fv5r9xBDzQTOdPEdDp5qOhku69Zf1QTlirTydI/5F2+HMT8ViiSA/LNUYDHqlW9klwH8WM2XBnu5nrm6ixIdxRLjWVruUdrhCyh32XNnD3dpqWN1uw+7Uu9Vmo2c6fbPmOP1m07o1O93bTu0gMjsWJxRvYuJjFUtJ7m5sfiYIVy5DxENUT2MhlY5pPyD2AAelAZnIQxAThmaxlOcqEsBKm2IDYWKtt0uL2h+pHYiVVnqI+SN5pB2fI1rQZNsuaPIEQZxgpIRbzTWTg824rMU7SAWPrEoKKgQJKe1UqaxrVxs1g+FVEiHF1FjFnohQJQmTrDIG231tHUCWWbOywt2J+za303+HMkgfDysHpvLpItlKdOaCqR6SOZ+0ZZ5cRAf4jvCwOlyyppxiuGNS/PU5KmpG8jnZZ3WgnXufGgrIxmlSeTAvxTAf+Pzalmouz3/70JZ3YFXeKyJNRdaJatUxqIQ3VJqGaRtTBIVUqI9Z/DciRo5iXHQd5MRPguf2IkXBQzLlgKOVnJxStrzg/p8ipu7/gRz5zaWPi0JIWTqONvyc7SaSbxfF+MfnDXSh8pPmsfysY+p9duwM1lEcmae8/jkmgVqpq+Djm9mAsYTFUsRiegx+DuBc8KIxL3LOhcuBWgiOvv9TUurU0gCEsSB80NMyw7FiZjz5R4LcT6cvMJko5680/O/PNB1nIwCRfNsxnOGry9ZVR4AER6q7D/qN8DZ+Et4iu/YX81fLUZ1OZ7z9Dw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A6B488D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A6B488D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00002_PERM_UVTC_UserName_Valid_Role_Portal_with_TokenType_ValidateEmail_200_OK_P1" searchProperties="true" id="ccf0c5ec-aa2b-41db-8aa2-0cf292c29b45"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="d074ec61-12d3-4ce3-bc9e-88ceccda10ad"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportal"));

tP.setPropertyValue("audience","");
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="10d10e77-67f3-4442-ab92-37b41047247f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="0ea89a00-411c-4dfd-bc85-f34e9f0931c8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A6BA98D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A6BA98D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_010111</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8uwiAtWkqpBUFFREfebt3AYFmWTAQF//Tdo9CQ5yfnyvjfiND3dTy/0PPOMdc9lOwBjFMVO4Jdl8aXyT2tf52iGQzWGYxo18ndf4yHdrhmMSdfpVoul2+1KWcY4QbKPY92PXyoszdRrNF9juQXd7NS5Tp154tvsrlJeoQgT00Tlia6UM8/1cefq9qWSRH4n0LGDO77uIdyJYUcDyrhDNDv6HVPl9fmG8uowerXjOOxQFHwyEESuC59g4FHP1AedZwN3NMfy9TiJ0JtPA79U3vamafqU1p+CyKJYmqYpmqeIjoEd61fltXTfjAzZN4Pbuqv7ge9A3XUuegFKQbEdGGXgWkHkxLb3jWmGYujCdA1lsAYZzv9VoX47uKL7oaUPICOs17CtM3djc2SiCPkQlZdz+aXy62cVvO1dRLqPzSDy8Kf1v4OE/DNygxAZNXyP7I7u5xa/SNfrM4Id2Ydugp0zmhRtEuoQ4fIsQqaTjR1Mms/A5Wv5yxm+dxiC/6Ykz9R7nAQ29UVmRMdCOP4v9Xpfq5uVle4m6HUzPlwaE+cgjU+Y2Rr8pBo115Oj7uy5lyuE98o3UI9Sv60/N+qjr942HZleSsWimwJzdHB68zyri0dN6obKapwIdDvptsXWpM8kk8gEozWXq/OGy8ATbmx5VXDH0pT16KV47IZ5WBoAU4EXvj+n8myyjdbbndxvyCjW3PWB0vjpirY3Ckf7khfO2LnZaDXOGmsyc7Bg3MOAcVQapOlhI2gD3i7RuZ9I3cFOC1tr2WnaWay+/I7pfQxFXCOUX4Ms/m8aNC/qsf5YdItJYZLPM0aviix3q2K3C1DXAqksAEsWxhcwEazjyT46fT6lBaAue0AEuTIHqWhtxZWqjqTUWK3c3Uru9QRlzqUDsBVL5IUoZStxtxnS+noXbtkevdMEwdjMg319GBqDYzqw4URZKOlkIefKQcomC4leX2VWRtYX5aAw08WyXlofBF6ZS6mYXj2KUmpPdut5uF3yKbxIqgK4PmCWUtdWBgtvxcD63IakNxRwvMoFW+muVkomLcCsJFiTFYlt0e3tQugZ4d5z7XfGB8T4wuiv8n3fTXYX6aB0pX5XO/U1eV8XVWkI5tvlfr066uveuQQHE7C/e3Qajr4JUmvXTkV1OxwFO9k+wwlQJUFQAUkXDRS5PwRBXwAKB5zs0j0IzaBrkEYbsrhU5d1+c5M7pw3W+7SrM+02sx2vm7NTU5T86m6U7A+2Ym960+pIM85LPuYvW3yunpu6w8AsNNWNNIhHmTlQtdJ+JmYbOKga1pByL3wvUlpDEF1y21WsebxuTnG+d0xzLWymnNsyXaU+D03XDHNcXQTqMaKbAqqz1DY/j+ISsBQBgP5heRBURWgXSTXkVN0qgg56UpyAy4GNR+zqNBycXbitgyAbraeH41thDDGVBCpVJdJWUqktAqMowkBbSr0DWAqWFQmW1BNUKAJ1K4/SLcnXckCUP+exd82jJQlAqu9Akx+U6kuaj6exxnEg94Wl3+Nt5ZStjaZHt05IGmuTkEsVPDH93To4Kp4TLaNEW45Gk3G2XyT944HMKpPWRuf6riSdjyFwJqOFfRQDUZ+F220cVn0YwVgOPUXOLtMdPrSdvUcPqw1GmNEibLFLb58u+7q0G0WWxowGc39Wb/ElnJj5wKse2um6utCaYcvo+qaY59QuWtEBCHr8vHEyMpY92st03EzNITjudXaSubyQ89Jot4DpXB2tNa/aKDXO47FHXxYUNwmnqdZPOUlVq3VDWAwWOIycbdK2smjqG+xWj5vnHb1qOqF75NnkuODC+srySLFmZyNsKbOSym3gzrNaIRxSc+oMpJY5lvv5/qJfQm8KbwP083R4CG/zg3o/WT6Mnjvp0Ei3Ihjfl8UBJIvlHjkV9PjvBKaQOEbNvKp2woIF4Rj5ceW12FWQl05CKI5jdMiRcVtLHM0zNMOz9UavBwRJosnR3aMB3eB5mizuLOeG4hPEbuCbTuGr4HG3U+rvAKHXwcg3UFQ7Bwm0Ea78xWKRr7Lsz8nxG/gYLQLCE0GzBYBEAAOm2Wt0eUlkJZpviwLLC82eKFbKkyCe+tMImDGKPnJE/gNHnCPohA4qiGRxmmJynOKYpOSkn5PYZZ7O+pOPEkI1o4LtdViu3aCw44UuKgBTXmAkLnoK7fCaIArfnmxNh/gqLbIL8fWg/zbCz+/uySA6hlMo4CIcAZGCoi/4LnuP5ZuYG5948d08SAynOM9JZuPIgTckH1/9bpiiUx7dcv2B+A77of1Z8MEy9TmohzPj7MBH2z9uBIRQEsrxeq/KSX86PSXnc3KtQ6ugUxExTzEU3aI0BBPCifJFcEQ+9TBB/YiOPlB/8vyQf8SXxLavxeST9kjXlK/LH9xFNISLu4hMuj776UXng0uStxhl8VeyrkuuLAXiv95qYAcWekQ8I480iIzf5frC1js/JM5ihjm+VawK8pl/0xgwIGYdMseC6L3xrwx85fyj8JHkB5aYdNM+idH3b8rFgHqp6BAGiR/LxSAggvdD84ozzkPU+a30h5kr/Xvj8xn+ls9vlLFGxpenVx66zv9XrjnXdoGI7MLOFctLJSNXU+Lct94N6TeAX89prvu3Of0xktc/xH9K3uX08/fw+j8=</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZWQbm2BXoAoCmTBDLgskleRlS5EbUGLLjiQbyNevZMDB5LLsPrnUbnWf7j460qnAceQEXSGAS5qw2iqOmAgKa9vIOAsSLKgIGI5BBJIEk+7lKHDqVoB3W4zasN82/va8J/Bs7JsuuE3TtaFh4hPbMQl58m184qqPr1yFyGDIhMRMtg3Hsj3TapqWP7X9wGkFVqPe8O1Ho3YHXKjYyqVuGVtQK9E2FlKmAULL5bK+bNQTPkeOZdno/nI0IQuIsdE53VRUJOKdrT+ph0AgikidJDE6RRWf01AEEzpnWGYctrnCr3JZyPKR8gkFnf8wyr0QDtksKZZnmCWMEhzRN6z7cwlykYS1bjRPOJWL+MsibEsHNmFFTGK77IeBqtCODFRByAU2xQLb21hjmAEHRqB2Ox62jR/HTa3YOuWYiVnCY1Fd/jc8wHKIkhRCU+zK2kI7PuAnneqcAgmGjESZoDlcabKmmIDYThPI8aFqNxxmdDWiQhF0JTQ6tA/vYLnpRp/OQcj/M6C94WyC3OEog87g4aWVd99Qjl2aizmxObkYnfCTx9ltuwCw71wYytFulgekLEm02fE4fXyVv6eT+5vsr7cznF06vOdcvl7A3cV4JOQCsnTie/3Xm9us6bT+/Hx2b+PzxkP4Z3aenExj23tsjX8Nfq/93pP9hpoEnadvxF+j1e2aex7GZATX3svg59Wc/Rq7y8EwHV7cvPnJ4hGmD4OXJXrgc0WF61s8vJmO+MjOJ3duODhbLh+W9npxcf88F11rcp93L9tlOXv4q7bdmZ9kT89A5G6paTDs187VlLD8Xsy0hYbmrHANUi0+QgKTRkfv0toRZEruaBioGW7Wdsvu9VpOt9nr+q2+1RhYXqMx8H373Or2zrveTmQ2KA4gniVsRnUuLbkb2nwPkMSBABYCN/MkU0onjG8i9rHEtSEbq0OQMAHTRMmzLVeytW662XO0XtvMapJsFr34bvxk1K4Sec2ueXcmgVdE2XEqojwGQlMKWrk1sYVitpCqGa84z2Rk13NcZ5ApbedaZgPHbXlI0DiNQENFcRJmEdTTRVq0BonN1zExEYWVCpImXOKoOBHoy/oO/+1aoXxCqh2ELqkHapzw4ZI5CbxdPR/qbn56Ge3Cd7OQ6gOm+io5JRsk1V/vdNE8KbnyXtgOebnh0FAJjg7rKvOFOSUl78vbW4m6koHObjiv2K6/1rM8z4p5uG4DcRUe6Y4gy0ETIJkSqvU0eQGGyijoqFuhBH6QvLRXIWZywSYSS4gVf2rF8ohnwASEfgYMFfNXx74xKilV6ySs5Ge2s0g9YTTib185JCDaT5lv1GeZ8PB9Yp/E2suj6lSvAEnZXK/0jbD+gh4kUWGp0rKE7wf/LMBnyavGssklFqkI9ZRJ+PpPTYtU28CEJBmTw75RGPaFs8Ap1ykE704fwhTaXD7W6L+/1kxaUICAeuIJWsTXd26gjwCb74nvNukX+tv6Tn+r6DofzB8te3065HjnHw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A6BA88D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A6BA88D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00003_PERM_UVTC_UserName_Valid_Role_Retailer_with_TokenType_ValidateEmail_200_OK_P1" searchProperties="true" id="807d6575-e2f0-4ab1-821a-fd193accb8d4"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="e11292f4-29b6-452c-a5f2-c83bd67d4d92"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="0d1dd28b-fb3c-4ffb-816f-05c38585231d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="246dbab1-d563-4eaf-8532-072c1a8a47e2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A6BD68D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A6BD68D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_010118</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvO4ZVu2uboCVVwzTMgkAcIyeUkpsgAltoQl2SH5+pUMOECAZffJ1e1W9+mLjvpKwCh0/aYQmEvCaGEVhVT4mbZuJJz6DAoifAojLHyJ/FHzduC7FvDh9ohR6HfqxrODArcIq4FZK9Ycsxh4ZRNWZiXTA2XXA6AIXFBUpkIkuE+FhFTWDRc4JROUTVAbOzXfrfoOsEpV8GQUJpgL5VuZWMDYgFqJurGQcunb9vv7u/XuWYzPbRcAx57eDkZogSNoNK7WGWWBeGNjj6wAIxyGyEIssq/sPZurQPgjMqdQJhxvYgWnYgEb1GxlEwgy/2HkZ3HQpzOWiW1IGSUIhuQT6vrcYrlgQaEZzhknchGdTMIB2rGJV8hETpH+MOx9aBc62kPIBTTFAjobX0M8wxxThAuPw37d+HFZ17KjYw6pmDEeiX3xv+HBNMUhW+LAFNu0NtAud3ikUo0rjPw+RWEiSIp/62FdQoTFppsYXe6qcM/xjKwGRKgBXQmNzt6FdyCuq9Ehcyzk/2nQTnPWTiYwTHBDvInhUyzvXnsdd9X5FcloMn1JHDYes3oGYNc4U+StXYsHQ5kP0frEYoikk9j3E9meDhe4MuTpL/xUQzImr5SD9PMPYOHNHz5Ak1L3gTSd2+Avr5v0ABTgbTX5gCy+fmi/xqNqpdL6+TiZuvC6N0zncaunzB89RKc9G3nj23g2fJkPau3B307z8RpWYDptfsqbu0ocO5MmoZW3p278Kj7bvRVv929k+WdpRsbxfVT0uA2qj92Hep7ODv593fbOj5KXV4zkVtRj0O8UeqpLUJ4nM60hgTnLTP2lJh8hMZVGQ5/S3OEniu5I4KsermWn6rRaVbdZbnXK1Q7wuqDked1azemBZqvXLG1JZo3iAGKb0RnRsTTlrsfmPEAU+QLTAHMzZYliOmGc8diBEhb6dKguAaMCq5FR9Fybow9BX6A7q80cyiJKeVimxUTx928m7+gdb84k5nuk7Lp7pDzEiCwJ1sytB1uoyRZSFSOGaSJDx0qhRXGiuJ1rmvXdYrVkCxItQ6yh2hELkhBby8UyK40t1l/XhEhk2mF3nF23k4kd/tvWQNkERBsInUsLqz7iI68L2CZyPGEHjIGzm/DWfTMJiL5ZqqCSE7RGsv/ra070gORDojJ6bo+enS3u3Pzi499P2mdA2Yf1yAMFKdkJu3271SugeKOx7WYMHSu2kjRNsgYWi57NlXtbV8gGrj3CKFHM9jFmb5jauRf7omckB34QPNfvQ0zkgo4klDhSA1fIxAv2hhEWem/oq6uyunQp2QupSifxSh7TtUO182jEZ9ci5CNtp9T36vPOePDVsSO+duKoPNXaIAmda0k/IR8n5gIx5ZYo8mN81/kxB8eC7yvzIudYpBqol0Ti038KmtXqBkSIJVT2O0am2GXaDKf8WGL/y+ibm4zM8+2O/Pt6Z5JsBBBWO6EgmX/9SPv6CtD5Dltvgp4g7NI5wt5H1/im/q7ZqdPhjDf+AQ==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A6BD58D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A6BD58D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00004_PERM_UVTC_UserName_Valid_Role_Dynamic_LASP_with_TokenType_ValidateEmail_200_OK_P1" searchProperties="true" id="69f0d905-2b3d-4e2c-be74-4a206e59a520"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="59c79960-bd97-433e-9396-6aa844831aea"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDLASP"));

tP.setPropertyValue("audience","");</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="01a1b5bc-02b4-479c-9d52-f1165b1d41c7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="ea9e5584-7a7a-48f6-80fc-161e0d237b3c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A6C318D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A6C318D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_010124</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdd9o4EP0rHPfZ+DvBPoFz+Ei2bkkhkKbpvuxR5AEEtuRYsoH8+koGXExJlt0nH41HM3dmrq50w1ES20GXc8gEYbSxSWLKg9La1vKMBgxxwgOKEuCBwMG0ez8M7KYZoMMWrREO2to/L37LsV68lu75vqm7FgIdea6ng+tdRY4f2deuJ105zyGkXCAq2pptWp5uXumm/2j5gd0KrOum6Vz9rTWeIOMytnRpmtoe1Ia3tYUQaWAY6/W6uXaaLJsbtmlaxvP9cIoXkCCtc7OrqEyUdfb+uBkBhjjGTcwS48ao+dxEPJiSOUUiz2CfK3ovl2mYviF9Ik7mn7RqL0QhnbFy2UeUUYJRTN6Q6s89iAWLGt14zjIiFsm7RVimCqzDBuvYcuknzahDuzBQDWHGkc4XyNrHmsAMMqAYGt8nYVv7dNnUyq2PGaJ8xrKE15f/DQ/QAmKWQqTzQ1l7aJcHPNOpzg3gIKQ4zjkp4Jsia4ow8P00AV8eqjHOYEY2Q8IlQTdcoTOO4Z0sd90YkDlw8X8GdDScXZAnFOfQ4Z97/n3PXbz0W4OkZTvU7K7Yytn2hrhdAjh2Lg3VaHfLE1JWJNrt2GyfN08C98PPs/wleRisN6Mf6dqOv/LtYrT9Xown1urt6flaFMun6eqnNybO5kt4OwtbofcM18M4GTjjxfjK8aLPP9f+1zf61k/9gt2i579Gi1tOo7vJlx930+VmtnJ4gpPJW9r/2l2vo+VbkphsWTjuYP0wWDyuTbrNRmH65PxosYflyhxls9chi+78+2HLvX1121U5R/jrtsOZn+YvS8DisFQ0CAeNOzklJD4WM2UhkT4rXYNUiQ8XQIXWUbuUdgS5lDsSBXKGu7XVsnq9lt296jtWa2A6t6bnOLe+b92Z3d5d1zuIzA7FCcQ+ozOicinJ3dHmY4A4CTjQCDK9YLlUOq59EHGABGqEdCIPAaMcHpmU59xL3GSJHbb0VmJW5CuX5zgCrfGNiREdZd2ZgKymyLZdU+QJYJISULKtWM0lrbmQnXhFRS5iq1mgJoVcCnumNDaw3ZZncJKkMSicRsKiPIZmukjLvhh897V1hHlpHQy703F52t6t6/TfoQXSJyLKgatqeiDHCGcuF/NQyvmSLfPRtI5LPoTv5hFRB0v2U2QE75DUf/2mieJHxZGypgPoyvfUUItrnJZUpYoKgiuqVxe21HF58juHkbwiq/nazIsiL6fguo6RyfCGKtIwbWMKOJfatH1kK6BGFcW46CKogJ8kr+x1iLlY0KlAAhLJmka5vODmnwJXN38oyb659FlRSylbJ2Ajztn6sXy1KMQfPmxwgJWfNI/lZ82y6PfEzsQ6yiPrlBe/IHSuVuoS2L7DDMxkWCLli2XHwc8FOJe8bqyaXGERklAvuYD3/zSULrU1hDHLqQgHWmk41soSp9imEPx2+iNMKcfV+4z8+wNNJyUFsFQe6V/GV9dsoI4AnR/p7T7pO5JrfiS5dXSdP8x/Wo76dMrxzi8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A6C308D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A6C308D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8uwiAtWkqpBUFFREfebt3AYFmWTAQF//Tdo9CQ5yfnyvjfiND3dTy/0PPOMdc9lOwBjFMVO4Jdl8aXyT2tf52iGQzWGYxo18ndf4yHdrhmMSdfpVoul2+1KWcY4QbKPY92PXyoszdRrNF9juQXd7NS5Tp154tvsrlJeoQgT00Tlia6UM8/1cefq9qWSRH4n0LGDO77uIdyJYUcDyrhDNDv6HVPl9fmG8uowerXjOOxQFHwyEESuC59g4FHP1AedZwN3NMfy9TiJ0JtPA79U3vamafqU1p+CyKJYmqYpmqeIjoEd61fltXTfjAzZN4Pbuqv7ge9A3XUuegFKQbEdGGXgWkHkxLb3jWmGYujCdA1lsAYZzv9VoX47uKL7oaUPICOs17CtM3djc2SiCPkQlZdz+aXy62cVvO1dRLqPzSDy8Kf1v4OE/DNygxAZNXyP7I7u5xa/SNfrM4Id2Ydugp0zmhRtEuoQ4fIsQqaTjR1Mms/A5Wv5yxm+dxiC/6Ykz9R7nAQ29UVmRMdCOP4v9Xpfq5uVle4m6HUzPlwaE+cgjU+Y2Rr8pBo115Oj7uy5lyuE98o3UI9Sv60/N+qjr942HZleSsWimwJzdHB68zyri0dN6obKapwIdDvptsXWpM8kk8gEozWXq/OGy8ATbmx5VXDH0pT16KV47IZ5WBoAU4EXvj+n8myyjdbbndxvyCjW3PWB0vjpirY3Ckf7khfO2LnZaDXOGmsyc7Bg3MOAcVQapOlhI2gD3i7RuZ9I3cFOC1tr2WnaWay+/I7pfQxFXCOUX4Ms/m8aNC/qsf5YdItJYZLPM0aviix3q2K3C1DXAqksAEsWxhcwEazjyT46fT6lBaAue0AEuTIHqWhtxZWqjqTUWK3c3Uru9QRlzqUDsBVL5IUoZStxtxnS+noXbtkevdMEwdjMg319GBqDYzqw4URZKOlkIefKQcomC4leX2VWRtYX5aAw08WyXlofBF6ZS6mYXj2KUmpPdut5uF3yKbxIqgK4PmCWUtdWBgtvxcD63IakNxRwvMoFW+muVkomLcCsJFiTFYlt0e3tQugZ4d5z7XfGB8T4wuiv8n3fTXYX6aB0pX5XO/U1eV8XVWkI5tvlfr066uveuQQHE7C/e3Qajr4JUmvXTkV1OxwFO9k+wwlQJUFQAUkXDRS5PwRBXwAKB5zs0j0IzaBrkEYbsrhU5d1+c5M7pw3W+7SrM+02sx2vm7NTU5T86m6U7A+2Ym960+pIM85LPuYvW3yunpu6w8AsNNWNNIhHmTlQtdJ+JmYbOKga1pByL3wvUlpDEF1y21WsebxuTnG+d0xzLWymnNsyXaU+D03XDHNcXQTqMaKbAqqz1DY/j+ISsBQBgP5heRBURWgXSTXkVN0qgg56UpyAy4GNR+zqNBycXbitgyAbraeH41thDDGVBCpVJdJWUqktAqMowkBbSr0DWAqWFQmW1BNUKAJ1K4/SLcnXckCUP+exd82jJQlAqu9Akx+U6kuaj6exxnEg94Wl3+Nt5ZStjaZHt05IGmuTkEsVPDH93To4Kp4TLaNEW45Gk3G2XyT944HMKpPWRuf6riSdjyFwJqOFfRQDUZ+F220cVn0YwVgOPUXOLtMdPrSdvUcPqw1GmNEibLFLb58u+7q0G0WWxowGc39Wb/ElnJj5wKse2um6utCaYcvo+qaY59QuWtEBCHr8vHEyMpY92st03EzNITjudXaSubyQ89Jot4DpXB2tNa/aKDXO47FHXxYUNwmnqdZPOUlVq3VDWAwWOIycbdK2smjqG+xWj5vnHb1qOqF75NnkuODC+srySLFmZyNsKbOSym3gzrNaIRxSc+oMpJY5lvv5/qJfQm8KbwP083R4CG/zg3o/WT6Mnjvp0Ei3Ihjfl8UBJIvlHjkV9PjvBKaQOEbNvKp2woIF4Rj5ceW12FWQl05CKI5jdMiRcVtLHM0zNMOz9UavBwRJosnR3aMB3eB5mizuLOeG4hPEbuCbTuGr4HG3U+rvAKHXwcg3UFQ7Bwm0Ea78xWKRr7Lsz8nxG/gYLQLCE0GzBYBEAAOm2Wt0eUlkJZpviwLLC82eKFbKkyCe+tMImDGKPnJE/gNHnCPohA4qiGRxmmJynOKYpOSkn5PYZZ7O+pOPEkI1o4LtdViu3aCw44UuKgBTXmAkLnoK7fCaIArfnmxNh/gqLbIL8fWg/zbCz+/uySA6hlMo4CIcAZGCoi/4LnuP5ZuYG5948d08SAynOM9JZuPIgTckH1/9bpiiUx7dcv2B+A77of1Z8MEy9TmohzPj7MBH2z9uBIRQEsrxeq/KSX86PSXnc3KtQ6ugUxExTzEU3aI0BBPCifJFcEQ+9TBB/YiOPlB/8vyQf8SXxLavxeST9kjXlK/LH9xFNISLu4hMuj776UXng0uStxhl8VeyrkuuLAXiv95qYAcWekQ8I480iIzf5frC1js/JM5ihjm+VawK8pl/0xgwIGYdMseC6L3xrwx85fyj8JHkB5aYdNM+idH3b8rFgHqp6BAGiR/LxSAggvdD84ozzkPU+a30h5kr/Xvj8xn+ls9vlLFGxpenVx66zv9XrjnXdoGI7MLOFctLJSNXU+Lct94N6TeAX89prvu3Of0xktc/xH9K3uX08/fw+j8=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00005_PERM_UVTC_UserName_Valid_Role_Linked_LASP_with_TokenType_ValidateEmail_200_OK_P1" searchProperties="true" id="b879523c-9750-4e97-a324-45bfc039abc1"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="3787f2d3-2f27-49c9-8d3e-d21539f8dcba"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdLLASP"));

tP.setPropertyValue("audience","");</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="9a8f5ef8-0472-4950-be17-64b2f569473d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="f41cd024-7d16-44d5-901f-ffe3e2eb8a3e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>LLASP</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A6C7B8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A6C7B8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_010131</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynncMr5wdwWqDIQdzwDJhNwmL1tCbkAZWzKWxCVfP5IBD2ZIlt0nl9qt7tPdR0e65iiOXM/nHFJBGC1t4ohyL7O2DZlSjyFOuEdRDNwT2Jv4o6Hnlm0PHbYYpaDfNv6pzSq4Ccg2p9O6a1Yb9bqJam7NDBvVsOE0wgq0QLlyLiGgXCAq2oZrOzXTrpt268FpeW7Tcytlt9l6NUpPkHIVW7mUbWMPasPbxkKIxLOs9XpdXlfKLJ1brm071stoOMELiJHRud5VlCVKO3t/XA4BQxThMmaxdW0VfK5D7k3InCIhU9jnCj/KZVt2y1I+ISfzKyPfC2FAZyxb9hBllGAUkXek+zMCsWBhyY/mLCViEX9YhGPrwCZssImdKr0yrCK0CwMVEKYcmXyBnH2se5hBChRD6fE+aBtXl00t2/qQIspnLI15cfnf8ABdQcQSCE1+KGsP7fKAZzrVuQbsBRRHkpMVjDVZE4SB76cJ+PJQpbsUZmQzJFwRdMM1OusY3sly140+mQMX/2dAR8PZBXlCkYROH9mJlK3+X/Xtz3GzwdhjU/S/bnuR/NHOABw7Z4Z8tLvlCSlzEu12zLuveDQNvgbiZUu/jF9fo3D2N3Iaw9bYGQ3X1ZHrzCffX9bd+2lkfXG+LTdPk3ixqU9XBF7G79O48iQfu37dRnj7OHoYLWSyDZrpwMb3zyvZvA2sH4v3N3vo2/4SJaM3MubJ15u7dW/z7KfLCekOlrPHUXV5+15DA1Var5L4TDbks+Qs+Sbpdz7wnysy4W/Vdl7OEf6i7XDmJ3L6BlgclpoGQb80UFNC4nMx0xYSmrPM1Uu0+HABVBgdvUtrhyeV3JHQUzPcrZ2m0+02Xb/ea3SbfbtyY9cqlZtWyxnYfnfg1w4is0NxArHH6IzoXFpyd7T5HCCOPQ40hNRcMamUjhufROwjgUoBvVeHgFEOD0zJc6Pu0GjedJfvDJz5qjbbprPGtFJDRmnMxC29Tf2ZgLSgya5b0OR7wCQhoIVb85orYnOherFEKykip7xCZQpSSXuqVdZzq82axUmcRKCRWjELZQTlZJFknbH47uuaCPPMOhz6k7vsvH1Y2em/QxOUT0i0A9fVdEENEs5cL86hlPMlO/aD7RyXfAjvy5Doo6U6KlKCd0iKv34TRTMkZ0lW0wF07ntqKMS1TkvKU4UrgnOy51e2UnJ19juHkSyRU16W5WolsylUqxUrVeEtXaRlu9YEsFTqtH1gP4FaeRTroqsgB36SPLcXIUqxoBOBBMSKNaVsecHdPwGu7/5A0X1z6cOikFK1TsBGnLP1IvVu0Yg/fdpgD2s/Zb5TnzVLw98TOxPrKI+qU139gtC5XulrYPsBMzBTYYkSMJYeBz8X4FzyojFvco5FKEJNpYCP/5S0MrUNhDGTVAR9IzMcq2WGU2wT8H47/REmE+T8hUb+/YlmkowCWL0GlX8WX1+0nj4CdH6kuPukH4iu/5noFtF1/jD/aTnq0ynHO78A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A6C7A8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A6C7A8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00006_PERM_UVTC_UserName_Valid_Role_AccessPortal_with_TokenType_ValidateEmail_200_OK_P1" searchProperties="true" id="d8e3c84b-5244-4448-b02e-f1615efbf19c"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="ce5d38d0-972c-4a0d-99f8-719c8691c7bc"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdAccportal"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="aa860e72-792d-47f3-81c0-a17d9b8d396c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Access Portal" id="60dcb3c6-e114-4f89-8e97-d226d7708fd8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdAccportal"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="ef16d3eb-30a8-4f28-80cc-aacb4988b75d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>ACCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A6CC58D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A6CC58D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_010137</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMrLN3RWo4pZZ1xJyMclk8rIl5MaI2LIjyUDy9SMZcICQLLtPrm63uk9fdNSXAseR43aFAC5pwkrrOGLCzbVtI+PMTbCgwmU4BuFK4vrd65HrlC0X744YJW/QNv5pOlXSwM7UrFamtlnF9cCcQssyq62qXbeas4DMiDIVIgOPCYmZbBuOZddMq25arYndcp2m67TKjVb92Sg9AhfKtzIpW8YW1Fq0jbmUqYvQarUqryrlhIfIsSwbPV2PfDKHGBudy01GeSDe2dqTcgAEooiUSRKjS3RgcxkI16chwzLjsI0VfBXLQlYLKZtA0PCHUZyFwGOzJBf7mCWMEhzRd6zrcw1yngSlbhQmnMp5/GUStqUdm7AmJrGr7IeBDqGd6egAIRfYFHNsb33dwww4MAKlh3uvbfw4r2v50QnHTMwSHotD8b/hAbaEKEkhMMUurS208x2eqFTnEojrMRJlgi5hrIc1xQTEtptAzndVuuUwo+sRFWpA10KjQ/vwjsRNNQY0BCH/T4P2mrNx8oijDDoXOGBswl5u6Q0fVVZhlrzL5jPq1y6a7RzAvnGuKFq7EY+GshiizYnualhdOv3xX3f9x8YDpU/PMOqNR/cyrSV1X1wvGsvfvWU9G3k/R5UBzBbRGgk0/rXO3hrPhHljmdLH+IFjcY15iu/Q0+hvdLX4OYQXcuF1f40aS2uE5e/b2XsoaS2BYfy28NPBXeP1Ss4fw/6ELPrOSxpyrxveydtw0vPjOZ/H/kxcrabvF4PnRbqIpxcvpF2ks4f/ULe78342XQCRO1GPgTcoXakuYfk9mWkNDcxZbuqmmnyEBCaNjj6lucPNFN3RwFU93Mh20+71mk633u/XmgOrMrRqlcqw1bKvrG7vqlvbkcwGxRHEfsJmVMfSlLsZm+8BktgVwALg5jLJFNMJ4xuPAyxxyWP36hIkTMAkUfRsh2klyN5Xb00xZ6zZcGBRJ9NGa2WUxom8YTe8O5PADzjZcQ44+R4ITSlo4tZzLdRgC6lq8YqXmYzs8hKXGWSK2rlmWdepNmtI0DiNQCNFcRJkEZTTeZpXBonN1zExEbn2fjjJb9uXeR3/25VA2QRUGwidSw9UG+HE42LvEjmdsG1NLHs/4Z37bhZQfbFUPSWnZIPk8NfHmOj5KGak2+8PfX+HujA+77Aqx+eT6BtI6LgaRaBgSffC7h5u9QQo0ujsevmK7fJrOVsus7x91WoFceUe6fogy0E+kEzR2tskeQGGCi/orDekAH4UvNAfQszknPkSS4jVuJVy8YylwQehlwZP3ZP1uRvJQUhVOglreUrXj9TCoxF/uxMRl2g7pb5Vn1XCg4+OnfC1F0flqXYGSVmoJf1+vH0xFyRRbqlivoTvOz/l4FTwQ2VR5AKLVAM1zSR8/aekKa1tYEKSjElvYOSKfZrNccq3FNwPo09uciYvVjv677udSfMRIKAWQkFz//qFdvUVYOEeVW+DfsHW1e/Y+hBd55P6s2avTscz3vkD</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A6CC48D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A6CC48D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bb96fc41-2093-4734-aaeb-331d8f527d02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00008_PERM_UVTC_UserName_Valid_Role_Coord_CS_with_TokenType_ValidateEmail_200_OK_P1" searchProperties="true" id="f1273890-f613-45e6-8673-5398a7215fd9"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="eb654ba0-00a7-4752-a1b6-2b99c82841d4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
tP.setPropertyValue("audience","");</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="05bfc691-f856-460c-92ca-ef27c30969b8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node SPL CS" id="c937455b-6e5d-44da-be89-d8e276d53f7a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCoordCS"));
tP.setPropertyValue("audience","");</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full COORD_CS" id="f185ce26-8c22-4130-9939-12d6b4993836">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

tC.setPropertyValue("UserName",tC.getPropertyValue("UserName1"));

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;


tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID1",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="939f4d83-483b-4854-9747-c2b52a56993e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>coord:cs</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>181BB82A6D1B8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:181BB82A6D1B8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>uvtc_firstuser_201502_20150610_010144</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>181BB82A6D1C8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A6D1C8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:181BB82A6D1C8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A6D1C8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_010144</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_c1a14cca-c2a1-4509-9001-10f412851a9d</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_c1a14cca-c2a1-4509-9001-10f412851a9d</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtc7I6EP0rDv3o8CqoMNUZrbbXvmiraF++3IkhavpAUBIQ++tvgkrFWq/3fmKybHbP7p6c5JqCwDecFqUoYjgkpTTwCXUya0OKI+KEgGLqEBAg6jDojFpPj46haA7Yb5FKvU5D+hvqQDchBDI0gC6blmbLtqbpsq7NTN2oWzqwPe5KaYx6hDJAWEMyNN2Staqs2a5uO0bdqdhKtWZ/SKUJiiiPzV0UTdqBSmlDWjC2dFR1vV4r64oSRnPV4EnUt6fHEVygAEjN621FWaKoufOHiocg8n2owDBQr9WCz7VHnRGeE8DiCO1yeb/l0lTNVrmPR/H8Ssr3Iq9HZmG2vAEkJBgCH38B0Z8nxBahV2r58zDCbBH8WoSuicAySqEMdZNcSWoR2oWBCggjCmS6APou1hDNUIQIRKXxsNeQri6bWrbVjQChszAKaHH53/AgkiA/XCJPpvuydtAuD3iiU81rBJ0egX5McYL6gqxLABHdTRPBy0OVniM0w+kjppygKRXo1EN4R8ttNzp4jij7PwM6GM42yAT4MWr6LisD973Nki/r0a1tXtvue2U1utcmvUYG4NA5M+Sj3S6PSJmTaLtjAkDt7uNLvet2n5/bf723zCmGcaS9vzFkte8HSfoSuelDPbxvd/u1l9dB+tEzJq2Hl2nynoTLr3XwMvwc11zXurvTn5Z3KS1bBuu2++V+f9LDDxgPLeu14/q3q3G1rNlBuWU8JON5P376ZCQYo8dxWR32w8FwlnTTuUlbtm1oz8FGs/zpS63s9gd/8O3X28PEbOTlHOAv2vZnfhRPPxFk+6WgQa9TuuVTAuy8mAkL9uRZ5uoshfhQhgiTmmKX0A4n5nKHPYfPcLvW63q7XTda1Y5+U+9ola5mVSpd29ZvtVb7tmXtRWaL4gjiTUhmWOQSkrulzXmAMHAoIh6K5CSMudJR6UzEDmCg1CNDfghCQpEbcnk2p8GsUk/sahLUdYPqVXuzqpg0WUmlfsgGZBC1ZgxFBU02jIImDxHES4yEcAteU05syngvViCJma8rCVAIirm0R0JlHcOsWyrFwdJHAqkahF7sI2W5WGadUen2a8gA0swKwzDyHLg9cr8Wd/xv3wfu42HhQEVBbcRniU7cMMa+mh9VV0/eRPvwrdjD4nTxprIIwy2S4q9vrgiS5ETZl7XHnbsfGwqh1eOq8mxegmFO+fzi5nrOFaC5H8wK6MpKiZMkzmZhmhU14uFV0Q9VM9QR4scds40b/kFEzaOoF10IOfCj5Lm9CDFmCzJigKGAc6eULS94AYwQFS+AHid9eunzopCSt46hlJ2y3fj89SIQn33gQAcKP25+5p81n+L3xE7EOsjD6+QPAIbJXKzEZbA5Rw7MZSyMDoOfCnAqedGYNznHwjihpjFDv/8pCX1qSADCMCas15Eyw6FmZjjZZomcb6cfYTJZzt9p+N8fajLOKAARf91RnMUX160jjgCZH+juLukv0ts+J71FdM0f5p+Wgz4dc7z5Dw==</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtc7I6EP0rDv3o8CqoMNUZrbbXvmiraF++3IkhavpAUBIQ++tvgkrFWq/3fmKybHbP7p6c5JqCwDecFqUoYjgkpTTwCXUya0OKI+KEgGLqEBAg6jDojFpPj46haA7Yb5FKvU5D+hvqQDchBDI0gC6blmbLtqbpsq7NTN2oWzqwPe5KaYx6hDJAWEMyNN2Staqs2a5uO0bdqdhKtWZ/SKUJiiiPzV0UTdqBSmlDWjC2dFR1vV4r64oSRnPV4EnUt6fHEVygAEjN621FWaKoufOHiocg8n2owDBQr9WCz7VHnRGeE8DiCO1yeb/l0lTNVrmPR/H8Ssr3Iq9HZmG2vAEkJBgCH38B0Z8nxBahV2r58zDCbBH8WoSuicAySqEMdZNcSWoR2oWBCggjCmS6APou1hDNUIQIRKXxsNeQri6bWrbVjQChszAKaHH53/AgkiA/XCJPpvuydtAuD3iiU81rBJ0egX5McYL6gqxLABHdTRPBy0OVniM0w+kjppygKRXo1EN4R8ttNzp4jij7PwM6GM42yAT4MWr6LisD973Nki/r0a1tXtvue2U1utcmvUYG4NA5M+Sj3S6PSJmTaLtjAkDt7uNLvet2n5/bf723zCmGcaS9vzFkte8HSfoSuelDPbxvd/u1l9dB+tEzJq2Hl2nynoTLr3XwMvwc11zXurvTn5Z3KS1bBuu2++V+f9LDDxgPLeu14/q3q3G1rNlBuWU8JON5P376ZCQYo8dxWR32w8FwlnTTuUlbtm1oz8FGs/zpS63s9gd/8O3X28PEbOTlHOAv2vZnfhRPPxFk+6WgQa9TuuVTAuy8mAkL9uRZ5uoshfhQhgiTmmKX0A4n5nKHPYfPcLvW63q7XTda1Y5+U+9ola5mVSpd29ZvtVb7tmXtRWaL4gjiTUhmWOQSkrulzXmAMHAoIh6K5CSMudJR6UzEDmCg1CNDfghCQpEbcnk2p8GsUk/sahLUdYPqVXuzqpg0WUmlfsgGZBC1ZgxFBU02jIImDxHES4yEcAteU05syngvViCJma8rCVAIirm0R0JlHcOsWyrFwdJHAqkahF7sI2W5WGadUen2a8gA0swKwzDyHLg9cr8Wd/xv3wfu42HhQEVBbcRniU7cMMa+mh9VV0/eRPvwrdjD4nTxprIIwy2S4q9vrgiS5ETZl7XHnbsfGwqh1eOq8mxegmFO+fzi5nrOFaC5H8wK6MpKiZMkzmZhmhU14uFV0Q9VM9QR4scds40b/kFEzaOoF10IOfCj5Lm9CDFmCzJigKGAc6eULS94AYwQFS+AHid9eunzopCSt46hlJ2y3fj89SIQn33gQAcKP25+5p81n+L3xE7EOsjD6+QPAIbJXKzEZbA5Rw7MZSyMDoOfCnAqedGYNznHwjihpjFDv/8pCX1qSADCMCas15Eyw6FmZjjZZomcb6cfYTJZzt9p+N8fajLOKAARf91RnMUX160jjgCZH+juLukv0ts+J71FdM0f5p+Wgz4dc7z5Dw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A6D1B8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A6D1B8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00009_PERM_UVTC_UserName_Valid_Role_Portal_CS_with_TokenType_ValidateEmail_200_OK_P1" searchProperties="true" id="056fc933-f6d7-47ae-92de-6d028c0f586b"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="ff31723d-5d4b-42d0-9906-9e6269634f2c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportal"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdportalCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="f813e871-76e1-4a2e-80ed-984e1da29bbf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Portal_CS" id="3b4428ed-dd0e-464e-b802-86c990409877"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportalCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="96437726-71d2-4e4e-a8f6-246926e15ed9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A6D698D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A6D698D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_010153</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8uwiAtWkqpBUFFREfebt3AYFmWTAQF//Tdo9CQ5yfnyvjfiND3dTy/0PPOMdc9lOwBjFMVO4Jdl8aXyT2tf52iGQzWGYxo18ndf4yHdrhmMSdfpVoul2+1KWcY4QbKPY92PXyoszdRrNF9juQXd7NS5Tp154tvsrlJeoQgT00Tlia6UM8/1cefq9qWSRH4n0LGDO77uIdyJYUcDyrhDNDv6HVPl9fmG8uowerXjOOxQFHwyEESuC59g4FHP1AedZwN3NMfy9TiJ0JtPA79U3vamafqU1p+CyKJYmqYpmqeIjoEd61fltXTfjAzZN4Pbuqv7ge9A3XUuegFKQbEdGGXgWkHkxLb3jWmGYujCdA1lsAYZzv9VoX47uKL7oaUPICOs17CtM3djc2SiCPkQlZdz+aXy62cVvO1dRLqPzSDy8Kf1v4OE/DNygxAZNXyP7I7u5xa/SNfrM4Id2Ydugp0zmhRtEuoQ4fIsQqaTjR1Mms/A5Wv5yxm+dxiC/6Ykz9R7nAQ29UVmRMdCOP4v9Xpfq5uVle4m6HUzPlwaE+cgjU+Y2Rr8pBo115Oj7uy5lyuE98o3UI9Sv60/N+qjr942HZleSsWimwJzdHB68zyri0dN6obKapwIdDvptsXWpM8kk8gEozWXq/OGy8ATbmx5VXDH0pT16KV47IZ5WBoAU4EXvj+n8myyjdbbndxvyCjW3PWB0vjpirY3Ckf7khfO2LnZaDXOGmsyc7Bg3MOAcVQapOlhI2gD3i7RuZ9I3cFOC1tr2WnaWay+/I7pfQxFXCOUX4Ms/m8aNC/qsf5YdItJYZLPM0aviix3q2K3C1DXAqksAEsWxhcwEazjyT46fT6lBaAue0AEuTIHqWhtxZWqjqTUWK3c3Uru9QRlzqUDsBVL5IUoZStxtxnS+noXbtkevdMEwdjMg319GBqDYzqw4URZKOlkIefKQcomC4leX2VWRtYX5aAw08WyXlofBF6ZS6mYXj2KUmpPdut5uF3yKbxIqgK4PmCWUtdWBgtvxcD63IakNxRwvMoFW+muVkomLcCsJFiTFYlt0e3tQugZ4d5z7XfGB8T4wuiv8n3fTXYX6aB0pX5XO/U1eV8XVWkI5tvlfr066uveuQQHE7C/e3Qajr4JUmvXTkV1OxwFO9k+wwlQJUFQAUkXDRS5PwRBXwAKB5zs0j0IzaBrkEYbsrhU5d1+c5M7pw3W+7SrM+02sx2vm7NTU5T86m6U7A+2Ym960+pIM85LPuYvW3yunpu6w8AsNNWNNIhHmTlQtdJ+JmYbOKga1pByL3wvUlpDEF1y21WsebxuTnG+d0xzLWymnNsyXaU+D03XDHNcXQTqMaKbAqqz1DY/j+ISsBQBgP5heRBURWgXSTXkVN0qgg56UpyAy4GNR+zqNBycXbitgyAbraeH41thDDGVBCpVJdJWUqktAqMowkBbSr0DWAqWFQmW1BNUKAJ1K4/SLcnXckCUP+exd82jJQlAqu9Akx+U6kuaj6exxnEg94Wl3+Nt5ZStjaZHt05IGmuTkEsVPDH93To4Kp4TLaNEW45Gk3G2XyT944HMKpPWRuf6riSdjyFwJqOFfRQDUZ+F220cVn0YwVgOPUXOLtMdPrSdvUcPqw1GmNEibLFLb58u+7q0G0WWxowGc39Wb/ElnJj5wKse2um6utCaYcvo+qaY59QuWtEBCHr8vHEyMpY92st03EzNITjudXaSubyQ89Jot4DpXB2tNa/aKDXO47FHXxYUNwmnqdZPOUlVq3VDWAwWOIycbdK2smjqG+xWj5vnHb1qOqF75NnkuODC+srySLFmZyNsKbOSym3gzrNaIRxSc+oMpJY5lvv5/qJfQm8KbwP083R4CG/zg3o/WT6Mnjvp0Ei3Ihjfl8UBJIvlHjkV9PjvBKaQOEbNvKp2woIF4Rj5ceW12FWQl05CKI5jdMiRcVtLHM0zNMOz9UavBwRJosnR3aMB3eB5mizuLOeG4hPEbuCbTuGr4HG3U+rvAKHXwcg3UFQ7Bwm0Ea78xWKRr7Lsz8nxG/gYLQLCE0GzBYBEAAOm2Wt0eUlkJZpviwLLC82eKFbKkyCe+tMImDGKPnJE/gNHnCPohA4qiGRxmmJynOKYpOSkn5PYZZ7O+pOPEkI1o4LtdViu3aCw44UuKgBTXmAkLnoK7fCaIArfnmxNh/gqLbIL8fWg/zbCz+/uySA6hlMo4CIcAZGCoi/4LnuP5ZuYG5948d08SAynOM9JZuPIgTckH1/9bpiiUx7dcv2B+A77of1Z8MEy9TmohzPj7MBH2z9uBIRQEsrxeq/KSX86PSXnc3KtQ6ugUxExTzEU3aI0BBPCifJFcEQ+9TBB/YiOPlB/8vyQf8SXxLavxeST9kjXlK/LH9xFNISLu4hMuj776UXng0uStxhl8VeyrkuuLAXiv95qYAcWekQ8I480iIzf5frC1js/JM5ihjm+VawK8pl/0xgwIGYdMseC6L3xrwx85fyj8JHkB5aYdNM+idH3b8rFgHqp6BAGiR/LxSAggvdD84ozzkPU+a30h5kr/Xvj8xn+ls9vlLFGxpenVx66zv9XrjnXdoGI7MLOFctLJSNXU+Lct94N6TeAX89prvu3Of0xktc/xH9K3uX08/fw+j8=</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdU+o6FP0rTH08U9KWD2lHmKkg91ZFUdSrvtyJaQrBNilJWsBff5ICFRC9nPvUye7O2mt/ZCVnAiax4/lCYC4Jo5VFElPhFda2kXHqMSiI8ChMsPAk8kb+4NpzqpYHN1uMStBrG/82XHwa1ms1s3UaNcy660DzLWoi0z6F9fqpAy03CpWrEBkOqJCQyrbhWHbDtJqm5T7Yrue0vHqj2mw2X43KE+ZCYSuXqmWsSS1E25hImXoAzOfz6rxWZXwMHMuywfPgeoQmOIFG52yVURGId9b+qBpihOMYVRFLwBnY8TkLhTciYwplxvE6VvhdLAtYLlA+oSDjE6Pci8OARqxYdiFllCAYkw+o6zPAcsLCih+PGSdyknybhG1pYBMvkInsOj0xwC61I4F2GHIBTTGB9hrrHkeYY4pw5fE+aBsnx3Wt2PrAIRUR44nYXf4ZH0xzHLMUh6bYpLWmdjzggUp1zjDyAoriTJAc3+hhTSHCYt1NjI6Hqgw5jsjimgg1oAuh2YFtenvLVTV6ZIyF/D8N2mrOCuQJxhnuPP0T83sX8NeaXHavu6PGZXOQvJDe1fNLuyCw7VwYytaulntDWQ7RasfiqnU5SGvTW3o3v/NZUnezl/dhdFETsNt3Lt/C4a3z9rK4CYa965Q2upenT/l0CgL413DS8/O3q+UTJvXp5fjuozGax33c78Y34N2OrVkcnOet+RVoPcrs70dyN1q8R/5F3nrg1mMul03nPHJv4LP7OvUfB+gh6GXTJQ4lu/u4/QWGJEttRH/1W4H/nixewfiiXaazxX/Xtjnzo+xtipHcLPUYBL1KX3UJyp/FTFtIaEaFq5dq8RESU2l09C6tHV6m5I6Enurham237PPzluM3e0231bNqF1ajVrtwXbtv+ed9v7ERmRWLPYpdRiOiY2nJXY3NzwRR4glMQ8zNnGVK6YTxA2IPSlgJ6L06BIwK/MCUPE9Z+pFGs5BPZ5aNls5HNp7H1OIzo3LD5C295X4kMd/RZMfZ0eR7jEhKsBZuPddCDbaQqhYzmGcytqs5rFKcKWnnWmU9p95qAEGSNMaaKUhYmMW4mk7SojJArL6OCZEorESglHEJ4+JAgG/T2/+3qYTyCYl2EDqlc6y6iQ/cMbVNPl/ybh68izbwfhYSfb5UWSUnaMVk99fntOgxKUelTAwJe8O93PKHEAcAwA/8wH5pynhhTraiby5zdS0oIels+juDdnVWzfI8K1par9cAV/BAFxVYDhhhlCmpWz6wd0xBiQKOuldK4nvBS/suxUxO6EhCiRM1gpViecRDYoSFfkgE6uwsjn2l7IRUpZN4IQ/ZurF6BGnGP76TkIe0nzIP1WfO+Gfih7C24qg81TtCEjrWK32nLL8ZD8QULFFqyPg2+CGAQ8F3jWWRSy5SDdRbJvH3fypa5toGRIhlVAY9ozBsS2/BUy5T7H06fYEp1L187pH/fu+ZpBgBhNUjUZACX9/anj4CdLwl3+ug3yh46ycF32XX+WL+atmq0/6Md34D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A6D688D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A6D688D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>94425ff6-2b60-4326-ada1-54c3cdb51a67</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00010_PERM_UVTC_UserName_Valid_Role_Retailer_CS_with_TokenType_ValidateEmail_200_OK_P1" searchProperties="true" id="48d95818-ad35-4d49-b157-02cf186b7260"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="8e7601d5-00ca-48a5-bbfb-ecab736be6e2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="ea3c2d3c-1e2e-4d4f-8258-1340963cb169"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="412b6c6d-d45d-4ff8-a5a9-eb010b6b2ff3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="d9b9c234-a9dd-479c-831c-dd600390e139"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A6D988D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A6D988D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_010159</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8uwiAtWkqpBUFFREfebt3AYFmWTAQF//Tdo9CQ5yfnyvjfiND3dTy/0PPOMdc9lOwBjFMVO4Jdl8aXyT2tf52iGQzWGYxo18ndf4yHdrhmMSdfpVoul2+1KWcY4QbKPY92PXyoszdRrNF9juQXd7NS5Tp154tvsrlJeoQgT00Tlia6UM8/1cefq9qWSRH4n0LGDO77uIdyJYUcDyrhDNDv6HVPl9fmG8uowerXjOOxQFHwyEESuC59g4FHP1AedZwN3NMfy9TiJ0JtPA79U3vamafqU1p+CyKJYmqYpmqeIjoEd61fltXTfjAzZN4Pbuqv7ge9A3XUuegFKQbEdGGXgWkHkxLb3jWmGYujCdA1lsAYZzv9VoX47uKL7oaUPICOs17CtM3djc2SiCPkQlZdz+aXy62cVvO1dRLqPzSDy8Kf1v4OE/DNygxAZNXyP7I7u5xa/SNfrM4Id2Ydugp0zmhRtEuoQ4fIsQqaTjR1Mms/A5Wv5yxm+dxiC/6Ykz9R7nAQ29UVmRMdCOP4v9Xpfq5uVle4m6HUzPlwaE+cgjU+Y2Rr8pBo115Oj7uy5lyuE98o3UI9Sv60/N+qjr942HZleSsWimwJzdHB68zyri0dN6obKapwIdDvptsXWpM8kk8gEozWXq/OGy8ATbmx5VXDH0pT16KV47IZ5WBoAU4EXvj+n8myyjdbbndxvyCjW3PWB0vjpirY3Ckf7khfO2LnZaDXOGmsyc7Bg3MOAcVQapOlhI2gD3i7RuZ9I3cFOC1tr2WnaWay+/I7pfQxFXCOUX4Ms/m8aNC/qsf5YdItJYZLPM0aviix3q2K3C1DXAqksAEsWxhcwEazjyT46fT6lBaAue0AEuTIHqWhtxZWqjqTUWK3c3Uru9QRlzqUDsBVL5IUoZStxtxnS+noXbtkevdMEwdjMg319GBqDYzqw4URZKOlkIefKQcomC4leX2VWRtYX5aAw08WyXlofBF6ZS6mYXj2KUmpPdut5uF3yKbxIqgK4PmCWUtdWBgtvxcD63IakNxRwvMoFW+muVkomLcCsJFiTFYlt0e3tQugZ4d5z7XfGB8T4wuiv8n3fTXYX6aB0pX5XO/U1eV8XVWkI5tvlfr066uveuQQHE7C/e3Qajr4JUmvXTkV1OxwFO9k+wwlQJUFQAUkXDRS5PwRBXwAKB5zs0j0IzaBrkEYbsrhU5d1+c5M7pw3W+7SrM+02sx2vm7NTU5T86m6U7A+2Ym960+pIM85LPuYvW3yunpu6w8AsNNWNNIhHmTlQtdJ+JmYbOKga1pByL3wvUlpDEF1y21WsebxuTnG+d0xzLWymnNsyXaU+D03XDHNcXQTqMaKbAqqz1DY/j+ISsBQBgP5heRBURWgXSTXkVN0qgg56UpyAy4GNR+zqNBycXbitgyAbraeH41thDDGVBCpVJdJWUqktAqMowkBbSr0DWAqWFQmW1BNUKAJ1K4/SLcnXckCUP+exd82jJQlAqu9Akx+U6kuaj6exxnEg94Wl3+Nt5ZStjaZHt05IGmuTkEsVPDH93To4Kp4TLaNEW45Gk3G2XyT944HMKpPWRuf6riSdjyFwJqOFfRQDUZ+F220cVn0YwVgOPUXOLtMdPrSdvUcPqw1GmNEibLFLb58u+7q0G0WWxowGc39Wb/ElnJj5wKse2um6utCaYcvo+qaY59QuWtEBCHr8vHEyMpY92st03EzNITjudXaSubyQ89Jot4DpXB2tNa/aKDXO47FHXxYUNwmnqdZPOUlVq3VDWAwWOIycbdK2smjqG+xWj5vnHb1qOqF75NnkuODC+srySLFmZyNsKbOSym3gzrNaIRxSc+oMpJY5lvv5/qJfQm8KbwP083R4CG/zg3o/WT6Mnjvp0Ei3Ihjfl8UBJIvlHjkV9PjvBKaQOEbNvKp2woIF4Rj5ceW12FWQl05CKI5jdMiRcVtLHM0zNMOz9UavBwRJosnR3aMB3eB5mizuLOeG4hPEbuCbTuGr4HG3U+rvAKHXwcg3UFQ7Bwm0Ea78xWKRr7Lsz8nxG/gYLQLCE0GzBYBEAAOm2Wt0eUlkJZpviwLLC82eKFbKkyCe+tMImDGKPnJE/gNHnCPohA4qiGRxmmJynOKYpOSkn5PYZZ7O+pOPEkI1o4LtdViu3aCw44UuKgBTXmAkLnoK7fCaIArfnmxNh/gqLbIL8fWg/zbCz+/uySA6hlMo4CIcAZGCoi/4LnuP5ZuYG5948d08SAynOM9JZuPIgTckH1/9bpiiUx7dcv2B+A77of1Z8MEy9TmohzPj7MBH2z9uBIRQEsrxeq/KSX86PSXnc3KtQ6ugUxExTzEU3aI0BBPCifJFcEQ+9TBB/YiOPlB/8vyQf8SXxLavxeST9kjXlK/LH9xFNISLu4hMuj776UXng0uStxhl8VeyrkuuLAXiv95qYAcWekQ8I480iIzf5frC1js/JM5ihjm+VawK8pl/0xgwIGYdMseC6L3xrwx85fyj8JHkB5aYdNM+idH3b8rFgHqp6BAGiR/LxSAggvdD84ozzkPU+a30h5kr/Xvj8xn+ls9vlLFGxpenVx66zv9XrjnXdoGI7MLOFctLJSNXU+Lct94N6TeAX89prvu3Of0xktc/xH9K3uX08/fw+j8=</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZZb+o6EP4rKH2sQhaWkqgg0VKknNP2cFi6vVSOM4BpYqexE6C//toBUqDA5d6naCbjmW8Wf55rjqLQdtucQyIIo6VFFFLu5tqmlibUZYgT7lIUAXcFdgfth3vXLpsu2hzRSl6nqb2jasO88mtVve5f1fQqvrJ05PumbluBeYWtsWP7FWnKeQoe5QJR0dRs06rpZl03naHluHbDrVllx7betNITJFz6liZlU1uDWvCmNhUidg1jPp+X55UySyaGbZqW8fJwP8BTiJDWul5llAdKWmt7XA4AQxjiMmaRcW3s2FwH3B2QCUUiTWAdKzgWyzRMx5A2ASeTC604C4FHxywXbxFllGAUki+k6vMAYsqCUjucsISIaXQ0CctUjnVYYB1bVXqhGbvQznS0gzDhSOdTZK199WEMCVAMpVHfa2oX53UtPzpMEOVjlkR8V/xveIBmELIYAp1v0lpDO9/hgUq1rgG7HsVhykkGj2pYY4SBr7sJ+HxXpV4CY7K4J1wO6IIrdMY2vD1xVY0OmQAX/6dBW81ZOXlCYQqtUYYqz786H+TR8EM0nIeDXtyZmA+XH6yZA9g2zhVFa1fi3lAWQ7Q6EWbZ8jK8G40Sv+193ddvM6vCY7v/dvP52e/PBm/96fLy78tzHzOn5oPxhkZ120+mg8tG/RG/9p67EUw7Vv8v9i/jWkOk9aTnhyPOv0Tl5Y0yL0Mfd/DaoL/sencYft3biwebsXq3W4MYR3M8Nr129jviHp85v4OqP5515nZvHj81wHlchEuP8V6FfFwNXptFOlv4d3WbOz9I/RlgsRHVGHidUld2CYnTZKY0JNDHuakbK/LhAqjQWuqU4g43lXRHAlf2cCVbDevmpmG36x2n0eiYlTuzVqncOY7VNds33XZtQzIrFHsQbxkdExVLUe5qbE4DxJHLgQaQ6BlLJdNx7YTHDhKo5NG+vASMchgySc+WVTep40TLyJ5xy0Szr2X4OZsmwVIrPTLxh/5J2mMByQ4p2/YOKfcBk5iAYm412FxONheyGJ8oS0VolTNUppBKbk8Uzbp2tVEzOIniEBRUI2JBGkI5nsZ5aQy++to6wjzX9u+G+XU7mtj+v00NpE1AlAFXudyA7CMceF2qm0QOJ2yZQ9PaTnjjvp0GRN0sWVCRELxCsvvre07UgBRDIjN6vx28WxvchfnZx3+eNE6AMvbrUQQKMrIVdvN2y1dA8kZr081PZJU/y2mWpXkDq9WKkUj3hqqQYdrGAHAqmW05ZB9AjcKLcdYzUgDfC17odyGmYkoHAgmI5MCVcvGMvWEAXO0Nnrwqi3OXkp2QsnQCFuKQ7jaUO49CfHItwi5WdlLdk585S4Lvjh3wtRVH5inXBkHoREnqCVkemQvMpFsiyY8l284POTgUfFdZFLnAIuRA+amA439KitWaGsKYpVR4HS1XbDNtjlMsY3C/jX64ycm82O7Iv693OslHAIPcCTnJ/atH2lVXgE622Hod9AhhX50i7F10rR/qn5qtOu3PeOsf</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A6D978D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A6D978D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>930885f3-a4db-4c89-a0c5-4b5518f49e63</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00011_PERM_UVTC_UserName_Valid_Role_Dynamic_LASP_CS_with_TokenType_ValidateEmail_200_OK_P1" searchProperties="true" id="3f5b490e-2758-49ca-918e-c081ed130a07"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="c0131065-2fe8-40a8-8b95-01bb3c39c817"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdDLASPCS"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="3af05dc4-95ff-49d8-a6f6-dcc64b8fa182"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DLASP_CS" id="4ac9fe41-a25b-4d82-a83b-825421911da5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDLASPCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="011dfa3c-507e-49cd-b3c8-b98a9833b941"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A6DF38D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A6DF38D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_01026</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_3119dccf-a8e4-4883-a062-c74167c3f273</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_3119dccf-a8e4-4883-a062-c74167c3f273</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+o6EP4rTM9Hp/SFirQjzACVIwqiFr3KFyemacmxTSBJAf31JylQKaKXez91drvZffYlT/acgzSxvTbniAlMSWWVJoR7ubapZYx4FHDMPQJSxD0BvaA9HHh21fTA9ohW6ftN7aVmWW4IYaSDBnJ0p9Go6cCs2zo8c6z6GaxF9llNmnKeoT7hAhDR1GzTOtXNum46Y7Pmma536lYb9fpEqzwixqVvaVI1tQ2oFW9qUyFmnmEsl8vqslalLDZs07SMp+EggFOUAq11vs4oD8RaG3tYDRFESQKrkKbGuVGyOQ+5F+CYAJExtIkVfhfLNEzXkDYhx/EvrTiLwj6JaC52AaEEQ5DgD6DqM0RiSsNKO4kpw2KafpuEZSrHOlpBHVoO+aUZZWhHOiohZBzofAqsja97FCGGCESVh/t+U/t1XNfyo2MGCI8oS3lZ/G94EFmghM5QqPNtWhtoxzs8UKnWOYJen8Ak43iBbtSwzgBEfNNNBI93VbllKMKrAeZyQFdcoTN24e2J62r4OEZc/J8G7TRn7eQRJBlqxfO7Tjb0H+lt4/Fu4vxD52ZKVun70+NbMwewa5writauxb2hLIZofaL9dm2M+fjp9+/hVdx2H2x3MK13VzgMJqub3nzi02XcG2bx8LILosHp87xPe0/ByKeX7+nHDF3NMAuuonfzsjENhn5mT66TOs74iX9xynptxwRXHafjJ2P7/nXk3L35lxHFk7hx2aldTP6Mxs5iYHU+zsITknWHd6vh8/PVSFzZHyaf1SfP7mI0ur62s4eTCAzazSKdHfxl3fbOB9nrHwTFVlRj0PcrPdklIH4mM6XBoR7lpt5MkQ8XiAitpU4p7vAySXc49GQP1/KFY7qWabl2rW732p2LC9MxrZ7ZNk9d15TClmTWKPYgdimJsIqlKHc9Nj8DhKnHEQkR0xc0k0zHtR88+kCASp/cy0tACUdjKunZihNQmzYYdmFsW8vXj3i6tGqMzplWuaFiREasHQnEyqRcL5HyPYJ4hpFibjXYXE42F7IYc7DIRGJVF6BKUCa5nSma9WyncWpwnM4SpKAaKQ2zBFVn01leGoOvv7YOIM+1/qAd3L50g5f8Rhjf5rf/b1sKaRNiZcBVSh0k24kOPDLONp/v83Z38966b2chVhdM1lUwDNdIyr8+x0XNSTErn4ltkRcH9hUl58Z+XkW8cIFhMffF6y1JXdJAa9ucObCq82q2WGR5PxynZjDp3lCZGqZtBAhmkqjex/QNEaPwYhz1KhTA94IX+jLETExJIIBAqZyfSi4esQYEiKs1oC8nf3XsjlEKKUsn0Eoc0nUTucIoxD9uOdCDyk6qb+VnSVn42bEDvnbiyDzlFiAwiZWkXoT3b8YDUukWSy6jbNf5IQeHgpeVRZELLEIO1Gsm0Pd/KoqkmhqAkGZE9H0tV+wSZ45TvM+Q92n0xU3OzcWyhv99W9NxPgIQyRWP49y/enM9dQVIvEO+m6CH+dfp/cS/ZXStL+qvmp067c946y8=</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0Vynm8ZbywjHEFqgiEGWdCFiDJJC8pITW2gpHBkljy9SMZcICQXO59cqndOn160ZHOOZrErt/kHFJBE1ZYTmLG/cxaN2TK/ARxyn2GJsB9gf1+s3vtu0XbR9stRiFo141XVLVJrQpgIuSUzDIZeuawUiam7eKKjau1H6iKlCvnEgLGBWKibri2UzHtqmnXBk7Ndz2/4hVLrvNiFB4h5QpbuRRtY0NqyetGJMTUt6zFYlFclIpJGlqubTvWn+51H0cwQUbjfJ1RFihtbPxxkQCGOMZFnEysc2vP55xwv09DhoRMYROLfBXLtuyapXwIp+GZke8FErBRki1biCWMYhTTd6Tr0wURJaTQjMMkpSKafJmEY2tgE5bYxE6ZnRnWPrUTgfYYphyZPELOBqsHI0iBYSg89IK6cXZa17KtgxQxPkrSCd9f/jc+wOYQJ1MgJt+mtaF2OuCRSjXOAfsBw7HkdA43elinCAPfdBPw6VCFuxRGdHlNuRrQJdfsrF16B8t1Ndo0BC7+T4N2mrMGeUSxhMbLSyfqXgf9+d38Zf7cif8sZeu29+YlraCeEdh1zgx5a9fLg6HMh2i942pKAuc2mC7weHB38Sv6ufol6NPd+Gl1Ew5+XP2DH4eu41ZlWL1PH37PZHA1E8sxdN8er/HT7xG5fw7JLE4W+Hl1H963+uWmh7yxLPNpxyJhO360RrWuDFZXw+fZ1dPi5a2GgktS5nj4fFWNBg+TSrTCkSj13Gj2XPPKqLWYVQYkRNLjvf6Ik/HPBWJv3YvxZT1PZ4f/vm175vty+AZYbJd6DIJ2oaO6hMT3YqYtlJijzNWfavHhApgwGnqX1g5fKrmjxFc9XK8dz7m48Nxmtd0peW27dGlXSqXLWs3p2M2LTrOyFZk1iwOKrYSNqI6lJXc9Nt8TxBOfAyOQmvNEKqXjxjeIbSRQIWA9dQgSxmGQKHkm3ls68thKYs92Zh6i7/byvbwKU6Nwk4hbdps2RwLSPU123T1N7gGmUwpauPVcczXYXKhazNBcitgpzlGRgVTSnmqV9d2yV7E4nUxj0EytSUJkDMVpNM0qY/H11zUR5pm1dznITtuXeR3+25ZA+RCqHbjO5QJUG+HI5VLeJnI8Ycce2M5uwlv4piRUHyxVT5FSvGay/+tjTPR85DPSvm72715b/VdnyzzfcBqAKsnnndY3tKzDiuSByJzuhN1e3uoaUMLR2PZzhpzirCjnc5m1sFwuWamCt3SNLNu1+oClkrbVIBkDs3IU66R7JCd+EDy371OUImJ9gQRM1MgVsuUJD4c+cP1wCNRZWZ76KtkLqUonYCmO2VqxevRoxt++i7CPtZ8y36nPIknJR8eOYO3EUXmqd4OgLNQrfYesvpgLnChYqtQvSXfBjwEcC75vzIuccxFqoIZSwNd/ClrW6gbCOJFMBG0jM+xKbcZTrKbgfzh9gsnUPH/e0X9/35k0GwEM6lHIaYavb2lfHwEW7sj1JugXiu1+p9j77BqfzJ8tO3U6nPHGXw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A6DF28D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A6DF28D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8uwiAtWkqpBUFFREfebt3AYFmWTAQF//Tdo9CQ5yfnyvjfiND3dTy/0PPOMdc9lOwBjFMVO4Jdl8aXyT2tf52iGQzWGYxo18ndf4yHdrhmMSdfpVoul2+1KWcY4QbKPY92PXyoszdRrNF9juQXd7NS5Tp154tvsrlJeoQgT00Tlia6UM8/1cefq9qWSRH4n0LGDO77uIdyJYUcDyrhDNDv6HVPl9fmG8uowerXjOOxQFHwyEESuC59g4FHP1AedZwN3NMfy9TiJ0JtPA79U3vamafqU1p+CyKJYmqYpmqeIjoEd61fltXTfjAzZN4Pbuqv7ge9A3XUuegFKQbEdGGXgWkHkxLb3jWmGYujCdA1lsAYZzv9VoX47uKL7oaUPICOs17CtM3djc2SiCPkQlZdz+aXy62cVvO1dRLqPzSDy8Kf1v4OE/DNygxAZNXyP7I7u5xa/SNfrM4Id2Ydugp0zmhRtEuoQ4fIsQqaTjR1Mms/A5Wv5yxm+dxiC/6Ykz9R7nAQ29UVmRMdCOP4v9Xpfq5uVle4m6HUzPlwaE+cgjU+Y2Rr8pBo115Oj7uy5lyuE98o3UI9Sv60/N+qjr942HZleSsWimwJzdHB68zyri0dN6obKapwIdDvptsXWpM8kk8gEozWXq/OGy8ATbmx5VXDH0pT16KV47IZ5WBoAU4EXvj+n8myyjdbbndxvyCjW3PWB0vjpirY3Ckf7khfO2LnZaDXOGmsyc7Bg3MOAcVQapOlhI2gD3i7RuZ9I3cFOC1tr2WnaWay+/I7pfQxFXCOUX4Ms/m8aNC/qsf5YdItJYZLPM0aviix3q2K3C1DXAqksAEsWxhcwEazjyT46fT6lBaAue0AEuTIHqWhtxZWqjqTUWK3c3Uru9QRlzqUDsBVL5IUoZStxtxnS+noXbtkevdMEwdjMg319GBqDYzqw4URZKOlkIefKQcomC4leX2VWRtYX5aAw08WyXlofBF6ZS6mYXj2KUmpPdut5uF3yKbxIqgK4PmCWUtdWBgtvxcD63IakNxRwvMoFW+muVkomLcCsJFiTFYlt0e3tQugZ4d5z7XfGB8T4wuiv8n3fTXYX6aB0pX5XO/U1eV8XVWkI5tvlfr066uveuQQHE7C/e3Qajr4JUmvXTkV1OxwFO9k+wwlQJUFQAUkXDRS5PwRBXwAKB5zs0j0IzaBrkEYbsrhU5d1+c5M7pw3W+7SrM+02sx2vm7NTU5T86m6U7A+2Ym960+pIM85LPuYvW3yunpu6w8AsNNWNNIhHmTlQtdJ+JmYbOKga1pByL3wvUlpDEF1y21WsebxuTnG+d0xzLWymnNsyXaU+D03XDHNcXQTqMaKbAqqz1DY/j+ISsBQBgP5heRBURWgXSTXkVN0qgg56UpyAy4GNR+zqNBycXbitgyAbraeH41thDDGVBCpVJdJWUqktAqMowkBbSr0DWAqWFQmW1BNUKAJ1K4/SLcnXckCUP+exd82jJQlAqu9Akx+U6kuaj6exxnEg94Wl3+Nt5ZStjaZHt05IGmuTkEsVPDH93To4Kp4TLaNEW45Gk3G2XyT944HMKpPWRuf6riSdjyFwJqOFfRQDUZ+F220cVn0YwVgOPUXOLtMdPrSdvUcPqw1GmNEibLFLb58u+7q0G0WWxowGc39Wb/ElnJj5wKse2um6utCaYcvo+qaY59QuWtEBCHr8vHEyMpY92st03EzNITjudXaSubyQ89Jot4DpXB2tNa/aKDXO47FHXxYUNwmnqdZPOUlVq3VDWAwWOIycbdK2smjqG+xWj5vnHb1qOqF75NnkuODC+srySLFmZyNsKbOSym3gzrNaIRxSc+oMpJY5lvv5/qJfQm8KbwP083R4CG/zg3o/WT6Mnjvp0Ei3Ihjfl8UBJIvlHjkV9PjvBKaQOEbNvKp2woIF4Rj5ceW12FWQl05CKI5jdMiRcVtLHM0zNMOz9UavBwRJosnR3aMB3eB5mizuLOeG4hPEbuCbTuGr4HG3U+rvAKHXwcg3UFQ7Bwm0Ea78xWKRr7Lsz8nxG/gYLQLCE0GzBYBEAAOm2Wt0eUlkJZpviwLLC82eKFbKkyCe+tMImDGKPnJE/gNHnCPohA4qiGRxmmJynOKYpOSkn5PYZZ7O+pOPEkI1o4LtdViu3aCw44UuKgBTXmAkLnoK7fCaIArfnmxNh/gqLbIL8fWg/zbCz+/uySA6hlMo4CIcAZGCoi/4LnuP5ZuYG5948d08SAynOM9JZuPIgTckH1/9bpiiUx7dcv2B+A77of1Z8MEy9TmohzPj7MBH2z9uBIRQEsrxeq/KSX86PSXnc3KtQ6ugUxExTzEU3aI0BBPCifJFcEQ+9TBB/YiOPlB/8vyQf8SXxLavxeST9kjXlK/LH9xFNISLu4hMuj776UXng0uStxhl8VeyrkuuLAXiv95qYAcWekQ8I480iIzf5frC1js/JM5ihjm+VawK8pl/0xgwIGYdMseC6L3xrwx85fyj8JHkB5aYdNM+idH3b8rFgHqp6BAGiR/LxSAggvdD84ozzkPU+a30h5kr/Xvj8xn+ls9vlLFGxpenVx66zv9XrjnXdoGI7MLOFctLJSNXU+Lct94N6TeAX89prvu3Of0xktc/xH9K3uX08/fw+j8=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b54ca523-aea1-45b1-9f0f-eec821a32f9c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>31d2392e-5053-43d4-b375-6fa36d10c41a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00012_PERM_UVTC_UserName_Valid_Role_Linked_LASP_CS_with_TokenType_ValidateEmail_200_OK_P1" searchProperties="true" id="91aab5a6-4382-4fbc-ab55-598adb589fd7"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="5a7b6ae3-dd2c-40a1-b77e-65f3193aa9a7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdLLASPCS"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="4306856c-2087-4116-823e-a56bee7f82cf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node LLASP_CS" id="065aa995-c771-4ede-8019-ae5cbb71a3ac"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdLLASPCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="e7216939-5e85-46ce-add8-85f3241540c3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A6E4E8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A6E4E8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_010212</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_bddda1c9-2918-41c4-8026-f35fe5611532</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_bddda1c9-2918-41c4-8026-f35fe5611532</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZrd7I4EP4rHt7PyEV0hVM9h7baurXaFu3tS08MAdNCwCSg9ddvgkrF2q67nzgzTGaeueTJnDEQR6bjMoYoxwmpreKIMKfQdpSMEicBDDOHgBgxh0PHc2+HjlnXHbA7otQGlx3lbeb7PjCgrZq20VYtA1pqWzdbatBoBqjZMoxmwxSmjGVoQBgHhHcUUzeaqt5SdWuiNxxDd0yzbpitV6X2iCgTvoVJXVe2oFaso8w5Tx1NWy6X9WWjntBQM3Xd0J5vhx6coxgo3bNNRkUg2t3aw7qPIIoiWIdJrJ1pFZsznzkeDgngGUXbWP5PsXRNtzVh4zMc/lHKs8gfkCApxAtAEoIhiPAayPrcIj5P/JobhQnFfB7/mIShS8cqWkEVGhb5o2hVaCc6qiCkDKhsDoytrwcUIIoIRLXpw6Cj/Dmta8XRCQWEBQmNWVX8b3gQyVGUpMhX2S6tLbTTHR6pVPcMQWdAYJQxnKORHNYUQMS23UTwdFe1O4oCvBpiJgZ0xSQ6bR/egbipxiUOEeP/p0F7zdk4eQRRhrqX6+nUm7Td8cd1vsDj9ey5Zfvvdjy8h50CwL5xoShbuxEPhrIcos2Jj5EVxrd5+Nl7iA1683q+zqKxcT3LR89Bj67dsDdtBRTcNqY8dtfnL0kI0OBqyokR3jW95uM0nXneX9G7bWT81eov4s/e1WNveXMf0nswWgcN4HppmtFr2o96Y/8GvsPR3VUUPgzBcILZ0zSf4769TMFi/pJ4zQG5Bn9/MLoY3LC2FV6/vN4/uaj38jSb9DplOnv4q7rdnfey2TuCfCfKMRhc1vqiS4D/TmZSg301KEydVJIP44hwpStPSe5wMkF32HdEDzdyz9JtQzdss9Ey++55r6dbutHXXb1p27oQdiSzQXEA8SIhAZaxJOVuxuZ3gDB2GCI+omqeZILpmPKLx0vAQW1AHsQlSAhDk0TQM223QgvoCAYL28hjyAKyhul7O1Rqo4SPyZi6AUe0ysmtCic/IIhTjCRxy7lmYrAZF7VYgDzjkVHPQZ2gTFA7lSzrmFa7qTEcpxGSSLU48bMI1dN5WlRGY5uvqQLICu1w6Hp3bxfeW3EhtB/TO/y3q4Sw8bE0YDKlcyS6iY68McYun5/ztvfz3rl3Mx/L+yXKyimGGyTVX1/TIsekHJWvxHbIywOHiopz7TCvMp6fY1iOffl4C04XLNDdNWcBjPqinuV5VvTDshoaFe41mammm5qHYCZ46nOSfCCilV60kx6FEvhB8FJfhZjxOfE44CgW81MrxBO2AA8xuQUMxOCvTl0xKiFF6Tha8WO6i0hsMBLxr0sOdKC0E+o78Vkm1P/q2BFfe3FEnmIJ4JiEUpIPwucP4wET4RYLKkvovvNjDo4FryrLIpdYuBioWcbRz39qkqM6CoAwyQgfXCqFYp83C5z8M0XOl9E3NwU1l7sa/vdlTcXFCEAkNjyGC//yyXXkFSDhHvdugx6nX6v/G/1W0XW/qb9r9up0OOPdfwA=</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM45RuYmytQRYBM2EBCuCSBl5SQ26DElsGSDeTrRzLgAAGW3SeX2q3Tpy860g1Dvpe1a4xByElAMyvfo8xOrBUlCqkdIEaYTZEPzObY7tc6bTurGTbabVEyrUZFeXeQ5RYtI6eaRaeoWma+qKKcU1axUXBzZcCTgoOEK2MRtCjjiPKKkjXMvGoUVKM8MMt2tmwbllY0zbGSeYGQCWzhohnKltSKVZQZ53Nb15fLpbbMaUE41bOGYepvnXYfz8BHSvVmk1ESKKxu/bHmAAbPwxoOfP1GP/C5cZjdJ1OKeBTCNpZzLpahG2Vd+DiMTH8p6V5wWtQNkmUd0YASjDzyhWR9OsBngZOpedMgJHzmn03CNCSwCiusYtOivxT9kNqVQAcMQ4ZUNkPmFqsHLoRAMWSGvVZF+XVd15KtgxBR5gahzw6X/40P0Bi8YA6OynZpbaldD3iiUtUbwHaLYi9iJIZHOaxzhIFtuwn4eqhMNwSXrNqEiQFdMclO36d3tNxUo0GmwPj/adBeczYgL8iLoBq73u9FY+DQTrc9bvSGJF6N1iXkTlbDSkJg3zkxpK3dLI+GMh2izY773Ji5687y6fXDbIy6hfpnoTPnD6Nao/2Vr9HifZk+mPf6HTei0fKrffun1ZmUzWf0WP74ipvDr7GffeTo3ulBd9x5df23N2f6OmzlG+sHYNZDjDvPwxH/B+eel28F8vmAutbMWs6GOf670ESfHWLyuNur+62BXup9LOAJPw69kWf0Js0XGP8Zvq7jetApzmKvU0nT2eN/aNud+X40+QDMd0s5Bq1G5k50CfHLYiYtxFHdxNWeS/FhHChXqnKX1A47EnJHHFv0cLM2S+btbSlbKzStZqlh5JpGPpdrlsvmnVG7vavldyKzYXFEsR5Ql8hYUnI3Y3OZIPZtBtSBUI2DSCgdUy4gNhBHmRbtiUMQUAaDQMhztJihkvlhFos+nSxRoYTRhJaEIj8G/Ik+hTWXQ3igyNnsgSL3AJM5ASnbcqqZGGvGRSUWKI64Z2ox0ihEQthDqbF21irldUb8uQeSp+4HTuSBNp/Nk7robPPNqgizxNprDpKzdjar43+7Aggfh0gHJnO5BdFE+HG1lOz8LpHTCZvGwDD3E97B1yKHyGMlqslDgjdMDn99D4mcjnRC2u1av/te77+bO+bphusAREl+7tQv0NKPK5IGcmKyF3Z3dYtLQMhGddfPBTK1hRbFcZS00LJyeijgdVkj3cjqfcCRELb1IPgEqqco+lW3SEr8KHhqP6QY8Rntc8TBFyOXSZZXPBv6wOSzoSVOyuraN8lBSFE6Dit+ylb3xJNHMr74KsI2ln7C3BWfZRA63x07gbUXR+QpXg2c0KlcyRtkfWYucCBgidC+INwHPwVwKvihMS1yyoWLgZpEHM7/yUhRqygI4yCivNVQEsO+0CY8+XoO9rfTD5hEy9PHHfn3151KkhHAIJ6EjCT48o625RGg0z2x3gY9o9eNS3p9yK76w/zTslen4xmv/gU=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A6E4D8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A6E4D8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57925f3d-0445-48fc-849a-c3d2a5ba6773</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0b9bbf2d-1b36-4fc2-84c3-ff96750d36d4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00013_PERM_UVTC_UserName_InValid_Role_dsp_with_TokenType_ValidateEmail(Negative)_403_FORBIDDEN_P1" searchProperties="true" id="a35cb701-2a20-4100-9302-6bf82307808f"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="77f50281-ca59-41f8-bb92-e301c3e70f9a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdDSP"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="1955b08c-5e71-4c07-a1be-6af195b83a0f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DSP" id="423f3cbd-d404-4c9c-812d-3bb05191872a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDSP"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="de176f7c-96d4-4c4c-bc9d-7c9123edb674"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","API_NOT_AUTH");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>DSP</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A6EA98D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A6EA98D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_010219</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_ea49f78e-a074-4f9a-a7a1-e1347b00a58f</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_ea49f78e-a074-4f9a-a7a1-e1347b00a58f</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbkto4EP0VynncMpaNudg1UMW1ws5kQoAQMi8pIbeNElsmlmwMX7+SAQcYZpbdJ1e3W92nLzrqB46j0HK7nEMiaMwqeRQy7hbatpYmzI0xp9xlOALuCuLOup+eXKuKXHw6olXGg7b2A7Dt+M0W6Bg1bd32HazjJjZ1MGt2c4UQrrd8acp5CmPGBWairVnIrOuooSN7jmquidyaXa3XnBetsoCES9/SpIq0I6ict7W1EBvXMLbbbXVbq8ZJYFgImcby09OMrCHCWufhkFERKOkc7UnVAwJhSKokjowH48LmwePujAYMizSBYyzvrVjIQI4hbTxOgw9aeRa8MfPjQuxjFjNKcEj3WNXnE4h17FW6YRAnVKyjN5MwkXKsQ050Ytrsg2ZcQrvT0QXChGOdr7F59DUFHxJgBCpfp+O29uG+rhVH5wlm3I+TiF+K/w0PsAzCeAOezk9pHaHd7/BGpToPQNwxI2HKaQbPalg3mAA/dhPI/a4qkwR8mj9RLgc05wqdcQ7vSjxUY0AD4OL/NOisOQcnCxym0Pn299RJl3izSPd/Pe2fm601HUa09uvlZdguAJwbF4qytQfxaijLITqc+B58/+KQ4PlxZK/XywVYrM5wOMiidJ41rIk9fSL1/fzx41SYrNVt9vaTrRc3YLH3m49fR6uA7F82S2u0dAbL3u4jWLXmEzWD3TihvLXxiZguG8+1b0m/DrtJFn38vBBxvV/7/viFrB73U3iOczahi2H+M/+aWXbr711vt+rtfUB5v8lCf0t6jU1g2M0hH7fLdM7wX+pOd36Wrn4CESdRjcF4UBnJLmHxPpkpDfV0vzB1N4p8uAAmtI46pbjDTSXdUc+VPTzIQxs5JjIdq9awRt3ecIhsZI5QF9UdB0nhRDIHFFcQ+zHzqYqlKPcwNu8DJJHLgXmQ6FmcSqbj2jseB1jgyphN5SWIGYd5LOnZRGFeD7K0QRy0M9esxZwo/1kLV6lWeY7FZ/Y56foCkktSblyQ8hQI3VBQzK0Gm8vJ5kIW4zfOUhGa1QxXGaSS2xNFs65sbN3gNNqEoKAaUeylIVQ3601RGoMfvpaOCS+0g9mkuG5vJnb971QDaeNRZcBVLj2QfYQbr4t1SuTthJ3zhE/uu6lH1c2SBRUJJQckl7/+zIkakHJIpsP5j/7sh3nCXZrfd1wW5PVJ4x1QxnU9ykBeRs/Cnt5u+QpI3uicuvkbm9Xf1TTL0qKBtl0zEuneUBUykGXMgKSS2Xbz+Bcwo/Ri3PWMlMCvgpf6S4ipWLOZwAIiOXCVQrxjb5gBV3vDWF6V/N6l5CKkLJ2AXNzS9UO58yjE765FxCXKTqon8rONE+9Px274Oosj85Rrg6AsUJJ6QnZvzAWJpVsqyS9Ozp3fcnAr+KWyLHKJRciBWqUC3v5TUazW1jAhccrEeKAVinOmLXCK3QbcP0av3BRkXm539N/XO50WI0BA7oScFv7VI+2qK8CCM7Y+Br1N2PboPcK+RNd5pX6tOavT9Yx3/gE=</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0Vyvcx5ZXVrkAVBJKCkA244YaXKSE3oIktgSSz5OtHMuAAIRlmXqC63eo+veiorwWKIy+oCwFcEkZz6ziiIki1VSPhNGBIEBFQFIMIJA769Ydu4FlOgPZHjFy7WTX+8lHRR75TMQthMVQ/BTB91yubfohw6CLkVkolZSpEAm0qJKKyaniOWzSdkun4A9cPPD9wXatUzI+M3CtwoXwrE8sxdqDWomrMpJwHtr1araxV3mJ8anuO49p/Hrp9PIMYGbXrbUZpIF7b2WMrBAxRhC3MYvvaPrK5DkXQJ1OKZMJhFyv8LpZjO76tbEJBpr+M7CyEbTphqXiDKKMEo4h8IF2fB5AzFubq0ZRxImfxt0m4jnZswhqb2C3QX4Z9DO1CR0cIuUCmmCF356sHE+BAMeR+99pV49dlXUuPDjiiYsJ4LI7F/4YH6BIiNofQFPu0dtAud3imUrVrwEGb4igRZAmPeljnCIPYdRPw5a5yzxwmZN0lQg3oWmh09iG8E3FbjSaZgpD/p0EHzdk6eUVRAjXCit3xPVrcdQRtb5ywF/mN8hW9xeOXagrg0DhVZK3diidDmQ3R9sTH8zJ8m02umm/jYTzx3sH9GHVGhX69yFp42IOk/ofcl+WkfFPGPafy+26wYb0Oitb3Asr5J/Sej0qLRuV25ODHj0J8hefDzuui8PA0HtLF63A+zt/Zm+cXWHcGfDXqLMrNYbghH4WnEHt89TJCjd6MTDbs7YmM6w+r8ehuCNP26oP74+TWqVcWXTzl73Gp22tVs3QO8B/r9ne+n4z/Biz3oh6DdjN3q7qE5M9kpjUkNCepaTDX5CMkUGnU9CnNHUGi6I6EgerhVnYrbqNR8eqlVt2vNJ18yynm8y3fdxX+xm29uCeZLYoTiDeMToiOpSl3OzY/A8RxIICGwM0lSxTTCeMHj00kUa5Ne+oSMCpgwBQ9u1gITlfldWGWH2NScdks/74ucmzkHpl8ok+8PpHAjzjZ8444uQeYzAlo4tZzLdRgC6lqsUDLREautUQWhURRO9csG3iFStEWJJ5HoJHaMQuTCKz5bJ5Wxhbbf89EWKTaXmuQ3rZv8zr9ti+BsgmJNhA6lwaoNsKZx8XZJ3I+YdcZOO5hwnv39SQk+mKpekpO8BbJ8afPMdHzkc1Is/+8h5xZXnZS1eLrSfsHPPZpKbJA4ZIchN2/2or/FWPU9o1cINdaWMlymaS9KxTyNlfubV0c2/HsPuBEcdpmwN6B2pkX+6IHJAN+EjzTH0NM5Iz2JZIQq1nLpeIFG0MfhN4Y2uqSrC9dR45CqtJJWMtzuptIbTsa8Y8LEQ6wtlPqZ/W3Yjz87NgZXwdxVJ5qYZCETrWkH4/NN3OBmXJLFO0xfuj8nINzwY+VWZEzLFIN1DiR8P2XnOazqoEwZgmV7aaRKg45NsUpN3MIPo2+uElpPNvryL8vdiZJRwCD2gYFSf3r5znQV4BOD3h6F/Qbqq78RNXH6Gpf1F81B3U6nfHaPw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A6EA88D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A6EA88D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>930885f3-a4db-4c89-a0c5-4b5518f49e63</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c8221854-35d6-498d-a02d-421784be1022</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a8d70240-77fd-4efe-ba84-308dc9d6ea40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00015_PERM_UVTC_UserName_InValid_Role_dsp:customersupport_with_TokenType_ValidateEmail(Negative)_403_FORBIDDEN_P1" searchProperties="true" id="87cb3b26-ff31-4990-b854-27a9ea17d1cf"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="c935c094-2021-4063-8060-b043ababcef3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdDSPCS"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="545a19b7-fae0-483f-a3b6-c57e159875c9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DSP_CS" id="0ef5b0c9-2565-4275-aeb2-fb2e3014defc"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDSPCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="b986acd7-9912-4dd5-9d2c-a542c846222e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","API_NOT_AUTH");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>DSP_CS_1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A6F028D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A6F028D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_010225</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_37683373-cf08-4f6b-9384-7b0602f999bb</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_37683373-cf08-4f6b-9384-7b0602f999bb</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvO4ZSwbc7ErUEUCZJ0rCUwyMy8pIbdBiZGMJXPJ169kwAFCsuw+ubrd6j590VGfCTyNHb8tBKSSclZaTmMm/FzbNLKU+RwLKnyGpyB8SfxB+/bGd8rIx9sjRinoNI2XSr3WqFTqFZNEqGG6UW1kepWGa9ZHqIacyPO80UiZCpFBwITETDYNB9lVE9VM5A5RxbeRX/XKNa/+xyg9QSqUb2VSRsYG1FI0jYmUiW9Zi8WivKiUeTq2HIRs69ftzYBMYIqN1tk6ozxQ2trYk3IIBOKYlAmfWmfWns1ZKPwBHTMssxQ2scKvYiELeZayCQUd/zCKsxAGLOK5eIEZZ5TgmL5jXZ9bkBMeltrxmKdUTqZfJmEj7diEJTGJ7bIfhrUP7URHewhTgU0xwfbG1yNEkAIjUPr5GDSNH6d1LT86TDETEU+nYl/8b3iAzSHmCYSm2Ka1gXa6wyOVap0B8QNG4kzQOdzpYU0wAbHpJpDTXZX6KUR0eUOFGtCl0OisXXgH4roaHToGIf9Pg3aas3byhOMMWtdhEi+DEbZX/fvlLKDLK69Ri+ve+Ao1cwC7xrmiaO1aPBjKYojWJ35fBn20qEPtFhb3Q7JqrEjce0PxX7Id369S573fj+x+nwWvsiowXNw61Ya8rD8HkTv+edWb/wlr4Yw1LoOrmXX3hO8qoVtFdMVc4O/dyU1y7fG/V6/P6OGh/9ywevPoOe1eR3F3Vf9dv37t1B8enxe3i6sOeW208ZA6SbqcD+Wk++u9e+4tWBcawcUbssd8HDSLdHbw7+u2d36QjV6ByK2oxyDolHqqS1h+T2ZaQ0Mzyk39RJOPkMCk0dKnNHf4maI7Gvqqh2u56yLPRrbnVGpOr33e7SIX2T3URlXPQ0rYkswaxQHEC84iqmNpyl2PzfcAydQXwEJIzTnPFNMJ4xuPHSxxKWCP6hJwJmDIFT1DdQwzPpkl05iI5B2NWK0uXO4YpTsu79l92o4kpPuUXNuj5EcgNKGgeVuPtVBzLaQqxQzPMxnb5TkuM8gUs6eaZH3HbVQtQadJDBqoNeVhFkM5mSR5YSyx/jomJiLXdgb9l4vBS34brC9zO/y3LYOyCak2EDqhc1CthCMPjLvN5uusvd2st+7bWUj15VI1lSklayT7vz5GRc9IMSeP3WGe1hZ3YX7a8W1VPh+3vkFmHRaliBbO6U7s7RuuXgPFH61tX2fYLs/K2Xye5a103YqVKveWLpOFHGsAJFMMtxryN2BW4cU66TkpgB8EL/T7EDM5YQOJJUzV6JVy8YT9YQBC7w+BujLLU5eTvZCqdBKW8pjuIla7j0b87XpEfKLtlLqvPguehh8dO+JrJ47KU60PkrKxlvRTsvpiOAhXbqkiQZ7uOj/m4FjwfWVR5AKLVAM1yiR8/aek2a1pYEJ4xmTQMXLFLuPmOOUqAf/D6JObnNSLLY/++5pn0nwECKjdUNDcv36sfX0F2HiHtTdBjxO32/uOuPfRtT6pP2t26nQ4461/AA==</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMpINBHAFqpwQEiYhYYBlM3mZUuQ2KLFlI8lA5utXMuABQrLsPrm63eo+fdFRX0gSR67nSwlCsYSXVnHEpZdrW1YmuJcQyaTHSQzSU9Qb+f17zy1jj2yPWKVep2X9ghADBE1qY+I07GpIGnbjnNTtKq7QSgh1GoKjTaXMoMelIly1LBc7NRuf27g5dpqe2/ScRhlXz5+t0gSE1L61SRlbG1Ar2bJmSqUeQsvlsryslBMxRS7GDnrq34/oDGJitS/WGeWBRHtjT8sBUIgiWqZJjC7Qns1FIL0Rm3KiMgGbWMFnsTDCTaRtAsmm36ziLAQ9Hia5eEV4whklEftNTH36oGZJUPKjaSKYmsWfJuFg49iGFbWpU+XfLLQP7URHewiFJLacEWfjawghCOAUSn8Ney3r22ldy4+OBeEyTEQs98X/hgf4AqIkhcCW27Q20E53eKRS7QugXo/TKJNsAQ9mWFNCQW66CfR0V6WBgJCt7pnUA7qSBh3ahXcgrqvRYVOQ6v80aKc5aycTEmXQTl3MBo/fw1UDxlXWH7z12W1z8pO9vvqtHMCuca4oWrsWD4ayGKL1CRXQwVldXv+eDc8qd4JWEcIr9XBzMzmfiHk9Ib8XZzEVqb+C4Nm/6dYbL/cpZVn/9YlORm9/g7yrAQxTHjceuze9H+E8/tGtDa7GT/f+G0V305e+WNJbNObL7+N6r3N3586bje+vqv481OP1dHtVv/mZ4dH5uP/q3z6nMbmpNZ9WqyQYLJpnyBVvYURfetVKmLSKdHbw7+u2d36UvbwCVVvRjEGvU+rqLhH1NZkZDQvsMDf1UkM+UgFXVtucMtzhZZruWODpHq5lp+FcXjZc/7yL3UYHV65xrVK5bjadLvYvu35tSzJrFAcQrxIeMhPLUO56bL4GSGNPAg9A2Isk00wnrS88dogipR4f6kuQcAnjRNOzM5vNpyBmy0AJ/pKJZXMq2DKqhlbpIVGP/FH4oQKxx8muu8fJQ6AsZWCI28y11IMtla7FnCwyFTnlBSlzyDS1C8Oynltt1JBkcRqBQYriJMgiKKezNK8MkuuvaxMqc+3wepzftk/zOvy3LYG2CZgxkCaXS9BthCOPC94mcjxhB4+xs5vw1r2fBcxcLF1PJRhdI9n/9WdMzHwUM9IZDX5djX45W9yF+WnHdUE+nkRfgEKH9SgCBQu2E3b7dOtHQNNGe9vNOXHK83K2WGR5A6vVChLaPTIVQthFI6CZJrb3cfIGHBVe0EmvSAH8IHih34eYqRkfKaIg1gNXysUT1oYRSLM29PRNWZ26k+yF1KVTsFLHdFeRXnkM4i+3IupRY6fVA/1ZJiL407Ejvnbi6Dz11qAYnxrJvCDvn8wFTbRbprkvEbvOjzk4FnxfWRS5wKL0QL1kCj7/UzKk1rIIpUnGVa9j5Ypdos1xqvcUvD9GH9zkXF4sd+zftzub5SNAQa+EkuX+zRvtmSvApztkvQn6CV87X/H1Prr2B/VHzU6dDme8/Q8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A6F018D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A6F018D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>930885f3-a4db-4c89-a0c5-4b5518f49e63</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c8221854-35d6-498d-a02d-421784be1022</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a8d70240-77fd-4efe-ba84-308dc9d6ea40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>60d0c277-a9e2-413c-acfa-fba360ade9bd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bbaf77dd-7e4a-4afb-a071-c5af692dba21</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00018_PERM_UVTC_UserName_Valid_Role_DECE:CS_with_TokenType_ResetPassword_200_OK_P2" searchProperties="true" id="166699c1-8a76-4026-a388-6e84211cd3c4"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="69c3ffd0-8d45-42a3-9395-e47f270b4c88"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));

tP.setPropertyValue("audience","");</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="98f317e3-8dc6-4e3f-ae59-e2e6aff6e00f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DECE_CS" id="f7d16470-6156-4469-be57-83b9e24104ab"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDECECS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full DECE" id="f02c4d7c-e5ee-42cd-bd51-336638f151a7">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("UserName",tC.getPropertyValue("UserName1"));

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID1",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="1fc4f9b3-3fc2-4edc-b1a4-4991af30c53c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>181BB82A6F548D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:181BB82A6F548D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>uvtc_firstuser_201502_20150610_010232</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>181BB82A6F558D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A6F558D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:181BB82A6F558D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A6F558D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_010232</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_de16ff4f-c808-467e-b9c3-4bd0a2e6f7ad</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_de16ff4f-c808-467e-b9c3-4bd0a2e6f7ad</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZrb+o4EP0rKPfjKjgJgQtRQaI82rT0waPddr+sjDMBQ+KE2AF6f/3aAXIJpV12JSTkyfjMmYePfcVxGFhOm3NIBI1YaRsGjDuZtamlCXMizCl3GA6BO4I44/bDwLHKhoMPW7SS221qf3tg1nzf9nVSN+q6XfsJ+rRBKro99QxsQc3/iT3pynkKLuMCM9HULMOs6kZNNxoTs+FY8vezXG0Yf2mlV0i4xJYuZUPbk9rypjYXInYQ2mw25U2lHCUzZBmGid4eBmMyhxBrratdRlmgpLX3J2UPCAQBKZMoRFeo4HPlcWdMZwyLNIF9LO+rWAYyGkj6eJzOfmj5XvBc5kfZsoNZxCjBAf2FVX0eQMwjr9QOZlFCxTz8MgnTUMA6bIlOTJv90FCR2oVABYYJxzqfY3OPNQIfEmAESi8jt6n9uKxr2dZJghn3oyTkxeV/4wNsDUEUg6fzQ1p7apcDnqlU6wqI4zISpJyu4VENa4wJ8H03gVwOVXpOwKfbAeVyQLdcsUPH9E6Wu2p06Qy4+D8NOmrODuQVBym0/OeguwnpElAKtzadylI9JD3cGGO7mRE4ds4MeWt3y5OhzIdot6ONakNmo5m5Whgjb/LH6+p2Uh/27tu/GoOH5a3Zt4mVvLOgsnjr3vRhPHh6HtyNtvjtbrZ6F/ObpGZV46d3l8Pk5T12B0P7ZjZ9i4bX1zdDPL7fTDaB6S3J40sn7HR85kYPj/zmz5F9F97Z973EXXqVyjocvg9v7OUkuPVWfhxOX3udxbTvoh5Go4/n9bi++LXebpp5Okf8i7bDmR+n0wUQcViqMXC7pb7sEhbfi5myUE/3M1cnVuLDBTChtdQupR1OKuWOeo7s4W5t1s3r67rVrvWr1XrXqPSMaqXSazTMvtG+7rerB5HZsTih2ImYT1UsJbm7sfmeIAkdDsyDRF9HqVQ6rn2D2MUCl1w2kocgYrJFkZRnk08X/keFz2ogDNNLV14lrjXqy3ChlR4j8cSekrYvICmIsmUVRHkEhMYUlHKrweZysrmQxVjhdSoCs7zGZQap1PZEyaxj2fUq4jSMA1BUURh5aQDleB5npUF892/pmPDMmtWV7I7cl8mdfjvUQfp4VDlwlc81yF7CmRvGPCRzPmnTOLmJDvDt1KPqdMmiioSSHZPip9+zooYkH5R9VgfaufepoYCMTpPKg3lrSvKJz+9tKedSAFqHtqywWV6V0/U6zTph2xWUSHik0kSGhcZAUilRH5NoCQzlKOii+yAnfhI8txcppmLOxgILCOXklLLlBQ+AMXD1AHDlzG8vfV0UQsrSCdiKc7ZOIB8vivG37xviEOUnzc/ybxMlvxM/h3UUR+Yp739B2Uyt1F3w8cVskEjCUqliUXIMfg7gXPCiMS9yzkXIgZqmAr7+UlLy1NQwIVHKhNvVMsOxZGY8xUcMzm+nTzCZKufPNPrv7zSdZiNAQD7uOM3w1W3rqCPAZkeyuw/6hfLa3ylvkV3rk/mz5ahOpzPe+gc=</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZrb+o4EP0rKPfjKjgJgQtRQaI82rT0waPddr+sjDMBQ+KE2AF6f/3aAXIJpV12JSTkyfjMmYePfcVxGFhOm3NIBI1YaRsGjDuZtamlCXMizCl3GA6BO4I44/bDwLHKhoMPW7SS221qf3tg1nzf9nVSN+q6XfsJ+rRBKro99QxsQc3/iT3pynkKLuMCM9HULMOs6kZNNxoTs+FY8vezXG0Yf2mlV0i4xJYuZUPbk9rypjYXInYQ2mw25U2lHCUzZBmGid4eBmMyhxBrratdRlmgpLX3J2UPCAQBKZMoRFeo4HPlcWdMZwyLNIF9LO+rWAYyGkj6eJzOfmj5XvBc5kfZsoNZxCjBAf2FVX0eQMwjr9QOZlFCxTz8MgnTUMA6bIlOTJv90FCR2oVABYYJxzqfY3OPNQIfEmAESi8jt6n9uKxr2dZJghn3oyTkxeV/4wNsDUEUg6fzQ1p7apcDnqlU6wqI4zISpJyu4VENa4wJ8H03gVwOVXpOwKfbAeVyQLdcsUPH9E6Wu2p06Qy4+D8NOmrODuQVBym0/OeguwnpElAKtzadylI9JD3cGGO7mRE4ds4MeWt3y5OhzIdot6ONakNmo5m5Whgjb/LH6+p2Uh/27tu/GoOH5a3Zt4mVvLOgsnjr3vRhPHh6HtyNtvjtbrZ6F/ObpGZV46d3l8Pk5T12B0P7ZjZ9i4bX1zdDPL7fTDaB6S3J40sn7HR85kYPj/zmz5F9F97Z973EXXqVyjocvg9v7OUkuPVWfhxOX3udxbTvoh5Go4/n9bi++LXebpp5Okf8i7bDmR+n0wUQcViqMXC7pb7sEhbfi5myUE/3M1cnVuLDBTChtdQupR1OKuWOeo7s4W5t1s3r67rVrvWr1XrXqPSMaqXSazTMvtG+7rerB5HZsTih2ImYT1UsJbm7sfmeIAkdDsyDRF9HqVQ6rn2D2MUCl1w2kocgYrJFkZRnk08X/keFz2ogDNNLV14lrjXqy3ChlR4j8cSekrYvICmIsmUVRHkEhMYUlHKrweZysrmQxVjhdSoCs7zGZQap1PZEyaxj2fUq4jSMA1BUURh5aQDleB5npUF892/pmPDMmtWV7I7cl8mdfjvUQfp4VDlwlc81yF7CmRvGPCRzPmnTOLmJDvDt1KPqdMmiioSSHZPip9+zooYkH5R9VgfaufepoYCMTpPKg3lrSvKJz+9tKedSAFqHtqywWV6V0/U6zTph2xWUSHik0kSGhcZAUilRH5NoCQzlKOii+yAnfhI8txcppmLOxgILCOXklLLlBQ+AMXD1AHDlzG8vfV0UQsrSCdiKc7ZOIB8vivG37xviEOUnzc/ybxMlvxM/h3UUR+Yp739B2Uyt1F3w8cVskEjCUqliUXIMfg7gXPCiMS9yzkXIgZqmAr7+UlLy1NQwIVHKhNvVMsOxZGY8xUcMzm+nTzCZKufPNPrv7zSdZiNAQD7uOM3w1W3rqCPAZkeyuw/6hfLa3ylvkV3rk/mz5ahOpzPe+gc=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A6F548D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A6F548D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00019_PERM_UVTC_UserName_Valid_Role_Portal_with_TokenType_ResetPassword_200_OK_P2" searchProperties="true" id="6bbed6c3-8138-4ef7-a559-255a08c67a31"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="afd24f91-8920-443a-afbd-922cd0d2f397"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportal"));

tP.setPropertyValue("audience","");
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="d577d0d8-01a6-437c-8332-629925c86102"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="f8d724ed-8632-4424-a29b-f2babce23465"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A6FA48D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A6FA48D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_010244</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZXwDY7sCVRBgQxISBkgyMy9bQm5AiS05lgxkvn4lAw4mJMvuk0vtVvfp7qMjXXAUR3bQ5hxSQRitbOKI8iC3NrUspQFDnPCAohh4IHAwaQ9vA7tqBmi/RasMuk3tb1y3vFodNXTf8Ty91vBCHfku0kN/biLP8xqo5kpXzjMYUC4QFU3NNq26brq66U8tP7D9wHGrNc/+rVUeIeUytnSpmtoO1IY3taUQSWAY6/W6unaqLF0Ytmlaxs/h7QQvIUZa62JbUZ4obe38cTUEDFGEq5jFxoVR8rkIeTAhC4pElsIuV/hZLtMwfUP6hJwsvmnFXggHdM7y5SWijBKMIvIHqf4MQSxZWGlHC5YSsYw/LcIyVWAdNljHVo1+04wytDMDlRCmHOl8iaxdrDHMIQWKofIwHjS1b+dNLd86TRHlc5bGvLz8b3iAriBiCYQ635e1g3Z+wBOdal0ADgYURxknK7hTZE0QBr6bJuDzQ1VGKczJ5pZwSdANV+iMQ3hHy203umQBXPyfAR0MZxvkEUUZtAY3tw/MmdHRxnm7d37fi99Zf4Xi5WLda+YADp1zQzHa7fKIlAWJtjsWV5cQpv0r8Doz6/p59LOX+O5df4Svp9Mn6/tNPHBn6OXqz8h1N3+9PDFr3Gjche3u/feZ71/7pOcBuXvqerNbPu12HkT/JwwnpL3ovnXu1/XsbjV8vb658VZ9FoN4+eU1nh4bM+rdjNai448z/jx+i35ceQl5aTwi49faffwx6iUPvemzaCxuhs+bZFrvLGH4ZJvNopwD/GXb/sxPstkzYLFfKhoMupW+nBISX4uZspBQn+euQaLEhwugQmupXUo7gkzKHQkDOcPt2vKsTsez226/XfO6ptMz647T832rb7Y7/XZ9LzJbFEcQLxmdE5VLSe6WNl8DxHHAgYaQ6iuWSaXj2hcRu0igyoCO5SFglMOUSXl2HZSuU7EWrvNa88xnBptayMUfrXLHxD29T9tzAWlJkm27JMljwCQhoHRb0ZpLXnMhW/GKVpmIrOoKVSlkUtlTJbKBXfPqBidxEoECasQszCKoJsskb4zBt19bR5jnVsJxwlKBovw8GJ9Wd/xv3wjpExLlwFVJHZDDhBNXjL2v50Pd7smraB++nYVEHS/ZVZESvEVS/vVOFsWSginvhe2RFxuODaXgxnFdRb5wRXDB+uLulpIuRaC1H84rsqqv1Wy1yvJ51GqOkcrwhuqIYdrGBHAmZeptyl6AGkUU46w7oQB+lLywlyFmYkknAgmIJX8q+fKMR8AEuHoEDCTvN+e+MEopZesEbMQp22UkHzAK8ZdvHBxg5SfNI/lZszR8n9iJWAd5ZJ3yDSAIXaiVug/ePqEHZjIskUrG0sPgpwKcSl42Fk0usAhJqFkm4PM/FSVRTQ1hzDIqBl0tNxzKZo5TvCUQvDt9CJMrc/FUI//+VtNJTgEM8oHHSR5f3biBOgJ0cSC9u6SfqK/zlfqW0bU+mD9aDvp0zPHWPw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A6FA38D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A6FA38D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00020_PERM_UVTC_UserName_Valid_Role_Retailer_with_TokenType_ResetPassword_200_OK_P2" searchProperties="true" id="2e7177a3-24f4-47a5-b57e-f1c4ac0fc867"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="22cf6e4f-69fb-4094-9fd6-6df0b61953e8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="a0015974-f842-4c41-a0d2-4b85c797e456"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="610a8fae-1f9a-4107-b0ca-ad63e84779fd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A6FD18D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A6FD18D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_010250</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o6EP4rjPuYMZYvJLYnMENiQkhI0gBp2r50hLyAWiM5lgxOf/2RDDhASA7nPHl2vdr99qJPey7wPHHCthCQScpZrZgnTISltmnkGQs5FlSEDM9BhJKEw/ZdP3TqKMSbI0atFzWNX8S1TycB8k1k+77p+ZiYYx9cE/vxWYCQM/bGtjIVIoceExIz2TQcZDdMdGqiYGQHoROEnlP3vMZPo/YNMqF8K5M6MtagCtE0ZlKmoWUtl8v60q3zbGo5CNnW97v+kMxgjo3W+SqjMlDWWtuTegwEkoTUCZ9b59aOzXkswiGdMizzDNax4o9iIQsFlrKJBZ1+MaqzEPfYhJfiJWacUYIT+hfr+tyBnPG41k6mPKNyNv8wCRtpxyYUxCS2x74Y1i60Ix3tIMwENsUM22tfA5hABoxA7WnQaxpfjutaeXSUYSYmPJuLXfG/4QG2gISnEJtik9Ya2vEOD1SqdQ4k7DGS5IIu4F4Pa4oJiHU3gRzvqvY1gwkt+lSoAS2ERmdtw9sTV9WI6BSE/D8N2mrOysk3nOTQKsaTAY8W7t8bS/JRP/+W5wVf+NHzCWqWALaNS0XV2pW4N5TVEK1OtM8ao2gi7a5zM/juDP9cL5DzdNO/t+H3rDO3qBs/wOg5ZsGTeBzZyW2/k9EAcTl/HkVd6+6HYy3Tgfd3efLz9itOz7p0lDROAjaE7tnvqJH0BuPk7mLGT388FPeX1/D9FWJEvdk0Q0Fx3e/6J1ePnfxl+pi6138uO5EXXF/l/ZOi+3yXR8NBcRM/esMX23ns3rabVTpb+Hd1mzs/zMe/gciNqMegF9WuVJew/JzMtIbG5qQ0DVNNPkICk0ZLn9LcEeaK7mgcqh6uZNu3Ly58p316Fdl+hNwOarhuJwjsK9S+uGo3NiSzQrEH8ZKzCdWxNOWuxuZzgGQeCmAxZOaC54rphPGJxwhLXOuxgboEnAkYcUXPpzbyc+qiFzY9s5P0VLLEpbPJq2PU7rl8YA9ZeyIh2+Fkx9nh5AEQmlLQxK3nWqjBFlLV4gUvcpnY9QWuM8gVtWeaZUPH8xuWoPM0AY3UmvM4T6CeztKyMpZYfR0TE1FqB51Reds+zGv/36YEyiam2kDoXC5AtREOPC7uJpHDCdtohOzthDfu23lM9cVS9ZQZJSsku7/exkTPRzUjKqNfl8Nf9gZ3ZX708fcnrU9AWfv1qALFC7oVdvN0q0dA0UZr080XbNdf6vlikZcN9DzXypR7S1fIQo41BJIrYnsd8T/ArMqLddQrUgHfC17pdyHmcsaGEkuYq4GrleIRa8MQhF4beuqmFMfuJDshVekkFPKQ7jJRK49G/OlWREKi7ZT6q/oseRa/deyAr604Kk+1NUjKplrSL8jrB3NBuHJLFffxbNv5IQeHgu8qqyJXWKQaqHEu4eM/NU1qTQMTwnMme5FRKraJtsQpX1MI34zeuSm5vFru6L9vdyYtR4CAWgkFLf3rNzrUV4BNt8h6HfQDvkaf8fUuutY79XvNVp32Z7z1Dw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A6FD08D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A6FD08D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00021_PERM_UVTC_UserName_Valid_Role_Dynamic_LASP_with_TokenType_ResetPassword_200_OK_P2" searchProperties="true" id="34f3f9ec-9f29-4f48-ba18-83cd720d8683"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="1b5e11f8-1666-40b4-9202-bcd1b4d6f1f5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDLASP"));

tP.setPropertyValue("audience","");</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="3352dc01-84e3-4ebf-942e-a7d479921c5f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="d33ec1bf-06f4-41c3-a209-4e146e4f0966"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A702C8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A702C8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_010256</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU+o6FP4rTH10Sm8gpSPMcNONGwUtsj28nInpAqJtCkkK6K8/SYFKETyc89TJ6sq3vnXJl1xzFIW21+AcmCAxLayjkHIvtda0hFEvRpxwj6IIuCew5zfue55dND2026IVuu2a9ncAQQlXMejYdbBeqpYs3X11XvWKc+W6LgAqT8rSlfMEupQLREVNs02rrJtXulkdWlXPrnolt+hWKmOtMALGJbZ0KZraltSa17SZEHPPMFarVXHlFGM2NWzTtIyX+56PZxAhrX69ySgNxOpbf1wMAEMY4iKOI+PayPlcB9zzyZQikTDYxgpOxTINs2pIn4CT6YWW7YWgSydxumwhGlOCUUg+karPPYhZHBQa4TRmRMyik0lYpgLWYY11bJXohWbkqZ0JlGPIONL5DFlbrCeYAAOKofD81K1pF+d1Ld06ZIjyScwinl/+Nz5AlxDGcwh0vktrS+18wCOVql8D9roUhwknS3hQwzpHGPi2m4DPhyoMGEzIuke4HNA1V+yMfXoHy0012mQKXPyfBu01ZwMyQmECdWay3yZh9/agN6O8U74xHt2Hp3jV63dqKYF959SQtXazPBjKbIg2O3otJ+z67hsf3Hb+fDSeh8RC1lXwXhE957a0GL47L8HjbHBZen5wffT79u3u9q+38etl76X1RlZNMa4E/Io1h6PXx+kv7leWJl46o0XfvBsuy/3+8s10F61pXJmNpmO/++fX6JHDdDAcfFyGn8kzQ+X+beOys5qJj2FvfONYkyp5qXz2nyJ6N+rNH1sRqw7fyfi+I8xals4e/7xtd+b95PUNsNgt1Rh024Ub2SUkfhYzZSGBPkldvbkSHy6ACq2udint8BIpdyTwZA83a8u1mk3XblRMu+W2Tadjlh2nU61aN2ajedMo70Rmw+KAYiumE6JiKcndjM3PBHHkcaABMH0ZJ1LpuPYDYhsJVOjSJ3kIYsphGEt5XogQhfOVE5TXkxCSMkpcqAK60goPsejTPmtMBLCcJNt2TpKfAJM5AaXbaqy5nGsuZCkWaJmI0CouUZFCIpWdKZH17JJbNjiJ5iEookYUB0kIxflsnhbG4JuvrSPMU2u71/AH6XE7mdjhv10NpE9AlANX2TRB9hGO3C7OLpXjKVvm0LT2U97BN5KAqJMlCyoYwRsm+V9fc6IGJBuSNKcd6cz30JDDNQ5TykIFS4KzWc9ubCnk8ujXdy1ZIKu4KCbLZZJ2oVRyDCbhDZWkYdqGDziR4vQxjN+BGhmKcdZNkBE/CJ7Z8xQTMaO+QAIiOTWFdHnG1e8DV1d/V077+tx3RS6kLJ2AtThma4Xy2aIY//iywR5WftI8kJ9VzIKvjh3B2osj85Q3vyB0qlbqFvg4MRk4lrBE6lfM9sGPARwLnjdmRc64CDlQr4mA038KSphqGsI4TqjotrXUsC+WKU/xMQfvy+kbTKrH2QON/PsLTSfpCGCQzzpOUnx1z3rqCNDpnuBug57Q3OZPmptnV/9m/m7Zq9PhjNf/AQ==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A702B8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A702B8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00022_PERM_UVTC_UserName_Valid_Role_Linked_LASP_with_TokenType_ResetPassword_200_OK_P2" searchProperties="true" id="797539ff-28f9-4ec5-b141-c63169184cff"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="077ca3b2-34e6-4f02-b277-54776c0e9b68"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdLLASP"));

tP.setPropertyValue("audience","");</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="226d7ca9-1ac2-41ff-ba09-2c5f5319ca3f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="6866fa8c-076b-4a80-af54-3f80dfd076a9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>LLASP</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A70768D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A70768D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_01033</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VynmcMl6wWVyBKgNJLgnZgKwvU0JuQIktG0s2kK8fyYCDCWSYeQK1W6dPLzrSOUOBbzouYxBzEtLSMvApczJrU0li6oSIEeZQFABzOHaG7m3fMcu6g7ZblFKv21T+rtTGqGHWQK1VqxPVsrCpji3DUxs6xtioTkyk14UrYwn0KOOI8qZi6oat6lVVb4yMhmM2HNsuW4b1rpSeIWYCW7iUdWVDasmayozzyNG0xWJRXlTKYTzVTF03tNfb/hDPIEBK63ydURYobm38cdkDDL6PyzgMtHOt4HPuMWdIphTxJIZNLO9YLF3TG5rw8RiZnin5XvB6dBJmyw6iISUY+eQLyfrcAp+FXsn1p2FM+Cw4moShS2AVlljFhkXPFK1I7USgAsOYIZXNkLHBGsAEYqAYSk+DXlM5O61r2dZRjCibhHHAisv/xgdoCn4YgaeybVobaqcDHqhU6xyw06PYTxhJ4U4Oa4QwsE03AZ8OVXqIYUKWfcLEgC6ZZKft0ttbrqvRJVNg/P80aKc5a5Bn5CfQ8iJq087guV59s8LR7O199jZa/FULXs3bZkZg1zkz5K1dL/eGMh+i9Y6ooT/eLHvDufuKIGUfZszfqvQVdS8H0fUf4w8xbO1xEDS+av5qaKdTy75gFeuTTzufF8n7y/gG3pKPq9VNNWadbr8+vndvGvfk8QvCj+uXSjzo+I+X84ce60dTxoL6H7sdXb03Ll6unsR5eG67bn9cJ/z6yfy67rG7i/ar7g9n/uOXtfKjkc2CF3qrD6Lh2JuzZp7ODv+ibXvmh8n4AzDfLuUY9LqlS9ElxH8XM2khnjrJXJ1Iig/jQLnSkrukdjiJkDviOaKH67VRN9rtuunW9Fq13tUrF7pdqVw0Gsal7rYvXXsrMmsWexQ7IZ0QGUtK7npsfieIA4cB9SBW0zARSseUXxC7iKNSjw7EIQgpg1Eo5Fn8Sz9qRkJmUVrF2LIChNL6cqGU7kJ+T+9jd8IhLkiyaRYkeQCYRASkbsuxZmKuGRelmKM04b5RTlGZQiKUPZYi65hW3dYYCSIfJFEtCL3Eh3I0i7LCaGz9a6oIs8za77vDh+y4HU1s/9u2BsLHI9KByWzaIPoIB24Xa5vK4ZQNfaQbuylv4d3EI/JkiYLymOA1k+Kn7zmRA5IPSZbTlnTuu28o4Gr7KeWhvJTgfNbzG1sIuTj6rW1L5sgoz8tJmiZZFyyrosUCXpNJarqpDQEnQpxWo/ATqJajaCfdBDnxveC5vUgx4TM65IhDIKamlC1PuPqHwOTV3xPTvjz1XVEIKUrHYckP2Tq+eLZIxr++bLCDpZ8wP4ifRRh73x07gLUTR+Qpbn5O6FSu5C2wOjIZOBSwROhXGO+CHwI4FLxozIucc+FioMYJh+NfSlKYmgrCOEwo73WVzLArlhlPvorA+Xb6AZPpcf5AI//+QlNJNgIYxLOOkQxf3rOOPAJ0uiO4m6BHNNf+TXOL7Fo/zD8tO3Xan/HWPw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A70758D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A70758D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00023_PERM_UVTC_UserName_Valid_Role_AccessPortal_with_TokenType_ResetPassword_200_OK_P2" searchProperties="true" id="c3cbc465-e0c4-49c2-8797-759414d916ab"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="220fc5ad-02a9-483c-a4c0-52987c4feec0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdAccportal"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="efdad1f7-d8b5-4f76-9dba-8d09fb6569ed"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Access Portal" id="50fe07fa-1a10-490c-a544-cf40d55cd936"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdAccportal"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="a246f24e-8eba-4941-8cc2-5e3cc2597f60"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>ACCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A70C08D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A70C08D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_010310</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvNIGcvGBHAFqrgGNmQywSRMeNkScoOVsWXHkoHk61cy4AAhWXafXN1udZ++6KivOQ4Dy2lxDomgEStswoBxJ9M2tDRhToQ55Q7DIXBHEMdt3Y0cq4QcvD+iFYbdhva3TZBtmgvQUQUvdLtWLet4Xq7qGM9tr1KxkGlfSVPOUxgyLjATDU0qKzq60lF9YtadMnKQVbKq1ZlWeIKES9/SpIS0HagNb2i+ELFjGOv1urQul6JkaVgImcbvu5FLfAix1rzeZpQFSpo7e1LygEAQkBKJQuPaOLK59rjj0iXDIk1gF8v7KhYyUN2QNh6nyx9afha8IVtEmdjBLGKU4IC+Y1WfOxB+5BVawTJKqPDDL5MwkXKsw4boxLTZD804hnahoyOECcc697G58zWGBSTACBQex8OG9uOyrmVHJwlmfBElIT8W/xseYCsIohg8ne/T2kG73OGZSjWvgThDRoKU0xX8VMMaYwJ8100gl7sq/EpgQTcjyuWAbrhCZxzCOxG31ejSJXDxfxp00JytkyccpNB8c9fPvahjXXHB7TZ/Ffd3D8VXunx44Y0MwKFxpshbuxVPhjIfou0Jt9y/uR1Z6EVUbvu9wVSOQOe9OP3d6z3HG7t2Vx60HoP3uttz+33+OA43U/8vgLJXDM1JpzedjmA4DEU8mN081bsv/sODHy/i6fPMm21enuhoHd1s6M0sHHQG7avBul9/e7cnd/6gValsjPvAW68Gt/KaF8P76sxf3t4/vRjPrbQ4mU2L8SxB7sro+H/SZXVk9R4aeToH+I91+zvvpvMXIGIvqjEYdgt92SUsviczpaGevshMnViRDxfAhNZUpxR3OKmkO+o5sodb2ayZ7XbNalVRB9W6qNxDlXK5V6+bfdRq91uVPclsUZxA7ERsQVUsRbnbsfkeIAkdDsyDRF9FqWQ6rn3jsYsFLgzZWF6CiHGYRJKemWmRK2rP/eV8YVLPvEKUR/M58bTCz0jcs/uktRCQHHGyZR1x8hgIjSko4lZzzeVgcyFr8YpXqQjM0gqXGKSS2hPFso5l1yoGp2EcgEJqhJGXBlCK/TirjMG3X0vHhGfacW+S3bYv8zr9ty+BtPGoMuAqlzbINsLp42LVnco+kfMJm2iCzMOE9+5bqUfVxZL1FAklWyTHvz7GRM1HPiOtTqfnunvUufFlh2U5Pp80voFknFYjD+St6EHY/cMtnwBJGs19L1+xWXotpatVmrXPtstGIt0bqj4GsgwXSCpp7W0S/QFm5F6Mi96QHPhJ8Fx/DDEVPnMFFhDKcStk4gVLgwtcLQ1DeU82l24kRyFl6QRsxDldJ5ALj0L87U5EHKLspPqX/KyjxPvo2BlfB3FknnJnEJQtlaTej7cv5oJE0i2VzBclh87POTgX/FiZFznHIuRAzVMBX/8pKEpraJiQKGVi2NUyxSHNZjjFWwzOh9EnNxmT56sd/ffdTqfZCBCQCyGnmX/1QjvqCrDlAVXvgp5n63b/O7Y+Rtf8pP6sOajT6Yw3/wE=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A70BF8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A70BF8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8uwiAtWkqpBUFFREfebt3AYFmWTAQF//Tdo9CQ5yfnyvjfiND3dTy/0PPOMdc9lOwBjFMVO4Jdl8aXyT2tf52iGQzWGYxo18ndf4yHdrhmMSdfpVoul2+1KWcY4QbKPY92PXyoszdRrNF9juQXd7NS5Tp154tvsrlJeoQgT00Tlia6UM8/1cefq9qWSRH4n0LGDO77uIdyJYUcDyrhDNDv6HVPl9fmG8uowerXjOOxQFHwyEESuC59g4FHP1AedZwN3NMfy9TiJ0JtPA79U3vamafqU1p+CyKJYmqYpmqeIjoEd61fltXTfjAzZN4Pbuqv7ge9A3XUuegFKQbEdGGXgWkHkxLb3jWmGYujCdA1lsAYZzv9VoX47uKL7oaUPICOs17CtM3djc2SiCPkQlZdz+aXy62cVvO1dRLqPzSDy8Kf1v4OE/DNygxAZNXyP7I7u5xa/SNfrM4Id2Ydugp0zmhRtEuoQ4fIsQqaTjR1Mms/A5Wv5yxm+dxiC/6Ykz9R7nAQ29UVmRMdCOP4v9Xpfq5uVle4m6HUzPlwaE+cgjU+Y2Rr8pBo115Oj7uy5lyuE98o3UI9Sv60/N+qjr942HZleSsWimwJzdHB68zyri0dN6obKapwIdDvptsXWpM8kk8gEozWXq/OGy8ATbmx5VXDH0pT16KV47IZ5WBoAU4EXvj+n8myyjdbbndxvyCjW3PWB0vjpirY3Ckf7khfO2LnZaDXOGmsyc7Bg3MOAcVQapOlhI2gD3i7RuZ9I3cFOC1tr2WnaWay+/I7pfQxFXCOUX4Ms/m8aNC/qsf5YdItJYZLPM0aviix3q2K3C1DXAqksAEsWxhcwEazjyT46fT6lBaAue0AEuTIHqWhtxZWqjqTUWK3c3Uru9QRlzqUDsBVL5IUoZStxtxnS+noXbtkevdMEwdjMg319GBqDYzqw4URZKOlkIefKQcomC4leX2VWRtYX5aAw08WyXlofBF6ZS6mYXj2KUmpPdut5uF3yKbxIqgK4PmCWUtdWBgtvxcD63IakNxRwvMoFW+muVkomLcCsJFiTFYlt0e3tQugZ4d5z7XfGB8T4wuiv8n3fTXYX6aB0pX5XO/U1eV8XVWkI5tvlfr066uveuQQHE7C/e3Qajr4JUmvXTkV1OxwFO9k+wwlQJUFQAUkXDRS5PwRBXwAKB5zs0j0IzaBrkEYbsrhU5d1+c5M7pw3W+7SrM+02sx2vm7NTU5T86m6U7A+2Ym960+pIM85LPuYvW3yunpu6w8AsNNWNNIhHmTlQtdJ+JmYbOKga1pByL3wvUlpDEF1y21WsebxuTnG+d0xzLWymnNsyXaU+D03XDHNcXQTqMaKbAqqz1DY/j+ISsBQBgP5heRBURWgXSTXkVN0qgg56UpyAy4GNR+zqNBycXbitgyAbraeH41thDDGVBCpVJdJWUqktAqMowkBbSr0DWAqWFQmW1BNUKAJ1K4/SLcnXckCUP+exd82jJQlAqu9Akx+U6kuaj6exxnEg94Wl3+Nt5ZStjaZHt05IGmuTkEsVPDH93To4Kp4TLaNEW45Gk3G2XyT944HMKpPWRuf6riSdjyFwJqOFfRQDUZ+F220cVn0YwVgOPUXOLtMdPrSdvUcPqw1GmNEibLFLb58u+7q0G0WWxowGc39Wb/ElnJj5wKse2um6utCaYcvo+qaY59QuWtEBCHr8vHEyMpY92st03EzNITjudXaSubyQ89Jot4DpXB2tNa/aKDXO47FHXxYUNwmnqdZPOUlVq3VDWAwWOIycbdK2smjqG+xWj5vnHb1qOqF75NnkuODC+srySLFmZyNsKbOSym3gzrNaIRxSc+oMpJY5lvv5/qJfQm8KbwP083R4CG/zg3o/WT6Mnjvp0Ei3Ihjfl8UBJIvlHjkV9PjvBKaQOEbNvKp2woIF4Rj5ceW12FWQl05CKI5jdMiRcVtLHM0zNMOz9UavBwRJosnR3aMB3eB5mizuLOeG4hPEbuCbTuGr4HG3U+rvAKHXwcg3UFQ7Bwm0Ea78xWKRr7Lsz8nxG/gYLQLCE0GzBYBEAAOm2Wt0eUlkJZpviwLLC82eKFbKkyCe+tMImDGKPnJE/gNHnCPohA4qiGRxmmJynOKYpOSkn5PYZZ7O+pOPEkI1o4LtdViu3aCw44UuKgBTXmAkLnoK7fCaIArfnmxNh/gqLbIL8fWg/zbCz+/uySA6hlMo4CIcAZGCoi/4LnuP5ZuYG5948d08SAynOM9JZuPIgTckH1/9bpiiUx7dcv2B+A77of1Z8MEy9TmohzPj7MBH2z9uBIRQEsrxeq/KSX86PSXnc3KtQ6ugUxExTzEU3aI0BBPCifJFcEQ+9TBB/YiOPlB/8vyQf8SXxLavxeST9kjXlK/LH9xFNISLu4hMuj776UXng0uStxhl8VeyrkuuLAXiv95qYAcWekQ8I480iIzf5frC1js/JM5ihjm+VawK8pl/0xgwIGYdMseC6L3xrwx85fyj8JHkB5aYdNM+idH3b8rFgHqp6BAGiR/LxSAggvdD84ozzkPU+a30h5kr/Xvj8xn+ls9vlLFGxpenVx66zv9XrjnXdoGI7MLOFctLJSNXU+Lct94N6TeAX89prvu3Of0xktc/xH9K3uX08/fw+j8=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bb96fc41-2093-4734-aaeb-331d8f527d02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fa8525a5-4dd0-44ab-89af-92e2a4549d94</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00024_PERM_UVTC_UserName_Valid_Role_Retailer_CS_with_TokenType_ResetPassword_200_OK_P2" searchProperties="true" id="032a5380-8c52-4447-85b5-6a87e84368c0"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="3a98f820-d508-4e54-abf0-a7faf7001bb3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="3f20a191-755a-4507-affc-9e714b2ba49a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="0ffb4b59-468c-4057-a2a8-dfae8e10f5e7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDECECS"));
tP.setPropertyValue("audience","");</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full" id="eca7d3e6-4a72-4f58-b0b6-87e995b66540">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("UserName",tC.getPropertyValue("UserName1"));

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;


tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID1",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="3a0ae84e-57f1-4ca2-bb92-7c2b4a01a19d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>181BB82A71148D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:181BB82A71148D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>uvtc_firstuser_201502_20150610_010317</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>181BB82A71158D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A71158D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:181BB82A71158D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A71158D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_010317</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_e31ef35f-17fc-46bb-ac11-8a6a05b13b8b</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_e31ef35f-17fc-46bb-ac11-8a6a05b13b8b</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VyvcxZbxCwBWoYgkTkpBcliyXlykht0GJLTuWbAhfP5IBBxPIMPPkUrt1+vSiI10xFPim02IMYk5CWloFPmVOZm0oSUydEDHCHIoCYA7Hzrg1uHfMsu6g3Ral1O82lL/BMsCzKp5qXHpYtauzmYqwYag1VEV6ZWZYs9pMuDKWQJ8yjihvKKZuVFS9qur1iVF3LN0xzHLd1KdK6RliJrCFS1lXtqRWrKEsOI8cTVsul+WlVQ7juWbquqG9Du7HeAEBUppXm4yyQHFz64/LLmDwfVzGYaBdaQWfK5c5YzKniCcxbGO5p2Lpml7XhI/LyPyXku8Ft0+9MFt2EA0pwcgnayTrMwC+CN1Sy5+HMeGL4GQShi6BVVhhFRs2/aVoRWpnAhUYxgypbIGMLdYIPIiBYig9jfoN5dd5Xcu2TmJEmRfGASsu/xsfoCn4YQSuynZpbamdD3ikUs0rwE6fYj9hJIUHOawRwsC23QR8PlTpdwweWd0TJgZ0xSQ7bZ/ewXJTjS6ZA+P/p0F7zdmAPCM/geagPiQDOkyr4/f12rTH9mDoV6J2gP9cNzIC+86ZIW/tZnkwlPkQbXY8TTu97vN7dzYMLNt7C6cseqEv7fXdZYAelk9wcdNxX9235dKzV6IWlvlQXfYhvuzev6L1CD+Rdd1+77VSv7MI/0x83BlNZ8O6pd0sFvXJC9yM/Nu6e/N8benXt+vh9C7oXiTTu+d2Ve+wtNZP+CdAxZ7Ff1m9G/Oldde2/de51UF37qtnXiRocNvuDoZd7XFtN/J09vgXbbszP05mb4D5binHoN8t9USXEP9ZzKSFuKqXuTqRFB/GgXKlKXdJ7XASIXfEdUQPN2ujZrTbNbN1aRiVWle3rvWKZV3X60ZPb7V7rcpOZDYsDih2QuoRGUtK7mZsfiaIA4cBdSFW0zARSseUHxC7iKNSn47EIQgpg0ko5Nkwosqq+vFWDZaxf+mSSlW3yTxMF0rpIeSP9DFueRzigiabZkGTR4BJREAKt5xrJgabcVGLD5Qm3DfKKSpTSIS0x1JlHdOuVTRGgsgHyVQLQjfxoRwtoqwyGtt8TSE4LLNmZcWbE3cyt8N/uzIIH5dIBybzaYNoJRy5YPRdMseTNvSDi2gH30pcIg+XqCmPCd4wKf76GhU5I/mcbLPa0c69Dw0FZO0wqTyYmxKcD3x+bQs1F+e/uWvLBzLKH+UkTZOsE7ZtabGA12Samm5qY8CJUKjPSfgOVMtRtLOug5z4QfDcXqSY8AUdc8QhEJNTypZn3P9jYPL+74uRX537uCiEFKXjsOLHbB1fvF0k4x+fN9jB0k+Yf4vPMozdr44dwdqLI/IU1z8ndC5X8ir4PDEbOBSwRIhYGO+DHwM4FrxozIucc+FioGYJh9N/SlKdGgrCOEwo73eVzLCvmBlP/hmB8+X0DSYT5fyVRv79maaSbAQwiLcdIxm+vGwdeQTofE91t0FPCK/9k/AW2TW/mb9b9up0OOPNfwA=</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VyvcxZbxCwBWoYgkTkpBcliyXlykht0GJLTuWbAhfP5IBBxPIMPPkUrt1+vSiI10xFPim02IMYk5CWloFPmVOZm0oSUydEDHCHIoCYA7Hzrg1uHfMsu6g3Ral1O82lL/BMsCzKp5qXHpYtauzmYqwYag1VEV6ZWZYs9pMuDKWQJ8yjihvKKZuVFS9qur1iVF3LN0xzHLd1KdK6RliJrCFS1lXtqRWrKEsOI8cTVsul+WlVQ7juWbquqG9Du7HeAEBUppXm4yyQHFz64/LLmDwfVzGYaBdaQWfK5c5YzKniCcxbGO5p2Lpml7XhI/LyPyXku8Ft0+9MFt2EA0pwcgnayTrMwC+CN1Sy5+HMeGL4GQShi6BVVhhFRs2/aVoRWpnAhUYxgypbIGMLdYIPIiBYig9jfoN5dd5Xcu2TmJEmRfGASsu/xsfoCn4YQSuynZpbamdD3ikUs0rwE6fYj9hJIUHOawRwsC23QR8PlTpdwweWd0TJgZ0xSQ7bZ/ewXJTjS6ZA+P/p0F7zdmAPCM/geagPiQDOkyr4/f12rTH9mDoV6J2gP9cNzIC+86ZIW/tZnkwlPkQbXY8TTu97vN7dzYMLNt7C6cseqEv7fXdZYAelk9wcdNxX9235dKzV6IWlvlQXfYhvuzev6L1CD+Rdd1+77VSv7MI/0x83BlNZ8O6pd0sFvXJC9yM/Nu6e/N8benXt+vh9C7oXiTTu+d2Ve+wtNZP+CdAxZ7Ff1m9G/Oldde2/de51UF37qtnXiRocNvuDoZd7XFtN/J09vgXbbszP05mb4D5binHoN8t9USXEP9ZzKSFuKqXuTqRFB/GgXKlKXdJ7XASIXfEdUQPN2ujZrTbNbN1aRiVWle3rvWKZV3X60ZPb7V7rcpOZDYsDih2QuoRGUtK7mZsfiaIA4cBdSFW0zARSseUHxC7iKNSn47EIQgpg0ko5Nkwosqq+vFWDZaxf+mSSlW3yTxMF0rpIeSP9DFueRzigiabZkGTR4BJREAKt5xrJgabcVGLD5Qm3DfKKSpTSIS0x1JlHdOuVTRGgsgHyVQLQjfxoRwtoqwyGtt8TSE4LLNmZcWbE3cyt8N/uzIIH5dIBybzaYNoJRy5YPRdMseTNvSDi2gH30pcIg+XqCmPCd4wKf76GhU5I/mcbLPa0c69Dw0FZO0wqTyYmxKcD3x+bQs1F+e/uWvLBzLKH+UkTZOsE7ZtabGA12Samm5qY8CJUKjPSfgOVMtRtLOug5z4QfDcXqSY8AUdc8QhEJNTypZn3P9jYPL+74uRX537uCiEFKXjsOLHbB1fvF0k4x+fN9jB0k+Yf4vPMozdr44dwdqLI/IU1z8ndC5X8ir4PDEbOBSwRIhYGO+DHwM4FrxozIucc+FioGYJh9N/SlKdGgrCOEwo73eVzLCvmBlP/hmB8+X0DSYT5fyVRv79maaSbAQwiLcdIxm+vGwdeQTofE91t0FPCK/9k/AW2TW/mb9b9up0OOPNfwA=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A71148D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A71148D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00025_PERM_UVTC_UserName_Valid_Role_Coord_CS_with_TokenType_ResetPassword_200_OK_P2" searchProperties="true" id="bfd77ea9-3b0c-4794-9a0b-b7b28b19891c"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="ceb320e1-e010-4bd6-92db-f3dde16eb21d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
tP.setPropertyValue("audience","");</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="8c1f7cbb-e654-46e3-b22c-c0cceccc1fb2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node SPL CS" id="e000e5f1-3821-4442-8590-eb66f6f96622"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCoordCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full COORD_CS" id="dc47f52a-41ad-4884-b3fa-3cd717c319bf">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("UserName",tC.getPropertyValue("UserName1"));

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;


tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID1",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="104b2610-32fe-4fa4-94f7-4aa1ae32ae7c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>coord:cs</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>181BB82A71728D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:181BB82A71728D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>uvtc_firstuser_201502_20150610_010326</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>181BB82A71738D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A71738D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:181BB82A71738D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A71738D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_010326</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_09840b6f-4877-47b8-afe9-9c2cc227776f</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_09840b6f-4877-47b8-afe9-9c2cc227776f</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VyvM4ZbywGLsCVawVTxYSTJbKyy0hN6Bgy2DJhuTrRzLgYEK43PvkUrvVfbr76EhXDIWB6bQZg5iTiJY2YUCZk1mbShJTJ0KMMIeiEJjDseO1724ds6w7aL9FKbm9pvKPbjeq+qQ+VasNy1Kr1qShoinYqo1NjE3Tsqz6VLgyloBLGUeUNxVTN2qqXld1e2zYTkV3TLNsWLU3pfQMMROxhUtZV3agNqypzDlfOpq2Xq/L60o5imeaqeuG9np36+E5hEhpXW0ryhLFrZ0/LvuAIQhwGUehdqUVfK585nhkRhFPYtjl8n/KpWu6rQkfn5HZLyXfC75Lp1G27CIaUYJRQD6R7M8d8Hnkl9rBLIoJn4c/FmHoMrAKG6xio0p/KVoR2oWBCghjhlQ2R8Yu1gimEAPFUHoauU3l12VTy7aOY0TZNIpDVlz+NzxAUwiiJfgq25e1g3Z5wBOdal0BdlyKg4SRFO4lWZcIA9tNE/DloUoPMUzJ5pYwQdANk+i0Q3hHy203emQGjP+fAR0MZxvkGQUJtHrr34vnpyUZhT5ieL22vJseWMGbv3KbGYBD58yQj3a7PCJlTqLtjs5iNXy1r7t0cPO6qvvYGL/d8c+ZDeRh6Lud9hvr+MG43795ry5GCJJGZUy9FV+Z3WT9mb7wx04D1YfXg/Vofv+4urf63Sdr2rUamF7PBwn3Fov7SYPy8WwRutPAsuHxIUjWXvQ4Cof03bsJfn/03hc+PLvdjz/pLO3fLV969kvartfJLfS8+Pn2pre4nv2pVZt5OQf4i7b9mfeSyTtgvl9KGri90kBMCfHzYiYtxFenmauzlOLDOFCutOQuqR1OIuSO+I6Y4XZtNIxOp2G2LcOqNHp6pa/XKpW+bRsDvd0ZtGt7kdmiOILYjeiUyFxScre0OQ8Qhw4D6kOsplEilI4pZyL2EEcll47EIYgog3Ek5HnBFhWW2hDbum1Ukup68pmYVfy5UUr3ER/SYdyecogLmmyaBU0eASZLAlK4Ja+ZIDbjohcrlCY8MMopKlNIhLTHUmUds9qoaYyEywAkUi2M/CSA8nK+zDqjse3XVBFmmRVHUew7eHvkfizu+N++D8LHJ9KByYI6IGYJJ24YY1/Nt6rrJ2+iffh24hN5ukRTeUzwFknx1xdXJElyouzL2uPO3Y8NhdDacVV5Nj8lOKd8fnELPRcK0NoPZoWM8qqcpGmSzaJarWixCK/Jfmi6qXmAE6FRH+NoAVTLo2gXXQg58KPkub0IMeFz6nHEIRTcKWXLC14AHjD5AnAF6TeXPi8KKUXrOGz4KVs3EK8XifjsAwc7WPoJ84P4rMUUvyZ2ItZBHlGneABwQmdyJS+Dj3PkIELGovgw+KkAp5IXjXmTcyxcEGqScPj5T0nqU1NBGEcJ5W5PyQyHmpnh5B9LcL6cvoXJZDl/p5F/f6ipJKMABvG6YySLL69bRx4BOjvQ3V3SH6TXPCe9RXStb+bvloM+HXO89Rc=</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VyvM4ZbywGLsCVawVTxYSTJbKyy0hN6Bgy2DJhuTrRzLgYEK43PvkUrvVfbr76EhXDIWB6bQZg5iTiJY2YUCZk1mbShJTJ0KMMIeiEJjDseO1724ds6w7aL9FKbm9pvKPbjeq+qQ+VasNy1Kr1qShoinYqo1NjE3Tsqz6VLgyloBLGUeUNxVTN2qqXld1e2zYTkV3TLNsWLU3pfQMMROxhUtZV3agNqypzDlfOpq2Xq/L60o5imeaqeuG9np36+E5hEhpXW0ryhLFrZ0/LvuAIQhwGUehdqUVfK585nhkRhFPYtjl8n/KpWu6rQkfn5HZLyXfC75Lp1G27CIaUYJRQD6R7M8d8Hnkl9rBLIoJn4c/FmHoMrAKG6xio0p/KVoR2oWBCghjhlQ2R8Yu1gimEAPFUHoauU3l12VTy7aOY0TZNIpDVlz+NzxAUwiiJfgq25e1g3Z5wBOdal0BdlyKg4SRFO4lWZcIA9tNE/DloUoPMUzJ5pYwQdANk+i0Q3hHy203emQGjP+fAR0MZxvkGQUJtHrr34vnpyUZhT5ieL22vJseWMGbv3KbGYBD58yQj3a7PCJlTqLtjs5iNXy1r7t0cPO6qvvYGL/d8c+ZDeRh6Lud9hvr+MG43795ry5GCJJGZUy9FV+Z3WT9mb7wx04D1YfXg/Vofv+4urf63Sdr2rUamF7PBwn3Fov7SYPy8WwRutPAsuHxIUjWXvQ4Cof03bsJfn/03hc+PLvdjz/pLO3fLV969kvartfJLfS8+Pn2pre4nv2pVZt5OQf4i7b9mfeSyTtgvl9KGri90kBMCfHzYiYtxFenmauzlOLDOFCutOQuqR1OIuSO+I6Y4XZtNIxOp2G2LcOqNHp6pa/XKpW+bRsDvd0ZtGt7kdmiOILYjeiUyFxScre0OQ8Qhw4D6kOsplEilI4pZyL2EEcll47EIYgog3Ek5HnBFhWW2hDbum1Ukup68pmYVfy5UUr3ER/SYdyecogLmmyaBU0eASZLAlK4Ja+ZIDbjohcrlCY8MMopKlNIhLTHUmUds9qoaYyEywAkUi2M/CSA8nK+zDqjse3XVBFmmRVHUew7eHvkfizu+N++D8LHJ9KByYI6IGYJJ24YY1/Nt6rrJ2+iffh24hN5ukRTeUzwFknx1xdXJElyouzL2uPO3Y8NhdDacVV5Nj8lOKd8fnELPRcK0NoPZoWM8qqcpGmSzaJarWixCK/Jfmi6qXmAE6FRH+NoAVTLo2gXXQg58KPkub0IMeFz6nHEIRTcKWXLC14AHjD5AnAF6TeXPi8KKUXrOGz4KVs3EK8XifjsAwc7WPoJ84P4rMUUvyZ2ItZBHlGneABwQmdyJS+Dj3PkIELGovgw+KkAp5IXjXmTcyxcEGqScPj5T0nqU1NBGEcJ5W5PyQyHmpnh5B9LcL6cvoXJZDl/p5F/f6ipJKMABvG6YySLL69bRx4BOjvQ3V3SH6TXPCe9RXStb+bvloM+HXO89Rc=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A71728D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A71728D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00026_PERM_UVTC_UserName_Valid_Role_Portal_CS_with_TokenType_ResetPassword_200_OK_P2" searchProperties="true" id="cb79a329-cfbc-40d5-8499-0f73694f1679"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="396def8d-bf9d-4a63-bf2a-8f7d356e3a9e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportal"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdportalCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="af98e638-5889-4796-955d-83c728a59755"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Portal_CS" id="a2e7b754-c25f-41ff-8c04-45bd87544f69"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportalCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="031f3233-4ddf-460d-9ecd-a719163ce13a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A71C08D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A71C08D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_010336</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU+o6FP4rTPejU9KWi7QjzHBRTz0KDiBbfTkT0rRE2qQmKSC//iQFKiB62Oepk9WVb33rki+5EjCJHa8tBOaSMFpaJTEVXm5tGhmnHoOCCI/CBAtPIm/Ufrj3nLLlwd0Wo+T3msY/l3bdhm5gm1M7RGa1cglN13UsE01De2rXKvWghpWrEBn2qZCQyqbhWHbNtOqm5Y5t16tYntMo27b7apQmmAuFrVzKlrEltRJNYyZl6gGwXC7Ly0qZ8Qg4lmWD54f7EZrhBBqtq01GeSDe2vqjcoARjmNURiwBV+DA5yoQ3ohEFMqM422s4LtYFrBcoHwCQaJfRrEXBz4NWb7sQsooQTAma6jr84DljAWldhwxTuQs+TYJ29LAJl4hE9lV+ssAh9TOBDpgyAU0xQzaW6whDjHHFOHS09BvGr/O61q+dcwhFSHjiThc/hkfTBc4ZikOTLFLa0vtfMATlWpdYeT5FMWZIAvc18OaQoTFtpsYnQ9VeuQ4JKt7ItSAroRmB/bpHS031eiRCAv5fxq015wNyATGGW51P55ugoflK5oOF5eNp+kHT586g/B1Mmg3cwL7zrmhaO1meTSUxRBtdtwHs/pgbqF5/W3Nork7qQ+dO/g4m73cvvRH3B8P3uu81htby2T9/ERv727jSz5v3A7H4K/H37+Xq8pdxpZDPJHcja23ztKaVC6en6PqxWTQhWS+cAcvztvwcdq3/o4G7f7FyyCpvVqv99fxJZNw5NeW/gugMYjC/jpspEyu03DFJ73lbQPN/TvQfZvfVJSBN5pFOnv8D227Mz/Kpm8Yyd1Sj4HfK92oLkH5s5hpCwnMMHf1Ui0+QmIqjZbepbXDy5TckcBTPdys7Ybd6TSc9qXdtRo9q3Jt1SqVa9e1b6x256Zd24nMhsURxS6jIdGxtORuxuZngijxBKYB5uaCZUrphPEDYg9KWPLpUB0CRgUeMyXP9qwRrQO8aixwtTaDUV2ktdAlyDZKfSYHdMDbocT8QJMd50CThxiRlGAt3HquhRpsIVUt3uEik7FdXsAyxZmSdq5V1nOqjRoQJEljrJmChAVZjMvpLM0rA8Tm65gQidxKBEoZlzDODwT4Nr3jf7tKKJ+AaAehU+pg1U184o6xd/l8ybt+8i7awbezgOjzpcoqOUEbJoe/PqdFj0kxKkViSNg77sWWP4Q4AQB+4AeOS1PECxZkL/ruMlfXghKS1q6/79Auv5ezxSLLW1qtVgBX8EAXFVgOGGGUKan7GLM5pqBAAWfdKwXxo+CF/ZBiJmd0JKHEiRrBUr484yExwkI/JHx1dlbnvlIOQqrSSbySp2zdWD2CNOMf30nIQ9pPmR/VZ8l48NmxE1h7cVSe6h0hCY30St8pH9+MB2IKlig1ZHwf/BTAqeCHxqLIBRepBmqaSfz9n5KWuaYBEWIZlX7PyA370pvzlB8p9j6dvsDk6l4898h/v/dMko8AUk9L5Z/j61vb00eARnvyvQ16WsE7Nz8p+CG71hfzV8tenY5nvPUv</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A71BF8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A71BF8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>94425ff6-2b60-4326-ada1-54c3cdb51a67</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00027_PERM_UVTC_UserName_Valid_Role_Retailer_CS_with_TokenType_ResetPassword_200_OK_P2" searchProperties="true" id="d524ee9c-deb1-428a-b2eb-c6169664c268"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="95fd35d9-b378-475c-a8b6-ab9a90e43d7f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRtlcs"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="9359a531-3318-4c16-948c-6127bb23f1ef"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="b0fd6b0b-c0e1-47c0-af79-057e5338e82c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="a69dbb96-a526-4ced-a4c0-da84e3b05a7c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A71EF8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A71EF8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_010342</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EP4rKPu4CrkQ2hAVJAq0TQX0AqdqeVk5zgS8JE5qO1z669cOkAVKezjnKZrJeOabiz/PFUdJbHttzoEJktLKKokp9wptU8sZ9VLECfcoSoB7Anuj9qDv2VXTQ7sjWsXvNrVf9TAIEHIu9MCKQHcQRDqyA6xfuvUoQjUX101bmnKeg0+5QFQ0Ndu06rp5oZuNsdXwaqZXc6p23ZlolRdgXPqWJlVT24Ja8aY2EyLzDGO5XFaXtWrKpoZtmpbxOuiP8AwSpLWuNhkVgVhra4+rIWCIY1zFaWJcGQc2VyH3RmRKkcgZbGOFX8UyDbNhSJuQk+kPrTwLoU+jtBA7iKaUYBSTD6TqMwAxS8NKO56mjIhZ8mUSlqkc67DCOrYc+kMzDqGd6egAIeNI5zNkbX09QwQMKIbKP89+U/txXteKo2OGKI9SlvBD8b/hAbqAOM0g1PkurS208x2eqFTrCrDnUxznnCxgqIY1Qxj4tpuAz3dVeWQQkVWfcDmgK67QGfvwjsRNNbpkClz8nwbtNWfj5AXFObSyfjR8m/I1u4dh5D8+Prjmau4vJ32n1ywA7BsXirK1G/FoKMsh2pxYX7/Mk4Dd0kCkmXhdfXyMu/fxyk66dhYOWSfE84vgdw8YG7Z/hj9fgvZrHry6PYE6w+zucbHK3Ml1bdZY+fXbp8HibdhGH4MLdyreBviCDHtiIu5/OqOxuMvv6reXz3eT/kPkcnfSc94u/FoQDAftxvDp8kmslx9zS9z4nYkAPHbX709BVzii15j/HkfhE3eaZTp7+A91uzs/yoPfgMVOVGPgdys3sktIfE9mSkNCPSpMvUyRDxdAhdZSpxR3eLmkOxJ6socb2XKt62vXbl9avRu3a9Z6Zr1W6zUa1o3Zvr5p13cks0FxBLGT0oioWIpyN2PzPUCceBxoCExfpLlkOq5947GLBKr49FlegpRyGKeSnuf1PMXvy2CNFyJcumHIZtM4XDhaZZiKB/rA2pEAdkDJtn1Ayc+ASUZA8bYaay7nmgtZine0yEVsVReoSiGXzM4UyXq249YNTpIsBgXUSNIwj6GazbKiMAbffG0dYV5on3vj4rJ9mdbxv10FpE1IlAFXuVyD7CKceFvsXSKnE7bMsWntJ7xz385Dou6VLKdgBG+QHP76OyVqPMoRkRn96ox+WTvcpfnZxz+fNL4BZRzXowwULshe2N3LLd8AyRqtXTffkVV9r+aLRV400HFqBpPuDVUhw7SNEeBc8tp6nM6BGqUX46xHpAR+FLzUH0LMxYyOBBKQyIGrFOIZW8MIuNoafHlRVueuJAchZekErMQpXSeWG49C/O1ShD2s7KT6UX6WKQv/duyEr704Mk+5NAhCp0pSD8j6i7nAqXRLJPWlbN/5KQengh8qyyKXWIQcqCAX8PWfiuK0poYwTnMq/K5WKPZ5tsAp1hl4f40+uSmovNztyL8vdzopRgCD3Ag5KfyrJ9pTV4BO97h6G/QLuu59R9eH6Fqf1J81e3U6nvHWHw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A71EE8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A71EE8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>930885f3-a4db-4c89-a0c5-4b5518f49e63</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00028_PERM_UVTC_UserName_Valid_Role_Dynamic_LASP_CS_with_TokenType_ResetPassword_200_OK_P2" searchProperties="true" id="b5fad8a4-944f-40f0-8ebd-6a5ff2cbe430"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="4b96c3d2-6494-4965-8560-947ae559915d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdDLASPCS"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="9b3d8ab9-b30d-49e9-a825-93469d21fe12"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DLASP_CS" id="53124101-dc95-4792-b31c-7f06c2e0044d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDLASPCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="40dfaa89-91a8-4545-b4ab-eb9426f52ee1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A724A8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A724A8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_010352</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_d3166f0b-74cf-474c-89f2-49f8b2d134b7</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_d3166f0b-74cf-474c-89f2-49f8b2d134b7</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMpIvkNgVqCIBZp0lIcHMLS9TsiyDJrZELJnb169kwAFCsuy+QHW71X36oqO+FihLbb8jBMkl5ay2zFIm/FLbMoqc+RwJKnyGMiJ8if2wcz/w7Tr00e6IUQu6LeN37FjNZgIj89LFiemqX/PKS2zT9ZKryI4tx40ulakQBQmYkIjJlmFDq2HCpgndMXR8y/Zdp97wrGej9p3kQvlWJnVobEEtRcuYSjnzAVgsFvWFU+f5BNgQWuDn/SDEU5Iho329yagMlLe39rgeE0zSFNcxz8A1OLC5joUf0glDssjJNlb8USwIoAeUTSzo5ItRnSVxwBJeireIcUYxSuka6frcEznlca2TTnhO5TT7MAkLascmWWITWy77YoBDaGc6OkCYC2SKKbK2vkYkITlhmNS+jYKW8eW8rpVHxzliIuF5Jg7F/4aHsDlJ+YzEptiltYV2vsMTlWpfE+wHDKeFoHPyoId1hjAR224SfL6r2mNOErocUKEGdCk0OrAP70jcVKNLJ0TI/9OgveZsnHxHaUHaYTFaJEVjgu7VFenf/WoM0MIFeW/MeKsEsG9cKqrWbsSjoayGaHPidbTOMrh2X5Z3kd1fPbjkJg0HT/BiCMbD9br5szuN0ucBTW37KYJ3mRx2+j+eh/Br7D1fDkdy/s15+PX0lxfdBqvwwRqtxi+XV5KNEy+cZ27mxtmFE/WC+8u8gbzkcuhQ8OjkURpEt8WFAHfwV2/YGEXsW+/CW60fntgK3jzy3g/SmcCnlzs4/vMcdP7+KhIWtKp09vAf6nZ3PiyiPwTLnajHIOjW+qpLSH5OZlpDYzMpTf2ZJh8hCZNGW5/S3OEXiu5o7KsebuSeCz0LWp7tNO1+56bXgy60+rADG54HlbAjmQ2KI4i3nCVUx9KUuxmbzwHizBeExSQ357xQTCeMTzx2kUS1gI3UJeBMkDFX9Dzh7mr92pxnr8ksK7iTQKu5aLwgo/bA5ZAN804iSX5Iyc0DSh4RTGeUaN7WYy3UXAupSvGK5oVMrfoc1RkpFLPnmmR9271qAEGzWUo0UJDxuEhJfTadlYUBYvNvmwiLUtsddMLH37fh7/I+gA+zO/62K4Syiak2EDqlG6KaSU48Mc4un4/z9vbz3rnvFDHV10tVVeYUb5AcfnobFj0l1aSMeuMyrR3uyvy84291ee8AfIINHJelihfP6V703TuuXgTFIe1db1+RVX+tF/N5UbbTdR2QK/dAFwpAG4QEF4rlVmP+QhiovICznpQK+FHwSn8IsZBTFkokSabGr1aKZ+wQIRF6hwjUtVmeu6AchFSlk2QpT+luU7X/aMSfrkjYx9pOqR/V34Ln8VvHTvjai6PyVCuEpGyiJf2crD4YD8yVW6qIkOf7zk85OBX8UFkVucIi1UBFhSQff6lphmsZCGNeMBl0jVKxz7olTrmaEf/N6J2bktirTY/++6pn0nIEMFH7oaClf/1g+/oKsMkec2+DniZvt/8ZeR+ia79Tv9fs1el4xtv/AA==</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcto6FP0Vxn3MGN+gMZ7AjANJ6zSEhNtJ+9IR0gaU2LKxZAP9+koGHCAkh3OePNreWnvti5Z0xVEU2p7POaSCxqyyikLGvcLa1LKUeTHilHsMRcA9gb2B37337Krpod0WrRJ0mtpv07LqxCJEJ3VnqtdMy9Yb4GIdnOnXGgabOGBJV84zCBgXiImmZptWXTe/6mZjaDU8x/RqtapTc39plTGkXGJLl6qpbUmteFObC5F4hrFcLqtLpxqnM8M2Tct47t4P8BwipLWuNhkVgdLW1h9XCWAIQ1zFcWRcGQc+V4R7AzpjSGQpbGORj2KZhtkwpA/hdPZFK/cCCdg0LpZtxGJGMQrpH6Tq0wUxj0nFD2dxSsU8+jAJy1TAOqywjq0a+6IZh9TOBDpgmHKk8zmytlh9mEIKDENl1A+a2pfzulZsHaaI8WmcRvxw+d/4AMshjBMgOt+ltaV2PuCJSrWuAHsBw2HGaQ4PalgThIFvuwn4fKjKYwpTurqnXA7oiit2xj69o+WmGh06Ay7+T4P2mrMBGaMwg5bfdoPlq/GrHvu92w5dO5fuYtS/WCbWslkQ2HcuDGVrN8ujoSyHaLMDzf64sP6HTBaP0F6LhOM7duH38l+d9KdJx6Mfd+tJr//q2MnlyGl02zTqQiO7eJ6Il8tuEI46z2Ltu/e9V3f8I78LxqR7kV/Uv8N3WL7ek1WXhwkfrQaPkx8/v9fMdPgyesq+/Ql+Er/LnQdn6D51XbP/NO8PHePbsl9/GRuLXo/frfoPzLzNaD5+Wo6u2438xm+W6ezxP7Ttzvwgm7wAFrulGoOgU7mVXULiczFTFkr0aeHqJUp8uAAmtJbapbTDy6TcUeLJHm7WlmtdX7u2f2nXfLdjOjdm3XFuGg3r1vSvb/36TmQ2LI4otmM2pSqWktzN2HxOEEceB0Yg1fM4k0rHtU8QO0igSsD68hDEjMMwlvJsTaLZMprNF7U0XZM5iyEW9uUKEq3yEIse66X+VEB6oMm2faDJfcA0oaCEW801l4PNhazFAuWZCK1qjqoMMintqVJZz665dYPTKAlBMTWimGQhVJN5UlTG4JuvrSPMC2v/Zlictg/zOv63K4H0IVQ5cJXLNcg2wonLxdklcjphyxya1n7CO3g/I1QdLFlPkVK8YXL4621M1HyUM9K59wePv9uD39aOebnhPABZkvc7jU9oGccVKQORnO6F3V3e8hqQwtHa9XOBrOqimuV5VrSwVnOMVMIbqkaGaRsDwJmUtvUwfgVmlCjGWfdISfwoeGk/pJiJORsIJCCSI1cplmc8HAbA1cMhkGdlde6r5CCkLJ2AlThla4fy0aMYf/ouwh5WftL8KD/LOCVvHTuBtRdH5infDYKymVqpO2T9wVzgWMJSqX5xug9+CuBU8ENjWeSSi5ADNckEfPynomStqSGM44yJoKMVhn2pLXiKdQLem9M7mELNy+cd/ff3nU6LEcAgH4WcFvjqlvbUEWCzPbneBv1AsRufKfYhu9Y783vLXp2OZ7z1Fw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A72498D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A72498D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b54ca523-aea1-45b1-9f0f-eec821a32f9c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>31d2392e-5053-43d4-b375-6fa36d10c41a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00029_PERM_UVTC_UserName_Valid_Role_Linked_LASP_CS_with_TokenType_ResetPassword_200_OK_P2" searchProperties="true" id="b2d4a15e-039d-49be-9746-27e645f2986c"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="3c948ba7-614b-442b-99d9-756f3c9913c1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdLLASPCS"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="b6a97cc3-2f77-4d91-8159-c7ad6681e359"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node LLASP_CS" id="858099c2-38b7-426c-8d88-c8ece0a1a152"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdLLASPCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="05e34a95-fab6-4aab-bf97-690773557c62"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A72A58D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A72A58D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_010358</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_25489f44-17ec-4d5e-857a-1692f16e37c1</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_25489f44-17ec-4d5e-857a-1692f16e37c1</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtc6o6EP4rDufjGQwg0spUZ2y1vfRoa9V2es6XTgyLpIWAJPjSX38SVKrW9nrvJ2aXze6zL3myFxzHkeW2OYdM0IRVlnHEuFtom1qeMTfBnHKX4Ri4K4g7avd7rlU1XLw9olW8TlN7ser2eSOwbd08A6Lbfh308/oZ1k2nYQWmA7UzYkpTznPwGBeYiaZmGWZdNxzdsMdGzTUtt+5UnXPnj1Z5goxL39KkamgbUEve1EIhUhehxWJRXdSqSTZFlmGY6LnfG5EQYqy1LtYZFYGy1saeVH0gEEWkSpIYXaA9mwufuyM6ZVjkGWxi+V/FMpDRQNLG53T6QyvPgu+xICnEK8wSRgmO6DtW9emDCBO/0o6mSUZFGH+ZhGkoxzosiU5Mm/3Q0D60Ex3tIcw41nmIzY2vIQSQASNQeRx6Te3HaV0rjo4zzHiQZDHfF/8bHmBziJIUfJ1v09pAO93hkUq1LoC4HiNRzukc7tSwppgA33QTyOmuKoMMArrsUS4HdMkVOrQL70BcV6NDp8DF/2nQTnPWTp5wlEPLWfajX7aNXi/R058ba9q56d/e1W7y1XO3WQDYNS4UZWvX4sFQlkO0PjHqvgdzMrl+WDzdD42JPehl9HVgvUe3d8Zg2vZu/9w/PE5Ci9z0ZxZO01iw9uO8e39pkfPx9NZ6fnfC3/NZ5DQSb2nVOz9XNAyfZ72nZf3ZGKzOnN577ddbit6828fOeNiBIO+fRzTzLmt4MrmJB7+t3PAezv65f/s5OGuntXD11glulsyvD+/qVw+/+rOptejd1W3SLNPZwb+v2975UT55BSK2ohoDr1O5ll3C4nsyUxrq60Fh6qaKfLgAJrSWOqW4w80l3VHflT1cy13baJiG2bBqjnXdvux2Ddswr422UW80DClsSWaN4gDiVcICqmIpyl2PzfcASexyYD5k+jzJJdNx7RuPHSxwxWNDeQkSxmGcSHo2sUii2AreZ+DgeBKbxDAj4UCoVe4Scc/us3YgINvnZGePk4dAaEpBEbeaay4HmwtZixme5yIyq3NcZZBLas8Uy7qWfV5HnMZpBAopihM/j6CahmlRGcTXX0vHhBfaXq89GrxcjV6KC4G+TO/w37YS0sanyoCrlC5BdhOOvDH2Np+v827s5r113859qu6XLKvIKFkj2f/1MS1qTMpRGXbHRVpb3KX5acc/6vLZAfoGGzosSxnPn9Od6NuHXD4JkkRa297OsFmdVfP5PC/aads1lEn3SBUKGRYaAcklza3GyRswVHpBJ70pJfCD4KV+H2IuQjYSWEAsx69SiCcsESPgaonw5L1Znrqh7IWUpROwFMd0V5FcgBTib3ck4hJlJ9UD+Vkkmf/RsSO+duLIPOUOISibKkm9J6svxoMk0i2VTJhku86POTgWfF9ZFrnEIuRATXIBX/+pKIprapiQJGfC62iFYpd2C5xilYL7YfTJTcHs5apH/33X02kxAgTkgshp4V+92K66Amy6Q92boMfZ277+jr330bU+qT9rdup0OOOtvw==</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuI4FP0Vyv04ZeSNBFyBKrMl9JClge6k+yUl5ItRx5aMJRs6Xz+SWQKEZJh5cun66txzFx3pSuAkdvxACMgk5ayySmIm/NLaNPKM+RwLKnyGExC+JP44uB36TtXy8XaLURl0m8azM7VdTKyZ6UxnnunhOjbrdbtu2jZ4nteAGr6YKlchchgwITGTTcOx7JppXZhWY2I3fNfya1b1wq3/Mio/IBMKW7lULWNDaiWaxlzK1EdouVxWl26VZxFyLMtGT7fDMZlDgo3W1TqjMlDW2viTaggE4phUCU/QFTrwuQqFP6YRwzLPYBMr/CiWhawGUj6hoNEXY7cXwgGb8XLZwYwzSnBMX7Guzy3IOQ8rQRzxjMp58mEStqWBTVgRk9ge+2KgQ2pnAh0wzAQ2xRzbG6wRzCADRqDyfTRoGl/O61q5dZJhJmY8S8Th8r/xAVZAzFMITbFNa0PtfMATlWpdAfEHjMS5oAXc6WFNMQGx6SaQ86EqDxnM6GpIhRrQldDs0D69o+W6Gl0agZD/p0F7zVmD/MBxDq1LO1sBFqF1b4s2dX8ydP/ouV+/Xg+8Zklg37k07Fq7Xh4N5W6I1jteklVaa//6GSXDpz7vRcUTd/uy8+okkxzV8DcZz9HLInKKxt1NGlwPXx/r0yiZ3kZDmBQ8nE8LsVg+9W8eSfvbIMTTfHQN00evG/x13XtqNPhFe+EOnIuCzObp7dPNZa3fCRbsdWp18d3f2c1DNHF7/DZ8sTrkddFuj8TlvfUtgH4+mTo26i3i3/GLJ3jj+3CT7hH/Q9v2zI/z6W8gcrvUYzDoVvqqS1h+LmbaQkNzVrr6qRYfIYFJo6V3ae3wcyV3NPRVD9dru26323UnuHSCWr1ruT2r5rq9RsPuW0G7H9S2IrNmcUSxw9mM6lhactdj8zlBkvgCWAiZWfBcKZ0wPkHsYokrAzZSh4AzAROu5FlivIDXBo1nNWkXy5RHAMuitjIqd1zes/ssmEnIDiTZcQ4keQSEphS0buuxFmquhVSlWOAil7FdLXCVQa6UPdMi6ztevYYETdIYNFGU8DCPoZrO07IwSKy/jomJKK2j3qQ8bB+mdfxvWwHlE1LtIHQubVBdhBN3i7dN5HTCtjWx7P2Et/BBHlJ9rlQ5ZUbJmsnhr7cp0eOxG5HhMBg/PHfGz/aW+W7DeQCqJO93ok9ooeOK7AKFBd0Lu7271S2gdKO17ecC29VFNS+KvGyh57koU/BI1whZDhoDyZWy/ZnwF2Boh4LOukZ2xI+C7+yHFHM5Z2OJJSRq5Crl8ox3wxiEfjcM1FFZnfsoOQipSidhJU/ZOrF682jGnz6LiE+0nzI/qM+SZ+Fbx05g7cVReapng6Qs0it9hfz5YC4IV7BUiR/P9sFPAZwKfmjcFXnHRaqBmuYSPv5T0arWNDAhPGdy0DVKw77SljzlnxT8N6d3MKWY71539N+fdyYtR4CAehMKWuLrS9rXR4BFe2q9CfqBYHufCfYhu9Y783vLXp2OZ7z1Dw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A72A48D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A72A48D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57925f3d-0445-48fc-849a-c3d2a5ba6773</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0b9bbf2d-1b36-4fc2-84c3-ff96750d36d4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00030_PERM_UVTC_UserName_InValid_Role_dsp_with_TokenType_ResetPassword(Negative)_403_FORBIDDEN_P2" searchProperties="true" id="83fc7c0c-65df-42c7-a9f1-e24bae0f9fdc"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="9d6b0204-db79-4f26-b551-ce83fccce362"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdDSP"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="7c3296c9-4675-4b6a-903a-3f7149f93984"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DSP" id="bb98554f-68c7-423a-b7fa-51381e5cc587"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDSP"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="7db5773e-74d1-4452-9185-34bafcf8e14e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","API_NOT_AUTH");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>DSP</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A73008D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A73008D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_01044</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7cf2eee5-74d0-4285-85af-7d7ac49bb376</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7cf2eee5-74d0-4285-85af-7d7ac49bb376</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZrU/I6EP4rTP3olKblJh1hBgSUV1CkeDl+cUK6QLSk2CRQ/PVvUqACgodzPnV2u9l99pIne8nxNHDcGucQCRqyTDwNGHcTbcWQEXNDzCl3GZ4CdwVxvVq34zpZ5OLNESPTblSMtxIZOQBQMEt5H5l556JgXhTwyCz5JUzy5eEwVyoqU84ltBkXmImK4SC7YKKiifIDlHPtnIvKWVRwXo3ME0Rc+VYmWWSsQcW8YkyEmLmWtVgssotcNozGloOQbb10Ox6ZwBQb1ctVRkmgqLq2J1kfCAQByZJwal1aOzaXPnc9OmZYyAjWsfxjsZCFypay8TkdnxnpWfDbbBQm4hVmIaMEB/QL6/p0QUxCP1MLxmFExWR6NAkbaccmxMQkdp6dGdYutBMd7SCMODb5BNtrX30YQQSMQOax364YZ6d1LTk6iDDjozCa8l3xv+EBNocgnIFv8k1aa2inOzxQqeolELfNSCA5ncOdHtYZJsDX3QRyuqtML4IRjTuUqwGNuUZnbcPbE1fVaNAxcPF/GrTVnJWTJxxIqF4/3T6Tx5fzz4fZ3WPz3SksR2joPNSa81olAbBtnCjS1q7EvaFMh2h1ArxSFN+wXi/8Z/TQjW87z4XQe6nbxcXDw6Oce89+roTH6F42/tAb64/dv/vq3XDvWj4/99GQ3BSXUffuCTvF61bzY3z90qkPeg/n56173BtZ6JbYdmcwuBYcFT+KzXr/tTYuXInybXsg6h9P/fg915Sv9flX9wv79s3kPe4t3u9a17LW6or2+Dz2lqV87PHBx7lPKmk6W/h3dZs778nhOxCxEfUYtBuZluoSFr+TmdZQ3xwlpu5Mkw8XwIRR1ac0d7hS0R31XdXDldzMo7KN7LKTKzqtWr3ZRHlkt1ANFcplpIQNyaxQ7EG8CtmI6liacldj8ztAMnU5MB8icx5KxXTc+MVjAwucabO+ugQh4zAIFT3bHN5LAuconjmF2dAPhl9EytJyaWTuQnHP7qPaSEC0y8nFHU7uA6EzCpq49VxzNdhcqFp84rkUgZ2d4ywDqag90izrOvmLgsXpdBaARmpNQ18GkJ1NZkllLL76OiYmPNE2vF5y247mtf9vUwJl41NtwHUudVBthB+Pi+MWNokcT7i8nfDGfU36VF8sVU8RUbJCsvvre0z0fKQz0m8O3q68N3uDOzU/7bgqyM+T1i+grP16pIH8Od0Ku3m61SOgaKO66eYntrOfWTmfy6SB+XzOipR7S1fIQo7lAZGK2JaD8AOYlXqxTnpFUuB7wVP9LkQpJswTWMBUDVwmEU9YGzzgem1oq5sSn7qT7IRUpRMQi0O6q0CtPBrxr1sRcYm2U+qe+izCyP/u2AFfW3FUnmprEJSNtaRfkOWRuSChcksV94XRtvNDDg4F31WmRU6xCDVQQyng+J+MJrWKgQkJJRPthpEotok2wSmWM3C/jX64Sbg8Xe7ov293Jk1GgIBaCTlN/Os32tVXgI23yHod9DBf51u/8fUuuuoP9U/NVp32Z7z6Fw==</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU+pIEP4rVM6jFXIh4ZISqqKAoiKUQdZzXrYmkwZGkxnMTCD663cmSAREl92nVHd6ur++zDd9zlES257POaSCMFrJk5hyr9C2tSylHkOccI+iBLgnsBf4wzvPrpoe2h7RKoNuW/sbNZ3Qth3Q3Zpp6o47C/XQrEV6C0LcCOs1HEWmNOU8gwHlAlHR1mzTcnWzrputidXyaqbnNqoN1/6jVaaQculbmlTlqQ2onLe1hRBLzzDW63V1XauydG7YpmkZT8O7AC8gQVrnfJNRESjtfNjjagQY4hhXMUuMc2PP5jziXkDmFIkshY9Y0XexTMNsGdIm4mT+SyvPQjSgM1aIl4gySjCKyTtS9RmCWLCo4sdzlhKxSL5NwjKVYx1yrGPLob80Yx/aiY72EKYc6XyBrA9fDzCDFCiGyuPDoK39Oq1rxdFJiiifsTTh++J/wwN0BTFbQqTzbVof0E53eKRSnXPA3oDiOONkBfdqWJcIA//oJuDTXVXGKcxIfke4HNCcK3TGLrwDcVONLpkDF/+nQTvN2TiZojiDTmZ3+y9RIm4cyKPYOEsfp9i6zdxJjtsFgF3jQlG2diMeDGU5RJsTPg2hPvSNZjJDDglSh9VvLp9mEX8yw+YLHyWudT0KZ+vF2fS3E+Rngf+6yH8vh5yOM6sxr5Pb5HJxx/zhoz1kTq/RGk/vm/l7r/eUj3pO/eJ6lL1eXZFrdDl33qe9MT3zn68a89u3JOzn7+iG/VV/t4NwFt9eNZ97/eHZOLtaTI2GsbzNH1Z95sLzn5dwHCR1v12ms4N/X7e980EWPgMWW1GNwaBb6csuIfEzmSkNifRZYeotFflwAVRoHXVKcYeXSbojkSd7uJGtpnVx0bT9hrw4za5Z65lurdZrtay+6V/0fXdLMhsUBxAvGZ0RFUtR7mZsfgaIE48DjSDVVyyTTMe1Hzx2kUCVAX2Ql4BRDhMm6dlqJYLVW2zdYknGX5IXtMqdmmu5WuWeiREdpf5MQLrHyba9x8kPgMmSgCJuNddcDjYXshavaJWJ2KquUJVCJqk9VSzr2U7TNThJljEopEbCoiyG6nKxLCpj8M3X1hHmhfahNylu27d5Hf7blkDaREQZcJXLBcg2wpHHxdkmcjxhy5yY1m7CW/d+FhF1sWQ9RUrwBsn+r88xUfNRzkg3GG8hl5annZS1+HrS+AGPcViKMlC0Ijtht6+25H/JGJ1tI1+RVX2tZqtVVvTOcWpGKt0bqjiGaRsB4Exy2tuEvQA1Si/GSQ9ICfwgeKnfh5iJBQ0EEpDIWasU4gkbQwBcbQwDeUnyU9eRvZCydAJycUx3GcttRyH+cSHCHlZ2Uj2WnzVLo8+OHfG1E0fmKRcGQehcSerxePtmLjCTbomkPZbuOj/m4FjwfWVZ5BKLkAMVZgK+/1NRfNbWEMYso2LQ1QrFLscWOMXbErxPoy9uChov9zry74udTooRwCC3QU4K/+p59tQVoPMdnv4IepSq7X7/J6reR9f5ov6q2anT4Yx3/gE=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A72FF8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A72FF8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>930885f3-a4db-4c89-a0c5-4b5518f49e63</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c8221854-35d6-498d-a02d-421784be1022</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a8d70240-77fd-4efe-ba84-308dc9d6ea40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00032_PERM_UVTC_UserName_InValid_Role_dsp:customersupport_with_TokenType_ResetPassword(Negative)_403_FORBIDDEN_P2" searchProperties="true" id="b3471de3-63aa-44aa-be32-b763b1d021a2"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="1dbfb269-f4e9-4a97-9745-468cb50f0a94"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdDSPCS"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="22bb9697-bf78-45c9-9992-b6fcf4fd7a84"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DSP_CS" id="d4e19862-2f66-4059-ab65-1426effec2a7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDSPCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="e94b355f-efa1-4d32-87dd-ca74a6c3cddb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","API_NOT_AUTH");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>DSP_CS_1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A73598D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A73598D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_010412</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_e18057e5-5417-4ff3-bf6b-69a70647631a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_e18057e5-5417-4ff3-bf6b-69a70647631a</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtc6JIEP4rFvvxChkQNVDRKhN0z2zMi7pZky9b49DoJDAgMxCyv/5mUIkak/PuE9VNT/fTL/NMn3MchZbb4xxSQWNWK6KQcbfUdrQsZW6MOeUuwxFwVxB30htdu1YduXh7RKsNvY72G8wz1GxDU2/aZlu3g6Chz4PWXG85uI1adrvVMLE05TyDIeMCM9HRLGQ2ddTSkT1FDddsuA2r3m6cPWm1B0i59C1N6kjbgCp4R1sKkbiG8fr6Wn9t1ON0YVgImcZsdD0hS4iw1j1fZ1QGSrsbe1L3gUAYkjqJI+Pc2LM597k7oQuGRZbCJpb/WSxkIMeQNj6ni29adRb8IQviUrzELGaU4JD+wao+IxDL2K/1wkWcUrGMPk3CRMqxDgXRiWmzb5qxD+1ER3sIU451vsTmxtcYAkiBEaj9HA872rfTulYenaaY8SBOI74v/jc8wHII4wR8nW/T2kA73eGRSnXPgbhDRsKM0xxu1LAmmADfdBPI6a5qdykEtLimXA5owRU6YxfegbiuhkcXwMX/adBOc9ZOHnCYQfdqOUbBG5/Nxk+jx1l8ERTW1fVNf14Mep0SwK5xqahauxYPhrIaovWJZd8ulvf2ZTJyfg0Ie22Pel56cTF4mA3t8c8VdV6Mh1Vw07yLBmePzavwBzDAPX+BLoZP+QweErPJHPJwN5obc7Jq95P0sYBbw2l9n9K/2zcYwszDTx61b/Gv76xx9eev9mNm5cm4GfainJH8fvbMbp6T2x8o7GFvMvX6hdMIw/vs2rlG9+ildeutgqE3fzrrVOns4N/Xbe/8JJs/AxFbUY3B0KsNZJew+JrMlIb6elCauokiHy6ACa2rTinucDNJd9R3ZQ/Xct9GjolMx2q0rEHvot9HNjIHqIeajoOksCWZNYoDiJcxC6iKpSh3PTZfAySRy4H5kOp5nEmm49oXHj0scG3IxvISxIzDNJb0bL4UrB0KBu3EzBv5i8if7ZWwszOtdhOLW3ab9gIB6T4nt/Y4eQyEJhQUcau55nKwuZC1WOE8E6FZz3GdQSapPVUs61r2WdPgNEpCUEiNKPazEOrJMikrY/D119Ix4aXWm9z9vpz8Lq+D8Wlyh/+2dZA2PlUGXCV0AbKXcOSFsbbZfJ61s5v11n0v86m6XbKoIqVkjWT/1/usqCGpBmXcn5ZpbXFX5qcd31bl43HjC2TGYVGqaH5Od2JvH3H5HEgC6W77usJmfVXP8jwrW2nbDSOV7g1VJgNZxgRIJinubRq/ADMqL8ZJ70kF/CB4pd+HmIklmwgsIJKjVyvFExaICXC1QAzlnSlO3U72QsrSCSjEMd1lKJcfhfjL/Yi4RNlJ9Z38vMap/96xI7524sg85f4gKFsoSb0lb58MB4mlWypZME53nR9zcCz4vrIqcoVFyIGaZwI+/1NT9NbRMCFxxsTQ00rFLuWWOMVbAu670Qc3JatXax799z1Pp+UIEJDLIaelf/Vau+oKsMUObW+CHmdue/AVc++j635Qf9Ts1Olwxrv/AA==</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+o6EP4rTM/n0qa02naEGV7UU0XkAjIevzgxTSHaJjVJAf31JylQAV8u937q7Haz++xLnuyZgFnqhG0hMJeE0doqS6kIS23TKDgNGRREhBRmWIQSheP2TT906nYIt0eMWtRrGo++F+DgBAQm8OwT033yPNMHp4lpB76TgJNTgKCvTIUocESFhFQ2DccGnqms7WACgrABQrtRD3z3wahNMRfKtzKp28YG1Eo0jbmUeWhZy+WyvmzUGZ9Zjm0D6/6mP0ZznEGjdbbOqAzEWxt7VI8xwmmK6ohl1pm1Z3MWi3BMZhTKguNNrPi7WLZlB5ayiQWZ/TKqsziOaMJKsQspowTBlLxDXZ8bLOcsrrXTGeNEzrNvkwC2dmziFTIRcOkvw9qHdqSjPYRcQFPMIdj4GuEEc0wRrt2Noqbx67iulUcnHFKRMJ6JffG/4cF0gVOW49gU27Q20I53+EWlWmcYhRFFaSHIAg/0sOYQYbHpJkbHu6oNOU7Iqk+EGtCV0OisXXgH4roaPTLDQv6fBu00Z+1kCtMCt/6QadBA004+cNHpLb98DXqTwYO37Ly4zRLArnGpqFq7Fg+Gshqi9YnZNZyz5YjHr8tXVNy9LEfJkviXL/1rMAJ8fnUzSB5QdzC9SwgLGk83p8UtnOTP98K7v/aJdeL0c9s6H4N7/H469KY+u7sQFkzA03V61RHd3/P84tIf3wTvCUgWoGfTaOL9zl68q4ndi4a53SVz12336MD/0x/SAY1nk7fhw/SdNXAvjq5W/7B3GlkrNJnfNat0dvDv67Z3flw8PWMkt6Ieg6hXu1BdgvJnMtMaEptJaRrmmnyExFQaLX1Kc0dYKLojcah6uJaBDzod32mfNrzA79mNc9trNM6DAFzY7c5F29uSzBrFAcQuownRsTTlrsfmZ4AoCwWmMebmghWK6YTxg8celLAW0ZG6BIwKPGGKnmX+5D4vSHziOO/A4S53Mm82e3l2jdqAyVt6y9uJxHyPkx1nj5NHGJGcYE3ceq6FGmwhVS1e4aKQKagvYJ3iQlE71ywbOq7vWYJkeYo1UitjcZHiej7Py8pYYv11TIhEqR2dT8rb9m1eh/+2JVA2MdEGQufSwaqN+NPjYofeNpGvEwb2xAa7CW/dt4uY6Iul6ik5QWsk+78+xkTPRzUjvfHwsTt+BFvclflxx1VBPp+0fgBlHdajChQvyE7Y7dOtHgFFG61tN18hqL/Wi8WiKBvoug2LK/eWrpBlO9YYo0IR29uEvWBqVV6so16RCvhB8Eq/D7GQczqWUOJMDVytFI9YG8ZY6LUhUjdldexOshdSlU7ilfxK103VyqMR/7gVoRBpO6Ueqs+S8fijY1/42omj8lRbgyR0piX9grx9MxeIKbdEcR/ju86/cvBV8H1lVeQKi1QD9VRI/P2fmia1pgERYgWVUc8oFbtEW+KUbzkOP4w+uSm5vFruyL9vdyYpRwBhtRIKUvrXb3SorwCd7ZD1Jug3fO3/xNf76Fqf1J81O3U6nPHWXw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A73588D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A73588D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>930885f3-a4db-4c89-a0c5-4b5518f49e63</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c8221854-35d6-498d-a02d-421784be1022</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a8d70240-77fd-4efe-ba84-308dc9d6ea40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>60d0c277-a9e2-413c-acfa-fba360ade9bd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bbaf77dd-7e4a-4afb-a071-c5af692dba21</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00035_PERM_UVTC_UserName_Valid_Role_DECE:CS_with_TokenType_UnlockMe_200_OK_P2" searchProperties="true" id="ba4662ff-562e-4dd4-aff1-da80500d9911"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="df314737-a385-4028-af11-cf6bd7b228ae"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));

tP.setPropertyValue("audience","");</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="67e76282-e14b-4819-88c9-cc0c3eea9783"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DECE_CS" id="2075c367-709b-4f84-80ff-08c03ffc2502"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDECECS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full DECE" id="ae84145a-fbb7-440c-a419-8589503d0e26">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("UserName",tC.getPropertyValue("UserName1"));

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;


tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID1",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="3963de40-f22d-4426-b58e-c3023e819e7d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>181BB82A73AB8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:181BB82A73AB8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>uvtc_firstuser_201502_20150610_010418</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>181BB82A73AC8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A73AC8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:181BB82A73AC8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A73AC8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_010418</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_e877de92-02cd-4fc2-8c79-d6a18b5b8b2c</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_e877de92-02cd-4fc2-8c79-d6a18b5b8b2c</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynmcMr4AwbgCVVySjGdCyAJhMvOyJeQGFGwZJBkMX7+SAQcTyLL75FK71X26++hIdxyFge02OQcmSEQLSRhQ7qbWuhYz6kaIE+5SFAJ3BXYHze6TaxdNFx22aAWvU9f+Bqda9aFm66aNfb08wbbu4GpN92+R5YwrY2dsY+nKeQwe5QJRUdds06ro5q1u1oZWzS1ZrlUqVu3qH60wAsZlbOlSNLU9qITXtZkQC9cw1ut1cV0qRmxq2KZpGW/dpwGeQYi0xt2uojQRa+z9cdEHDEGAizgKjTsj53Pnc3dAphSJmME+l38pl2mYNUP6+JxMb7RsL/genUTpso1oRAlGAdki1Z8uiFnkF5rBNGJEzMKLRVimCqxDgnVslemNZuShXRkoh5BxpPMZsvax+jABBhRD4bXv1bWb66aWbh0yRPkkYiHPL/8bHqArCKIF+Do/lLWHdn3AM51q3AF2PYqDmJMVPCuyLhAGvp8m4OtDFV4YTEjyRLgkaMIVOuMY3sly140OmQIX/2dAR8PZBRmhIIZGgn2zCxNvix7HG2f1fWF+expvoPN7O6+nAI6dU0M22t3yhJQZiXY7EKzEizHf0k759se2e/vjred1fm2SvyqPY38djeYQLrasFjscTUbCrr7h39uN71s/32etX0OS2KO3zbJfmVZfeved+B29w+Nyjp1Z66nbjeK2M6jgP8vx97g/Y/PusFr5Vrv1XroGE+2kt4SHwcrwtmw0ee0Nfo6XdNHm6yTA8+FzaxmW+auR2D9u3+zwtUu9cj0r5wh/3nY484N4/A5YHJaKBl6n8CCnhMTXYqYsxNcnqau7UOLDBVChNdQupR1uLOWO+K6c4W5tOVar5djNaqnZdjpm6d6slEr3tZr1YDZbD83KQWR2KE4gtiM6ISqXktwdbb4GiEOXA/WB6asolkrHtS8idpBABY/25SGIKIdhJOXZkj/LOKmG1rtTciasHHExDR0btMJzJHq0x5oTASynybad0+Q+YLIgoIRb8ZpLYnMhe7FEq1gEVnGFihRiKe1Mqaxrl52KwUm4CEAhNcLIjwMoLmaLtDMG331tHWGeWtO24t2Ju1jb6b9DG6SPT5QDV/W0QI4Szlww5qGY80Vb5slFdAjfjH2iDpfsqWAE75Dkf31QRXEk48m+qgPszPvUkItsnBaVJfNXBGeEz65tqeby/DcOY1kiq7gsxqtVnE6iXC4ZTIY3VJmGaRsDwLFUqM0wmgM1sijGVddBBvwkeWbPQ4zFjA4EEhBK5hTS5RX3/wC4uv89Sfnk2sdFLqVsnYBEnLO1A/l2UYi/fN5gFys/aX6Rn3XE/I+JnYl1lEfWKa9/QehUrdRVsLnADRzJsESKWMSOg58LcC553pg1OcMiJKHGsYDLfwpKneoawjiKqfA6Wmo4VswUp9gswP1w+hQmFeXslUb+/Zmmk5QCWKqP9E/jq8vWVUeATo9Ud5/0gvC2vhLePLrGJ/Nny1GfTjne+Ac=</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynmcMr4AwbgCVVySjGdCyAJhMvOyJeQGFGwZJBkMX7+SAQcTyLL75FK71X26++hIdxyFge02OQcmSEQLSRhQ7qbWuhYz6kaIE+5SFAJ3BXYHze6TaxdNFx22aAWvU9f+Bqda9aFm66aNfb08wbbu4GpN92+R5YwrY2dsY+nKeQwe5QJRUdds06ro5q1u1oZWzS1ZrlUqVu3qH60wAsZlbOlSNLU9qITXtZkQC9cw1ut1cV0qRmxq2KZpGW/dpwGeQYi0xt2uojQRa+z9cdEHDEGAizgKjTsj53Pnc3dAphSJmME+l38pl2mYNUP6+JxMb7RsL/genUTpso1oRAlGAdki1Z8uiFnkF5rBNGJEzMKLRVimCqxDgnVslemNZuShXRkoh5BxpPMZsvax+jABBhRD4bXv1bWb66aWbh0yRPkkYiHPL/8bHqArCKIF+Do/lLWHdn3AM51q3AF2PYqDmJMVPCuyLhAGvp8m4OtDFV4YTEjyRLgkaMIVOuMY3sly140OmQIX/2dAR8PZBRmhIIZGgn2zCxNvix7HG2f1fWF+expvoPN7O6+nAI6dU0M22t3yhJQZiXY7EKzEizHf0k759se2e/vjred1fm2SvyqPY38djeYQLrasFjscTUbCrr7h39uN71s/32etX0OS2KO3zbJfmVZfeved+B29w+Nyjp1Z66nbjeK2M6jgP8vx97g/Y/PusFr5Vrv1XroGE+2kt4SHwcrwtmw0ee0Nfo6XdNHm6yTA8+FzaxmW+auR2D9u3+zwtUu9cj0r5wh/3nY484N4/A5YHJaKBl6n8CCnhMTXYqYsxNcnqau7UOLDBVChNdQupR1uLOWO+K6c4W5tOVar5djNaqnZdjpm6d6slEr3tZr1YDZbD83KQWR2KE4gtiM6ISqXktwdbb4GiEOXA/WB6asolkrHtS8idpBABY/25SGIKIdhJOXZkj/LOKmG1rtTciasHHExDR0btMJzJHq0x5oTASynybad0+Q+YLIgoIRb8ZpLYnMhe7FEq1gEVnGFihRiKe1Mqaxrl52KwUm4CEAhNcLIjwMoLmaLtDMG331tHWGeWtO24t2Ju1jb6b9DG6SPT5QDV/W0QI4Szlww5qGY80Vb5slFdAjfjH2iDpfsqWAE75Dkf31QRXEk48m+qgPszPvUkItsnBaVJfNXBGeEz65tqeby/DcOY1kiq7gsxqtVnE6iXC4ZTIY3VJmGaRsDwLFUqM0wmgM1sijGVddBBvwkeWbPQ4zFjA4EEhBK5hTS5RX3/wC4uv89Sfnk2sdFLqVsnYBEnLO1A/l2UYi/fN5gFys/aX6Rn3XE/I+JnYl1lEfWKa9/QehUrdRVsLnADRzJsESKWMSOg58LcC553pg1OcMiJKHGsYDLfwpKneoawjiKqfA6Wmo4VswUp9gswP1w+hQmFeXslUb+/Zmmk5QCWKqP9E/jq8vWVUeATo9Ud5/0gvC2vhLePLrGJ/Nny1GfTjne+Ac=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A73AB8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A73AB8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00036_PERM_UVTC_UserName_Valid_Role_Portal_with_TokenType_UnlockMe_200_OK_P2" searchProperties="true" id="dd7a5d7c-1128-4ee3-bf4d-53a8777db33c"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="0a37c2dd-66b9-4f69-a480-cd88f2b98c4b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportal"));

tP.setPropertyValue("audience","");
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="590aa318-20f7-481d-a9f0-c867dcad3d75"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="78490178-d093-453e-b2d6-1b43df76b3ee"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A73FB8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A73FB8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_010427</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZXzjZlegiktImEm4h5C8bClyAyJGdizZwHz9SAYcTCDL7pNL7Vb36e6jI90wtPJMp84YhJz4NLdZeZQ5ibWqRCF1fMQIcyhaAXM4dkb1xwfHzOsOOmxRcp1WVfkHY1Qq6/abWipYllowLVdFZSipRlEvVayyVZwZFeHKWAQdyjiivKqYulFU9ZKq22PDdizDMex8qWy+KrkJhEzEFi55XdmD2rCqsuA8cDRtvV7n11beD+eaqeuGNn18GOEFrJBSu9lVlCQKa3t/nHcBg+fhPPZX2o2W8blxmTMic4p4FMI+l3spl67ptiZ8XEbmP5R0L7gdOvOTZRNRnxKMPPIHyf48Al/4bq7uzf2Q8MXqYhGGLgOrsMEqNgr0h6JloV0ZKIMwZEhlC2TsYw1hBiFQDLmnYaeq/LhuasnWcYgom/nhimWX/w0P0Bg8PwBXZYey9tCuD3imU7UbwE6HYi9iJIauJGuAMLD9NAFfHyrXD2FGNg+ECYJumESnHcM7We660SJzYPz/DOhoOLsgE+RFUGvW6QRW9z9H7isdd+P+cnxXtn/Wg5fBupoAOHZODOlod8sTUqYk2u3wfpdexvi3/et2M9jeutNN77VXWQIvttj9G3lua2zDzdK7hzhvPLRH7+47FO6f1i6dPk3LRc/ud7ov97d40YB5kT48PptPdqMRQN9ojgb0+X6A2s2nuxKOrab3Pmm5Y/pqD6yW8T561j5+Dd14WVroXjmYdP/cRb3IG2z1uz7tTI26PoDuMPQblelmctcrBi96NS3nCH/Wdjjzo+htCZgflpIGnVauLaaE+PdiJi3EVWeJqxNI8WEcKFdqcpfUDicSckdcR8xwtzYqRqNRMetlq92otHTrVi9a1q1tG2293mjXiweR2aE4gdj06YzIXFJyd7T5HiBeOQyoC6Ea+5FQOqZ8E7GFOMp16FAcAp8yGPtCno24aM1nsTkzt1AwlkvPMnHoFr2ZEOWuz3u0F9ZnHMKMKJtmRpSHgElAQCq3JDYTzGZcNOMDxRH3jHyM8hQioe2hlFnHLFSKGiOrwAMJVVv5buRBPlgESWs0tvuaKsIssRKGAz/kyEtOhHaxvtN/h1YIH5dIByZLaoAYJ5y5ZPRDPV/qLp29jA7h65FL5AETfeUhwTsk2V+fdJE8SbnyWdgBebrh1JAJrp3WleZzY4JT3qe3txB1IQO1w3A+kJH/yEdxHCXzKBQsLRThNdkRTTe1EeBICNV27L8D1dIo2lW3Qgr8JHlqz0KM+IKOOOKwEvzJJcsrngEjYPIZ0BHM31z7xsikFK3jsOHnbE1PPGEk4m9fOdjB0k+Y++Kz9kP3c2JnYh3lEXWKVwAndC5X8kbYXqAH9kVYIrTMD4+DnwtwLnnWmDY5xcIFod4iDpf/5KRIVRWEsR9R3mkpieFYOBOcfBuA8+n0JUyizeljjfz7a00lCQUwiCceI0l8eec68gjQ+ZH47pNe0N/6d/qbRVf7Yv5qOerTKcdrfwE=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A73FA8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A73FA8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8uwiAtWkqpBUFFREfebt3AYFmWTAQF//Tdo9CQ5yfnyvjfiND3dTy/0PPOMdc9lOwBjFMVO4Jdl8aXyT2tf52iGQzWGYxo18ndf4yHdrhmMSdfpVoul2+1KWcY4QbKPY92PXyoszdRrNF9juQXd7NS5Tp154tvsrlJeoQgT00Tlia6UM8/1cefq9qWSRH4n0LGDO77uIdyJYUcDyrhDNDv6HVPl9fmG8uowerXjOOxQFHwyEESuC59g4FHP1AedZwN3NMfy9TiJ0JtPA79U3vamafqU1p+CyKJYmqYpmqeIjoEd61fltXTfjAzZN4Pbuqv7ge9A3XUuegFKQbEdGGXgWkHkxLb3jWmGYujCdA1lsAYZzv9VoX47uKL7oaUPICOs17CtM3djc2SiCPkQlZdz+aXy62cVvO1dRLqPzSDy8Kf1v4OE/DNygxAZNXyP7I7u5xa/SNfrM4Id2Ydugp0zmhRtEuoQ4fIsQqaTjR1Mms/A5Wv5yxm+dxiC/6Ykz9R7nAQ29UVmRMdCOP4v9Xpfq5uVle4m6HUzPlwaE+cgjU+Y2Rr8pBo115Oj7uy5lyuE98o3UI9Sv60/N+qjr942HZleSsWimwJzdHB68zyri0dN6obKapwIdDvptsXWpM8kk8gEozWXq/OGy8ATbmx5VXDH0pT16KV47IZ5WBoAU4EXvj+n8myyjdbbndxvyCjW3PWB0vjpirY3Ckf7khfO2LnZaDXOGmsyc7Bg3MOAcVQapOlhI2gD3i7RuZ9I3cFOC1tr2WnaWay+/I7pfQxFXCOUX4Ms/m8aNC/qsf5YdItJYZLPM0aviix3q2K3C1DXAqksAEsWxhcwEazjyT46fT6lBaAue0AEuTIHqWhtxZWqjqTUWK3c3Uru9QRlzqUDsBVL5IUoZStxtxnS+noXbtkevdMEwdjMg319GBqDYzqw4URZKOlkIefKQcomC4leX2VWRtYX5aAw08WyXlofBF6ZS6mYXj2KUmpPdut5uF3yKbxIqgK4PmCWUtdWBgtvxcD63IakNxRwvMoFW+muVkomLcCsJFiTFYlt0e3tQugZ4d5z7XfGB8T4wuiv8n3fTXYX6aB0pX5XO/U1eV8XVWkI5tvlfr066uveuQQHE7C/e3Qajr4JUmvXTkV1OxwFO9k+wwlQJUFQAUkXDRS5PwRBXwAKB5zs0j0IzaBrkEYbsrhU5d1+c5M7pw3W+7SrM+02sx2vm7NTU5T86m6U7A+2Ym960+pIM85LPuYvW3yunpu6w8AsNNWNNIhHmTlQtdJ+JmYbOKga1pByL3wvUlpDEF1y21WsebxuTnG+d0xzLWymnNsyXaU+D03XDHNcXQTqMaKbAqqz1DY/j+ISsBQBgP5heRBURWgXSTXkVN0qgg56UpyAy4GNR+zqNBycXbitgyAbraeH41thDDGVBCpVJdJWUqktAqMowkBbSr0DWAqWFQmW1BNUKAJ1K4/SLcnXckCUP+exd82jJQlAqu9Akx+U6kuaj6exxnEg94Wl3+Nt5ZStjaZHt05IGmuTkEsVPDH93To4Kp4TLaNEW45Gk3G2XyT944HMKpPWRuf6riSdjyFwJqOFfRQDUZ+F220cVn0YwVgOPUXOLtMdPrSdvUcPqw1GmNEibLFLb58u+7q0G0WWxowGc39Wb/ElnJj5wKse2um6utCaYcvo+qaY59QuWtEBCHr8vHEyMpY92st03EzNITjudXaSubyQ89Jot4DpXB2tNa/aKDXO47FHXxYUNwmnqdZPOUlVq3VDWAwWOIycbdK2smjqG+xWj5vnHb1qOqF75NnkuODC+srySLFmZyNsKbOSym3gzrNaIRxSc+oMpJY5lvv5/qJfQm8KbwP083R4CG/zg3o/WT6Mnjvp0Ei3Ihjfl8UBJIvlHjkV9PjvBKaQOEbNvKp2woIF4Rj5ceW12FWQl05CKI5jdMiRcVtLHM0zNMOz9UavBwRJosnR3aMB3eB5mizuLOeG4hPEbuCbTuGr4HG3U+rvAKHXwcg3UFQ7Bwm0Ea78xWKRr7Lsz8nxG/gYLQLCE0GzBYBEAAOm2Wt0eUlkJZpviwLLC82eKFbKkyCe+tMImDGKPnJE/gNHnCPohA4qiGRxmmJynOKYpOSkn5PYZZ7O+pOPEkI1o4LtdViu3aCw44UuKgBTXmAkLnoK7fCaIArfnmxNh/gqLbIL8fWg/zbCz+/uySA6hlMo4CIcAZGCoi/4LnuP5ZuYG5948d08SAynOM9JZuPIgTckH1/9bpiiUx7dcv2B+A77of1Z8MEy9TmohzPj7MBH2z9uBIRQEsrxeq/KSX86PSXnc3KtQ6ugUxExTzEU3aI0BBPCifJFcEQ+9TBB/YiOPlB/8vyQf8SXxLavxeST9kjXlK/LH9xFNISLu4hMuj776UXng0uStxhl8VeyrkuuLAXiv95qYAcWekQ8I480iIzf5frC1js/JM5ihjm+VawK8pl/0xgwIGYdMseC6L3xrwx85fyj8JHkB5aYdNM+idH3b8rFgHqp6BAGiR/LxSAggvdD84ozzkPU+a30h5kr/Xvj8xn+ls9vlLFGxpenVx66zv9XrjnXdoGI7MLOFctLJSNXU+Lct94N6TeAX89prvu3Of0xktc/xH9K3uX08/fw+j8=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00037_PERM_UVTC_UserName_Valid_Role_Retailer_with_TokenType_UnlockMe_200_OK_P1" searchProperties="true" id="750a03b0-87df-4152-bff5-7304a5598803"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="7bca203a-4deb-4794-b1f1-0f0e2a8a8e4f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="8977b672-0a02-4961-9780-51aa75bf0fc7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="31f48c85-4679-4f07-9f37-17165d6606bc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A74288D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A74288D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_010433</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvO4ZWwZnBhXoIpbJsyGgQISknmZUuS2UWLLYElc8vUrGfAAIVl2n1zdbnWfvuiobzhOYsdvcg6ZoCkrrZOYcT/X1g2ZMT/FnHKf4QS4L4g/bvbvfads+3h/xCj1OnXjt1urhJ4bVsxK4NbMqoc9E6NaaEKFXIXXznXVfSHKlHMJPcYFZqJuODZyTfvKtGsTVPMryHfccu3K/WWUHiHjyrcyKdvGDtSa142ZEHPfslarVXlVKadZZDm2jayn/v2YzCDBRuNmm1EeKGvs7Ek5AAJxTMokTawb68jmJuD+mEYMC5nBLlbwWSzbsmuWsgk4jb4ZxVkIeixMc7GNWcoowTF9x7o+fRCzNCg14yjNqJglnyaBbO3YhDUxCaqyb4Z1DO1CR0cIM45NPsNo52sEIWTACJQeRr268e2yruVHJxlmPEyzhB+L/w0PsCXE6RwCk+/T2kG73OGZSjVugPg9RmLJ6RJ+6mGdYwJ8100gl7sqDTMI6fqecjWga67RWYfwTsRtNTo0Ai7+T4MOmrN18ohjCY3B7fNEdN7dePkai/nQ2wxdeAoePTao1nMAh8a5omjtVjwZymKItic6EWrN+glKXzvBr+FUrMZ3fTwLnIFcRvLJm069pNsmD3YQ3aEXGMn7JX6q3kZo9hdrrpzXdSI637M+ehvz4ajVl2javqvIxytSHU0XP5dJM7UG1uZ+8AOl3vy244qX5PurRNHLJOx6d4vp5u1ZJHHreRjN+t3JmHRJZ/wwXa1aT88/nq+8v9tievcu06sH9atepHOA/1i3v/Nj+fIKROxFPQa9TulWdQmLr8lMa2hghrmpP9fkwwUwYTT0Kc0dvlR0RwNf9XArIw+1Wp7TvK46ntexK13brVS6tRq6tZut26a7J5ktihOI7ZSFVMfSlLsdm68BksTnwALIzGUqFdNx4wuPHSxwqcdG6hKkjMMkVfScbBZvq9f39/dA1FCYvdmwkNka6LVR+pmKARtkzVBAdsTJjnPEySMgdE5BE7eea64GmwtViwVeShGj8hKXGUhF7ZlmWd+peq7FaTKPQSO1kjSQMZTns3leGYtvv46JCc+1o+4kv22f5nX6b18CZRNQbcB1Li1QbYQzjwvaJ3I+YWRPbHSY8N59UwZUXyxVT5FRskVy/OvPmOj5KGZEZfS7Pf6N9rgL84uPfzxpfQHKOq1HEShY0oOw+6dbPQKKNhr7bi4wKi/KcrmUeQOr1YqVKfeWrpBlO9YYiFTEtpmkb8Cswot10StSAD8JXuiPIUoxY2OBBSRq4Eq5eMHaMAau14aeuinrS3eSo5CqdALW4pyuHauVRyP+cisiPtF2Sj1Un1WaBX86dsbXQRyVp9oaBGWRlvQLsvlkLkiq3FLFfWl26Pycg3PBj5VFkQssQg3UixTw+Z+SJrW6gQlJJRO9jpErDok2xyk2c/D/GH1wk3N5sdzRf9/uTJqPAAG1EnKa+9dvtK+vAIsOyHoX9BO+vv6Kr4/RNT6oP2oO6nQ6441/AA==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A74278D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A74278D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00038_PERM_UVTC_UserName_Valid_Role_Dynamic_LASP_with_TokenType_UnlockMe_200_OK_P2" searchProperties="true" id="b412d322-2448-4780-9f0a-5869d0704684"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="6dbba701-8c17-4be1-a377-5c31a5430b82"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdDLASP"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="dd63f906-e718-476e-be2b-02d7f53feb7e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DLASPCS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDLASP"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="e9ce2f2c-a9af-4aa7-83bb-6d104f4f55c2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A74838D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A74838D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_010440</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VynmkjBd2V6AKQjJhAoRAbpLJy5SQ27aILRtJZrlfP5IBBwjJMPPk6nar+/Sio77mKAptp8M5MEFiWlhHIeVOpm1pKaNOjDjhDkURcEdgZ9oZDhy7ZDpof0Qr9Hst7e8aWK5tgaW7tbqtV8ymqSNcd3XcMC3Ps7A3s+vSlPMU+pQLREVLs02rqps13Ww+W02nbDllu1Sp1d+1wgswLn1Lk5Kp7UCteUsLhEgcw1itVqVVuRQz37BN0zLehoMpDiBCWvt6m1EWiLV39rjkAoYwxCUcR8a1cWRz7XJnSnyKRMpgF8v9LpZpmE1D2ric+FdafhbcPvXiTLxBNKYEo5D8Rqo+QxBB7BY6oR8zIoLo2yQsUznWYY11bFXolWYcQ7vQ0RFCxpHOA2TtfE3AAwYUQ+HXpN/Sri7rWnb0mSHKvZhF/Fj8b3iALiGME3B1vk9rB+1yh2cq1b4G7PQpDlNOljBSw5ogDHzXTcCXuyqMGXhkPSBcDuiaK3TGIbwTcVuNHvGBi//ToIPmbJ28oDCFdm8cRMX69H1pP26CLnkS1twPfzf/qE2GrQzAoXGmyFu7FU+GMh+i7YnwjdeCTYcn5Xf8cmeTtflSS4u1PysL/hqM7BTNP7yABcuUzEdFOpqZq9ljz09GRfQ0vq0K2+7NB2j+8JdJ+0U2KhdX3erdHQxfk3fx0Lh/qHpAKt3+PH3c3CSjeqU4QGmnXru5Hz/ME8trzhaN2nDdFYuPiW/x4a/Nwnvrvz5G3fsVe3qZv0ZPg6IfVldGPPZbeToH+I91+zs/TWdzwGIvqjHo9wp3sktI/ExmSkNc3ctMnUSRDxdAhdZWpxR3OKmkO+I6sodb2WpY3W7D7tQrjXKjZ5ZvzWq5fNtsWndmp3vXqe5JZoviBOJNTD2iYinK3Y7NzwBx5HCgLjB9GaeS6bj2g8ceEqjQpxN5CWLK4TmW9GwFUUiwqM6EvwitJQoqFbZcexFbaYVRLB7pI+t4AtgRKdv2ESlPAJOEgGJuNdhcTjYXshgLtExFaJWWqEQhldzOFM06dqVRNTiJkhAUVCOK3TSEUhIkWWkMvv3aknF4pp3cPmfX7dvETv/tayBtXKIMuMqlC7KPcOZ1sfeJnE/YMp9N6zDhvftO6hJ1s2RBBZNFzJAc//qcEzUg+ZD0Bp3peA86t73srKzG15PGD4iM02LkgdwlOQi7f7jlEyBJo71v5QJZpUUpXS7TrHuVStlg0r2hymOYtjEFnEpa2zzHH0CN3Itx0RuSAz8JnuuPIaYioFOBBERy2gqZeMHSMAWuloa+vCfrSzeSo5CydALW4pzuJpQLj0L8406EHazspHosP6uYuZ8dO+PrII7MU+4MglBfSer92HwzFziWbolkvpgdOj/n4FzwY2Ve5ByLkAM1SwV8/6egKK2lIYzjlIp+T8sUhzSb4RSbBJxPoy9uMibPVzvy77udTrIRwCAXQk4y/+qFdtQVoP4BVe+CfsPW9k9sfYyu/UX9VXNQp9MZb/8D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A74828D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A74828D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8uwiAtWkqpBUFFREfebt3AYFmWTAQF//Tdo9CQ5yfnyvjfiND3dTy/0PPOMdc9lOwBjFMVO4Jdl8aXyT2tf52iGQzWGYxo18ndf4yHdrhmMSdfpVoul2+1KWcY4QbKPY92PXyoszdRrNF9juQXd7NS5Tp154tvsrlJeoQgT00Tlia6UM8/1cefq9qWSRH4n0LGDO77uIdyJYUcDyrhDNDv6HVPl9fmG8uowerXjOOxQFHwyEESuC59g4FHP1AedZwN3NMfy9TiJ0JtPA79U3vamafqU1p+CyKJYmqYpmqeIjoEd61fltXTfjAzZN4Pbuqv7ge9A3XUuegFKQbEdGGXgWkHkxLb3jWmGYujCdA1lsAYZzv9VoX47uKL7oaUPICOs17CtM3djc2SiCPkQlZdz+aXy62cVvO1dRLqPzSDy8Kf1v4OE/DNygxAZNXyP7I7u5xa/SNfrM4Id2Ydugp0zmhRtEuoQ4fIsQqaTjR1Mms/A5Wv5yxm+dxiC/6Ykz9R7nAQ29UVmRMdCOP4v9Xpfq5uVle4m6HUzPlwaE+cgjU+Y2Rr8pBo115Oj7uy5lyuE98o3UI9Sv60/N+qjr942HZleSsWimwJzdHB68zyri0dN6obKapwIdDvptsXWpM8kk8gEozWXq/OGy8ATbmx5VXDH0pT16KV47IZ5WBoAU4EXvj+n8myyjdbbndxvyCjW3PWB0vjpirY3Ckf7khfO2LnZaDXOGmsyc7Bg3MOAcVQapOlhI2gD3i7RuZ9I3cFOC1tr2WnaWay+/I7pfQxFXCOUX4Ms/m8aNC/qsf5YdItJYZLPM0aviix3q2K3C1DXAqksAEsWxhcwEazjyT46fT6lBaAue0AEuTIHqWhtxZWqjqTUWK3c3Uru9QRlzqUDsBVL5IUoZStxtxnS+noXbtkevdMEwdjMg319GBqDYzqw4URZKOlkIefKQcomC4leX2VWRtYX5aAw08WyXlofBF6ZS6mYXj2KUmpPdut5uF3yKbxIqgK4PmCWUtdWBgtvxcD63IakNxRwvMoFW+muVkomLcCsJFiTFYlt0e3tQugZ4d5z7XfGB8T4wuiv8n3fTXYX6aB0pX5XO/U1eV8XVWkI5tvlfr066uveuQQHE7C/e3Qajr4JUmvXTkV1OxwFO9k+wwlQJUFQAUkXDRS5PwRBXwAKB5zs0j0IzaBrkEYbsrhU5d1+c5M7pw3W+7SrM+02sx2vm7NTU5T86m6U7A+2Ym960+pIM85LPuYvW3yunpu6w8AsNNWNNIhHmTlQtdJ+JmYbOKga1pByL3wvUlpDEF1y21WsebxuTnG+d0xzLWymnNsyXaU+D03XDHNcXQTqMaKbAqqz1DY/j+ISsBQBgP5heRBURWgXSTXkVN0qgg56UpyAy4GNR+zqNBycXbitgyAbraeH41thDDGVBCpVJdJWUqktAqMowkBbSr0DWAqWFQmW1BNUKAJ1K4/SLcnXckCUP+exd82jJQlAqu9Akx+U6kuaj6exxnEg94Wl3+Nt5ZStjaZHt05IGmuTkEsVPDH93To4Kp4TLaNEW45Gk3G2XyT944HMKpPWRuf6riSdjyFwJqOFfRQDUZ+F220cVn0YwVgOPUXOLtMdPrSdvUcPqw1GmNEibLFLb58u+7q0G0WWxowGc39Wb/ElnJj5wKse2um6utCaYcvo+qaY59QuWtEBCHr8vHEyMpY92st03EzNITjudXaSubyQ89Jot4DpXB2tNa/aKDXO47FHXxYUNwmnqdZPOUlVq3VDWAwWOIycbdK2smjqG+xWj5vnHb1qOqF75NnkuODC+srySLFmZyNsKbOSym3gzrNaIRxSc+oMpJY5lvv5/qJfQm8KbwP083R4CG/zg3o/WT6Mnjvp0Ei3Ihjfl8UBJIvlHjkV9PjvBKaQOEbNvKp2woIF4Rj5ceW12FWQl05CKI5jdMiRcVtLHM0zNMOz9UavBwRJosnR3aMB3eB5mizuLOeG4hPEbuCbTuGr4HG3U+rvAKHXwcg3UFQ7Bwm0Ea78xWKRr7Lsz8nxG/gYLQLCE0GzBYBEAAOm2Wt0eUlkJZpviwLLC82eKFbKkyCe+tMImDGKPnJE/gNHnCPohA4qiGRxmmJynOKYpOSkn5PYZZ7O+pOPEkI1o4LtdViu3aCw44UuKgBTXmAkLnoK7fCaIArfnmxNh/gqLbIL8fWg/zbCz+/uySA6hlMo4CIcAZGCoi/4LnuP5ZuYG5948d08SAynOM9JZuPIgTckH1/9bpiiUx7dcv2B+A77of1Z8MEy9TmohzPj7MBH2z9uBIRQEsrxeq/KSX86PSXnc3KtQ6ugUxExTzEU3aI0BBPCifJFcEQ+9TBB/YiOPlB/8vyQf8SXxLavxeST9kjXlK/LH9xFNISLu4hMuj776UXng0uStxhl8VeyrkuuLAXiv95qYAcWekQ8I480iIzf5frC1js/JM5ihjm+VawK8pl/0xgwIGYdMseC6L3xrwx85fyj8JHkB5aYdNM+idH3b8rFgHqp6BAGiR/LxSAggvdD84ozzkPU+a30h5kr/Xvj8xn+ls9vlLFGxpenVx66zv9XrjnXdoGI7MLOFctLJSNXU+Lct94N6TeAX89prvu3Of0xktc/xH9K3uX08/fw+j8=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00039_PERM_UVTC_UserName_Valid_Role_Linked_LASP_with_TokenType_UnlockMe_200_OK_P2" searchProperties="true" id="d9d8706f-61bb-43bc-b1ea-730e547b3ac5"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="f15bcf63-6a93-45aa-85da-337964a53d7c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdLLASP"));

tP.setPropertyValue("audience","");</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="f3cae9bb-d40c-4b19-8898-1db95f264e84"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="c5735d4f-b142-4544-8ad1-2c3603830a3e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>LLASP</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A74DE8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A74DE8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_010446</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdc6o6FP0rDuexgwTUqkx1xtZ6y6m1nmrtx8udGLaaCgFJQO2vvwkqFau93vvEZLOz9tofWckVx75n2S3OIRI0YIWV7zFup9aGFkfMDjCn3GbYB24LYg9aD13bKiIb77ZoBafd0P4uIYIrCFV006qaehkhotfLVdBN1yJkcolhXK1JV85jcBgXmImGZiGzoqNLHdWHZt0umXapVqyb5XetMIKIS2zpUkTaltSKN7SZEKFtGMvlsrgsFYNoalgImcbrQ3dAZuBjrXm1ySgNFDW3/qToAgHPI0US+MaVkfO5crk9oFOGRRzBNpZ7KhYyUN2QPi6n019athdch02CdHmDWcAowR79xKo+DyBmgVtoedMgomLmn0zCRApYhxXRiVlmvzQjT+1MoBzDiGOdz7C5xXqCCUTACBSen5yG9uu8rqVbhxFmfBJEPs8v/xsfYAl4QQiuzndpbamdD3ikUs0rILbDiBdzmkBPDWuICfBtN4GcD1XoRzChqy7lckBXXLEz9ukdLDfVaNMpcPF/GrTXnA3ICHsxNPkHTZhMJFriTjy+6UftvnH31pl6y4dGSmDfOTVkrd0sD4YyG6LNjj/3q5kzbM3fx6ML8hiuFveo2zf8y5tetyuWtffb8vT5s9X7q+/+toLurBqNnifh54sbr58vnOmLharx27w0uhjdWfNFSEP+PmnVrN4Cr+8+0fRi/boePZThep4E/G0BK1yL/wzf3kNz8DLqdTrgvYb9+/tuO3quX7g388eKD/Pfa7fKZsYMdT7ovef0P8afo3k1cRpZOnv887bdmR/E4w8gYrdUY+C0Cx3ZJSx+FjNloa4+SV3tUIkPF8CE1lS7lHbYsZQ76tqyh5u1WTOvr2tWq1pu39baqHSLKqXSbb1udlDrutOq7ERmw+KA4k3AJlTFUpK7GZufCRLf5sBciPQkiKXSce0HxDYWuOCwJ3kIAsZhGEh5NkNiLsiaTS5n89UlTrzqWMzN0F9phV4gHtlj1JoIiHKabFk5TX4CQkMKSrjVXHM52FzIWixwEgvPLCa4yCCW0h4plbWtcq1icOqHHiimhh+4sQfFcBamlTH45mvpmPDU2u22Bv30vJ3M7PDfrgjSx6XKgatsrkE2Eo5cL9YuleMpm2iIzP2Ud/Ct2KXqaMmKioiSDZP8r69BUROSTUma04505ntoyOEahyllodyEkmzYsytbKrk8+81dSxbYLC6KcZLEaRfK5ZIRSXhDJWkgyxgAiaU6rYfBHJiRoRhnXQUZ8YPgmT1PMRYzNhBYgC+nppAuz7j7B8DV3e/IcV+d+7DIhZSlE7ASx2w3nny3KMY/Pm2ITZSfNPflZxlE7lfHjmDtxZF5yqtfUDZVK3UNrE9MBgkkLJUCFkT74McAjgXPG7MiZ1yEHKhxLOD0n4JSpoaGCQliJpy2lhr21TLlKdYh2F9O32BSQc5eaPTfn2g6TUeAgHzXcZriq4vWVkeATfcUdxv0hOi2fxLdPLvmN/N3y16dDme8+Q8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A74DD8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A74DD8D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8uwiAtWkqpBUFFREfebt3AYFmWTAQF//Tdo9CQ5yfnyvjfiND3dTy/0PPOMdc9lOwBjFMVO4Jdl8aXyT2tf52iGQzWGYxo18ndf4yHdrhmMSdfpVoul2+1KWcY4QbKPY92PXyoszdRrNF9juQXd7NS5Tp154tvsrlJeoQgT00Tlia6UM8/1cefq9qWSRH4n0LGDO77uIdyJYUcDyrhDNDv6HVPl9fmG8uowerXjOOxQFHwyEESuC59g4FHP1AedZwN3NMfy9TiJ0JtPA79U3vamafqU1p+CyKJYmqYpmqeIjoEd61fltXTfjAzZN4Pbuqv7ge9A3XUuegFKQbEdGGXgWkHkxLb3jWmGYujCdA1lsAYZzv9VoX47uKL7oaUPICOs17CtM3djc2SiCPkQlZdz+aXy62cVvO1dRLqPzSDy8Kf1v4OE/DNygxAZNXyP7I7u5xa/SNfrM4Id2Ydugp0zmhRtEuoQ4fIsQqaTjR1Mms/A5Wv5yxm+dxiC/6Ykz9R7nAQ29UVmRMdCOP4v9Xpfq5uVle4m6HUzPlwaE+cgjU+Y2Rr8pBo115Oj7uy5lyuE98o3UI9Sv60/N+qjr942HZleSsWimwJzdHB68zyri0dN6obKapwIdDvptsXWpM8kk8gEozWXq/OGy8ATbmx5VXDH0pT16KV47IZ5WBoAU4EXvj+n8myyjdbbndxvyCjW3PWB0vjpirY3Ckf7khfO2LnZaDXOGmsyc7Bg3MOAcVQapOlhI2gD3i7RuZ9I3cFOC1tr2WnaWay+/I7pfQxFXCOUX4Ms/m8aNC/qsf5YdItJYZLPM0aviix3q2K3C1DXAqksAEsWxhcwEazjyT46fT6lBaAue0AEuTIHqWhtxZWqjqTUWK3c3Uru9QRlzqUDsBVL5IUoZStxtxnS+noXbtkevdMEwdjMg319GBqDYzqw4URZKOlkIefKQcomC4leX2VWRtYX5aAw08WyXlofBF6ZS6mYXj2KUmpPdut5uF3yKbxIqgK4PmCWUtdWBgtvxcD63IakNxRwvMoFW+muVkomLcCsJFiTFYlt0e3tQugZ4d5z7XfGB8T4wuiv8n3fTXYX6aB0pX5XO/U1eV8XVWkI5tvlfr066uveuQQHE7C/e3Qajr4JUmvXTkV1OxwFO9k+wwlQJUFQAUkXDRS5PwRBXwAKB5zs0j0IzaBrkEYbsrhU5d1+c5M7pw3W+7SrM+02sx2vm7NTU5T86m6U7A+2Ym960+pIM85LPuYvW3yunpu6w8AsNNWNNIhHmTlQtdJ+JmYbOKga1pByL3wvUlpDEF1y21WsebxuTnG+d0xzLWymnNsyXaU+D03XDHNcXQTqMaKbAqqz1DY/j+ISsBQBgP5heRBURWgXSTXkVN0qgg56UpyAy4GNR+zqNBycXbitgyAbraeH41thDDGVBCpVJdJWUqktAqMowkBbSr0DWAqWFQmW1BNUKAJ1K4/SLcnXckCUP+exd82jJQlAqu9Akx+U6kuaj6exxnEg94Wl3+Nt5ZStjaZHt05IGmuTkEsVPDH93To4Kp4TLaNEW45Gk3G2XyT944HMKpPWRuf6riSdjyFwJqOFfRQDUZ+F220cVn0YwVgOPUXOLtMdPrSdvUcPqw1GmNEibLFLb58u+7q0G0WWxowGc39Wb/ElnJj5wKse2um6utCaYcvo+qaY59QuWtEBCHr8vHEyMpY92st03EzNITjudXaSubyQ89Jot4DpXB2tNa/aKDXO47FHXxYUNwmnqdZPOUlVq3VDWAwWOIycbdK2smjqG+xWj5vnHb1qOqF75NnkuODC+srySLFmZyNsKbOSym3gzrNaIRxSc+oMpJY5lvv5/qJfQm8KbwP083R4CG/zg3o/WT6Mnjvp0Ei3Ihjfl8UBJIvlHjkV9PjvBKaQOEbNvKp2woIF4Rj5ceW12FWQl05CKI5jdMiRcVtLHM0zNMOz9UavBwRJosnR3aMB3eB5mizuLOeG4hPEbuCbTuGr4HG3U+rvAKHXwcg3UFQ7Bwm0Ea78xWKRr7Lsz8nxG/gYLQLCE0GzBYBEAAOm2Wt0eUlkJZpviwLLC82eKFbKkyCe+tMImDGKPnJE/gNHnCPohA4qiGRxmmJynOKYpOSkn5PYZZ7O+pOPEkI1o4LtdViu3aCw44UuKgBTXmAkLnoK7fCaIArfnmxNh/gqLbIL8fWg/zbCz+/uySA6hlMo4CIcAZGCoi/4LnuP5ZuYG5948d08SAynOM9JZuPIgTckH1/9bpiiUx7dcv2B+A77of1Z8MEy9TmohzPj7MBH2z9uBIRQEsrxeq/KSX86PSXnc3KtQ6ugUxExTzEU3aI0BBPCifJFcEQ+9TBB/YiOPlB/8vyQf8SXxLavxeST9kjXlK/LH9xFNISLu4hMuj776UXng0uStxhl8VeyrkuuLAXiv95qYAcWekQ8I480iIzf5frC1js/JM5ihjm+VawK8pl/0xgwIGYdMseC6L3xrwx85fyj8JHkB5aYdNM+idH3b8rFgHqp6BAGiR/LxSAggvdD84ozzkPU+a30h5kr/Xvj8xn+ls9vlLFGxpenVx66zv9XrjnXdoGI7MLOFctLJSNXU+Lct94N6TeAX89prvu3Of0xktc/xH9K3uX08/fw+j8=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00040_PERM_UVTC_UserName_Valid_Role_AccessPortal_with_TokenType_UnlockMe_200_OK_P2" searchProperties="true" id="78caca6b-1757-486d-ab87-c4c10fe813ed"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="18bf2cc9-b979-4bb9-8bdb-ae88c0ba41d9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdAccportal"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="c7c9f060-6a54-41be-96e4-3f39684a8dc2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Access Portal" id="03758f24-e6fb-4316-9dcd-502c769c0e5b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdAccportal"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="6c7cde94-9097-4d25-a5c1-66fb1e8e5a8c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>ACCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A75288D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A75288D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_010453</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VynlMGW8sxhWoYsnCDdmAMCQvU0JuQIktGUsGwtePZMABAhlmnlzdbnWfXnTUVxyFge3VOYdYEEZzyzCg3Eu1VS2JqccQJ9yjKATuCez16g8dz86bHtoe0XLtVlX7u+hUyqWR7+u+47t6wSmb+ghMrJexM6oULQsjjKUp5wm0KReIiqpmm1ZRN0u6WelbFc+xvEIxb7vmu5YbQMylb2mSN7UNqCWvalMhIs8wFotFfuHkWTwxbNO0jOFDp4enECKtdrXOKA0U1zb2OO8DhiDAecxC48rYs7nyudcjE4pEEsMmln8qlmmYFUPa+JxMLrTsLPhtOmap2ESUUYJRQFZI1ecBxJT5uXowYTER0/BkEpapHOuwxDq2CvRCM/ahneloD2HMkc6nyNr46sIYYqAYcq/ddlW7OK9r6dF+jCgfszjk++J/wwN0DgGLwNf5Nq0NtPMdHqlU7Qqw16Y4SDiZw6Ma1ghh4JtuAj7fVe45hjFZdgiXA7rkCp2xC+9AXFejRSbAxf9p0E5z1k4GKEig5t+1S0tcDmgwmYrb1Ssa4cgZjlsPU1ZNAewap4qstWvxYCizIVqfQOXxW+9PRZDXO0afisHn4v3xsdIqvjT6L0OHTsT746zDCy1r+DBySuXWfa85ub//8F96cfinbCW35ZYgw8tFNHWj9lvJtimPP+P+3XDVKLaHo2Wl6w4apeRu8Adffr58NIfB/cj0B4Mi67jd4dga88Fft7fh/M4IPsqvbgdfvjmL58LsfTJ4BNRn1uohuV6GH6JrVrN0dvDv67Z3vpeMPgCLrajGoN3K3cguIfE7mSkN8fVxaupFiny4ACq0mjqluMNLJN0R35M9XMuWazUarl0vF23XbZnOtVl0nOtKxbox642benFLMmsUBxCbjI6JiqUodz02vwPEoceB+hDrc5ZIpuPaLx5bSKBcm3blJWCUQ59JerYmoYQOvjtb4NKHhb/G4WrlRwVHyz0y8USf4vpYQLzHyba9x8ldwCQioIhbzTWXg82FrMUMzRMRWPk5ylNIJLXHimU9u+AWDU7CKACF1AiZnwSQj6ZRWhmDr7+2jjBPtd3rfnrbTuZ1+G9bAmnjE2XAVS4NkG2EI4+Ls03keMKW2Tet3YS37uuJT9TFkvUUMcFrJPu/vsdEzUc2I/Vm87rX26LOjM87LMvx86TxCyTjsBpZIH9OdsJuH275BEjSqG17OUNWfpZP5vMkbV+h4BixdG+o+himbfQAJ5LWvvrsE6iReTHOekMy4AfBM/0+xERMaU8gAaEct1wqnrE09ICrpaEt78ny3I1kL6QsnYClOKZrBnLhUYh/3Ymwh5WdVD/Lz4LF/nfHjvjaiSPzlDuDIHSiJPV+fJ2YC8ykWyKZj8W7zo85OBZ8X5kVOcMi5ECNEgGn/+QUpVU1WT2WUNFuaalil2ZTnOIrAu/b6IeblMmz1Y78+26nk3QEMMiFkJPUv3qhPXUF6GSHqjdBT7B1+Te23kdX+6H+qdmp0+GM1/4B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A75278D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A75278D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bb96fc41-2093-4734-aaeb-331d8f527d02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fa8525a5-4dd0-44ab-89af-92e2a4549d94</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00041_PERM_UVTC_UserName_Valid_Role_Retailer_CS_with_TokenType_UnlockMe_200_OK_P2" searchProperties="true" id="9f57348d-447c-445b-a077-a7b727596e71"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>181BB82A75838D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:181BB82A75838D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150610_010459</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZrU/I6EP4rTN+PTOmNInSEGS5eOCIioKN8cUK6hWibYJNy8de/SYEKiBzO+dTZ7Wb32Uue7CVHUWh7dc4hFoTR3DIKKfdSbVVLYuoxxAn3KIqAewJ7g/p9x7MLpoe2R7Rcu1XV3kpuGSzHsfWKeVHUi9gP9DE4F3qAXde2y2PTvzClKecJtCkXiIqqZpuWq5sl3awMrYrnWJ5rFUoX1kjLPUPMpW9pUpCn1qCWvKpNhZh5hrFYLAoLp8DiiWGbpmW83HcGeAoR0mqX64zSQHFtY48LPmAIQ1zALDIujT2bS597AzKhSCQxbGL5v8UyDbNiSBufk8kfLTsLfpsGLBWbiDJKMArJF1L1uQcxZX6uHk5YTMQ0+jUJy1SOdVhiHVtF+kcz9qGd6WgPYcyRzqfI2vjqQwAxUAy5p367qv05r2vp0WGMKA9YHPF98b/hATqHkM3A1/k2rQ208x0eqVTtErDXpjhMOJlDVw3rDGHgm24CPt9VrhdDQJYdwuWALrlCZ+zCOxDX1WiRCXDxfxq005y1k2cUJlB7vHl67V6930D/Jhz4YWmEodzoTa/m9XI1BbBrnCqy1q7Fg6HMhmh9YhC6eVJ5Gb4MnDtjVOqNO3fRMm+x14ZbLL7m300SiA/R6M9kguKh9HHP2qu8G3ZvV/f9IYv/GQW3Lh3jzkO9MUCtZrd3U7m9eWzk407E2OLp5ZYjhoLF06PbfOxOHRiPo49GJ98dDZ+MUdtq9mQh7OVtiPJ48fjZtqBXumusSOfGWfFVvbJ8NsbJU1DqXI/r1SydHfz7uu2dHyTjd8BiK6oxaLdy17JLSJwmM6Uhvh6kpt5MkQ8XQIVWU6cUd3iJpDvie7KHa9kqW41G2a5fuGWn3DKdK9N1nKtKxbo2643rurslmTWKA4hNRgOiYinKXY/NaYA48jhQH2J9zhLJdFw74bGFBMq1aV9eAkY5DJmk55nM5yIJaWn27vCvyjuy3Wi1WH1puS4TD/QhrgcC4j1Ktu09Su4DJjMCirfVWHM511zIUnyieSJCqzBHBQqJZPZYkaxnF8uuwUk0C0EBNSLmJyEUZtNZWhiDr7+2jjBPtf2rYXrZfk3r8N+2AtLGJ8qAq1waILsIR96W4jaR4wlb5tC0dhPeuq8nPlH3SpZTxASvkez/+p4SNR7ZiMiM3pqDN2uLOzM/+/jPk8YJUMZhPbJA/pzshN2+3PINkKxR23bzE1mFz0IynydpA4tFx4ile0NVyDBtYwA4kby2GrIPoEbmxTjrEcmAHwTP9PsQEzGlA4EERHLgcql4xtYwAK62hra8KMtzV5K9kLJ0ApbimK4Zyo1HIT65FGEPKzup7snPgsX+d8eO+NqJI/OUS4MgdKIk9YCsfpkLzKRbIqmPxbvOjzk4FnxfmRU5wyLkQI0TAb//ySlOq2oIY5ZQ0W5pqWKXZ1OcYjUD79voh5uUyrPdjvz7cqeTdAQwyI2Qk9S/eqI9dQXoZIerN0F/oWv7FF3vo6v9UP/U7NTpcMZrfwE=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>181BB82A75828D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:181BB82A75828D03E0533E991F0ABFA5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>930885f3-a4db-4c89-a0c5-4b5518f49e63</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00042_PERM_UVTC_UserName_Valid_Role_Coord_CS_with_TokenType_UnlockMe_200_OK_P2" searchProperties="true" id="f46e9e6c-1d21-40b5-8e75-9c27290eb75d"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="591eb9da-0b70-415b-b315-7d6b83b3c1ce"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="404a9086-f3c3-4e1a-9291-565eb02690f0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node SPL CS" id="85677c27-e2f1-4811-9a34-35656637c42c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCoordCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full COORD_CS" id="e2181c52-da9d-4d16-a23c-3e27d972d4b4">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("UserName",tC.getPropertyValue("UserName1"));

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID1",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="cdc01659-5168-4ffc-9388-7cd0c3286488"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>coord:cs</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>17C1946933B7BEFEE0533E991F0A0CE9</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17C1946933B7BEFEE0533E991F0A0CE9</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>uvtc_firstuser_201502_20150605_014818</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>17C1946933B8BEFEE0533E991F0A0CE9</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17C1946933B8BEFEE0533E991F0A0CE9</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:17C1946933B8BEFEE0533E991F0A0CE9</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17C1946933B8BEFEE0533E991F0A0CE9</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150605_014818</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_47e5960d-7f75-4c58-9dfe-24faa2aefdf6</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_47e5960d-7f75-4c58-9dfe-24faa2aefdf6</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZWQbA8YVqCKBJEzuQDKbvGwpchtrY8tEksHk60cy4GByWXafXGq3uk93Hx3pSOAkdvy+EMAlTVktT2Im/MLaNTLO/BQLKnyGExC+JP6kf3XpO3XLx9stRm006Bp/u21odlpWYLbDdtN0SdMzO0EIpuOGGDsYwiBsKVchMhgxITGTXcOx7KZptUyrObU83276llN3vc6TUXsALlRs5VK3jA2oXHSNSMq5j9ByuawvG/WUz5BjWTb66+pyQiJIsNE7WldUJOK9jT+pB0AgjkmdpAk6QhWfo0D4EzpjWGYcNrmCr3JZyOog5RMIOvthlHshGLEwLZYnmKWMEhzTN6z7cwUySoNaP56lnMoo+bII29KBTciJSWyX/TBQFdqBgSoIucCmiLC9iTWGEDgwArX78ahr/DhsasXWKcdMhClPRHX53/AAW0CcziEwxbasDbTDA37Sqd4REH/ESJwJuoBrTdY5JiA20wRyeKjaLYeQ5pdUKILmQqNDu/D2lutuDOgMhPw/A9oZzjrIA44z6PH7s+AcJb+TPnT6d4+n0QgnzcsHMZZ33QLArnNhKEe7Xu6RsiTResfZ4wtqzWF4szoXM6vxK/nVvmvLc7jOH7Orc/J0YeWrdj4LL8bj5jlrDISXRYKjaXgr8Gzs5G7s3drH1i31Jt6bcz8dPQ74y09vcnNxcTGWYaP1uuzzZ+/++GKR27P0qR8/2jf8NphY12O8upo+z37euS3UH7z2n70I0GI8mZ9ZQyd6aLi/O2+ChScrj7YflvlLtyxnB3/Vtj3zk+z5HyByu9Q0GA1qp2pKWH4vZtpCAzMsXP25Fh8hgUmjp3dp7fAzJXc08NUM12u7fWJ33Fan0Tj2joenw6HVbDSGnY59avWtk2FnKzJrFHsQT1IWUp1LS+6aNt8DJIkvgAXAzUWaKaUTxjcRB1ji2oiN1SFImYBpquTZzhq0/fyGoxePg/2SCBwGIgrdhlG7TuUNu+H9UAKvaLJtVzR5DITOKWjh1rwWithCql684kUmY7u+wHUGmZJ2rlXWd1yviQRN5jFopChJgyyG+jyaF51BYv11TExEYSVpygOfrI/cl8Xt/9v2QfkEVDsIXdAxqFnChxvG9Zvbaj5U3fr0JtqG72cB1adLNVVyStZIqr/euaJJUhJlW9YWd+m+b6iERvtVldmCBSUl5cuLW+m5UoDedjCv2K6/1rPFIitm4boNxFV4pPuBLAdNgGRKo1bT9AUYKqOggy6EEvhe8tJehZjJiE0klpAo7tSK5QEvgAkI/QIYKdLnhz4vKilV6yTk8jPbSaxeLxrxtw8c4hPtp8y36rNUU3yf2CexdvKoOtUDQFI20yt9Gay+IwdVMpby3eCfBfgsedVYNrnEIhWhnjMJX/+paX3qGpiQNGNyNDAKw65mFjjlag7+u9OHMIUsl+80+u8PNZMWFCCgXneCFvH1devrI8BmO7q7SfqF9La/k94qut4H80fLTp/2Od77Aw==</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZWQbA8YVqCKBJEzuQDKbvGwpchtrY8tEksHk60cy4GByWXafXGq3uk93Hx3pSOAkdvy+EMAlTVktT2Im/MLaNTLO/BQLKnyGExC+JP6kf3XpO3XLx9stRm006Bp/u21odlpWYLbDdtN0SdMzO0EIpuOGGDsYwiBsKVchMhgxITGTXcOx7KZptUyrObU83276llN3vc6TUXsALlRs5VK3jA2oXHSNSMq5j9ByuawvG/WUz5BjWTb66+pyQiJIsNE7WldUJOK9jT+pB0AgjkmdpAk6QhWfo0D4EzpjWGYcNrmCr3JZyOog5RMIOvthlHshGLEwLZYnmKWMEhzTN6z7cwUySoNaP56lnMoo+bII29KBTciJSWyX/TBQFdqBgSoIucCmiLC9iTWGEDgwArX78ahr/DhsasXWKcdMhClPRHX53/AAW0CcziEwxbasDbTDA37Sqd4REH/ESJwJuoBrTdY5JiA20wRyeKjaLYeQ5pdUKILmQqNDu/D2lutuDOgMhPw/A9oZzjrIA44z6PH7s+AcJb+TPnT6d4+n0QgnzcsHMZZ33QLArnNhKEe7Xu6RsiTResfZ4wtqzWF4szoXM6vxK/nVvmvLc7jOH7Orc/J0YeWrdj4LL8bj5jlrDISXRYKjaXgr8Gzs5G7s3drH1i31Jt6bcz8dPQ74y09vcnNxcTGWYaP1uuzzZ+/++GKR27P0qR8/2jf8NphY12O8upo+z37euS3UH7z2n70I0GI8mZ9ZQyd6aLi/O2+ChScrj7YflvlLtyxnB3/Vtj3zk+z5HyByu9Q0GA1qp2pKWH4vZtpCAzMsXP25Fh8hgUmjp3dp7fAzJXc08NUM12u7fWJ33Fan0Tj2joenw6HVbDSGnY59avWtk2FnKzJrFHsQT1IWUp1LS+6aNt8DJIkvgAXAzUWaKaUTxjcRB1ji2oiN1SFImYBpquTZzhq0/fyGoxePg/2SCBwGIgrdhlG7TuUNu+H9UAKvaLJtVzR5DITOKWjh1rwWithCql684kUmY7u+wHUGmZJ2rlXWd1yviQRN5jFopChJgyyG+jyaF51BYv11TExEYSVpygOfrI/cl8Xt/9v2QfkEVDsIXdAxqFnChxvG9Zvbaj5U3fr0JtqG72cB1adLNVVyStZIqr/euaJJUhJlW9YWd+m+b6iERvtVldmCBSUl5cuLW+m5UoDedjCv2K6/1rPFIitm4boNxFV4pPuBLAdNgGRKo1bT9AUYKqOggy6EEvhe8tJehZjJiE0klpAo7tSK5QEvgAkI/QIYKdLnhz4vKilV6yTk8jPbSaxeLxrxtw8c4hPtp8y36rNUU3yf2CexdvKoOtUDQFI20yt9Gay+IwdVMpby3eCfBfgsedVYNrnEIhWhnjMJX/+paX3qGpiQNGNyNDAKw65mFjjlag7+u9OHMIUsl+80+u8PNZMWFCCgXneCFvH1devrI8BmO7q7SfqF9La/k94qut4H80fLTp/2Od77Aw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17C1946933B7BEFEE0533E991F0A0CE9</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17C1946933B7BEFEE0533E991F0A0CE9</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00043_PERM_UVTC_UserName_Valid_Role_Portal_CS_with_TokenType_UnlockMe_200_OK_P2" searchProperties="true" id="b21b14d2-8f28-442e-b846-ac3cfbc3ac2f"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="78938d8d-9f5f-4bf4-8d07-b8d399a47957"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportal"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdportalCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="3f7cd2ba-3f9b-4c02-82d0-4539815c6d52"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Portal_CS" id="e99b93c8-beb2-41f8-bbad-2c4de762c85a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportalCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="73cf850c-ac94-43dc-84ca-efc2719838e6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17C1896A6371D7B3E0533D991F0ACD98</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17C1896A6371D7B3E0533D991F0ACD98</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150605_014827</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcto6FP0Vxn08Y2RzM3gCMxRI4gQCDSlN83JGyBtQYsugC1C+vpIBFwjJoefJo+2ttde+aElXAsdRwW8KAVzShOXWccSEn1rrluLMT7Cgwmc4BuFL4g+bva5fyDs+3m+xckG7bv0LTrVaqXhFu1Z0ynYJKtgej0ue7blllxTGjlcmnnYVQkHAhMRM1q2C45Ztp2I75Sen6rtl36nmi+Xyi5UbARcaW7vkHWtHai3q1kzKuY/QarXKr4r5hE9RwXFc9NzrDskMYmw1rrYZpYF4Y+dP8iEQiCKSJ0mMrtCRz1Uo/CGdMiwVh12s8KNYDnJqSPuEgk6/WNleCAM2SdJlC7OEUYIjusGmPj2QsyTMNaNpwqmcxR8m4ToG2IY1sYlbYl8sdEztQqAjhlxgW8ywu8N6hAlwYARy3x+DuvXlsq6lW584ZmKS8FgcL/+OD7AlRMkcQlvs09pRuxzwTKUaV0D8gJFICbqEBzOsc0xA7LoJ5HKo3IDDhK67VOgBXQvDDh3SO1luq9GmUxDy/zTooDlbkBGOFDTizj9dhuDt9ccYfvzsVd2ReBwF09GL26ynBA6dU0PW2u3yZCizIdruaKHXfv96PBm/NJ32c/v7OCCDRcdDi5/BjTesPPTvqt0fqktp0qnVSH9042047nXWd51ggVflQaUfvQ0mi2+9+3HlGh6HqjBYtJ97vC+u45I7fQFX3dCFFzRfhJxsOq+rTRfuvIdvotVa3jRLata9f3niESvdwnUzDNznQW+9WS5btzi6l7el0RPjbv9hBss3Us/SOeB/bNuf+aEavwKR+6UZg6Cdu9ZdwvJzMTMWGtqT1NWfG/EREpi0GmaX0Q5fabmjoa97uF27Xsut1irNStFz297XYscpF4vtWs29dpqtdq26F5ktixOKrYRNqIllJHc7Np8TJLEvgIXA7WWitNIJ6xPENpY4F7BHfQgSJuAp0fIcqcjjyUzRt8qULYTa6AQ5lLQkPySyz/q8OZHAjyTZdY8k+REInVMwum3GWui5FlKXYoGXSkZufonzDJRWdm5E1i+UqmUkaDyPwBBFcRKqCPLz2TwtDBLbb8HGRKRWKsg84RJH6XlAH2Z3+m9fCO0TUuMgTEpfQTcT3l0xJb+8z+dd3pWzV9EevqlCao6XrqrklGyZHP/6MyxmSrJJyRIjwt1zz7b8JcQZAPQJP3RamixeuKQH0fd3ub4VtI409v1dYDe/yKvlUqUtLZWKiGt4ZIqKnAIaAlFa6X49JW/AUIaCLrpWMuInwTP7MUUlZ2wosYRYj2AuXV7wjhiCMO+IQB+d9aWPlKOQunQS1vKcrRXpN5Bh/OkzifjE+GnzQH9WCQ//dOwM1kEcnad+RkjKpmZlrpRfH4wHSTQs1WKY8EPwcwDngh8bsyJnXKQeqLGS8PGfnFG5uoUJSRSTQdtKDYfKm/KUv+bg/3F6B5OKe/bao//93LNpOgIE9BtR0BTfXNq+OQJseqDeu6AfCLjzmYAfs2u8M7+3HNTpdMYbvwE=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17C1896A6370D7B3E0533D991F0ACD98</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17C1896A6370D7B3E0533D991F0ACD98</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>94425ff6-2b60-4326-ada1-54c3cdb51a67</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00045_PERM_UVTC_UserName_Valid_Role_Dynamic_LASP_CS_with_TokenType_UnlockMe_200_OK_P2" searchProperties="true" id="6709c429-4523-4c60-9d23-80862572b236"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="e4e9817f-a1fd-4227-9804-9ada6db04627"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDLASP"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdDLASPCS"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="0d0371e9-8235-467b-b313-72da3d0bfd09"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DLASP_CS" id="f5b39fba-29e1-46a3-af42-c0ba37a1a58f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDLASPCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="d0b9ca6f-ccdd-40e9-91e9-88b1f111278f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17C1D0B818F78133E0533E991F0A06EE</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17C1D0B818F78133E0533E991F0A06EE</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150605_014833</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_fdb863a3-7e89-4e10-a6a4-d68e644fb5ff</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_fdb863a3-7e89-4e10-a6a4-d68e644fb5ff</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+o6EP4rTP3olKalVOkIM1XkXM7xBQEV+eKEdAvRNoUmLeCvP0mBCohe7v3U2e1m99mXPNkLjqPQcj3OIRE0ZqVFFDLu5tq6libMjTGn3GU4Au4K4va82xvXKiMXb45opXazrr0G/ujcqeCKfgbnNd0GE+nYwbbuO+fg2HYwqgaBNOU8hTbjAjNR1yxkVnXk6Mjuo4prVl3LKleRM9RKT5Bw6VualJG2BrXgdW0ixNQ1jPl8Xp5XynEyNiyETGNwe9MjE4iw1rhYZZQHShpre1L2gUAYkjKJI+PC2LG58Lnbo2OGRZrAOpb/XSxkoJohbXxOxydacRb8NgviXLzCLGaU4JB+YFWfWxCT2C954ThOqJhE3yZhIuVYhwXRiWmzE83YhXakox2ECcc6n2Bz7asLASTACJQeu+26dnJc1/Kj/QQzHsRJxHfF/4YHWAZhPAVf55u01tCOd3igUo0LIG6bkTDlNIM7NaxTTICvuwnkeFelTgIBXdxQLgd0wRU6YxvenriqRpOOgYv/06Ct5qycPOEwhcb77aPzPED+YMJZ6JwNX+ajeaf21G8u3+s5gG3jXFG0diXuDWUxRKsT/O13FYYfj+FNM368Nr1WehZ66MNe3l16/UryRv48sOiSjcOOM/wH7pP702er83vUctDcRANz+FQ9T7rhopWN58lgNjayxWh0T62J/+DV6K/T9050e3p12X7kU4bAfonaZuhYgyY/r5n0F5/fXgdps382Yf3Z5Hnw4LzQB++s7aR/Pp5/Gw/4LB32gix0hujKJ/UinS38u7rNne+lozcgYiOqMWg3Sy3ZJSx+JjOlob4e5KbuVJEPF8CE1lCnFHe4qaQ76ruyhyv52kY1E5k1q+JYLe/y+hrZyGwhD1VrNSSFDcmsUOxBvIpZQFUsRbmrsfkZIIlcDsyHRM/iVDId137w2MQCl9qsKy9BzDj0Y0nP0VtlVnuPM4nOMR3n3c6Ws0VqLmKtdBeLe3afeIGAZJeTnR1O7gKhUwqKuNVccznYXMhazHCWitAsZ7jMIJXUniiWdS37vGpwGk1DUEiNKPbTEMrTyTSvjMFXX0vHhOfa5o3X67xe9V7zC2F8m97+v00lpI1PlQFXKV2C7CYceGPMTT7f513bznvj3kt9qu6XLKtIKFkh2f31OS1qTIpR6V7387Q2uAvz445/1uWrA+MHbMZ+WYp4fka3om8ecvkkSBJpbHo7w2Z5Vk6zLM3badsVI5HuDVUoA1lGD0gqaW7Zj9+BGYUX46g3pQC+F7zQ70JMxYT1BBYQyfEr5eIRS0QPuFoi2vLeLI7dUHZCytIJWIhDuqtQLkAK8Y87EnGJspPqjvzM48T/7NgBX1txZJ5yhxCUjZWk3pPlN+NBYumWSiaMk23nhxwcCr6rLIpcYBFyoEapgO//lBTF1TVMSJwy0W5quWKbdnOcYjkF99Poi5uc2YtVj/77rqfTfAQIyAWR09y/erFddQXYeIu610EPs7fd+om9d9E1vqi/arbqtD/jjb8=</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU+o8FP0rTH0uacu1HWEGAbWKR6Wg4osT0g1E2xSalIu//iTlIiDwcb4XmOzurL32JSu55DgMLKfGOcSCRiwzDwPGndRa0ZKYORHmlDsMh8AdQRyv9tByrKzh4PUWLeM2KtpHvwiDHIGCXrQI1vMlv6T3zVxfL9h9AsTIWYaVk66cJ+AyLjATFc0yzIJuFHWj0DHKjllwzHzWtEvvWuYFYi6xpUvW0Fak5ryijYQYOwjNZrPsLJeN4iGyDMNEbw8tj4wgxFr1cplRGiiurvxJ1gcCQUCyJArRJdrxufS549EhwyKJYRXLPxbLQIaNpI/P6fBC2+wF32WDKF3WMYsYJTig31jV5wHEKPIztWAYxVSMwqNJmIYC1mFOdGLm2YWGdqmdCbTDMOZY5yNsrrDaMIAYGIFMt+1WtIvzupZu7cSY8UEUh3x3+W98gE0hiMbg63yd1ora+YAHKlW9BOK4jAQJp1P4o4Z1jAnwVTeBnA+VeYphQOctyuWAzrlih7bp7S2X1WjQIXDxfxq01ZwlyAsOEqjeLGpNiMpvi8R7uRkXZVp+vkNt/3H2XEkJbDunhk1rl8u9odwM0XLH/ePz9e1Nt389aJu9Sdl6tXr2Fyr3QzcptB8Wr8WJP+u+vllto/fS9ljXG3nv9eeBwbxe+3PRSRrD1l2nnif3QWHa+ubft827/BdC897rxJ26+XD2HprN5xK5XbxN2G3JG07nnSE0ujAvgf1c592xf18cDRvetx0h96o9cF9GwPzmN+nZ9al713tveu0Ji77sVbp7/Hdt6zPvJf1PIGK9VGPgNjLXsktYnBYzZaG+PkhdnbESHy6ACa2qdintcBIpd9R3ZA+Xa7NUNxvGVdksX5fKZi7XNAryx7bNa6NmFJvNtcgsWexRrEdsQFUsJbnLsTlNkIQOlwWCWJ9GiVQ6rp1AbGCBMy5ry0MQMQ6dSMrzyPQLI+vzazZJSv0kN/9cBEbODvJa5k8kHtljXBsIiHck2TR3JLkNhI4pKN1WY83lXHMhSzHB00QEZnaKswwSqeyxElnHypcLiNNwHIAiisLITwLIjkfjtDCIL/8tHROeWhutmveUHrejie1/W9dA+vhUOXCVzRXIPsKB28VYp3I85fx2ymv4WuJTdbJkQUVMyZLJ7qefOVEDshmSNKePuvdhrplvNvwDwO+96AQxtF+TTSh/SrcCr+9veRNI7aiuezrBZnaSTabTJG1jPp9DsYRHqkrIsJAHJJHqtuhEX8DQBgWddZVsiO8F39h3KSZixDyBBYRy7DLp8oy3gwdcvR1ceVzm5z5MdkLK0gmYi0O2eiDfPYrxyacRcYjyk+Yn+TeLYv+nYwewtuLIPOXTQVA2VCt1jSyOTAaJJCyVAhjF2+CHAA4F3zVuirzhIuRA9RMBx79klLJVNExIlDDhNrTUsK22KU+xGIPz4/QLJhX0zQuP/vcTT6fpCBCQ70JOU3x1UTvqCLDhlmKvgh4R7eIp0d5lV/1l/m3ZqtP+jFf/Ag==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17C1D0B818F68133E0533E991F0A06EE</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17C1D0B818F68133E0533E991F0A06EE</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b54ca523-aea1-45b1-9f0f-eec821a32f9c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>31d2392e-5053-43d4-b375-6fa36d10c41a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00046_PERM_UVTC_UserName_Valid_Role_Linked_LASP_CS_with_TokenType_UnlockMe_200_OK_P2" searchProperties="true" id="128b724f-622c-499e-ad3d-f32cd61c135c"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="eb3a9306-9002-4083-8ca8-aa6e7ad24998"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdLLASPCS"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="2badc717-8522-4220-9e91-de086e841493"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node LLASP_CS" id="6b7897d9-87ad-421f-bd09-f68a641b14f4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdLLASPCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="24c0341e-7b96-4f12-bba8-9c729fb3fc55"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17C18E707F12BEFCE0533E991F0A36B0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17C18E707F12BEFCE0533E991F0A36B0</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150605_014839</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_6bcf6423-1e1e-4b79-849f-750b464c0f36</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_6bcf6423-1e1e-4b79-849f-750b464c0f36</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc9o6EP4rjPvYMZYvkOAJzBASUlJSOJgmJC8dIa+NWlt2LJnbr69kwAFCcjjnybPr1e63F33aK47jyHLbnEMmaMIqyzhi3C20TS3PmJtgTrnLcAzcFcT12g9916oiF++OaJXeTVP7VZ+SoO5Ytm6CCbozvWjol04j0C9qaOrUHYICuy5NOc+hx7jATDQ1C5k1HdV15IyR7Zo117moWnbtRas8Qsalb2lSRdoW1JI3tZkQqWsYi8WiurCrSRYaFkKmMXnoe2QGMdZaV5uMikBZa2tPqj4QiCJSJUlsXBkHNlc+dz0aMizyDLax/I9iIQM1DGnjcxp+0cqz4PdYkBRiB7OEUYIjusaqPg8gZolfaUdhklExiz9MwkTKsQ5LohPTYV804xDamY4OEGYc63yGza2vEQSQASNQ+TnqNbUv53WtODrOMONBksX8UPxveIDNIUpS8HW+S2sL7XyHJyrVugLi9hiJck7n8EMNa4oJ8G03gZzvqjLMIKDLPuVyQJdcoTP24R2Jm2rc0BC4+D8N2mvOxskjjnJo1fNBbzwMfnp/Fjz9loj597vb5/zFpF//aRYA9o0LRdnajXg0lOUQbU4sreBr0n6Z12bd7BnHFxd0PMif0ONkvuIXo4Fh/vz2PX1FU6t91/HGtt0d9oZeNA2Hwcvyzyp8WtXX93fXAbKf7h8u+931199mj64G6TIOVjk3a531vbmaWM/O4H5C7ugrNkf+3aXVn2WNSd8YjsUKwf0LvqST9If/3X6+Z1n4xDovsF4Ph3UrXE/6tcXv59BLL5tlOnv4D3W7O+/l099AxE5UY9C7qXRll7D4nMyUhvp6UJi6qSIfLoAJraVOKe5wc0l31HdlDzfyrYMaJjIbll23uu3r21vkILOL2qjWaCAp7Ehmg+IIYidhAVWxFOVuxuZzgCR2OTAfMn2e5JLpuPaJxxsscKXHRvISJIzDOJH0bGcYfNRYrVehMJcxVxcbv9ZXVKv8SMSADbJ2ICA75OT6ASePgNCUgiJuNddcDjYXshaveJ6LyKzOcZVBLqk9UyzrWs5lzeA0TiNQSI048fMIquksLSpj8M3X0jHhhbbfb3vDXx3vV3EhjA/TO/63q4S08aky4Cqla5DdhBNvjL3L5+O8G/t579y3c5+q+yXLKjJKNkgOf71NixqTclRGt+MirR3u0vy84291ee/A+ASbcVyWMp4/p3vRdw+5fBIkibR2vZWXtvpazefzvGin49hGJt0bqlAGsgwPSC5pbjVO/gAzSi/GWW9KCfwoeKk/hJiLGfMEFhDL8asU4hlLhAdcLRE9eW+W524oByFl6QQsxSldJ5ILkEL86Y5EXKLspHooP4sk8986dsLXXhyZp9whBGWhktR7svpgPEgi3VLJhEm27/yUg1PBD5VlkUssQg7UNBfw8Z+KorimhglJciZ6N1qh2KfdAqdYpeC+Gb1zUzB7uerRf9/1dFqMAAG5IHJa+FcvtquuAAv3qHsb9DR7O93P2PsQXeud+r1mr07HM976Cw==</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU+o6FP4rTPfjnpKkFJGOMIMIygjiBrxsXpyQpjTaJtikXPz1JylQAcXDOU+drK5861uXfMmFxHHkeA0paaKY4IVlHHHpZdaalSbcE1gy6XEcU+kp4g0bva7nFKGHt1usQueqZr1UcVDCDi7ZAZpg2yVV355U/Irt+mdVeBZUzskk0K5SprTDpcJc1SwHorINz2xYHsFzD5U9BxZRFY6twiNNpMbWLkVobUgtZc0KlZp5ACwWi+KiVBTJFDgQIvDc6w5JSGNs1S/WGWWBkvrGnxR9SmgUkSIRMbgAez4XvvSGbMqxShO6ieUfiwUBrALt40s2/WXle6nf4YHIlk3MBWcER+wDm/r0qAqFX2hEU5EwFcZHk0DQANt0SWyCXP7LAvvUTgTaY5hIbMsQow3WgAY0oZzQwsOgU7N+nda1bOsowVwGIonl/vK/8aF8TiMxo74tt2ltqJ0O+E2l6heUeB1OolSyOb0zwzrDhMpNNyk5Hapwn9CALbtM6gFdSsMO7NI7WK6rccWmVKr/06Cd5qxBHnGU0jq6ifpgNiKoDJ3r7tUtpTgMb51JY9SrZQR2nTND3tr18mAo8yFa71A397FbJsFNP+mMP+6dj2RVvh4//EE3bBQukPIbsYSsfQnOnsQ7kHfduTMf+y3/d8u9D+Fs8fzawYuVi5+ih/aTeOgOlSwNKvIRRhiFg5tm4FbTZqviMDr8nfwZo0r/b+caTAcfvNSvjG/9Vg/2wPgGPzX6r39DJs8W8ONh1khbbHLeToeus0I9Vz60n0Gjlqezw3/ftj3zw3TySonaLs0YdK4Kbd0lrH4WM2Nhvh1krt7MiI9UlCurbnYZ7fBSLXfM93QP12tUaaLzVgVW2si5bLWbLVgulVrVKmrDRunsEm5FZs3igGJT8ICZWEZy12PzM0ESe5Jynyb2XKRa6aT1A+IVVrjQ4QN9CASXdCS0PCN/9fZWVkiuIiLQdAGXjv8+n76JhVW4E6rP+0kjUDTZE2WE9kR5QAmbMWqU2wy21JMtlS7GO56nKkLFOS5ymmptT4zMeo57XgaSxbOIGqogFn4a0eIsnGWlAXL9dWxMZGYdtEbZcTua2OG/bQ20j8+MgzS5XFLdR/rN7YK2iRxP2N1NeAvfSH1mTpYuqEoYWTPZ//U5J2ZA8iHpdhvD+5fm8AVtmecbTgPQJfm6E/xACxxWJA/kz9lO2O3tre8BrRz1bT/fMSq+F9P5PM1a6LolkGh4YGoEoAOGlKRa21Yj8UY5yFHASRdJTvwgeG7fp5iqkA8VVjTWI1fIlie8HIZUmpdDRx+W5anPkr2QunSKLtV3tmakXz2G8Y8PI+IR46fN9/qzEIn/2bFvsHbi6Dz1w0ExPjUrc4msjswFERqWafkTyS74dwDfBd835kXOuSg9UJNU0eN/CkbXahYmRKRcda6szLCrtRlPtZpR79PpC0wm5/n7jv37A89m2QgQql+FkmX45pr2zBHg0x293gQ9ItnoJ8neZ1f/Yv5q2anT4YzX/wE=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17C18E707F11BEFCE0533E991F0A36B0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17C18E707F11BEFCE0533E991F0A36B0</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57925f3d-0445-48fc-849a-c3d2a5ba6773</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0b9bbf2d-1b36-4fc2-84c3-ff96750d36d4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00047_PERM_UVTC_UserName_InValid_Role_dsp_with_TokenType_UnlockMe(Negative)_403_FORBIDDEN_P2" searchProperties="true" id="3dbb7ac0-5813-4d94-a696-0fa7287c28ca"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="100c8ea8-29e1-472c-b9a8-d6a6a47abb9b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdDSP"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="217dcaed-083e-4fbd-a5bb-9831671233bf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DSP" id="edc522ed-7ed6-4992-a305-7169d324988e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDSP"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="e0ee4819-eee8-4aa8-b2bf-4544bc604392"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","API_NOT_AUTH");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>DSP</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17C1CD23EB1F6695E0533E991F0AB700</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17C1CD23EB1F6695E0533E991F0AB700</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150605_014845</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_2fe04054-e9ea-43e6-ac5c-71e991baf6c3</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_2fe04054-e9ea-43e6-ac5c-71e991baf6c3</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+o6EP4rTP14pvSFgtARZgDRixdEAZXjFyemS4m2aUnSAufX36RABRQu937q7Haz++xLnuwVR2Fgu03OgQkS0cIyDCh3M21dSxh1I8QJdykKgbsCu6Nmv+faRdNF2yNaoXtd197sKZiOWXZ0qAHSnRJUdITLWL+0oFaz3tG0gkvSlPMEupQLREVds02rrJsV3XTGZsm1Kq5pFh2z+qoVnoFx6VuaFE1tA2rJ69pMiNg1jMViUVyUihHzDds0LWPS743wDEKkNa7WGWWBWGNjj4seYAgCXMRRaFwZezZXHndHxKdIJAw2sbxjsUzDrBnSxuPEv9Dys+B16TTKxDaiESUYBeQPUvXpg5hFXqEZ+BEjYhYeTcIylWMdlljHlkMvNGMf2pmO9hAyjnQ+Q9bG1xCmwIBiKDwNu3Xt4ryuZUfHDFE+jVjI98X/hgdoCkEUg6fzbVobaOc7/KFSjSvAbpfiIOEkhXs1rDHCwDfdBHy+q8IDgylZ9giXA7rkCp2xC+9AXFfjmvjAxf9p0E5z1k6eUZBA47GUfniLeLYM5nd/Kqtfc07TuPMyIb1OPQOwa5wp8tauxYOhzIdofSJ9+iX6t97ENprD5uSxjf0JS7BoVz9fnz8GH+1x2eaDePi3PRmMq7VSLPzyc7/aC1/YKpkFi/mD8S6en/1oMUwxeShdLtmrw95nvQVttX5fmuSmxpbLEblcVuD29ckZDYiFZovx4wsMyR2h8/Iqbd8/3ZU6+LJ8W7oJw344+By3DR+e/nqyUJ/j306L8vtmy6nn6ezg39dt7/woef8ALLaiGoPudeFGdgmJ02SmNMTTp5mpGyvy4QKo0BrqlOION5F0RzxX9nAtdxyzZplWzS5V7Jtmq9OR98i6MZtmuVYzpbAlmTWKA4jtiE6JiqUodz02pwHi0OVAPWB6GiWS6bh2wuM1EqjQpUN5CSLKYRxJerZ85PMP87PmQYlZQZowm1WntiCxVriPxIAOWHMqgO2TcmWPlIeASUxAMbcabC4nmwtZjDlKExFYxRQVKSSS25miWdd2qmWDkzAOQEE1wshLAijGszgrjcHXX1syDs+016OH7LodTezw37YG0sYjyoCrXFog+wjfXpeyW94mcjzh2m7CW/fNxCPqZsmCCkbwGsn+r685UQOSD8mwM35rj96sLe7c/LzjsiDfTxonQBmH9cgDeSnZCbt9u+UrIHmjse3mHFnFeTFJ0yRroOOUDCbdG6pChmkbI8CJZLbVOPoEauRejLOekRz4QfBcvw8xETM6EkhAKAeukIln7A0j4Gpv6Mqrsjx3KdkLKUsnYCl+0rUDufMoxCfXIuxiZSfVD/KziJj31bEffO3EkXnKtUEQ6itJPSGrI3OBI+mWSPKL2K7znxz8FHxfmRc5xyLkQL0nAo7/KShWq2sI4yihonutZYpdps1wilUM7pfRNzcZmefbHfn39U4n2QhgkDshJ5l/9Ui76gpQf4etN0F/Jmzn5hRh76NrfFN/1+zU6XDGG/8A</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynmcMpbNJeAKVHFL4iRkMpgkM/OypcgNKLElR5K57NevZMADJGTZfXJ1u9V9+qKjvpA4iT2/IyUIRTkrLZOYST/XtqxMMJ9jSaXPcALSV8QPO8M73ysjH2+PWKWg37L+mkxekIfJi40aULOryK3azRdEbGhCxUW1OiK1SJtKmUHApMJMtSwPuTUb1W1UG6OG79Z8r16uevXfVukJhNS+tUkZWRtQS9myZkqlvuMsFovyolLmYup4CLnOz+FdSGaQYKt9sc4oDyTaG3tSjoBAHJMy4Ylz4ezZXETSD+mUYZUJ2MSKjsVCDmo62iaSdHpmFWchCtiE52IPM84owTH9G5v6DEHNeFTqxFMuqJolR5NwkXFsw5LYxK2yM8vZh3aioz2EQmJbzrC78TWCCQhgBEqPo6BlnZ3WtfzoWGAmJ1wkcl/8b3iAzSHmKUS23Ka1gXa6w08q1b4A4geMxJmkc7g3w5piAnLTTSCnuyo9CJjQ5R2VekCX0qBzduEdiOtq9OkUpPo/DdppztrJE44zaLNg1WsMurB47zIUvz2xdDD3rhsD/tRo5QB2jXNF0dq1eDCUxRCtT0wTNmiOn2Mxqa8e0244GS+z1dV7PM3CX9eN8Hc4PL9DsXv9AA+jR48F8Y87ltLXy9dZI2HpTeD2xQgDFvf1x9m4NrpessbrDbn1LifDiFfD5/ApGP687U+f328T7+a5cZWqYfztknH865ucyU5PNeP+2/Kq9/1H71pyxhtX3f5P7+n5B0rpS89bdRR1Bg/nPBm2inR28O/rtnc+zF5egaitaMYg6JcudZew+prMjIZG9iQ39VNDPlIBU1bbnDLc4Wea7mjk6x6uZfe85/b6XmXQdS/r9WZtgGqVyqDZdC9Rp3uO0JZk1igOIPY4m1ATy1Duemy+BkgSXwKLQNhznmmmk9YXHvtY4VLARvoScCZhzDU9c7KYV2PBwHsTMczr00Xicl45t0r3XH1n30VnokDsUbLr7lHyCAhNKRjeNmMt9VxLpUvxjueZit3yHJcZZJrZhSFZ36s2ao6kSRqDAeokPMpiKKezNC+MI9dfz8ZE5trRYJxftqNpHf7bVkDbRNQYSJNLF3QX4ZO3xd0mcjzh6m7CW/edLKLmXulyKkHJGsn+rz9TYsajGJF++LCFXFiedlLX4uNJ5ws8zmEpikDRnO6E3T7amv41YbS3jXzHbvm9nM3nWd67arXiCO3eMcVxkOeEQDJNaasxfwPmFF6ck96PAvhB8EK/DzFTMxYqrCDRs1bKxRMWhhCkWRgCfUeWp24jeyF16RQs1We6XqyXHYP4y32I+MTYafWD/iy4+JP4Z7524ug89b6gKJsaybwdqyNzQbh2SzXrcbHr/DMHnwXfVxZFLrAoPVAvmYLjf0qGzloWJoRnTAV9K1fsUmyOU61S8P8YfXCTs3ix1tF/3+tsmo8AAb0MSpr7N6+zb64Am+7Q9CboEaYefMXU++jaH9QfNTt1Opzx9j8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17C1CD23EB1E6695E0533E991F0AB700</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17C1CD23EB1E6695E0533E991F0AB700</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>930885f3-a4db-4c89-a0c5-4b5518f49e63</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c8221854-35d6-498d-a02d-421784be1022</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a8d70240-77fd-4efe-ba84-308dc9d6ea40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00049_PERM_UVTC_UserName_InValid_Role_dsp:customersupport_with_TokenType_UnlockMe(Negative)_403_FORBIDDEN_P2" searchProperties="true" id="9e1927a4-e2ae-4ad0-a778-3c363a62ff82"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="5c20e7fc-55da-47c2-8457-03c44e64ff48"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdDSPCS"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create" id="1c1fd38e-1daa-4e18-866a-3151a12d0413"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DSP_CS" id="ed7cc3eb-5811-4fbb-8f37-89b261086078"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDSPCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="c0f4c744-323d-4613-a8e8-8dd513c2c397"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","API_NOT_AUTH");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>DSP_CS_1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17C1DBB1C34EA826E0533D991F0A3A09</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17C1DBB1C34EA826E0533D991F0A3A09</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150605_014851</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_94dab67d-9cc0-4731-884b-e7268252798f</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_94dab67d-9cc0-4731-884b-e7268252798f</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvNIGdnGXOwKVBEgM8xAIIEk1LykhNyAiC0bS+aSr1/JgAOEZNl9cnW71X36oqO+4TjwLbfBOcSChiy3CXzG3VRb05KYuSHmlLsMB8BdQdxho9d1rYLh4sMRLddp1bRXx/bwpFzxdIcQQ7crRVOvVu2JDhWrXLVKVsWpTqUp5wl0GBeYiZpmGWZJN8q6YY+MomuWXatSqDjGXy33DDGXvqVJwdD2oDa8ps2FiFyE1ut1YV0shPEMWYZhonGvOyRzCLBWv9lllAaK63t7UvCAgO+TAgkDdINObG487g7pjGGRxLCP5X0Vy0CGg6SNx+nsh5adBa/DpmEqNjELGSXYp+9Y1acHYh56uYY/C2Mq5sGXSZiGcqzDhujEtNkPDZ1Cu9LRCcKYY53Psbn39QhTiIERyD09dmraj+u6lh4dxZjxaRgH/FT8b3iArcAPI/B0fkhrD+16hxcqVb8B4nYY8RNOV3CvhjXCBPi+m0Cud5UbxDClmy7lckA3XKFDx/DOxF01WnQGXPyfBh01Z+fkGfsJ1J+Lpd/56P0pf7+Io1ZxQU1e7iS9nyvBaymAY+NUkbV2J54NZTZEuxNeZbBhi9V02Sdm3h51n+c/805z81gpv/lQWs2L25dNx0Fk4oQ+KXUb/TgIvPH4jVbyL2PWHw78F8Z/DcTtAlljPlz4fh4HTqm7fEN/+917fj/yeqX58Fd7O972n5YPCE0mdGTdd3/PZ9vbYi9etselgX13h2C97VW9GW1Gdj96HpvJ0/v2IR+0u/3mfPTwZ0pqWTpH+E91hzs/TCYLIOIgqjHotHJ3sktYfE9mSkM9fZqaupEiHy6ACa2uTinucBNJd9RzZQ93cts2HNMwHatYtu4at+22YRvmndEwSo5jSOFAMjsUZxCbIZtSFUtR7m5svgdIApcD8yDWV2EimY5r33hsYYFzHfYoL0HIOIxCSc/FBVtPnMCwzXfPjKzVsrx932ztwNRy96Hos37cmAqITzm5fMLJj0BoREERt5prLgebC1mLJV4lwjcLK1xgkEhqjxXLupZdLSFOg8gHhRQFoZf4UIjmUVoZxHdfS8eEp9rWcPDaHL6m1wF9mdz5v0MdpI1HlQFXCd2C7CVceGHMQzZfZ+0cZ31w30g8qm6XLKqIKdkhOf31MStqSLJBeWyP0rQOuDPz644fqvL5OPoGGTovShbNW9Gj2IdHXD4HkkDqh74usVlYFpLVKklbadtFFEv3SJUJGRYaAkkkxW1H4RswlHlBV70nGfCz4Jn+FGIi5mwosIBAjl4uFa9YIIbA1QLRkXdmc+12chJSlk7ARlzSNX25/CjE3+5HxCXKTqoH8rMOY++jYxd8HcWRecr9QVA2U5J6S7ZfDAcJpVsqWTCMj51fcnAp+KkyK3KGRciBmiQCvv6TU/RW0zAhYcJEp6WlimPKTXGKbQTuh9EnNymrZ2se/fc9T6fpCBCQyyGnqX/1WrvqCrDZEW3vg15mbvkAfcPcp+jqn9SfNUd1Op/x+j8=</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VyvcxZSzbQMAVqGJLhrohIWzD5SUl5AaU2DJIMku+fiSzBAgwzDy51G51n+4+OtKDwGHgeGUhgEsasdQqDJjwEmvRiDnzIiyo8BgOQXiSeJ1y89lz0sjDuy1GqlErGu+Z+3EBZTPItO9zxMy4DjLzaHRvZp1CHhE7744JKFchYmgwITGTRcNBdtZEORNluyjv2VnPddN2LjM0Un3gQsVWLmlkbEGtRNGYSjnzLGu5XKaXbjriE8tByLYGzecOmUKIjdLDpqIkES9t/UnaBwJBQNIkCq0H68jnwRdeh04YljGHbS7/Ui5koYKlfHxBJ7+M/V7wG2wcJcsqZhGjBAf0C+v+NEFOIz9VDiYRp3IaXizCRjqwCStiEjvDfhnWMbQbAx0h5AKbYortbaw2jIEDI5DqtRtF49dtU0u2djlmYhzxUBwv/xseYAsIohn4ptiVtYV2e8AznSo9APEajASxoAt40WSdYQJiO00gt4dKtTiM6eqZCkXQldDorEN4J8tNN2p0AkL+nwEdDGcTpI+DGEqKT3831ndO9y0MnX7VGYnmul4bzHmdFBMAh86JYT/azfKElHsSbXa8sdxUliu/eW8AC6sVt+2mv7A/KuKr7C7D51Z7ipyGX3cq7WUt5/flU++vahwgPJ+qn6+V+8feCibEsv5kRnzxme+L5WcB3NHvYXuiuB81e4Ed4cHX+onJ0dOIiqhQD+acuf74rj+YOO08exsO58NK5UV+VqqVaQt6lXX5z91w3sx9DPjHW2M1qBZyQ8S25Z7gP7btznwnHn0AkbulpkGjlnpUU8LyuphpC/XNceLqzbT4CAlMGiW9S2uHFyu5o76nZrhZ2/dVu1ap2FU3Uy/nnVwdZV23VijYj6jsllFhJzIbFCcQqxEbU51LS+6GNtcBktATwHzg5iKKldIJ40rEGpY41WBtdQgiJqAbKXkWIZuvP7mLRmhmjzM4Xs7ul4tlARupl0i+sldeHkvgR5ps20ea3AZCZxS0cGteC0VsIVUv5ngRy8BOL3CaQayknWuV9ZxMPmsJGs4C0EitMPLjANKz6SzpjCU2X8fERCTWdr2bnLaLdZ3+27VA+fhUOwhdSwXUGOHM5eLsCrlccOaw4F34cuxTfbBUPyWnZIPk+Nc3TTQ/9hypdVrv1c67vcO9d79tu2rIz53WFVDWaT/2ifwFPUi7u7rVJaBko7Sb5hzb6Xk6XiziZICZjGtxFd7SHbKQY3WAxErY1t3oE5i1j2LddIvsgZ8k39uPIcZyyjoSSwgV4VLJ8oZnQweEfjY01ElZ3fomOUqpWidhJc/ZqoF68mjEV19FxCPaT5lb6rOMuP89sTOxDvKoOtWrQVI20St9g6wv8IJEKixV2hfxw+DnApxLfmzcN3mPRSpCjWIJl/+ktKgVDUxIFDPZqBmJ4VBoE5xyPQPv2+lHmETL9487+u+vO5MmFNAPSeWfxNd3tKePAJsciPU26QW9rl3T62N0pR/mn5aDPp1yvPQP</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17C1DBB1C34DA826E0533D991F0A3A09</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17C1DBB1C34DA826E0533D991F0A3A09</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>930885f3-a4db-4c89-a0c5-4b5518f49e63</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c8221854-35d6-498d-a02d-421784be1022</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a8d70240-77fd-4efe-ba84-308dc9d6ea40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>60d0c277-a9e2-413c-acfa-fba360ade9bd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bbaf77dd-7e4a-4afb-a071-c5af692dba21</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>role</con:name><con:value>nodeIdRTL</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:RET_CS_1</con:value></con:property></con:properties><con:tearDownScript>if(context.expand( '${#Project#runTeardown}' )=='true')
	{
	log.info("Executing TearDown for Suite '" + testSuite.getName() + "'");
	
	for ( testCaseResult in runner.results )
	{
	   currentTestCaseName = testCaseResult.getTestCase().name;  
	   currentTestCase = testCaseResult.getTestCase(); 
	   log.info("Current TestCase : '"+ currentTestCaseName + "'");
	   log.info("Current TestCase Status : '" + testCaseResult.getStatus().toString() + "'");
	   
	   if ( testCaseResult.getStatus().toString() == 'FAILED' )
	   {
	      log.info("Re-executing failed TC");
	      def currentRunnerTC = currentTestCase.run(null, false);
	      log.info("Status on re-execution : '" + currentRunnerTC.status + "'");
	   }
	}
	log.info("Execution of TearDown for Suite '" + testSuite.getName() + "' Completed" );
}</con:tearDownScript><con:reportParameters/></con:testSuite><con:testSuite name="03.UserValidationTokenCreate_FUNC_P1" id="287ec5e3-8f63-46cf-9692-39c677ed5c50"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00018_FUNC_UVTC_UserName_RequestorUser_active_Requestee_active_with_userlinkconsent_exists_ResetPassword_200_OK_P1" searchProperties="true" id="532c5408-1b50-4e4e-af3a-8a7f65500ead"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="8e757f06-c4f4-4d14-afbc-137005aa106f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="c93fc541-fa69-49ab-8ec3-2cd1151b927f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="6b846af3-9668-4364-8d64-11f896b0b4fe"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU" id="25315573-f740-4c5f-99e7-12d718f66b91"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call PolicyCreateULC_API" id="c3559435-612a-4acf-be14-d8a99b56131c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateULC_API");


myTC.setPropertyValue("nodeid",tP.getPropertyValue("nodeid"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="c8b6d75a-9e34-49e5-9ac3-99d43a36b23c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EP4rKH1cBSeBAIkKEpd2hZayLdDt7r5UrjMJboMTYjuF/vpjB0iBlh7OeYpmMp755uLPc8nxInb8LueQCZqwymoRM+4X2rYhM+YnmFPuM7wA7gviT7s3I9+pWj7eHTEqw0HbeGzV3bBJnhqmG9aIWQerZra8BjZrXoBblt1seVagTDmXMGRcYCbahmPZrmk1TMudWS3fbfp2vepazl+j8gsyrnwrk6plbEGteNuYC5H6CL2+vlZfa9Uki5BjWTb6fTOakjkssNG53GRUBMo6W3tSDYBAHJMqSRboEh3YXAbcn9KIYSEz2MYKTsWykOUhZRNwGl0Y5VkIhixMCrGPWcIowTF9w7o+NyDmSVDpxlGSUTFfnEzCtrRjE1bEJHadXRjoENqZjg4QZhybfI7tra8JhJABI1C5nwzbxsV5XSuOzjLMeJhkC34o/jc8wHKIkxQCk+/S2kI73+EnlepcAvGHjMSS0xzGelhTTIBvuwnkfFeV2wxCuhpRrgZ0xTU6tA/vSNxUY0Aj4OL/NGivORsnv3AsoeNE18HDfc8Z3y7x6ObK6aXjedCKrcC6axcA9o0LRdnajXg0lOUQbU7cdUd3f9M5iq/QJLQ8kONv43VjZsmnv5Nr2W+Osimiy/iuh+qjaGU1pw17MqG928Z6yIKH73/yu2dJmmHq5N711HtAL+7b9yGTb30nH2Td9XQVDoXj2d96M7xsdGsi/PMQzlqBex+FJMCTH/nL4Ef0/Mf2Hlb93+N7J1p5sp733tD4arRugVdrvIke6eNADttlOnv4D3W7Oz+VT89AxE7UYzAcVK5Vl7D4msy0hgZmWJj6qSYfLoAJo6NPae7wpaI7GviqhxvZbvadWmvQ6LnXrV7Ndq8st1a78jz72uq6vUZ/RzIbFEcQ+wkLqY6lKXczNl8DJAufAwsgM/NEKqbjxhceB1jgypBN1CVIGIdZouiZztMEJHN4bclxHoUvYdO1SOvZqIwT8ZP9zLqhgOyAkm37gJInQGhKQfO2Hmuu5poLVYolzqWI7WqOqwykYvZMk6zv1Fsu4nSRxqCBokUSyBiq6TwtCoP45uuYmPBCO7maFZftZFrH/3YVUDYB1QZc59ID1UX45G2xdomcTri+n/DOfVcGVN8rVU6RUbJBcvjrfUr0eJQjojJ67E8f7R3u0vzs4x9Poi9AoeN6lIGCnO6F3b3c6g1QrNHZdXOJ7eqyKvNcFg2s12soU+6RrhCyHDQFIhWvrWfJCzBUekFnPSIl8KPgpf4QohRzNhVYwEINXKUQz9gapsD11qA4ClbnriQHIVXpBKzEZ7p+rDYejfjLpYj4RNsp9a36vCbZe+Kf+dqLo/JUS4OgLNKSfkDWJ+aCJMotVdSXZPvOP3PwWfBDZVnkEotQA/UkBZz+U9Gc1jYwIYlkYjgwCsU+zxY4xToF/93og5uCysvdjv77cmfSYgQIqI2Q08K/fqJ9fQVYtMfV26An6Lr5FV0fout8UH/U7NXpeMY7/wA=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17C238D6B5F7B315E0533E991F0A5B6C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17C238D6B5F7B315E0533E991F0A5B6C</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17C238D6B5F8B315E0533E991F0A5B6C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17C238D6B5F8B315E0533E991F0A5B6C</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150605_023033</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150605_023038</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150605_023038</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150605_023038</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EP4rKH1cBSeBAIkKEpd2hZayLdDt7r5UrjMJboMTYjuF/vpjB0iBlh7OeYpmMp755uLPc8nxInb8LueQCZqwymoRM+4X2rYhM+YnmFPuM7wA7gviT7s3I9+pWj7eHTEqw0HbeGzV3bBJnhqmG9aIWQerZra8BjZrXoBblt1seVagTDmXMGRcYCbahmPZrmk1TMudWS3fbfp2vepazl+j8gsyrnwrk6plbEGteNuYC5H6CL2+vlZfa9Uki5BjWTb6fTOakjkssNG53GRUBMo6W3tSDYBAHJMqSRboEh3YXAbcn9KIYSEz2MYKTsWykOUhZRNwGl0Y5VkIhixMCrGPWcIowTF9w7o+NyDmSVDpxlGSUTFfnEzCtrRjE1bEJHadXRjoENqZjg4QZhybfI7tra8JhJABI1C5nwzbxsV5XSuOzjLMeJhkC34o/jc8wHKIkxQCk+/S2kI73+EnlepcAvGHjMSS0xzGelhTTIBvuwnkfFeV2wxCuhpRrgZ0xTU6tA/vSNxUY0Aj4OL/NGivORsnv3AsoeNE18HDfc8Z3y7x6ObK6aXjedCKrcC6axcA9o0LRdnajXg0lOUQbU7cdUd3f9M5iq/QJLQ8kONv43VjZsmnv5Nr2W+Osimiy/iuh+qjaGU1pw17MqG928Z6yIKH73/yu2dJmmHq5N711HtAL+7b9yGTb30nH2Td9XQVDoXj2d96M7xsdGsi/PMQzlqBex+FJMCTH/nL4Ef0/Mf2Hlb93+N7J1p5sp733tD4arRugVdrvIke6eNADttlOnv4D3W7Oz+VT89AxE7UYzAcVK5Vl7D4msy0hgZmWJj6qSYfLoAJo6NPae7wpaI7GviqhxvZbvadWmvQ6LnXrV7Ndq8st1a78jz72uq6vUZ/RzIbFEcQ+wkLqY6lKXczNl8DJAufAwsgM/NEKqbjxhceB1jgypBN1CVIGIdZouiZztMEJHN4bclxHoUvYdO1SOvZqIwT8ZP9zLqhgOyAkm37gJInQGhKQfO2Hmuu5poLVYolzqWI7WqOqwykYvZMk6zv1Fsu4nSRxqCBokUSyBiq6TwtCoP45uuYmPBCO7maFZftZFrH/3YVUDYB1QZc59ID1UX45G2xdomcTri+n/DOfVcGVN8rVU6RUbJBcvjrfUr0eJQjojJ67E8f7R3u0vzs4x9Poi9AoeN6lIGCnO6F3b3c6g1QrNHZdXOJ7eqyKvNcFg2s12soU+6RrhCyHDQFIhWvrWfJCzBUekFnPSIl8KPgpf4QohRzNhVYwEINXKUQz9gapsD11qA4ClbnriQHIVXpBKzEZ7p+rDYejfjLpYj4RNsp9a36vCbZe+Kf+dqLo/JUS4OgLNKSfkDWJ+aCJMotVdSXZPvOP3PwWfBDZVnkEotQA/UkBZz+U9Gc1jYwIYlkYjgwCsU+zxY4xToF/93og5uCysvdjv77cmfSYgQIqI2Q08K/fqJ9fQVYtMfV26An6Lr5FV0fout8UH/U7NXpeMY7/wA=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17C238D6B5F7B315E0533E991F0A5B6C</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZWwZ24ArUMVlyHgn5AJJNuFlSpEbEDGSY8lc8vUrGfAAIVl2n1zdbnWfvuioLwSex07QEgJSSTkrreYxE0GubRhZygKOBRUBw3MQgSTBsNW/CpyyHeDdEaMUdhvG76pXiRy/XjVt/OKYLrIjszYGZGJwAYjvv6Cap0yFyCBkQmImG4ZjI8+0fdP27u1a4FUDB5XrnjcySo+QCuVbmZRtYwtqJRrGVMoksKzlclleVso8nViObSPrqX81JFOYY6N5sckoD5Q2t/akHAGBOCZlwufWhXVgcxGJYEgnDMsshW2s6LNYtmXXLWUTCTr5ZhRnIQrZmOdiBzPOKMExfce6Pn2QUx6VWvGEp1RO558mgWzt2IQVMQly2TfDOoR2pqMDhKnApphitPU1gDGkwAiUHgZhw/h2Xtfyo/cpZmLM07k4FP8bHmALiHkCkSl2aW2hne/wRKWaF0CCkJE4E3QB13pYE0xAbLsJ5HxXpdsUxnR1RYUa0JXQ6Kx9eEfiphpdOgEh/0+D9pqzcfKI4wya9adueDe7tOPxc/Lw3nVvXdnx+9ffn73nRg5g3zhXFK3diEdDWQzR5sTMfehXZ0vP79zW1jcVB/dQ1JZ0+VCZfpdV769fS2uI2qOex2/qdc/u3sjrv1v9YU2u358u/WfeW41e+z327sVi9FzzrgZ3wn7EldeRqD2+zLruG/KTqTW6dX7Ben2X0btR+BMt17b/NLt/mf0cLJ/GwEeDZftqcQnIgqqctdy2W/350Ht86g5HU3Xy8rUajoZho0hnD/+hbnfnh9nLDIjciXoMwm6pp7qE5ddkpjU0Mse5aZBo8hESmDSa+pTmjiBTdEejQPVwI6Nqx6nUun7b91C7grwftlep/KjXUc9ueW2/syOZDYojiB3OxlTH0pS7GZuvAZJ5IIBFkJoLnimmE8YXHrtY4lLIBuoScCbgnit6RoKvoro7qawndR+lyWxKV7N6Ml0sjdI1lzfsJm2NJaQHpIzQASkPgNCEgmZuPdhCTbaQqhhveJHJGJUXuMwgU9yeapoNHLfmWYLOkxg0VGvOoyyGcjJN8tJYYvN1TExErh38uM+v26eJHf/b1UDZRFQbCJ1LG1Qf4cTrgnaJfJ6wu5/wzn0ri6i+WaqgMqVkg+Tw15850QNSDInK6Hdn+BvtcBfmZx//eNL6ApR1XI8iULSge2F3b7d6BRRvNHfdfMOo/FbOFossb6DrVqxUubd0hSzbsYZAMsVs63v+CswqvFhnPSMF8KPghf4QYianbCixhLkauFIunrE3DEHovSFUV2V17lJyEFKVTsJKntJ1YrXzaMRfrkUkINpOqW/VZ8nT6E/HTvjai6PyVGuDpGyiJf2ErD+ZC8KVW6rIj6f7zk85OBX8UFkUucAi1UC9ZBI+/1PSrNYwMCE8YzLsGrlin2lznHKdQPDH6IObnMyL7Y7++3pn0nwECKidUNDcv36kA30F2GSPrbdBTxK216t+RdiH6Jof1B81e3U6nvHmPw==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17C238D6B651B315E0533E991F0A5B6C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17C238D6B651B315E0533E991F0A5B6C</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150605_023038</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17C238D6B652B315E0533E991F0A5B6C</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00019_FUNC_UVTC_UserName_RequestorUser_active_Requestee_active_with_userlinkconsent_does_not_exists_ResetPassword_200_OK_P2" searchProperties="true" id="20ac6834-da69-46d5-972d-6f198c60c1ea"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="6bd5f8f3-aea0-4a72-b3b0-2336592d2583"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="bf1bf949-7def-476f-b82c-d8ae45d958a2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="6c2b20fa-d818-4d64-985c-cebbd1daa4a0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU" id="700582e8-cd4f-40e2-a40f-13c128d1da12"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="be04ac44-3ad7-4316-8f05-ace8b1cc9a4d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZrU/I6EP4rTN+PZ0raglw6wgxX5aiIUBX94oR0C5E2hSYt6K8/SYEKKB7O+QKz283us5c82UuOA9+yG5xDJGjIcuvAZ9xOtTUtjpgdYk65zXAA3BbEHjXubm0rb9h4d0TL9do17c0rWVUoeESvFIyqXqy4nj6xcEmvXpTMSblsWEULpCnnMfQYF5iJmmYZ5oVulHTjwjEqtmXYZilfrZRftdwTRFz6liZ5Q9uCWvOaNhNiYSO0Wq3yq0I+jKbIMgwTje9uR2QGAdbql5uM0kBRfWtP8i4Q8H2SJ2GALtGBzaXL7RGdMiziCLax3FOxDGRUkbRxOZ3+0bKz4PaYF6ZiC7OQUYJ9+olVfe5AzEI31/CnYUTFLDiZhGkoxzqsiU7MIvujoUNoZzo6QBhxrPMZNre+huBBBIxA7nHYq2l/zutaetSJMONeGAX8UPxveIAl4IcLcHW+S2sL7XyHP1SqfgnE7jHix5wm0FfDusAE+LabQM53lRtE4NH1LeVyQNdcoUP78I7ETTXadApc/J8G7TVn4+QJ+zHUJ200ms8Je8dmsTHm8/vrUVBqX7PRuFNLAewbp4qstRvxaCizIdqcYF5z6DQ/ypFltJDFjBvwkpfuq9Ne9i/GvT5j18/LavvZLFWDjlMIHArO5BHz5VywFaVepYQK8/dBcXw1ZvH6/gq/kLvqXbsS9SvBiprjD3QdvHdW1bt5+W/nIVkWXqE/vi3Ef3WbVwv66bwGjy0sOvPb9SAZP924riN6U3dx80DZ4GXUfb6tOqXCQAweuq2HWpbOHv5D3e7Oj+LJOxCxE9UY9Nq5ruwSFr+TmdJQV/dSU3uhyIcLYEKrq1OKO+xY0h11bdnDjWyWW2bbaFasctOqmIVCx7iQP9Wq2TUaRqnT2ZHMBsURxFbIPKpiKcrdjM3vAElgc2AuRHoSxpLpuPaLxzYWONdjQ3kJQsbBCSU9u16y8lyTT5Li0i8UgZdmn+YsDLRcPxT37D5qeAKiA0o2zQNKHgKhCwqKt9VYcznXXMhSLHESC9/MJzjPIJbMHimSta1i5QJxGix8UEBRELqxD/nFbJEWBvHNv6VjwlPtsOOkl+1kWsffdhWQNi5VBlzl0gTZRfjhbTF2iZxOuLif8M59I3apuleynCKiZIPk8NPXlKjxyEZEZvTWGr2ZO9yZ+dnHv59Ev4BCx/XIArkJ3Qu7e7nlGyBZo77r5hKb+WU+TpI4bWCxWECRdI9UhZBhoRGQWPLahxPOgaHMCzrrEcmAHwXP9IcQYzFjI4EFBHLgcql4xtYwAq62hp68KOtzV5KDkLJ0AtbiJ13LlxuPQvzrUkRsouykeiD/VmHkfnXsB197cWSecmkQlE2VpB6QjxNzQULplkrqC6N95z85+Cn4oTIrcoZFyIGaxAJOf8kpTqtpmJAwZqLX1lLFPs+mOMXHAuwvo29uUirPdjv678udTtMRIHKPlPapf/VE2+oKsOkeV2+DnqBr8ze6PkRX/6b+rtmr0/GM1/8B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17C1D0B827B18133E0533E991F0A06EE</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17C1D0B827B18133E0533E991F0A06EE</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17C1D0B827B28133E0533E991F0A06EE</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17C1D0B827B28133E0533E991F0A06EE</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150605_015335</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150605_015341</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150605_015341</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150605_015341</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZrU/I6EP4rTN+PZ0raglw6wgxX5aiIUBX94oR0C5E2hSYt6K8/SYEKKB7O+QKz283us5c82UuOA9+yG5xDJGjIcuvAZ9xOtTUtjpgdYk65zXAA3BbEHjXubm0rb9h4d0TL9do17c0rWVUoeESvFIyqXqy4nj6xcEmvXpTMSblsWEULpCnnMfQYF5iJmmYZ5oVulHTjwjEqtmXYZilfrZRftdwTRFz6liZ5Q9uCWvOaNhNiYSO0Wq3yq0I+jKbIMgwTje9uR2QGAdbql5uM0kBRfWtP8i4Q8H2SJ2GALtGBzaXL7RGdMiziCLax3FOxDGRUkbRxOZ3+0bKz4PaYF6ZiC7OQUYJ9+olVfe5AzEI31/CnYUTFLDiZhGkoxzqsiU7MIvujoUNoZzo6QBhxrPMZNre+huBBBIxA7nHYq2l/zutaetSJMONeGAX8UPxveIAl4IcLcHW+S2sL7XyHP1SqfgnE7jHix5wm0FfDusAE+LabQM53lRtE4NH1LeVyQNdcoUP78I7ETTXadApc/J8G7TVn4+QJ+zHUJ200ms8Je8dmsTHm8/vrUVBqX7PRuFNLAewbp4qstRvxaCizIdqcYF5z6DQ/ypFltJDFjBvwkpfuq9Ne9i/GvT5j18/LavvZLFWDjlMIHArO5BHz5VywFaVepYQK8/dBcXw1ZvH6/gq/kLvqXbsS9SvBiprjD3QdvHdW1bt5+W/nIVkWXqE/vi3Ef3WbVwv66bwGjy0sOvPb9SAZP924riN6U3dx80DZ4GXUfb6tOqXCQAweuq2HWpbOHv5D3e7Oj+LJOxCxE9UY9Nq5ruwSFr+TmdJQV/dSU3uhyIcLYEKrq1OKO+xY0h11bdnDjWyWW2bbaFasctOqmIVCx7iQP9Wq2TUaRqnT2ZHMBsURxFbIPKpiKcrdjM3vAElgc2AuRHoSxpLpuPaLxzYWONdjQ3kJQsbBCSU9u16y8lyTT5Li0i8UgZdmn+YsDLRcPxT37D5qeAKiA0o2zQNKHgKhCwqKt9VYcznXXMhSLHESC9/MJzjPIJbMHimSta1i5QJxGix8UEBRELqxD/nFbJEWBvHNv6VjwlPtsOOkl+1kWsffdhWQNi5VBlzl0gTZRfjhbTF2iZxOuLif8M59I3apuleynCKiZIPk8NPXlKjxyEZEZvTWGr2ZO9yZ+dnHv59Ev4BCx/XIArkJ3Qu7e7nlGyBZo77r5hKb+WU+TpI4bWCxWECRdI9UhZBhoRGQWPLahxPOgaHMCzrrEcmAHwXP9IcQYzFjI4EFBHLgcql4xtYwAq62hp68KOtzV5KDkLJ0AtbiJ13LlxuPQvzrUkRsouykeiD/VmHkfnXsB197cWSecmkQlE2VpB6QjxNzQULplkrqC6N95z85+Cn4oTIrcoZFyIGaxAJOf8kpTqtpmJAwZqLX1lLFPs+mOMXHAuwvo29uUirPdjv678udTtMRIHKPlPapf/VE2+oKsOkeV2+DnqBr8ze6PkRX/6b+rtmr0/GM1/8B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17C1D0B827B18133E0533E991F0A06EE</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VynlMGS9gFlegii0JdyC5FxIm4SWlyG2sxJZBktm+fiQTHCDAMPMCpXYvpxcd9Q1HUWi7Dc6BCRLT3DIKKXdTaU1LGHVjxAl3KYqAuwK7w0a/59p500VbEy3Xbde0N9PHZbtULOlV7Nh6seBYeqVSxDoArkLZKVU9MKUq5wl0KReIippmm5ajmyXddJ7Mimubrl3Kl0vVsZYbAePSt1TJS6sNqCWvaYEQU9cwFotFflHIx2xi2KZpGS/93hAHECGtfrPJKA3E6l/6OO8BhjDEeRxHxo2xp3PjcXdIJhSJhMFXLO9ULNMwq4bU8TiZXGmZLXhd6sfpsYVoTAlGIVkjVZ8+iCD2co1wEjMiguhkEpapHOuwxDq2ivRKM/ahXehoDyHjSOcBsr58DcAHBhRD7nnQrWlXl3UtNX1iiHI/ZhHfP/43PEDnEMZT8HS+TesL2uUOj1SqfgPY7VIcJpzM4UEN6xRh4F/dBHy5q9xvBj5Z9giXA7rkCp2xC+/guKlGm0yAi//ToJ3mbJyMUJhA3br7vLO9v3z8d9B6uY3s+8Ld80cJOut2t5YC2FVOBVlrN8eDocyGaGMxvh7NIjLuzygfj0jvbj59XS/wc1y9x+VJtTEU4dpu+qvgvu0PnVf2+Go++O/OtPLH+uw+F5y7ZNlygo/P0XD4YqJyr8fC/sIeX3/YpXGwRkXivxSD8ixqTiwDmvRzvnqvfP6yPp5v3+cF1uxHv+Li9aQqxiUvWD69DlrtZD5incndaiSm3dv+H1K5Lr0aRb/diWtZOjv492XbOz9M3j8Ai+1RjUG3nbuVXULiPJkpCfF0P1V1p4p8uAAqtLqyUtzhJpLuiOfKHm7OVrlltc1mxa4UnIpVKHRMR/5Uq9at2TBLnc6WZDYoDiC2YuoTFUtR7mZszgPEkcuBesD0eZxIpuPaGY9tJFCuSwfyEsSUw1Ms6Zkloe0wKpvyHszMgrOecZujWajlHmLxSB9ZwxfA9ijZsvYoeQCYTAko3lZjzeVccyFLMUPzRIRWfo7yFBLJ7EyRrGsXK47BSTQNQQE1othLQshPg2laGINv/m0dYZ5KB52n9LKdTOvw27YCUscjSoGrXJoguwhH3hZrm8jphIu7CW/dNxKPqHslyykYwRsk+5++p0SNRzYiMqO31vDN2uLO1C82/2lpnAFlHNYjC+TNyU7Y7cst3wDJGvVtN2fIys/yyXyepA0sFgsGk+4NVSHDtI0h4ETy2uop/gRqZF6Mix6RDPhB8Ey+DzERAR0KJCCSA5dLjxdsDUPgamvoyouyvHQl2QspSydgKY7JWqHceBTis0sRdrHSk+Lf8m8RM++7Y0d87cSRecqlQRA6USf1gKxOzAWOpVsiqS9mu86POTgWfF+YFTnDIuRAvScCTn/JKU6raQjjOKGi29ZSwS7PpjjFagrut9IPNymVZ7sd+fflTifpCGCQGyEnqX/1RLvqCtDJDld/BT1K1+WmdY6u99HVf4h/SnbqdDjj9X8A</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17C1D0B828358133E0533E991F0A06EE</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17C1D0B828358133E0533E991F0A06EE</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150605_015341</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17C1D0B828368133E0533E991F0A06EE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00020_FUNC_UVTC_UserName_RequestorUser_any_with_active_status_RequesteeUser_any_and_active_ValidateEmail_200_OK_P1" searchProperties="true" id="96739875-cac1-479c-91b5-a43e24aea872"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="98be5174-4f70-4dee-966c-b3cfdae07f11"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="40a8a514-67b1-4ab3-a3c0-388fe3df7fd7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="0c02fbcd-54c4-4233-97b0-da881720dae5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU" id="5bc311f1-3128-4e3a-8402-40f32c71be27"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="44e17c1b-add3-4c56-a965-89268bc53aaf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+o6EP4rTM9Hp/SFItARZnhTGeXIBfSoX5yQbiHapqVJS+HXn6RABQQu936C3W52n33Jk71hyPdMu8kYRJwEtJD6HmV2pq0rcUTtADHCbIp8YDbH9qjZf7TNom6j7RGl0OvUlY8aqjgWLrlqpeLoqmVYljpBJfFPr1gOIBcmFUOYMhZDjzKOKK8rpm6UVf1a1ctjvWqbul26LlZ0610pvEDEhG9hUtSVDaiU1ZUZ56GtaYvForgoFYNoqpm6bmiv/ccRnoGPlMbNOqMsUNTY2OOiAxg8Dxdx4Gs32p7NjcPsEZlSxOMINrGcU7F0Ta9pwsZhZPpLyc+C06NukIltRANKMPLICsn69IHPAqfQ9KZBRPjMP5mEoUvHKqRYxYZFfynaPrQLHe0hjBhS2QwZG19DcCECiqHwPOzVlV+XdS07Oo4QZW4Q+Wxf/G94gCbgBSE4KtumtYF2ucMjlWrcALZ7FHsxIwn8lsMaIgxs003Al7sqDCJwSfpImBjQlEl02i68A3FdjQ6ZAuP/p0E7zVk7eUFeDI1hi76Uu+U7ggaxWQ4+fd29bb117yqE1TMAu8aZIm/tWjwYynyI1id6g26F0jRusdq7SV4HM3Y3HCPDrK7+GZJWdf5kprcPo/L1aOS356mnPXfdT6/bDntXzYEwSdulQfS8eqtO7kG7eveNRHOuyb0/WSWOyxbeV3sy0Wv9B6e0rD7376sPqJXMBwRwZ4jnk6s/y3H7dUyuffzVmoR8Fb4Pvf7nK/vTGaVP1gvXXydvyXXlqtqpPXbreTo7+Pd12zs/iiefgPlWlGPQ6xRuRZcQP09mUkMc1c1M7VCSD+NAudKQpyR32LGgO+LYoodr2ai0jXa72e1UrVrZ7Nx29XKp1K3VjFu92TRrzS3JrFEcQGwH1CUylqTc9dicB4h9mwF1IFKTIBZMx5QzHjuIo0KPDsUlCCiDcSDoeQlVA3ulVTqZ+8nXDMLUi0PfcpXC74A/0aeo6XKI9ijZMPYoeQiYhAQkb8uxZmKuGRelmKMk5p5RTFCRQiyYPZIka5tWtawx4oceSKCaHzixB8VwFmaF0dj611QRZpl22B1nl+1kWoffthUQNg6RBkzm0gLRRTjytpjbRE4nbO0mvHXfjB0i75UoJ48IXiPZ//Q9JXI88hERGX20Rx/GFndufvHxnye1M6C0w3rkgZyE7ITdvtziDRCs0dh2c46M4rwYJ0mcNdCySlok3GuyQppuaiPAseC15Tj4AqrlXrSLHpEc+EHwXL8PMeYzOuKIgy8GrpCJF2wNI2Bya+iJi5JeupLshRSl45DyY7q2JzYeifjsUoRtLO2EeiB+FkHkfHfsiK+dOCJPsTRwQqdSkg/I8sRc4EC4JYL6gmjX+TEHx4LvK/Mi51i4GKhJzOH0l4LktLqCMA5iynsdJVPs8myGky9DsL+NfrjJqDzf7ci/L3cqyUYAg9gIGcn8yyfalleATne4ehP0BF1Xz9H1PrrGD/VPzU6dDme88Rc=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17C1CCAED84852DFE0533E991F0AA29A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17C1CCAED84852DFE0533E991F0AA29A</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17C1CCAED84952DFE0533E991F0AA29A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17C1CCAED84952DFE0533E991F0AA29A</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150605_015356</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150605_01540</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150605_01540</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150605_01540</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+o6EP4rTM9Hp/SFItARZnhTGeXIBfSoX5yQbiHapqVJS+HXn6RABQQu936C3W52n33Jk71hyPdMu8kYRJwEtJD6HmV2pq0rcUTtADHCbIp8YDbH9qjZf7TNom6j7RGl0OvUlY8aqjgWLrlqpeLoqmVYljpBJfFPr1gOIBcmFUOYMhZDjzKOKK8rpm6UVf1a1ctjvWqbul26LlZ0610pvEDEhG9hUtSVDaiU1ZUZ56GtaYvForgoFYNoqpm6bmiv/ccRnoGPlMbNOqMsUNTY2OOiAxg8Dxdx4Gs32p7NjcPsEZlSxOMINrGcU7F0Ta9pwsZhZPpLyc+C06NukIltRANKMPLICsn69IHPAqfQ9KZBRPjMP5mEoUvHKqRYxYZFfynaPrQLHe0hjBhS2QwZG19DcCECiqHwPOzVlV+XdS07Oo4QZW4Q+Wxf/G94gCbgBSE4KtumtYF2ucMjlWrcALZ7FHsxIwn8lsMaIgxs003Al7sqDCJwSfpImBjQlEl02i68A3FdjQ6ZAuP/p0E7zVk7eUFeDI1hi76Uu+U7ggaxWQ4+fd29bb117yqE1TMAu8aZIm/tWjwYynyI1id6g26F0jRusdq7SV4HM3Y3HCPDrK7+GZJWdf5kprcPo/L1aOS356mnPXfdT6/bDntXzYEwSdulQfS8eqtO7kG7eveNRHOuyb0/WSWOyxbeV3sy0Wv9B6e0rD7376sPqJXMBwRwZ4jnk6s/y3H7dUyuffzVmoR8Fb4Pvf7nK/vTGaVP1gvXXydvyXXlqtqpPXbreTo7+Pd12zs/iiefgPlWlGPQ6xRuRZcQP09mUkMc1c1M7VCSD+NAudKQpyR32LGgO+LYoodr2ai0jXa72e1UrVrZ7Nx29XKp1K3VjFu92TRrzS3JrFEcQGwH1CUylqTc9dicB4h9mwF1IFKTIBZMx5QzHjuIo0KPDsUlCCiDcSDoeQlVA3ulVTqZ+8nXDMLUi0PfcpXC74A/0aeo6XKI9ijZMPYoeQiYhAQkb8uxZmKuGRelmKMk5p5RTFCRQiyYPZIka5tWtawx4oceSKCaHzixB8VwFmaF0dj611QRZpl22B1nl+1kWoffthUQNg6RBkzm0gLRRTjytpjbRE4nbO0mvHXfjB0i75UoJ48IXiPZ//Q9JXI88hERGX20Rx/GFndufvHxnye1M6C0w3rkgZyE7ITdvtziDRCs0dh2c46M4rwYJ0mcNdCySlok3GuyQppuaiPAseC15Tj4AqrlXrSLHpEc+EHwXL8PMeYzOuKIgy8GrpCJF2wNI2Bya+iJi5JeupLshRSl45DyY7q2JzYeifjsUoRtLO2EeiB+FkHkfHfsiK+dOCJPsTRwQqdSkg/I8sRc4EC4JYL6gmjX+TEHx4LvK/Mi51i4GKhJzOH0l4LktLqCMA5iynsdJVPs8myGky9DsL+NfrjJqDzf7ci/L3cqyUYAg9gIGcn8yyfalleATne4ehP0BF1Xz9H1PrrGD/VPzU6dDme88Rc=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17C1CCAED84852DFE0533E991F0AA29A</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZrU/I6EP4rTP3olCalIHSEmb5Qtd5AQNT3ixPSAJE2wSbl4q8/SYEKeDmc8wVmt5vdZy95sucCxZHtekKQRFLOCss4YsLNtHUjTZjLkaDCZSgmwpXY7Xl3t65dBC7aHjEKQatuvIbgrIqHZyVzBMOa6ThhaFaRbZuj0dBxhnbJLp9BZSpESgImJGKybtgAlk1QMUG5D6quDVzHKVah89coDEgilG9lUgTGBtRS1I2JlDPXshaLRXFRKvJkbNkAQOv57raHJyRGRuN8nVEWKGls7HExJJhEES5iHlvn1p7NeSjcHh0zJNOEbGKFP8UCFqhZyiYUdHxi5GdJGLARz8QmYpxRjCL6gXR97oic8LDgRWOeUDmJf0wCAu3YJEtsYuiwE8Pah3akoz2EiUCmmCC48dUlI5IQhknhsRvUjZPjupYd7SeIiRFPYrEv/jc8hM1JxGckNMU2rQ204x1+U6nGOcFuwHCUCjon93pYZwgTsekmwce7KnQSMqLLWyrUgC6FRmftwjsQ19Vo0TER8v80aKc5aycDFKWk8eJPWfkJererl97wYrx8vn5c3Pj2ooaDegZg1zhT5K1diwdDmQ/R+sR9u3N1WbHkI1y+DSq8+gCSIAXX7YfTM9J7XvUfL+H9Zafj200Ou0+d3vBp4g3egosWtx/67aDiiOR0Hrz3Onf3Xim9qs6vV22In6+B8FeXAa184H6Ht0vp+AYtlmk39VuDl4G0p/Dj6vqy669C8bR8fFvROw9iRLF/+1ATUQxuRoNq1Fr60yS+e/r7+H57OgP1PJ0d/Pu67Z3vpcM3guVW1GMQtAoXqktI/k5mWkNDc5SZujNNPkISJo2GPqW5w00V3dHQVT1cy/CsCVvgT9Wu1bwqLJV8UFY/tRq8AB6o+P6WZNYoDiA2ORtRHUtT7npsfgeIY1cQFpLEnPNUMZ0wfvHYQhIVAtZVl4AzQfpc0fMETFe4xqerd/EBoyk4+wjhMAF2bBTuuWyzduKNJEn2OBnCPU7uEkxnlGji1nMt1GALqWrxjuapjGBxjoqMpIraE82yru1Uy5ag8SwiGqkV8zCNSHE2mWWVscT63zYRFpm26/ez2/ZjXofftiVQNiHVBkLn8oeoNpJvHpfSNpGfE3Z2E96699KQ6oul6ikTitdI9j99jomej3xGVEavzd4r3OLOzY8+/vWk9Qso67AeeaBwTnfCbp9u9Qgo2mhsu/mOYPG9mM7nadZAxylZiXJv6QpZwLZ6BKeK2FZ9PiXMyr1YR70iOfCD4Ll+H2IqJ6wnkSSxGrhCJh6xNvSI0GtDoG7K8tidZC+kKp0kS/mdrhmplUcj/nUrwi7WdkrdUX8LnoSfHfvG104clafaGiRlYy3pF2T1w1xgrtxSxX082XX+nYPvgu8r8yLnWKQaqGEqyc9fCprU6gbCmKdMBi0jU+wSbYZTrmbE/TT64ibj8ny5o/++3Zk0GwFM1EooaOZfv9GuvgJsvEPWm6CHfN1sen6rqnjJbl3s8rVn17y8KHvoGl/UXzU7dTqc8cY/</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17C1D0B8299A8133E0533E991F0A06EE</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17C1D0B8299A8133E0533E991F0A06EE</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150605_01540</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17C1D0B8299B8133E0533E991F0A06EE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00022_FUNC_UVTC_UserName_RequestorUser_any_with_active_status_RequesteeUser_any_and_blocked_ValidateEmail_200_OK_P1" searchProperties="true" id="fb30e995-9b07-461f-ba17-3556600413ce"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="fa5a21e1-3027-4cb1-80ee-34118439add8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="b2716490-c9d7-40cb-b183-bdb5ee13fb45"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="bc8116a2-c4e4-4e42-82d6-112983cc7ef8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU" id="b12d5f17-583b-4b43-9282-8b262af7375d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus" id="2cc05004-e4d1-48b6-ba83-50ae7c89a763"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="b8af2a0b-d442-464c-82a0-79f16de7efdd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VyvOYMl4h4ApUEZaEDJAMkPUlJeQ2aGJkkGS2r7+SAQcIcLn3ydXtVvfpRUd9w9E4tL0K58AEiWhmMQ4p9xJtSYsZ9SLECfcoGgP3BPZ6lXbLs7Omh7ZHtEyzVtI+ER7k7WvX0i0T2bpruwW9gAaW7liBk8dWgGyUk6acx9CkXCAqSpptWjndzOtmrm8WPNv0ck62YNkfWuYFGJe+pUnW1DagFrykjYSYeIYxn8+zcycbsaFhm6ZlvLVbPTyCMdLKN+uMkkCsvLHHWR8whCHO4mhs3Bh7Njc+93pkSJGIGWxi+adimYZZNKSNz8nwl5aeBb9JgygRq4hGlGAUkhVS9WmDGEV+phIOI0bEaHwyCctUjnVYYB1bLv2lGfvQLnS0h5BxpPMRsja+uhAAA4oh89xtlrRfl3UtOdpniPIgYmO+L/43PEBnEEYT8HW+TWsD7XKHRypVvgHsNSkOY05m0FHDOkEY+KabgC93lXliEJBFi3A5oAuu0Bm78A7EdTVqZAhc/J8G7TRn7eQFhTGUaeO11floGFfvjfnTY91vt9mD2bj6ajQKpQTArnGiSFu7Fg+GMh2i9YlV6ymIRP/utXn/56GAC1M27y+hKfLLeTffqVevipYwRq/T2+juvvLivjN615qHefNtWRvcD1a96evLI/lYrEbRq1GnORf1WteMPdfvF2S1/D3vPPH3/uvft3gSAHl+ao9ued2f2aN2PPTx89vtMFDYW6TrVOfh9CVw7jvP7+1ZneBFpxFUrsVDzXIrf3j+A9qlNJ0d/Pu67Z3vxYO/gMVWVGPQrGUasktInCczpSG+HiSm3kSRDxdAhVZWpxR3eLGkO+J7sodr2bquWtWa7ZqO7ebzxVzdzDlOvVi0Gmbl9to0tySzRnEAsRrRgKhYinLXY3MeIB57HKgPTJ9FsWQ6rp3xWEMCZZq0Ky9BRDn0I0nPc0cMhsgdCWchLJ6j46/ipEhWuKhlOpF4pI+sEghge5xsWXuc3AVMJgQUcau55nKwuZC1mKJZLEIrO0NZCrGkdqZY1pNckjM4GU9CUEiNceTHIWQno0lSGYOvv7aOME+03Xo/uW0n8zr8ty2BtPGJMuAql1uQbYQjj4u7TeR0wu5uwlv3ldgn6mLJegpG8BrJ/q/vMVHzkc6IzOiz2vu0trhT84uP/zxpnAFlHNYjDeTPyE7Y7dMtHwFJG+VtN6fIyk6z8WwWJw10Xcdg0r2hKmSYttEDHEtiW/ajL6BG6sW46BVJgR8ET/X7EGMxoj2BBIzlwGUS8YK1oQdcrQ1NeVMWl+4keyFl6QQsxDFdNZQrj0J8divCHlZ2Uv0kP/OI+d8dO+JrJ47MU24NgtChktQLsjwxFziSbonkvojtOj/m4FjwfWVa5BSLkAM1iAWc/pNRpFbSEMZRTEWzpiWKXaJNcIrlBLxvox9uEi5Plzvy79udTpIRwCBXQk4S/+qN9tQVoMMdst4EPcHXzjm+3kdX/qH+qdmp0+GMl/8B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17C1CD2403236695E0533E991F0AB700</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17C1CD2403236695E0533E991F0AB700</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17C1CD2403246695E0533E991F0AB700</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17C1CD2403246695E0533E991F0AB700</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150605_015413</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150605_015417</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150605_015417</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150605_015417</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VyvOYMl4h4ApUEZaEDJAMkPUlJeQ2aGJkkGS2r7+SAQcIcLn3ydXtVvfpRUd9w9E4tL0K58AEiWhmMQ4p9xJtSYsZ9SLECfcoGgP3BPZ6lXbLs7Omh7ZHtEyzVtI+ER7k7WvX0i0T2bpruwW9gAaW7liBk8dWgGyUk6acx9CkXCAqSpptWjndzOtmrm8WPNv0ck62YNkfWuYFGJe+pUnW1DagFrykjYSYeIYxn8+zcycbsaFhm6ZlvLVbPTyCMdLKN+uMkkCsvLHHWR8whCHO4mhs3Bh7Njc+93pkSJGIGWxi+adimYZZNKSNz8nwl5aeBb9JgygRq4hGlGAUkhVS9WmDGEV+phIOI0bEaHwyCctUjnVYYB1bLv2lGfvQLnS0h5BxpPMRsja+uhAAA4oh89xtlrRfl3UtOdpniPIgYmO+L/43PEBnEEYT8HW+TWsD7XKHRypVvgHsNSkOY05m0FHDOkEY+KabgC93lXliEJBFi3A5oAuu0Bm78A7EdTVqZAhc/J8G7TRn7eQFhTGUaeO11floGFfvjfnTY91vt9mD2bj6ajQKpQTArnGiSFu7Fg+GMh2i9YlV6ymIRP/utXn/56GAC1M27y+hKfLLeTffqVevipYwRq/T2+juvvLivjN615qHefNtWRvcD1a96evLI/lYrEbRq1GnORf1WteMPdfvF2S1/D3vPPH3/uvft3gSAHl+ao9ued2f2aN2PPTx89vtMFDYW6TrVOfh9CVw7jvP7+1ZneBFpxFUrsVDzXIrf3j+A9qlNJ0d/Pu67Z3vxYO/gMVWVGPQrGUasktInCczpSG+HiSm3kSRDxdAhVZWpxR3eLGkO+J7sodr2bquWtWa7ZqO7ebzxVzdzDlOvVi0Gmbl9to0tySzRnEAsRrRgKhYinLXY3MeIB57HKgPTJ9FsWQ6rp3xWEMCZZq0Ky9BRDn0I0nPc0cMhsgdCWchLJ6j46/ipEhWuKhlOpF4pI+sEghge5xsWXuc3AVMJgQUcau55nKwuZC1mKJZLEIrO0NZCrGkdqZY1pNckjM4GU9CUEiNceTHIWQno0lSGYOvv7aOME+03Xo/uW0n8zr8ty2BtPGJMuAql1uQbYQjj4u7TeR0wu5uwlv3ldgn6mLJegpG8BrJ/q/vMVHzkc6IzOiz2vu0trhT84uP/zxpnAFlHNYjDeTPyE7Y7dMtHwFJG+VtN6fIyk6z8WwWJw10Xcdg0r2hKmSYttEDHEtiW/ajL6BG6sW46BVJgR8ET/X7EGMxoj2BBIzlwGUS8YK1oQdcrQ1NeVMWl+4keyFl6QQsxDFdNZQrj0J8divCHlZ2Uv0kP/OI+d8dO+JrJ47MU24NgtChktQLsjwxFziSbonkvojtOj/m4FjwfWVa5BSLkAM1iAWc/pNRpFbSEMZRTEWzpiWKXaJNcIrlBLxvox9uEi5Plzvy79udTpIRwCBXQk4S/+qN9tQVoMMdst4EPcHXzjm+3kdX/qH+qdmp0+GMl/8B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17C1CD2403236695E0533E991F0AB700</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZZc+I4EP4rlOdxykg2NocrUEUgmWUr1wDLZvIyJeTGaLAlY8kc+fUrGfAAOZbdF6hut7q/PvSpryRJYjfoSgmZYoJXNknMZVBo21ae8UAQyWTASQIyUDQYde/vAreKA3I4YlUG/bb1cxqS1syberbv1bDt1VzfJrhBbI86eNqc1qnbJNpUyhwGXCrCVdtysePbuG5jf4ybgesE2Kliv/liVSaQSe1bm1SxtQe1kW1rrlQaILRer6vrWlVkEXIxdtDz/d2IziEhVudql1ERKOvs7Wk1BApxTKtUJOgKndhchTIYsYgTlWewjxV+FAsj3ELaJpQs+mKVZyEc8JkoxB7hgjNKYvZKTH3uQc1FWOnGkciYmicfJuFg49iGDbWp4/EvFjqFdqGjE4SZJLacE2fvawgzyIBTqPw1HLStL5d1rTg6zgiXM5El8lT8b3iAryAWKYS2PKS1h3a5w3cq1bkCGgw4jXPJVvBghjUlFOS+m0Avd1V5ymDGNndM6gHdSIMOHcM7E3fV6LMIpPo/DTpqzs7JhMQ5dGaPN1+nrW/oj/S5xYdLjL9HdLFkyb302gWAY+NCUbZ2J54NZTlEuxOPj0toNhaTsbj1lr0wBblya/chJD/6k/R2yG4fbieLxF3e5dvXu9dH1pj5dUq29RH7se5FEvVrzyM/R6y7HY3nT9o2mvzxwgfdxkSt7l4a+Jsgqxf0LNwobg1r0ev6z2sPf/32PVpEzYU/lBmmfsxfHp4G27Ua3SzX9Ov930+Yj90nIRq/oD/e9jbJttVF63aZzhH+U93hzo/y6S+g6iCaMRj0K7e6S0R9TmZGw0J7VpgGqSEfqYArq2NOGe4Ick13LAx0D3ey0+g5fXzddK/d66ZTq91gX/+0Ws4t7uL6zc2BZHYoziD2BJ8xE8tQ7m5sPgdIk0ACDyGzVyLXTCetTzz2iSKVAR/qSyC4hLHQ9OyJredxx8s8rlIu6DxfyDpbba3Kg1CP/DHrzhRkJ5TsOCeUPATKUgaGt81YSz3XUulSLMkqV7FTXZEqh1wze2ZINnC9po8kS9IYDFCUiDCPoZrO06IwSO7+XZtQWWiHN+Pisn2Y1vm3QwW0TciMgTS5XIPuIrx5W3DgHxL5OGHvOOGD+24eMnOvdDlVxugOyemn31NixqMcEZ3Rz97op3PAXZpffPztSfQJKHRejzJQuGJHYQ8vt34DNGt0Dt1cEqe6rOarVV400PNqKNPukakQwi4aAc01r23HYgEclV7QRY9ICfwseKk/hZirOR8poiDRA1cpxAu2hhFIszUM9EXZXLqSnITUpVOwUe/perHeeAziT5ciGlBjp9VP+m8tsvB3x97xdRRH56mXBsV4ZCTzgGw/mAsqtFumqU9kx87fc/Be8FNlWeQSi9IDNc0VfPylYjitbRFKRc7VoG8VimOeLXCqbQrBb6M3bgoqL3c79u/Lnc2KEaCgN0LJCv/miQ7MFeDREVfvg57Tda/verjm1ur1ln9M19cNjMuinKDrvFG/1RzV6XzGO/8A</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17C1D0B82B2B8133E0533E991F0A06EE</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17C1D0B82B2B8133E0533E991F0A06EE</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150605_015417</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17C1D0B82B2C8133E0533E991F0A06EE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>00f70853-115f-431a-b2d9-2f9def959681</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00023_FUNC_UVTC_UserName_RequestorUser_any_with_active_status_RequesteeUser_any_and_deleted_ValidateEmail_200_OK_P1" searchProperties="true" id="c415aa04-4daa-4d93-991c-e6eac8e28470"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="d512b6e8-204c-472c-8d3c-8c6591e23be9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="9052ae6c-4c42-4763-a876-9bbe538ed328"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="ed9e723e-49ff-4250-b3d7-421b4c33fd7d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU" id="b7ffd833-4576-4639-a75e-5a62e368f8f2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus" id="78637fb4-4efd-4c50-b69c-ceb60923dabc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","deleted");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="04da7d1e-3a31-4bfe-81da-d945ff08ca7f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","USER_STATUS_NOT_VALID");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbV+o6EP4rrO5HV0kvoNAlrIVc9kZFkZseXlwhnUK0pNgkFfn1OykXAYHDOU9dM53MfHPJl7nmeBo6XoVziAWNWGY+DRn3Um3JkDHzIswp9xieAvcE8bqV1r3nZC0Pr48YmWatZLzaln3pXgaBSdxL28xZAZhFMsqbV+D7hZHlWuTKUqacS2gyLjATJcOx7LxpXZpWvmcVPMf27Mus5ThDIzOAmCvfyiSrTi1BzXnJmAgx8xD6/PzMfrrZKB4jx7Js9NK675IJTLFRvl5mlAaKyyt7kvWBQBiSLImm6Brt2Fz73OvSMcNCxrCK5R+LZSGriJSNz+n4l7E5C36TBVEqVjGLGCU4pAus69MCMYn8TCUcRzEVk+nRJGxLOzZhTkxi59gvA+1CO9PRDsKYY5NPsL3y1YEAYmAEMv1Os2T8Oq9r6dFejBkPonjKd8X/hgdYAmE0A9/k67RW0M53eKBS5WsgXpORUHKawIMe1hkmwFfdBHK+q0w7hoDO7ylXAzrnGh3ahrcnLqtRo2Pg4v80aKs5SycDHEoo/wlIR0664UXv/vHmttWfTxJJ+xd1PmuVUgDbxqli09qluDeUmyFanmj4/ULrtt94b7/c3MvaW/gbLz4Xw4fG27j+Mrtwe1fo8g9xngcikS/D2+qkU7XpdHbrfriD0VPhbvBCHlEin9poHodv/fmQDwa36GMB1VyHF24r9dajA0nr4eFZPMv7J0t02ldTeLJmjbtgMGzET/8scKXd7Qwd9z1n5zrP1iLpFjqV3N1dve5YbdaSxXwz6j3+XqW7h39Xt77zXTl6AyLWoh6DZi3TUF3C4jSZaQ31zSA19WaafLgAJoyyPqW5w5OK7qjvqR4uZfuqalerlXqtWsvnnVqjbuVdt14s2g2rUnGKlTXJLFHsQaxGLKA6lqbc5dicBkimHgfmQ2wmkVRMx40THmtY4EyTddQliBiHXqTomU8COmExZS4e27ToFt7zo+BDNdXIPETikT3GlUBAvMPJtr3DyR0gdEZBE7eea64GmwtViw+cSBHa2QRnGUhF7bFmWc/JFfKIq6kJQSNF08iXIWRnk1laGcSXX8fEhKfaTr2X3rajee3/W5dA2fhUG3Cdyw2oNsKBx8VaJ3I84dx2wmv3FelTfbFUPUVMyRLJ7q/vMdHzsZkRldFrtftqr3FvzM8+/vMkOgEK7ddjE8hP6FbY9dOtHgFFG+V1Nz+wnf3IyiSRaQNzORfFyj3SFUKWg7pApCK2r170DgxtvKCzXpEN8L3gG/0uRCkmrCuwgKkauEwqnrE2dIHrtaGpbsr83J1kJ6QqnYC5OKSrhmrl0YhPbkXEI9pOqdvq8xnF/nfHDvjaiqPyVFuDoGysJf2CfB2ZCxIpt1RxXxRvOz/k4FDwXeWmyBssQg3USAo4/iejSa1kYEIiyUSzZqSKbaJNcYqvGXjfRj/cpFy+We7ov293Jk1HgIBaCTlN/es32tNXgI23yHoV9Ahf507x9S668g/1T81WnfZnvPwX</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17C1CCAEDCD452DFE0533E991F0AA29A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17C1CCAEDCD452DFE0533E991F0AA29A</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17C1CCAEDCD552DFE0533E991F0AA29A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17C1CCAEDCD552DFE0533E991F0AA29A</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150605_015435</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150605_015440</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150605_015440</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150605_015440</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbV+o6EP4rrO5HV0kvoNAlrIVc9kZFkZseXlwhnUK0pNgkFfn1OykXAYHDOU9dM53MfHPJl7nmeBo6XoVziAWNWGY+DRn3Um3JkDHzIswp9xieAvcE8bqV1r3nZC0Pr48YmWatZLzaln3pXgaBSdxL28xZAZhFMsqbV+D7hZHlWuTKUqacS2gyLjATJcOx7LxpXZpWvmcVPMf27Mus5ThDIzOAmCvfyiSrTi1BzXnJmAgx8xD6/PzMfrrZKB4jx7Js9NK675IJTLFRvl5mlAaKyyt7kvWBQBiSLImm6Brt2Fz73OvSMcNCxrCK5R+LZSGriJSNz+n4l7E5C36TBVEqVjGLGCU4pAus69MCMYn8TCUcRzEVk+nRJGxLOzZhTkxi59gvA+1CO9PRDsKYY5NPsL3y1YEAYmAEMv1Os2T8Oq9r6dFejBkPonjKd8X/hgdYAmE0A9/k67RW0M53eKBS5WsgXpORUHKawIMe1hkmwFfdBHK+q0w7hoDO7ylXAzrnGh3ahrcnLqtRo2Pg4v80aKs5SycDHEoo/wlIR0664UXv/vHmttWfTxJJ+xd1PmuVUgDbxqli09qluDeUmyFanmj4/ULrtt94b7/c3MvaW/gbLz4Xw4fG27j+Mrtwe1fo8g9xngcikS/D2+qkU7XpdHbrfriD0VPhbvBCHlEin9poHodv/fmQDwa36GMB1VyHF24r9dajA0nr4eFZPMv7J0t02ldTeLJmjbtgMGzET/8scKXd7Qwd9z1n5zrP1iLpFjqV3N1dve5YbdaSxXwz6j3+XqW7h39Xt77zXTl6AyLWoh6DZi3TUF3C4jSZaQ31zSA19WaafLgAJoyyPqW5w5OK7qjvqR4uZfuqalerlXqtWsvnnVqjbuVdt14s2g2rUnGKlTXJLFHsQaxGLKA6lqbc5dicBkimHgfmQ2wmkVRMx40THmtY4EyTddQliBiHXqTomU8COmExZS4e27ToFt7zo+BDNdXIPETikT3GlUBAvMPJtr3DyR0gdEZBE7eea64GmwtViw+cSBHa2QRnGUhF7bFmWc/JFfKIq6kJQSNF08iXIWRnk1laGcSXX8fEhKfaTr2X3rajee3/W5dA2fhUG3Cdyw2oNsKBx8VaJ3I84dx2wmv3FelTfbFUPUVMyRLJ7q/vMdHzsZkRldFrtftqr3FvzM8+/vMkOgEK7ddjE8hP6FbY9dOtHgFFG+V1Nz+wnf3IyiSRaQNzORfFyj3SFUKWg7pApCK2r170DgxtvKCzXpEN8L3gG/0uRCkmrCuwgKkauEwqnrE2dIHrtaGpbsr83J1kJ6QqnYC5OKSrhmrl0YhPbkXEI9pOqdvq8xnF/nfHDvjaiqPyVFuDoGysJf2CfB2ZCxIpt1RxXxRvOz/k4FDwXeWmyBssQg3USAo4/iejSa1kYEIiyUSzZqSKbaJNcYqvGXjfRj/cpFy+We7ov293Jk1HgIBaCTlN/es32tNXgI23yHoV9Ahf507x9S668g/1T81WnfZnvPwX</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17C1CCAEDCD452DFE0533E991F0AA29A</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EP4rKPtYBSfh0hIVJJaLmlOgLZeq7cvKOBPwNrEhdiD0168dIAuU9nDOUzST8cw3F3+eW4Gj0HGbQkAsKWeFNAqZcDNt3Uhi5nIsqHAZjkC4krijZr/nOkXLxfsjRsFr141fgX8N2LdKpkUC3ywTgk1s3xBzWnFIbeoHAVQrylSIBDwmJGaybjiWXTGtqmlVxtaN69iuUyqWHfvNKDxDLJRvZVK0jB2oVNSNuZQLF6H1el1cl4o8niHHsmz00u+NyBwibDRutxllgeLGzp4UfSAQhqRIeIRu0ZHNrS/cEZ0xLJMYdrH8r2JZyKohZeMLOvth5GfB91jAM7GFGWeU4JB+YF2fPsg59wvNcMZjKufRl0nYlnZsQkpMYpfZDwMdQ7vQ0RHCWGBTzLG98zWEAGJgBAqToVc3flzWtezoOMZMBDyOxLH43/AAW0HIF+CbYp/WDtrlDs9UqnELxPUYCRNBVzDQw7rABMSum0Aud1V4jCGgaY8KNaCp0OjQIbwTcVuNNp2BkP+nQQfN2Tp5xmECjbvWZnHXf+X2YDlImmjZZQ/VISybb4tOPQNwaJwp8tZuxZOhzIdoeyKY38DLb9oLbvhmtnr+CKn/8/oREMj7m5eyN+v3hvz9yg871Sd4fftnEaDx09XrBL/cDyDspeI99brJY42W/Pfaaji8f37v9kfC+ujIu7Q58eSsVH3tp2gwt6a/S7WZXU3xsDLp/Xwq47tJ5TVFIY1q3XEveltOOs+jYE02VX8d0iv52n15skUpWCfBgE+6b149T+cA/7Fuf+dHyfQ3ELkX9Rh47UJXdQnL78lMa6hvBpmpu9DkIyQwaTT0Kc0dbqLojvqu6uFWtq9bdqvV7LTbVbvitLsdq1IqdWo1u2s1m06tuSeZLYoTiC3OAqpjacrdjs33AEnkCmA+xOaKJ4rphPGNxzaWuOCxoboEnAkYc0XPdupsplYcBdUKJiKJy9PSR1r1fccoDLh8YA9xM5AQH3GybR9x8hAIXVDQxK3nWqjBFlLVYolXiQzt4goXGSSK2mPNsq5TvqkgQaNFCBopirifhFBczBdZZZDYfh1T4cm0w844u21f5nX6b18CZeNTbSB0Lj9BtRHOPC72PpGvEy4fJrx330x8qi+WqqeMKdkiOf71d0z0fOQzojL61Rr9sve4c/OLj38+ib4BhU7rkQfyV/Qg7P7pVo+Aoo3GvptLbBeXxWS1SrIGlsslFCv3SFcIWQ4aAUkUsW3G/B0Yyr2gi16RHPhJ8Fx/DDGRczaSWEKkBq6QiResDSMQem3w1E1JL91JjkKq0klI5TldK1Qrj0b87VZEXKLtlPpRfdY89v927IyvgzgqT7U1SMpmWtIvyOaLuSBcuaWK+3h86Pycg3PBj5V5kXMsUg3UNJHw9Z+CJrW6gQnhCZNe28gUh0Sb4ZSbBbh/jT65ybg8X+7ov293Js1GgIBaCQXN/Os32tVXgM0OyHoX9Cxft9rl7/j6GF3jk/qz5qBOpzPe+AM=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17C1CCAEDD6152DFE0533E991F0AA29A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17C1CCAEDD6152DFE0533E991F0AA29A</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150605_015440</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17C1CCAEDD6252DFE0533E991F0AA29A</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>00f70853-115f-431a-b2d9-2f9def959681</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00024_FUNC_UVTC_UserName_RequestorUser_any_with_active_status_RequesteeUser_any_and_active_UnlockMe_200_OK_P2" searchProperties="true" id="783415dd-6846-4a33-b506-49c270862c3a"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="005b7458-900c-4553-ae58-9e358ba2ad12"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="992aa45f-4de0-4065-9a3b-2f42af49a145"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="fc0273cc-2658-4d92-beca-cc573e495ad5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU" id="0a161aa0-1d6b-4214-8401-a716f5e470bd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="d9bf6fe5-8bc4-4dea-985d-e81d0dc71048"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMrLN1a5AFZdkQyaEBJNkdl5SQm6DJrZsLJlLvn4lAw4QYNl9cnW71X36oqO+5jgMLKfFOSSCRqywDAPGnUzb0NKEORHmlDsMh8AdQRy31X9wrKLh4O0RrdDrNrR30/BM3/YreqVml/VyCVs6Bs/Q61XftypeqVTziTTlPIUe4wIz0dAsw6zoRlU3KiOj7limU6oV7brxWyu8QsKlb2lSNLQNqCVvaFMhYgehxWJRXJSKUTJBlmGY6Ff/wSVTCLHWvF5nlAVKmht7UvSAQBCQIolCdI32bK497rh0wrBIE9jE8k7FMpBhI2njcTr5oeVnwesxP8rEDmYRowQH9BOr+vRBTCOv0AomUULFNDyZhGkoxzosiU7MMvuhoX1oFzraQ5hwrPMpNje+huBDAoxA4WXYa2g/LutadnSUYMb9KAn5vvjf8ACbQxDF4Ol8m9YG2uUOj1SqeQ3E6TESpJzO4VENa4wJ8E03gVzuqvCUgE+XD5TLAV1yhQ7twjsQ19Xo0glw8X8atNOctZNXHKTQRN7VsDb9PfPv62GrM2g9R3//VflIl9Nk0sgA7Bpniry1a/FgKPMhWp+IO/XnsIJKbWRYTFTcdPTZH71Gszd/Zgz6/SvXGKE47NkjoC94vLSvjJ/PnRf8Mv8IgL3ec39WXS3b/VCMWmQ4urpvv/qrz/bjmMIj2I/jtol6d8Pe2/M9e4gx/vNWH9xZ6RMeTI2++yts9427kWtXOvWPG9x6fAOTj+9wu+q+Djpvy5uxXYqRW05Z7S6wPhp5Ojv493XbO++m4z9AxFZUY9DrFm5ll7A4T2ZKQz3dz0ydWJEPF8CE1lSnFHc4qaQ76jmyh2vZrHXMbrttdm4tu1W3qjdGpVTq2rZ5a7RKLcPekswaxQHETsR8qmIpyl2PzXmAJHQ4MA8SfR6lkum4dsZjFwtc6LGhvAQR4zCKJD2vxLw6s8rzchUWXrVGw/QDl1cR1wqPkRiwQdLyBSR7lGyae5Q8BEJjCoq31VhzOddcyFLM8DwVgVmc4yKDVDJ7okjWscr1CuI0jANQQFEYeWkAxXgaZ4VBfP2VfEN4ph3ejLLLdjKtw3/bCkgbjyoDrnJpg+wiHHlbrG0ipxMu7ya8dd9KParulSynSChZI9n/9TUlajzyEZEZvXfcd3OLOze/+Pj3k+gMKHRYjzyQN6c7Ybcvt3wDJGs0t92cYbM4K6bzeZo1sFwuoUS6R6pCkieQCySVvLYaRR/AUO4FXfSI5MAPguf6fYipmDJXYAGhHLhCJl6wNbjA1dbQkxdleelKshdSlk7AUhzTdQK58SjEZ5ci4hBlJ9VP8rOIEu+rY0d87cSRecqlQVA2UZJ6QFYn5oJE0i2V1Bclu86POTgWfF+ZFznHIuRAjVMBp/8UFKc1NExIlDLR62qZYpdnM5xiFYPzZfTNTUbl+W5H/32502k2AgTkRshp5l890Y66Amyyw9WboCfoun6OrvfRNb+pv2t26nQ4481/AA==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17C1DBB1CF28A826E0533D991F0A3A09</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17C1DBB1CF28A826E0533D991F0A3A09</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17C1DBB1CF29A826E0533D991F0A3A09</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17C1DBB1CF29A826E0533D991F0A3A09</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150605_015457</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150605_01552</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150605_01552</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150605_01552</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMrLN1a5AFZdkQyaEBJNkdl5SQm6DJrZsLJlLvn4lAw4QYNl9cnW71X36oqO+5jgMLKfFOSSCRqywDAPGnUzb0NKEORHmlDsMh8AdQRy31X9wrKLh4O0RrdDrNrR30/BM3/YreqVml/VyCVs6Bs/Q61XftypeqVTziTTlPIUe4wIz0dAsw6zoRlU3KiOj7limU6oV7brxWyu8QsKlb2lSNLQNqCVvaFMhYgehxWJRXJSKUTJBlmGY6Ff/wSVTCLHWvF5nlAVKmht7UvSAQBCQIolCdI32bK497rh0wrBIE9jE8k7FMpBhI2njcTr5oeVnwesxP8rEDmYRowQH9BOr+vRBTCOv0AomUULFNDyZhGkoxzosiU7MMvuhoX1oFzraQ5hwrPMpNje+huBDAoxA4WXYa2g/LutadnSUYMb9KAn5vvjf8ACbQxDF4Ol8m9YG2uUOj1SqeQ3E6TESpJzO4VENa4wJ8E03gVzuqvCUgE+XD5TLAV1yhQ7twjsQ19Xo0glw8X8atNOctZNXHKTQRN7VsDb9PfPv62GrM2g9R3//VflIl9Nk0sgA7Bpniry1a/FgKPMhWp+IO/XnsIJKbWRYTFTcdPTZH71Gszd/Zgz6/SvXGKE47NkjoC94vLSvjJ/PnRf8Mv8IgL3ec39WXS3b/VCMWmQ4urpvv/qrz/bjmMIj2I/jtol6d8Pe2/M9e4gx/vNWH9xZ6RMeTI2++yts9427kWtXOvWPG9x6fAOTj+9wu+q+Djpvy5uxXYqRW05Z7S6wPhp5Ojv493XbO++m4z9AxFZUY9DrFm5ll7A4T2ZKQz3dz0ydWJEPF8CE1lSnFHc4qaQ76jmyh2vZrHXMbrttdm4tu1W3qjdGpVTq2rZ5a7RKLcPekswaxQHETsR8qmIpyl2PzXmAJHQ4MA8SfR6lkum4dsZjFwtc6LGhvAQR4zCKJD2vxLw6s8rzchUWXrVGw/QDl1cR1wqPkRiwQdLyBSR7lGyae5Q8BEJjCoq31VhzOddcyFLM8DwVgVmc4yKDVDJ7okjWscr1CuI0jANQQFEYeWkAxXgaZ4VBfP2VfEN4ph3ejLLLdjKtw3/bCkgbjyoDrnJpg+wiHHlbrG0ipxMu7ya8dd9KParulSynSChZI9n/9TUlajzyEZEZvXfcd3OLOze/+Pj3k+gMKHRYjzyQN6c7Ybcvt3wDJGs0t92cYbM4K6bzeZo1sFwuoUS6R6pCkieQCySVvLYaRR/AUO4FXfSI5MAPguf6fYipmDJXYAGhHLhCJl6wNbjA1dbQkxdleelKshdSlk7AUhzTdQK58SjEZ5ci4hBlJ9VP8rOIEu+rY0d87cSRecqlQVA2UZJ6QFYn5oJE0i2V1Bclu86POTgWfF+ZFznHIuRAjVMBp/8UFKc1NExIlDLR62qZYpdnM5xiFYPzZfTNTUbl+W5H/32502k2AgTkRshp5l890Y66Amyyw9WboCfoun6OrvfRNb+pv2t26nQ4481/AA==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17C1DBB1CF28A826E0533D991F0A3A09</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZZc6pKEP4rFnlMIYtLgIpWocYcs5hEcnKS85Iah0YngQGZwSW//s6gEjXq9d4nqpue7q+X+aYvGYpC03EZg5STmJbmUUiZk2sbSpZSJ0aMMIeiCJjDseO593eOWdYdtD6ilHqdhvI+NOy6b6BA9Yd1pFZ131At20ZqpVKt1oLK0PIvTGHKWAY9yjiivKGYulFT9bqq1551yzENp1orVy39r1J6gZQJ38KkrCsrUHPWUMacJ46mzWaz8qxSjtORZuq6ob3e33l4DBFSmpfLjPJAaXNlj8s+YAhDXMZxpF1qWzaXPnM8MqKIZymsYvmHYumabmvCxmdkdKYUZ8Hv0SDOxTaiMSUYheQLyfrcAx/HfskNR3FK+Dg6mIShS8cqzLGKjSo9U7RtaCc62kKYMqSyMTJWvgYQQAoUQ+n3oNdQzk7rWn70OUWUBXEasW3xv+EBOoUwTsBX2TqtFbTTHe6pVPMSsNOjOMwYmUJfDmuCMLBVNwGf7qr0mEJA5neEiQGdM4lO24S3Iy6r0SEjYPz/NGijOUsnLyjMoPnWfeX37jy79pIbd351jS23/mIvvMXHUyMHsGmcK4rWLsWdoSyGaHni6dfk4tb225l3Q9/Ojfrftz+vJLF8/vuu9WC/9gced9vn512z6/dnk6+RrY+Z/fXx9dGf3l5nnzX4emnd2H13opsdq1/jXr87eVvEff+i93H9ZEVfT1U36gWtxd0ofbyN8DlOTLbQx7X+TdICZqe497Qw3x7uPu/b+CXQB93prz4JeMsfDavdWTx8fJv/WQwGD9RqFOls4N/Wre+8lw0/APO1KMeg1yl1RZcQP05mUkN8NchNnUSSD+NAudKUpyR3OJmgO+I7oodL2bhoG51Wy2h366ZrmfUrvVapdGzb6OpuxdXtNcksUexAbMc0IDKWpNzl2BwHiCOHAfUhVadxJpiOKUc8dhBHpR4diEsQUwbPsaBnI0PUYjUgdV0HVq8FwRhZlnnxqZT6MX+gD6kbcEi3ONkwtjh5AJgkBCRxy7lmYrAZF7WYoGnGQ6M8RWUKmaD2VLKsY1atmsZIlIQgkWpR7GchlJNxkldGY8uvqSLMcu3g6jm/bQfz2v23LoGw8Yk0YDKXFog2wp7HpbJO5HDC1c2E1+7dzCfyYol68pTgJZLtX99jIuejmBGR0XvbezfWuAvzk4//PKkdAaXt1qMI5E/JRtj10y0eAUEbzXU3J8goT8rZdJrlDaxWK1oq3GuyQppuah7gTBDb4jn+BKoVXrSTXpEC+E7wQr8NMeNj6nHEIRIDV8rFE9YGD5hcG3ripsxP3Um2QorScZjzfbp2KFYeifjoVoQdLO2E+lF8ZnHqf3dsj6+NOCJPsTVwQkdSki/I4sBc4Fi4JYL74nTT+T4H+4JvK4siF1i4GKhhxuHwn5IktYaCMI4zynsdJVdsEm2Oky8ScL6NfrjJubxY7si/b3cqyUcAg1gJGcn9yzfakVeAjjbIehV0P1+b1jG+3kbX/KH+qdmo0+6MN/8B</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17C1DBB1CF62A826E0533D991F0A3A09</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17C1DBB1CF62A826E0533D991F0A3A09</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150605_01552</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17C1DBB1CF63A826E0533D991F0A3A09</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>00f70853-115f-431a-b2d9-2f9def959681</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00027_FUNC_UVTC_UserName_RequestorUser_any_with_active_status_RequesteeUser_any_and_deleted_UnlockMe_200_OK_P2" searchProperties="true" id="b5f430ae-0a19-474d-a200-00a397d4c341"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="21c19f31-ca02-477c-9861-765b43f45e68"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="eba628ae-7571-4660-a202-b9b45387a72e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="a94aac87-abbb-46ec-ab8c-9ba495c49da3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU" id="5036580b-6456-49b6-ab8a-d7a8b2ada1dc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus" id="559d2b96-69b4-45c1-a760-b3477ca69143"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","deleted");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="1c36b6de-c731-4ab0-ac96-38d605d3a30d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","USER_STATUS_NOT_VALID");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU8I6EP4rTH10Si+2oB1hBlHHKooCKsOLE5OlBNukNCmgv/4k5SKgeDjnqbPbze63l3zZc4GS2A0aQkAmKWeleRIzERTampFnLOBIUBEwlIAIJA66jftW4JbtAK2OGKXwsma8eVUCrnv6broEV0wP46p5SpBruifvLvJJ5XTo+cpUiBxCJiRisma4tuObdsW0/Z59GrhO4Ptl+8weGKUXyITyrUzKtrEENRc1YyRlGljWbDYrz07KPIss17Ydq3/f6uIRJMiony8yKgJl9aU9LhPAEMe4jHlinVtbNudEBF0aMSTzDJaxyL5YtmWfWcqGCBodGeuzQEI25IXYRIwzilFMv5Cuzz3IESelRhzxjMpRsjcJx9aOTZhjEzseOzKsbWgHOtpCmAlkihFylr46MIQMGIbScyesGUeHda042ssQE0OeJWJb/G94gE0h5ikQU6zSWkI73OEvlaqfAw5ChuNc0Ck86GFNEQax7Cbgw12VHjMY0nmLCjWgc6HRWZvwdsRFNS5pBEL+nwZtNGfh5AXFOdQH6W3j7vo6erqJ+u0hHz5XX/zW/dzN/EatALBpXCjWrV2IO0O5HqLFCdFvd/sku0+4/Bjhye3tK36dvZDJXdgDe/ToPERX3U4/bMHVTdtv0or3gKr+uEIsNnBZ7s8GfYe64+NWdpx/PiUtlqPel/NlxU8ti0SsnU4+wunXzXH0UOm/VsfVTuWGOs/pBes62QBBGop2/i6QnPg5Sy+6g/nktnccX08HN824xfnIn93f3swar1W4W6a7g39bt7rz3fx9DFiuRD0G4WXpWnUJyb/JTGsoMYeFaZBq8hESmDTq+pTmjiBXdEdJoHq4kJ1q02leup5d9SqVypl/ZfsnJ1dnZ8613bio2vaKZBYodiA2ORtSHUtT7mJs/gaIk0AAI5CZU54rphPGHx4vkUSlkHXUJeBMQI8renZOZ2QMk8poIqKxN6zOCPtIxk7VNUoPXLZZO2sMJWRbnOw4W5zcAUxTCpq49VwLNdhCqlpM0DSXsVOeojKDXFF7plk2cL1T3xI0SWPQSK2EkzyGcjpKi8pYYvF1TYRFoe1c9Yrbtjev3X+rEigbQrWB0LlcgGoj/PK4eKtE9ifsbSa8ct/ICdUXS9VTZhQvkGz/+h4TPR/rGVEZvTW7b84K99r84OM/T1p/gLJ267EORKZ0I+zq6VaPgKKN+qqbE+SUJ+V8Os2LBnreiZUp95aukGW7Vhdwrojts8c/gFlrL9ZBr8ga+E7wtX4bYi5HrCuRhEQNXKkQD1gbuiD02hCqmzI/dCfZCqlKJ2Euf9M1Y7XyaMR/bkU4wNpOqR/VZ8Yz8t2xX3xtxFF5qq1BUhZpSb8gn3vmAnPlliru49mm898c/BZ8W7ku8hqLVAP1nkvY/6ekSa1mIIx5zmR4aRSKTaItcMrPFIJvox9uCi5fL3f037c7kxYjgEGthIIW/vUbHegrwKINsl4G3cPX/l98vY2u/kP9U7NRp90Zr/8D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17C1CD2407456695E0533E991F0AB700</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17C1CD2407456695E0533E991F0AB700</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17C1CD2407466695E0533E991F0AB700</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17C1CD2407466695E0533E991F0AB700</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150605_015514</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150605_015519</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150605_015519</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150605_015519</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbU8I6EP4rTH10Si+2oB1hBlHHKooCKsOLE5OlBNukNCmgv/4k5SKgeDjnqbPbze63l3zZc4GS2A0aQkAmKWeleRIzERTampFnLOBIUBEwlIAIJA66jftW4JbtAK2OGKXwsma8eVUCrnv6broEV0wP46p5SpBruifvLvJJ5XTo+cpUiBxCJiRisma4tuObdsW0/Z59GrhO4Ptl+8weGKUXyITyrUzKtrEENRc1YyRlGljWbDYrz07KPIss17Ydq3/f6uIRJMiony8yKgJl9aU9LhPAEMe4jHlinVtbNudEBF0aMSTzDJaxyL5YtmWfWcqGCBodGeuzQEI25IXYRIwzilFMv5Cuzz3IESelRhzxjMpRsjcJx9aOTZhjEzseOzKsbWgHOtpCmAlkihFylr46MIQMGIbScyesGUeHda042ssQE0OeJWJb/G94gE0h5ikQU6zSWkI73OEvlaqfAw5ChuNc0Ck86GFNEQax7Cbgw12VHjMY0nmLCjWgc6HRWZvwdsRFNS5pBEL+nwZtNGfh5AXFOdQH6W3j7vo6erqJ+u0hHz5XX/zW/dzN/EatALBpXCjWrV2IO0O5HqLFCdFvd/sku0+4/Bjhye3tK36dvZDJXdgDe/ToPERX3U4/bMHVTdtv0or3gKr+uEIsNnBZ7s8GfYe64+NWdpx/PiUtlqPel/NlxU8ti0SsnU4+wunXzXH0UOm/VsfVTuWGOs/pBes62QBBGop2/i6QnPg5Sy+6g/nktnccX08HN824xfnIn93f3swar1W4W6a7g39bt7rz3fx9DFiuRD0G4WXpWnUJyb/JTGsoMYeFaZBq8hESmDTq+pTmjiBXdEdJoHq4kJ1q02leup5d9SqVypl/ZfsnJ1dnZ8613bio2vaKZBYodiA2ORtSHUtT7mJs/gaIk0AAI5CZU54rphPGHx4vkUSlkHXUJeBMQI8renZOZ2QMk8poIqKxN6zOCPtIxk7VNUoPXLZZO2sMJWRbnOw4W5zcAUxTCpq49VwLNdhCqlpM0DSXsVOeojKDXFF7plk2cL1T3xI0SWPQSK2EkzyGcjpKi8pYYvF1TYRFoe1c9Yrbtjev3X+rEigbQrWB0LlcgGoj/PK4eKtE9ifsbSa8ct/ICdUXS9VTZhQvkGz/+h4TPR/rGVEZvTW7b84K99r84OM/T1p/gLJ267EORKZ0I+zq6VaPgKKN+qqbE+SUJ+V8Os2LBnreiZUp95aukGW7Vhdwrojts8c/gFlrL9ZBr8ga+E7wtX4bYi5HrCuRhEQNXKkQD1gbuiD02hCqmzI/dCfZCqlKJ2Euf9M1Y7XyaMR/bkU4wNpOqR/VZ8Yz8t2xX3xtxFF5qq1BUhZpSb8gn3vmAnPlliru49mm898c/BZ8W7ku8hqLVAP1nkvY/6ekSa1mIIx5zmR4aRSKTaItcMrPFIJvox9uCi5fL3f037c7kxYjgEGthIIW/vUbHegrwKINsl4G3cPX/l98vY2u/kP9U7NRp90Zr/8D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17C1CD2407456695E0533E991F0AB700</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbc6JKEP4rFvu4hQyIF6holYrJIdEkKzEn2ZetydDqbGAgzIAmv/7MoLJqLsdznqhuerq/vsw3fcZxHFlun3PIBE1YbR1HjLultqvlGXMTzCl3GY6Bu4K4QX8ydq06cvHuiFbzva72qwmkg+aWrXee5qZut4mlY6vV0GFuYdSyO3PktKUp5zn4jAvMRFezkNnUUUtHzTvUcS3LRVa90bJ+arV7yLj0LU3qSNuCWvOuthQidQ1jtVrVV416ki0MCyHTeJiMA7KEGGu9s01GZaCst7Un9RAIRBGpkyQ2zowDm7OQuwFdMCzyDLaxws9iIQM5hrQJOV1806qzEPpsnpTiELOEUYIj+oZVfSYglklY60eLJKNiGX+ahImUYx3WRCemzb5pxiG0Ex0dIMw41vkSm1tfU5hDBoxAbTb1u9q307pWHr3LMOPzJIv5ofjf8AArIEpSCHW+S2sL7XSHH1SqdwbE9RmJck4LuFbDmmICfNtNIKe7qt1mMKfrMeVyQNdcoTP24R2Jm2p4dAFc/J8G7TVn4+QeRzn0itS5aF8WvwfXtp9fTsLMwa1O4eWjyahbAtg3LhVVazfi0VBWQ7Q5cQOTi/liwd6I0bhdj8k9epg+PnjLUSycnyun3bkd3wzy6Y9gEYePgyviX7Ig/D7LgsK/uV6PRvRiMHZene/5wP+RFoiQwPprtJhFk4dntr6P46dZfNOcRVfx5X369rPN/o688Ww8zM+b3/veChqzPLq4Sm/b/ss4WMXmj0eKJr+L80FrmtlDP3oxH+/j5fKlFXPerdLZw3+o2935IH/6DUTsRDUGvlc7l13C4msyUxoa6vPS1E0V+XABTGg9dUpxh5tLuqOhK3u4kc320PQGA9NDDbvfsVoj1Gw0PMcxz1G/0UfOjmQ2KI4gDhM2pyqWotzN2HwNkMQuBxZCphdJLpmOa1949LDANZ9N5SVIGIe7RNKzWTwlTfvZIo0322T0uQW5bSVOZmq160TcsJusPxeQHXCyaR5w8hQITSko4lZzzeVgcyFr8YKLXERmvcB1Brmk9kyxrGvZnabBaZxGoJAacRLmEdTTZVpWxuCbryQcwkvtdHRX3rZP8zr+tyuBtAmpMuAqlwHINsK7x8V0m7tEPk/Y3k94576fh1RdLFlPkVGyQXL468+YqPmoZkRm9GsY/DJ3uCvzk4+/P2l8Aco4rkcVKCzoXtjd0y0fAUkbvV03X7BZf6nnRZGXDbTthpFJ94aqkIEsIwCSS2J7vUuegRmVF+OkV6QCfhS80h9CzMWSBQILiOXA1UrxhLUhAK7WBl/elPWpO8lBSFk6AWvxkW4YyZVHIf5yKyIuUXZSfSs/qyQL/3TsA197cWSecmsQlC2UpF6Q10/mgiTSLZXcl2T7zj9y8FHwQ2VV5AqLkAP1lAv4/E9NkVpXw4QkORO+p5WKfaItcYrXFNw/Ru/clFxeLXf037c7nZYjQECuhJyW/tUb7aorwBZ7ZL0NeszXQ8+yUdtutlpOs+Tr0YavB22EqqIcoOu9U7/X7NXpeMZ7/wA=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17C1DBB1D034A826E0533D991F0A3A09</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17C1DBB1D034A826E0533D991F0A3A09</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150605_015519</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17C1DBB1D035A826E0533D991F0A3A09</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>00f70853-115f-431a-b2d9-2f9def959681</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00038_FUNC_UVTC_UserName_RequestorUser_any_status_RequesteeUser_any_and_active_ResetPassword_Role_RET_CS_200_OK_P1" searchProperties="true" id="358ae5f1-d4aa-4789-82aa-897aad74620e"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="9a5eb972-bfa0-499e-904d-72a7f7b66e1c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="b420a98b-cd4c-4e3c-9056-28b40fc7d92d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="b91bb8cd-571f-4806-89d0-bf8c59efb34e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU" id="fcb0ed75-d2cb-459c-8060-b0f4520e1bf8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="55bbf3cc-7ac9-471f-9cf2-04e06143d310"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="f3c229af-8ac8-4df1-8585-e7b8bd0cb72f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o6EP4rjPvYMb4AwfYEZggkjVtICCackpeOkNeg1MhGkrnk11cy4AIJOZzz5Nn1avfbiz7tNUfz2PZanAMTJKGl9Tym3Mu1DS1j1EsQJ9yjaA7cE9gLWr2uZ5dND+2PaCW/09B+AUxqrjNxdBy5oFcdy9QdZDs6IAvC8GpSATSRppxn4FMuEBUNzTatmm5e6WZtaLqe5Xi2Wa5XrBetNALGpW9pUja1Hag1b2gzIVLPMFarVXlVKSdsatimaRk/e90Az2COtOb1NqM8EGvu7HE5BAxxjMs4mRvXxpHNdci9gEwpEhmDXazwXCzTMF1D2oScTL9oxVkIfRoludhGNKEEo5i8IVWfHohZEpZa8TRhRMzmZ5OwTOVYhzXWsVWlXzTjGNqFjo4QMo50PkPWztcAImBAMZSeB35D+3JZ1/KjQ4YojxI258fif8MDdAlxkkKo831aO2iXO/ygUs1rwJ5PcZxxsoQHNawpwsB33QR8uatSn0FE1l3C5YCuuUJnHMI7EbfV6JApcPF/GnTQnK2TEYozaLZ/+13c/lZPjdpPn8/q+D68+mEuu7et20YO4NA4VxSt3YonQ1kM0fbE82BBR09Jy7mLbFyLBjfBNz/u34/DXnXcMVvmiN5vKq3ROuzXkR+Mnsh4/DVZWL5166zuAp+uX8PFE/uW2q8uZJ1hrWMv2+h7b+oIetXtQv2F9ezxIvunO3tkw43f6vmuFTy9BvCjHncenFn6IqLN91F61zcXDD+sltVxNUNfv/br6T2Z1BCObixW64y7w+dGkc4B/mPd/s4H2eQVsNiLagz8TulOdgmJz8lMaUioR7mplyry4QKo0JrqlOIOL5N0R0JP9nArW/W27TrOXcV0q1eVG/fWrFUqHde17syWY7qVPclsUZxAbCc0IiqWotzt2HwOEM89DjQEpi+TTDId1z7x2EEClXw6kJcgoRyGiaRnK0JmFb8lTuxkrpW8Ou6G11bLt1ldKz0k4pE+slYkgB2RsmUfkfIAMEkJKOZWg83lZHMhi7FAy0zEVnmJyhQyye1M0axnV52awck8jUFBNeZJmMVQTmdpXhqDb7+2jjDPtYPbYX7dziZ2+m9fA2kTEmXAVS43IPsIH7wu1j6R8wnXDhPeu29lIVE3SxZUMIK3SI5//Z0TNSDFkMiMfrWDX9Yed2F+8fH3J41PQBmn9SgChUtyEHb/dstXQPJGc9/NBbLKi3K2XGZ5A6vVisGke0NVyDBtIwCcSWbbDJPfQI3Ci3HRM1IAPwle6I8hZmJGA4EEzOXAlXLxgr0hAK72Bl9elfWlS8lRSFk6AWvxka4dy51HIf50LcIeVnZS3ZefVcLCvx37wNdBHJmnXBsEoVMlqSdkc2YucCLdEkl+CTt0/pGDj4IfK4siF1iEHKhJJuD8n5JitYaGME4yKvyOlisOmTbHKTYpeH+N3rnJybzY7si/r3c6yUcAg9wJOcn9q0faU1eATg/Yehf0DGFXPiPsY3TNd+r3moM6nc548w8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17C2988F309363B9E0533D991F0A8093</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17C2988F309363B9E0533D991F0A8093</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17C2988F309463B9E0533D991F0A8093</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17C2988F309463B9E0533D991F0A8093</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150605_025139</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150605_025145</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150605_025145</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150605_025145</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc9o6EP4rjPvYMb4AwfYEZggkjVtICCackpeOkNeg1MhGkrnk11cy4AIJOZzz5Nn1avfbiz7tNUfz2PZanAMTJKGl9Tym3Mu1DS1j1EsQJ9yjaA7cE9gLWr2uZ5dND+2PaCW/09B+AUxqrjNxdBy5oFcdy9QdZDs6IAvC8GpSATSRppxn4FMuEBUNzTatmm5e6WZtaLqe5Xi2Wa5XrBetNALGpW9pUja1Hag1b2gzIVLPMFarVXlVKSdsatimaRk/e90Az2COtOb1NqM8EGvu7HE5BAxxjMs4mRvXxpHNdci9gEwpEhmDXazwXCzTMF1D2oScTL9oxVkIfRoludhGNKEEo5i8IVWfHohZEpZa8TRhRMzmZ5OwTOVYhzXWsVWlXzTjGNqFjo4QMo50PkPWztcAImBAMZSeB35D+3JZ1/KjQ4YojxI258fif8MDdAlxkkKo831aO2iXO/ygUs1rwJ5PcZxxsoQHNawpwsB33QR8uatSn0FE1l3C5YCuuUJnHMI7EbfV6JApcPF/GnTQnK2TEYozaLZ/+13c/lZPjdpPn8/q+D68+mEuu7et20YO4NA4VxSt3YonQ1kM0fbE82BBR09Jy7mLbFyLBjfBNz/u34/DXnXcMVvmiN5vKq3ROuzXkR+Mnsh4/DVZWL5166zuAp+uX8PFE/uW2q8uZJ1hrWMv2+h7b+oIetXtQv2F9ezxIvunO3tkw43f6vmuFTy9BvCjHncenFn6IqLN91F61zcXDD+sltVxNUNfv/br6T2Z1BCObixW64y7w+dGkc4B/mPd/s4H2eQVsNiLagz8TulOdgmJz8lMaUioR7mplyry4QKo0JrqlOIOL5N0R0JP9nArW/W27TrOXcV0q1eVG/fWrFUqHde17syWY7qVPclsUZxAbCc0IiqWotzt2HwOEM89DjQEpi+TTDId1z7x2EEClXw6kJcgoRyGiaRnK0JmFb8lTuxkrpW8Ou6G11bLt1ldKz0k4pE+slYkgB2RsmUfkfIAMEkJKOZWg83lZHMhi7FAy0zEVnmJyhQyye1M0axnV52awck8jUFBNeZJmMVQTmdpXhqDb7+2jjDPtYPbYX7dziZ2+m9fA2kTEmXAVS43IPsIH7wu1j6R8wnXDhPeu29lIVE3SxZUMIK3SI5//Z0TNSDFkMiMfrWDX9Yed2F+8fH3J41PQBmn9SgChUtyEHb/dstXQPJGc9/NBbLKi3K2XGZ5A6vVisGke0NVyDBtIwCcSWbbDJPfQI3Ci3HRM1IAPwle6I8hZmJGA4EEzOXAlXLxgr0hAK72Bl9elfWlS8lRSFk6AWvxka4dy51HIf50LcIeVnZS3ZefVcLCvx37wNdBHJmnXBsEoVMlqSdkc2YucCLdEkl+CTt0/pGDj4IfK4siF1iEHKhJJuD8n5JitYaGME4yKvyOlisOmTbHKTYpeH+N3rnJybzY7si/r3c6yUcAg9wJOcn9q0faU1eATg/Yehf0DGFXPiPsY3TNd+r3moM6nc548w8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17C2988F309363B9E0533D991F0A8093</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbU+pIEP4rVHy0Qi4QQlJCFYKejRdQ8ajrizVOOjCaTMLMJMD59TsTIAJelt2nVHd6ur++zDd9wlES236Pc2CCpLS2SGLK/VLb0XJG/RRxwn2KEuC+wP64d33l23XTR5sjWi0YdLQXcDA0ogbSPdxu6U0rAr3ddJp6G16t0Gx7YHmeNOU8h4BygajoaLZpObrZ0s3mvdnwbcc3W3XbdZ+12gMwLn1Lk7qprUEteEebCpH5hjGfz+vzRj1lE8M2Tct4ur4a4ykkSOuerDIqA7Hu2h7XQ8AQx7iO08Q4MXZsTkLuj8mEIpEzWMcKv4tlGqZnSJuQk8mRVp2FMKBRWop9RFNKMIrJH6Tqcw1imoa1XjxJGRHT5NskLFM51mGBdWw16ZFm7EI70NEOQsaRzqfIWvu6gwgYUAy133dBRzs6rGvl0XuGKI9SlvBd8b/hAVpAnGYQ6nyT1hra4Q6/qFT3BLAfUBznnBQwVMOaIQx83U3Ah7uq3TCIyOKKcDmgC67QGdvw9sRVNQZkAlz8nwZtNWfl5AHFOXQvAxKOXp1FfHrWtp6CeImsm6J3i1z+d6cEsG1cKqrWrsS9oayGaHUCP8yfr89YwYvT9tNwdvvkXZ57j4sBm4/6F/wWX4zdKH346/HWDqDZz/vDKLgqJhfXj1EyW2YNazGcx39aRutpNLlsW70bM7lj3s0Vph67SFtsNPo1mIwm02Lo9BuWZYxF/F6gY5xk88h2HoqMvQ2foX3tzJ+Xt7gxG9Jf86tm7DTe7iduaJ6RcdsbHL8Fx3n6u1Ols4V/V7e58+P89Q2w2IhqDIJB7Vx2CYmfyUxpSKhHpamfKfLhAqjQuuqU4g4/l3RHQl/2cCVbbs9rW03POT13Wq7bOjOdhul6nnVu9lzHa29IZoViD2I/pRFRsRTlrsbmZ4A48TnQEJhepLlkOq794HGABKoF9E5egpRyuE8lPVtJXITT/E3wmJPMdIVtL/L3JZ5rtWEqRnTEepEAtsvJrR1OvgNMMgKKuNVccznYXMhazFCRi9iqF6hOIZfUzhTL+naz7RicJFkMCqmRpGEeQz2bZmVlDL762jrCvNTend2Xt+3bvPb/bUogbUKiDLjK5RRkG+HT49L0nU0i3yfsbSe8cd/LQ6IulqynYASvkOz++hgTNR/VjMiMXvrjF2uDuzI/+Pjnk8YPoIz9elSBwoJshd083fIRkLTR3XRzhqz6rJ4XRV42sNlsGEy6N1SFDNM2xoBzSWzL+/QdqFF5MQ56RSrge8Er/S7EXEzpWCABiRy4WikesDaMgau1IZA3ZXHoTrITUpZOwEJ8pevHcuVRiH/cirCPlZ1U38jPPGXhR8e+8LUVR+YptwZB6ERJ6gVZfjMXOJVuieS+lG07/8rBV8F3lVWRKyxCDtRrLuD7PzVFah0NYZzmVAQDrVRsE22JUywz8D+MPrkpubxa7si/b3c6KUcAg1wJOSn9qzfaV1eATrbIeh10n6/dQcs2Xeu8ZXn2Nl+fO6e9qig76Lqf1J81W3Xan/HuPw==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17A981495BF56776E05307991F0A7598</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17A981495BF56776E05307991F0A7598</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_085827</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17A981495BF66776E05307991F0A7598</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f5f8feae-2fe1-43ec-98ca-c798916c5e2a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00041_UVTC_UserName_RequestorUser_any_status_RequesteeUser_any_and_other_than_active_pending_or_blocked_ResetPassword_Role_RET_CS (Negative)_400_BADREQUEST_P1" searchProperties="true" id="88055335-2abf-4484-aa98-070d68d08145"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="4989ce5f-a6e7-4bd9-882d-4ea14a2fb41d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="aad0e7ed-e1e6-4534-bcbd-30f706c94158"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="f023447f-cf52-4f44-981b-5f880e487a0d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU" id="e5c5e9c3-3908-4e4b-ab45-8a2dcbc27d4c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus" id="df351fbd-f255-4945-af36-b3c1f27aea71"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","deleted");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="53c041d6-1be4-4fbb-91f8-bed4bdf0bf76"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="a60015ac-61e2-4c51-8672-4ca17891ee45"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","USER_STATUS_NOT_VALID");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VyvcxZSzZrK5AFYEwIXtiwr2Tl5SQZVBiZEeLDfn6kcwSICHDzJOr263u04uO+lSgWez6HSEIlzRhpfksZsIvtC1LceYnSFDhMzQjwpfYDzo3175bBj5aH7FKg17LemnWXYKjcGzXvVpkV6KoZqMxATb2QLUOmo2ai6vaVAhFBkxIxGTLcgGs2qBmg+oQNHzX9d1aue7CZ6s0Ilxo39qkDKwVqLloWVMpU99x8jwv51454RPHBQA6f26uAzwlM2S1T5cZFYF4e2WPyyHBJI5xGScz59TZsTkNhR/QCUNScbKKFR6KBRzQdLRNKOjkl7U5S8IBi5JC7CKWMIpRTD+Qqc8NkdMkLHXiScKpnM4OJgGBcWyTObYxrLBflrML7UhHOwi5QLaYIrjy9UgiwgnDpPT0OGhZv47rWnF0yBETUcJnYlf8b3gIy0icpCS0xTqtFbTjHX5TqfYpwf6A4VgJmpFbM6wpwkSsuknw8a5K95xEdH5NhR7QuTDonG14e+KyGj06IUL+nwZtNWfpZIRiRdphdQqzrKveJ1eq7o68PyqvnHkheIZPrQLAtnGh2LR2Ke4N5WaIlidwlD1E81E34EPC4eUC5MOPW3nXd57m4OYsGbisf3510b/k58Hb2cnHnOe3zWhRi6fu5LLT6aTAW9Tk6GQ8ebiX84v0zb28glG/3xiISR1540a/hyp99CavaHAVp5cX4CHzEFT9ixp77p0suPrr9+Wgeh824O+/4QPJ75/rQb/7nI9mb5nTcEdjoNxO4FXuX1fp7uHf1a3vfKDGrwTLtWjGYNAr9XWXkPyZzIyGhnZUmPqpIR8hCZNW25wy3OErTXc09HUPlzKsd2Hv7Az2YMXrNNzaOah6Xq/ZhH3Q8TqguSaZJYo9iN2ERdTEMpS7HJufAeKZLwgLCbezRGmmE9YPHntIotKAPepLkDBBhommZxjXPmgKUjd/FTl8e5Xuu4zfc640Kd8m8o7d8U4kCd8hZQh3SPmRYJpSYpjbDLbQky2kLsY7ypSMYTlDZUaU5nZuaNZ3K42qI+gsjYmB6sySUMWknE7TojSOWH5dG2FRaB/Ph8V1O5jY/r91DbRNSI2BMLmcEd1H8s3rAteJHE64sp3w2n1HhdTcLF1QySleItn99TknZkA2Q6IzeukGL3CNe2N+9PGvJ50fQDn79dgECjO6FXb9dutXQPNGe93NdwTL72WVZapoYKXiOVy7d0yFHOA6AcFKM9timLwR5my8OEc9Ixvge8E3+l2ISk5ZIJEkMz1wpUI8Ym8IiDB7w0BflfmxS8lOSF06SebyO1031juPQfzjWoR9bOy0+l5/8oSHnx37xtdWHJ2nXhskZRMjmSdkcWAucKLdUk1+Cd92/p2D74LvKjdF3mCReqDGSpLDf0qG1VoWwjhRTA56VqHYZtoCp1ykxP80+uKmIPPNdkf/fb2zaTECmOidUNDCv3mkfXMF2GSLrVdBDxC2+xNh76Jrf1F/1WzVaX/G2/8A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17C1DBB1D142A826E0533D991F0A3A09</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17C1DBB1D142A826E0533D991F0A3A09</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17C1DBB1D143A826E0533D991F0A3A09</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17C1DBB1D143A826E0533D991F0A3A09</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150605_015546</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150605_015550</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150605_015550</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150605_015550</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VyvcxZSzZrK5AFYEwIXtiwr2Tl5SQZVBiZEeLDfn6kcwSICHDzJOr263u04uO+lSgWez6HSEIlzRhpfksZsIvtC1LceYnSFDhMzQjwpfYDzo3175bBj5aH7FKg17LemnWXYKjcGzXvVpkV6KoZqMxATb2QLUOmo2ai6vaVAhFBkxIxGTLcgGs2qBmg+oQNHzX9d1aue7CZ6s0Ilxo39qkDKwVqLloWVMpU99x8jwv51454RPHBQA6f26uAzwlM2S1T5cZFYF4e2WPyyHBJI5xGScz59TZsTkNhR/QCUNScbKKFR6KBRzQdLRNKOjkl7U5S8IBi5JC7CKWMIpRTD+Qqc8NkdMkLHXiScKpnM4OJgGBcWyTObYxrLBflrML7UhHOwi5QLaYIrjy9UgiwgnDpPT0OGhZv47rWnF0yBETUcJnYlf8b3gIy0icpCS0xTqtFbTjHX5TqfYpwf6A4VgJmpFbM6wpwkSsuknw8a5K95xEdH5NhR7QuTDonG14e+KyGj06IUL+nwZtNWfpZIRiRdphdQqzrKveJ1eq7o68PyqvnHkheIZPrQLAtnGh2LR2Ke4N5WaIlidwlD1E81E34EPC4eUC5MOPW3nXd57m4OYsGbisf3510b/k58Hb2cnHnOe3zWhRi6fu5LLT6aTAW9Tk6GQ8ebiX84v0zb28glG/3xiISR1540a/hyp99CavaHAVp5cX4CHzEFT9ixp77p0suPrr9+Wgeh824O+/4QPJ75/rQb/7nI9mb5nTcEdjoNxO4FXuX1fp7uHf1a3vfKDGrwTLtWjGYNAr9XWXkPyZzIyGhnZUmPqpIR8hCZNW25wy3OErTXc09HUPlzKsd2Hv7Az2YMXrNNzaOah6Xq/ZhH3Q8TqguSaZJYo9iN2ERdTEMpS7HJufAeKZLwgLCbezRGmmE9YPHntIotKAPepLkDBBhommZxjXPmgKUjd/FTl8e5Xuu4zfc640Kd8m8o7d8U4kCd8hZQh3SPmRYJpSYpjbDLbQky2kLsY7ypSMYTlDZUaU5nZuaNZ3K42qI+gsjYmB6sySUMWknE7TojSOWH5dG2FRaB/Ph8V1O5jY/r91DbRNSI2BMLmcEd1H8s3rAteJHE64sp3w2n1HhdTcLF1QySleItn99TknZkA2Q6IzeukGL3CNe2N+9PGvJ50fQDn79dgECjO6FXb9dutXQPNGe93NdwTL72WVZapoYKXiOVy7d0yFHOA6AcFKM9timLwR5my8OEc9Ixvge8E3+l2ISk5ZIJEkMz1wpUI8Ym8IiDB7w0BflfmxS8lOSF06SebyO1031juPQfzjWoR9bOy0+l5/8oSHnx37xtdWHJ2nXhskZRMjmSdkcWAucKLdUk1+Cd92/p2D74LvKjdF3mCReqDGSpLDf0qG1VoWwjhRTA56VqHYZtoCp1ykxP80+uKmIPPNdkf/fb2zaTECmOidUNDCv3mkfXMF2GSLrVdBDxC2+xNh76Jrf1F/1WzVaX/G2/8A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17C1DBB1D142A826E0533D991F0A3A09</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0Vynm8BV4AG7sCVQ6EDBlIwpJl8pJSZGErsSVjSSz5+pEMOEBCLvc+ubrd6j696KjPGUhiy/MZQxnHlJSWSUyYl2ubmsiIRwHDzCMgQczj0Bv7g75nVQwPbI9opV6nqb0AYwqMwLbKwIKwXLMcUAbArJdR3XUaYFqbujUgTRkTqEcYB4Q3NcuQBoZdNmoTo+pZdc+yK7ZRfdZKDyhj0rc0qRjaBtSSNbWI89TT9cViUVlUKzQLdcswTP1p0B/DCCVAa52vM8oDZa2NPawECKI4hhVIE/1c37M5D5g3xiEBXGRoEys4FsvQDVeXNgHD4ZlWnEVBj0xpLrYBoQRDEOMPoOozQDyiQcmPQ5phHiVHkzAN5biMlrAMzRo50/R9aCc62kOYMVBmETA3vkZoijJEICrdj3pN7ey0ruVHJxkgbEqzhO2L/w0PInMU0xQFZbZNawPtdIffVKp1jqDXIzAWDM/RjRrWFEDENt1E8HRXpbsMTfGyj5kc0CVT6PRdeAfiuhodHCLG/0+DdpqzdvIAYoFaY/z8fLmaDd33YSPqTEKk95/vwxofJItmDmDXOFcUrV2LB0NZDNH6BHm97T88BkMqzHC2fOqAx3sRPU3A7dVgHsHB2/WtM+S8Fw2D635j+mds9D/q0fhh4d83Zu69FbrzdpvCLmZ+fPXUXwyxf2c9ksdueneztH+Hpj57ihPnz0MH+G+N/m/4a3S96Ebz11Wdtq/+qTrYfL9w0mqkiw/8GoHLmy75SAavH86dsI3nxWpKRP/Sj351l5t0D/Dv67Z3fixe3xDkW1GNQa9T6souAf4zmSkNDsrT3NRLFfkwjgjXWuqU4g5PSLrDgSd7uJZNx3edjm0ZzoVpm651adSrhuO6Ztfwu/ULf0syaxQHENuUTLGKpSh3PTY/A4SJxxAJUFaeUyGZjmk/eOwADko9MpKXgBKGJlTSsykikgImUgOGVTOOWWjEK0aZvdJKN5TfktvMn3KU7ZOyvUfKIwRxipFibjXYTE4247IYMzAXPDYrc1AhSEhuzxTNelatUdcZTtIYKah6QgMRo0oapXlpdLb+Su6BLNeOLif5dTua2OG/bQ2kTYCVAVO5XCDZR/TN62JuEzmesLub8Na9LwKsbpYsKM8wXCPZ//U5J2pAiiGRGb20xy/mFndhfvLxryf1H0Dph/UoAgVzvBN2+3bLV0DyRmvbzRkwK7OKmM9F3sBarapn0r2uKqQblj5GUEhmW03oOyJ64UU/6RkpgB8EL/T7EAWPyJgDjhI5cKVcPGFvGCOm9oaevCrLU5eSvZCydBwt+Xe6dix3HoX4x7UIelDZSfWd/CxoFnx27BtfO3FknnJt4JiESlJPyOrIXEAq3WJJfjTbdf6dg++C7yuLIhdYuByoV8HR8T8lxWpNDUBIBeG9jpYrdpk2x8lXKfI+jb64ycm82O7wv693ZZyPAERyJ2Q4968eaU9dARLusPUm6CFhN8yaW2+btu049i5hO3W3URRlD13ri/qrZqdOhzPe+gs=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17A97D6207B16192E05307991F0AF5BA</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17A97D6207B16192E05307991F0AF5BA</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_085847</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17A97D6207B26192E05307991F0AF5BA</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f5f8feae-2fe1-43ec-98ca-c798916c5e2a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662c9604-f226-44e7-a34a-1af55613ee92</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00042_UVTC_UserName_RequestorUser_any_status_RequesteeUser_any_and_active_ValidateEmail_Role_RET_CS_200_OK_P1" searchProperties="true" id="0d255837-5aeb-40cc-91ea-5ad58bb32c98"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="752db8eb-aab4-4d48-a821-19aeb6f7231f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="5113ac5b-449f-4ac2-89a9-2fe7134327d9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="4112053e-6ed0-47eb-8cff-4704ba2ca8b3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU" id="ffbb4a78-0476-4dc7-a614-ad74bc2ccd62"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="e8fa9fa5-3a4d-4096-9c0f-cf4a56b4752f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="90947757-1054-4de2-82ce-5d7de43d62fb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+o6EP4rTM/HO6UvFJWOMIOAxyKIR8Dj5YsT0i3E0yY1SQH99TcpUAHFy72fOrvd7D77kid7KVASu35TCOCSMFpaJTEVfq6tGxmnPkOCCJ+iBIQvsT9s9nu+W7Z9tD1ilIJ23Xj2LtzqtFKxzcitVU3PdpB5AU7F9OAcTyNwz6YVR5kKkUFAhURU1g3XdqqmfWba1ZF94buuXzkvn1W9iVF6BC6Ub2VSto0NqJWoG3MpU9+ylstleVkpMz6zXNt2rKd+b4jnkCCjcbnOKA/EGxt7XA4BQxzjMmaJdWnt2VyGwh+SGUUy47CJFR6LZVt2zVI2oSCzH0ZxFsKARiwXW4gySjCKyTvS9emDnLOw1IxnjBM5T44m4djasQkrbGLHoz8Max/aiY72EHKBTDFHzsbXA0TAgWIojR+CuvHjtK7lR0ccURExnoh98b/hAbqAmKUQmmKb1gba6Q6/qFTjErAfUBxngizgTg9rijCITTcBn+6qdM8hIqseEWpAV0Kjs3bhHYjrarTJDIT8Pw3aac7aySOKM2j0rrpXkYw91h3fDejFXThxWH/GX2v3nXoOYNc4VxStXYsHQ1kM0fqEeGrd9EZNDCwMOtettjOexPRsOVi49u17Z8KFx5u3bdy6+3l/Xs2i6mr8tHLmV73fnUFvcn0hF7fzJe+eV1r99Lr9kuD5zeBXtzadPLUnN7PpA05u+KR7a6/Gw3GQTKfs72yw/MshvyGqXLXSn8vByPrFuytUfXezXjAaD8YDOiHvf277j1F/OXnjnW7w0htW05FdL9LZwb+v2975YTZ9ASy3oh6DoF26Vl1C8nsy0xoSmlFu6qeafIQEKo2GPqW5w88U3ZHQVz1cy855y2m1Xc9uOt7ZWa3asauVSqdWc67t5tW5bW9JZo3iAGKL0YjoWJpy12PzPUCc+AJoCNxcsEwxnTC+8dhGEpUC+qAuAaMCRkzRs7NC2ZyjSEL28u7Yaew63msY4ndhlO6YHNABb6qffI+UHWePlB8Ak5SAZm492EJNtpCqGK9okcnYKS9QmUKmuJ1rmvVd76JqCZKkMWioVsLCLIZyOk/z0lhi/XVNhEWufeiM8ut2NLHDf9saKJuQaAOhc7kC1Uf44nVxt4kcT9jbTXjrvpmFRN8sVVDJCV4j2f/1MSd6QIohURk9t4bPzhZ3YX7y8c8nrW9AWYf1KAKFC7ITdvt2q1dA8UZj281X5JRfy9likeUN9LyKxZV7S1fIsl1rCDhTzPY2Yn+AWoUX66RnpAB+ELzQ70PM5JwOJZKQqIEr5eIJe8MQhN4bAnVVVqcuJXshVekkrORXulasdh6N+Nu1CPtY2yn1vfosGQ8/OvaFr504Kk+1NkhCZ1rST8jbkbnATLklivwY33X+lYOvgu8riyIXWKQaqGkm4fifkma1uoEwZhmVQdvIFbtMm+OUbyn4H0af3ORkXmx35N/XO5PkI4BB7YSC5P71I+3rK0BnO2y9CXqEsCvfEfY+usYn9WfNTp0OZ7zxDw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17C1CD240A136695E0533E991F0AB700</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17C1CD240A136695E0533E991F0AB700</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17C1CD240A146695E0533E991F0AB700</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17C1CD240A146695E0533E991F0AB700</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150605_015557</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150605_01561</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150605_01561</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150605_01561</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+o6EP4rTM/HO6UvFJWOMIOAxyKIR8Dj5YsT0i3E0yY1SQH99TcpUAHFy72fOrvd7D77kid7KVASu35TCOCSMFpaJTEVfq6tGxmnPkOCCJ+iBIQvsT9s9nu+W7Z9tD1ilIJ23Xj2LtzqtFKxzcitVU3PdpB5AU7F9OAcTyNwz6YVR5kKkUFAhURU1g3XdqqmfWba1ZF94buuXzkvn1W9iVF6BC6Ub2VSto0NqJWoG3MpU9+ylstleVkpMz6zXNt2rKd+b4jnkCCjcbnOKA/EGxt7XA4BQxzjMmaJdWnt2VyGwh+SGUUy47CJFR6LZVt2zVI2oSCzH0ZxFsKARiwXW4gySjCKyTvS9emDnLOw1IxnjBM5T44m4djasQkrbGLHoz8Max/aiY72EHKBTDFHzsbXA0TAgWIojR+CuvHjtK7lR0ccURExnoh98b/hAbqAmKUQmmKb1gba6Q6/qFTjErAfUBxngizgTg9rijCITTcBn+6qdM8hIqseEWpAV0Kjs3bhHYjrarTJDIT8Pw3aac7aySOKM2j0rrpXkYw91h3fDejFXThxWH/GX2v3nXoOYNc4VxStXYsHQ1kM0fqEeGrd9EZNDCwMOtettjOexPRsOVi49u17Z8KFx5u3bdy6+3l/Xs2i6mr8tHLmV73fnUFvcn0hF7fzJe+eV1r99Lr9kuD5zeBXtzadPLUnN7PpA05u+KR7a6/Gw3GQTKfs72yw/MshvyGqXLXSn8vByPrFuytUfXezXjAaD8YDOiHvf277j1F/OXnjnW7w0htW05FdL9LZwb+v2975YTZ9ASy3oh6DoF26Vl1C8nsy0xoSmlFu6qeafIQEKo2GPqW5w88U3ZHQVz1cy855y2m1Xc9uOt7ZWa3asauVSqdWc67t5tW5bW9JZo3iAGKL0YjoWJpy12PzPUCc+AJoCNxcsEwxnTC+8dhGEpUC+qAuAaMCRkzRs7NC2ZyjSEL28u7Yaew63msY4ndhlO6YHNABb6qffI+UHWePlB8Ak5SAZm492EJNtpCqGK9okcnYKS9QmUKmuJ1rmvVd76JqCZKkMWioVsLCLIZyOk/z0lhi/XVNhEWufeiM8ut2NLHDf9saKJuQaAOhc7kC1Uf44nVxt4kcT9jbTXjrvpmFRN8sVVDJCV4j2f/1MSd6QIohURk9t4bPzhZ3YX7y8c8nrW9AWYf1KAKFC7ITdvt2q1dA8UZj281X5JRfy9likeUN9LyKxZV7S1fIsl1rCDhTzPY2Yn+AWoUX66RnpAB+ELzQ70PM5JwOJZKQqIEr5eIJe8MQhN4bAnVVVqcuJXshVekkrORXulasdh6N+Nu1CPtY2yn1vfosGQ8/OvaFr504Kk+1NkhCZ1rST8jbkbnATLklivwY33X+lYOvgu8riyIXWKQaqGkm4fifkma1uoEwZhmVQdvIFbtMm+OUbyn4H0af3ORkXmx35N/XO5PkI4BB7YSC5P71I+3rK0BnO2y9CXqEsCvfEfY+usYn9WfNTp0OZ7zxDw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17C1CD240A136695E0533E991F0AB700</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdU+o6FP0rTH08U9ICpdARZhBE6wcqoB59cUK6gWibliaF4q+/SYEKiF7ufepkd2fttT+yklOOA7/ktDiHWNCQFdLAZ9zJrA0tiZkTYk65w3AA3BHEGbRub5xS0XDwZotWcDsN7c2slSvlctXWDas+0iuGUdVHYJm6VcUetj2bjHFNunKegMu4wEw0tJJhWrp0NCpDo+yULMcqF8tG7VUrPEHMJbZ0KRramlTKG9pUiMhBaLFYFBflYhhPUMkwTPT39mZAphBgrXm6yigLFDfX/qToAQHfJ0USBugU7ficetwZ0AnDIolhHcv7KZaBjDqSPh6nkxMt3wuey8ZhtmxjFjJKsE8/sarPLYhp6BVa/iSMqZgGPyZhGgpYh5ToxKywEw3tUjsSaIdhzLHOp9hcY/VhDDEwAoXHvtvQTo7rWrZ1GGPGx2Ec8N3lf+MDbA5+GIGn801aa2rHAx6oVPMUiOMy4ieczqGnhjXCBPi6m0COhyrcxzCm6Q3lckBTrtihbXp7y1U1OnQCXPyfBm01ZwXyhP0Emk/o4mKa9mbQ67cfIkFxJfgQbnfqXz80MgLbzpkhb+1quTeU+RCtdvRrd50OpNaHP+ib1+S8deGm7MVCi3mMPLffi7rz2bMXjWujPxSu8Ouw3Ko+fV6mUfrcq05o9frs4yp6fr7sVjp3L+OzC4Rnj3BHLunIwve2a886SY11Ys8emaV76/F5/N5a1hldXtmLpWn69QW+s9ulOHoeefP+i3GG//CXy/Kr3z9/6P6dDiefF+HoqmV99j5fGnk6W/x3bZszP0hG70DEZqnGwO0UurJLWPwuZspCPX2cuTqREh8ugAmtqXYp7XASKXfUc2QPV2vTbtVrZqVutc+6VduunhtW2bDrdbNrtGyrXtuIzIrFHsV2yMZUxVKSuxqb3wmSwOHAPIj1eZhIpePaL4gdLHDBZX15CELGYRhKeR4RvrCDMbaXgpiQLIx5+m7hxAat0AvFHbuLW2MB8a4mV3c0uQ+ERhSUcKu55nKwuZC1mOF5InyzOMdFBomU9liprFOq1CzEaRD5oJiiIPQSH4rRNMoqg/jqW9Ix4Zm1fz7MTtuPee3/25RA+nhUOXCVyxnINsKBy6WySeTnhOvbCW/gW4lH1cGS9RQxJSsmu7++xkTNRz4jMqO39uDN3PDO3Y/e/n0n+oUU2q9HHsib062wm6tbXgJSNpqbbs6wWZwVk/k8yRpYqZRRLOGRqhAySmgAJJHCthyGH8BQjoKOukVy4nvBc/suxURM2UBgAYEcuEK2POLZMACung2uPCnpsW+SnZCydAJSccjW9uWTRzH+9VVEHKL8pPlefhZh7H117ADWVhyZp3w1CMomaqVukOUPc0FCCUul9oXxNvghgEPBd415kXMuQg7UKBHw85+CErWGhgkJEybcjpYZtoU24ymWEThfTt9gMi3PH3f03193Os1GgEjRkv4ZvrqjHXUE2GRLrNdBD+t1zfhNr3fZNb+Zv1u26rQ/481/AA==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17A981495CBF6776E05307991F0A7598</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17A981495CBF6776E05307991F0A7598</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_085914</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17A981495CC06776E05307991F0A7598</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f5f8feae-2fe1-43ec-98ca-c798916c5e2a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00045_FUNC_UVTC_UserName_RequestorUser_any_status_RequesteeUser_any_and_other_than_active_pending_or_blocked_ValidateEmail_Role_RET_CS (Negative)_400_BADREQUEST_P1" searchProperties="true" id="5ecbeec2-bf12-4df5-a815-4fecb95bd63f"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="ec6e1b43-efa1-4b52-859c-629770ea0cf9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="4b9f7ee6-b835-44ca-a623-730ec5c42d03"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="614c4d42-082c-4bee-9d0c-78bc3ab1c2d0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU" id="c48eaefd-3d2b-4ecf-be1b-1913fa9c6646"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus" id="8beb75cf-1865-4843-83b0-7edb38775abb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","deleted");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="68d0afa0-9667-4118-8cd2-3b64ea814fb4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="115e809e-d357-4868-95fc-66ddf0c3d4a3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","USER_STATUS_NOT_VALID");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VynlMGS/gYFyBKsIy5dxACJD1JSXkBpTY8iKZJV9/JQMOkMAw8+Tqdqv79KKjvmYo8E2nwRgknIS0sAx8ypxMW1PShDohYoQ5FAXAHI6dYaN755hF3UHbI0rBbdWUd8s0qtUxrqoYj221bFYs1a5UrlQPVbySBZ6uT8rClLEUXMo4orymmLphqfqVqlsj3XZM0ynbRaNaelMKT5Aw4VuYFHVlA2rJasqM88jRtMViUVyUimEy1UxdN7SX7t0QzyBASv16nVEWKKlv7HHRAwy+j4s4DLRrbc/m2mPOkEwp4mkCm1jesVi6plc1YeMxMr1Q8rPguXQSZmIT0ZASjHzyhWR9usBnoVdo+NMwIXwWHE3C0KVjFZZYxUaZXijaPrQzHe0hTBhS2QwZG18DmEACFEPhceDWlIvzupYdHSWIskmYBGxf/G94gM7BDyPwVLZNawPtfIe/VKp+DdhxKfZTRubQk8MaIQxs003A57sq9BOYkOUdYWJAl0yi03bhHYjrarTIFBj/Pw3aac7ayRPyU6h7/oMBvqEt9emq1DReo9XXA31dfd0/2bUMwK5xpshbuxYPhjIfovWJ+GFw23mM/VmJDR7m5PaFfPaDSdR7roS9m07Mbt3xXbN/aU17hmvddNs9RiurdP6E7IrdKdkLds+D6NlDk/Gys2C0wcfBn6gUXz57q+447vjdcfL2MUuIMaqYLB4NW8E07TxC+aVqN/CkbMX94QKLUKTx3KblR+v1H68/tO3Kp+/pLnuzh9Grb7iX4R/jsZans4N/X7e988N0/AGYb0U5Bm6r0BFdQvw0mUkN8dRJZupEknwYB8qVujwlucNJBd0RzxE9XMtGpWk0m41227IMy2x12rpVKrWrVaOjNxpmtbElmTWKA4jNkE6IjCUpdz02pwHiwGFAPUjUeZgKpmPKCY8txFHBpQNxCULKYBQKejamBM2phz+SKwiWQbwI9QAHsZkohV7I7+l90phwSPY42TD2OHkAmEQEJHHLuWZisBkXtYjRPOW+UZyjIoVUUHsiWdYxy7alMRJEPkikWhB6qQ/FaBZlldHY+muqCLNMO2iPstt2NK/Df9sSCBuPSAMmc7kB0Ub45XEpbRM5nnB5N+Gt+0bqEXmxRD15QvAayf6v7zGR85HPiMjovTl8N7a4c/Ozj/88qZ0ApR3WIw/kzclO2O3TLR4BQRv1bTdjZBTjYjqfp1kDy+WSlgj3mqyQppvaEHAqiG01Cj+BarkX7axXJAd+EDzX70NM+YwOOeIQiIErZOIZa8MQmFwbXHFTlufuJHshRek4LPlvuqYvVh6J+ORWhB0s7YS6Lz6LMPG+O/aLr504Ik+xNXBCp1KSL8jqyFzgULglgvvCZNf5bw5+C76vzIucY+FioMYph+N/CpLUagrCOEwpd1tKptgl2gwnX0XgfBv9cJNxeb7ckX/f7lSSjQAGsRIykvmXb7QjrwCd7pD1JugRvtZP8fU+uvoP9U/NTp0OZ7z+Fw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17C1CCAEE55052DFE0533E991F0AA29A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17C1CCAEE55052DFE0533E991F0AA29A</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17C1CCAEE55152DFE0533E991F0AA29A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17C1CCAEE55152DFE0533E991F0AA29A</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150605_01567</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150605_015612</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150605_015612</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150605_015612</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VynlMGS/gYFyBKsIy5dxACJD1JSXkBpTY8iKZJV9/JQMOkMAw8+Tqdqv79KKjvmYo8E2nwRgknIS0sAx8ypxMW1PShDohYoQ5FAXAHI6dYaN755hF3UHbI0rBbdWUd8s0qtUxrqoYj221bFYs1a5UrlQPVbySBZ6uT8rClLEUXMo4orymmLphqfqVqlsj3XZM0ynbRaNaelMKT5Aw4VuYFHVlA2rJasqM88jRtMViUVyUimEy1UxdN7SX7t0QzyBASv16nVEWKKlv7HHRAwy+j4s4DLRrbc/m2mPOkEwp4mkCm1jesVi6plc1YeMxMr1Q8rPguXQSZmIT0ZASjHzyhWR9usBnoVdo+NMwIXwWHE3C0KVjFZZYxUaZXijaPrQzHe0hTBhS2QwZG18DmEACFEPhceDWlIvzupYdHSWIskmYBGxf/G94gM7BDyPwVLZNawPtfIe/VKp+DdhxKfZTRubQk8MaIQxs003A57sq9BOYkOUdYWJAl0yi03bhHYjrarTIFBj/Pw3aac7ayRPyU6h7/oMBvqEt9emq1DReo9XXA31dfd0/2bUMwK5xpshbuxYPhjIfovWJ+GFw23mM/VmJDR7m5PaFfPaDSdR7roS9m07Mbt3xXbN/aU17hmvddNs9RiurdP6E7IrdKdkLds+D6NlDk/Gys2C0wcfBn6gUXz57q+447vjdcfL2MUuIMaqYLB4NW8E07TxC+aVqN/CkbMX94QKLUKTx3KblR+v1H68/tO3Kp+/pLnuzh9Grb7iX4R/jsZans4N/X7e988N0/AGYb0U5Bm6r0BFdQvw0mUkN8dRJZupEknwYB8qVujwlucNJBd0RzxE9XMtGpWk0m41227IMy2x12rpVKrWrVaOjNxpmtbElmTWKA4jNkE6IjCUpdz02pwHiwGFAPUjUeZgKpmPKCY8txFHBpQNxCULKYBQKejamBM2phz+SKwiWQbwI9QAHsZkohV7I7+l90phwSPY42TD2OHkAmEQEJHHLuWZisBkXtYjRPOW+UZyjIoVUUHsiWdYxy7alMRJEPkikWhB6qQ/FaBZlldHY+muqCLNMO2iPstt2NK/Df9sSCBuPSAMmc7kB0Ub45XEpbRM5nnB5N+Gt+0bqEXmxRD15QvAayf6v7zGR85HPiMjovTl8N7a4c/Ozj/88qZ0ApR3WIw/kzclO2O3TLR4BQRv1bTdjZBTjYjqfp1kDy+WSlgj3mqyQppvaEHAqiG01Cj+BarkX7axXJAd+EDzX70NM+YwOOeIQiIErZOIZa8MQmFwbXHFTlufuJHshRek4LPlvuqYvVh6J+ORWhB0s7YS6Lz6LMPG+O/aLr504Ik+xNXBCp1KSL8jqyFzgULglgvvCZNf5bw5+C76vzIucY+FioMYph+N/CpLUagrCOEwpd1tKptgl2gwnX0XgfBv9cJNxeb7ckX/f7lSSjQAGsRIykvmXb7QjrwCd7pD1JugRvtZP8fU+uvoP9U/NTp0OZ7z+Fw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17C1CCAEE55052DFE0533E991F0AA29A</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbc6JKEP4rFvu4hVwUESpaRTRu2DU3MdkkL6nJ0OgYGAwzoObXnxlUouZyPOeJ6qan++vLfNMnDCWx6XqMQcZJSmvLJKbMLbUdJc+omyJGmEtRAszl2A28i6Fr1nUXbY8oNb/fUZ4ss9WKoGmrVsNy1CZqOypqGpEamSZEdohAd7AwZSwHnzKOKO8opm5Yqt5S9eZYb7hmyzWa9bZtPSq1O8iY8C1M6rqyAbVkHWXK+dzVtMViUV806mk20UxdN7T7i2GAp5AgpXuyzqgMlHU39rgeAoY4xnWcJtqJtmdzEjI3IBOKeJ7BJlb4VSxd0x1N2ISMTH4o1VkIfRqlpdhDNKUEo5i8IVmfC+DTNKx58STNCJ8mXyZh6NKxCkusYqNJfyjaPrQjHe0hzBhS2RQZG18jiCADiqF2O/I7yo/julYeHWeIsijNErYv/jc8QAuI0zmEKtumtYF2vMNPKtU9Aez6FMc5IwVcymGdIwxs003Ax7uqXWcQkeWQMDGgSybRabvwDsR1NfpkAoz/nwbtNGft5A7FOXR7/XZw/npBWGvUC88XebG6vspu/cGD53dKALvGpaJq7Vo8GMpqiNYnMB3+dejfRFuQx2yRoFbw+3Q4XHoBBduG3PwVpA/3+PJnH12zaPZ6aefD0eP529msZxg3l6cO+3WDkiQa9F5+6RGgbOCdocfB/W34MPZH7H5xR/pmUlC6fPnzZt2cDpr+n7E9nUE0Oh+cpyuuG7fLjIbB7+j5ZdX46YE+OG2MikuvObia/R7caC1mXIfxc3GFO1U6O/j3dds7H+TPM8B8K8ox8Pu1gegS4t+TmdSQUI1KU3cuyYdxoFzpylOSO9xc0B0JXdHDtWzYntM2mo7V172WbbfOdKuh245jDHTPtpz2lmTWKA4g9lIaERlLUu56bL4HiBOXAQ0hU4s0F0zHlG889hFHNZ+OxCVIKYNxKujZ4CS3F7ModqykMCxOVrH+RhZoliu1y5Rf0avMizhk+6Tc2iPlEWAyJyCZWw42E5PNuCjGKypyHhv1AtUp5ILbM0mzrtlsWxojyTwGCVVL0jCPoT6fzsvSaGz9NVWEWakdnY3L6/ZlYof/tjUQNiGRBkzmcgqij/DJ66JvE/k6YWc34a17Lw+JvFmioDwjeI1k/9f7nMgBqYZEZPTUC56MLe7K/OjjH09q34DSDutRBQoLshN2+3aLV0DwRnfbzVdk1F/reVHkZQObzYaWCfearJCmm1oAOBfMthqnL0C1yot21DNSAT8IXun3IeZ8SgOOOCRi4GqleMTeEACTe4Mvrsry2KVkL6QoHYcl/0zXi8XOIxF/uxZhF0s7ob4Wn0Wahe8d+8TXThyRp1gbOKETKcknZPXFXOBUuCWC/NJs1/lnDj4Lvq+silxh4WKgnnMOX/+pSVbrKAjjNKfc7yulYpdpS5x8NQf33eiDm5LMq+2O/Pt6p5JyBDCInZCR0r98pF15Behkh603QQ8J2+63TL1tGi3DMXcJe2CdelVR9tB1P6g/anbqdDjj3X8A</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17A981495D0A6776E05307991F0A7598</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17A981495D0A6776E05307991F0A7598</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_085935</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17A981495D0B6776E05307991F0A7598</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f5f8feae-2fe1-43ec-98ca-c798916c5e2a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9425e0d2-3955-45c0-bfbd-0ab1072867c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00046_FUNC_UVTC_UserName_RequestorUser_any_status_RequesteeUser_any_and_active_UnlockMe_Role_RET_CS_200_OK_P1" searchProperties="true" id="6069bea8-823d-4f61-9135-7e6add9f9722"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="2915ab21-89c6-4781-aa18-7626ae055203"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="0a6c0e67-65a6-4920-baec-f4cef5cc5533"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="2642f349-1ada-4ae1-bb69-fd0bbeed173c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU" id="18b3945c-bd55-4851-8467-278cafec526c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="9cd46878-4fb4-4730-88d8-4bd61e563411"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="d867702f-bc31-4906-bd8f-f74d14fa524f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZrc7I6EP4rDv3oIBfBKlOdsdpWay8etPatXzoxRI2FgElQ669/E1QqVj2e84nZZbP77CVP9oaBwDedOmOIchyS3CrwCXMSbVWJKXFCwDBzCAgQczh0evXnJ8cs6A7YHVFy7WZV+RzrleuiZ9oqKJWRapUrpgqMMVCvS3YZ2JZnjDxbmDIWozZhHBBeVUzdsFW9pOp2Xy87punY5YJdKQ6V3ABRJnwLk4KubEGtWFWZch45mrZcLgvLYiGkE83UdUP78/zUg1MUAKV2s8koCURrW3tY8BBEvg8LMAy0Gy1jc+Mxp4cnBPCYom0s71QsXdMrmrDxGJ5cKelZ5LXJOEzEBiAhwRD4eA1kfZ4Rn4Zeru5PQor5NDiZhKFLxypaQRUaFrlStCy0Cx1lEFIGVDYFxtaXi8aIIgJR7s1tV5Wry7qWHO1TQNg4pAHLiv8NDyIL5IcR8lS2S2sL7XKHRypVu0HQaRPoxwwv0Isc1ghAxLbdRPByV7kuRWO8esJMDOiKSXTaPrwDcVONJp4gxv9Pg/aas3EyAH6ManGpPXuYPyy8qDzk68FqsZ5Py71Wq2PdVRMA+8aJIm3tRjwYynSINifmdhffv3zYw2W38dGxvpbd1XxNr/N5/XpSCdqv+T/+h3t7m+83l7T/PJit68AdjvIxthduxDqmm4ePuFP85+mOGqPHxyZ563ZYd9L8emjeP96OunN/Mn3vzNaw2HPhBwrbA2M0aU3HbuX7gbyPvYdO/NYir/VZyaTRu2HBIJwNh+5a63K9pbFl68XsDII+fJzCaprOHv6sbnfne/FohiDfiXIM2s3cvegS4OfJTGqwp44TUyeS5MM4IlypyVOSO5xY0B32HNHDjWxcN4xG07T0RtMolSr2nW4Xi3eVinGv12+vdX1HMhsUBxAbIRljGUtS7mZszgOEgcMQ8RBVF2EsmI4pZzw2AQe5NnHFJQgJQ/1Q0LNhs++pDSowLtplw7ZJySJLSr+o4O+XkL+SV1ofc0QzpGwYGVJ2EcQRRpK55WAzMdmMi2LMwSLmvlFYgAJBseB2KmnWMa2yrTEcRD6SULUg9GIfFaJplJRGY5uvYBzIEq1710+u28nEDv/taiBsPCwNmMzlFok+oiOvi7VL5HTC1n7CO/f12MPyZomCcorhBkn218+cyAFJh0Rk9NnofRo73Kn5xcd/n9TOgNIO65EG8hZ4L+zu7RavgOCN2q6bc2AU5oV4sYiTBlpWUaPCvSYrpOmm1kMwFsz23Q+/ENFSL9pFz0gK/CB4qs9CjPmU9DjgKBADl0vEC/aGHmJyb2iLq7K6dCnJhBSl42jFj+kavth5JOKzaxF0oLQT6q74LEPq/XTsiK+9OCJPsTZwTCZSkk/I94m5gKFwiwX5hXTf+TEHx4JnlWmRUyxcDNQo5uj0n5xktaoCIAxjwttNJVHsM22Ck39HyPkx+uUmIfN0u8P/vt6pOBkBiMROyHDiXz7SjrwCZLLH1tugJwhbP0fYWXS1X+rfmr06Hc547S8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17C1CD240CD06695E0533E991F0AB700</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17C1CD240CD06695E0533E991F0AB700</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17C1CD240CD16695E0533E991F0AB700</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17C1CD240CD16695E0533E991F0AB700</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150605_015617</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150605_015622</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150605_015622</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150605_015622</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZrc7I6EP4rDv3oIBfBKlOdsdpWay8etPatXzoxRI2FgElQ669/E1QqVj2e84nZZbP77CVP9oaBwDedOmOIchyS3CrwCXMSbVWJKXFCwDBzCAgQczh0evXnJ8cs6A7YHVFy7WZV+RzrleuiZ9oqKJWRapUrpgqMMVCvS3YZ2JZnjDxbmDIWozZhHBBeVUzdsFW9pOp2Xy87punY5YJdKQ6V3ABRJnwLk4KubEGtWFWZch45mrZcLgvLYiGkE83UdUP78/zUg1MUAKV2s8koCURrW3tY8BBEvg8LMAy0Gy1jc+Mxp4cnBPCYom0s71QsXdMrmrDxGJ5cKelZ5LXJOEzEBiAhwRD4eA1kfZ4Rn4Zeru5PQor5NDiZhKFLxypaQRUaFrlStCy0Cx1lEFIGVDYFxtaXi8aIIgJR7s1tV5Wry7qWHO1TQNg4pAHLiv8NDyIL5IcR8lS2S2sL7XKHRypVu0HQaRPoxwwv0Isc1ghAxLbdRPByV7kuRWO8esJMDOiKSXTaPrwDcVONJp4gxv9Pg/aas3EyAH6ManGpPXuYPyy8qDzk68FqsZ5Py71Wq2PdVRMA+8aJIm3tRjwYynSINifmdhffv3zYw2W38dGxvpbd1XxNr/N5/XpSCdqv+T/+h3t7m+83l7T/PJit68AdjvIxthduxDqmm4ePuFP85+mOGqPHxyZ563ZYd9L8emjeP96OunN/Mn3vzNaw2HPhBwrbA2M0aU3HbuX7gbyPvYdO/NYir/VZyaTRu2HBIJwNh+5a63K9pbFl68XsDII+fJzCaprOHv6sbnfne/FohiDfiXIM2s3cvegS4OfJTGqwp44TUyeS5MM4IlypyVOSO5xY0B32HNHDjWxcN4xG07T0RtMolSr2nW4Xi3eVinGv12+vdX1HMhsUBxAbIRljGUtS7mZszgOEgcMQ8RBVF2EsmI4pZzw2AQe5NnHFJQgJQ/1Q0LNhs++pDSowLtplw7ZJySJLSr+o4O+XkL+SV1ofc0QzpGwYGVJ2EcQRRpK55WAzMdmMi2LMwSLmvlFYgAJBseB2KmnWMa2yrTEcRD6SULUg9GIfFaJplJRGY5uvYBzIEq1710+u28nEDv/taiBsPCwNmMzlFok+oiOvi7VL5HTC1n7CO/f12MPyZomCcorhBkn218+cyAFJh0Rk9NnofRo73Kn5xcd/n9TOgNIO65EG8hZ4L+zu7RavgOCN2q6bc2AU5oV4sYiTBlpWUaPCvSYrpOmm1kMwFsz23Q+/ENFSL9pFz0gK/CB4qs9CjPmU9DjgKBADl0vEC/aGHmJyb2iLq7K6dCnJhBSl42jFj+kavth5JOKzaxF0oLQT6q74LEPq/XTsiK+9OCJPsTZwTCZSkk/I94m5gKFwiwX5hXTf+TEHx4JnlWmRUyxcDNQo5uj0n5xktaoCIAxjwttNJVHsM22Ck39HyPkx+uUmIfN0u8P/vt6pOBkBiMROyHDiXz7SjrwCZLLH1tugJwhbP0fYWXS1X+rfmr06Hc547S8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17C1CD240CD06695E0533E991F0AB700</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZrc7I6EP4rDu/HDhIQRJjqjK22ZVqtrdZzpl86MayYFoIlwUt//UlQqdrL8ZxPzC6b3WcvebLnHCex5bc5h0zQlFVWScy4X2ibWp4xP8Wccp/hBLgviD9s9+58q4p8vDuiVYJOU3sxXbuBGpOJPrWdULc9B+kNFzm6NwlJbWI6aDLB0pTzHALGBWaiqVnIdHRU15E9QjXfqvu2WbWsxrNWGUPGpW9pUkXaFtSKN7WZEHPfMJbLZXVZq6ZZZFgImcbfvbshmUGCtdb5JqMiUNba2pNqCATimFRJmhjnxoHNecj9IY0YFnkG21jhT7GQgTxD2oScRn+08iyEAZumhXiJWcoowTH9wKo+PRCzNKy04yjNqJglPyZhIuVYhxXRiWmzP5pxCO1ERwcIM451PsPm1tcjTCEDRqDy9Bg0tT+nda04Osow49M0S/ih+N/wAFtAnM4h1PkurS200x1+U6nWORA/YCTOOV1AXw3rHBPg224COd1VZZDBlK7uKJcDuuIKnbEP70jcVKNDI+Di/zRorzkbJ2Mc59AicH89zMwofV683zB7jW7OJrS/6NmMNwsA+8aFomztRjwaynKINic+ulBbsfUlEesZbTvwbDdG85g9M8I91xicsYfHi1F3TfqD6ceHcDJ0+9G7Hdy+r9+es+vQcd9e35YPN7XLoBug19VqjKDbS18j15vH8+nVXTCxJ8uImw/WU/DQeM76JB5Ho1FPdPFfyfVV1B7b44dZ/ho5T+Ri3EV32YA2Lvor4/4tF7PB4OHqFtBiebb+uOk2y3T28B/qdnd+mE9egYidqMYg6FSuZJew+J3MlIaG+rQw9eeKfLgAJrSWOqW4w88l3dHQlz3cyKbb9txO3UKNi1rd9KwucmrI9TzzCrWvnIv2jmQ2KI4gXqZsSlUsRbmbsfkdIEl8DiyETF+kuWQ6rv3isYMFrgTsUV6ClHEYpZKeE3gjEzs0zdnrqu543ntUc5cuj7RKPxX37D5rTwVkh5RcP6DkRyB0TkHxthprLueaC1mKd7zIRWxWF7jKIJfMnimS9S274RicJvMYFFAjScM8hup8Ni8KY/DN19Ix4YX2sTsqLtuPaR3/21VA2oRUGXCVywXILsI3b0ttl8jPCXv7Ce/ct/OQqnslyykySjZIDn99Tokaj3JEZEYvl8MXc4e7ND/5+NeTxi+gjON6lIHCBd0Lu3u55RsgWaO16+Y7Nqvv1XyxyIsG2nbNyKR7Q1XIQJYxBJJLXluP0jdgRunFOOkRKYEfBS/1hxAlDbChwAISOXCVQjxhaxgCV1tDIC/K6tSV5CCkLJ2AlfhOdxnLjUch/nUpIj5RdlI9kJ9lmoWfHfvG114cmadcGgRlkZLUA7L+YS5IKt1SSX1ptu/8OwffBT9UlkUusQg5UJNcwM9/KorTmhomJM2ZCDpaodjn2QKnWM/B/zT64qag8nK3o/++3Om0GAECciPktPCvnmhfXQEW7XH1NugxXTdMOQMdy6u7bn2frl3Ha5RFOUDX+qL+qtmr0/GMt/4B</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17A97D6208B36192E05307991F0AF5BA</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17A97D6208B36192E05307991F0AF5BA</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_09002</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17A97D6208B46192E05307991F0AF5BA</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f5f8feae-2fe1-43ec-98ca-c798916c5e2a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00049_FUNC_UVTC_UserName_RequestorUser_any_status_RequesteeUser_any_and_other_than_active_pending_or_blocked_UnlockMe_Role_RET_CS (Negative)_400_BADREQUEST_P1" searchProperties="true" id="287d254d-51a1-4c60-bdb6-9b5729d6e143"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="5344cadb-5370-4744-92b2-7245fd820fc0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="a400e13f-e9a0-42c9-b32b-4ebe5926e383"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="402f8fed-14a2-44f7-ab6d-3a862dc02832"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU" id="44a1568f-a294-423a-909f-d7167ab09de4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus" id="1589de88-7f67-4200-b58d-8def2bc4ec6d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","deleted");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="317a3996-6b6b-4dc2-aae6-2882b16e2679"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="aa5bdabc-037b-4710-bfb1-10d861c27509"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","USER_STATUS_NOT_VALID");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc6o6FP4rDn3sIAFBlKnOWKktrdZute1uXzoYguRsSJQEL/31O8FLxVaP5zwxWax861uXfMkV85PYcFqMoZRjSkrLJCbMya0NJUuJQ32GmUP8BDGHQ2fY6nUdowwcf7tFKXluQ/mwxjVkheNADYNqqJrABuoYwLrqQwTsQLd1GxjClbEMeYRxn/CGYgDdUkFVBdYI1Byj4oBauVa335XSC0qZwBYuZaBsSC1ZQ4k4nzqatlgsyotKmaYTzQBA1373ukMYocRXmlfrjPJAaXPjD8sBgiiOYRnSRLvSCj5XAXOGeEJ8nqVoEys4FgtooK4Jn4DhyYWy24sCj4Q0X7Z9QgmGfow/fVmfHuIRDUqteEJTzKPkaBI6kMAqWkIV6ia5ULQitTOBCgxT5qss8vUN1gCFKEUEotLzwGsoF+d1Ld86Sn3CQpomrLj8b3wQmaOYTlGgsm1aG2rnA/5QqeYVgo5HYJwxPEePclinIgW26SaC50OVnlIU4mUXMzGgSybZafv0Dpbrarh4ghj/Pw3aa84a5MWPM9SMkuvVvJL9ob/IDQVxaM3fe53Pegu8Lho5gX3n3LBr7Xp5MJS7IVrvSLLXelxLn29mn73VZTzt1LLq6pnW0KDXXvHQZZ+T2WDo2t3W6yuz3qz7+vtrDfRbA716W7fp7M0cP1W9oOJ2Zuao3+vdYwqje8sGlejufeRePvRWb8D2Hp+6nNzG8Pnh2fWSSifptV5sgUy6Ib7ut3l/8HIfvX8+eA9Pg1+91aSz4uTOuo3IIGlftl3vDvzepHvAv2jbnvlhNv4HQb5dyjHw3FJHdMnnp8VMWrA4BLmrM5XiwzgiXGnKXVI7nEzIHQ4c0cP1Wrfbets1THBjWdVq3boBVqVyU6/rHdC6tgHYisyaxQHFNiUhlrGk5K7H5jRBmDgMkQCl6pxmQumYcgLR9blf8shAHAJKGBpRIc+6CcwwnWc4AGOo28ZiYqyiRUZqplJ6pLxP+mkr5CgtiLKuF0R5gCCeYiSVWw42E5PNuCjGzJ9nPNbLc79MUCa0PZUy6xhmzdIYTqYxklS1hAZZjMrTaJqXRmPrryHEhuXWwc0oP25HEzv8t62B8AmwdGAyl2sk+oi+3S6GY20TOZ6wuZ/wFr6VBVieLFFQnmK4ZlL89TUnckB2QyIy+mgPP/Qt75372du/79ROkNIO67ELFMzxXtjt3S1uAaEbzW03Z75enpWz+TzLG2iaFS0V8JqskAYMbYhgJpRtNaJ/ENF2KNpZ18iO+EHwnb1IMeMRGXKfo0QMXClfnvFuGCIm3w2eOCrLcx8lhZCidBwt+U+2dizePJLxyWcRdKD0E+Yn8VnQNPjq2A9Ye3FEnuLZwDGZyJW8QlZH5gJSAYuF+NF0H/wngJ+CF427Iu+4cDFQ44yj439KUtUaig8hzQj3XCU37CttzpOvpsj5cvoGk4v57nWH//15p+J8BCASb0KGc3x5STvyCJDJnlpvgh4RbPOUYBfZNb+Zv1v26nQ4482/</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17C1CD240E546695E0533E991F0AB700</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17C1CD240E546695E0533E991F0AB700</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17C1CD240E556695E0533E991F0AB700</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17C1CD240E556695E0533E991F0AB700</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150605_015628</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150605_015633</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150605_015633</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150605_015633</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc6o6FP4rDn3sIAFBlKnOWKktrdZute1uXzoYguRsSJQEL/31O8FLxVaP5zwxWax861uXfMkV85PYcFqMoZRjSkrLJCbMya0NJUuJQ32GmUP8BDGHQ2fY6nUdowwcf7tFKXluQ/mwxjVkheNADYNqqJrABuoYwLrqQwTsQLd1GxjClbEMeYRxn/CGYgDdUkFVBdYI1Byj4oBauVa335XSC0qZwBYuZaBsSC1ZQ4k4nzqatlgsyotKmaYTzQBA1373ukMYocRXmlfrjPJAaXPjD8sBgiiOYRnSRLvSCj5XAXOGeEJ8nqVoEys4FgtooK4Jn4DhyYWy24sCj4Q0X7Z9QgmGfow/fVmfHuIRDUqteEJTzKPkaBI6kMAqWkIV6ia5ULQitTOBCgxT5qss8vUN1gCFKEUEotLzwGsoF+d1Ld86Sn3CQpomrLj8b3wQmaOYTlGgsm1aG2rnA/5QqeYVgo5HYJwxPEePclinIgW26SaC50OVnlIU4mUXMzGgSybZafv0Dpbrarh4ghj/Pw3aa84a5MWPM9SMkuvVvJL9ob/IDQVxaM3fe53Pegu8Lho5gX3n3LBr7Xp5MJS7IVrvSLLXelxLn29mn73VZTzt1LLq6pnW0KDXXvHQZZ+T2WDo2t3W6yuz3qz7+vtrDfRbA716W7fp7M0cP1W9oOJ2Zuao3+vdYwqje8sGlejufeRePvRWb8D2Hp+6nNzG8Pnh2fWSSifptV5sgUy6Ib7ut3l/8HIfvX8+eA9Pg1+91aSz4uTOuo3IIGlftl3vDvzepHvAv2jbnvlhNv4HQb5dyjHw3FJHdMnnp8VMWrA4BLmrM5XiwzgiXGnKXVI7nEzIHQ4c0cP1Wrfbets1THBjWdVq3boBVqVyU6/rHdC6tgHYisyaxQHFNiUhlrGk5K7H5jRBmDgMkQCl6pxmQumYcgLR9blf8shAHAJKGBpRIc+6CcwwnWc4AGOo28ZiYqyiRUZqplJ6pLxP+mkr5CgtiLKuF0R5gCCeYiSVWw42E5PNuCjGzJ9nPNbLc79MUCa0PZUy6xhmzdIYTqYxklS1hAZZjMrTaJqXRmPrryHEhuXWwc0oP25HEzv8t62B8AmwdGAyl2sk+oi+3S6GY20TOZ6wuZ/wFr6VBVieLFFQnmK4ZlL89TUnckB2QyIy+mgPP/Qt75372du/79ROkNIO67ELFMzxXtjt3S1uAaEbzW03Z75enpWz+TzLG2iaFS0V8JqskAYMbYhgJpRtNaJ/ENF2KNpZ18iO+EHwnb1IMeMRGXKfo0QMXClfnvFuGCIm3w2eOCrLcx8lhZCidBwt+U+2dizePJLxyWcRdKD0E+Yn8VnQNPjq2A9Ye3FEnuLZwDGZyJW8QlZH5gJSAYuF+NF0H/wngJ+CF427Iu+4cDFQ44yj439KUtUaig8hzQj3XCU37CttzpOvpsj5cvoGk4v57nWH//15p+J8BCASb0KGc3x5STvyCJDJnlpvgh4RbPOUYBfZNb+Zv1v26nQ4482/</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17C1CD240E546695E0533E991F0AB700</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VynlMGXkBvFSgikAyl0DIAllfUkJuQBMjG0tmydePZMABEhhmnqDbre7Ti476guNJaPl1ziERNGKFxSRk3M+0VS1NmB9hTrnP8AS4L4jfq992fKto+HhzRCu0mlXtwwggcAfBUB94A1cvGZ7859gV3XGGZRcCxy7ZgTTlPIUW4wIzUdUswyzrRkU3Sn3D9i3HN6yiazjvWuEZEi59S5Oioa1BLXhVGwsR+wjN5/Pi3C5GyQhZhmGi19tOj4xhgrXaxSqjLFBSW9uTYgAEwpAUSTRBF2jH5iLgfo+OGBZpAutYwaFYBjI8JG0CTkdnWn4WghYbRpnYwCxilOCQfmFVn1sQ4ygo1MNRlFAxnhxMwjSUYx0WRCdmiZ1paBfaiY52ECYc63yMzbWvRxhCAoxA4emxVdXOTutadrSfYMaHUTLhu+J/wwNsBmEUQ6DzTVpraKc7/KVStQsgfouRMOV0Bl01rDEmwNfdBHK6q8J9AkO66FAuB3TBFTq0DW9PXFWjSUfAxf9p0FZzVk6ecZhCrW67bv+z/RLexGgw/OM12hY6vzu3uvOnagZg2zhT5K1diXtDmQ/R6sTb29Mn6S7b2LTsKbZ6l/VpfDv9uhq0UW9641yKc/HywN3J+0N59P5O3voDPgju0NP0zY6eg+GsPWrejy4vPe+6UelZj3+5M/fqa953y/Obzwe721nalNmLRTv+euot2p3R+dSFF5MM+D1n/M/ysu9clcrtTrqoDD+7c/FeRvTa88Q4ttrQbUevy0ZCSL15//waVfN0tvDv6jZ3vpcO/gYiNqIag1azcC27hMVxMlMaGujDzNSPFflwAUxoNXVKcYefSrqjgS97uJJNp+65ZskrN5uliuNUroyybTieZ14bdafsuRuSWaHYg9iI2JCqWIpyV2NzHCCZ+BxYAIk+i1LJdFw74rGJBS602KO8BBHj0I8kPYdewoJ0uTQ/51OTmJCYbkWY1iDRCt1I3LG7pD4UkOxycmWHkx+B0JiCIm4111wONheyFlM8S0VoFme4yCCV1J4olvWtkltGnE7iEBRSNImCNIRiPI6zyiC++rV0THimfbzqZ7ftYF773zYlkDYBVQZc5XIJso3w43Gp+OVNIocT9rYT3rivpwFVF0vWUySUrJDsfvoeEzUf+YzIjD4avQ9zgzs3P/n4z5PoCCi0X488UDCjW2E3T7d8BCRt1DbdnGKzOC2ms1maNbBUslEi3SNVIWRYqAcklcS27EefwFDuBZ30iuTA94Ln+l2IqRiznsACJnLgCpl4wtrQA67Whpa8KYtTd5KdkLJ0AhbiN10jlCuPQnx0KyI+UXZSfS9/5lHynfhvvrbiyDzl1iAoGylJvSDLA3NBIumWSu6Lkm3nvzn4LfiuMi9yjkXIgRqkAg5/KShSq2qYkChlotXUMsU20WY4xTIG/9voh5uMy/Pljv77dqfTbAQIyJWQ08y/eqN9dQXYaIus10F/52uvfIyvd9HVfqh/arbqtD/jtX8A</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17A981495DD46776E05307991F0A7598</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17A981495DD46776E05307991F0A7598</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_090023</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17A981495DD56776E05307991F0A7598</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f5f8feae-2fe1-43ec-98ca-c798916c5e2a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9425e0d2-3955-45c0-bfbd-0ab1072867c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00050_FUNC_UVTC_UserName_RequestorUser_active_RequesteeUser_active_with_userlinkconsent_exists_ResetPassword_Role_Portal_200_OK_P2" searchProperties="true" id="c3efc87f-f459-4569-b40b-66f7fee6105d"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="2483e3d1-f81e-4624-9851-ba0ad263f5e0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportal"));

tP.setPropertyValue("audience","");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="fe9c182b-d501-46b3-ab2f-fca0283a018d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="966e9c79-ffeb-41c5-9e36-887e815eafd4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU" id="51b4bf58-9f2a-4b12-9e8a-40d032d5c091"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call PolicyCreateULC_API" id="99dade45-d2c1-4b74-b1dc-9eb19f6e0ea2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateULC_API");

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="3f60d2d4-fe5b-4dea-a75a-baab1d5fa7ff"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvO4ZXzBXOwKVBEuu84kIQO5zsuWkGVQYktGksHw9SsZcDCBLLtPLrVb3ae7j450xUEc2V6Xc8QEpqSSxRHhXm5taykjHgUcc4+AGHFPQG/Svbv17Krpgf0WreL329rf1tSBzVoj0INmq6U7TsPUp/Ug1J1maFmoCYIGcKUr5ynyCReAiLZmm1ZdNxu6WX80W55d8yy36pj2b63yjBiXsaVL1dR2oDLe1uZCJJ5hrFar6qpWpWxm2KZpGa93txM4RzHQOlfbivJErLPzh9UAQRRFsAppbFwZJZ+rgHsTPCNApAztcgXncpmG6RrSJ+B49kMr9qLAJyHNlz1AKMEQRHgDVH/ukJjToNKNZpRhMY/PFmGZKrCOMqhDyyE/NKMM7cJAJYSMA53PgbWLNUYhYohAVHka+23tx2VTy7c+MkB4SFnMy8v/hgeRJYpoggKd78vaQbs84IlOda4Q9HwCo5TjJbpXZE0ARHw3TQQvD1V5YCjE2S3mkqAZV+iMQ3hHy203+niGuPg/AzoYzjbIM4hS1Knjvyz6hh9GL7MX7lKMIZ3Tm2gxXXTbOYBD59xQjHa7PCJlQaLtDmyFdsh6Gzd5XzegZMAf/tpc1AR0wvkKbgbv/DlujG+c2pP/K3vtE94a/rxZ8Plrdpe+tmrv4GE1WzfAEgyN6TrJfk0bYza9njliGNiub0K7Nx7TYWMcsFp0O3CIGIUu/Pjpj9Yv92/mzZs94bPB7zkSA//Z/HNw42yGTTcb1YxJ4L5cwwi+NqPhsw3c+VO7KOcAf9m2P/OTdPqOoNgvFQ38fmUopwTE92KmLDjQw9zVS5T4cIGI0Dpql9IOL5VyhwNPznC7tpo9q399bfUds9lt2Y2BWa/V+q5rDc1urWu6e5HZojiC2KMkxCqXktwtbb4HCGOPIxIgpi9pKpWOa99E7AMBKj4Zy0NACUePVMrzB0oT0PyIw8zeNFkSODO2sbM61yr3VIzIiHVDgVhJki2rJMljBHGCkdJtRWsuec2FbMUCLFMRWdUlqBKUSmVnSmQ922nVDY7jJEIKqBHTII1QNZkneWMMvv3aOoA8t2IOE8oEiPLzYJyt7vjfvhHSJ8DKgauSrpEcJjpxxZj7er7U3Th5Fe3Dd9MAq+MluyoYhlsk5V+fZFEsKZjyWdgeebHh2FAKbhzXVeQLlhgWrC/ubinpUgQ6++EsgFVdVNPlMs3n4Tg1g8nwhuqIYdrGBMFUytT6kX4gYhRRjIvuhAL4UfLCXoaYijmZCCBQLPlTyZcXPAImiKtHgC95n136wiillK0TKBOnbL1IPmAU4m/fONCDyk+aH+RnRVnwObETsQ7yyDrlG0BgMlMrdR+sz9ADUhkWSyWj7DD4qQCnkpeNRZMLLEISapoKdP5PRUlUWwMQ0pQIv6/lhkPZzHGKdYK8T6cvYXJlLp5q+N/fajrOKQCRfOBxnMdXN66njgCZHUjvLukZ9W18p75ldJ0v5q+Wgz4dc7zzDw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17C1DBB1D406A826E0533D991F0A3A09</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17C1DBB1D406A826E0533D991F0A3A09</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17C1DBB1D407A826E0533D991F0A3A09</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17C1DBB1D407A826E0533D991F0A3A09</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150605_015638</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150605_015643</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150605_015643</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150605_015643</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvO4ZXzBXOwKVBEuu84kIQO5zsuWkGVQYktGksHw9SsZcDCBLLtPLrVb3ae7j450xUEc2V6Xc8QEpqSSxRHhXm5taykjHgUcc4+AGHFPQG/Svbv17Krpgf0WreL329rf1tSBzVoj0INmq6U7TsPUp/Ug1J1maFmoCYIGcKUr5ynyCReAiLZmm1ZdNxu6WX80W55d8yy36pj2b63yjBiXsaVL1dR2oDLe1uZCJJ5hrFar6qpWpWxm2KZpGa93txM4RzHQOlfbivJErLPzh9UAQRRFsAppbFwZJZ+rgHsTPCNApAztcgXncpmG6RrSJ+B49kMr9qLAJyHNlz1AKMEQRHgDVH/ukJjToNKNZpRhMY/PFmGZKrCOMqhDyyE/NKMM7cJAJYSMA53PgbWLNUYhYohAVHka+23tx2VTy7c+MkB4SFnMy8v/hgeRJYpoggKd78vaQbs84IlOda4Q9HwCo5TjJbpXZE0ARHw3TQQvD1V5YCjE2S3mkqAZV+iMQ3hHy203+niGuPg/AzoYzjbIM4hS1Knjvyz6hh9GL7MX7lKMIZ3Tm2gxXXTbOYBD59xQjHa7PCJlQaLtDmyFdsh6Gzd5XzegZMAf/tpc1AR0wvkKbgbv/DlujG+c2pP/K3vtE94a/rxZ8Plrdpe+tmrv4GE1WzfAEgyN6TrJfk0bYza9njliGNiub0K7Nx7TYWMcsFp0O3CIGIUu/Pjpj9Yv92/mzZs94bPB7zkSA//Z/HNw42yGTTcb1YxJ4L5cwwi+NqPhsw3c+VO7KOcAf9m2P/OTdPqOoNgvFQ38fmUopwTE92KmLDjQw9zVS5T4cIGI0Dpql9IOL5VyhwNPznC7tpo9q399bfUds9lt2Y2BWa/V+q5rDc1urWu6e5HZojiC2KMkxCqXktwtbb4HCGOPIxIgpi9pKpWOa99E7AMBKj4Zy0NACUePVMrzB0oT0PyIw8zeNFkSODO2sbM61yr3VIzIiHVDgVhJki2rJMljBHGCkdJtRWsuec2FbMUCLFMRWdUlqBKUSmVnSmQ922nVDY7jJEIKqBHTII1QNZkneWMMvv3aOoA8t2IOE8oEiPLzYJyt7vjfvhHSJ8DKgauSrpEcJjpxxZj7er7U3Th5Fe3Dd9MAq+MluyoYhlsk5V+fZFEsKZjyWdgeebHh2FAKbhzXVeQLlhgWrC/ubinpUgQ6++EsgFVdVNPlMs3n4Tg1g8nwhuqIYdrGBMFUytT6kX4gYhRRjIvuhAL4UfLCXoaYijmZCCBQLPlTyZcXPAImiKtHgC95n136wiillK0TKBOnbL1IPmAU4m/fONCDyk+aH+RnRVnwObETsQ7yyDrlG0BgMlMrdR+sz9ADUhkWSyWj7DD4qQCnkpeNRZMLLEISapoKdP5PRUlUWwMQ0pQIv6/lhkPZzHGKdYK8T6cvYXJlLp5q+N/fajrOKQCRfOBxnMdXN66njgCZHUjvLukZ9W18p75ldJ0v5q+Wgz4dc7zzDw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17C1DBB1D406A826E0533D991F0A3A09</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMr4ABlyBKgdIlhlIJhACk5ctRW5jJUZ2JJlLvn4lAw4mIcvuk0vtVvfp7qMjXXK0iGzX4xyYIDEtrRcR5W5mbWkpo26MOOEuRQvgrsDu2BsOXLtsumi/RSv1uy3tb6duOgE06rrjNyy9ajd8/bmOkY4BVZzGc810Gr505TyFPuUCUdHSbNOq6aajm7UHs+HaFdd2yjWr9qSVHoFxGVu6lE1tB2rNW1ooROIaxmq1Kq8q5ZjNDds0LWM2HIxxCAuktS+3FWWJWHvnj8s+YIgiXMbxwrg0Cj6XPnfHZE6RSBnscvmncpmG2TSkj8/J/IeW7wW/T4M4W3YQjSnBKCLvSPVnCCKM/ZIXzWNGRLg4WYRlqsA6rLGOrSr9oRlFaGcGKiBkHOk8RNYu1ggCYEAxlCajfkv7cd7Usq0PDFEexGzBi8v/hgfoEqI4AV/n+7J20M4P+EWn2peA3T7FUcrJEm4VWROEge+mCfj8UKXfDAKyHhAuCbrmCp1xCO9oue1Gl8yBi/8zoIPhbIM8oiiF9u3ce3i6qCUTkYym6aRf+ZU8c4tWaWXVygAcOmeGfLTb5REpcxJtd9xNeoMw5H8lLzy63jz9jJ37n+T1+f3iDuFw+D6+5Z1pOEMzZyqeUK/SSEdsVZ9eowdns7q57Tswe5sOvT/MDJqP96NmJx78eX+ZCInydjPdBL5VuZn5y9G4LthbPxz8WrJHZ+wPgykZjK+s2fyiOuPGDAfr3vWN2aVzHk67lrHkTnM99pP7aPSKh5NqVTTq81ZezgH+om1/5sfp8wtgsV8qGvS7pWs5JSS+FzNlIb4eZK5uosSHC6BCa6tdSjvcVMod8V05w+3aqnesTsfr9Zr1Ts3uXvfMWqXSazata9Pz7Ka3F5ktiiOInZgGROVSkrulzfcA8cLlQH1g+jJOpdJx7ZuIXSRQqU9H8hDElMNDLOU5AD8VYQNvNmQNwSatmRSYHVa10m0s7ugd8wIBrCDJllWQ5BFgkhBQuq1ozSWvuZCteEPLVERWeYnKFFKp7EyJrGtXGzWDk0USgQJqLGI/jaCchEnWGINvv7aOMM+shOMkZgJF2XkwTlZ3/G/fCOnjE+XAVUlXIIcJX1wx1r6e03VXD+veh/dSn6jjJbsqGMFbJMVfH2RRLMmZ8lHYHnm+4dhQCG4c15Xn85cE56zP724p6VIE2vvhvCGr/FZOl8s0m0e1WjGYDG+oSg3TNsaAUylTm4f4FaiRRzHOuhNy4EfJc3sRoqQeHQskYCH5U8qWZzwCxsDVI6Aveb8+94VRSClbJ2AtvrJ1IvmAUYi/feNgFys/af4tP6uYfRT+VayDPLJO+QYQhM7VSt0HmxP0wLEMS6SSxeww+FcBvkpeNOZNzrEISajnVMDpPyUlUS0NYRynVPS7WmY4lM0Mp9gk4H44fQqTKXP+VCP//lbTSUYBDPKBx0kWX924rjoCdH4gvbukx+rbvbqyulXT8Rq2k6lvd6u+Fc9s5k0poGt/Mn+2HPTpmOPtfwA=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17C1CCAEE97C52DFE0533E991F0AA29A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17C1CCAEE97C52DFE0533E991F0AA29A</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150605_015643</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17C1CCAEE97D52DFE0533E991F0AA29A</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00051_FUNC_UVTC_UserName_RequestorUser_active_RequesteeUser_active_with_userlinkconsent_does_not_exists_ResetPassword_Role_Portal_200_OK_P2" searchProperties="true" id="f408ee67-a906-487f-ade7-ff42c8e624ec"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="80fd9685-5e03-4279-b81b-476dcb6c1151"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportal"));

tP.setPropertyValue("audience","");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="9bde1205-cd8d-4a70-aab4-70a05d4d1043"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="63e6abf6-6ac6-4059-b137-91312f7d3d52"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU" id="64738fcf-3bf7-46a9-9266-1964f02b9b84"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="0c3b58cd-a69f-4cd8-8250-b7a0a8351dd2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU+o6FP4rTPejU3oBFDrCDFg9onjZgsj25UxMFxBtk9Ik5fLrT1KgUkQP57zAZHXlW9+65EvOOYpC12tzDokgjJYWUUi5l1mbhkyoxxAn3KMoAu4J7PXbdz3PLdse2m4xSl2/afxdd08bzlkNmRV4OzWrVYTNuq1+qtgNbHhrBFX7VLlyLqFLuUBUNA3XdmqmfWratYFd99yKVzkru3Xn1SgNIeEKW7mUbWNDasGbxlSI2LOs+XxenlfKLJlYrm071uiu18dTiJDROl9nlAVKWht/XA4AQxjiMmaRdW4VfM4D7vXJhCIhE9jECr6LZVt2w1I+ASeTX0a+F4IuHbNseYEoowSjkKyQrs8diCkLSu1wwhIiptG3STi2BjZhgU3sVOkvwypSOxKowDDhyORT5GywnmAMCVAMpeenbtP4dVzXsq2DBFE+ZknEi8v/xgdoCiGLITD5Nq0NteMBD1SqdQ7Y61IcSk5SuNfDGiMMfNNNwMdDlR4TGJNFj3A1oAuu2Vm79PaW62r4ZAJc/J8G7TRnDTJEoYTWVe2sejJ4tPlVOHxNxOnJfTRtkNpkSi+bGYFd58yQt3a93BvKfIjWO9KVO2iP3msnqw7tcOG/dOlJdPFxPZ6MZvPa6/yWEKmYIbgdnfSG1ZfLtO9/3P2O0upA3ow69LmChnFyE8d++BzOxsyij9ejyh9/3nl4umtbcnzZkcNlPL2WkC7H/dVf773lw2vbjW5fris3qVi93i4DjHD/d/8FPS8bfxYyuI0ve4231/6ATdL6e3vErmbPLKw283R2+Bdt2zPfl2/vgMV2qceg65euVJeQ+FnMtIUE5jhz9WItPlwAFUZL79La4UkldyTwVA/Xa+fswvE7HcevuZdtdYwu7Vql4jcazpXdrrTtxlZk1iz2KF4wOiY6lpbc9dj8TBBHHgcaQGKmTCql48YPiD4SqNSlT+oQMMphwJQ8O/A2d10ZpYx+MMnndm0VxulsHBqleyYe6EPSHgtICprsOAVNfgJMYgJauPVcczXYXKhazFAqReiUU1SmIJW0J1plPbdar1mcRHEImqkVsUCGUI6ncVYZi6//XRNhnlkJxzFLBAqzA2F9m97+t20llE9AtAPXKXVAdRMO3DHuNp8veZ8evIu28G0ZEH2+VFlFQvCaSfHT57ToMclH5TOxLfN8w76hAG7t55XHC1KC87HPL2+l6UoFWtvmzJBTnpVlmsqsH9VqxUoUvKUrYtmu1QcslU4tB+wDqJWjWEddCjnxveC5vUhRiintCyQgUvNTypZHvAL6wPUroKsGf3HsE6MQUpVOwEIcsl2E6gWjGf/4yMEe1n7K/Kj+5iwJPjt2AGsnjspTPQIEoRO90hfC8pvxwEzBEiVlLNkFPwRwKHjRmBc55yLUQL1JAd9/KWmNahoIYyap6PpGZtjVzYynWMbgfTp9gcmkOX+rkX9/rJkkGwEM6oXHSYavr1xPHwE62dHeTdBv5Nf/SX6L7FpfzF8tO3Xan/HWPw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17C1DBB1D52DA826E0533D991F0A3A09</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17C1DBB1D52DA826E0533D991F0A3A09</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17C1DBB1D52EA826E0533D991F0A3A09</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17C1DBB1D52EA826E0533D991F0A3A09</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150605_015656</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150605_01571</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150605_01571</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150605_01571</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbU+o6FP4rTPejU3oBFDrCDFg9onjZgsj25UxMFxBtk9Ik5fLrT1KgUkQP57zAZHXlW9+65EvOOYpC12tzDokgjJYWUUi5l1mbhkyoxxAn3KMoAu4J7PXbdz3PLdse2m4xSl2/afxdd08bzlkNmRV4OzWrVYTNuq1+qtgNbHhrBFX7VLlyLqFLuUBUNA3XdmqmfWratYFd99yKVzkru3Xn1SgNIeEKW7mUbWNDasGbxlSI2LOs+XxenlfKLJlYrm071uiu18dTiJDROl9nlAVKWht/XA4AQxjiMmaRdW4VfM4D7vXJhCIhE9jECr6LZVt2w1I+ASeTX0a+F4IuHbNseYEoowSjkKyQrs8diCkLSu1wwhIiptG3STi2BjZhgU3sVOkvwypSOxKowDDhyORT5GywnmAMCVAMpeenbtP4dVzXsq2DBFE+ZknEi8v/xgdoCiGLITD5Nq0NteMBD1SqdQ7Y61IcSk5SuNfDGiMMfNNNwMdDlR4TGJNFj3A1oAuu2Vm79PaW62r4ZAJc/J8G7TRnDTJEoYTWVe2sejJ4tPlVOHxNxOnJfTRtkNpkSi+bGYFd58yQt3a93BvKfIjWO9KVO2iP3msnqw7tcOG/dOlJdPFxPZ6MZvPa6/yWEKmYIbgdnfSG1ZfLtO9/3P2O0upA3ow69LmChnFyE8d++BzOxsyij9ejyh9/3nl4umtbcnzZkcNlPL2WkC7H/dVf773lw2vbjW5fris3qVi93i4DjHD/d/8FPS8bfxYyuI0ve4231/6ATdL6e3vErmbPLKw283R2+Bdt2zPfl2/vgMV2qceg65euVJeQ+FnMtIUE5jhz9WItPlwAFUZL79La4UkldyTwVA/Xa+fswvE7HcevuZdtdYwu7Vql4jcazpXdrrTtxlZk1iz2KF4wOiY6lpbc9dj8TBBHHgcaQGKmTCql48YPiD4SqNSlT+oQMMphwJQ8O/A2d10ZpYx+MMnndm0VxulsHBqleyYe6EPSHgtICprsOAVNfgJMYgJauPVcczXYXKhazFAqReiUU1SmIJW0J1plPbdar1mcRHEImqkVsUCGUI6ncVYZi6//XRNhnlkJxzFLBAqzA2F9m97+t20llE9AtAPXKXVAdRMO3DHuNp8veZ8evIu28G0ZEH2+VFlFQvCaSfHT57ToMclH5TOxLfN8w76hAG7t55XHC1KC87HPL2+l6UoFWtvmzJBTnpVlmsqsH9VqxUoUvKUrYtmu1QcslU4tB+wDqJWjWEddCjnxveC5vUhRiintCyQgUvNTypZHvAL6wPUroKsGf3HsE6MQUpVOwEIcsl2E6gWjGf/4yMEe1n7K/Kj+5iwJPjt2AGsnjspTPQIEoRO90hfC8pvxwEzBEiVlLNkFPwRwKHjRmBc55yLUQL1JAd9/KWmNahoIYyap6PpGZtjVzYynWMbgfTp9gcmkOX+rkX9/rJkkGwEM6oXHSYavr1xPHwE62dHeTdBv5Nf/SX6L7FpfzF8tO3Xan/HWPw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17C1DBB1D52DA826E0533D991F0A3A09</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZtU+o6EP4rTP3I9L0o7QgzCKhcRVHAq+fLnZCmEE6blCRF8NefpEClKF7u/QKT7Wb32d0nT3LJQRI7QYtzxASmpLJKYsKD3NrQMkYCCjjmAQEJ4oGAwbDVvw8cwwrAbotW6XUa2j+W7YBoYk90ywGW7tVrUPehXdfPI+g5kWuFk5orXTnPUI9wAYhoaI5l13TrXLdqI6seOG7geYZr139plRfEuIwtXQxL24Ja8YY2EyINTPP9/d14dw3KpqZjWbb52r8fwhlKgNa83FSUJ2LNrT80QgRRHEMD0sS8NEs+lyEPhnhKgMgY2uYKj+WyTMs3pU/I8fRMK/aisEcimi/bgFCCIYjxB1D96SMxo2GlFU8pw2KWHC3CtlRgHa2gDm2PnGlmGdqJgUoIGQc6nwF7G+sZRYghAlFl/NxraGenTS3fOmKA8IiyhJeX/w0PIksU0xSFOt+VtYV2esBvOtW8RDDoERhnHC/RgyJrCiDi22kieHqoyoChCK/uMZcEXXGFztyHd7DcdKODp4iL/zOgveFsgryAOEPNfnVN3DF7rA8mU0ieEWuv7PnKCu0hbOQA9p1zQzHazfKAlAWJNjtSP/XvwhWrW1H06rxgcXs7SOL+eOHfiLnL3M5F9e+h1326Sa7pzccrfLuNQTpwYt/1zAyOAV1Pau3bufDb6d3Fw2jcTZ7XXbYC/vWAvNzGL9Gbf+XHffpYjUXtaT793Xfurdrrmq8fX8XUHPbX1+O/nLt57DGG6r9G0yhsLd6qT7NR3Wx72aJfJaL2EC161adGUc4e/rJtd+aH2WSOoNgtFQ16ncq1nBIQP4uZsuBQj3LXIFXiwwUiQmuqXUo7gkzKHQ4DOcPN2r5o2x3rqu5eXNh123W7Vk3++L59bbWs8253JzIbFAcQ25REWOVSkruhzc8AYRJwRELE9CXNpNJx7YeIHSBApSdZw1NKOBpRKc82/TjPPLfGVoTCjw8cU5g6c6/maZUHKh7JI2tFArGSJtt2SZOfEcQpRkq4Fa+5JDYXshcLsMxEbBtLYBCUSWlnSmUDR6qJyXGSxkghNRMaZjEy0lmad8bkm39HB5DnVsxhSpkAcX4gzKPlHX7bdUL6hFg5cFXSFZLTRN/cMe6unuN1e/t178K3shCr8yXbKhiGGyTlT59sUTQpqPJZ2A55seHQUApuHtZV5AuXGBa0Ly5vqelSBZq74SyAbSyMbLnM8nl4nmsyGd5UlZqWYw4RzKROrUf0NyJmEcU86VIogB8kL+xliJmYkaEAAiWSP5V8ecIrYIi4egX0JPFXpz4xSill6wRaie9s7Vi+YBTiHx85MIDKT5oH8u+dsvBzYt/E2ssj65SPAIHJVK3UhbA+Qg9IZVgspYyy/eDfBfguedlYNLnAIiShJplAx79UlEY1NAAhzYjodbTcsK+bOU6xTlHw6fQlTC7NxVsN//tjTcc5BSCSLzyO8/jqyg3UESDTPe3dJv0iv1dXdqfmdFp15zyX385Gft2W5RdNKaFrfjF/tez16ZDjzT8=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17C1D0B837718133E0533E991F0A06EE</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17C1D0B837718133E0533E991F0A06EE</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150605_01571</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17C1D0B837728133E0533E991F0A06EE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00052_FUNC_UVTC_UserName_RequestorUser_active_RequesteeUser_active_with_userlinkconsent_exists_ResetPassword_Role_Retailer_CS_200_OK_P2" searchProperties="true" id="a65c69e4-b02f-46d9-9fbd-4a933296d52d"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="0f3ef69e-976d-4c79-94db-8372acdc09b2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="dc9abbe3-3877-4c00-ab92-ba06ec4a5f00"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="fae5fa96-6041-446e-81da-0ccad50acb21"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU" id="a7dfd9f0-6095-4e4c-99bd-baef65af5f0e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call PolicyCreateULC_API" id="bacc5f74-59dc-4560-81e6-7c3bb480d2e2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateULC_API");

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DECE_CS" id="05748f97-08dc-4761-9858-c47108420622"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDECECS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full DECE_CS" id="03deac3c-401d-4733-b899-ebdefff00558">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call STS for Adult SAU DECE_CS" id="1426e12a-89af-4a83-a387-a278f4a142de">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER2",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_USER_ID2",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL2",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="548bc06e-63e7-4b78-82b6-d895ade31882"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZZU+pKEP4rVM6jFbKwSFJCFQIeUVEPi3p8sYZJEwaSCWYmC/76OxMgAgKXe59S3enp/nqZb/qKId8z7SZjEHIS0ELqe5TZmbauRCG1A8QIsynygdkc24Nm78E2i7qNNkeUQrddVz5MVEYVHWEVj6s1tawjR7UMBGrNHF8a1fEESg4SpoxF0KWMI8rriqkbFVWvqnplqNdss2RXykWzZL4rhRcImfAtTIq6sgaVsroy5Xxha1qSJMWkVAxCVzN13dDeeg8DPAUfKY2rVUZZoLCxtsdFBzB4Hi7iwNeutB2bK4fZA+JSxKMQ1rGcY7F0Tbc0YeMw4v5S8rPgdOkkyMQWogElGHnkC8n69IBPA6fQ9NwgJHzqH03C0KVjFVJRQ6NMfynaLrQzHe0gDBlS2RQZa199mEAIFENh1O/WlV/ndS07OgwRZZMg9Nmu+N/wAI3BCxbgqGyT1hra+Q4PVKpxBdjuUuxFjMTwKId1gTCwdTcBn++q8BzChKQPhIkBTZlEp23D2xNX1WgTFxj/Pw3aas7KyQvyImg8uEbVTUZNNHERrl7c0YtbfhtZr8nbvJ4B2DbOFHlrV+LeUOZDtDqBY9YsI78a9+OvQXw5fdGIt8TU90ZWpTYvTeZ396WbieXOoPq32asMm7XwXnut/p2+mhfLeXSbPo76I//6LkIVK7zxxw/w+fT62Pw9bZFWh2rvXqfXrLBkOHm8ff7sLK9JK4HZ+2051bvL2/tq1Hsmf/qJ27m30Fu7fffbTTod1O3HJk+Hf3xvNp/NRwn+0of9pJ6ns4V/V7e584NoPAPMN6Icg267cCO6hPhpMpMa4qiTzNReSPJhHChXGvKU5A47EnRHHFv0cCUbly3Ry1ano+uWXqqUOnqlVGpblnGjN2utsr4hmRWKPYitgE6IjCUpdzU2pwFi32ZAHQjVOIgE0zHlhMc24qjQpX1xCQLKYBgIeo6wqaeWZ1QSKzUChuap7otKmjOl8BjwJ/oUNiccwh1ONowdTu4DJgsCkrjlXDMx2IyLWnyiOOKeUYxRkUIkqD2ULGub5VpFY8RfeCCRan7gRB4UF9NFVhmNrb6mijDLtP3OMLttR/Pa/7cpgbBxiDRgMpdrEG2EA49LeZPI8YTL2wlv3Dcjh8iLJerJQ4JXSHZ/fY+JnI98RkRGH63Bh7HBnZufffznSe0EKG2/HnkgJyZbYTdPt3gEBG00Nt38REbxsxjFcZQ1sFwuaaFwr8kKabqpDQBHgtiWw2AOVMu9aGe9IjnwveC5fhdixKd0wBEHXwxcIRPPWBsGwOTa0BU3JT13J9kJKUrHIeWHdC1PrDwS8cmtCNtY2gn1s/gkQeh8d+yAr604Ik+xNXBCXSnJF2R5ZC5wINwSwX1BuO38kINDwXeVeZFzLFwM1DjicPxPQZJaXUEYBxHl3baSKbaJNsPJlwuwv41+uMm4PF/uyL9vdyrJRgCDWAkZyfzLN9qWV4C6W2S9DnqEr2un+HoXXeOH+qdmq077M974Bw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17C200CEE0080353E0533D991F0A8C40</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17C200CEE0080353E0533D991F0A8C40</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17C200CEE0090353E0533D991F0A8C40</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17C200CEE0090353E0533D991F0A8C40</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150605_015713</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150605_015718</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150605_015718</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150605_015718</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZZU+pKEP4rVM6jFbKwSFJCFQIeUVEPi3p8sYZJEwaSCWYmC/76OxMgAgKXe59S3enp/nqZb/qKId8z7SZjEHIS0ELqe5TZmbauRCG1A8QIsynygdkc24Nm78E2i7qNNkeUQrddVz5MVEYVHWEVj6s1tawjR7UMBGrNHF8a1fEESg4SpoxF0KWMI8rriqkbFVWvqnplqNdss2RXykWzZL4rhRcImfAtTIq6sgaVsroy5Xxha1qSJMWkVAxCVzN13dDeeg8DPAUfKY2rVUZZoLCxtsdFBzB4Hi7iwNeutB2bK4fZA+JSxKMQ1rGcY7F0Tbc0YeMw4v5S8rPgdOkkyMQWogElGHnkC8n69IBPA6fQ9NwgJHzqH03C0KVjFVJRQ6NMfynaLrQzHe0gDBlS2RQZa199mEAIFENh1O/WlV/ndS07OgwRZZMg9Nmu+N/wAI3BCxbgqGyT1hra+Q4PVKpxBdjuUuxFjMTwKId1gTCwdTcBn++q8BzChKQPhIkBTZlEp23D2xNX1WgTFxj/Pw3aas7KyQvyImg8uEbVTUZNNHERrl7c0YtbfhtZr8nbvJ4B2DbOFHlrV+LeUOZDtDqBY9YsI78a9+OvQXw5fdGIt8TU90ZWpTYvTeZ396WbieXOoPq32asMm7XwXnut/p2+mhfLeXSbPo76I//6LkIVK7zxxw/w+fT62Pw9bZFWh2rvXqfXrLBkOHm8ff7sLK9JK4HZ+2051bvL2/tq1Hsmf/qJ27m30Fu7fffbTTod1O3HJk+Hf3xvNp/NRwn+0of9pJ6ns4V/V7e584NoPAPMN6Icg267cCO6hPhpMpMa4qiTzNReSPJhHChXGvKU5A47EnRHHFv0cCUbly3Ry1ano+uWXqqUOnqlVGpblnGjN2utsr4hmRWKPYitgE6IjCUpdzU2pwFi32ZAHQjVOIgE0zHlhMc24qjQpX1xCQLKYBgIeo6wqaeWZ1QSKzUChuap7otKmjOl8BjwJ/oUNiccwh1ONowdTu4DJgsCkrjlXDMx2IyLWnyiOOKeUYxRkUIkqD2ULGub5VpFY8RfeCCRan7gRB4UF9NFVhmNrb6mijDLtP3OMLttR/Pa/7cpgbBxiDRgMpdrEG2EA49LeZPI8YTL2wlv3Dcjh8iLJerJQ4JXSHZ/fY+JnI98RkRGH63Bh7HBnZufffznSe0EKG2/HnkgJyZbYTdPt3gEBG00Nt38REbxsxjFcZQ1sFwuaaFwr8kKabqpDQBHgtiWw2AOVMu9aGe9IjnwveC5fhdixKd0wBEHXwxcIRPPWBsGwOTa0BU3JT13J9kJKUrHIeWHdC1PrDwS8cmtCNtY2gn1s/gkQeh8d+yAr604Ik+xNXBCXSnJF2R5ZC5wINwSwX1BuO38kINDwXeVeZFzLFwM1DjicPxPQZJaXUEYBxHl3baSKbaJNsPJlwuwv41+uMm4PF/uyL9vdyrJRgCDWAkZyfzLN9qWV4C6W2S9DnqEr2un+HoXXeOH+qdmq077M974Bw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17C200CEE0080353E0533D991F0A8C40</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynlMGd8AY1egikCYYSchM4EQJi9bQm6wFltyLBlIvn4kAw4mIcvuk0vt1unTFx3piqM4sv0O55AKwmhlE0eU+7m1pWUp9RnihPsUxcB9gf1R5+7Wt6umj/ZbtMqg19L+duqmaXpeTW9YAdZrdr2ho5rp6LZle03PBQcFjnTlPIMB5QJR0dJs06rrZkM3a2PT8e2mbzeqjuU9a5UJpFxiS5eqqe1IbXhLC4VIfMNYr9fVtVNl6cKwTdMypne3IxxCjLT21TajPFDa3vnjagAYoghXMYuNK6PkcxVwf0QWFIkshV2s4FQs0zA9Q/oEnCwutGIvBAM6Z/myiyijBKOIvCFVnzsQIQsqnWjBUiLC+GQSlqmAddhgHVs1eqEZZWpnApUYphzpPETWDusB5pACxVB5fBi0tIvzupZvHaeI8jlLY15e/jc+QFcQsQQCne/T2lE7H/CTSrWvAPsDiqOMkxUM1bAmCAPfdRPw+VCVnynMyeaWcDmgG67YGYf0jpbbavTIArj4Pw06aM4WZIKiDNo/wu7lmzUghJhT8txf3PLZaDZ8bbpo2coJHDrnhqK12+XRUBZDtN0BC+/mpcHvhsZmPricrsWUOZn96CQ/ZusRQ9+T63u327u7rtW709fLx29vv6fP02FvI4bkMbjs36+WUT+Y/LbC7q/JeM6X8LCYifojqi1dljxlUfLsCCec4QAid7KZ3Rk3f3VJ0nOHEPXN/mzx9LQadeNm2HhD7HLciJur5++/ouU6ve9Okvibl6TLoDm5fYspbhXpHPAv2/ZnfpTN/gEs9ks1BoNepS+7hMTXYqYsJNDnuaufKPHhAqjQ2mqX0g4/k3JHAl/2cLu23I7XtGpe/cbrNVy3cWPWHdP1PKtvdty619yLzJbFEcUuo3OiYinJ3Y7N1wRx7HOgAaT6imVS6bj2BWIPCVQZ0Ad5CBjlMGZSnq3YDV/QPHXmWbZgkfW63IQrEvFMqwyZuKf3aWcuIC1rcqOkyQ+ASUJACbeaay4HmwtZixe0ykRkVVeoSiGT0p4qlfXtWrNucBInESimRsyCLIJqEiZ5ZQy+/do6wjy35mXF2xN3Mrfjf/sySJ+AKAeu8rkG2Ur45IKx9smcSLp+dBHt4TtZQNThkjUVKcFbJuVf76OiZqSYk11We9qF97GhhGwcJ1UEC1YEFwNfXNtSzeX5b+/b8oKs6ks1W62yvBO1mmOkEt5QaRqmbYwAZ1KhXsdsCdQoUIyzroOC+FHwwl6mmImQjgQSEMvJqeTLM+7/EXB1/w/kyG/OfVyUQsrSCdiIz2zdSL5dFOMvnzfYx8pPmn/Kz5qlwXvHPsE6iCPzlNe/IHShVuoqeD0xG5hJWCJFjKWH4J8BfBa8bCyKXHARcqBmmYDTfypKnVoawphlVAx6Wm44VMycp3hNwH93+gCTi3LxSiP//kzTST4CGOTbjpMcX122vjoCdHGgurugx8Lr9hq26blOw/LsQ+Ht1687RVFK7NofzB8tB3U6nvH2Hw==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17A981495E9D6776E05307991F0A7598</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17A981495E9D6776E05307991F0A7598</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_090134</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17A981495EA16776E05307991F0A7598</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_35000994-61dc-4256-a403-2129897e3ad3</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_35000994-61dc-4256-a403-2129897e3ad3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>17A97D6209736192E05307991F0AF5BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>17A981495E9D6776E05307991F0A7598</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:17A981495E9D6776E05307991F0A7598</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70cd5392-3df9-42d0-8e71-f9829da65bed</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>92b8758a-441f-49f2-94a8-40796e4ad166</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a5e0dd34-a05a-448f-94b5-6843d1581ef9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c36a0ce5-45d3-4a4b-9caa-727aebcdb7ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00053_FUNC_UVTC_UserName_RequestorUser_active_RequesteeUser_active_with_userlinkconsent_does_not_exists_ResetPassword_Role_Retailer_CS_200_OK_P2" searchProperties="true" id="72ee6ce0-c737-4824-98ef-2f021d9535aa"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="0904223f-ab7f-4395-935c-5b45d1914c00"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="51852b30-3d30-4364-82e1-3294d5caee62"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="10c9c5b6-9ba6-484d-9fc7-eee0c9d617d4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU" id="2066de3e-0654-4028-9c4e-1bf30250ef8d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DECE_CS" id="535e1362-354f-4da7-907b-67080772e24f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDECECS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full DECE_CS" id="94070d74-16c5-4ca2-8f98-f93b9b6772ce">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call STS for Adult SAU DECE_CS" id="2bd6115f-ac63-41f8-9a6e-946e771a4b67">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER2",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_USER_ID2",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL2",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="c8136a2f-c744-44fd-90b5-8be0eb375841"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZrU/I6EP4rTP3o0ButQkeYQfCCwosC4itfnJAuECxJaVJuv/4kBSqgcDjnE+x2s/vsJU/2hqNJYHtlziEShNHMYhJQ7iXaohZH1GOIE+5RNAHuCey1y426Z+umh7ZHtEytWtQ+wbXyBXAL2UI/l8s6jvzXN/tStKGPnescsq4G0pTzGGqUC0RFUbNNy82aV1nT7Zh5z3Y809Tdq0JPy3Qh4tK3NNFNbQNqwYvaSIjQM4z5fK7PczqLhoZtmpbxt1Fv4xFMkFa6WWeUBIpKG3us+4AhCLCO2cS4MfZsbnzutcmQIhFHsInlH4tlGmbBkDY+J8MLLT0Lfo0OWCJWEGWUYBSQFVL1aYAYMT9TDoYsImI0OZqEZSrHWVjgLLYceqEZ+9DOdLSHMOIoy0fI2vhqwQAioBgyb61aUbs4r2vJ0U6EKB+waML3xf+GB+gMAhaCn+XbtDbQznf4S6VKN4C9GsVBzMkM/qhhDREGvukm4PNdZV4iGJBFnXA5oAuu0Bm78A7EdTWqZAhc/J8G7TRn7aSLghhKnRFf1ipdxqb5qvsxenpv9VnTfojt4LWYANg1ThRpa9fiwVCmQ7Q+gVb286i3eHV7ZvUx94YfhhW7x2dNx3yKw0aN2sty3bqPCFutwO5E5TAvni8n8ydnHBrvt42vZt0Rfb5y6PMKhx/O5VvPavTep1279deNQbhfL+OgOn2qxCi/fOgs4kGz/tK9vWzc2s9lejW9m08vUbdHEYH5R5tGq7DzETw+2jWfjxrmqpmfVqP7OX31SeGtmKazg39ft73z7bg/Biy2ohqDWjVzL7uExGkyUxriZweJqRcq8uECqNBK6pTiDi+WdEd8T/ZwLVvXFdnLyt2d6Vhmzs3dmW4uVy0UrHuznK845pZk1igOIFYYHRAVS1HuemxOA8QTjwP1IcrOWCyZjmsnPFaRQJkabclLwCiHDpP0zALGBnMuhvnxkFyPg6AwH+Pr5UrL/GGiSZtReSAg2qNky9qj5BZgEhJQvK3Gmsu55kKWYopmsQgsfYZ0CrFk9kiRrDyadw1OJmEACqgxYX4cgB6OwqQwBl//2lmEeaJt3XWSy3Y0rcNv2wpIG58oA65yuQXZRfjxtuQ8d5vI8YSd3YS37suxT9S9kuUUEcFrJPufvqdEjUc6IjKjz0r709riTs3PPv7zpHEClHFYjzSQPyM7Ybcvt3wDJGuUtt2cIkuf6vFsFicNdJycEUn3hqqQYdpGG3AseW3ZYV9AjdSLcdYjkgI/CJ7q9yHGYkTbAgmYyIHLJOIZW0MbuNoaavKiLM5dSfZCytIJWIjfdJVAbjwK8cmlCHtY2Un1i/yZs8j/7tgvvnbiyDzl0iAIHSpJPSDLI3OBmXRLJPWxaNf5bw5+C76vTIucYhFyoPqxgONfMorTihrCmMVU1Kpaotjl2QSnWIbgfRv9cJNQebrbkX9f7rIkGQEMciPkJPGvnmhPXQE63OHqTdAjdG2eout9dKUf6p+anTodznjpHw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17C200CEE0400353E0533D991F0A8C40</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17C200CEE0400353E0533D991F0A8C40</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17C200CEE0410353E0533D991F0A8C40</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17C200CEE0410353E0533D991F0A8C40</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150605_015719</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150605_015724</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150605_015724</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150605_015724</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZrU/I6EP4rTP3o0ButQkeYQfCCwosC4itfnJAuECxJaVJuv/4kBSqgcDjnE+x2s/vsJU/2hqNJYHtlziEShNHMYhJQ7iXaohZH1GOIE+5RNAHuCey1y426Z+umh7ZHtEytWtQ+wbXyBXAL2UI/l8s6jvzXN/tStKGPnescsq4G0pTzGGqUC0RFUbNNy82aV1nT7Zh5z3Y809Tdq0JPy3Qh4tK3NNFNbQNqwYvaSIjQM4z5fK7PczqLhoZtmpbxt1Fv4xFMkFa6WWeUBIpKG3us+4AhCLCO2cS4MfZsbnzutcmQIhFHsInlH4tlGmbBkDY+J8MLLT0Lfo0OWCJWEGWUYBSQFVL1aYAYMT9TDoYsImI0OZqEZSrHWVjgLLYceqEZ+9DOdLSHMOIoy0fI2vhqwQAioBgyb61aUbs4r2vJ0U6EKB+waML3xf+GB+gMAhaCn+XbtDbQznf4S6VKN4C9GsVBzMkM/qhhDREGvukm4PNdZV4iGJBFnXA5oAuu0Bm78A7EdTWqZAhc/J8G7TRn7aSLghhKnRFf1ipdxqb5qvsxenpv9VnTfojt4LWYANg1ThRpa9fiwVCmQ7Q+gVb286i3eHV7ZvUx94YfhhW7x2dNx3yKw0aN2sty3bqPCFutwO5E5TAvni8n8ydnHBrvt42vZt0Rfb5y6PMKhx/O5VvPavTep1279deNQbhfL+OgOn2qxCi/fOgs4kGz/tK9vWzc2s9lejW9m08vUbdHEYH5R5tGq7DzETw+2jWfjxrmqpmfVqP7OX31SeGtmKazg39ft73z7bg/Biy2ohqDWjVzL7uExGkyUxriZweJqRcq8uECqNBK6pTiDi+WdEd8T/ZwLVvXFdnLyt2d6Vhmzs3dmW4uVy0UrHuznK845pZk1igOIFYYHRAVS1HuemxOA8QTjwP1IcrOWCyZjmsnPFaRQJkabclLwCiHDpP0zALGBnMuhvnxkFyPg6AwH+Pr5UrL/GGiSZtReSAg2qNky9qj5BZgEhJQvK3Gmsu55kKWYopmsQgsfYZ0CrFk9kiRrDyadw1OJmEACqgxYX4cgB6OwqQwBl//2lmEeaJt3XWSy3Y0rcNv2wpIG58oA65yuQXZRfjxtuQ8d5vI8YSd3YS37suxT9S9kuUUEcFrJPufvqdEjUc6IjKjz0r709riTs3PPv7zpHEClHFYjzSQPyM7Ybcvt3wDJGuUtt2cIkuf6vFsFicNdJycEUn3hqqQYdpGG3AseW3ZYV9AjdSLcdYjkgI/CJ7q9yHGYkTbAgmYyIHLJOIZW0MbuNoaavKiLM5dSfZCytIJWIjfdJVAbjwK8cmlCHtY2Un1i/yZs8j/7tgvvnbiyDzl0iAIHSpJPSDLI3OBmXRLJPWxaNf5bw5+C76vTIucYhFyoPqxgONfMorTihrCmMVU1Kpaotjl2QSnWIbgfRv9cJNQebrbkX9f7rIkGQEMciPkJPGvnmhPXQE63OHqTdAjdG2eout9dKUf6p+anTodznjpHw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17C200CEE0400353E0533D991F0A8C40</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbU+o6FP4rTH3cU3rhZjvCDF7YoqLIRdGXMyFdpdE2qU0KuH/9TgpUiuDhnKdOVle+9a1LvuSMoyi03TbnkAjCaGkZhZS7mbWppQl1GeKEuxRFwF2B3WG7d+faZdNFmy1aqXvZ1P7xGiYyLTzVqw0f9Cp4Ux3VbaSf4qnj40p92phOpSvnKXQpF4iKpmabVk0367pZHZkV1z51a9XyqW29aqUnSLjEli5lU1uTWvKmFggRu4axWCzKi0qZJTPDNk3LmPTuhjiACGmts1VGWaCktfbHZQ8whCEuYxYZZ0bB58zj7pDMKBJpAutY3qFYpmE6hvTxOJmdaPle8LrUZ9nyAlFGCUYh+YNUfXogAuaV2uGMJUQE0cEkLFMB67DEOraq9EQzitSOBCowTDjSeYCsNdYAfEiAYiiNB92mdnJc17KtowRR7rMk4sXlf+MDdA4hi8HT+SatNbXjAfdUqnUG2O1SHKaczOFeDWuMMPB1NwEfD1XqJ+CT5R3hckCXXLEztuntLFfVuCQz4OL/NGirOSuQJxSm0OLi5n0UhBBPXof+e9WpgD/vWM/XBufNjMC2c2bIW7ta7gxlPkSrHV5t4jiLx1uD3Y+v0Dh9C18JDH8PvMaA1ifP5/filMcvgTkyHwLH6t0sAuMljuP+yGNt2/+VduazCF5FrZGED43QC0IxHi9HOIx7r4ub51TMxv3X/vj+YezUKqbdH05uUYDuCEtJ37F+jSLM6PVsNKMT5+X26v26H1x1AEjHeuJRf+HVZzd2b/L7Ec6XN4/NPJ0t/kXb5swP0+kbYLFZqjHoXpY6sktI/CxmykI83c9c3ViJDxdAhdZSu5R2uKmUO+K5soertdVoO43Lum22K+d1y7GvTJlqw3Gsjtnu1M7bG5FZsdiheMGoT1QsJbmrsfmZII5cDtSDRJ+zVCod135AvEQClbp0IA8BoxxGTMozVOzGkttvy/c/Xrzwqxg3bORXpCTfM/FAH5K2LyApSnK9IMkDwCQmoHRbjTWXc82FLMUHmqcitMpzVKaQSmVPlMi6dvW0ZnASxSEookbEvDSEchzEWWEMvvraOsI8s2ZVxasDdzC13X+bKkgfjygHrvI5B9lJ2HO/VDfJHEi6tnMPbeDbqUfU2ZIlFQnBKybFX1+TokYkH5N1VhvaufeuoYBs7CaVB/PmBOfznt/aUszl8W9t2vKBrPJHOZ3P06wT1WrFSCS8odI0TNsYAk6lQH2O2DtQI0cxjroNcuI7wXN7kWIqAjoUSEAkJ6eULY+4/ofA1fXflRO/PPZtUQgpSydgKfbZLkL5dFGMf3zdYBcrP2nuy8+CJd5Xx/ZgbcWRecrbXxA6Uyt1E3wemA3MJCyRGsaSbfB9APuCF415kXMuQg7UNBVw+E9JiVNTQxizlIrupZYZtgUz4yk+Y3C/nL7BZJqcP9LIv7/SdJKNAAb5tOMkw1d3rauOAJ1tie466F7dda7sn3S3yK71zfzdslWn3Rlv/QU=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17A97D620A3B6192E05307991F0AF5BA</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17A97D620A3B6192E05307991F0AF5BA</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_09024</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17A97D620A3F6192E05307991F0AF5BA</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_d70a01cb-47fe-4edb-a62a-8cb9fc36b7bb</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_d70a01cb-47fe-4edb-a62a-8cb9fc36b7bb</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>17A97D6209E26192E05307991F0AF5BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>17A97D620A3B6192E05307991F0AF5BA</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:17A97D620A3B6192E05307991F0AF5BA</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70cd5392-3df9-42d0-8e71-f9829da65bed</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>92b8758a-441f-49f2-94a8-40796e4ad166</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a5e0dd34-a05a-448f-94b5-6843d1581ef9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00054_FUNC_UVTC_UserName_RequestorUser_active_RequesteeUser_active_with_userlinkconsent_exists_ResetPassword_Role_Coord_CS_200_OK_P2" searchProperties="true" id="ee58e059-9893-4fb5-861e-6d863035aab7"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="7398f628-011b-4b2c-9be7-93224e551373"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="633846c9-5104-4ba2-8d5e-5c22398b816b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="29fb2da6-5c39-4743-8c92-3f7017cbe30c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU" id="a569988b-5ff8-4cf9-a85c-3cb4876718ac"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call PolicyCreateULC_API" id="47c4de92-45b8-488b-a776-83788d45063e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateULC_API");

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node SPL CS" id="bef86d80-6d51-43e6-9ca2-352adb547c75"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCoordCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full COORD_CS" id="b6e86276-c514-4466-87d2-6befe7222bc7">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call STS for Adult SAU COORD_CS" id="b6077ef0-c2af-448f-80dd-e0471879133d">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER2",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_USER_ID2",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL2",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="75342930-d623-4dfe-8749-1fd74513b671"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>coord:cs</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtV+I6EP4rnO5HT0naUoQe4ZwquttdXBXw7X7xhHSAaJtik5bqr9+kQBdQvNz7qWemk5lnXvJkTgSJI9vzhYBUsoTXijjiwiu1HSNLuZcQwYTHSQzCk9Qb+pd9z65jj6yPGLWg1zGeWmGz7bqNiYkbLjEbLrXMFm7bJoamBTgMXRqGylSIDAIuJOGyY9jYck3cNLE7wi3Pbnj4uO649j9G7Q5SoXwrkzo2VqAK0TFmUs49hBaLRX3h1JN0imyMLfRw2R/SGcTE6J4sMyoDpd2VPa2HQCGKaJ0mMTpBWzYnofCGbMqJzFJYxQr3xcIIt5GyCQWbfjOqsxAGfJKU4hnhCWeUROyd6PpcgpwlYc2PpknK5Czem4SFtWMTCmpSq8G/GWgb2oGOthCmgphiRqyVrwFMIAVOoXY7CDrGt8O6Vh4dpYSLSZLGYlv8b3iA5xAlcwhNsU5rBe1wh59UqnsC1As4jTLBcvith3VOKIhVN4Ee7qp2ncKEFX0m1IAWQqNDm/B2xGU1emwKQv6fBm00Z+nkjkQZdAP7vjf4fm/h45d3fv/D+e1w8naBUHza6pQANo1LRdXapbgzlNUQLU8U0f2P6M3lNwP/dTSgt+4jbk2470NxTosUJ8H7Ebq+yovx+xiTae8XOWveOv5lIG91DnFcjB5vbpoEnz6Gt/I0zgd2/uvqKPKt+Hl8dFSM/cblc/B8E/XlguHw3JoELXr1sz+9dr6/5Jd3/cefD9cXfWENvy/GLxehiI9TcBfR3Xv28MieX5zmnC4ECm5e+UunSmcD/7ZufeeH2fgZqFyLegyCXu1CdYnIr8lMa1hoTkpTb67JR0jg0ujqU5o7vEzRHQs9lf9Sto7PrN7pqdVrth2/ZTfPses4vXbbusC+4+P2mmSWKHYgniV8wnQsTbnLsfkaII09ATyE1MyTTDGdML7w2COS1AI+UJcg4QJGiaLnJDtu2K2Jm2GJbVXusDErxDg/Nmq/E3nFr1J/IiHdomTL2qLkAVA2Z6B5W4+1UHMtpCrFK8kzGVn1nNQ5ZIrZU02y6mjLRYLF8wg0UBQnYRZBfT6bl4VBYvm1TUJFqR2cj8rLtjet3X/rCiibkGkDoXM5BdVF+PC2OJ67TmR/wo3NhNfu/Sxk+l6pcsqU0SWS7V9/p0SPRzUiKqOns+GTtcZdmR98/ONJ9AUotFuPKlCYs42w65dbvQGKNbrrbr4Sq/5az/I8KxvYaDgoVe6RrhDCNhoCzRSvvY2SF+Co8oIOekQq4DvBK/02xEzO+FASCbEauFopHrA1DEHorSFQF6U4dCXZCqlKJ6GQn+nOIrXxaMRfLkXUo9pOqa/VZ5GkfxP/zNdGHJWnWhok41Mt6Qfkbc9c0ES5ZYr6knTT+WcOPgu+rayKXGGRaqDGmYT9f2qa0zoGoTTJuAx6RqnY5NkSp3ybg/fX6IObksqr3Y79+3JnsnIEKKiNULDSv36iPX0F+HSDq1dB99C1/RVdb6PrflB/1GzUaXfGu38A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17C1DBB1D692A826E0533D991F0A3A09</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17C1DBB1D692A826E0533D991F0A3A09</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17C1DBB1D693A826E0533D991F0A3A09</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17C1DBB1D693A826E0533D991F0A3A09</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150605_015726</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150605_015731</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150605_015731</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150605_015731</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtV+I6EP4rnO5HT0naUoQe4ZwquttdXBXw7X7xhHSAaJtik5bqr9+kQBdQvNz7qWemk5lnXvJkTgSJI9vzhYBUsoTXijjiwiu1HSNLuZcQwYTHSQzCk9Qb+pd9z65jj6yPGLWg1zGeWmGz7bqNiYkbLjEbLrXMFm7bJoamBTgMXRqGylSIDAIuJOGyY9jYck3cNLE7wi3Pbnj4uO649j9G7Q5SoXwrkzo2VqAK0TFmUs49hBaLRX3h1JN0imyMLfRw2R/SGcTE6J4sMyoDpd2VPa2HQCGKaJ0mMTpBWzYnofCGbMqJzFJYxQr3xcIIt5GyCQWbfjOqsxAGfJKU4hnhCWeUROyd6PpcgpwlYc2PpknK5Czem4SFtWMTCmpSq8G/GWgb2oGOthCmgphiRqyVrwFMIAVOoXY7CDrGt8O6Vh4dpYSLSZLGYlv8b3iA5xAlcwhNsU5rBe1wh59UqnsC1As4jTLBcvith3VOKIhVN4Ee7qp2ncKEFX0m1IAWQqNDm/B2xGU1emwKQv6fBm00Z+nkjkQZdAP7vjf4fm/h45d3fv/D+e1w8naBUHza6pQANo1LRdXapbgzlNUQLU8U0f2P6M3lNwP/dTSgt+4jbk2470NxTosUJ8H7Ebq+yovx+xiTae8XOWveOv5lIG91DnFcjB5vbpoEnz6Gt/I0zgd2/uvqKPKt+Hl8dFSM/cblc/B8E/XlguHw3JoELXr1sz+9dr6/5Jd3/cefD9cXfWENvy/GLxehiI9TcBfR3Xv28MieX5zmnC4ECm5e+UunSmcD/7ZufeeH2fgZqFyLegyCXu1CdYnIr8lMa1hoTkpTb67JR0jg0ujqU5o7vEzRHQs9lf9Sto7PrN7pqdVrth2/ZTfPses4vXbbusC+4+P2mmSWKHYgniV8wnQsTbnLsfkaII09ATyE1MyTTDGdML7w2COS1AI+UJcg4QJGiaLnJDtu2K2Jm2GJbVXusDErxDg/Nmq/E3nFr1J/IiHdomTL2qLkAVA2Z6B5W4+1UHMtpCrFK8kzGVn1nNQ5ZIrZU02y6mjLRYLF8wg0UBQnYRZBfT6bl4VBYvm1TUJFqR2cj8rLtjet3X/rCiibkGkDoXM5BdVF+PC2OJ67TmR/wo3NhNfu/Sxk+l6pcsqU0SWS7V9/p0SPRzUiKqOns+GTtcZdmR98/ONJ9AUotFuPKlCYs42w65dbvQGKNbrrbr4Sq/5az/I8KxvYaDgoVe6RrhDCNhoCzRSvvY2SF+Co8oIOekQq4DvBK/02xEzO+FASCbEauFopHrA1DEHorSFQF6U4dCXZCqlKJ6GQn+nOIrXxaMRfLkXUo9pOqa/VZ5GkfxP/zNdGHJWnWhok41Mt6Qfkbc9c0ES5ZYr6knTT+WcOPgu+rayKXGGRaqDGmYT9f2qa0zoGoTTJuAx6RqnY5NkSp3ybg/fX6IObksqr3Y79+3JnsnIEKKiNULDSv36iPX0F+HSDq1dB99C1/RVdb6PrflB/1GzUaXfGu38A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17C1DBB1D692A826E0533D991F0A3A09</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdc9o6EP0rjPvYMZaNbbAnMAOlNKTko3EgTV7uKNJi1BiZWjKQ/PpKBlxMSC73Pnm0Xu2e3T060pnA88QJu0JAJlnKa+t5wkVYWNtGnvEwxYKJkOM5iFCSMOpejkKnjkK822LUhv228Q9pgdOigMyph5DpEmSbAXWJOaUYPdmBjUgDK1chchhyITGXbcNBtmci30TuHWqEThA6Xt13gkejNoFMqNjKpY6MLai1aBszKRehZa1Wq/qqUU+z2HIQsq2fl6OIzGCOjc7ZpqIiUdbZ+pM6BQJJQuoknVtnVsXnjIowYjHHMs9gm4u+lwtZKLCUDxUs/mSUe4EO+TQtll8wTzkjOGGvWPfnEuQspbVuEqcZk7P5u0XYSAc2YU1MYrv8k2FVoZ0YqIIwE9gUM2xvY93CFDLgBGrj22Hb+HTa1IqtdxnmYppmc1Fd/jc8wJeQpAugptiVtYV2esAjneqcAQmHnCS5YEu40mRdYAJiO00gp4eq3WQwZesRE4qga6HRWfvwDpabbvRZDEL+nwHtDWcTZIKTHDpX35oPjb7/LZ/T7H7cj5cXCOLBefRoPbQLAPvOhaEc7WZ5QMqSRJsdjPJZMwEXRd9vft33YRIsLxtj2mLd6Ia+LJ8/pwPXxyN54Z0zGLqraSAfe/6PmZeejz63ztnz/X1rdfEq2erhUbwEND8X8ePQGwvvYth7+Dnlvo8W0WvrJU5ur7/2mg5No6cr9ov2nlFjNX5Er5EbjV8n7nkvjft8Egy+f74fNRbZ/ehHM7h7aojx9fV6QidEtMty9vBXbbszH+VPv4DI3VLTYNivDdSUsPxYzLSFUXNauIYLLT5CApdGR+/S2hHmSu4YDdUMN2u72Q2afd9B3Vbg24HzFXkN1AwCe4C6A6/X3YnMBsUBxC8pnzKdS0vuhjYfAyTzUACnkJnLNFdKJ4wPIvaxxLUhv1WHIOUC7lIlzzx2fe85p9ihrr2c0UR4bpz7rm/UrlJ5za+z7lRCVtVkv6LJt0DYgoEWbs1roYgtpOrFb7zMZWLXl7jOIVfSnmmVDR235VmCzRcJaKTWPKV5AvXFbFF0xhKbr2NiIgorSdOMhmRz5N4t7vDfrg/KhzLtIHRBPVCzhCM3jL2r5k3V/tGbaBe+m1OmT5dqqswY2SCp/vrLFU2Skii7sna4S/dDQyW0dVhVmY0uGSkpX17cSs+VAnR2g/mN7frver5c5sUsXLdhZSq8pfthIceKgORKo17u0mfgVhnFOulCKIEfJC/tVYi5nPFIYglzxZ1asTzhBRCB0C+AoSL9+tTnRSWlap2EtTxm+5Ko14tG/OEDh4RE+ynzjfqs1BT/TuxIrL08qk71AJCMx3qlL4OXj8jBlIyl2X7wYwGOJa8ayyaXWKQi1FMu4f0/Na1PbQMTkuZcDvtGYdjXzAKnfFlA+NfpTZhClst3Gvv3h5rJCgoQUK87wYr4+roN9RHg8Z7ubpMeSm/LdgNvgPp+s+nvS2/TC1plUyroOm/Mby17fTrkeOcP</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17A97D620A896192E05307991F0AF5BA</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17A97D620A896192E05307991F0AF5BA</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_090233</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17A97D620A8C6192E05307991F0AF5BA</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_c8e28de0-f500-4c01-9d4c-fda0b1910c3a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_c8e28de0-f500-4c01-9d4c-fda0b1910c3a</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>17A981495F0D6776E05307991F0A7598</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>17A97D620A896192E05307991F0AF5BA</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:17A97D620A896192E05307991F0AF5BA</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70cd5392-3df9-42d0-8e71-f9829da65bed</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>92b8758a-441f-49f2-94a8-40796e4ad166</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a5e0dd34-a05a-448f-94b5-6843d1581ef9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c36a0ce5-45d3-4a4b-9caa-727aebcdb7ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>29067bd3-a7a7-45da-a337-6695ae57ea51</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00055_FUNC_UVTC_UserName_RequestorUser_active_RequesteeUser_active_with_userlinkconsent_does_not_exists_ResetPassword_Role_CoordCS_200_OK_P2" searchProperties="true" id="3b65962b-3abb-473c-8a2a-19710253c1dc"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="146cd469-81b9-4fa1-8dfe-2aee4207a809"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="2900b481-b180-4512-b9f5-3763c83b052e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="2dcbe9a5-9138-4341-9a7e-03ebd1175455"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU" id="4b85c1a6-dcb5-40c9-aa6d-47c14df40c3d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node SPL CS" id="46ac0ea5-8e91-4540-9a18-b5759da1fda4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCoordCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full COORD_CS" id="5a7b8f1e-126c-44df-84de-4f48963f1831">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call STS for Adult SAU COORD_CS" id="1f9803e2-6f9a-466d-8c3e-ae5dce258402">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER2",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_USER_ID2",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL2",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="c450a102-11ea-417f-9f06-7d47e86e3c65"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>coord:cs</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o6EP4rjPvYMfIVYk9gxgHSwzQkLZA0zUtHyGtQMbIjyUDy6ysZcIGEHM558ux6tfvtRZ/2UuBF6oSREMAlzVhtvUiZCEttyyg4CzMsqAgZXoAIJQlH0eAmdOpWiHdHjFq/2zJ+NWLb9mzPN+M4TkwP+4GJG45t2he27/kEvMDGylSIAvpMSMxky3As2zethmn5Y+sidLzQdusNN3gyag/AhfKtTOqWsQW1Fi1jJmUeIrRareort57xKXIsy0aPg5sRmcECG+3LTUZlIN7e2pN6DATSlNRJtkCX6MDmMhbhiE4ZlgWHbaz4VCwLWQFSNrGg009GdRbiPkuyUuxgljFKcEpfsa7PAOQsi2tROs04lbPFySRsSzs2YU1MYnvsk4EOoZ3p6AAhF9gUM2xvfQ0hAQ6MQO1+2G8Zn87rWnl0zDETScYX4lD8b3iALSHNcohNsUtrC+18h+9Uqn0JJOwzkhaCLuFWD2uOCYhtN4Gc76r2jUNC1zdUqAFdC40O7cM7EjfV6NIpCPl/GrTXnI2TB5wW0GbW5DFBoxUbZa8NvrJertyY+42mPZq3SgD7xqWiau1GPBrKaog2J57j1fU0GUf5w5fAWjxPOuLGdQZfSM9BP3wps+Qz5Gjo3sCLR5sXs/vGeOqim3UB8LT2ml/u5O3t/U/Ucf75+jSdp8PBsNMMOP86sCY/+kEuZNNFq6El7XnmR/Jr6rPA95tXj0/r+eT3vNv5Nn+6e2wivp48fh/03Pvew7o5zp/u+1YS34rr6PXn8ir/nP3GA/K9VaWzh/9Qt7vzo2LyG4jciXoM+t3ateoSlh+TmdbQ2ExK0zDX5CMkMGm09SnNHWGh6I7GoerhRrabHbvTiXq9nhv5Tve6Z/mu2wsC+9qKIieIdiSzQXEEsZOxhOpYmnI3Y/MxQLIIBbAYuLnMCsV0wvjAYxdLXOuzoboEGRMwzhQ9275IVhd8ugg8i+GX5cxazu1J0GwatdtM3rE7HiUS+AEn2/YBJw+B0JyCJm4910INtpCqFs94WcjUri9xnUGhqJ1rllVHL3wk6CJPQSNFiywuUqjns7ysDBKbr2NiIkrtsDcub9vJvI7/7UqgbGKqDYTO5QpUG+Gdx8XaJXI6YW8/4Z37qIipvliqnpJTskFy+OvvmOj5qGZEZfSrM/pl73BX5mcff3sSfQAKHdejChQv6V7Y3dOtHgFFG+1dN5+xXX+uF8tlUTbQ81zElXukK4QsB42AFIrYXsbZHBiqvKCzXpEK+FHwSn8IsZAzNpJYwkINXK0Uz1gbRiD02tBXN2V97k5yEFKVTsJavqfrpGrl0Yg/3IpISLSdUn9Tn1XG478de8fXXhyVp9oaJGVTLekX5OXEXJBMuaWK+zK+7/w9B+8FP1RWRa6wSDVQk0LC6T81TWotAxOSFUz2u0ap2CfaEqd8ySH8a/TGTcnl1XJH/327M2k5AgTUSiho6V+/0aG+Amy6R9bboCf4OviIrw/Rtd+o32r26nQ84+0/</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17C1CCAEEE3952DFE0533E991F0AA29A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17C1CCAEEE3952DFE0533E991F0AA29A</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17C1CCAEEE3A52DFE0533E991F0AA29A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17C1CCAEEE3A52DFE0533E991F0AA29A</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150605_015732</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150605_015737</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150605_015737</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150605_015737</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc9o6EP4rjPvYMfIVYk9gxgHSwzQkLZA0zUtHyGtQMbIjyUDy6ysZcIGEHM558ux6tfvtRZ/2UuBF6oSREMAlzVhtvUiZCEttyyg4CzMsqAgZXoAIJQlH0eAmdOpWiHdHjFq/2zJ+NWLb9mzPN+M4TkwP+4GJG45t2he27/kEvMDGylSIAvpMSMxky3As2zethmn5Y+sidLzQdusNN3gyag/AhfKtTOqWsQW1Fi1jJmUeIrRareort57xKXIsy0aPg5sRmcECG+3LTUZlIN7e2pN6DATSlNRJtkCX6MDmMhbhiE4ZlgWHbaz4VCwLWQFSNrGg009GdRbiPkuyUuxgljFKcEpfsa7PAOQsi2tROs04lbPFySRsSzs2YU1MYnvsk4EOoZ3p6AAhF9gUM2xvfQ0hAQ6MQO1+2G8Zn87rWnl0zDETScYX4lD8b3iALSHNcohNsUtrC+18h+9Uqn0JJOwzkhaCLuFWD2uOCYhtN4Gc76r2jUNC1zdUqAFdC40O7cM7EjfV6NIpCPl/GrTXnI2TB5wW0GbW5DFBoxUbZa8NvrJertyY+42mPZq3SgD7xqWiau1GPBrKaog2J57j1fU0GUf5w5fAWjxPOuLGdQZfSM9BP3wps+Qz5Gjo3sCLR5sXs/vGeOqim3UB8LT2ml/u5O3t/U/Ucf75+jSdp8PBsNMMOP86sCY/+kEuZNNFq6El7XnmR/Jr6rPA95tXj0/r+eT3vNv5Nn+6e2wivp48fh/03Pvew7o5zp/u+1YS34rr6PXn8ir/nP3GA/K9VaWzh/9Qt7vzo2LyG4jciXoM+t3ateoSlh+TmdbQ2ExK0zDX5CMkMGm09SnNHWGh6I7GoerhRrabHbvTiXq9nhv5Tve6Z/mu2wsC+9qKIieIdiSzQXEEsZOxhOpYmnI3Y/MxQLIIBbAYuLnMCsV0wvjAYxdLXOuzoboEGRMwzhQ9275IVhd8ugg8i+GX5cxazu1J0GwatdtM3rE7HiUS+AEn2/YBJw+B0JyCJm4910INtpCqFs94WcjUri9xnUGhqJ1rllVHL3wk6CJPQSNFiywuUqjns7ysDBKbr2NiIkrtsDcub9vJvI7/7UqgbGKqDYTO5QpUG+Gdx8XaJXI6YW8/4Z37qIipvliqnpJTskFy+OvvmOj5qGZEZfSrM/pl73BX5mcff3sSfQAKHdejChQv6V7Y3dOtHgFFG+1dN5+xXX+uF8tlUTbQ81zElXukK4QsB42AFIrYXsbZHBiqvKCzXpEK+FHwSn8IsZAzNpJYwkINXK0Uz1gbRiD02tBXN2V97k5yEFKVTsJavqfrpGrl0Yg/3IpISLSdUn9Tn1XG478de8fXXhyVp9oaJGVTLekX5OXEXJBMuaWK+zK+7/w9B+8FP1RWRa6wSDVQk0LC6T81TWotAxOSFUz2u0ap2CfaEqd8ySH8a/TGTcnl1XJH/327M2k5AgTUSiho6V+/0aG+Amy6R9bboCf4OviIrw/Rtd+o32r26nQ84+0/</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17C1CCAEEE3952DFE0533E991F0AA29A</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZXwBG+wKVJlLdqgkZAJJhuVlS8gNKLFlR5K55OtHMuDBhGTZfXKp3eo+3X10pCuO4sj2A86BCZLQyiaOKPdza0vLGPUTxAn3KYqB+wL74+Du1rerpo8OW7TKoNfS/nER1Gbzmas3bGzp9VrT0ZsN19TBbmLLNGfObIalK+cZDCgXiIqWZpuWo5uubtYfzZpve77jVOtObapVnoFxGVu6VE1tD2rDW9pSiNQ3jPV6XV3XqglbGLZpWsbk7naMlxAjrX21qyhPxNp7f1wNAUMU4SpOYuPKKPlchdwfkwVFImOwzxV+lss0TM+QPiEni29asRfCAZ0n+bKLaEIJRhF5R6o/dyCWSVgJokXCiFjGnxZhmSqwDhusY6tOv2lGGdqFgUoIGUc6XyJrH2sEc2BAMVSeRoOW9u2yqeVbHxmifJ6wmJeX/w0P0BVESQqhzg9l7aFdHvBMp9pXgP0BxVHGyQqGiqwpwsD30wR8eajKTwZzsrklXBJ0wxU64xjeyXLXjR5ZABf/Z0BHw9kFeUZRBu0Ger7r3XT++vvX8+TX8PW9Hg5HE7btTJsPrRzAsXNuKEa7W56QsiDRbsftm/mG3yddHEUDNn16mD1fk4dguDJeQ3fS6K/cDBp3btd0p+yGf7dfRPOx5/5M05AHaN4n/eFmeNN5rPe+3weLjlhvm79Yo7d82Jr3UXafULGdeNuaWG9+bNLrdTiC1YvXebnv3jKY3oS18fTHcyfqLPvTYXrTGIbd91HvIeyg9Y9R33l1n+qrp3jynd883YZOv1WUc4S/bDuc+XE2ewEsDktFg0Gvci2nhMTXYqYsJNTnuaufKvHhAqjQ2mqX0g4/k3JHQl/OcLe2GoHXtOqecx0EbqPh9k2nZjY8z7o2g4bjNQ8is0NxArGb0DlRuZTk7mjzNUAc+xxoCExfJZlUOq59EbGHBKoM6EgegoRyeEykPHvbd4/Ns5f3tDmv8dcwns8ik3gLrTJMxD29Z8FcACtLsluS5BFgkhJQuq1ozSWvuZCteEOrTERWdYWqFDKp7EyJrG/Xm47BSZxGoIAacRJmEVTTZZo3xuC7r60jzHMrThIW+nh34j6t7fTfoQ3SJyTKgauCOiBHCWcumPqhmg9Vu2cvokP4IAuJOlyyp4IRvENS/vWHKoojBU8OZR1wF+6nhlJo47SqIlu4IrhgfHFvSzmXAtA+DOYNWdW3arZaZfks6vWawWR4Q/XDMG1jDDiTErV9TF6BGkUU46L7oAB+krywlyFmYknHAgmIJXcq+fKCB8AYuHoADCTnN5e+LkopZesEbMQ5WzeSjxeF+Mv3Dfax8pPmn/KzllP8M7EzsY7yyDrl/S8IXaiVugu2X5GDSBVL2HHwcwHOJS8biyYXWIQk1CwT8PmfipKnloYwTjIqBj0tNxxLZo5TbFPw/zh9CJOrcvFMI//+TtNJTgEM8nHHSR5f3ba+OgJ0cSS7+6SnytvoubYZBB3X8uxj5b12OkHRlBK69gfzR8tRn0453v4N</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17A981495FAA6776E05307991F0A7598</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17A981495FAA6776E05307991F0A7598</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_09034</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17A981495FAD6776E05307991F0A7598</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_6ae3bfb6-72c1-4385-8760-e28c100b5bbc</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_6ae3bfb6-72c1-4385-8760-e28c100b5bbc</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>17A97D620AAB6192E05307991F0AF5BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>17A981495FAA6776E05307991F0A7598</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:17A981495FAA6776E05307991F0A7598</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70cd5392-3df9-42d0-8e71-f9829da65bed</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>92b8758a-441f-49f2-94a8-40796e4ad166</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a5e0dd34-a05a-448f-94b5-6843d1581ef9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c36a0ce5-45d3-4a4b-9caa-727aebcdb7ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>29067bd3-a7a7-45da-a337-6695ae57ea51</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00056_FUNC_UVTC_UserName_RequestorUser_active_RequesteeUser_active_with_userlinkconsent_exists_ResetPassword_Role_Portal_CS_200_OK_P2" searchProperties="true" id="9918ac30-b232-467e-9392-1fbfec7acfbb"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="dbec3d09-8f83-4417-ac4f-8d475b892917"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportal"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdportalCS"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="6a784f47-b006-48b9-b6d5-855978e86145"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="6e02ce1f-fdd2-4b74-9c2b-ff2ba9c8b4a0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU" id="8cc56ee2-8025-42d9-8c39-6baecbed24cd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call PolicyCreateULC_API" id="0dfffff2-64ab-407f-add3-d481284c9e05"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateULC_API");

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Portal_CS" id="8e2eb254-b6ec-4469-9c1d-83630c4ee55e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportalCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="459b78b1-fb5e-4644-b6e8-755a48e34a2a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU+o6FP4rTH08U9IWRegIM+WmHEHdoKj75UxMVyHYJqVJufjrT1KgAqKHfZ46WV351rcu+ZIrgaPQcT0hIJGUs8IyCplwM2vNSBPmciyocBmOQLiSuEOv33OdouXi7Raj0G3VjH+cAFdtsC7MarVsmedWxTaxg9/MauWy4gRB9bJatZWrECl0mZCYyZrhWPaFaZVN6+LRqrjOuetYReey+tsojCARClu5FC1jQ2opasZEythFaLFYFBelIk/GyLEsG730e0MygQgb9at1RlmgpL7xJ0UfCIQhKRIeoSu053PlC3dIxwzLNIFNLP+7WBayqkj5+IKOz4x8L/hdFvBs2cSMM0pwSD+wrk8f5IT7BS8c84TKSfRtEralgU1YEpPY5+zMQPvUTgTaY5gIbIoJtjdYAwggAUag8DTo1oyz07qWbX1MMBMBTyKxv/wzPsDmEPIYfFNs09pQOx3wSKXqV0DcLiNhKugc7vSwxpiA2HQTyOlQhYcEArrsUaEGdCk0O7RL72C5rkaLjkHI/9OgneasQUY4TKH+MPT+sl7Tu9lk3GH9LiGdj0q3PEXs/rWWEdh1zgx5a9fLg6HMh2i94y7tlJyba6f9/hB1/k4XdteZObicDNrPzza8LsLWink4GF77o9/ezbJMvdfex9Nb0J5VFu27WXl0H6Qvt+83l9XI+/Vr9fz6LM9XPSi1B1UfPaWPz7wflZ3RrdWIUZOO4+fJ9HbWuH699yY3DvRR8NIYDYOB9/DRmQZ3aa95P2pfB5XOLLTL14vVdNCPw1K5ja4Tr5ans8N/37Y988P0bQpEbpd6DLqtQkd1CcufxUxbqG8Gmasba/EREpg06nqX1g43VXJHfVf1cL22L5t2q9Gwm1a50XAcp21dlEotdVw6lqcWzlZk1iwOKDY5C6iOpSV3PTY/EySRK4D5kJhzniqlE8YPiC0scaHLBuoQcCbgkSt5tsWUzyvhO+e44thx6T22ceDDdBIahTsu79l94gUSkj1Rtu09UR4AoTEFrdx6sIWabCFVMWZ4nsrQLs5xkUGqtD3RMqu2Vi6QoFEcgqaKIu6nIRTjSZyVBon11zExEZmVChLzROIwOxHo2/wO/21LoXx8qh2ETqkBqp1w5JKxt/l8ybt89DLawnupT/UBU3WVCSVrJvu/PsdFz0k+K3liRNhb7vmWP4Q4AoB+4IcOS5PH8+d0J/r2Nlf3glKS+ra/M2wXZ8V0Pk+zlp6fl1Ci4JEuKrIcNASSKq1bPfJ3YChHQSddLDnxg+C5fZ9iKidsKLGESI1gIVue8JIYgtAvia46PMtTnyl7IVXpJCzlMVszVK8gzfjHhxJxifZT5gf1WfDE/+zYEaydOCpP9ZCQlI31Sl8qq2/Gg3AFS5Uc8mQX/BjAseD7xrzIORepBuotlfD9n4LWuZqBCeEpk92WkRl2tTfjKVcxuJ9OX2Ayec/fe/S/H3wmzUaAgHolCprh62vb1UeAjXf0exP0Gwn3fpLwfXb1L+avlp06Hc54/V8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17C1DBB1C06AB222E0533D991F0A2E02</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17C1DBB1C06AB222E0533D991F0A2E02</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17C1DBB1C06BB222E0533D991F0A2E02</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17C1DBB1C06BB222E0533D991F0A2E02</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150605_015739</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150605_015744</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150605_015744</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150605_015744</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbU+o6FP4rTH08U9IWRegIM+WmHEHdoKj75UxMVyHYJqVJufjrT1KgAqKHfZ46WV351rcu+ZIrgaPQcT0hIJGUs8IyCplwM2vNSBPmciyocBmOQLiSuEOv33OdouXi7Raj0G3VjH+cAFdtsC7MarVsmedWxTaxg9/MauWy4gRB9bJatZWrECl0mZCYyZrhWPaFaZVN6+LRqrjOuetYReey+tsojCARClu5FC1jQ2opasZEythFaLFYFBelIk/GyLEsG730e0MygQgb9at1RlmgpL7xJ0UfCIQhKRIeoSu053PlC3dIxwzLNIFNLP+7WBayqkj5+IKOz4x8L/hdFvBs2cSMM0pwSD+wrk8f5IT7BS8c84TKSfRtEralgU1YEpPY5+zMQPvUTgTaY5gIbIoJtjdYAwggAUag8DTo1oyz07qWbX1MMBMBTyKxv/wzPsDmEPIYfFNs09pQOx3wSKXqV0DcLiNhKugc7vSwxpiA2HQTyOlQhYcEArrsUaEGdCk0O7RL72C5rkaLjkHI/9OgneasQUY4TKH+MPT+sl7Tu9lk3GH9LiGdj0q3PEXs/rWWEdh1zgx5a9fLg6HMh2i94y7tlJyba6f9/hB1/k4XdteZObicDNrPzza8LsLWink4GF77o9/ezbJMvdfex9Nb0J5VFu27WXl0H6Qvt+83l9XI+/Vr9fz6LM9XPSi1B1UfPaWPz7wflZ3RrdWIUZOO4+fJ9HbWuH699yY3DvRR8NIYDYOB9/DRmQZ3aa95P2pfB5XOLLTL14vVdNCPw1K5ja4Tr5ans8N/37Y988P0bQpEbpd6DLqtQkd1CcufxUxbqG8Gmasba/EREpg06nqX1g43VXJHfVf1cL22L5t2q9Gwm1a50XAcp21dlEotdVw6lqcWzlZk1iwOKDY5C6iOpSV3PTY/EySRK4D5kJhzniqlE8YPiC0scaHLBuoQcCbgkSt5tsWUzyvhO+e44thx6T22ceDDdBIahTsu79l94gUSkj1Rtu09UR4AoTEFrdx6sIWabCFVMWZ4nsrQLs5xkUGqtD3RMqu2Vi6QoFEcgqaKIu6nIRTjSZyVBon11zExEZmVChLzROIwOxHo2/wO/21LoXx8qh2ETqkBqp1w5JKxt/l8ybt89DLawnupT/UBU3WVCSVrJvu/PsdFz0k+K3liRNhb7vmWP4Q4AoB+4IcOS5PH8+d0J/r2Nlf3glKS+ra/M2wXZ8V0Pk+zlp6fl1Ci4JEuKrIcNASSKq1bPfJ3YChHQSddLDnxg+C5fZ9iKidsKLGESI1gIVue8JIYgtAvia46PMtTnyl7IVXpJCzlMVszVK8gzfjHhxJxifZT5gf1WfDE/+zYEaydOCpP9ZCQlI31Sl8qq2/Gg3AFS5Uc8mQX/BjAseD7xrzIORepBuotlfD9n4LWuZqBCeEpk92WkRl2tTfjKVcxuJ9OX2Ayec/fe/S/H3wmzUaAgHolCprh62vb1UeAjXf0exP0Gwn3fpLwfXb1L+avlp06Hc54/V8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17C1DBB1C06AB222E0533D991F0A2E02</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMvKNi12BKgJhIZNMEiCXmZctRW5AwUiOJBPC169kwAMMybL75FK7dfr0RUc6l3ieeFFLShCKclZazhMmo9zasDLBIo4llRHDc5CRItGwdXMdeWUnwtstVqnfaVh/Ox4EdT/AthdUa3bgjX0be1Vi++D7QaUKVRL62lXKDPpMKsxUw/Ict2I7VdsJRo4f+U7kBmXH9X9ZpUcQUmNrl7JjbUgtZcOaKpVGCL2/v5ff/TIXE+Q5joueb66HZApzbDXP1xnlgURz40/KMRBIElImfI7O0Z7PeSyjIZ0wrDIBm1jxZ7Ec5IRI+8SSTr5ZxV6I+2zM82UbM84owQldYVOfG1BTHpdayYQLqqbzT5NwHQNsw5LYxA3YNwvtUzsRaI+hkNiWU+xusAYwBgGMQOlh0G9Y307rWr51JDCTYy7mcn/53/gAW0DCU4htuU1rQ+10wCOVap4DifqMJJmkC/hhhjXFBOSmm0BOhyrdCRjT5TWVekCX0rBDu/QOlutqdOgEpPo/DdppzhrkEScZNP17uJuls/fl87D9mv4lQjq7isX9w1mbNHICu865oWjtenkwlMUQrXewSuWicnb18wHxQf2W6XN835usWEgH/v2sc+W+ei38fTjFVPHeAxo/u7MQP6xazL3r9dDs8qzORyR7enp8xpe4s/iZMOYt3cfXWhfSp1VX9Ubogs5WTPUgbCerrHf58iFfnnvD29EV6d4Oa4OnzsX3uHXb7X78EsPBK3V8GtfFtfpZXf64cX6htzP1zJxk4tUbRTo7/Pdt2zM/zF5egajt0oxBv1Pq6i5h9bWYGQuN7XHuGqVGfKQCpqym2WW0I8q03NE40j1cr91aK6x1qp5z4bWrbuhdOhXfqYWh23Va3cpFaysyaxYHFNucjamJZSR3PTZfEyTzSAKLQdgLnmmlk9YXiB2scKnPBvoQcCZhxLU8C2ehsB9MVyueuQF+eVt6q6pYCK3JP7i6ZbeiNVYg9jW5uqfJAyA0pWCE28y11IMtla7FG15kKnHLC1xmkGlpF0ZlIy+oV5Ck8zQBwxTNeZwlUE6naV4ZJNdfz8ZE5lYqScqFwkl+INCn6R3+21ZC+8TUOEiT0gXobsKRO8bZ5vN53uFu3lv4VhZTc750WZWgZM1k/9fvaTFjUoxKkRiR7pZ7seU/QhwBQF/wQ4elKeLFC7oTfXuZ62tBC0lz29837JbfytlikeUtDQIfCQ2PTLGQ46EhkExL3ceIz4ChAgWddK8UxA+CF/Z9ipmasqHCCuZ6BEv58oSHxBCkeUj09dlZnvpK2QupS6dgqY7Z2ol+BBnGX76TSESMnzbf6c87F/Hvjh3B2omj89TvCEXZxKzMnfLxyXgQrmGpVkMudsGPARwLvm8silxwUXqgXjIFn/8pGZlrWJgQnjHV71i5YVd6c57qI4Xot9MfMLm6F889+u/vPZvmI0BAPxIlzfHNrR2ZI8AmO/K9CXqo4HU3CCvdTqdaq1V3FbxWCetFUfbYNf8w/2nZqdPhjDf/AQ==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17A97D620B2C6192E05307991F0AF5BA</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17A97D620B2C6192E05307991F0AF5BA</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_090334</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17A97D620B2D6192E05307991F0AF5BA</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bd8c7daa-37c3-4b16-b19f-2fe6d50d25bd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00057_FUNC_UVTC_UserName_RequestorUser_active_RequesteeUser_active_with_userlinkconsent_does_not_exists_ResetPassword_Role_Portal_CS_200_OK_P2" searchProperties="true" id="8531a09d-7ab8-4103-8a7d-7b038d9c6b29"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="24bdeedd-4a1a-4b4d-9803-39e062c8ebfb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportal"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdportalCS"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="0e3f33fb-7ef5-4e0f-80e6-ae9b1e1a3439"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="6cfc1d29-c8fd-4bd1-80b8-9d2605b4947f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU" id="24cb8f35-3fe2-46cd-9bec-2e40d64f0c6d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Portal_CS" id="9f913947-0375-4ee3-ab57-37d39934e701"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportalCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="e365a83f-83e0-4e61-996d-e97d9142c1fd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtc6I6FP4rDvtxBwOotDLVGav1Xrcv26rddvvlDoYDxkJCSUDl198ElapVr3s/MTmcPOc5L3mSK+5GoeV0OIdEEEYriyik3CmsLS1NqMNcTrhD3Qi4I7Az6tzfOVbVcNzNFq0y6LW0f/wavjRqjaZuA27odbNh6U1rYurYa/gN2/YucN2TrpynMKBcuFS0NMswG7ph60ZjbFw6Vt2pWVXLqr9plV+QcIktXaqGtia14C1tKkTsIDSfz6vzWpUlAbIMw0Sv93cjPIXI1dpXq4yKQEl77Y+rHmAIQ1zFLEJXaMfnyuPOiATUFWkC61jesVgGMppI+nicBN+0ci94A+qzYtl1KaMEuyHJXVWfexBT5lU6YcASIqbR0SRMQwHrsMA6Nuv0m4Z2qZ0JtMMw4a7Op665xhqCDwlQDJXn4aClfTuva8XWceJS7rMk4rvLP+MDNIOQxeDpfJPWmtr5gAcq1b4C7AwoDlNOMnhQwxq7GPi6m4DPh6o8JuCTxR3hckAXXLFD2/T2lqtq9EgAXPyfBm01ZwXyyw1TaPu/+c3jjFGLzWLzY9n5mL3T+3w2GS5xqyCw7VwYytaulntDWQ7RakeQd8zfWe+yfxvmYlibvKVPi8R8QN97g8zs5z/m0/H13H5+uhXD5Yu/fL99te7s3PNoLKbB/djqsfzl4SILatO4O2LjGN3WDBLnP6L07wGasNdm567b5OSx03i2ojBEFg6ferUbm11M+8tZnV/ar49BkDf69O3N6GWD3uQveHv/fp2jfiLm8AJPPjEn00xg1irT2eK/a9uc+VE6mQEWm6Uag0Gv0pddcsVpMVMW4ul+4erESny4ACq0ttqltMNJpdwRz5E9XK3Ni67Z7Vl10zabtt1s3BiNWu2m2TT7Ruf6wjA2IrNisUexy6hPVCwluauxOU0QRw4H6kGiZyyVSse1E4g9V7iVAR3KQ8AohzGT8vzhBzOb5WLSzHNzQt6zaJbmdjqfaJUHJn7Sn0nHF5DsaLJp7mjyEDCJCSjhVnPN5WBzIWvx4WapCM1q5lYppFLaE6WycutlA3ESxSEopihiXhpCNZ7GRWUQX30t3cW8sBKOY5YINywOBDqa3v6/TSWkj0eUA1cpXYPsJhy4Y6xNPl/ytg/eRRv4TuoRdb5kWUVC8IrJ7q/PaVFjUo5KmRjm5oZ7ueUPIQ4AoBP80H5pynheRraiby5zeS1IIWlv+vvhmtWPappladHSer2GEgmPVFGRYaER4FRK3XLM3oGiEgWdda+UxPeCl/ZdiqmY0pFwBURyBCvF8oyHxAi4ekgM5NlZnPtK2QkpSydgIQ7ZuqF8BCnGJ99J2MHKT5of5WfOks/ED2FtxZF5yneEIDRQK3WnLI+MB2YSlkg1ZMk2+CGAQ8F3jWWRSy5CDtQkFXD8T0XJXEtzMWYpFYOeVhi2pbfgKZYxOJ9OX2AKdS+fe+S/33s6KUYAg3wkclLgq1vbUUeABlvyvQ56RMEvTyn4Lrv2F/NXy1ad9me8/S8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17C1CD2416186695E0533E991F0AB700</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17C1CD2416186695E0533E991F0AB700</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17C1CD2416196695E0533E991F0AB700</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17C1CD2416196695E0533E991F0AB700</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150605_015750</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150605_015757</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150605_015757</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150605_015757</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtc6I6FP4rDvtxBwOotDLVGav1Xrcv26rddvvlDoYDxkJCSUDl198ElapVr3s/MTmcPOc5L3mSK+5GoeV0OIdEEEYriyik3CmsLS1NqMNcTrhD3Qi4I7Az6tzfOVbVcNzNFq0y6LW0f/wavjRqjaZuA27odbNh6U1rYurYa/gN2/YucN2TrpynMKBcuFS0NMswG7ph60ZjbFw6Vt2pWVXLqr9plV+QcIktXaqGtia14C1tKkTsIDSfz6vzWpUlAbIMw0Sv93cjPIXI1dpXq4yKQEl77Y+rHmAIQ1zFLEJXaMfnyuPOiATUFWkC61jesVgGMppI+nicBN+0ci94A+qzYtl1KaMEuyHJXVWfexBT5lU6YcASIqbR0SRMQwHrsMA6Nuv0m4Z2qZ0JtMMw4a7Op665xhqCDwlQDJXn4aClfTuva8XWceJS7rMk4rvLP+MDNIOQxeDpfJPWmtr5gAcq1b4C7AwoDlNOMnhQwxq7GPi6m4DPh6o8JuCTxR3hckAXXLFD2/T2lqtq9EgAXPyfBm01ZwXyyw1TaPu/+c3jjFGLzWLzY9n5mL3T+3w2GS5xqyCw7VwYytaulntDWQ7RakeQd8zfWe+yfxvmYlibvKVPi8R8QN97g8zs5z/m0/H13H5+uhXD5Yu/fL99te7s3PNoLKbB/djqsfzl4SILatO4O2LjGN3WDBLnP6L07wGasNdm567b5OSx03i2ojBEFg6ferUbm11M+8tZnV/ar49BkDf69O3N6GWD3uQveHv/fp2jfiLm8AJPPjEn00xg1irT2eK/a9uc+VE6mQEWm6Uag0Gv0pddcsVpMVMW4ul+4erESny4ACq0ttqltMNJpdwRz5E9XK3Ni67Z7Vl10zabtt1s3BiNWu2m2TT7Ruf6wjA2IrNisUexy6hPVCwluauxOU0QRw4H6kGiZyyVSse1E4g9V7iVAR3KQ8AohzGT8vzhBzOb5WLSzHNzQt6zaJbmdjqfaJUHJn7Sn0nHF5DsaLJp7mjyEDCJCSjhVnPN5WBzIWvx4WapCM1q5lYppFLaE6WycutlA3ESxSEopihiXhpCNZ7GRWUQX30t3cW8sBKOY5YINywOBDqa3v6/TSWkj0eUA1cpXYPsJhy4Y6xNPl/ytg/eRRv4TuoRdb5kWUVC8IrJ7q/PaVFjUo5KmRjm5oZ7ueUPIQ4AoBP80H5pynheRraiby5zeS1IIWlv+vvhmtWPappladHSer2GEgmPVFGRYaER4FRK3XLM3oGiEgWdda+UxPeCl/ZdiqmY0pFwBURyBCvF8oyHxAi4ekgM5NlZnPtK2QkpSydgIQ7ZuqF8BCnGJ99J2MHKT5of5WfOks/ED2FtxZF5yneEIDRQK3WnLI+MB2YSlkg1ZMk2+CGAQ8F3jWWRSy5CDtQkFXD8T0XJXEtzMWYpFYOeVhi2pbfgKZYxOJ9OX2AKdS+fe+S/33s6KUYAg3wkclLgq1vbUUeABlvyvQ56RMEvTyn4Lrv2F/NXy1ad9me8/S8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17C1CD2416186695E0533E991F0AB700</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdU+o6FP0rTH08U5IWEOkIMwiiHEA9gniOL3dCugvRNsUkpeivv0mBCohezn3qZHdn7bU/spJzSaLQ9ZpSglAs5oVlFHLpZda6lQjuxUQy6XESgfQU9YbNQd9zi9gjmy1WoduuW/+cnUGVViYluzaZULtMahN7AmVs1wJSnlRwUPEp0a5SJtDlUhGu6paLnYqNT21cHuGSV8Je6bRYreInqzAGITW2dilia01qKevWTKm5h1CapsW0VIzFFLkYO+j3oD+kM4iI1ThfZZQFEo21Py36QCEMaZHGETpHOz7nvvSGbMqJSgSsY/lfxcII15D28SWbnlj5XvC7PIizZYvwmDNKQvZOTH0GoGaxX2iG01gwNYu+TMLBBtiGJbWpU+YnFtqldiTQDkMhiS1nxFlj3UMAAjiFwsN9t26dHNe1bOtIEC6DWERyd/l3fIAvIIzn4Ntyk9aa2vGAByrVOAfqdTkNE8kWcGOGdU4oyHU3gR4PVbgTELBln0k9oEtp2KFtenvLVTXabApS/Z8GbTVnBTImYQKN5XOPt/n7MO6nHTG77qfNajoCmf5+l/WMwLZzZshbu1ruDWU+RKsd1xcvV+NqOE3+RPeLtF0Zv3RukLjijw7p+W5v1qslaXrmsAcoQfO0795dqIdu2ir3hhGJ0GgU1sZpKEezwZXbukY/EUW37nP3alkdjWBQcyuRO/jx8+zhAeGrdkdMplzI8WVQDsiPpwW9TH8NorDX8n/hDvzxX/2x/+i3ui/9t2SAfz6mPnbfnyaPt3AfvGJcz9PZ4r9r25z5YTJ5Bqo2SzMG3Xaho7tE1PdiZizMt4PM1Zsb8ZEKuLIaZpfRDi/Rcsd8T/dwtXaqzVq1feriFq6cOjX3EldKuFqrOR3c7FQumhuRWbHYo9iKecBMLCO5q7H5niCNPAncB2Ev4kQrnbS+QWwTRQpdfq8PQcwljGItz075bVF95/JZ4sXSmb5MUzcuVSYuC6zCTaxu+a1oBgrEriif7ojyPVA2Z2CU2wy21JMtlS7GK1kkKnSKC1LkkGhtF0ZmPbd8VkGSRfMQDFUUxX4SQnE+m2elQXL1dW1CZWZlks5joUiYnQj0ZX77/zal0D4+Mw7SpHQBup1w4JJxN/l8nXdtO+8NfDPxmTlguq5KMLpisvvrY1zMnOSzkidGpbPhnm/5S4gDAOgbfmi/NHk8f8G2om9uc30vaCVpbPr7SpziazFZLJKspeVyCQkNj0yxEHbREGiite5tFL8ARzkKOupiyYnvBc/tuxQTNeNDRRREegQL2fKIl8QQpHlJdPXhWR77TNkJqUunYKkO2VqhfgUZxt8+lKhHjZ823+lPGgv/o2MHsLbi6Dz1Q0IxPjUrc6m8fTEeNNawTMthLLbBDwEcCr5rzIucc1F6oCaJgq//FIzO1S1CaZxw1W1bmWFbezOe6m0O3ofTJ5hM3vP3HvvvB5/NshGgoF+JkmX45tr2zBHg0y39Xgc9KOEXF5ffSfguu8Yn82fLVp32Z7zxLw==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17A97D620C056192E05307991F0AF5BA</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17A97D620C056192E05307991F0AF5BA</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_090357</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17A97D620C066192E05307991F0AF5BA</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a4e513e3-90b8-432f-bd35-c1166cd449c9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00058_FUNC_UVTC_UserName_RequestorUser_active_RequesteeUser_active_with_userlinkconsent_exists_ResetPassword_Role_Retailer_CS_200_OK_P1" searchProperties="true" id="af8643b5-53c7-46df-b14e-9e83c85c73f5"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="a8285bbb-ffec-4083-85dc-d6480ef65d08"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="cad146e4-fdbf-4508-a512-d617be96e30a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="8ecfa0dc-c358-4c1c-8766-f2e2651d794c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU" id="35306ad2-8209-4e91-8275-a865aebaa3e6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call PolicyCreateULC_API" id="7e109887-638c-4baa-884b-70b3e4896808"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateULC_API");

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="c01af4b6-0138-4f53-8119-26683a288f01"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="42fa9472-5b57-4941-9810-b1d1cc6582cc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMr5gbq5AFdfEMyFhMEk285IScgPa2LKxZAP5+pUMOECAZffJpXbr9OmLjnTLUOCbdosxiDkJaWEV+JTZmbWhJDG1Q8QIsykKgNkc225r8GCbRd1Guy1Kwek2lPeKh4zypGapYNYt1cJWSZ3UyqBWcR2MUtXyUM0Srowl4FDGEeUNxdSNsqpXVL081mu2adlWqVgtGX+UwgvETGALl6KubEmtWEOZcx7ZmrZcLovLUjGMZ5qp64b21+DBxXMIkNK83WSUBYqbW39c9ACD7+MiDgPtVjvwufWY7ZIZRTyJYRvLOxdL1/S6Jnw8RmY/lHwveA6dhtmyg2hICUY++USyPgPg89ArtPxZGBM+D84mYegSWIUVVrFh0R+KdkjtSqADhjFDKpsjY4s1ginEQDEUnkdOQ/lxXdeyreMYUTYN44AdLv8bH6Ap+GEEnsp2aW2pXQ94olLNW8C2Q7GfMJLCoxzWCGFg224Cvh6qMIxhSlYPhIkBXTHJTtund7TcVKNLZsD4/2nQXnM2IC/IT6CJ66+LQc/q6p+xEfWextbL4PGtXzZ+v/xuZAT2nTND3trN8mgo8yHa7OA3Xjpu659vw2GPf9z1l64RR7RHrYqrh6/z0cfb7Mkc4JqzdO/Q6M1N7+h6mKyX1TceWHevcds1fzp/rAEPcC/UB84Q3/3UJ/1K2/v1OBs+a9Nknpa8zuv9HAUrhFv+sPtaZal1vyAupaubaKyNwvJjEOgfwWJAel2t+txm9ze6Gfn92hjz2gJ7CycxV7iRp7PH/9C2O/NuMvkbMN8t5Rg43UJfdAnxy2ImLcRTp5mrHUnxYRwoV5pyl9QOOxFyRzxb9HCzNqodo9M1LaNa7Vcq9XJPL5dKvXrd6OutdlXXdyKzYXFEsRPSKZGxpORuxuYyQRzYDKgHsZqGiVA6plxA7CKOCg4diUMQUgbjUMizEUwoj/CkmpJarbz2jDSZAtJLoBQeQ/5En+LWlEN8oMmGcaDJI8AkIiCFW841E4PNuKjFAqUJ941iiooUEiHtsVRZsbVW1hgJIh8kUy0IvcSHYjSPsspobPM1VYRZZh31xtlpO5vX8b9dCYSPR6QDk7m0QbQRTlwupV0i5xO29hPewbcSj8iDJerJY4I3TA5/fY2JnI98RkRG7x333djxzt2v3v59p3aBlHZcjzyQl5K9sLurW1wCQjaau24ukFFcFJM0TbIGWlZJiwW8Jiuk6abmAk6EsK3H4QdQLUfRrrpFcuJHwXP7IcWEz6nLEYdADFwhW17xbHCByWeDI07K6to3yUFIUToOK37K1vHFk0cyvvgqwjaWfsI8FJ9lGHtfHTuBtRdH5CleDZzQmVzJG2R9Zi5wKGCJ0L4w3gc/BXAq+KExL3LOhYuBmiQczv8pSFFrKAjjMKHc6SqZYV9oM558HYH95fQNJtPy/HFH/v11p5JsBLAQLeGf4cs72pZHgM72xHob9Ixe9y7p9SG75jfzd8tenY5nvPkP</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17C1CD24177E6695E0533E991F0AB700</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17C1CD24177E6695E0533E991F0AB700</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17C1CD24177F6695E0533E991F0AB700</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17C1CD24177F6695E0533E991F0AB700</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150605_01583</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150605_01587</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150605_01587</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150605_01587</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMr5gbq5AFdfEMyFhMEk285IScgPa2LKxZAP5+pUMOECAZffJpXbr9OmLjnTLUOCbdosxiDkJaWEV+JTZmbWhJDG1Q8QIsykKgNkc225r8GCbRd1Guy1Kwek2lPeKh4zypGapYNYt1cJWSZ3UyqBWcR2MUtXyUM0Srowl4FDGEeUNxdSNsqpXVL081mu2adlWqVgtGX+UwgvETGALl6KubEmtWEOZcx7ZmrZcLovLUjGMZ5qp64b21+DBxXMIkNK83WSUBYqbW39c9ACD7+MiDgPtVjvwufWY7ZIZRTyJYRvLOxdL1/S6Jnw8RmY/lHwveA6dhtmyg2hICUY++USyPgPg89ArtPxZGBM+D84mYegSWIUVVrFh0R+KdkjtSqADhjFDKpsjY4s1ginEQDEUnkdOQ/lxXdeyreMYUTYN44AdLv8bH6Ap+GEEnsp2aW2pXQ94olLNW8C2Q7GfMJLCoxzWCGFg224Cvh6qMIxhSlYPhIkBXTHJTtund7TcVKNLZsD4/2nQXnM2IC/IT6CJ66+LQc/q6p+xEfWextbL4PGtXzZ+v/xuZAT2nTND3trN8mgo8yHa7OA3Xjpu659vw2GPf9z1l64RR7RHrYqrh6/z0cfb7Mkc4JqzdO/Q6M1N7+h6mKyX1TceWHevcds1fzp/rAEPcC/UB84Q3/3UJ/1K2/v1OBs+a9Nknpa8zuv9HAUrhFv+sPtaZal1vyAupaubaKyNwvJjEOgfwWJAel2t+txm9ze6Gfn92hjz2gJ7CycxV7iRp7PH/9C2O/NuMvkbMN8t5Rg43UJfdAnxy2ImLcRTp5mrHUnxYRwoV5pyl9QOOxFyRzxb9HCzNqodo9M1LaNa7Vcq9XJPL5dKvXrd6OutdlXXdyKzYXFEsRPSKZGxpORuxuYyQRzYDKgHsZqGiVA6plxA7CKOCg4diUMQUgbjUMizEUwoj/CkmpJarbz2jDSZAtJLoBQeQ/5En+LWlEN8oMmGcaDJI8AkIiCFW841E4PNuKjFAqUJ941iiooUEiHtsVRZsbVW1hgJIh8kUy0IvcSHYjSPsspobPM1VYRZZh31xtlpO5vX8b9dCYSPR6QDk7m0QbQRTlwupV0i5xO29hPewbcSj8iDJerJY4I3TA5/fY2JnI98RkRG7x333djxzt2v3v59p3aBlHZcjzyQl5K9sLurW1wCQjaau24ukFFcFJM0TbIGWlZJiwW8Jiuk6abmAk6EsK3H4QdQLUfRrrpFcuJHwXP7IcWEz6nLEYdADFwhW17xbHCByWeDI07K6to3yUFIUToOK37K1vHFk0cyvvgqwjaWfsI8FJ9lGHtfHTuBtRdH5CleDZzQmVzJG2R9Zi5wKGCJ0L4w3gc/BXAq+KExL3LOhYuBmiQczv8pSFFrKAjjMKHc6SqZYV9oM558HYH95fQNJtPy/HFH/v11p5JsBLAQLeGf4cs72pZHgM72xHob9Ixe9y7p9SG75jfzd8tenY5nvPkP</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17C1CD24177E6695E0533E991F0AB700</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZrc7I6EP4rDv3YQQJVEaY6g9qe2ott1dd2+qUTw6I5QqAkePv1J0Glai/Hcz4xu2x2n73kyV5yHIWW63EOqaAxKy2jkHE31za0LGVujDnlLsMRcFcQd+A93LtWGbl4d0QrdTsN7b1et2yfYKyPcQ3plfGFqWMLjfWg6geBA7ZFbCJNOc+gy7jATDQ0C5lVHdV0VBmiC/cCuVWn7CD0ppVGkHLpW5qUkbYFteQNbSpE4hrGYrEoLy7KcToxLIRM4/XhfkCmEGGtebnJKA+UNrf2pOwDgTAkZRJHxqVxYHPpc3dAJwyLLIVtLP+nWMhAjiFtfE4nZ1pxFvwuC+JcbGMWM0pwSNdY1ecBxDT2S144iVMqptGPSZhIOdZhSXRiVtiZZhxCO9HRAcKUY51Psbn11YcAUmAESn/63YZ2dlrX8qPDFDMexGnED8X/hgfYHMI4AV/nu7S20E53+E2lmpdA3C4jYcbpHHpqWBNMgG+7CeR0V6WnFAK6vKdcDuiSK3TGPrwjcVONDp0AF/+nQXvN2TgZ4TCD5mzWh9fr5WDdnfHAOPeiBf6w77N25MWNHMC+ca4oWrsRj4ayGKLNidvHeIUdB8Ed+1i9PlfvoB54qMOYET/dL0d1Z94b3J4HL71OYhovD2vnqj5dVEw/mJPFely1+5OAZs+zN4tG3fO19xcekH7w+DgS0KI2D26mb9WF8MzZ821rSN+iG3H9hFt1uwuEtntiOR6t1yadObeR+FNreaOb1tP9KuHQS4L6mD3ctWmnZfYen4IXdtUo0tnDf6jb3flBNv4biNiJagy6ndK17BIWv5OZ0lBfD3JTN1HkwwUwoTXVKcUdbibpjvqu7OFGNm3PqZsVp2YiVLPt2hWqXiDbccxr5NlVp74jmQ2KI4jtmAVUxVKUuxmb3wGSyOXAfEj1eZxJpuPaLx47WOBSl/XlJYgZh2Es6dmM5uPEYXRMw2RlLueo/rEIzFW4XmilXiwe2WPqBQLSQ1KuHZByX7YvoaCYWw02l5PNhSzGB55nIjTLc1xmkEluTxXNulalXjU4jZIQFFQjiv0shHIyTfLSGHzztXRMeK7tXw3z6/ZjYsf/djWQNj5VBlzl0gLZR/jmdansEvk5YWc/4Z17L/OpulmyoCKlZIPk8NfnnKgBKYZEZvTeHrybO9yF+cnHv540fgFlHNejCOTP6V7Y3dstXwHJG81dNz+wWf4oZ/N5ljewUrkwUuneUBUykGUMgGSS2VbDeAbMKLwYJz0jBfCj4IX+EGImpmwgsIBIDlwpF0/YGwbA1d7QlVdleepSchBSlk7AUnyna4dy51GIf12LiEuUnVQ/yc8iTv3Pjn3jay+OzFOuDYKyiZLUE7L6YS5ILN1SSX5xuu/8OwffBT9UFkUusAg5UONMwM9/SorVGhomJM6Y6Ha0XLHPtDlOsUrA/TT64iYn82K7o/++3uk0HwECcifkNPevHmlXXQE22WPrbdBjwrY7NQu1rXrNdKx9wr6utryiKAfoml/UXzV7dTqe8eY/</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17A9814961006776E05307991F0A7598</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17A9814961006776E05307991F0A7598</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_090419</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17A9814961016776E05307991F0A7598</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>28a7f95d-3e6f-4995-ab24-ff1b623a128f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00059_FUNC_UVTC_UserName_RequestorUser_active_RequesteeUser_active_with_userlinkconsent_does_not_exists_ResetPassword_Role_Retailer_CS_200_OK_P1" searchProperties="true" id="02bf3177-f24e-4dff-85b0-b7f225ec4bcb"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="02ee4b39-1af7-483b-aec1-b2316e2d37ca"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="e5b17130-f95d-411c-96bc-49727f504cbc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="de69afc6-c63d-4fd9-9556-2064dd968239"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU" id="71a9f399-e72f-43e2-ab33-67978048cbc6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS" id="17490722-151d-4003-8321-41640fe876c4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="8f7a12d1-cead-4b63-8fd8-14e47fbae530"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZZc9o6FP4rjPuYMd4peAIzXCAdmrVsQ/PSUeSDrdSWHEl2SH59JRNcICSXe588Oj7LdxZ9OucCZakb9oUALgmjjXWWUhFW0q5RcBoyJIgIKcpAhBKH0/71Veg27RBtTYzGeNg1frUBges/OGbnob0yfYxXJuoEnokgWHnItd12YCtVIQoYUyERlV3DtZ3AtFumHczsduj6YeA3nbZ3bzQWwIXyrVSaymoDai26RiJlHlrW8/Nz89lrMh5brm071vL6aooTyJDRO99kVAXivTd93IwAQ5riJmaZdW7t6ZxHIpySmCJZcHiLFX0Uy7bsjqV0IkHiL0ZtC9GYrlh1HCDKKMEoJa9I1+caZMKiRj+NGScyyT5MwrG1YxPW2MSOT78Y1j60Ex3tIeQCmSJBzpuvCayAA8XQmE/GXePLaV2rTGccUbFiPBP7x/+GB2gJKcshMsU2rTdopzs8UqneOeBwTHFaCFLCjR7WHGEQb90EfLqrxh2HFVlfEaEGdC00OmsX3sFxU40hiUHI/9OgneZsnCxQWkCPPw/xV7/Mr+fOrCX6r0LC1etl/htlrFsB2FWuBHVrN8eDoayHaGPBVl7rajZuyaRIJq1WPvvBlu02u/ye5csJvvy2wLIc3UQLe5hOvZFrj8/uO30+efq5GM2kt1h6949PS3H3nZQX5WN+m36dk2vC0/jnchIj6+Lx7Gz+Ki23dT9v8ThwW8nt3D3zXm4SXi5ia56eiYckmYxal+zVv42WhLXFt9FaXo4COXuZLG/sxM3urmhuyR/dOp0d/Puy7Z2fFg+PgOX2qMdgPGxcqC4h+TmZaQmJzFWlGuaafFTFqTR62kpzR1gouiNRqHq4OTtfB6qXg9HI8W3bC7yRHXjesNNxLux+e+DbW5LZoDiAOGB0RXQsTbmbsfkcIM5CATQCbpasUEwnjE88DpFEjTGdqEvAqIAZU/TsBK8vj4/AAyydyMFxkritTvwQ0bXRuGHylt7y/koC3yNlx9kj5QlgkhPQzK0HW6jJFlIV4wmVhUydZomaFArF7VzTrDJtB5YgWZ6ChmplLCpSaOZJXpXGEpuvayIsKulkNKuu24eJHf7b1kDpREQrCJ3LP6D6CEdeF3+byMcJ+7sJb933i4jom6UKKjnBGyT7v/7OiR6QekhURr8G01/OFnetfrL5e0vrE1DWYT3qQFFJdsJu3271Cije6G27+YSc5lOzKMuiaqDvexZX7i1dIct2rSngQjHby4z9BmrVXqyTnpEa+EHwWr4PsZAJnUokIVMD16iOJ+wNUxB6bxirq7I+dSnZC6lKJ2Etj8kGqdp5NOJP1yIcYq2nxHfq88x49LdjR3ztxFF5qrVBEhrrk35CXj6YC8yUW6LIj/Fd58ccHAu+L6yLXGORaqAeCgkf/2loVusaCGNWUDkeGpVgl2krnPIlh/Cv0js3FZnX2x359/XOJNUIYFA7oSCVf/1Ih/oK0HiHrd+CHids7+Izwt5H13snfi/ZqdPhjPf+AA==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17C200CEE13F0353E0533D991F0A8C40</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17C200CEE13F0353E0533D991F0A8C40</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17C200CEE1400353E0533D991F0A8C40</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17C200CEE1400353E0533D991F0A8C40</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150605_015813</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150605_015818</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150605_015818</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150605_015818</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZZc9o6FP4rjPuYMd4peAIzXCAdmrVsQ/PSUeSDrdSWHEl2SH59JRNcICSXe588Oj7LdxZ9OucCZakb9oUALgmjjXWWUhFW0q5RcBoyJIgIKcpAhBKH0/71Veg27RBtTYzGeNg1frUBges/OGbnob0yfYxXJuoEnokgWHnItd12YCtVIQoYUyERlV3DtZ3AtFumHczsduj6YeA3nbZ3bzQWwIXyrVSaymoDai26RiJlHlrW8/Nz89lrMh5brm071vL6aooTyJDRO99kVAXivTd93IwAQ5riJmaZdW7t6ZxHIpySmCJZcHiLFX0Uy7bsjqV0IkHiL0ZtC9GYrlh1HCDKKMEoJa9I1+caZMKiRj+NGScyyT5MwrG1YxPW2MSOT78Y1j60Ex3tIeQCmSJBzpuvCayAA8XQmE/GXePLaV2rTGccUbFiPBP7x/+GB2gJKcshMsU2rTdopzs8UqneOeBwTHFaCFLCjR7WHGEQb90EfLqrxh2HFVlfEaEGdC00OmsX3sFxU40hiUHI/9OgneZsnCxQWkCPPw/xV7/Mr+fOrCX6r0LC1etl/htlrFsB2FWuBHVrN8eDoayHaGPBVl7rajZuyaRIJq1WPvvBlu02u/ye5csJvvy2wLIc3UQLe5hOvZFrj8/uO30+efq5GM2kt1h6949PS3H3nZQX5WN+m36dk2vC0/jnchIj6+Lx7Gz+Ki23dT9v8ThwW8nt3D3zXm4SXi5ia56eiYckmYxal+zVv42WhLXFt9FaXo4COXuZLG/sxM3urmhuyR/dOp0d/Puy7Z2fFg+PgOX2qMdgPGxcqC4h+TmZaQmJzFWlGuaafFTFqTR62kpzR1gouiNRqHq4OTtfB6qXg9HI8W3bC7yRHXjesNNxLux+e+DbW5LZoDiAOGB0RXQsTbmbsfkcIM5CATQCbpasUEwnjE88DpFEjTGdqEvAqIAZU/TsBK8vj4/AAyydyMFxkritTvwQ0bXRuGHylt7y/koC3yNlx9kj5QlgkhPQzK0HW6jJFlIV4wmVhUydZomaFArF7VzTrDJtB5YgWZ6ChmplLCpSaOZJXpXGEpuvayIsKulkNKuu24eJHf7b1kDpREQrCJ3LP6D6CEdeF3+byMcJ+7sJb933i4jom6UKKjnBGyT7v/7OiR6QekhURr8G01/OFnetfrL5e0vrE1DWYT3qQFFJdsJu3271Cije6G27+YSc5lOzKMuiaqDvexZX7i1dIct2rSngQjHby4z9BmrVXqyTnpEa+EHwWr4PsZAJnUokIVMD16iOJ+wNUxB6bxirq7I+dSnZC6lKJ2Etj8kGqdp5NOJP1yIcYq2nxHfq88x49LdjR3ztxFF5qrVBEhrrk35CXj6YC8yUW6LIj/Fd58ccHAu+L6yLXGORaqAeCgkf/2loVusaCGNWUDkeGpVgl2krnPIlh/Cv0js3FZnX2x359/XOJNUIYFA7oSCVf/1Ih/oK0HiHrd+CHids7+Izwt5H13snfi/ZqdPhjPf+AA==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17C200CEE13F0353E0533D991F0A8C40</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZrU/I6EP4rTP3olF6gXDrCDIJ4OgdELd744uRNtzTYJtikgP76kxSogOjhnC8wu93sPnvJk73gKIltt8M5pIIwWlolMeVurm1pWUpdhjjhLkUJcFdg1+8MB65dNl20PaKVvF5Le20EVctpOk29hkNTr5oVrCNsgo4d2wGoYxTatjTlPAOPcoGoaGm2aTm6WdPN6tisuBXLtStlx7EmWukRUi59S5OyqW1ArXhLi4SYu4axXC7Ly0qZpVPDNk3LeB4OfBxBgrT2xTqjPFDa3tjjcgAY4hiXMUuMC2PP5iLgrk+mFIkshU2s4KdYpmE2DWkTcDI904qzEHg0ZLnYRZRRglFMPpGqzxBExIJSJ56ylIgo+TEJy1SOdVhhHVtVeqYZ+9BOdLSHMOVI5xGyNr7uIYQUKIbSw73X0s5O61p+dJwiykOWJnxf/G94gC4gZnMIdL5NawPtdIdHKtW+AOx6FMcZJwu4UcM6Rxj4ppuAT3dVuk0hJKsB4XJAV1yhM3bhHYjravTIFLj4Pw3aac7aySOKM2ifN5Pg3OuT5dNw3od6dm1GyWjU++j3H1o5gF3jXFG0di0eDGUxROsTXm35MYpnoytML0kjfLrGeMisYOwH/A54/xP9PQgm4cTvzhbh7OV2dldZIu/RHNw77GHQj8LYe7PEVXQ75eOrcMayu5fg5fP55rqbnWez3qox6T0Mpn2D2rd+dbJy2HAymtrj80dRfap+zvzw5tEbPjxzu76s1ROjkV3dJM5fSDxi1LDG55+T1KeXb1OeZBPeKtLZwb+v2955P/szAyy2ohoDr1fqyy4h8TuZKQ0J9DA3deeKfLgAKrS2OqW4w80k3ZHAlT1cy1a906z3arbZ7VVqVtO+Mp2KWW82rb7Z6TuXnS3JrFEcQOwyGhIVS1Huemx+B4gTlwMNINUXLJNMx7VfPPaQQCWP3stLwCiHMZP0nEQfDkvYZ1Dh8pKwaJZGb9ye1bXSDRMjOko7oYB0n5Jre5R8D5jMCSjeVmPN5VxzIUvxjhaZiK3yApUpZJLZU0Wyrl1tOAYnyTwGBdRIWJDFUJ5H87wwBl//25JveK69vxrnl+3HtA6/bSsgbQKiDLjK5RJkF+HI22JtE/k54eZuwlv3nSwg6l7JcoqU4DWS/U9fU6LGoxgRmdFr13+1trgL85OPfz9p/ALKOKxHEShYkJ2w25dbvgGSNdrbbr4jq/xezhaLLG9gtVoxUuneUBUyTNvwAWeS1z7G7A2oUXgxTnpECuAHwQv9PsRMRNQXSEAiB66UiydsDT5wtTV48qKsTl1J9kLK0glYiWO6biw3HoX416UIu1jZSfWt/FuyNPjq2BFfO3FknnJpEIROlaQekI8f5gIz6ZZI6mPprvNjDo4F31cWRS6wCDlQfzIBP38pKU5raQhjllHh9bRcscuzOU7xMQf3y+ibm5zKi92O/Ptyp5N8BDDIjZCT3L96ol11Beh0h6s3QY/Ttfz9ha730bW/qb9rdup0OOPtfwA=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17A97D620CD36192E05307991F0AF5BA</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17A97D620CD36192E05307991F0AF5BA</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_090444</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17A97D620CD46192E05307991F0AF5BA</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>28a7f95d-3e6f-4995-ab24-ff1b623a128f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>role</con:name><con:value>nodeIdRTL</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:RET_CS_1</con:value></con:property></con:properties><con:tearDownScript>if(context.expand( '${#Project#runTeardown}' )=='true')
	{
	log.info("Executing TearDown for Suite '" + testSuite.getName() + "'");
	
	for ( testCaseResult in runner.results )
	{
	   currentTestCaseName = testCaseResult.getTestCase().name;  
	   currentTestCase = testCaseResult.getTestCase(); 
	   log.info("Current TestCase : '"+ currentTestCaseName + "'");
	   log.info("Current TestCase Status : '" + testCaseResult.getStatus().toString() + "'");
	   
	   if ( testCaseResult.getStatus().toString() == 'FAILED' )
	   {
	      log.info("Re-executing failed TC");
	      def currentRunnerTC = currentTestCase.run(null, false);
	      log.info("Status on re-execution : '" + currentRunnerTC.status + "'");
	   }
	}
	log.info("Execution of TearDown for Suite '" + testSuite.getName() + "' Completed" );
}</con:tearDownScript><con:reportParameters/></con:testSuite><con:testSuite name="04.UserValidationTokenCreate_Access_P1" id="bf4c86a1-4f51-49b1-8f02-a673ea450c7d"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00001_ACCESS_UVTC_UserName_RequestorUserFAU_Active_RequesteeSelf_ResetPassword_200_OK_P1" searchProperties="true" id="9f3ee03d-da5b-4fee-bb5d-88bbbd91fc5c"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="9d69763b-3ac5-4907-8faa-b979e3168663"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="ba20da0d-f616-4ce6-8811-6493756c874e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="f2e22afa-c6d4-4d69-a90d-2ca797646509"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VynlMeWUJdgWqWO84ezBZJi8pIcugjC2DJBvD149klmACXO59cnW71X160VFfMxCFltNiDFGOY1LKopAwJ9c2lIQSJwYMM4eACDGHQ8dr3d85lmY4YHNEKbndhvJZrQHfCqqBageBoVZM01BHwDZVYIDaVaVuQAv4wpSxBLmEcUB4Q7EMs6oaNdWoDI2qY9pOuaZVDOtDKb0iyoRvYaIZyhpUxhrKhPOpo+vz+Vybl7WYjnXLMEz9/f7OgxMUAaV5vcooD0Sba3uo+QiiMIQajCP9Wi/YXPvM8fCYAJ5QtI7lH4tl6IatCxuf4fGFsj2LfJcEcS52AIkJhiDESyDrc4/4JPZLrXAcU8wn0dEkTEM6VlEGVWhWyIWiF6Gd6aiAkDKgsgkw174GKEAUEYhKLwO3oVyc17X86JACwoKYRqwo/jc8iKQojKfIV9kmrTW08x0eqFTzGkHHJTBMGE7RgxzWKYCIrbuJ4PmuSk8UBTi7w0wMaMYkOn0X3p64qkYXjxHj/6dBO81ZOXkFYYKaaNBNrqwH8qtjwhv36v4rNJePtWHw9QwbOYBd41yxbe1K3BvK7RCtTvRnr6b98VIHo1G1fXmjB0+L6OMK2WGMa/qzyyAv+3Pr0VuScjT5bUFvmH3VO+Nn3E2td3ve5i9exX3u0QzevoFl8rsL3zp1ex5m8xc26/fHbYt4l0mfdv5UXp/sqBNM/gFfo3rKnsth+p7qWa8zeMky163OFr/K9ZtweTvpupf2KOCv2eit3L6lYZnOL63lOt09/EXd5s57yegLQb4R5Ri43VJfdAnw02QmNdhXg9zUmUryYRwRrjTlKckdTiLoDvuO6OFKNq9a7apllM1ur1+u1Do9o1o2qrZt9o2WUataG5JZodiD2IlJgGUsSbmrsTkNEEYOQ8RHVE3jRDAdU0547AIOSi4ZiEsQE4aGsaDnlMaT0OCLGRibVmRdjc3qksb1TCk9xPyRPNJWwBEtUnK9QMkDBPEUI8nbcqyZmGvGRSlmIE14aGop0AhKBLNTSbKOValXdYajaYgkUD2K/SRE2nQyzQujs9XXUgFkuXbQG+aX7Wha+/82FRA2PpYGTObSRqKL6MDbYm0SOZqwae4mvHHfSnws75UoJ6cYrpAUf31PiRyP7YiIjD473qe5wb01P/v4z5P6CVD6fj22gfwU74TdvNziDRCs0dx0cwZMbaYlaZrkDaxUyjoV7nVZId2wdA/BRPDaYhj/QUTfetHPekS2wPeCb/VFiAmfEI8DjiIxcKVcPGNr8BCTW4MrLkp27kpSCClKx1HGD+k6odh4JOKTSxF0oLQT6ifxmcf0O/FDvnbiiDzF0sAxGUtJPiCLI3MBY+EWC+qL6a7zQw4OBS8qt0XeYuFioEYJR8f/lCSnNRQAYZwQ7naVXLHLszlOvpgi59voh5ucyre7Hf735U7F+QhAJDZChnP/8ol25BUg4x2uXgc9Qte9U3RdRNf8of6p2anT/ow3/wI=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB52031DEE346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB52031DEE346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB52031DEF346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB52031DEF346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_105252</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130925_075247</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130925_075247</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20130925_075247</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E736ED6B4703B84FE0401F0A05996EB3</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4jx0jG0yMPYEZPhMSAgnQlstLR8hro9TIYMlA+uuvZGIChOTS++TRerV7dvfoSNccL6KiV+ccEkFjpnVbVf2XBeWZO7PKRmVmY8Ou2I5RcR0wzFLFrLhBEDi4pGtdzlPoMi4wE1W9aFolw3SNYnls2Z7leuVKoWLbU137AQmXoaVLwdS17SJi3MvSVvU0YV6MOeUewwvgniDeqP7Q86Snh3NMeu16hzJLmNTmQiw9hEjBBwJRRAokXqBrdORz7XNvREOGRZrAa06fV/XXvZvNprApFeIkREXTNJHpIunjcxp+1Wtf8s3gd1kQ79ZNzGJGCY7oH6xAPYCYx75Wj8I4oWK++CC0hSxThTZgSwxi2eyrjt4SZOgujHQEMuHY4HNs5cGGEEACjID2fdit6l8vm+Bu7zjBjAdxsuAn67+DBGwNUbwE3+B5ZTm6yyOeaVftGojXZSRKOV1DX9FkiQlw7TGBgG57lEvy+VzLxq9tec4wIH8zkmt0iFPCRmc606IhcPF/5nU4q12UHzhKoTYejLm/eZ6IuePP+c1s9DB17tjNsPkcVzMIh847UPtRv65Pibrn1esmgQbuvdn7abbvVv/MyvVe3bltPt8sxsX5009n0LmfLR/uR7zR7W8Gyepu/r2xdqbBE2736/zHP+1V6QmJyvomHNsp+0Kjkh+uaN+y+2a/3Ww92zF8G3bCaP2Ix+PVHzSd9JaD6PZ36JhB7/kW7idPbhg635qjRtzpXVk/+aQ1XTlF9A1/uWWVoDxwV+yp93iHG6j9O6y+1XRYw7Exl4NROnsGIvKloka3pXXkvLD4XFqUhfpGkLl6S6VPXAATek3tUrLipVJ8qO/JYe7Wbad01W5dNWzHLDUqdqdt2qbVMetm2XWv2o1Srj87FCcQmzELqMqlFHbHn88BkoXHgfmQGOs4JXPg+icRW1hgrcuG8mDEjMM4lgreXiXpJCC3vc20yEtwY00nSaP9ggupjBpQyRhd68diwAZJPRCQHOu3c6TfQyB0SUGJvGI6l1TnQjZlhdepiKzCGhcYpPIaSJQSe0W7UkacLpYRKMhoEftpBIXlfJm1CPHdt2hgwjPrsD3+1R01s1P4YZGn//J+SB+fKgeu6mmAnCmcuYzsvJgPiy6ah0Xn4eupT9Vhk80VCSU7JMe/3jijyLInjKqqOfpl5bj37hdvf78TfQIKnfZjn8hf04O0+a0qLwopJbV8oitcWBXS9TrNZugomUxkeGQh00EjIKnUupdx/BsY2odAF10ze9Qnmff2Y3ypmLORwAIWknFatrzgjTECrt4YXcnu7aUPmKOUsm8CtuKcrRnJp4hC/OlrhXhE+Unzo/xs4sR/G9eZWAd5ZJ3yYSEoC9VKXSovH5CCxDIslSoYJ4fBzwU4l/zYuG/yHouQbJqlAj7+oyl5q+qYkDhlotvSM8Oh5GY4xcsSvDend2EyWX+9p7f8w3t68tAbSfFbYH3vS//b2aAZXQjIXZxmWKr6Vj45ZXIWHkj8K8BTle9IknQkT+yW6e5V3nFds+y4+wYeVVJ7Z35vOejp6Xmo/Qs=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E736F038F3804D09E0401F0A07990579</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbZcuI6EH3PV7g8j1NGXnAMrkAVa8YzQBbI+pISsgAFWzaW7JB8/UgmdoCQXOY+udRudZ/uPjrSGYNhYLotxnDCSUQVr9tQnyxkmPq07muOXa9qVdOua3A69TUf2fpMN3XTqGFV8RhLsUcZh5Q3VFM3LE2va6Y9MaquqbumVbGs2qOq3OKEidDCpaKryjoMKHPztA01TagbQUaYS2GImcuRO24NB67wdGGBSW2ebVDmCZPmgvPYBQBVfIxwEKAKikJwBnZ8znzmjsmcQp4m+D2nzxrq+96Xl5fKi1WJkjkwdV0Heh0IH5+R+Q+1eVJsxr5HZ9Fm3YE0ogTBgLxBCWqI+SLylVYwjxLCF+EXoQ1g6DK0htdIQ0aV/lDBR4Ic3ZGRdkAmDGpsAY0i2DWe4QRThJWba6+h/jhugpu9kwRSNouSkO2t/w0SphkOohj7GisqK9AdH/FAu5pnGLkeRUHKSIZHkiYxRJgplwmekfWAMEE+nyn5+JU1KxiG0b+M5Axs4xSwwYHOdMkcM/5/5rU9q02UWxikuDnsmlXQiZyrHhwY69n81/PgOcw4GJFhI4ew7bwBVY76fb1P1JJX75uW2WhC279voyuwCAw2snvT1c81n5p3q/OgQ89fydXp66N108erPz28bj+81cbgt29zK5u82XfIGy1Rvesw8/JleNK+YWliPfyM3tqTP4+ngKIaDdtJdczsmwvjFXTjyzh7fu5ZVB/eL3+tHumt/TAfPdrA4W0LsmUH1uLb4SBKreWJE8xSPAjH91cXPf+i35rF88ZHTds17BoLORin02eMeLGU1PC6Sl/MC/LvpUVaiK/Nclc3lvrEOKZcbcpdUlbcVIgP8V0xzM2651inve5pu+o4drtW7ff0qm709ZZu1+unvbZV6M8GxR7ETkRnROaSCrvhz/cAUegyTH2caFmUogVm6jcRu5BDxaPX4mBElOFJJBQ8u3v+M2BDr/PY+XV+28HLuW+1u5etSiqizohgjKqMIn5BL5LWjONkV7+dHf2+xojEBEuRl0xnguqMi6asYJbywKhksEJxKq6BRCqxa1ZrNmAkjAMsIYMw8tMAV+JFnLcIsM3X1CBiufW6N3nyxp38FH5Z5P6/oh/CxyfSgcl62ljMFB+4jIyimC+LlhV/FF2Eb6U+kYdNNJcnBG2Q7P764IwkS0kYWVVn/GQUuEv3o7d/3gm+AQX2+1Em8jOylba4VcVFIaSkWUx0BSurSpplaT5DR8pkIsIDA+gOGGOUCq17nURLTEEZAhx1zZSo9zKX9l18KV/QMYcch4JxSr484o0xxky+MTzB7vWxD5idlKJvHK/5IVsnEE8Rifjb1wpykfQT5kvxeYkS/2NcB2Jt5RF1iocFJ3QuV/JSef2CFCgSYYlQwSjZDn4owKHku8ayySUWLtg0TTn++o8i5a2hQoSilHKvq+aGbcnNcfLXGLsfTp/C5LL+fk+v2Zf39P1wMBbiF0K19CX/7ayRnC5IvFCFf46loa7Fk1Mkp/MtiX8HuK/yfd2q9a2aXu3q9VLlnXpdt5162cCdSpqfzJ8tWz3dPw/Nvw==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E736ED6B4775B84FE0401F0A05996EB3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E736ED6B4775B84FE0401F0A05996EB3</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130925_075247</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E736ED6B4776B84FE0401F0A05996EB3</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00002_ACCESS_UVTC_UserName_RequestorUserFAU_Active_RequesteeBAU_ResetPassword_200_OK_P1" searchProperties="true" id="ccafeb73-00c9-419c-b02f-4bbfaff7c6fb"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="da03379f-f827-434a-b143-413850def648"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="a439733c-cd83-4d3a-ba6d-40a716e22fdd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="1d24baa1-7842-4887-ad81-220a931a6c72"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU" id="4ed72302-1769-41d5-955a-d370b35e2da8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="c4247c31-d82f-4aff-b163-fa050df692f4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynmcMr5gE3AFqhwgC7MJkMBkkrykhNwGMbbsSDKXfP1KBhwgIcvuk0vt1unTFx3piqM4sj2fc2CCJLS0iiPKvdza0DJGvQRxwj2KYuCewN7Iv7v17LLpod0WrdRrN7TXGgbTrJmgm8iq645jTvSaDY5+aU1chNDEnYQV6cp5Bj3KBaKiodmm5epmVTedsel6Vt1z7XKl7rxopUdgXGJLl7KpbUmteEObCZF6hrFcLsvLSjlhU8M2Tct4ursd4RnESGtebTLKA7Hm1h+XA8AQRbiMk9i4Mg58rgLujciUIpEx2MYKTsUyDbNuSJ+Ak+mFVuyFoEfDJF+2EE0owSgi70jV5w7ELAlKfjRNGBGz+GQSlqmAdVhhHVsOvdCMQ2pnAh0wZBzpfIasLdYDhMCAYij9eug1tIvzupZvHTNEeZiwmB8u/xsfoAuIkhQCne/S2lI7H/CLSjWvAHs9iqOMkwX01bCmCAPfdhPw+VClIYOQrG4JlwO64oqdsU/vaLmpRptMgYv/06C95mxAHlGUQbPSqfXr3Xhw2TfW5Od8+Ji5iD+RNiVmIyew75wbitZulkdDWQzRZkdn0X55iurvk2rVeZ7/HsadzrA1qKydO995Mru31QEId/AWDd/N3vjRv3sJp/PKPL0GQZ7vjZXFJz+GbvTz5md/9sz+slLGMuL/XZ+jl9Yv26l0Wx3WDadda5mur1Et6vez+3E2CYLLqM8eiZ3ddMfG0onW6+7Kf1v5addhN2Enu36vDGbo3v3Ne/2ncPywTH7cNYp09vgf2nZnfpRN5oDFbqnGoNcu3cguIfG9mCkLCfQwd/VSJT5cABVaU+1S2uFlUu5I4MkebtbWpX/t2mbF6jh+xam2OqZbMd163boxfbPq2juR2bA4othKaEhULCW5m7H5niCOPQ40AKYvkkwqHde+QWwjgUo9+iAPQUI5jBMpz2xaF+k0+zMHsGj1nU8T690KI9BK/UQM6ID5oQB2KMm1A0l+AExSAkq31VhzOddcyFK8oUUmIqu8QGUKmVR2pkTWs52aa3ASpxEookacBFkE5XSW5oUx+OZr6wjz3PrQGeeH7WRax/92FZA+AVEOXOVyDbKL8MXd4uwSOZmwZe0nvIP3s4CocyXLKRjBGyaHvz6mRI1HMSIyo9fW6NXa8S7cz97+eafxDSnjuB5FoGBB9sLubm55B0jVaO66+Yas8ls5WyyyvIGOUzGYhDdUhQzTNkaAM6lr63HyB6hRoBhnXSIF8aPghf2QYiZmdCSQgFgOXClfnvFqGAFXr4aePCirc58kByFl6QSsxFe2ViRfPIrxt48i7GHlJ81D+VkmLPjo2BdYe3FknvLRIAidqpW6QNYn5gInEpZI6UvYPvhXAF8FPzQWRS64CDlQk0zA6T8lpWkNDWGcZFT02lpu2NfZnKdYp+B9OH2CyaW8eNuRf3/c6SQfASxFS/rn+OqK9tQRoNM9rd4GPSHX9e/k+pBd85P5s2WvTscz3vwH</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB52031E49346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB52031E49346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB52031E4A346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB52031E4A346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_105311</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150604_105323</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150604_105323</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150604_105323</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynmcMr5gE3AFqhwgC7MJkMBkkrykhNwGMbbsSDKXfP1KBhwgIcvuk0vt1unTFx3piqM4sj2fc2CCJLS0iiPKvdza0DJGvQRxwj2KYuCewN7Iv7v17LLpod0WrdRrN7TXGgbTrJmgm8iq645jTvSaDY5+aU1chNDEnYQV6cp5Bj3KBaKiodmm5epmVTedsel6Vt1z7XKl7rxopUdgXGJLl7KpbUmteEObCZF6hrFcLsvLSjlhU8M2Tct4ursd4RnESGtebTLKA7Hm1h+XA8AQRbiMk9i4Mg58rgLujciUIpEx2MYKTsUyDbNuSJ+Ak+mFVuyFoEfDJF+2EE0owSgi70jV5w7ELAlKfjRNGBGz+GQSlqmAdVhhHVsOvdCMQ2pnAh0wZBzpfIasLdYDhMCAYij9eug1tIvzupZvHTNEeZiwmB8u/xsfoAuIkhQCne/S2lI7H/CLSjWvAHs9iqOMkwX01bCmCAPfdhPw+VClIYOQrG4JlwO64oqdsU/vaLmpRptMgYv/06C95mxAHlGUQbPSqfXr3Xhw2TfW5Od8+Ji5iD+RNiVmIyew75wbitZulkdDWQzRZkdn0X55iurvk2rVeZ7/HsadzrA1qKydO995Mru31QEId/AWDd/N3vjRv3sJp/PKPL0GQZ7vjZXFJz+GbvTz5md/9sz+slLGMuL/XZ+jl9Yv26l0Wx3WDadda5mur1Et6vez+3E2CYLLqM8eiZ3ddMfG0onW6+7Kf1v5addhN2Enu36vDGbo3v3Ne/2ncPywTH7cNYp09vgf2nZnfpRN5oDFbqnGoNcu3cguIfG9mCkLCfQwd/VSJT5cABVaU+1S2uFlUu5I4MkebtbWpX/t2mbF6jh+xam2OqZbMd163boxfbPq2juR2bA4othKaEhULCW5m7H5niCOPQ40AKYvkkwqHde+QWwjgUo9+iAPQUI5jBMpz2xaF+k0+zMHsGj1nU8T690KI9BK/UQM6ID5oQB2KMm1A0l+AExSAkq31VhzOddcyFK8oUUmIqu8QGUKmVR2pkTWs52aa3ASpxEookacBFkE5XSW5oUx+OZr6wjz3PrQGeeH7WRax/92FZA+AVEOXOVyDbKL8MXd4uwSOZmwZe0nvIP3s4CocyXLKRjBGyaHvz6mRI1HMSIyo9fW6NXa8S7cz97+eafxDSnjuB5FoGBB9sLubm55B0jVaO66+Yas8ls5WyyyvIGOUzGYhDdUhQzTNkaAM6lr63HyB6hRoBhnXSIF8aPghf2QYiZmdCSQgFgOXClfnvFqGAFXr4aePCirc58kByFl6QSsxFe2ViRfPIrxt48i7GHlJ81D+VkmLPjo2BdYe3FknvLRIAidqpW6QNYn5gInEpZI6UvYPvhXAF8FPzQWRS64CDlQk0zA6T8lpWkNDWGcZFT02lpu2NfZnKdYp+B9OH2CyaW8eNuRf3/c6SQfASxFS/rn+OqK9tQRoNM9rd4GPSHX9e/k+pBd85P5s2WvTscz3vwH</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17AB52031E49346CE05305991F0A0652</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZtU+o6EP4rTM/HM6VvgNARZhD0ivKigIrnixPShUbbtCZpAX/9SQpUQOVy76fObje7z77kyZ5zFAa22+QcmCARLSzDgHI309a1hFE3Qpxwl6IQuCuwO2r2uq5dNF20PaIVOu269mKXnJptnpV17FSneql2BjoyUU2flqeeCVYFZrgiTTlPoEO5QFTUNdu0yrpZ0c3S2Cy7tumaZ8WKY//RCo/AuPQtTYqmtgG15HXNFyJ2DWOxWBQXTjFic8M2TcuY9Loj7EOItMb5OqMsEGts7HHRAwxBgIs4Co1zY8/m3OPuiMwpEgmDTSzvp1imYdYMaeNxMv+l5WfB69BZlIktRCNKMArIB1L16YHwI6/QDOYRI8IPf0zCMpVjHZZYx1aJ/tKMfWgnOtpDyDjSuY+sja8hzIABxVB4GHbq2q/TupYdHTNE+SxiId8X/xseoCkEUQyezrdpbaCd7vCbSjXOAbsdioOEkxT6alhjhIFvugn4dFeFOwYzsuwSLgd0yRU6YxfegbiuRpvMgYv/06Cd5qydPKIggcZb6z5J5x8du5W0E/yBzIcH53rJSnzxXM8A7Bpniry1a/FgKPMhWp+Y9MqvAX0usWp0HQzuhvSjP7l/7sT+Q/h8Gd9W47e7C38Uzxf9R4DrwWDEqTNP+4FztqrxAXpedp1aOvkd8fH96tZIn7odIDDFvQoe99OW1R0+lY3fsy6lPrsPb6a1+eLWmlSWi7m3uJn4JfJ80RsEg/AioavXh8HH08M/bBXceKhCRMW/ufWS1/aKNfkf++Oynqezg39ft73zo2T6ClhsRTUGnXbhSnYJieNkpjTE02eZqRsr8uECqNAa6pTiDjeRdEc8V/ZwLVtnzYuybTrWZe3KKVVal2bZMcu1mnVlNs1K2d6SzBrFAcRWRGdExVKUux6b4wBx6HKgHjA9jRLJdFw74rGNBCp06FBegohyGEeSnq3q0o9XkW9PZ/abLWKbMPyGVs6rVuhHYkAHrDkTwPY5ubrHyUPAJCagiFvNNZeDzYWsxTtKExFYxRQVKSSS2pliWdcuVcsGJ2EcgEJqhJGXBFCM/TirjMHXX1tHmGfa4eU4u20/5nX4b1sCaeMRZcBVLhcg2wiHj4tVc8vbRH5M2LJ2E966byYeURdL1lMwgtdI9n99jomaj3xGZEYvrdGLtcWdm598/OtJ4wgo47AeeSAvJTtht0+3fAQkbTS23XxHVvG9mKRpkjWwVHIMJt0bqkKGaRsjwIkkttU4egNq5F6Mk16RHPhB8Fy/DzERPh0JJCCUA1fIxBPWhhFwtTZ05E1ZnrqT7IWUpROwFN/pWoFceRTio1sRdrGyk+o7+VlEzPvs2De+duLIPOXWIAidK0m9IKsf5gJH0i2R3BexXeffOfgu+L4yL3KORciBmiYCfv5TUKRW1xDGUUJFp61lil2izXCKVQzup9EXNxmX58sd+fftTifZCGCQKyEnmX/1RrvqCtD5Dllvgn7P16XaMb7eR9f4ov6q2anT4Yw3/gI=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17AB52031E9F346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17AB52031E9F346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_105323</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17AB52031EA0346CE05305991F0A0652</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00003_ACCESS_UVTC_UserName_RequestorUserFAU_Active_RequesteeSAU_ResetPassword_200_OK_P1" searchProperties="true" id="7b84769e-70a3-4e7e-b956-629aa2dd5def"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="c1ad4628-8da3-43e7-911b-40fdb6dadfc8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="72f09e42-cb2b-4100-9c4a-21fa33302b44"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="d3e335ce-9ab2-4f4c-aab9-db5b517b707a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU" id="d285ad49-19d6-4510-8ca0-9df5878ecd5b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="9dd40aa9-1f87-4aba-be99-98a61a762ab9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvO4ZXzn4gpUEQIbTwLJArlMXlJCbrAmtkQs2ZB8/UgGHCAhy+6Tq9ut7tMXHfUZR0ls+x3OIRWE0coqiSn3C21Ly1LqM8QJ9ylKgPsC++PO4Nq3q6aPtke0SnDR0p5dF0/BrDd1J2y6uuvNLL1p1ut6CKGHa7Op3fQsacp5BgHlAlHR0mzT8nSzppvuxPR82/Rtu2o77pNWuYeUS9/SpGpqG1Ar3tIiIRa+YSyXy+rSqbJ0btimaRmPg+sxjiBBWvtsnVERKG1v7HE1BAxxjKuYJcaZsWdzFnJ/TOYUiSyFTazwWCzTMJuGtAk5mf/QyrMQBnTGCrGLKKMEo5i8I1WfAYiIhZVOPGcpEVFyNAnLVI51WGEdWy79oRn70E50tIcw5UjnEbI2vkYwgxQohsrdKGhpP07rWnF0kiLKZyxN+L743/AAzSFmCwh1vk1rA+10h19Uqn0G2A8ojjNOchiqYV0gDHzTTcCnu6rcpjAjq2vC5YCuuEJn7MI7ENfVuCBz4OL/NGinOWsn9yjOoL2csnC8ahqstnjFL6+Jm15dw2PeX3RZqwCwa1woytauxYOhLIdofYL87fUTc87O7/gTGfZ+Gw/ZbTO5mo1+3taGcb9O7Z9oaEc18TSBQfBgR0/vER4Yv0RkQ86TUQSTPBjG0HAmAbmsDe5s+s8wqfEuQlm9v4pvqdd4awh0OWGib9F8XL8kq/Go0XCnk/79L+em16s/EoL+aqS36O2u27uf8+DhobMkN9Hy0XtFtR4Mr9zBZDlvlens4N/Xbe/8OJv+Biy2ohqD4KLSl11C4nsyUxoS6rPC1F8o8uECqNDa6pTiDj+TdEdCX/ZwLVv1zrlnm47V6zqOW+v2TM8xvWbT6psds+bZW5JZoziA2GV0RlQsRbnrsfkeIE58DjSEVM9ZJpmOa994vEACVQI6kpeAUQ4TJuk5f3tfTd2o5iBqWy9za2rlwnSIM9MqQyZu6E3amQlI9zm5scfJI8BkQUARt5prLgebC1mLV5RnIraqOapSyCS1p4plfdtteAYnySIGhdRIWJjFUF1Ei6IyBl9/bR1hXmhHvUlx247mdfhvWwJpExJlwFUu5yDbCF88LtY2kaMJW9Zuwlv3nSwk6mLJeoqU4DWS/V8fY6Lmo5wRmdFzd/xsbXGX5icf/3zS+AaUcViPMlCYk52w26dbPgKSNtrbbr4iq/pazfI8Kxrouo6RSveGqpBh2sYYcCaJ7W3CXoAapRfjpFekBH4QvNTvQ8xERMcCCUjkwFUK8YS1YQxcrQ2BvCmrU3eSvZCydAJW4itdN5Yrj0L87VaEfazspPpWfpYsDT869oWvnTgyT7k1CELnSlIvyNuRucBMuiWS+1i66/wrB18F31eWRS6xCDlQ00zA8T8VRWotDWHMMiqCC61Q7BJtgVO8LcD/MPrkpuDycrkj/77d6aQYAQxyJeSk8K/eaF9dATrfIetN0CN8bX/H1/vo2p/UnzU7dTqc8fYf</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB52031EC2346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB52031EC2346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB52031EC3346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB52031EC3346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_105343</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150604_105350</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150604_105350</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150604_105350</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvO4ZXzn4gpUEQIbTwLJArlMXlJCbrAmtkQs2ZB8/UgGHCAhy+6Tq9ut7tMXHfUZR0ls+x3OIRWE0coqiSn3C21Ly1LqM8QJ9ylKgPsC++PO4Nq3q6aPtke0SnDR0p5dF0/BrDd1J2y6uuvNLL1p1ut6CKGHa7Op3fQsacp5BgHlAlHR0mzT8nSzppvuxPR82/Rtu2o77pNWuYeUS9/SpGpqG1Ar3tIiIRa+YSyXy+rSqbJ0btimaRmPg+sxjiBBWvtsnVERKG1v7HE1BAxxjKuYJcaZsWdzFnJ/TOYUiSyFTazwWCzTMJuGtAk5mf/QyrMQBnTGCrGLKKMEo5i8I1WfAYiIhZVOPGcpEVFyNAnLVI51WGEdWy79oRn70E50tIcw5UjnEbI2vkYwgxQohsrdKGhpP07rWnF0kiLKZyxN+L743/AAzSFmCwh1vk1rA+10h19Uqn0G2A8ojjNOchiqYV0gDHzTTcCnu6rcpjAjq2vC5YCuuEJn7MI7ENfVuCBz4OL/NGinOWsn9yjOoL2csnC8ahqstnjFL6+Jm15dw2PeX3RZqwCwa1woytauxYOhLIdofYL87fUTc87O7/gTGfZ+Gw/ZbTO5mo1+3taGcb9O7Z9oaEc18TSBQfBgR0/vER4Yv0RkQ86TUQSTPBjG0HAmAbmsDe5s+s8wqfEuQlm9v4pvqdd4awh0OWGib9F8XL8kq/Go0XCnk/79L+em16s/EoL+aqS36O2u27uf8+DhobMkN9Hy0XtFtR4Mr9zBZDlvlens4N/Xbe/8OJv+Biy2ohqD4KLSl11C4nsyUxoS6rPC1F8o8uECqNDa6pTiDj+TdEdCX/ZwLVv1zrlnm47V6zqOW+v2TM8xvWbT6psds+bZW5JZoziA2GV0RlQsRbnrsfkeIE58DjSEVM9ZJpmOa994vEACVQI6kpeAUQ4TJuk5f3tfTd2o5iBqWy9za2rlwnSIM9MqQyZu6E3amQlI9zm5scfJI8BkQUARt5prLgebC1mLV5RnIraqOapSyCS1p4plfdtteAYnySIGhdRIWJjFUF1Ei6IyBl9/bR1hXmhHvUlx247mdfhvWwJpExJlwFUu5yDbCF88LtY2kaMJW9Zuwlv3nSwk6mLJeoqU4DWS/V8fY6Lmo5wRmdFzd/xsbXGX5icf/3zS+AaUcViPMlCYk52w26dbPgKSNtrbbr4iq/pazfI8Kxrouo6RSveGqpBh2sYYcCaJ7W3CXoAapRfjpFekBH4QvNTvQ8xERMcCCUjkwFUK8YS1YQxcrQ2BvCmrU3eSvZCydAJW4itdN5Yrj0L87VaEfazspPpWfpYsDT869oWvnTgyT7k1CELnSlIvyNuRucBMuiWS+1i66/wrB18F31eWRS6xCDlQ00zA8T8VRWotDWHMMiqCC61Q7BJtgVO8LcD/MPrkpuDycrkj/77d6aQYAQxyJeSk8K/eaF9dATrfIetN0CN8bX/H1/vo2p/UnzU7dTqc8fYf</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17AB52031EC2346CE05305991F0A0652</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VynlMGXnBLK5AFYEsZMiGnWXykhJyG5TYsmPJBO7Xj2TAAUIyzDy5ut3qPr3oqE84jiPL7XIOmaAJq8zjiHG30La1PGNugjnlLsMxcFcQ1+teD12rarh4fUSrDPpt7dVpje1mfWzrpAENvVa3Ah3jpqXXzca4adu15jgMpSnnOQwYF5iJtmYZpqMbdd2o+YbjWoZr21XbrL9olUfIuPQtTaqGtgI1521tKkTqIvT5+Vn9tKtJNkGWYZjo+XrokSnEWOucLDMqAmWdlT2pBkAgikiVJDE6QVs2JwF3PTphWOQZrGIFP8UykNFC0ibgdHKklWchGLAwKcQeZgmjBEf0D1b1uQYxTYJKN5okGRXT+MckTEM51mFOdGLW2JGGtqEd6GgLYcaxzqfYXPkaQQgZMAKVh9GgrR0d1rXiqJ9hxsMki/m2+N/wAJtBlKQQ6Hyd1gra4Q73VKpzAsQdMBLlnM7gRg1rignwVTeBHO6qcpdBSOdDyuWAzrlChzbh7YjLavTpBLj4Pw3aaM7SySOOcujcXHkXKes7N++XxvPUYfMH81qgxcuxT9oFgE3jQlG2dinuDGU5RMsTozELcezdp6nT8v72B09/+tcwZ8PQfwvfmsf1Zo80aeIl4RAW94Hp2/gdXaK4Zd+PzyC/Ih/OY+305VJeus93YoxOX/zQib0L+/Gp5cHEO3P8FJ3/tbiP2NNT+nCVjH3fJNnFcSOfpXRhnN9+vMDwmETPzYveQ/+Os4e6N8/rvWY/fXtr0Nuz7HmI0bi+eJy0y3Q28G/r1nfey8dvQMRaVGMw6FfOZZew+J3MlIYGeliYuqkiHy6ACa2jTinucHNJdzRwZQ+XstnonjqWYZvnZtOu1XtnhmMbTqtlnhtdo+5Ya5JZotiB2EtYSFUsRbnLsfkdIIldDiyATJ8luWQ6rv3isY8FrgzYSF6ChHHwE0nPphFiM2/MrFrciM06vBsTZxK9t9KxVrlJxC27zbqhgGyblJtbpDwCQlMKirnVYHM52VzIYnzgWS4iszrDVQa55PZM0axr1ZoO4jROI1BQUZwEeQTVdJoWpUF8+bV0THihHZ35xXX7MbHdf+saSJuAKgOucjkF2UfY87pY60R+TNg0NxNeu+/mAVU3SxZUZJQskWz/+poTNSDlkMiMXnveq7nGXZoffPz7SfQLKLRbjzJQMKMbYddvt3wFJG901t38wGb1o5rPZnnRwFrNRpl0j1SFkGEhD0gumW3hJ+/AUOkFHfSMlMB3gpf6bYi5mDJPYAGxHLhKIR6wN3jA1d4wkFdlfuhSshVSlk7AXOzT9SK58yjEv65FxCXKTqrv5OczyYKvju3xtRFH5inXBkHZREnqCVn8MBckkW6pJL8k23S+z8G+4NvKssglFiEHapwL+PlPRbFaW8OEJDkTg75WKDaZtsApFim4X0bf3BRkXm539N/XO50WI0BA7oScFv7VI+2qK8AmG2y9CrqXsM961m+EvY2u8039XbNRp90Z7/wD</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17AB52031F18346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17AB52031F18346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_105350</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17AB52031F19346CE05305991F0A0652</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00004_ACCESS_UVTC_UserName_RequestorUserFAU_Active_RequesteeOtherFAUResetPassword_Role_Retailer_200_OK_P1" searchProperties="true" id="70e62572-5d44-41ee-a3bd-24ba375cfa43"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="71680ab1-8b22-40da-86af-872f4948bee4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="99521e18-96df-40de-b3eb-c515d5042911"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult FAU" id="ca89e39b-701f-4c99-8a7b-249e9e46f809"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult FAU" id="7160cbcc-b19c-4f7d-b1a9-6fb0819c8817"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="821338fc-9b2b-492d-baf0-3fa896b6e2ae"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtc6o6EP4rDv3YwQACFaY6Y+0bHm171fa8fDmThkXTQrAkiPbXnwSVo7b2eu8nZpfN7rMvebLnHCex5Xc4h0zQlNUWScy4X2pbWp4xP8Wccp/hBLgviD/qDPq+VTd8vDmi1YLLlvbbDS03JE6kE9dp6HboWnrT8jzdJmA6rtHwTEKkKec5BIwLzERLswzT0Q1XN+yx4fiW4Tte/azh/dJqT5Bx6Vua1A1tDWrBW9pUiJmPUFEU9aJRT7MJsgzDRD8G/RGZQoK19vkqozJQ1l7bk3oIBOKY1EmaoHO0Y3Mecn9EJwyLPIN1rPBQLAMZHpI2IaeTE606C2HAorQUu5iljBIc03es6jMAMU3DWieepBkV0+RgEqahHOuwIDoxbXaioV1oRzraQZhxrPMpNte+hhBBBoxA7XEYtLST47pWHh1nmPEozRK+K/43PMDmEKczCHW+SWsN7XiHn1SqfQ7EDxiJc07ncKeGdYYJ8HU3gRzvqvaQQUQXfcrlgC64Qoe24e2Jq2pc0glw8X8atNWclZMnHOfQRs1bMmo+8HDo8P7s9PVX6CSQ3j7fvNutEsC2camoWrsS94ayGqLViR8948W+8eJB/DpGk5z3wwB3vcv+Yz8+K5qLYhrf8zR8+WZTa+ROfsT2AJlJIX7By1Oj+88rGkS3cWSg773ltzyPxvinuBh/7w5RsDSC3O0Vp97krFg6j+L97aclHp56mT0s0P0gPA29B3P57i2v3cfT4Oquf9fsTc1o8BLP+ZsF5HlxM3xq9Ju9+cv96bDT6xStKp0t/Lu6zZ0f5c8vQMRGVGMQXNauZZew+JrMlIaGelSa+jNFPlwAE1pbnVLc4eeS7mjoyx6uZPOsc+FYRsO8bnQbttu9MpyG4XieeW10DNexNiSzQrEHsZuyiKpYinJXY/M1QJL4HFgImT5Pc8l0XPvC4yUWuBawobwEKeMwTiU9T6k89S7cmRtPXiFazvHSLWYQa7W7VNyz+6wTCch2Kbm5Q8lDIHRGQfG2Gmsu55oLWYo3PM9FbNbnuM4gl8yeKZL1LbvpIE6TWQwKKErSMI+hPpvOysIgvvpaOia81A6vxuVlO5jW/r9NBaRNSJUBV7lcgOwifPK22JtEDiZsmtsJb9x38pCqeyXLKTJKVkh2f/2dEjUe1YjIjH53R7/NDe7K/OjjH0+iL0Ch/XpUgcI53Qq7ebnlGyBZo73p5hs262/1fD7PywbadgNl0j1SFUKGhUZAcslry3H6CgxVXtBRj0gFfC94pd+FmIspGwksIJEDVyvFI7aGEXC1NQTyoiyOXUl2QsrSCViIz3TdWG48CvGXSxHxibKT6gf5KdIs/NuxT3xtxZF5yqVBUDZRknpAlgfmgqTSLZXUl2bbzj9z8FnwXWVV5AqLkAP1nAs4/KemOK2lYULSnIngUisV2zxb4hTLGfh/jT64Kam82u3ovy93Oi1HgIDcCDkt/asn2ldXgE22uHod9ABdX3xF17vo2h/UHzVbddqf8fYf</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB52031F3B346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB52031F3B346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB52031F3C346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB52031F3C346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_105410</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150604_105427</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150604_105427</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150604_105427</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtc6o6EP4rDv3YwQACFaY6Y+0bHm171fa8fDmThkXTQrAkiPbXnwSVo7b2eu8nZpfN7rMvebLnHCex5Xc4h0zQlNUWScy4X2pbWp4xP8Wccp/hBLgviD/qDPq+VTd8vDmi1YLLlvbbDS03JE6kE9dp6HboWnrT8jzdJmA6rtHwTEKkKec5BIwLzERLswzT0Q1XN+yx4fiW4Tte/azh/dJqT5Bx6Vua1A1tDWrBW9pUiJmPUFEU9aJRT7MJsgzDRD8G/RGZQoK19vkqozJQ1l7bk3oIBOKY1EmaoHO0Y3Mecn9EJwyLPIN1rPBQLAMZHpI2IaeTE606C2HAorQUu5iljBIc03es6jMAMU3DWieepBkV0+RgEqahHOuwIDoxbXaioV1oRzraQZhxrPMpNte+hhBBBoxA7XEYtLST47pWHh1nmPEozRK+K/43PMDmEKczCHW+SWsN7XiHn1SqfQ7EDxiJc07ncKeGdYYJ8HU3gRzvqvaQQUQXfcrlgC64Qoe24e2Jq2pc0glw8X8atNWclZMnHOfQRs1bMmo+8HDo8P7s9PVX6CSQ3j7fvNutEsC2camoWrsS94ayGqLViR8948W+8eJB/DpGk5z3wwB3vcv+Yz8+K5qLYhrf8zR8+WZTa+ROfsT2AJlJIX7By1Oj+88rGkS3cWSg773ltzyPxvinuBh/7w5RsDSC3O0Vp97krFg6j+L97aclHp56mT0s0P0gPA29B3P57i2v3cfT4Oquf9fsTc1o8BLP+ZsF5HlxM3xq9Ju9+cv96bDT6xStKp0t/Lu6zZ0f5c8vQMRGVGMQXNauZZew+JrMlIaGelSa+jNFPlwAE1pbnVLc4eeS7mjoyx6uZPOsc+FYRsO8bnQbttu9MpyG4XieeW10DNexNiSzQrEHsZuyiKpYinJXY/M1QJL4HFgImT5Pc8l0XPvC4yUWuBawobwEKeMwTiU9T6k89S7cmRtPXiFazvHSLWYQa7W7VNyz+6wTCch2Kbm5Q8lDIHRGQfG2Gmsu55oLWYo3PM9FbNbnuM4gl8yeKZL1LbvpIE6TWQwKKErSMI+hPpvOysIgvvpaOia81A6vxuVlO5jW/r9NBaRNSJUBV7lcgOwifPK22JtEDiZsmtsJb9x38pCqeyXLKTJKVkh2f/2dEjUe1YjIjH53R7/NDe7K/OjjH0+iL0Ch/XpUgcI53Qq7ebnlGyBZo73p5hs262/1fD7PywbadgNl0j1SFUKGhUZAcslry3H6CgxVXtBRj0gFfC94pd+FmIspGwksIJEDVyvFI7aGEXC1NQTyoiyOXUl2QsrSCViIz3TdWG48CvGXSxHxibKT6gf5KdIs/NuxT3xtxZF5yqVBUDZRknpAlgfmgqTSLZXUl2bbzj9z8FnwXWVV5AqLkAP1nAs4/KemOK2lYULSnIngUisV2zxb4hTLGfh/jT64Kam82u3ovy93Oi1HgIDcCDkt/asn2ldXgE22uHod9ABdX3xF17vo2h/UHzVbddqf8fYf</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17AB52031F3B346CE05305991F0A0652</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbc9o4FP4rjPu4Yyybqz2BGQdCljSX1iZp05eOKh+DEltyLBmc/vqVDLhASJbdJ4+Oj77znYs+6UzgNHE8XwjIJeWsUaYJE15lHRhFzjyOBRUewykITxIv9G+uPaeJPLzdYjSm44Hx03ahjcCOTIR7xGwjG5luG7pm3IkRduI4juJYuQpRwJQJiZkcGA6yOybqmqg9Qx3PsT2713T6vR9G4wFyobCVSxMZG1KlGBgLKTPPslarVXPVavJ8bjkI2db3m+uQLCDFxvBsnVEVKB9u/EkzAgJJQpqEp9aZtedzFgkvpHOGZZHDJlb0XixkIddSPpGg809GvReiKYt5tRxhxhklOKG/sa7PDcgFjxp+Muc5lYv03SRspIFNKIlJ7Db7ZFj71E4E2mOYC2yKBbY3WAHEkAMj0LgPpgPj02ldq7bOcsxEzPNU7C//Gx9gS0h4BpEptmltqJ0OeKRSwzMg3pSRpBB0Cbd6WDNMQGy6CeR0qMaXHGJaXlOhBrQUmp21S+9gua7GmM5ByP/ToJ3mrEEecFLAcPF3Smf33di6//ueXoV+q4/vSDa5WP32BxWBXefKULd2vTwYynqI1js+d0cyXV4+UlF2S44+hygTweVfyQtn8ub5seXwfOoHpH3ZSb+vXsW43wmz0SMNxVOQRb351/HXL/zJv8TsAvns5lf/So5+0BYezdLe06r3lH87f+heBLfXzuN5/9ti3J3O5j/mk+9j99uk/Oq68dW49DuEXbwEQXDbmi7UWZmXj5fB80LGk7tuyEny8FvcXbnl86BOZ4f/vm175sPi1xMQuV3qMZiOGxPVJSw/FjNtoZEZV65epsVHSGDSGOpdWju8QskdjTzVw/Xa7vnnHQe17Ilrt9rd0QXqtFDHde0J8lG342xFZs3igOKIs5jqWFpy12PzMUGSegJYBLm55IVSOmF8gDjGEjemLFCHgDMBM67kWbqtnDhLN48Tt69aFS8SLOJ5aTRuubxjd7kfS8j3Jbm/J8kBEJpR0Lqtx1qouRZSleIFLwuZ2M0lbjIolLLnWmQ9p93vWIKmWQKaqJXyqEigmS2yqjCWWH8dExNRWYOLWXXY3k3r8N+2AsonotpB6FzOQXURjtwtaJvIuwnb9m7CW3i/iKg+V6qcMqdkzWT/158p0eNRj4jK6Oco/GlvedfuJ29/u9P6gJR1WI86ULSkO2G3N7e6A5RqDLfdfMF286VZLJdF1cB2u2XlCt7SFbKQY4VACqVrrzP+DMyqUayTLpGa+EHw2r5PsZALFkosIVUD16iWJ7waQhD61TBVB6U89UmyF1KVTkIpj9lG6rwIzfjDRxHxiPZT5i/qs+J59KdjR7B24qg81aNBUjbXK32BvL4zF4QrWKqkj+e74McAjgXfN9ZFrrlINVC/Cgnv/2loTRsYmBBeMDkdG5VhV2crnvI1A++P0xuYSsrrtx3998edSasRIKBehIJW+PqK9vQRYPMdrd4EPS7XrfOP5Hqf3fCN+a1lp06HMz78Bw==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17AB52031F91346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17AB52031F91346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_105427</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17AB52031F92346CE05305991F0A0652</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00005_ACCESS_UVTC_UserName_RequestorUserBAU_Active_RequesteeSelf_ResetPassword_Role_Retailer_200_OK_P1" searchProperties="true" id="7a6815bd-dd2f-47d8-8a0b-4349a3183ba2"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="a182b85c-c208-4ab5-9662-6c95c96e7c95"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="b46988c6-c0ff-4d48-a231-2a38205e763d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="7ac316bf-9424-4d27-a1f6-9126b88641ac"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU" id="fc28c239-03c0-4864-8c64-a8da5f28e6cf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="bc791a1e-e3ff-4709-a9b3-ff7f042d28f8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvNsfMMkcQWqCCSEDYYEE3ZmXlKK3IAWWwJLxk6+fiQDDpCQZffJ1e1W9+mLjvqaoziyvRbnkAjCaCWPI8q9QtvQ0oR6DHHCPYpi4J7AXtDy+55dNT20O6JVep2G9vKKofYahqBf2Q7Sa6jm6OgVW3r9ohZehhdOiE1LmnKeQo9ygahoaLZpubpZ183a2HQ92/Icp+peub+1ygQSLn1Lk6qpbUHlvKHNhVh6hpFlWTVzqiyZGbZpWsZPvx/gOcRIa15vMioCJc2tPa6GgCGKcBWz2Lg2DmyuQ+4FZEaRSBPYxgpPxTIN88qQNiEnsx9aeRbCHp2yQmwjyijBKCLvSNXHBzFnYaUVzVhCxDw+mYRlKsc65FjHVo3+0IxDaGc6OkCYcKTzObK2vkYwhQQohsrzqNfQfpzXteLoOEGUT1kS80Pxv+EBuoaILSHU+S6tLbTzHX5RqeY1YK9HcZRysoaBGtYlwsC33QR8vqvKYwJTkvcJlwOac4XO2Id3JG6q0SEz4OL/NGivORsnExSl0MwfMveGZZ3ByPaDvPOAH0evhnhYsdunRgFg37hQlK3diEdDWQ7R5kRyOxxOHHtUB+N3tlwv799v71g66LushWhsrwbGHK16Vjqyo9WAtn2/98a7/i8S1tOf4wcRzN+D7mTs3w1F3xEBSbi5GESL5667+rXqjv4yGZ3lD/ddcffoxkM/6yb5usbbb/D3k/MURb6ZdwcpWrSfzEWXOzeL+3uzM50s+8Gw3RoMHZ/7T2aWPuQThzw3ynT28B/qdnc+SF//ASx2ohqDXqdyJ7uExPdkpjQk1KeFqbdU5MMFUKE11SnFHV4q6Y6EnuzhRrYuWjeubTrW3Y3r1OrtW9N1TPfqyrozW2bdtXcks0FxBLHN6JSoWIpyN2PzPUAcexxoCIm+ZqlkOq5947GDBKr06EheAkY5jJmkZ4gsltqQZJd19x2F2cJdgchIqFUGTAzpMGlNBSSHlHx5QMkjwGRJQPG2Gmsu55oLWYoVWqcisqprVKWQSmZPFMl6du3SNTiJlxEooEbMwjSC6nK+LApj8M3X1hHmhXZ0Oy4u28m0jv/tKiBtQqIMuMrlBmQX4Yu3xd4lcjJhy9pPeOe+lYZE3StZTpEQvEFy+OtjStR4lCMiM3ppBy/WDndpfvbxzyeNb0AZx/UoA4Vrshd293LLN0CyRnPXzRWyqqtqul6nRQNrNcdIpHtDVcgwbSMAnEpeexuzBVCj9GKc9YiUwI+Cl/pDiKmY00AgAbEcuEohnrE1BMDV1tCTFyU/dyU5CClLJyAXX+nakdx4FOJvlyLsYWUn1Y/yk7Ek/OjYF7724sg85dIgCJ0pST0gbyfmAjPplkjqY8m+868cfBX8UFkWucQi5EC9pgJO/6koTmtoCGOWUtHraIVin2cLnOJtCd6H0Sc3BZWXux359+VOJ8UIYJAbISeFf/VEe+oK0NkeV2+DnqDr2nd0fYiu+Un9WbNXp+MZb/4B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB52031FB4346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB52031FB4346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB52031FB5346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB52031FB5346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_105455</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150604_10551</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150604_10551</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150604_10551</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvNsfMMkcQWqCCSEDYYEE3ZmXlKK3IAWWwJLxk6+fiQDDpCQZffJ1e1W9+mLjvqaoziyvRbnkAjCaCWPI8q9QtvQ0oR6DHHCPYpi4J7AXtDy+55dNT20O6JVep2G9vKKofYahqBf2Q7Sa6jm6OgVW3r9ohZehhdOiE1LmnKeQo9ygahoaLZpubpZ183a2HQ92/Icp+peub+1ygQSLn1Lk6qpbUHlvKHNhVh6hpFlWTVzqiyZGbZpWsZPvx/gOcRIa15vMioCJc2tPa6GgCGKcBWz2Lg2DmyuQ+4FZEaRSBPYxgpPxTIN88qQNiEnsx9aeRbCHp2yQmwjyijBKCLvSNXHBzFnYaUVzVhCxDw+mYRlKsc65FjHVo3+0IxDaGc6OkCYcKTzObK2vkYwhQQohsrzqNfQfpzXteLoOEGUT1kS80Pxv+EBuoaILSHU+S6tLbTzHX5RqeY1YK9HcZRysoaBGtYlwsC33QR8vqvKYwJTkvcJlwOac4XO2Id3JG6q0SEz4OL/NGivORsnExSl0MwfMveGZZ3ByPaDvPOAH0evhnhYsdunRgFg37hQlK3diEdDWQ7R5kRyOxxOHHtUB+N3tlwv799v71g66LushWhsrwbGHK16Vjqyo9WAtn2/98a7/i8S1tOf4wcRzN+D7mTs3w1F3xEBSbi5GESL5667+rXqjv4yGZ3lD/ddcffoxkM/6yb5usbbb/D3k/MURb6ZdwcpWrSfzEWXOzeL+3uzM50s+8Gw3RoMHZ/7T2aWPuQThzw3ynT28B/qdnc+SF//ASx2ohqDXqdyJ7uExPdkpjQk1KeFqbdU5MMFUKE11SnFHV4q6Y6EnuzhRrYuWjeubTrW3Y3r1OrtW9N1TPfqyrozW2bdtXcks0FxBLHN6JSoWIpyN2PzPUAcexxoCIm+ZqlkOq5947GDBKr06EheAkY5jJmkZ4gsltqQZJd19x2F2cJdgchIqFUGTAzpMGlNBSSHlHx5QMkjwGRJQPG2Gmsu55oLWYoVWqcisqprVKWQSmZPFMl6du3SNTiJlxEooEbMwjSC6nK+LApj8M3X1hHmhXZ0Oy4u28m0jv/tKiBtQqIMuMrlBmQX4Yu3xd4lcjJhy9pPeOe+lYZE3StZTpEQvEFy+OtjStR4lCMiM3ppBy/WDndpfvbxzyeNb0AZx/UoA4Vrshd293LLN0CyRnPXzRWyqqtqul6nRQNrNcdIpHtDVcgwbSMAnEpeexuzBVCj9GKc9YiUwI+Cl/pDiKmY00AgAbEcuEohnrE1BMDV1tCTFyU/dyU5CClLJyAXX+nakdx4FOJvlyLsYWUn1Y/yk7Ek/OjYF7724sg85dIgCJ0pST0gbyfmAjPplkjqY8m+868cfBX8UFkWucQi5EC9pgJO/6koTmtoCGOWUtHraIVin2cLnOJtCd6H0Sc3BZWXux359+VOJ8UIYJAbISeFf/VEe+oK0NkeV2+DnqDr2nd0fYiu+Un9WbNXp+MZb/4B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17AB52031FB4346CE05305991F0A0652</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VynlMGcsbAVegyoQsTBYSlkwyLykhN6DElsGSwczXX8mAA4Tkcu+Tq9ut7tOLjvqc4yi0PJ9zSASNWSmLQsa9XFvX0oR5MeaUewxHwD1BvJ5/f+dZZeThzRGt1G7VtTdraNXOiG3qo+oZ0p3ARnrNrZh6LbDBrg2RHVSG0pTzFNqMC8xEXbOQ6eqooiOnj1zPMj3HLZ/Van+00jMkXPqWJmWkrUFlvK5NhJh6hrFYLMoLuxwnY8NCyDRe7u96ZAIR1hrnq4zyQEljbU/KARAIQ1ImcWScGzs25wH3enTMsEgTWMcKvouFDFQzpE3A6fhEK85C0GajOBcvMIsZJTikf7Gqzz2ISRyU/HAcJ1RMom+TMJFyrENGdGI67EQzdqEd6WgHYcKxzifYXPvqwggSYARKg267rp0c17X8aD/BjI/iJOK74n/DA2wOYTyFQOebtNbQjnd4oFKNcyBem5Ew5XQOD2pYp5gAX3cTyPGuSo8JjGh2R7kc0IwrdMY2vD1xVY0WHQMX/6dBW81ZOXnGYQqNqn13k43cymlwN+CXT0/CfiQJuZuQM1LPAWwb54qitStxbyiLIVqdWPy6tAb05bpqDge/afXd4a+wbP6qtmBw8xA9Lme+aT+4TfOyZdy+nJ1mtbl46kP3prbsdtz+q/PQ77jotfb6u/uSDTrPFx83mEZ+70+TxFeDZnXBhsELun9FlXSR8Ws4rV6fOj46HRo3vt0h73ZLAMqq1u1rcFt5HDrVpE0vZ2Q5fjY618HAuhl207ELi9Zpx68X6Wzh39Vt7nwvHb4DERtRjUG7VbqSXcLiZzJTGhroo9zUmyry4QKY0BrqlOIOL5V0RwNP9nAlm2d+07WQLRvq207l4hK5NnJrNfMK+ajiWhuSWaHYg3gRsxFVsRTlrsbmZ4Ak8jiwABJ9HqeS6bj2g8cWFrjUZl15CWLGoR9LejbNUTULneVk+D423z9Gf8ezqblMeaiVHmLRYZ3EHwlIdjm5usPJXSB0SkERt5prLgebC1mLGZ6nIjTLc1xmkEpqTxTLepZTdQ1Oo2kICqkRxUEaQnk6meaVMfjqa+mY8Fzbveznt+3bvPb/bUogbQKqDLjKpQmyjXDgcbE3iXybsGluJ7xx76cBVRdL1lMklKyQ7P76HBM1H8WMyIzeLnpv5gZ3YX708a8njR9AGfv1KAIFc7oVdvN0y0dA0kZj080ZNsuzcjqfp3kDHcc2EuneUBUykGX0gKSS2Jb9+AOYUXgxjnpFCuB7wQv9LsRUTFhPYAGRHLhSLh6xNvSAq7WhLW9KduxOshNSlk5AJg7pLkK58ijEP25FxCPKTqof5WcRJ8Fnxw742ooj85Rbg6BsrCT1giy/mQsSS7dUcl+cbDs/5OBQ8F1lUeQCi5ADNUwFfP+npEitrmFC4pSJdkvLFdtEm+MUyyl4n0Zf3ORcXix39N+3O53mI0BAroSc5v7VG+2pK8DGW2S9DnqIr82rpvMTX++ia3xRf9Vs1Wl/xhv/AA==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17AB5203200A346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17AB5203200A346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_10551</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17AB5203200B346CE05305991F0A0652</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00006_ACCESS_UVTC_UserName_RequestorUserBAU_Active_RequesteeFAU_ResetPassword_Role_Retailer_200_OK_P1" searchProperties="true" id="e7bcef44-4a05-4de5-a83e-e271f5b5a02c"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="7b3d55b1-c0dd-4781-923e-daacc7f17772"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="2500dc16-fc21-44c7-b221-51bbc36d6521"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="4eb468af-c25d-4ff5-bdff-1d2e096a4cfe"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU" id="95095679-006a-4b08-9a75-310035712650"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="106d3c18-f126-46a8-93c6-124262575f8e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMpKNzYArUEVCpsYZchkg15eUkNsgYkvEkoHk61cywQESsuw+ubrd6j590VEfS5ImbtCREjLFBK8s04TLoNC2rDzjgSCSyYCTFGSgaDDoXPQCt4oDsj5iVcJuy3pymn7db3pg10cjYnujhmOThl+znciJ/EbDq0UUa1Mpcwi5VISrluVix7dx3cbeEPuB6wYYV33PfbQqt5BJ7VubVPWpFailbFkTpWYBQovForqoVUU2Ri7GDrq/6A3oBFJitY9XGRWBsva7Pa1GQCFJaJWKFB2jLZvjSAYDNuZE5Rm8x4r2xcIIN5G2iSQb/7DKsxCFPBaFeEq44IyShL0RU58LUBMRVTrJWGRMTdK9STjYOLZhSW3qePyHhbahHehoC2EmiS0nxHn31YcYMuAUKjf9sGX9OKxrxdFhRriMRZbKbfG/4QE+h0TMILLlOq13aIc7/KJS7WOgQchpkks2h0szrDNCQb53E+jhrirXGcRs2WNSD+hSGnRoE96OuKpGl41Bqv/ToI3mrJzckiSH9vnZ9dH97WN4dOSL+8Q/n8bOKOw89xcL0SoAbBoXirK1K3FnKMshWp0YNGvAXrjnN+IlzP1ez+eXD9FlPXx7Xobw9owfJjP+Mj+f5xdH3cxDi2b9auoQN2cCQ+Ind9kfef4niSP0fNVTP/mg8xIO0KuQ8UPvN5rGzS55Gzud/qUbDu+vsv7s7+/8+oyx5/O3yfRhVMf3zd4QX77Su5Po9m5KHpcn/l9n2Rx3bzx35PmPzUXv/jVs3OSdVpnOBv5t3frOD/LRFKhai2YMwm7ll+4SUd+TmdGwyI4L02BmyEcq4Mpqm1OGO4Jc0x2LAt3Dlez87Jz4Lq652D2refXTM+zXsN9sOr9wB9d9d00yKxQ7EE8Fj5mJZSh3NTbfA6RpIIFHkNlzkWumk9Y3HrtEkUrI+/oSCC5hKAw9T+fL0cKp6V+zkSM84qepA28YYqtyKdQVv8o6sYJsm5QbW6TcB8pmDAxzm8GWerKl0sV4IfNcJU51Tqoccs3tmaHZwPUaPpIsnSVgoKJURHkC1dlkVpQGydXXtQmVhbZ/Niyu297Edv+ta6BtImYMpMnlBHQf4dPr4gT+OpG9CTvOZsJr9508YuZm6YKqjNEVku1fH3NiBqQcEp3R0+ngyVnjLs0PPv75JPoGFNqtRxkomrONsOu3W78Cmjfa626+EKf6Us3n87xooOfVUKbdI1MhhF00AJprZnsdimfgqPSCDnpGSuA7wUv9NsRcTfhAEQWpHrhKIR6wNwxAmr0h1FdleehSshVSl07BUn2lO030zmMQf7sW0YAaO62+1p+FyKKPjn3hayOOzlOvDYrxsZHME/K6Zy6o0G6ZJj+RbTr/ysFXwbeVZZFLLEoP1ChXsP9PxbBayyKUipyrsGsVik2mLXCq1xkEH0af3BRkXm537N/XO5sVI0BB74SSFf7NIx2YK8DHG2z9HnQPYXe/I+xtdO1P6s+ajTrtznj7Hw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB5203202D346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB5203202D346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB5203202E346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB5203202E346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_105521</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150604_105530</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150604_105530</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150604_105530</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMpKNzYArUEVCpsYZchkg15eUkNsgYkvEkoHk61cywQESsuw+ubrd6j590VEfS5ImbtCREjLFBK8s04TLoNC2rDzjgSCSyYCTFGSgaDDoXPQCt4oDsj5iVcJuy3pymn7db3pg10cjYnujhmOThl+znciJ/EbDq0UUa1Mpcwi5VISrluVix7dx3cbeEPuB6wYYV33PfbQqt5BJ7VubVPWpFailbFkTpWYBQovForqoVUU2Ri7GDrq/6A3oBFJitY9XGRWBsva7Pa1GQCFJaJWKFB2jLZvjSAYDNuZE5Rm8x4r2xcIIN5G2iSQb/7DKsxCFPBaFeEq44IyShL0RU58LUBMRVTrJWGRMTdK9STjYOLZhSW3qePyHhbahHehoC2EmiS0nxHn31YcYMuAUKjf9sGX9OKxrxdFhRriMRZbKbfG/4QE+h0TMILLlOq13aIc7/KJS7WOgQchpkks2h0szrDNCQb53E+jhrirXGcRs2WNSD+hSGnRoE96OuKpGl41Bqv/ToI3mrJzckiSH9vnZ9dH97WN4dOSL+8Q/n8bOKOw89xcL0SoAbBoXirK1K3FnKMshWp0YNGvAXrjnN+IlzP1ez+eXD9FlPXx7Xobw9owfJjP+Mj+f5xdH3cxDi2b9auoQN2cCQ+Ind9kfef4niSP0fNVTP/mg8xIO0KuQ8UPvN5rGzS55Gzud/qUbDu+vsv7s7+/8+oyx5/O3yfRhVMf3zd4QX77Su5Po9m5KHpcn/l9n2Rx3bzx35PmPzUXv/jVs3OSdVpnOBv5t3frOD/LRFKhai2YMwm7ll+4SUd+TmdGwyI4L02BmyEcq4Mpqm1OGO4Jc0x2LAt3Dlez87Jz4Lq652D2refXTM+zXsN9sOr9wB9d9d00yKxQ7EE8Fj5mJZSh3NTbfA6RpIIFHkNlzkWumk9Y3HrtEkUrI+/oSCC5hKAw9T+fL0cKp6V+zkSM84qepA28YYqtyKdQVv8o6sYJsm5QbW6TcB8pmDAxzm8GWerKl0sV4IfNcJU51Tqoccs3tmaHZwPUaPpIsnSVgoKJURHkC1dlkVpQGydXXtQmVhbZ/Niyu297Edv+ta6BtImYMpMnlBHQf4dPr4gT+OpG9CTvOZsJr9508YuZm6YKqjNEVku1fH3NiBqQcEp3R0+ngyVnjLs0PPv75JPoGFNqtRxkomrONsOu3W78Cmjfa626+EKf6Us3n87xooOfVUKbdI1MhhF00AJprZnsdimfgqPSCDnpGSuA7wUv9NsRcTfhAEQWpHrhKIR6wNwxAmr0h1FdleehSshVSl07BUn2lO030zmMQf7sW0YAaO62+1p+FyKKPjn3hayOOzlOvDYrxsZHME/K6Zy6o0G6ZJj+RbTr/ysFXwbeVZZFLLEoP1ChXsP9PxbBayyKUipyrsGsVik2mLXCq1xkEH0af3BRkXm537N/XO5sVI0BB74SSFf7NIx2YK8DHG2z9HnQPYXe/I+xtdO1P6s+ajTrtznj7Hw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17AB5203202D346CE05305991F0A0652</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZrV/I4EP4rnPpxT0lvIPQI56CgL6+irqCrfvHEdAphS1KTlNuv36RABUSX3U89M53MPHPJkzmTeJJ4YUtKEIpyVppPEibDXNuwMsFCjiWVIcMTkKEiYb/Vuwm9shPizRGr1G03rLeqT/wojnzbBb9uB7W4YuOYeDZ241o9OvXrNexpUykz6DKpMFMNy3Pciu1UbScYOJXQ80LXL/vV2qtVegIhtW9tUnasNai5bFgjpdIQodlsVp75ZS6GyHMcFz33bvpkBBNsNc9WGeWBRHNtT8oREEgSUiZ8gs7Qjs1ZJMM+HTKsMgHrWNF3sRzk1JG2iSQdnljFWYi6LOa5eIEZZ5TghC6xqU8P1IhHpVYy5IKq0eTbJFzHOLZhTmziBuzEQrvQjnS0g1BIbMsRdte+HiAGAYxA6fGh27BOjutafnQgMJMxFxO5K/43PMCmkPAUIltu0lpDO97hgUo1z4CEXUaSTNIp3JphTTEBue4mkONdle4FxHR+Q6Ue0Lk06NA2vD1xVY02HYJU/6dBW81ZOXnCSQbNZVrve+n1bM6uRr+jd6/64T7Hij12Xx8bOYBt41xRtHYl7g1lMUSrEw9PIptHL3SYjee98+XydHzVZsv68nxZe+lfI56NX1OG2tX6K2OPN0xwpx8EdTa9TpIrN7i+Ov0LvZNBVZ47QWecnvN7WC7ij6fkpTW7vXvstAd3bmv5IhcXzz3xvsjux5f9mRiNs9ld99GbxR+d3nJ+J+C101n4s9/+r+FN7X5RecJ/1DrZKxr2vPZiWXv/s/fyq9Uo0tnCv6vb3Pl+9j4GojaiGYNuu3Spu4TVz2RmNDSy49w0TA35SAVMWU1zynBHmGm6o1Goe7iS3dPWecVzfM+p+X5Qveg4Fd+p1OvupdNyqhVvQzIrFHsQLziLqYllKHc1Nj8DJJNQAotA2FOeaaaT1g8e21jhUpc96EvAmYQB1/TsOszlBEiWBCPqVtUkrtaqLEhmdat0y9UduxOtWIHYJeXaDik/AKEpBcPcZrClnmypdDE+8DRTiVue4jKDTHO7MDQbekGtgiSdpAkYqGjCoyyBcjpK89IgufpqsiEy1z50Bvl1+zax/X+bGmibiBoDaXI5B91HOPC6OJtEvk3YdbcT3rhvZRE1N0sXVAlKVkh2f33OiRmQYkh0Rm8X/Td3g7swP/r415PoB1Bovx5FoGhKt8Ju3m79CmjeaG66+YHd8kc5m06zvIFB4COh3SNTIeR4qK/nRzPbYsD/BoYKL+ioZ6QAvhe80O9CzNSI9RVWMNEDV8rFI/aGPkizN3T1VZkfu5TshNSlUzBXh3QXid55DOIf1yISEmOn1ff6M+Mi+uzYAV9bcXSeem1QlA2NZJ6QxTdzQbh2SzX5cbHt/JCDQ8F3lUWRCyxKD9R7puD7PyXDag0LE8IzprptK1dsM22OUy1SCD+NvrjJybzY7ui/r3c2zUeAgN4JJc39m0c6NFeADbfYeh30MGF77Z8Iexdd84v6q2arTvsz3vwH</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17AB52032083346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17AB52032083346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_105530</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17AB52032084346CE05305991F0A0652</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00007_ACCESS_UVTC_UserName_RequestorUserBAU_Active_RequesteeSAU_ResetPassword_Role_Retailer_200_OK_P1" searchProperties="true" id="2d319967-2aa6-46db-8d63-05a37fa9a558"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="ea1bb216-2efb-4f20-a5d1-087424fc475c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="389bdb57-c5a9-44cb-9eb3-377401532466"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="9fbcde8f-dc3a-4ac7-858e-1443f3a59655"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU" id="3c249b4b-8b51-4646-9aaa-597e562a8efa"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="67e03e5d-8203-4577-9ed0-44f71925b4b2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU" id="dd4d3b16-edfd-40f6-b151-ba16c37c8dc9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="6211e0eb-03e9-49d4-a90a-8f2b39e98cf2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc+o4DP4rTPq4E5wEKJApzNDSCz1woEAv25eOcRQwTZwQ20DPr187QAoUWHafMlJk6dPFn3XFcRg4boNzSASNWG4ZBoy7qbZmyIS5EeaUuwyHwF1B3EGj03advOXizREj12rWjI9C2XMKftE3ATvELDoVz6wQr2SWLyvYdkbeyCZVZcq5hBbjAjNRMxzLLpnWpWkVh1bJdRzXqeTL1dK7kXuBhCvfyiRvGWtQS14zJkLELkKLxSK/KOSjZIwcy7LRW6c9IBMIsVG/WmWUBkrqa3uS94BAEJA8iUJ0hXZsrjzuDuiYYSETWMfyjsWykFVFysbjdHxhZGfBazE/SsUbzCJGCQ7oH6zr0wExibxcIxhHCRWT8GgStqUdm7AkJrGL7MJAu9DOdLSDMOHY5BNsr331wYcEGIHcc79VMy7O61p6dJhgxv0oCfmu+N/wAJtDEMXgmXyT1hra+Q4PVKp+BcRtMRJITufwWw9rjAnwdTeBnO8q10vAp8s25WpAl1yjQ9vw9sRVNZp0DFz8nwZtNWfl5AUHEuqX75VAVBsvo2cW+a8Phc7L9Lb09DT99fRZSwFsG6eKrLUrcW8osyFanXi/n/rx7evsttlPxtF1Urh97jcq1Rerg1Rv2k9oVAiG7HUU+w9y/vZYHd7TB1QeOeVC9aETDjvL+8VjL66WHqbd4iz+5CiW/e5iUXlstNCcFK8ZPI++WhPrut+TL6Tqd9/bojLvP9PhbInC7uOv8Xuj/LX4e9RrT0bzCKNexPjdzV/N6Yx1wv5btwPSu5vxV/xcy9LZwr+r29z5gRxNgYiNqMeg1czdqS5hcZrMtIZ6pp+aurEmHy6ACaOuT2nucKWiO+q5qocr2S43rkuOVXCsRrlQvLy5tUoFq1St2ndWw7osORuSWaHYg3gTMZ/qWJpyV2NzGiAJXQ7Mg8ScR1IxHTdOeGxigXMt1leXQJUVhpGiZzsoT62kKP+Upl7BliFjUxp/Wv5SGrnfkeiybtLwBSS7pFzZIeU+EBpT0MytB5uryeZCFWOG51IEdn6O8wyk4vZE06zrFCslxGkYB6ChojDyZAD5eBKnpUF89XVMTHiq7d8O0+t2NLH9f5saKBuPagOuc7kG1Uc48LrYm0SOJmzb2wlv3DekR/XNUgUVCSUrJLu/vudED0g2JCqjj5vBh73BnZmfffznSXQCFNqvRxbIm9OtsJu3W70Cijfqm27OsJ2f5eV8LtMGFosFlCj3SFcIWQ4aAJGK2b6G0ScwlHlBZz0jGfC94Jl+F6IUEzYQWECoBi6XimfsDQPgem9oqauyPHcp2QmpSidgKQ7pbgK182jEJ9ci4hJtp9Q99VlEiffdsQO+tuKoPNXaICgba0k/IV9H5oJEyi1V5Bcl284POTgUfFeZFTnDItRAjaSA439ymtVqBiYkkky0mkaq2GbaFKf4isH9NvrhJiXzbLuj/77emTQdAQJqJ+Q09a8faVdfATbeYut10COEfXmKsHfR1X+of2q26rQ/4/V/AA==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB520320A6346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB520320A6346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB520320A7346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB520320A7346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_105550</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150604_10569</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150604_10569</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150604_10569</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc+o4DP4rTPq4E5wEKJApzNDSCz1woEAv25eOcRQwTZwQ20DPr187QAoUWHafMlJk6dPFn3XFcRg4boNzSASNWG4ZBoy7qbZmyIS5EeaUuwyHwF1B3EGj03advOXizREj12rWjI9C2XMKftE3ATvELDoVz6wQr2SWLyvYdkbeyCZVZcq5hBbjAjNRMxzLLpnWpWkVh1bJdRzXqeTL1dK7kXuBhCvfyiRvGWtQS14zJkLELkKLxSK/KOSjZIwcy7LRW6c9IBMIsVG/WmWUBkrqa3uS94BAEJA8iUJ0hXZsrjzuDuiYYSETWMfyjsWykFVFysbjdHxhZGfBazE/SsUbzCJGCQ7oH6zr0wExibxcIxhHCRWT8GgStqUdm7AkJrGL7MJAu9DOdLSDMOHY5BNsr331wYcEGIHcc79VMy7O61p6dJhgxv0oCfmu+N/wAJtDEMXgmXyT1hra+Q4PVKp+BcRtMRJITufwWw9rjAnwdTeBnO8q10vAp8s25WpAl1yjQ9vw9sRVNZp0DFz8nwZtNWfl5AUHEuqX75VAVBsvo2cW+a8Phc7L9Lb09DT99fRZSwFsG6eKrLUrcW8osyFanXi/n/rx7evsttlPxtF1Urh97jcq1Rerg1Rv2k9oVAiG7HUU+w9y/vZYHd7TB1QeOeVC9aETDjvL+8VjL66WHqbd4iz+5CiW/e5iUXlstNCcFK8ZPI++WhPrut+TL6Tqd9/bojLvP9PhbInC7uOv8Xuj/LX4e9RrT0bzCKNexPjdzV/N6Yx1wv5btwPSu5vxV/xcy9LZwr+r29z5gRxNgYiNqMeg1czdqS5hcZrMtIZ6pp+aurEmHy6ACaOuT2nucKWiO+q5qocr2S43rkuOVXCsRrlQvLy5tUoFq1St2ndWw7osORuSWaHYg3gTMZ/qWJpyV2NzGiAJXQ7Mg8ScR1IxHTdOeGxigXMt1leXQJUVhpGiZzsoT62kKP+Upl7BliFjUxp/Wv5SGrnfkeiybtLwBSS7pFzZIeU+EBpT0MytB5uryeZCFWOG51IEdn6O8wyk4vZE06zrFCslxGkYB6ChojDyZAD5eBKnpUF89XVMTHiq7d8O0+t2NLH9f5saKBuPagOuc7kG1Uc48LrYm0SOJmzb2wlv3DekR/XNUgUVCSUrJLu/vudED0g2JCqjj5vBh73BnZmfffznSXQCFNqvRxbIm9OtsJu3W70Cijfqm27OsJ2f5eV8LtMGFosFlCj3SFcIWQ4aAJGK2b6G0ScwlHlBZz0jGfC94Jl+F6IUEzYQWECoBi6XimfsDQPgem9oqauyPHcp2QmpSidgKQ7pbgK182jEJ9ci4hJtp9Q99VlEiffdsQO+tuKoPNXaICgba0k/IV9H5oJEyi1V5Bcl284POTgUfFeZFTnDItRAjaSA439ymtVqBiYkkky0mkaq2GbaFKf4isH9NvrhJiXzbLuj/77emTQdAQJqJ+Q09a8faVdfATbeYut10COEfXmKsHfR1X+of2q26rQ/4/V/AA==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17AB520320A6346CE05305991F0A0652</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VynmcMl4wmytQxZKFGciCCZObl5SQ26BcW3IsmSVfP5IBBwgwzDy5ut3qPr3oqK85ikLbbXEOiSCMFpZRSLmbaRtamlCXIU64S1EE3BXY9VqDvmsXTRdtj2iFXrehvYNVxmXLtHS/6ji6M4FArwe4osNkYlUgsO2a40tTzlPoUS4QFQ3NNq2yblZ00xmZZde23VKt6NTqb1phDAmXvqVJ0dQ2oJa8oc2EiF3DWCwWxUWpyJKpYZumZbwO+h6eQYS05vU6oyxQ0tzY46IPGMIQFzGLjGtjz+ba565HphSJNIFNLP9ULNMw64a08TmZXmn5WfB7NGCZ2EGUUYJRSL6Qqs8AxIz5hVY4ZQkRs+hkEpapHOuwxDq2HHqlGfvQLnS0hzDhSOczZG18DSGABCiGwsuw19CuLutadnSUIMoDlkR8X/xveIDOIWQx+DrfprWBdrnDI5VqXgN2exSHKSdzeFDDGiMMfNNNwJe7KjwlEJBln3A5oEuu0Bm78A7EdTW6ZApc/J8G7TRn7WSMwhSaXy/jMeuMxnh1v0jx4KEdtb3IWaTt8XMjA7BrnCny1q7Fg6HMh2h9wqvdj8dtM3pu8yAefy2f7tqWff9HF8rPU2cYvdV+lab4ZdH/82M1D3l7UJ+NB8NSidYq9tvjXx8pKyXVVeC/Rf05cqavRvX+pdsLZiR1VtF9V/y+9XAl+duoPbPFJAjr1ZG5epsvPSbN22k3HH+W2lb7w/sCVq/d3ZT77Ff1dTJctp7ry7d+Yn3V7uy4M5tCsHhp5Ons4N/Xbe+8l04+AIutqMag1y3cyi4hcZ7MlIb4epCZurEiHy6ACq2pTinucFNJd8R3ZQ/XslVttcu2WbLN207JqXRuzHLJLNfr1q3ZMitle0syaxQHEDuMBkTFUpS7HpvzAHHkcqA+JPqcpZLpuHbGYxcJVOjRobwEjHIYMUnP1vzT9pcIomrAAqvsxMEEJ86smtpa4YGJR/qYtAIByT4p1/ZIeQiYxAQUc6vB5nKyuZDF+ETzVIRWcY6KFFLJ7YmiWdd2amWDkygOQUE1IuanIRTjWZyVxuDrr60jzDPt8GaUXbeTiR3+29ZA2vhEGXCVSxtkH+HI62JvEzmZsGXtJrx130p9om6WLKhICF4j2f/1PSdqQPIhkRm9d7x3a4s7N7/4+M+TxhlQxmE98kD+nOyE3b7d8hWQvNHcdvMTWcXPYjqfp1kDHadkJNK9oSpkmLbhAU4ls61G7DdQI/diXPSM5MAPguf6fYipmFFPIAGRHLhCJl6wN3jA1d7Qk1dleelSshdSlk7AUhzTdUK58yjEZ9ci7GJlJ9VP8rNgyXfix3ztxJF5yrVBEDpVknpCVifmAjPplkjyY8mu82MOjgXfV+ZFzrEIOVCTVMDpPwXFag0NYcxSKnpdLVPsMm2GU6xicL+NfrjJyDzf7si/r3c6yUYAg9wJOcn8q0faVVeATnfYehP0OGG3KucIex9d84f6p2anTocz3vwH</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17AB520320FC346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17AB520320FC346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_105557</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17AB520320FD346CE05305991F0A0652</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZXzBMI4rUEUgmWUnAWLYZCYvU0JqgxIjgSRzydePZMABQrLsPrm63eo+fdFRX0o0Tf2oKSUIRTkrraYpk1GurVuZYBFHksqIoSnISOFo0Ly7jfyyG6HdEavUadet34GLgyBBFbtWSYgdoJDYoedXbZfUQpIQXAGMtamUGXSYVIipuuW7njao2W4wdKuR70fVSjm8cJ+s0gMIqX1rk7JrbUGtZN2aKDWLHGe5XJaXlTIXY8d3Xc/5eXc7wBOYIqtxuckoDyQaW3tcJoAhTXEZ86lz6RzYXBIZDeiYIZUJ2MYiH8VyHffC0TZE0vEXqzgLpMMSnostxDijGKX0FZn63IGacFJqpmMuqJpMP0zCc41jG1bYxl7AvljOIbQzHR0gFBLZcoK8ra8YEhDAMJT+iTt168t5XcuPDgViMuFiKg/F/4YH2AJSPgNiy11aW2jnOzxRqcYl4KjDcJpJuoCuGdYZwiC33QR8vqtSX0BCV7dU6gFdSYPO2Yd3JG6q0aZjkOr/NGivORsnDyjNoBH2W99/hcTn8+vlWN5Wbq7XP597IUHdZT0HsG+cK4rWbsSjoSyGaHOiSWNxk60EmV/zx4W/CMPar9HQ/RHQ54en1ZMzHDiPf8XYk/GqP1lPXudVr9OrkvX8ZYmT9eC+27/psOb9nQoJlY+DtMvEKESLWvPlPrmmKSRfJ2ka//09e/JGlYFCLRT2ArGet7+S+KX7o/at/1Dt9+7nrzevHXDxfS8O5le14Sv8uLtaZ9/b3dG3+6/ZE45jXC/S2cN/qNvd+UE2egasdqIZg067dKO7hNTnZGY0lNhJbhrNDPlIBUxZDXPKcEeUabqjJNI93Mjet+ZV1Xcrvuc1K0Gtde1WK2714sK7cZturervSGaD4ghii7OEmliGcjdj8zlAPI0kMALCXvBMM520PvHYRgqVOizWl4AzCUOu6bmCAj57WfsiC55X9HUazthylF1wq9Tlqsd6opkoEIeUHB5QcgyYzigY3jZjLfVcS6VLMUeLTKVeeYHKDDLN7MKQbOQHYdWRdDpLwQB1ppxkKZRnk1leGEduvr6NsMy18fUwv2wfpnX8b1cBbUOoMZAmlyvQXYQTb0uwS+TDhD1vP+Gd+2ZGqLlXupxKULxBcvjrbUrMeBQjojP63Rr89na4C/Ozj78/6XwCyjmuRxGILOhe2N3Lrd8AzRqNXTfnyCvPy9likeUNDIKKI7R7x1TIcX1nADjTvLYe8hdgTuHFOesRKYAfBS/0hxAzNWGaNxRM9cCVcvGMrWEA0mwNHX1RVueuJAchdekUrNQpXSvVG49B/OlShCNs7LS6rz9LLshbx0742ouj89RLg6JsbCTzgKw/mAvMtVuqqY+LfeenHJwKfqgsilxgUXqgRpmCj/+UDKfVLYQxz5jqtK1csc+zOU61nkH0ZvTOTU7lxW5H/325s2k+Ahj0Rihp7t880ZG5Amy8x9XboCfp2m3WPqPrQ3SNd+r3mr06Hc944w8=</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>17AB5203211A346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:17AB5203211A346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20150604_10569</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>17AB5203211B346CE05305991F0A0652</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e34c814a-8ac5-424b-a19a-7d3453e3b9c7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1de1e00d-487c-492d-b21b-5e895e1ee18e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00008_ACCESS_UVTC_UserName_RequestorUserBAU_Active_RequesteeOtherBAU_ResetPassword_Role_Retailer_200_OK_P1" searchProperties="true" id="b0eabbfe-7b17-4069-a33f-6aeed2d8bf03"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="93cf2043-156b-4c62-9e98-549edc6cd7cb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="65eda489-a860-4566-a111-f6ae2f2e22bd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="a45bdd19-5dcd-48b5-b5ef-48e5952dcec8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU" id="c3fa09f5-8920-4046-9049-863444c317a3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Second Adult BAU" id="f5347e7d-1e2b-492e-9ae3-4858331d8ecf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Second Adult BAU" id="64d881d8-5898-4631-810e-7bc25e8d1ce4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="7ee805fc-e3c4-4de1-8ab8-ce0046d6b1cb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZZc+I4EP4rlOcxZWQbm4ArUOVwTNiEHJBr92VKyA0oY0vGkjny60cy4AAJWXafXN1udX996FNfCBxHjh8IAamknJWWccSEn2sbRpYyn2NBhc9wDMKXxB8G/RvfKVs+3h4xSr12w/jlEqvuOCGY9TG2TTeEqlmvgGXaNc+xMQ7t+qimTIXIoMeExEw2DMeyPdOqmpb7aHm+U/Ht87Jje/8YpWdIhfKtTMqWsQG1FA1jKmXiI7RYLMqLSpmnE+RYlo1e+zdDMoUYG82LdUZ5oLS5sSflEAhEESkTHqMLtGdzEQp/SCcMyyyFTazwWCwLWXWkbEJBJz+M4iyEPTbmudjCjDNKcETfsa5PH+SUh6UgmvCUyml8NAnb0o5NWBKT2C77YaB9aCc62kOYCmyKKbY3vgYwhhQYgdLToNcwfpzWtfzoY4qZGPM0Fvvif8MDbA4RTyA0xTatDbTTHX5RqeYFEL/HSJQJOodbPawJJiA23QRyuqvSfQpjuryhQg3oUmh0aBfegbiuRptOQMj/06Cd5qydPOMog+bD+fV9N2y3rqov6YiwKOn+xuR2Mqt5/UYOYNc4VxStXYsHQ1kM0fpEJ5MBb/HB5d9z9+WVnc/o4r1z73Fn5Tz8HPbH70+zetQ9648e6E+vM7q7XjhnXvd2eD1K3gIveHFeukFForCXZA/O5flt2nafz/6q3GY4vLIotO/fX/vR693q8az7xFzk1u7a9G4RzZ571zaz45vsrRVWXmpBVEWWWEUddlaP6NXPc4YWA3tcf5fzK1mdD520HjSKdHbw7+u2d36Yjd6AyK2ox6DXLnVVl7D8nsy0hobmODf1E00+QgKTRlOf0tzhZ4ruaOirHq5l+zy49Byr4tiVTsWttjqWV7G8et3uWoFV9ZwtyaxRHEBscTamOpam3PXYfA+QxL4AFkJqznmmmE4Y33hsY4lLPTZQl4AzAY9c0fPYqfLw7W0UeyuSsqlXcROHLN9do3TL5R27S4OxhHSfkmt7lDwAQhMKmrf1WAs110KqUszwPJORXZ7jMoNMMXuqSdZ33JqHBI2TCDRQFPMwi6CcTJO8MEisv46Jici1g85jftmOpnX4b1sBZRNSbSB0LpegughfvC3WNpGjCdv2bsJb90EWUn2vVDllSskayf6vjynR41GMiMroV2v4y97iLsxPPv75JPoGFDqsRxEonNOdsNuXW70BijWa227OsF2elbP5PMsb6LoVlCr3SFcIWQ4aAskUr60e+W9gqPCCTnpECuAHwQv9PsRMTtlQYgmxGrhSLp6wNQxB6K2hpy7K8tSVZC+kKp2EpfxK14rUxqMRf7sUEZ9oO6W+V58FT8OPjn3hayeOylMtDZKyiZb0A7I6MheEK7dUUR9Pd51/5eCr4PvKosgFFqkGapRJOP6npDmtYWBCeMZkr23kil2ezXHKVQL+h9EnNzmVF7sd/fflzqT5CBBQG6GguX/9RPv6CrDJDldvgh6h6/Z3dL2PrvlJ/VmzU6fDGW/+AQ==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB5203213D346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB5203213D346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB5203213E346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB5203213E346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_105634</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150604_10578</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150604_10578</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150604_10578</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZZc+I4EP4rlOcxZWQbm4ArUOVwTNiEHJBr92VKyA0oY0vGkjny60cy4AAJWXafXN1udX996FNfCBxHjh8IAamknJWWccSEn2sbRpYyn2NBhc9wDMKXxB8G/RvfKVs+3h4xSr12w/jlEqvuOCGY9TG2TTeEqlmvgGXaNc+xMQ7t+qimTIXIoMeExEw2DMeyPdOqmpb7aHm+U/Ht87Jje/8YpWdIhfKtTMqWsQG1FA1jKmXiI7RYLMqLSpmnE+RYlo1e+zdDMoUYG82LdUZ5oLS5sSflEAhEESkTHqMLtGdzEQp/SCcMyyyFTazwWCwLWXWkbEJBJz+M4iyEPTbmudjCjDNKcETfsa5PH+SUh6UgmvCUyml8NAnb0o5NWBKT2C77YaB9aCc62kOYCmyKKbY3vgYwhhQYgdLToNcwfpzWtfzoY4qZGPM0Fvvif8MDbA4RTyA0xTatDbTTHX5RqeYFEL/HSJQJOodbPawJJiA23QRyuqvSfQpjuryhQg3oUmh0aBfegbiuRptOQMj/06Cd5qydPOMog+bD+fV9N2y3rqov6YiwKOn+xuR2Mqt5/UYOYNc4VxStXYsHQ1kM0fpEJ5MBb/HB5d9z9+WVnc/o4r1z73Fn5Tz8HPbH70+zetQ9648e6E+vM7q7XjhnXvd2eD1K3gIveHFeukFForCXZA/O5flt2nafz/6q3GY4vLIotO/fX/vR693q8az7xFzk1u7a9G4RzZ571zaz45vsrRVWXmpBVEWWWEUddlaP6NXPc4YWA3tcf5fzK1mdD520HjSKdHbw7+u2d36Yjd6AyK2ox6DXLnVVl7D8nsy0hobmODf1E00+QgKTRlOf0tzhZ4ruaOirHq5l+zy49Byr4tiVTsWttjqWV7G8et3uWoFV9ZwtyaxRHEBscTamOpam3PXYfA+QxL4AFkJqznmmmE4Y33hsY4lLPTZQl4AzAY9c0fPYqfLw7W0UeyuSsqlXcROHLN9do3TL5R27S4OxhHSfkmt7lDwAQhMKmrf1WAs110KqUszwPJORXZ7jMoNMMXuqSdZ33JqHBI2TCDRQFPMwi6CcTJO8MEisv46Jici1g85jftmOpnX4b1sBZRNSbSB0LpegughfvC3WNpGjCdv2bsJb90EWUn2vVDllSskayf6vjynR41GMiMroV2v4y97iLsxPPv75JPoGFDqsRxEonNOdsNuXW70BijWa227OsF2elbP5PMsb6LoVlCr3SFcIWQ4aAskUr60e+W9gqPCCTnpECuAHwQv9PsRMTtlQYgmxGrhSLp6wNQxB6K2hpy7K8tSVZC+kKp2EpfxK14rUxqMRf7sUEZ9oO6W+V58FT8OPjn3hayeOylMtDZKyiZb0A7I6MheEK7dUUR9Pd51/5eCr4PvKosgFFqkGapRJOP6npDmtYWBCeMZkr23kil2ezXHKVQL+h9EnNzmVF7sd/fflzqT5CBBQG6GguX/9RPv6CrDJDldvgh6h6/Z3dL2PrvlJ/VmzU6fDGW/+AQ==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17AB5203213D346CE05305991F0A0652</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VynlMGa9srkAVgVBxBnK5LJmbvKSE3IASWwZLNiZfP5IBBwgwzDy5ut3qPr3oqO8YCnzTaTIGESchLaSBT5mTaetKHFEnRIwwh6IAmMOxM2z2uo5Z1B20O6IU3HZdeQeoVBBMLLVcLRuqXcFIreleRTWRrVs2lGpWpSRMGYvBpYwjyuuKqRslVS+ruj3SS45pOZZZLJfKb0rhBSImfAuToq5sQaWsrsw5XziatlqtiiurGEYzzdR1Q/vT6w7xHAKkNO42GWWBosbWHhc9wOD7uIjDQLvTDmzuPOYMyYwiHkewjeWdi6Vrek0TNh4jsxslPwueS6dhJrYQDSnByCdfSNanB3weeoWmPwsjwufB2SQMXTpWIcUqNmx6o2iH0K50dIAwYkhlc2RsfQ1gChFQDIXxwK0rN9d1LTs6ihBl0zAK2KH43/AATcAPF+CpbJfWFtr1Dk9UqnEH2HEp9mNGEniWw7pAGNi2m4Cvd1XoRzAlaZcwMaApk+i0fXhH4qYabTIDxv9Pg/aas3HygvwYGi3Ccdo3444b+xiao6R6/9zurKrNSq+eAdg3zhR5azfi0VDmQ7Q58Vfy9jZakCXtPIy6HAXV2r1r+XyZYtN/mnj67egB9T7sj1q/YuDp8nOy/mwPn0b3z+6Yk9nj+H5aLWl/Jp1HP6X9FSotk+7HYBj4TxHrVd3qY7/80nfbxuPy9TUG+4NUH+deN/lav/oTlHq6nvRnY/t2PP5tTcdpvzW5pV1tsuhYSTArQ9/6e1JDncnrE2pOf9fzdPbwH+p2d34YTz4A850ox8BtFzqiS4hfJjOpIZ46zUydhSQfxoFypSFPSe5wYkF3xHNEDzeyUWnel0zdMo2aZdnl1oNesvRSrWZ09KZeLpk7ktmgOILYCumUyFiScjdjcxkgDhwG1INITcJYMB1TLnhsI44KLh2ISxBSBqNQ0DNOzITjBHNIPMNin1/rOSd6OVkoheeQ/6K/ouaUQ3TIydUDTh4AJgsCkrjlXDMx2IyLWixREnPfKCaoSCEW1B5JlnVMW8wII8HCB4lUC0Iv9qG4mC+yymhs8zVVhFmmHTyMstt2Nq/jf7sSCBuPSAMmc7kH0UY48biYu0TOJmwY+wnv3Ddjj8iLJerJI4I3SA5/fY+JnI98RkRG763hu7HDnZtfffznSe0CKO24HnkgLyF7YXdPt3gEBG00dt1cIqO4LMZJEmcNtG1Li4R7TVZI001tCDgWxLYehZ9AtdyLdtUrkgM/Cp7rDyHGfE6HHHEIxMAVMvGKtWEITK4Nrrgp6bU7yUFIUToOKT+la/li5ZGIL25F2MHSTqj74rMKI++7Yyd87cUReYqtgRM6k5J8QdZn5gKHwi0R3BdG+85POTgV/FCZFznHwsVATWIO5/8UJKnVFYRxGFPutpVMsU+0GU6+XoDzbfTDTcbl+XJH/n27U0k2AhjESshI5l++0Y68AnS2R9bboKf52mpf4utDdI0f6p+avTodz3jjHw==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17AB52032193346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17AB52032193346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_105649</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17AB52032194346CE05305991F0A0652</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZrU/I6EP4rTP3olKYt5dIRZhBU8BVQir7KFyekW4iWFJuUi7/+JOUiIHA451Nnt5vdZy95slccj0PLrXIOsaARy8zHIeNuqi1rSczcCHPKXYbHwF1BXK/aenCtLHLx+oiWadbL2nvJImYuT3K65Vh5PVcaFPSSVSrqeBCAhQLbL6G8NOU8gSbjAjNR1ixkOjrK6yjXQ45r5VyEsgihvpZ5gZhL39Iki7QVqDkvayMhJq5hzGaz7MzORvHQsBAyjdfWg0dGMMZa5WqZURoorqzsSdYHAmFIsiQaG1fGjs2Vz12PDhkWSQyrWP6xWMhAJUPa+JwOL7TNWfCbLIhSsYZZxCjBIf3Gqj4tEKPIz1TDYRRTMRofTcJEyrEOc6LLUrILzdiFdqajHYQxxzofYXPlqwsBxMAIZJ67zbJ2cV7X0qO9GDMeRPGY74r/DQ+wKYTRBHydr9NaQTvf4YFKVa6AuE1GwoTTKbTVsE4wAb7qJpDzXWUeYwjo/IFyOaBzrtAZ2/D2xGU16nQIXPyfBm01Z+nkBYcJVF7uXuuXn2K6+OoOGh8MvVAj7Ld7vWbjqZwC2DZOFZvWLsW9odwM0fLEp9OBXOFvUGj0i89DO+iRz06raP2xjZvO4O36PhajLn0j30+XxcRelPoWe3jli8HMrL96hVGvPerb+I7dXnfzzy3bGw5qhXuH3DuFJ1HK55PJ09uMDg1nGPXe8Mf4zmoDDfKFRs17cf4+Bpd9vzZ9froMX83GLUaP7Zp3d5sbTMKHL8aCETScVsHr4Ltc/k+jt0p3D/+ubn3nvWTwAUSsRTUGzXrmVnYJi9NkpjTU14PU1J0o8uECmNAq6pTiDjeRdEd9V/ZwKZuF6rVjIdsyr007l6/dIMdGTqlk3qIqyjvWmmSWKPYg1iIWUBVLUe5ybE4DJGOXA/Mh1qdRIpmOayc81rHAmSbryksQMQ69SNKzWWCxbUfBt0+4mUyKiUVndBHbAy3TjkSHdeJqICDe5eTiDid3gdAJBUXcaq65HGwuZC2+8DQRoZmd4iyDRFJ7rFhWHi06BqfjSQgKqTGO/CSE7GQ0SStj8OXX0jHhqbZ700tv29G89v+tSyBtfKoMuMrlGmQb4dfjYrvOOpGjCZvmdsJr99XEp+piyXqKmJIlkt1fP2Oi5mMzIzKj95r3bq5xb8zPPv77pHEClLFfj00gf0q3wq6fbvkISNqorLv5hc3sVzaZTpO0gbmcbcTSvaEqZCDL8IAkktgWvegTmLHxYpz1imyA7wXf6HchJmLEPIEFjOXAZVLxjLXBA67Whqa8KfNzd5KdkLJ0AubikK4WypVHIT65FRGXKDupfpSfWRT7Px074GsrjsxTbg2CsqGS1AuyODIXJJJuqeS+KN52fsjBoeC7yk2RN1iEHKhBIuD4n4witbKGCYkSJpp1LVVsE22KUywm4P4Y/XKTcvlmuaP/vt3pNB0BAnIl5DT1r95oV10BNtwi61XQw3xt10/x9S66yi/1b81WnfZnvPIP</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>17AB520321B1346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:17AB520321B1346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20150604_10578</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>17AB520321B2346CE05305991F0A0652</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e34c814a-8ac5-424b-a19a-7d3453e3b9c7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1de1e00d-487c-492d-b21b-5e895e1ee18e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00009_ACCESS_UVTC_UserName_RequestorUserSAU_Active_RequesteeSelf_ResetPassword_Role_Retailer_200_OK_P1" searchProperties="true" id="da31d5c7-75e5-4292-9570-9e4805c407bf"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="dfc9fe4b-0870-4f5f-87bb-7878e294e4b1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="6fa58236-e8b4-4bc8-bfb5-cc94584bcc2d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="953d6b83-3548-4963-8cca-64baa345e1c4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU" id="89e1fdaa-db7c-4ef6-acfc-69e1ed158803"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="5bea8126-12a3-4fad-818f-b7195f694c55"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc6JKEP4rFvu4hVwEUSpaZWKS464mlpjry9ZkaHBcGAgzKPrrdwaVVRNzPOeJ6qan++vLfNMXDMWR6fYYg4yThNaKOKLMLbUdJc+omyBGmEtRDMzl2PV6o6Fr1nUX7Y4otUG/o/yCwA6Mpm2oTrvRVq2W01ZbqNVUA9RqNQz81rYwCFPGchhQxhHlHcXUDVvVm6puTXXbNS3XtOtNp/Wq1B4hY8K3MKnryhZUwTrKjPPU1bTlcllfNupJFmqmrhva82jo4RnESOlebDIqA2XdrT2u+4AhinAdJ7F2oR3YXPjM9UhIEc8z2MbyT8XSNb2tCRufkfCbUp0Ff0CDpBSvEE0owSgiayTrMwI+S/xaLwqTjPBZfDIJQ5eOVSiwig2LflO0Q2hnOjpAmDGkshkytr4mEEAGFEPtYTLoKN/O61p5dJohyoIki9mh+N/wAF1AlKTgq2yX1hba+Q4/qVT3ArA7oDjKGVnAnRzWFGFg224CPt9VbZxBQIohYWJACybRafvwjsRNNfokBMb/T4P2mrNx8oiiHLpt8vDD0T1vmJvOfDJ5KRrzn+vG432KB50SwL5xqahauxGPhrIaos2JYeMmXF23SLp+HJFB2ntakdbz7+90NEUP0fzJtwPy3en9uHxaG8nrtTUeGo9r1F5fhv2x/uIUt7O+tdRNx1i95CPUnDQD2rTI4tFH7cJ7//6wftLT8ejVmT+vCi+8I7eeY6+b93gePv+4m95G/0T9vnGFxgH0ntrDKdGYHTo/zRvnOgymMPUW/M65XbyNR0Yx6lTp7OE/1O3uvJe/zQHznSjHYNCv3YguIf41mUkN8dWgNHVTST6MA+VKV56S3OHmgu6I74oebmTD6V3apt4wjb7dsJpX17rd0O1227jRe3rTNncks0FxBPEqoQGRsSTlbsbma4A4dhlQHzJ1keSC6Zjyhcc+4qg2oBNxCRLKYJoIejZmDZzNQxQFRdOykpjGv4swt9hSqd0l/J7eZ72AQ3bIya0DTp4AJikBSdxyrpkYbMZFLd7RIueRUV+gOoVcUHsmWVYcbdkaI3EagUSqxYmfR1BPZ2lZGY1tvqaKMCu1k+tpedtO5nX8b1cCYeMTacBkLpcg2gifPC7GLpGTCRvGfsI7973cJ/JiiXryjOANksNff8dEzkc1IyKjX1feL2OHuzI/+/jHk9oXoLTjelSB/AXZC7t7usUjIGiju+vmOzLq7/V8scjLBlpWQ8uEe01WSNNNzQOcC2JbTZPfQLXKi3bWK1IBPwpe6Q8h5nxGPY44xGLgaqV4xtrgAZNrw0DclOLcneQgpCgdh4J/pruKxMojEX+5FWEXSzuhHovPMsn8vx37xNdeHJGn2Bo4oaGU5AuyOjEXOBFuieC+JNt3/pmDz4IfKqsiV1i4GKi3nMPpPzVJah0FYZzklA/6SqnYJ9oSJ1+l4P41+uCm5PJquSP/vt2ppBwBuUgK+9K/fKNdeQVouEfW26An+Nr6iq8P0XU/qD9q9up0POPdPw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB520321D4346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB520321D4346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB520321D5346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB520321D5346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_105747</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150604_105754</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150604_105754</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150604_105754</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc6JKEP4rFvu4hVwEUSpaZWKS464mlpjry9ZkaHBcGAgzKPrrdwaVVRNzPOeJ6qan++vLfNMXDMWR6fYYg4yThNaKOKLMLbUdJc+omyBGmEtRDMzl2PV6o6Fr1nUX7Y4otUG/o/yCwA6Mpm2oTrvRVq2W01ZbqNVUA9RqNQz81rYwCFPGchhQxhHlHcXUDVvVm6puTXXbNS3XtOtNp/Wq1B4hY8K3MKnryhZUwTrKjPPU1bTlcllfNupJFmqmrhva82jo4RnESOlebDIqA2XdrT2u+4AhinAdJ7F2oR3YXPjM9UhIEc8z2MbyT8XSNb2tCRufkfCbUp0Ff0CDpBSvEE0owSgiayTrMwI+S/xaLwqTjPBZfDIJQ5eOVSiwig2LflO0Q2hnOjpAmDGkshkytr4mEEAGFEPtYTLoKN/O61p5dJohyoIki9mh+N/wAF1AlKTgq2yX1hba+Q4/qVT3ArA7oDjKGVnAnRzWFGFg224CPt9VbZxBQIohYWJACybRafvwjsRNNfokBMb/T4P2mrNx8oiiHLpt8vDD0T1vmJvOfDJ5KRrzn+vG432KB50SwL5xqahauxGPhrIaos2JYeMmXF23SLp+HJFB2ntakdbz7+90NEUP0fzJtwPy3en9uHxaG8nrtTUeGo9r1F5fhv2x/uIUt7O+tdRNx1i95CPUnDQD2rTI4tFH7cJ7//6wftLT8ejVmT+vCi+8I7eeY6+b93gePv+4m95G/0T9vnGFxgH0ntrDKdGYHTo/zRvnOgymMPUW/M65XbyNR0Yx6lTp7OE/1O3uvJe/zQHznSjHYNCv3YguIf41mUkN8dWgNHVTST6MA+VKV56S3OHmgu6I74oebmTD6V3apt4wjb7dsJpX17rd0O1227jRe3rTNncks0FxBPEqoQGRsSTlbsbma4A4dhlQHzJ1keSC6Zjyhcc+4qg2oBNxCRLKYJoIejZmDZzNQxQFRdOykpjGv4swt9hSqd0l/J7eZ72AQ3bIya0DTp4AJikBSdxyrpkYbMZFLd7RIueRUV+gOoVcUHsmWVYcbdkaI3EagUSqxYmfR1BPZ2lZGY1tvqaKMCu1k+tpedtO5nX8b1cCYeMTacBkLpcg2gifPC7GLpGTCRvGfsI7973cJ/JiiXryjOANksNff8dEzkc1IyKjX1feL2OHuzI/+/jHk9oXoLTjelSB/AXZC7t7usUjIGiju+vmOzLq7/V8scjLBlpWQ8uEe01WSNNNzQOcC2JbTZPfQLXKi3bWK1IBPwpe6Q8h5nxGPY44xGLgaqV4xtrgAZNrw0DclOLcneQgpCgdh4J/pruKxMojEX+5FWEXSzuhHovPMsn8vx37xNdeHJGn2Bo4oaGU5AuyOjEXOBFuieC+JNt3/pmDz4IfKqsiV1i4GKi3nMPpPzVJah0FYZzklA/6SqnYJ9oSJ1+l4P41+uCm5PJquSP/vt2ppBwBuUgK+9K/fKNdeQVouEfW26An+Nr6iq8P0XU/qD9q9up0POPdPw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17AB520321D4346CE05305991F0A0652</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynmcMr4CwRWoMrcdJyGZAJNN9iUl5AYrsSWwZCB8/UgGHCAky+6TS+3W6dMXHemKoyS2PZ9zSAVhtLRKYsq93NrQspR6DHHCPYoS4J7A3tDv33p22fTQbotWCjoN7WXsOBWnNg51Z1IH3R1PXH1cs2t66FarGCzkjEOQrpxnEFAuEBUNzTatim5WddMdmRXPdj3XLl+69j9a6RFSLrGlS9nUtqRWvKFFQsw8w1gul+WlU2bp1LBN0zKe+rdDHEGCtObVJqM8UNrc+uNyCBjiGJcxS4wr48DnKuTekEwpElkK21jhV7FMw6wb0ifkZHqhFXshDOiE5cs2oowSjGKyRqo+fRARC0t+PGUpEVHyZRKWqYB1WGEdWy690IxDamcCHTBMOdJ5hKwt1gAmkALFUPo9CBraxXldy7eOUkT5hKUJP1z+Nz5AFxCzGYQ636W1pXY+4IlKNa8AewHFccbJAu7UsM4QBr7tJuDzoUq/UpiQ1S3hckBXXLEz9ukdLTfV6JApcPF/GrTXnA3II4ozaPaufz7VWNqKSOz3RPT08Njq3jsPnfHIb+QE9p1zQ9HazfJoKIsh2sLX5pWl4Tx3Bu3WvDv7Kd6T7o+g8ygY3Pam/XHydOcvl+sVvrwfOUG4brfrfZfcrWRhh5EzWlfsH3SM28i/BtLptN4e3gfJjevfP7fqFGfPr51B7fdb7Sa2mHm/MsnidcanfVqbt25YDzl/PSS1ePDcc6sPQavPqvZ1e0wDvHxe/T3Cpoz7dgd+t/66Xneh3yjS2eN/aNud+WE2fgUsdks1BkGn1JNdQuJ7MVMWEuqT3NWbKfHhAqjQmmqX0g4vk3JHQk/2cLO2an6rYpuObdu+41bbXbPimJV63eqZvlmt2DuR2bA4othmdEJULCW5m7H5niBOPA40hFRfsEwqHde+QewggUoBHchDwCiHEZPybKVrgLQ6j2buNHSQRaPUfMcRtrXSHRP39D71JwLSQ02+PNDkAWAyI6CEW801l4PNhazFHC0yEVvlBSpTyKS0p0pl5dbLisFJMotBMTUSFmYxlGfRLK+MwTdfW0eY59ZBd5Sfti/zOv63K4H0CYly4CqXFsg2wonLxdkl8mXClrWf8A7ez0KiDpasp0gJ3jA5/PUxJmo+ihmRGb20hy/Wjnfhfvb2zzuNb0gZx/UoAoULshd2d3XLS0DKRnPXzTmyyvNytlhkeQNd1zFSCW+oChmmbQwBZ1LY3kfsDahRoBhn3SIF8aPghf2QYiYiOhRIQCIHrpQvz3g2DIGrZ0MgT8rq3DfJQUhZOgErccrWjuWTRzH+9lWEPaz8pPmX/CxZGn507ATWXhyZp3w1CEKnaqVukPcv5gIzCUuk9rF0H/wUwKngh8aiyAUXIQdqnAn4+k9JiVpDQxizjIqgo+WGfaHNeYr3GXgfTp9gci0vHnfk3193OslHAMuHpPTP8dUd7akjQKd7Yr0NelKvrY77nV4fsmt+Mn+27NXpeMabfwA=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17AB5203222A346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17AB5203222A346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_105754</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17AB5203222B346CE05305991F0A0652</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00010_ACCESS_UVTC_UserName_RequestorUserSAU_Active_RequesteeFAU_ResetPassword_Role_Retailer_200_OK_P1" searchProperties="true" id="4cb6aa36-ae3d-4e5e-b0f6-99c9bbfb0b5f"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="b2590ebc-d6da-4204-96e2-d7b8296f4427"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="5e346013-513b-4428-92d6-4b5117e3dfdb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="d00f6245-9f83-43ea-b905-be65252e6bc5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU" id="6df8c2cf-9843-4553-9cfc-73c37e18d195"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="62e89f7f-00d9-46d4-b16c-40e262bf5225"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0Vyvcx5RVDwBWoIpCFXJKwhSwvKSE3RsGWwZIx5OtHMuAAAYaZJ1e3W92nFx31FUOBbzk1xiDiJKS5ReBT5qTaihJH1AkRI8yhKADmcOz0ao8tx9IMB22OKLlmo6J8lvKGXSq7SB2OrJJqo0ukonIeqQXI23kERUDuSJgyFkOTMo4oryiWYRZUo6gadt8oOFbBMU2tWCx/KLkBREz4FiaaoaxBLVhFGXM+dXQ9SRItyWth5OmWYZj622Orh8cQIKV6tcooDRRV1/ZYcwGD72MNh4F+pe/YXLnM6RGPIh5HsI7lHotl6EZZFzYuI94fJTsLbpOOwlSsIxpSgpFPvpGszyPwcejmar4XRoSPg6NJmIZ0rMICq9i06R9F34V2pqMdhBFDKhsjc+2rCyOIgGLIvXSbFeXPeV1Lj/YjRNkojAK2K/43PEDn4IdTcFW2SWsN7XyHBypVvQLsNCn2Y0bm8CSHdYowsHU3AZ/vKteOYEQWLcLEgC6YRKdvw9sTV9VoEA8Y/z8N2mrOyskA+TFUWf7uYeG5l8/drzh4v+dFNEhss/D+krxXUgDbxqkia+1K3BvKbIhWJybl6/rkzVuGyIyTuTVuN+lDdwid9qQx6N/az5Mvxi/eXlBkjzu44CaPyfB15Fl2spx9LTuFFu4MRn0yaUSPeq/cZL3Wnem+4kugyezmrdwii5f2yGgYFN6W3cH90/cz9QiuPVx831z0x3+71+WPYnEW9xcPbpkVl3O4ZO3QaN7de0v9o3ufzK47C6/zatvvvUklS2cL/65uc+d78fALMN+Icgyajdyt6BLip8lMaoirjlJTZyrJh3GgXKnKU5I7nFjQHXEd0cOVbF7WrguWkbcs+yZvF+s3RiFvFMpl89aoGcWCtSGZFYo9iPWQjoiMJSl3NTanAeLAYUBdiNR5GAumY8oJjw3EUa5Ju+IShJRBPxT0/MUQ+MEwNjBfmsQruRbY4HKXKbmnkD/T56g24hDtcnJph5O7gMmUgCRuOddMDDbjohYzNI+5b2pzpFGIBbVHkmUdyy4VdEaCqQ8SqR6EbuyDNh1P08robPW1VIRZqu3e9NPbdjSv/X+bEggbl0gDJnO5BtFGOPC4GJtEjiZsmtsJb9zXYpfIiyXqySOCV0h2f/2MiZyPbEZERp/13qe5wZ2Zn33890n9BCh9vx5ZIHdOtsJunm7xCAjaqG66OUOmNtPi+TxOG2jbeT0S7nVZId2w9B7gWBDbsh9OgOqZF/2sVyQDvhc80+9CjPmY9jjiEIiBy6XiGWtDD5hcG5ripizO3Ul2QorScVjwQ7q6L1YeifjkVoQdLO2Eui0+SRi5Px074GsrjshTbA2cUE9K8gVZHpkLHAq3RHBfGG07P+TgUPBdZVbkDAsXAzWMORz/k5OkVlEQxmFMebOhpIptok1x8uUUnB+jX25SLs+WO/Lv251K0hHAIFZCRlL/8o125BWg3hZZr4Me4evGKb7eRVf9pf6t2arT/oxX/wE=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB5203224D346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB5203224D346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB5203224E346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB5203224E346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_105817</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150604_105841</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150604_105841</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150604_105841</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0Vyvcx5RVDwBWoIpCFXJKwhSwvKSE3RsGWwZIx5OtHMuAAAYaZJ1e3W92nFx31FUOBbzk1xiDiJKS5ReBT5qTaihJH1AkRI8yhKADmcOz0ao8tx9IMB22OKLlmo6J8lvKGXSq7SB2OrJJqo0ukonIeqQXI23kERUDuSJgyFkOTMo4oryiWYRZUo6gadt8oOFbBMU2tWCx/KLkBREz4FiaaoaxBLVhFGXM+dXQ9SRItyWth5OmWYZj622Orh8cQIKV6tcooDRRV1/ZYcwGD72MNh4F+pe/YXLnM6RGPIh5HsI7lHotl6EZZFzYuI94fJTsLbpOOwlSsIxpSgpFPvpGszyPwcejmar4XRoSPg6NJmIZ0rMICq9i06R9F34V2pqMdhBFDKhsjc+2rCyOIgGLIvXSbFeXPeV1Lj/YjRNkojAK2K/43PEDn4IdTcFW2SWsN7XyHBypVvQLsNCn2Y0bm8CSHdYowsHU3AZ/vKteOYEQWLcLEgC6YRKdvw9sTV9VoEA8Y/z8N2mrOyskA+TFUWf7uYeG5l8/drzh4v+dFNEhss/D+krxXUgDbxqkia+1K3BvKbIhWJybl6/rkzVuGyIyTuTVuN+lDdwid9qQx6N/az5Mvxi/eXlBkjzu44CaPyfB15Fl2spx9LTuFFu4MRn0yaUSPeq/cZL3Wnem+4kugyezmrdwii5f2yGgYFN6W3cH90/cz9QiuPVx831z0x3+71+WPYnEW9xcPbpkVl3O4ZO3QaN7de0v9o3ufzK47C6/zatvvvUklS2cL/65uc+d78fALMN+Icgyajdyt6BLip8lMaoirjlJTZyrJh3GgXKnKU5I7nFjQHXEd0cOVbF7WrguWkbcs+yZvF+s3RiFvFMpl89aoGcWCtSGZFYo9iPWQjoiMJSl3NTanAeLAYUBdiNR5GAumY8oJjw3EUa5Ju+IShJRBPxT0/MUQ+MEwNjBfmsQruRbY4HKXKbmnkD/T56g24hDtcnJph5O7gMmUgCRuOddMDDbjohYzNI+5b2pzpFGIBbVHkmUdyy4VdEaCqQ8SqR6EbuyDNh1P08robPW1VIRZqu3e9NPbdjSv/X+bEggbl0gDJnO5BtFGOPC4GJtEjiZsmtsJb9zXYpfIiyXqySOCV0h2f/2MiZyPbEZERp/13qe5wZ2Zn33890n9BCh9vx5ZIHdOtsJunm7xCAjaqG66OUOmNtPi+TxOG2jbeT0S7nVZId2w9B7gWBDbsh9OgOqZF/2sVyQDvhc80+9CjPmY9jjiEIiBy6XiGWtDD5hcG5ripizO3Ul2QorScVjwQ7q6L1YeifjkVoQdLO2Eui0+SRi5Px074GsrjshTbA2cUE9K8gVZHpkLHAq3RHBfGG07P+TgUPBdZVbkDAsXAzWMORz/k5OkVlEQxmFMebOhpIptok1x8uUUnB+jX25SLs+WO/Lv251K0hHAIFZCRlL/8o125BWg3hZZr4Me4evGKb7eRVf9pf6t2arT/oxX/wE=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17AB5203224D346CE05305991F0A0652</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZXzn4gpUORB2yADJQMhlX1JCbkATW3Is2YF8/UoGPEBIlt1Uqqhut7pPX3TUFxzFke0HnEMqCKOVVRxR7hfalpal1GeIE+5TFAP3BfYnwXDg21XTR7sjWqXfbWnPjZn8c2tz3YWao7sueHqzGdZ1DzXm5swNG3XUkKacZ9CnXCAqWpptWp5u1nTTvTM935b/TrVZa/ytVe4h5dK3NKma2hbUire0pRCJbxhvb2/VN6fK0oVhm6ZlPA4HE7yEGGnti01GRaC0vbXH1RAwRBGuYhYbF8aBzUXI/QlZUCSyFLaxws9imYbZNKRNyMnim1aehbBP56wQO4gySjCKyDtS9RmCWLKwEkQLlhKxjD9NwjKVYx1WWMeWS79pxiG0Mx0dIEw50vkSWVtfY5hDChRDZTrut7Rv53WtOHqXIsrnLI35ofjf8ADNIWIJhDrfpbWFdr7DE5VqXwD2+xRHGSc5jNSwJggD33YT8PmuKrcpzMlqQLgc0BVX6Ix9eEfiphpdsgAu/k+D9pqzcXKPogzaTz/S3tD6/lQfJm7KGmiWTK5G8f2U0atWAWDfuFCUrd2IR0NZDtHmxMi7z0eNxa8ouUG5O5g6TjB18GISrEZxDxvOTec9Gl+NL68fV+vbnkdno1FW/24/NONBEHd/5rfXV2YNTDq16TBfm3YcTO+mKPSy3uNfg4eZU38YmdcPg8snK7Hrr/3gxaMD3hDT2q/f8c3AducvP34PO/MHkr5ev/6y3xrrtQfe03IwvU28Wa/ZrInJz/fbeiPtt8p09vAf6nZ3fpLNfgMWO1GNQb9b6ckuIfE1mSkNCfV5Yeoniny4ACq0tjqluMPPJN2R0Jc93MhWPbj0bNOx7cBx3FrnyvQc02s2rZ4ZmDXP3pHMBsURxA6jc6JiKcrdjM3XAHHsc6AhpHrOMsl0XPvCYxcJVOnTsbwEjHK4Y5KerTzjzGbg2tYLWPjF48JJeU3kc60yYuKG3qTBXEB6SMqNA1IeAyYJAcXcarC5nGwuZDFeUZ6JyKrmqEohk9yeKpr1bbfhGZzESQQKqhGzMIugmiyTojQG3/zaOsK80I6v7orr9mlix992NZA2IVEGXOVyCbKPcOJ1sXaJfJqwZe0nvHMfZCFRN0sWVKQEb5AcfvozJ2pAyiGRGT13Js/WDndpfvbxjyeNL0AZx/UoA4U52Qu7e7vlKyB5o73r5iuyqq/VLM+zooGu6xipdG+oChmmbUwAZ5LZ1nfsBahRejHOekZK4EfBS/0hxEws6UQgAbEcuEohnrE3TICrvaEvr8rq3KXkIKQsnYCVOKXrRHLnUYi/XIuwj5WdVN/KnzeWhn86dsLXXhyZp1wbBKELJaknZP3JXGAm3RJJfizdd37Kwangh8qyyCUWIQdqlgn4/EtFsVpLQxizjIp+VysU+0xb4BTrBPw/Rh/cFGRebnfk39c7nRQjgEHuhJwU/tUj7asrQBd7bL0Nepqw3e5XhH2Irv1B/VGzV6fjGW//Aw==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17AB520322A3346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17AB520322A3346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_105841</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17AB520322A4346CE05305991F0A0652</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00011_ACCESS_UVTC_UserName_RequestorUserSAU_Active_RequesteeBAU_ResetPassword_Role_Retailer_200_OK_P1" searchProperties="true" id="b7d2f42d-c05e-46fb-a35f-0041b43617db"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="69b2361e-c128-4540-b0bf-86c7677425ad"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="fb0fb840-861c-4fdd-99b5-0c585ec02f98"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="34ca7140-01f0-4747-86af-f2ba0d2b8939"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU" id="34f555b7-92a3-4b84-872a-deca47c9613e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="59920eca-9607-4cfc-82e9-b4aab194a126"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU" id="55a86ec5-677a-4554-884f-c38e628793ac"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="049557e7-75d1-4412-8ad2-00edeec696da"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VyvcxZbyAWVyBKgJk4mwQTBbykhJyA0ps2VgyS77+SgYcIMAw8+Tqdqv79KKjvmQo8E27wRjEnIQ0twh8yuxUW1OSmNohYoTZFAXAbI5tt/Fwb5t53UabI0rOadWUDxiaVsU0Ryq2PE8t4nJBHQ7LVRWGQwQWLpcrQ0uYMpaAQxlHlNcUUzcsVS+perGvW7Zp2cVKvmhV3pXcC8RM+BYmeV1Zg1qwmjLhPLI1bT6f5+eFfBiPNVPXDe3t4d7FEwiQUr9cZZQGiutre5z3AIPv4zwOA+1S27G59JjtkjFFPIlhHcs7FkvX9KombDxGxn+U7Cx4Dh2FqdhENKQEI598I1mfB+CT0Ms1/HEYEz4JjiZh6NKxCgusYqNI/yjaLrQzHe0gjBlS2QQZa189GEEMFEPuuefUlD/ndS092o8RZaMwDtiu+N/wAJ2BH0bgqWyT1hra+Q4PVKp+Cdh2KPYTRmbwKIc1QhjYupuAz3eV68YwIot7wsSALphEp23D2xNX1WiRMTD+fxq01ZyVkxfkJ1DnV68ReyRxXHmd3EDsN9tXSbn91G6/jmspgG3jVJG1diXuDWU2RKsTLva/On1rOC9PBoO3TmnSfmmMKoV+aYlvbwb6xd3bEL9X2dcLvet1i3Te96/fo9sALRs3+LkbXg0Hzc+nrwcYlCt6kzk3/7y3C+x5McaFgn53MX+jyeweOxeD2+T567XbGbRf7vzytLJoli6+p24cvD5P+34Rd93FLJgsHw3cCj6b3aR14Syfkr772Xp67GgtM9GdQS1LZwv/rm5z591k+AmYb0Q5Bk4rdy26hPhpMpMa4qmj1NSOJPkwDpQrdXlKcoedCLojni16uJKNcuPKMvWCaTbLhWKp2datgm5Vq8a13tBLlrkhmRWKPYjNkI6IjCUpdzU2pwHiwGZAPYjVWZgIpmPKCY8txFHOoT1xCULKoB8Keg4n/reOdE4L3DSMsucBfE+jaqWq5B5D3qGduDHiEO9ycmWHk3uASURAErecayYGm3FRiymaJdw38jOUp5AIao8ly9pmsWJpjASRDxKpFoRe4kM+mkRpZTS2+poqwizV9tr99LYdzWv/36YEwsYj0oDJXK5AtBEOPC6FTSJHEzaM7YQ37huJR+TFEvXkMcErJLu/fsZEzkc2IyKjj6b7YWxwZ+ZnH/99UjsBStuvRxbIm5GtsJunWzwCgjbqm25OkZGf5pPZLEkbWCwWtFi412SFNN3UXMCJILZlP/wCqmVetLNekQz4XvBMvwsx4RPqcsQhEAOXS8Uz1gYXmFwbHHFTFufuJDshRek4LPghXdMXK49EfHIrwjaWdkLdFZ95GHs/HTvgayuOyFNsDZzQsZTkC7I8Mhc4FG6J4L4w3nZ+yMGh4LvKrMgZFi4GaphwOP4nJ0mtpiCMw4Ryp6Wkim2iTXHyZQT2j9EvNymXZ8sd+fftTiXpCGAQKyEjqX/5RtvyCtDxFlmvgx7h69Ipvt5FV/+l/q3ZqtP+jNf/Ag==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB520322C6346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB520322C6346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB520322C7346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB520322C7346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_10597</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150604_105934</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150604_105934</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150604_105934</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VyvcxZbyAWVyBKgJk4mwQTBbykhJyA0ps2VgyS77+SgYcIMAw8+Tqdqv79KKjvmQo8E27wRjEnIQ0twh8yuxUW1OSmNohYoTZFAXAbI5tt/Fwb5t53UabI0rOadWUDxiaVsU0Ryq2PE8t4nJBHQ7LVRWGQwQWLpcrQ0uYMpaAQxlHlNcUUzcsVS+perGvW7Zp2cVKvmhV3pXcC8RM+BYmeV1Zg1qwmjLhPLI1bT6f5+eFfBiPNVPXDe3t4d7FEwiQUr9cZZQGiutre5z3AIPv4zwOA+1S27G59JjtkjFFPIlhHcs7FkvX9KombDxGxn+U7Cx4Dh2FqdhENKQEI598I1mfB+CT0Ms1/HEYEz4JjiZh6NKxCgusYqNI/yjaLrQzHe0gjBlS2QQZa189GEEMFEPuuefUlD/ndS092o8RZaMwDtiu+N/wAJ2BH0bgqWyT1hra+Q4PVKp+Cdh2KPYTRmbwKIc1QhjYupuAz3eV68YwIot7wsSALphEp23D2xNX1WiRMTD+fxq01ZyVkxfkJ1DnV68ReyRxXHmd3EDsN9tXSbn91G6/jmspgG3jVJG1diXuDWU2RKsTLva/On1rOC9PBoO3TmnSfmmMKoV+aYlvbwb6xd3bEL9X2dcLvet1i3Te96/fo9sALRs3+LkbXg0Hzc+nrwcYlCt6kzk3/7y3C+x5McaFgn53MX+jyeweOxeD2+T567XbGbRf7vzytLJoli6+p24cvD5P+34Rd93FLJgsHw3cCj6b3aR14Syfkr772Xp67GgtM9GdQS1LZwv/rm5z591k+AmYb0Q5Bk4rdy26hPhpMpMa4qmj1NSOJPkwDpQrdXlKcoedCLojni16uJKNcuPKMvWCaTbLhWKp2datgm5Vq8a13tBLlrkhmRWKPYjNkI6IjCUpdzU2pwHiwGZAPYjVWZgIpmPKCY8txFHOoT1xCULKoB8Keg4n/reOdE4L3DSMsucBfE+jaqWq5B5D3qGduDHiEO9ycmWHk3uASURAErecayYGm3FRiymaJdw38jOUp5AIao8ly9pmsWJpjASRDxKpFoRe4kM+mkRpZTS2+poqwizV9tr99LYdzWv/36YEwsYj0oDJXK5AtBEOPC6FTSJHEzaM7YQ37huJR+TFEvXkMcErJLu/fsZEzkc2IyKjj6b7YWxwZ+ZnH/99UjsBStuvRxbIm5GtsJunWzwCgjbqm25OkZGf5pPZLEkbWCwWtFi412SFNN3UXMCJILZlP/wCqmVetLNekQz4XvBMvwsx4RPqcsQhEAOXS8Uz1gYXmFwbHHFTFufuJDshRek4LPghXdMXK49EfHIrwjaWdkLdFZ95GHs/HTvgayuOyFNsDZzQsZTkC7I8Mhc4FG6J4L4w3nZ+yMGh4LvKrMgZFi4GaphwOP4nJ0mtpiCMw4Ryp6Wkim2iTXHyZQT2j9EvNymXZ8sd+fftTiXpCGAQKyEjqX/5RtvyCtDxFlmvgx7h69Ipvt5FV/+l/q3ZqtP+jNf/Ag==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17AB520322C6346CE05305991F0A0652</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvO4ZXwBe8AVqCJAWLIkJIEkk7xMCbmNlbUlkGRD8vUrGXCAXJbdJ5fardOnLzrSmUBp4gYdIYBLwmhlnSZUBIW1ZWScBgwJIgKKUhCBxMGkczUK3KodoN0WozLstYzftYbt+dhBpu9HDbNebzTNWeiCiVDo1JDbiCIcKVchMhhSIRGVLcO1Hc+0fdOuT20vcP3AVsiO/WxUHoALha1cqraxJbUWLSOWchFY1mq1qq5qVcbnlmvbjvXrajTBMaTIaJ9tMioC8fbWH1dDwJAkuIpZap1ZBz5noQgmZE6RzDhsY4VfxbItu2kpn1CQ+Q+j3AvhkEasWHYRZZRglJA3pOtzBTJmYaWTzBknMk6/TMKxNbAJa2xip05/GNYhtROBDhhygUwRI2eLdQcRcKAYKvd3w5bx47SuFVunHFERMZ6Kw+V/4wM0h4QtIDTFLq0ttdMBP6lU+wxwMKQ4yQTJ4VoP6wJhENtuAj4dqnLDISLrERFqQNdCs7P26R0tN9XokTkI+X8atNecDcgDSjJo47w3u7ikDS/xfkUoaV6Eb9FgiQb9YadVENh3LgxlazfLo6Esh2izg9bub+PG5bx+P4eXx6dBw2v2LgYjEb3+efvcd19h3hGjl/GY33Sevf758onYfoMNs/xxtAzH973kedKfuqMrp8MHvWl/MRpwcR29Pc4affSHiKcPV8M4nq0f/JRY9+PZK7AHfJver/6a1gY3D5dPsZw24ZZKb96cWJfOufP83Jg6nXx9/rM/tn0H96D5wgV7ZKtWmc4e/0Pb7sxPstkLYLlb6jEY9ioXqktIfi9m2kJCMypcg4UWHyGBSqOtd2ntCDIldyQMVA83a+dn59xz7Zpbc7q1ut/t217N9ppN58Lu2L7n7kRmw+KIYpfRiOhYWnI3Y/M9QZwGAmgI3MxZppROGN8g9pBElSG9U4eAUQFTpuSZzH2YvZC3mZ/HfpaT5ZtwM+6vjco1k2M65p1IAj+U5MaBJN8BJgsCWrf1WAs110KqUixRnsnEqeaoSiFTys61yAZuveFZgqSLBDRRK2VhlkB1ES+Kwlhi83VNhEVhvetPi8P2ZVrH/3YVUD4h0Q5C53IOqovw4W7xAm+XyJcJO85+wjv4ThYSfa5UOSUneMPk8Nf7lOjxKEdEZfS7O/nt7HiX7idv/7jT+oaUdVyPMlCYk72wu5tb3QFKNdq7bi6RU11WszzPigbW6zWLK3hLV8iyXWsCOFO69jplfwO1ShTrpEukJH4UvLQfUsxkTCcSSUjVwFWK5QmvhgkI/WoYqoOyPvVJchBSlU7CWn5m6ybqxaMZf/sowgHWfsp8oz4rxsP3jn2CtRdH5akeDZLQuV7pC+T1i7nATMESJX2M74N/BvBZ8ENjWeSSi1QDNcskfP2nojWtZSCMWUblsGcUhn2dLXjK1wUE704fYAopL9925N8fdyYpRgCDehEKUuDrKzrQR4DO97R6G/RTuXa7/ndyfciu/cH80bJXp+MZb/8D</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17AB5203231C346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17AB5203231C346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_105919</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17AB5203231D346CE05305991F0A0652</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvNIGcvG3FyBKgJkx4HMMEDYJC9TQm4bJbZMLNmQfP1KBjxASJbdJ5fardOnLzrSFcdRaDldziERNGalTRQy7uTWtpYmzIkxp9xhOALuCOJMu3cjx6ogB++3aCW339Z+L6wWtAip6tW66es28Yjeavo1fdHwUW0B9YZtmtKV8xRcxgVmoq1ZyKzpqK4je4ZqjlV3zGYFocaTVppDwiW2dKkgbUdqw9vaUoiVYxjr9bqyrlbiJDAshEzj4W40JUuIsNa52maUB0o6O39S8YBAGJIKiSPjyjjyufK4M6UBwyJNYBfL+ywWMlDLkD4ep8E3rdgLnsv8OF/2MIsZJTik71jV5w7EMvZK3TCIEyqW0adJmEgB67AhOjFt9k0zjqldCHTEMOFY50ts7rAm4EMCjEDpfuK2tW+XdS3fOksw436cRPx4+d/4AMsgjFfg6Xyf1o7a5YBnKtW5AuK4jIQppxn8UMO6wgT4rptALocqjRPw6WZEuRzQDVfsjEN6J8ttNfo0AC7+T4MOmrMFmeMwhU4AK/M9u6FhuWGP7tfd8q+ncVbDL96z284JHDrnhqK12+XJUBZDtIP3mw8LuL7+67FX7gpraJrD4S37fh/8esLzgT2MB4ugeTO0Z3QefF8H9YdaNbn145fx5K7siRHP+MD2n9/ROhluJtn1+qF610vT8mg03pTf3Ra77Xp4SngWtOaP8x/h/P77++LVNd2g0V++kMef9cfqU7DIQosMWtPy38OkIXdl4/7zNS0v+mjc/esG4SiZ3d4O2kU6B/yPbfszP00Xz0DEfqnGwO2XbmSXsPhazJSFerqfuzorJT5cABNaR+1S2uGkUu6o58gebtdmo3tds1DVqla7VbveG6BaFdVaLfMGdVG9Zu1FZsvihGIvZj5VsZTkbsfma4IkcjgwDxI9i1OpdFz7ArGPBS65bCIPQcw4zGIpz6YtVmuvhqKg+fbywiwzE+abJ/hKK/2IxU/2M+n6ApJjTW4eafIECF1RUMKt5prLweZC1uIVZ6kIzUqGKwxSKe2JUlnHsps1g9NoFYJiakSxl4ZQWS1XeWUMvv1aOiY8t04Gs/y0fZrX6b99CaSPR5UDV7lcg2wjnLlc0D6RTxM2zcOE9/Dd1KPqYMl6ioSSLZPjX3/GRM1HMSMyo9+96W9zz7twv3j7x53GF6SM03oUgbyMHoTdX93yEpCy0dl38xWblddKmmVp3kDbrhqJhDdUhQxkGVMgqRS2t1n8AswoUIyLbpGC+Enwwn5MMRVLNhVYQCQHrpQvL3g2TIGrZ4MrT8rm0jfJUUhZOgEbcc7WC+WTRzH+8lVEHKL8pHksP+s48f507AzWQRyZp3w1CMoCtVI3yNsnc0FiCUul9sXJIfg5gHPBj41FkQsuQg7UIhXw+Z+SErW2hgmJUybcvpYbDoU25yneVuD8cfoAk2t58bij//6602k+AgTkk5DTHF/d0Y46Aiw4EOtd0LN6bfXqX+n1MbvOB/NHy0GdTme88w8=</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>17AB5203233A346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:17AB5203233A346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20150604_105934</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>17AB5203233B346CE05305991F0A0652</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e34c814a-8ac5-424b-a19a-7d3453e3b9c7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1de1e00d-487c-492d-b21b-5e895e1ee18e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00012_ACCESS_UVTC_UserName_RequestorUserSAU_Active_RequesteeOtherSAU_ResetPassword_Role_Retailer_200_OK_P1" searchProperties="true" id="30195577-2b76-401a-8b70-d14536179f11"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="f6014f22-36c7-4466-a708-617a17bce217"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="68f7b811-f541-4e41-8c6b-28c654ed57e8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="c2855d34-174d-4515-8a4f-374c3cc45937"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU" id="5e3d6ba2-f7df-478a-9db7-5d3d8f287674"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Second Adult SAU" id="409ee65f-7d81-418d-88c3-e5efb63e2b41"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Second Adult SAU" id="a7f61912-71bc-4719-b504-e0aed2ab38ac"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="30cee8d4-b766-4de9-a9f7-0286888afa8b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0Vynk2voAZcAWqCCQZs0ASSMjsvKSE3MYitmws2cB8/UoGHCDAsvvkUrt1+vRFR7plKAxMu80YJJxEtLQKA8rs3NpU0oTaEWKE2RSFwGyO7XF70LfNsm6j3Ral5HSbyodreTB1665qQsVSq9i11HrD0lVUNWpGTUeuZ2DhylgKDmUcUd5UTN2wVL2m6tVX3bLNml2plE1L/62UJpAwgS1cyrqyJbViTcXnPLY1bblclpeVcpTMNFPXDe3XoD/GPoRIad1uMsoDJa2tPy67gCEIcBlHoXarHfjcuswekxlFPE1gG8s9F0vX9IYmfFxGZjdKsRdch3pRvuwgGlGCUUD+IFmfAXA/ckvtYBYlhPvh2SQMXQKrsMIqNqr0RtEOqV0JdMAwYUhlPjK2WCPwIAGKofQ2cprKzXVdy7e+JogyL0pCdrj8b3yAZhBEMbgq26W1pXY94IlKtW4B2w7FQcpIBkM5rDHCwLbdBHw9VOk5AY+s+oSJAV0xyU7bp3e03FSjS2bA+P9p0F5zNiATFKTQit9GE3c9rHmrp9/ZT5+tFu3ueLp8eW7UmzmBfefcULR2szwaymKINjve49p8ul5P7gLuvcxD5utOkE367LM3cLrVQRasho/v/cYdu3tfzr2+k6Xrt1+1PxUzW7zQVEvaDS/tmfoAzcOF0+1PPoeav0DwwsB/SWr1v9/iUfdhXv/p96pLuO9NdW7AQ59/tt3RpLe8G8yXvbAx6ljrYcdJ/+oR98fjY9bTBw2z33eZ9xTyJ6/PK7TXw80inT3+h7bdmR+n0zlgvlvKMXC6pQfRJcQvi5m0EFf1clc7luLDOFCutOQuqR12KuSOuLbo4WZt/GjfWaZeMSvWfaVa69zrVkW3Gg3jQW/rNcvcicyGxRHFTkQ9ImNJyd2MzWWCOLQZUBcSNYtSoXRMuYDYRRyVHDoShyCiDF4jIc8ETWs+WxrJGjKDpOvM/1yQeOWBUhpG/Ik+JW2PQ3KoyfUDTR4BJjEBKdxyrpkYbMZFLRYoS3lglDNUppAKaU+kytpmtW5pjIRxAJKpFkZuGkA59uO8MhrbfE0VYZZbR/ev+Wk7m9fxv10JhI9LpAOTudyBaCOcuFzMXSJnEzaM/YR38O3UJfJgiXryhOANk8NfX2Mi56OYEZHRR2f8Yex4F+5Xb/++U7tASjuuRxHIzche2N3VLS4BIRutXTcXyCgvymmWpXkDq9WKlgh4TVZI001tDDgVwrZ+jT6BagWKdtUtUhA/Cl7YDymm3KdjjjiEYuBK+fKKZ8MYmHw2OOKkrK59kxyEFKXjsOKnbJ1APHkk44uvImxj6SfMz+KzjBL3q2MnsPbiiDzFq4ETOpMreYOsz8wFjgQsEdoXJfvgpwBOBT80FkUuuHAxUNOUw/k/JSlqTQVhHKWUO10lN+wLbc6Tr2Owv5y+weRaXjzuyL+/7lSSjwAWoiX8c3x5R9vyCNDZnlhvg57R6+4lvT5k1/pm/m7Zq9PxjLf+AQ==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB5203235D346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB5203235D346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB5203235E346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB5203235E346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_105951</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150604_110042</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150604_110042</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150604_110042</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0Vynk2voAZcAWqCCQZs0ASSMjsvKSE3MYitmws2cB8/UoGHCDAsvvkUrt1+vRFR7plKAxMu80YJJxEtLQKA8rs3NpU0oTaEWKE2RSFwGyO7XF70LfNsm6j3Ral5HSbyodreTB1665qQsVSq9i11HrD0lVUNWpGTUeuZ2DhylgKDmUcUd5UTN2wVL2m6tVX3bLNml2plE1L/62UJpAwgS1cyrqyJbViTcXnPLY1bblclpeVcpTMNFPXDe3XoD/GPoRIad1uMsoDJa2tPy67gCEIcBlHoXarHfjcuswekxlFPE1gG8s9F0vX9IYmfFxGZjdKsRdch3pRvuwgGlGCUUD+IFmfAXA/ckvtYBYlhPvh2SQMXQKrsMIqNqr0RtEOqV0JdMAwYUhlPjK2WCPwIAGKofQ2cprKzXVdy7e+JogyL0pCdrj8b3yAZhBEMbgq26W1pXY94IlKtW4B2w7FQcpIBkM5rDHCwLbdBHw9VOk5AY+s+oSJAV0xyU7bp3e03FSjS2bA+P9p0F5zNiATFKTQit9GE3c9rHmrp9/ZT5+tFu3ueLp8eW7UmzmBfefcULR2szwaymKINjve49p8ul5P7gLuvcxD5utOkE367LM3cLrVQRasho/v/cYdu3tfzr2+k6Xrt1+1PxUzW7zQVEvaDS/tmfoAzcOF0+1PPoeav0DwwsB/SWr1v9/iUfdhXv/p96pLuO9NdW7AQ59/tt3RpLe8G8yXvbAx6ljrYcdJ/+oR98fjY9bTBw2z33eZ9xTyJ6/PK7TXw80inT3+h7bdmR+n0zlgvlvKMXC6pQfRJcQvi5m0EFf1clc7luLDOFCutOQuqR12KuSOuLbo4WZt/GjfWaZeMSvWfaVa69zrVkW3Gg3jQW/rNcvcicyGxRHFTkQ9ImNJyd2MzWWCOLQZUBcSNYtSoXRMuYDYRRyVHDoShyCiDF4jIc8ETWs+WxrJGjKDpOvM/1yQeOWBUhpG/Ik+JW2PQ3KoyfUDTR4BJjEBKdxyrpkYbMZFLRYoS3lglDNUppAKaU+kytpmtW5pjIRxAJKpFkZuGkA59uO8MhrbfE0VYZZbR/ev+Wk7m9fxv10JhI9LpAOTudyBaCOcuFzMXSJnEzaM/YR38O3UJfJgiXryhOANk8NfX2Mi56OYEZHRR2f8Yex4F+5Xb/++U7tASjuuRxHIzche2N3VLS4BIRutXTcXyCgvymmWpXkDq9WKlgh4TVZI001tDDgVwrZ+jT6BagWKdtUtUhA/Cl7YDymm3KdjjjiEYuBK+fKKZ8MYmHw2OOKkrK59kxyEFKXjsOKnbJ1APHkk44uvImxj6SfMz+KzjBL3q2MnsPbiiDzFq4ETOpMreYOsz8wFjgQsEdoXJfvgpwBOBT80FkUuuHAxUNOUw/k/JSlqTQVhHKWUO10lN+wLbc6Tr2Owv5y+weRaXjzuyL+/7lSSjwAWoiX8c3x5R9vyCNDZnlhvg57R6+4lvT5k1/pm/m7Zq9PxjLf+AQ==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17AB5203235D346CE05305991F0A0652</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMr5CjCtQRXAyw04ILJDMJC9TQm6DJrbkWBKQ+fqVDDhALsvuk6vbre7TFx31BUdZ6oZdzqEQhNHaOkspD0tt25AFDRnihIcUZcBDgcNJd3ATunU7RLsjRq0ftY1fLTtp2TDDJvjBuel7bmwG9swzgziYITyLbc/2lCnnEvqUC0RF23Btp2HaTdP2p3YjdM9D262fN/xHo3YPBVe+lUndNrag1rxtLITIQ8tarVb1lVdnxdxybduxfg5uJngBGTI6F5uMykBFZ2uP6zFgSFNcxyyzLqwDm4uYhxMyp0jIArax4o9i2ZbdspRNzMn8i1GdhbhPE1aKPUQZJRil5A/S9RmAWLC41k3nrCBikX2YhGNrxyassYkdn34xrENoJzo6QFhwZPIFcra+xpBAARRD7W7cbxtfTutaeXRaIMoTVmT8UPxveIAuIWU5xCbfpbWFdrrDdyrVuQAc9ilOJSdLuNXDmiMMfNtNwKe7qo0KSMj6hnA1oGuu0Vn78I7ETTUiMgcu/k+D9pqzcXKPUgkd65ItrKfW95l1IyWLhgn53rht8mw4HbRLAPvGpaJq7UY8GspqiDYnkmbmZ/nwPv9WpDT2z28jcf+b07sH6A1jCmvxrTf6ayVuisnXhwVrXK8fItsNOJ8FBf+qWijvu2d/2Dzxz9zh2Y/WcPb159n1FWlFfz+waDCYUv/uKb0c/ZhGUfP+suuSUe7NSULHzZsfk+Dh593jiF2Pnr89Ned2biXXniPWjD7KAnez8+zu5Xe0gFsyWD2Or9pVOnv4D3W7Oz+Rs9+AxU7UY9CPateqS0h8TmZaQ2IzKU3DXJMPF0CF0dGnNHeEUtEdiUPVw43snHcvG67tud6l5/nN3pXd8OxGq+Vc21272XB3JLNBcQSxx2hCdCxNuZux+RwgzkIONIbCXDKpmI4bn3iMkEC1Ph2rS8AohylT9CylzL3nPGjls7mEYN5EQeB61Ddqt0wM6bDoJgKKQ0oODih5DJjkBDRv67Hmaq65UKV4RkspUqe+RHUKUjF7oUk2dP2gYXGS5SlooFbGYplCPV/kZWEsvvm6JsK81I6vpuVl+zCt43+7CiibmGgDrnO5BNVFePO2NMPGLpEPE3ac/YR37rsyJvpeqXKKguANksNfr1Oix6MaEZXRr97kl7PDXZmffPztSesTUNZxPapA8ZLshd293OoNUKzR2XXzGTn157pcLmXZQN/3rEK5t3SFLNu1JoCl4rWXKXsCalVerJMekQr4UfBKfwhRigWdCCQgUwNXK8UTtoYJcL019NVFWZ+6khyEVKUTiv3e0/VStfFoxJ8uRTjE2k6pR+qzYkX82rF3fO3FUXmqpUEQOteSfkBePpgLzJRboqiPFfvO33PwXvBDZVXkCotQAzWTAj7+U9Oc1jYQxkxS0Y+MUrHPsyVO8ZJD+Gr0xk1J5dVuR/59uTNJOQIY1EbISelfP9GhvgJ0vsfV26Dv03Uj+oyuD9F13qjfavbqdDzjnX8A</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17AB520323B3346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17AB520323B3346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_11006</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17AB520323B4346CE05305991F0A0652</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbd6o6EP4rLvqMARQvrOpa3noWe9vaqr2+dMUwaCoEJUFx//qdoFK1tsdznlgzTGa+ueTLXHMcBpbT4hxiQSNWSMOAcSfTNrQkZk6EOeUOwyFwRxBn1LrtO1bRcPD+iFZwuw3t3cMTv2ZAVa9bNU8v+3ZVx1VS0z2/6ns136v4tYo05TwBl3GBmWholmHaulHRjfLYsB2r6lilYr1iv2mFJ4i59C1Nioa2A5XyhjYTYuEgtF6vi+tSMYqnyDIME73c9kdkBiHWmtfbjLJAcXNnT4oeEAgCUiRRiK7Rkc21x50RnTIskhh2sbzvYhnIqCNp43E6vdLys+C5zI8ysYNZxCjBAf2DVX1uQcwir9AKplFMxSz8NgnTUI51SIlOzDK70tAxtAsdHSGMOdb5DJs7X0PwIQZGoPA4dBva1WVdy46OY8y4H8UhPxb/Gx5gKwiiBXg636e1g3a5wzOVal4DcVxGgoTTFdypYV1gAnzXTSCXuyrcx+DTtE+5HNCUK3ToEN6JuK1Gl06Bi//ToIPmbJ084SCB5vxpcvdmWb8fH4x676HP3edk+qdniydj3sgAHBpniry1W/FkKPMh2p6IzfFHya/Olusb9ORVwsqmv2bRvJZ+3KLBgCwNd1KvJ/+Mw7fp2/DRLH88Tjbz3u0UvYSd5Vvk1vuDVXWT1l9Zp9tG9Tbvm6S6fP41sVu/39bj7iu7f0GpO3odrttzb+Ql8/nDsBLfh63Fr3ZvBPZDH7fvyiKZVwYpi2j/uVffJDcwapfa5MML7+w1qdyMB8vJupGnc4D/WLe/86Nk8gFE7EU1Bm63cCO7hMXPZKY01NP9zNRZKPLhApjQmuqU4g4nkXRHPUf2cCub1VbbtoySVeqapXKl0zPskmHX6+aN0TIqtrUnmS2KE4idiPlUxVKUux2bnwGS0OHAPIj1VZRIpuPaDx67WOCCy4byEkSMwziS9ExsI51hi/jRvGLOYQbxspRWOVCtcBeJARvELV9AfMzJtSNOHgKhCwqKuNVccznYXMhaLPEqEYFZXOEig0RSe6xY1rHKNRtxGi4CUEhRGHlJAMXFbJFVBvHt19Ix4Zl22Btnt+3bvE7/7UsgbTyqDLjKpQ2yjXDmcTH3iXybsGkeJrx330o8qi6WrKeIKdkiOf71OSZqPvIZkRm9d0bv5h53bn7x8a8n0Q+g0Gk98kDeih6E3T/d8hGQtNHcd3OJzeKymKxWSdbAcrmEYukeqQohw0IjIIkkts04mgNDuRd00SuSAz8JnuuPISZixkYCCwjlwBUy8YK1YQRcrQ2uvCnppTvJUUhZOgGpOKfrBHLlUYh/3IqIQ5SdVN/LzzqKvc+OnfF1EEfmKbcGQdlUSeoF2XwzFySSbqnkvig+dH7Owbngx8q8yDkWIQdqkgj4/k9BkVpDw4RECRNuV8sUh0Sb4RSbBTifRl/cZFyeL3f037c7nWYjQECuhJxm/tUb7agrwKYHZL0Lep6v7e5PfH2MrvlF/VVzUKfTGW/+BQ==</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>17AB520323D1346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:17AB520323D1346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20150604_110042</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>17AB520323D2346CE05305991F0A0652</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e34c814a-8ac5-424b-a19a-7d3453e3b9c7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1de1e00d-487c-492d-b21b-5e895e1ee18e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00013_ACCESS_UVTC_UserName_RequestorUserFAU_Active_RequesteeSelf_UnlockMe_Role_Retailer_200_OK_P1" searchProperties="true" id="d043a8f7-81a3-4893-b967-7a58aa4d6f28"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="871796ea-b3e8-4c00-921d-41810508fadd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="66b3fabf-018b-4331-b6ed-49790ecee85a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="54919fba-9607-449c-9a49-ba96257792a0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdc9o6EP0rjPvYMZZtDMYTmCGQNLRpQgNJO3npCHkBpbZs9EGAX38lAy6QkMu9Tx6tV2fPfuhIFwKniRd1hAAuacYqyzRhIiqsLUtxFmVYUBExnIKIJImGne+3kVdFEd5tsSr9Xsv67Qc4AL8JdhgEyK41Gq6NSdC0Yez6foDqhJCGdhVCQZ8JiZlsWR5yAxvVbVQboSDyGlHNr3ph+GxVnoALja1dqsjaklqKljWTMo8c5/X1tfrqVzM+dTyEXOfX99shmUGKrfbFJqMiEG9v/Uk1BgJJQqokS50L58DnIhbRkE4ZlorDNlZ8KhZyUNPRPrGg009WuRfiPptkxbKLWcYowQldY1Of7yBnWVzpJNOMUzlLTybhIgNsw5LYxK2xT5ZzSO1MoAOGXGBbzLC7xXqACXBgBCqPD/2W9em8rhVbRxwzMcl4Kg6X/40PsAUkWQ6xLXZpbamdD/hOpdoXQKI+I4kSdAF3ZlhzTEBsuwnkfKjKgMOELm+p0AO6FIads0/vaLmpRo9OQcj/06C95mxAnnCioD0kz6/3j3Sc9tZjRz09N1f1NYz//KzPw1ZBYN+5MJSt3SyPhrIcos2OwQ//xvWdm6eb7stzPL55aDYbMgzp5zVO0wYX3Z8p51/UPPz6bV6v5fP5KB8/fp5/RhOQ9+p+LJPFD/TYvA5X86vusLMcdgf4Vzd+mV0m+fUqzFlyJ8azZZ6tX7693N/m6Y+vd4l8HqhvaD24vXTzW4qv78JkiZrB46yzWqvYw+6oMVypq6890bkKOYxng/D5S79VprPH/9C2O/NDNX4BIndLMwb9XuVadwnLj8XMWGhsTwrXKDfiIyQwabXNLqMdkdJyR+NI93Czdhudy8BDvudfB36t3r1CgY+CZtO9Rh1UD7ydyGxYHFHsZmxCTSwjuZux+ZggSSMBLAZuLzKllU5YHyD2sMSVPnvQhyBjAkaZlme3RiUaL708+zML3YWsB4lCzZQTsCp3mbxn97wzkcAPRTk8EOUHIDSnYJTbDLbQky2kLsYcL5RM3OoCVxkore3cyGzk1cLAETTNEzBUnTSLVQLVfJYXpXHE5utpxRGF9eFqVBy3k4kd/9vVQPvE1DgIk8sl6D7CO7eLv0vkZMKuu5/wDr6jYmpOli6o5JRsmBz++jsnZkDKIdEZ/e4Of7s73qX72dvf7nQ+IOUc16MMFC/oXtjd3a1vAa0b7V0359itzqtqsVBFA2s13+Ea3jEVcpDnDIEorWyrUfYHmFOiOGddIyXxo+Cl/ZCikjM2lFhCqgeuUizPeDcMQZh3Q18fleW5j5KDkLp0EpbyPVs30W8ew/jDZxGJiPHT5oH+vGY8/tuxd7D24ug89bNBUjY1K3OFrE7MBck0LNXil/F98PcA3gt+aCyLXHKReqDGSsLpPxWjai0LE5IpJvs9qzDsK23BU65yiP46vYEpxLx83dF/f97ZtBgBI1rav8A3l3RkjgCb7qn1NugJwa59JNiH7NpvzG8te3U6nvH2Pw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB520323F4346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB520323F4346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB520323F5346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB520323F5346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_11010</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130925_075247</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130925_075247</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20130925_075247</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E736ED6B4703B84FE0401F0A05996EB3</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4jx0jG0yMPYEZPhMSAgnQlstLR8hro9TIYMlA+uuvZGIChOTS++TRerV7dvfoSNccL6KiV+ccEkFjpnVbVf2XBeWZO7PKRmVmY8Ou2I5RcR0wzFLFrLhBEDi4pGtdzlPoMi4wE1W9aFolw3SNYnls2Z7leuVKoWLbU137AQmXoaVLwdS17SJi3MvSVvU0YV6MOeUewwvgniDeqP7Q86Snh3NMeu16hzJLmNTmQiw9hEjBBwJRRAokXqBrdORz7XNvREOGRZrAa06fV/XXvZvNprApFeIkREXTNJHpIunjcxp+1Wtf8s3gd1kQ79ZNzGJGCY7oH6xAPYCYx75Wj8I4oWK++CC0hSxThTZgSwxi2eyrjt4SZOgujHQEMuHY4HNs5cGGEEACjID2fdit6l8vm+Bu7zjBjAdxsuAn67+DBGwNUbwE3+B5ZTm6yyOeaVftGojXZSRKOV1DX9FkiQlw7TGBgG57lEvy+VzLxq9tec4wIH8zkmt0iFPCRmc606IhcPF/5nU4q12UHzhKoTYejLm/eZ6IuePP+c1s9DB17tjNsPkcVzMIh847UPtRv65Pibrn1esmgQbuvdn7abbvVv/MyvVe3bltPt8sxsX5009n0LmfLR/uR7zR7W8Gyepu/r2xdqbBE2736/zHP+1V6QmJyvomHNsp+0Kjkh+uaN+y+2a/3Ww92zF8G3bCaP2Ix+PVHzSd9JaD6PZ36JhB7/kW7idPbhg635qjRtzpXVk/+aQ1XTlF9A1/uWWVoDxwV+yp93iHG6j9O6y+1XRYw7Exl4NROnsGIvKloka3pXXkvLD4XFqUhfpGkLl6S6VPXAATek3tUrLipVJ8qO/JYe7Wbad01W5dNWzHLDUqdqdt2qbVMetm2XWv2o1Srj87FCcQmzELqMqlFHbHn88BkoXHgfmQGOs4JXPg+icRW1hgrcuG8mDEjMM4lgreXiXpJCC3vc20yEtwY00nSaP9ggupjBpQyRhd68diwAZJPRCQHOu3c6TfQyB0SUGJvGI6l1TnQjZlhdepiKzCGhcYpPIaSJQSe0W7UkacLpYRKMhoEftpBIXlfJm1CPHdt2hgwjPrsD3+1R01s1P4YZGn//J+SB+fKgeu6mmAnCmcuYzsvJgPiy6ah0Xn4eupT9Vhk80VCSU7JMe/3jijyLInjKqqOfpl5bj37hdvf78TfQIKnfZjn8hf04O0+a0qLwopJbV8oitcWBXS9TrNZugomUxkeGQh00EjIKnUupdx/BsY2odAF10ze9Qnmff2Y3ypmLORwAIWknFatrzgjTECrt4YXcnu7aUPmKOUsm8CtuKcrRnJp4hC/OlrhXhE+Unzo/xs4sR/G9eZWAd5ZJ3yYSEoC9VKXSovH5CCxDIslSoYJ4fBzwU4l/zYuG/yHouQbJqlAj7+oyl5q+qYkDhlotvSM8Oh5GY4xcsSvDend2EyWX+9p7f8w3t68tAbSfFbYH3vS//b2aAZXQjIXZxmWKr6Vj45ZXIWHkj8K8BTle9IknQkT+yW6e5V3nFds+y4+wYeVVJ7Z35vOejp6Xmo/Qs=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E736F038F3804D09E0401F0A07990579</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbZcuI6EH3PV7g8j1NGXnAMrkAVa8YzQBbI+pISsgAFWzaW7JB8/UgmdoCQXOY+udRudZ/uPjrSGYNhYLotxnDCSUQVr9tQnyxkmPq07muOXa9qVdOua3A69TUf2fpMN3XTqGFV8RhLsUcZh5Q3VFM3LE2va6Y9MaquqbumVbGs2qOq3OKEidDCpaKryjoMKHPztA01TagbQUaYS2GImcuRO24NB67wdGGBSW2ebVDmCZPmgvPYBQBVfIxwEKAKikJwBnZ8znzmjsmcQp4m+D2nzxrq+96Xl5fKi1WJkjkwdV0Heh0IH5+R+Q+1eVJsxr5HZ9Fm3YE0ogTBgLxBCWqI+SLylVYwjxLCF+EXoQ1g6DK0htdIQ0aV/lDBR4Ic3ZGRdkAmDGpsAY0i2DWe4QRThJWba6+h/jhugpu9kwRSNouSkO2t/w0SphkOohj7GisqK9AdH/FAu5pnGLkeRUHKSIZHkiYxRJgplwmekfWAMEE+nyn5+JU1KxiG0b+M5Axs4xSwwYHOdMkcM/5/5rU9q02UWxikuDnsmlXQiZyrHhwY69n81/PgOcw4GJFhI4ew7bwBVY76fb1P1JJX75uW2WhC279voyuwCAw2snvT1c81n5p3q/OgQ89fydXp66N108erPz28bj+81cbgt29zK5u82XfIGy1Rvesw8/JleNK+YWliPfyM3tqTP4+ngKIaDdtJdczsmwvjFXTjyzh7fu5ZVB/eL3+tHumt/TAfPdrA4W0LsmUH1uLb4SBKreWJE8xSPAjH91cXPf+i35rF88ZHTds17BoLORin02eMeLGU1PC6Sl/MC/LvpUVaiK/Nclc3lvrEOKZcbcpdUlbcVIgP8V0xzM2651inve5pu+o4drtW7ff0qm709ZZu1+unvbZV6M8GxR7ETkRnROaSCrvhz/cAUegyTH2caFmUogVm6jcRu5BDxaPX4mBElOFJJBQ8u3v+M2BDr/PY+XV+28HLuW+1u5etSiqizohgjKqMIn5BL5LWjONkV7+dHf2+xojEBEuRl0xnguqMi6asYJbywKhksEJxKq6BRCqxa1ZrNmAkjAMsIYMw8tMAV+JFnLcIsM3X1CBiufW6N3nyxp38FH5Z5P6/oh/CxyfSgcl62ljMFB+4jIyimC+LlhV/FF2Eb6U+kYdNNJcnBG2Q7P764IwkS0kYWVVn/GQUuEv3o7d/3gm+AQX2+1Em8jOylba4VcVFIaSkWUx0BSurSpplaT5DR8pkIsIDA+gOGGOUCq17nURLTEEZAhx1zZSo9zKX9l18KV/QMYcch4JxSr484o0xxky+MTzB7vWxD5idlKJvHK/5IVsnEE8Rifjb1wpykfQT5kvxeYkS/2NcB2Jt5RF1iocFJ3QuV/JSef2CFCgSYYlQwSjZDn4owKHku8ayySUWLtg0TTn++o8i5a2hQoSilHKvq+aGbcnNcfLXGLsfTp/C5LL+fk+v2Zf39P1wMBbiF0K19CX/7ayRnC5IvFCFf46loa7Fk1Mkp/MtiX8HuK/yfd2q9a2aXu3q9VLlnXpdt5162cCdSpqfzJ8tWz3dPw/Nvw==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E736ED6B4775B84FE0401F0A05996EB3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E736ED6B4775B84FE0401F0A05996EB3</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130925_075247</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E736ED6B4776B84FE0401F0A05996EB3</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00014_ACCESS_UVTC_UserName_RequestorUserFAU_Active_RequesteeBAU_UnlockMe_Role_Retailer_200_OK_P1" searchProperties="true" id="7643f440-9050-48b5-87af-e98b78d625a4"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="cef01d77-6107-40b8-9470-a1cba61da54d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="e40689d3-e283-4446-b116-8080400cb480"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="471e591d-eee0-4b0b-b364-09980726cc0f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU" id="d54053c6-0c46-43ae-8842-d026964c4a11"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="fdfa7d2b-559f-461c-bf74-2a14b9abe77f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VynlMGVlmCbgCVWzJcEkgA2SpvKSE3AYxtuxYMku+fiQDDpCQy71Prm63uk8vOuprQQLfdhpCQCxZyHOrwOfCSbU1I4m5ExLBhMNJAMKR1Bk17u8cO285ZHfEyHXbNePNo27Vox41KwQss1iuVMxKuWyZ1C5ZFdedFKjrKVMhEuhyIQmXNcO2cMm0yqZVHFslx644djGPceXVyD1BLJRvZZK3jC2olagZMykjB6HlcplfFvJhPEW2ZWH0cn83ojMIiFG/3mSUBorrW3uad4GC79M8DQN0jQ5srl3hjNiUE5nEsI3lnoplIauKlI0r2PTCyM6C2+VemIotwkPOKPHZB9H1uQc5C91cw5+GMZOz4GQS2NKOTVhRk+IivzDQIbQzHR0gjAUxxYzgra8heBADp5B7HHZrxsV5XUuPjmPChRfGgTgU/xse4AvwwwhcU+zS2kI73+E3lapfA3W6nPqJYAvo62GNCAWx7SbQ813lHmLw2OqOCTWgK6HRoX14R+KmGm02BSH/T4P2mrNx8kT8BOpXT7PB87p8GfXvebkZJd6kXGAvl4N773ctBbBvnCqy1m7Eo6HMhmhzIhl37PFSvHR7V+tCqYks8Txka9Gc3I26DwV5OexUq9Onu6JEt8+42XmehdAJxLo6moUowr3RwC+05jYeesHj66J3v4zRLe6tfpFCuzm4RZObpvc0+BX+jqVdHPvLYb/1zxBVh72Pfvf1cdaP5FNLXnYG731ys6K81Y6speV5tPdSnM8DNme94rRgP0LA2bhSy9LZw3+o2935UTKZA5U7UY9Bt527UV0i8mcy0xrmml5q6kSafIQELo26PqW5w0kU3THXUT3cyPiq0SzZGBdauIRL7UbHKhWsq2oV31iNm071ZkcyGxRHEFsh95iOpSl3MzY/A6SBI4C7EJuLMFFMJ4wfPLaJJLkuH6pLEHIB41DRM55XVP8+rgofK+B4USqtrD/WnF1NFL32Qzngg7jhSYgPSblyQMpDoCxioJlbD7ZQky2kKsY7WSTSx/kFyXNIFLfHmmbVuUoJCRZEPmioKAjdxId8NIvS0iCx+domoSLVDjvj9LqdTOz4364GysZl2kDoXJqg+gjfvC54l8jJhDHeT3jnvpG4TN8sVVAZM7pBcvjrc070gGRDojJ6a43e8A53Zn728a8n0Q+g0HE9skDugu2F3b3d6hVQvFHfdfOd4Px7PlkskrSBxWIBxco90hVClo1GQBPFbOtx+Ac4yrygs56RDPhR8Ex/CDGRMz6SREKgBi6XimfsDSMQem/oqquyOncpOQipSidhJb/TtXy182jEP65F1KHaTqkf1GcZxu5nx77xtRdH5anWBsn4VEv6CVmfmAsaKrdMkV8Y7zv/zsF3wQ+VWZEzLFIN1CSRcPpPTrNazSCUhgmX3baRKvaZNsUp1xE4n0Zf3KRknm137N/XO5OlI0BB7YSCpf71I+3oK8Cne2y9DXqCsIs/EfYhuvoX9VfNXp2OZ7z+Fw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB52113C1415DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB52113C1415DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB52113C1515DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB52113C1515DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_110122</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150604_110151</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150604_110151</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150604_110151</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VynlMGVlmCbgCVWzJcEkgA2SpvKSE3AYxtuxYMku+fiQDDpCQy71Prm63uk8vOuprQQLfdhpCQCxZyHOrwOfCSbU1I4m5ExLBhMNJAMKR1Bk17u8cO285ZHfEyHXbNePNo27Vox41KwQss1iuVMxKuWyZ1C5ZFdedFKjrKVMhEuhyIQmXNcO2cMm0yqZVHFslx644djGPceXVyD1BLJRvZZK3jC2olagZMykjB6HlcplfFvJhPEW2ZWH0cn83ojMIiFG/3mSUBorrW3uad4GC79M8DQN0jQ5srl3hjNiUE5nEsI3lnoplIauKlI0r2PTCyM6C2+VemIotwkPOKPHZB9H1uQc5C91cw5+GMZOz4GQS2NKOTVhRk+IivzDQIbQzHR0gjAUxxYzgra8heBADp5B7HHZrxsV5XUuPjmPChRfGgTgU/xse4AvwwwhcU+zS2kI73+E3lapfA3W6nPqJYAvo62GNCAWx7SbQ813lHmLw2OqOCTWgK6HRoX14R+KmGm02BSH/T4P2mrNx8kT8BOpXT7PB87p8GfXvebkZJd6kXGAvl4N773ctBbBvnCqy1m7Eo6HMhmhzIhl37PFSvHR7V+tCqYks8Txka9Gc3I26DwV5OexUq9Onu6JEt8+42XmehdAJxLo6moUowr3RwC+05jYeesHj66J3v4zRLe6tfpFCuzm4RZObpvc0+BX+jqVdHPvLYb/1zxBVh72Pfvf1cdaP5FNLXnYG731ys6K81Y6speV5tPdSnM8DNme94rRgP0LA2bhSy9LZw3+o2935UTKZA5U7UY9Bt527UV0i8mcy0xrmml5q6kSafIQELo26PqW5w0kU3THXUT3cyPiq0SzZGBdauIRL7UbHKhWsq2oV31iNm071ZkcyGxRHEFsh95iOpSl3MzY/A6SBI4C7EJuLMFFMJ4wfPLaJJLkuH6pLEHIB41DRM55XVP8+rgofK+B4USqtrD/WnF1NFL32Qzngg7jhSYgPSblyQMpDoCxioJlbD7ZQky2kKsY7WSTSx/kFyXNIFLfHmmbVuUoJCRZEPmioKAjdxId8NIvS0iCx+domoSLVDjvj9LqdTOz4364GysZl2kDoXJqg+gjfvC54l8jJhDHeT3jnvpG4TN8sVVAZM7pBcvjrc070gGRDojJ6a43e8A53Zn728a8n0Q+g0HE9skDugu2F3b3d6hVQvFHfdfOd4Px7PlkskrSBxWIBxco90hVClo1GQBPFbOtx+Ac4yrygs56RDPhR8Ex/CDGRMz6SREKgBi6XimfsDSMQem/oqquyOncpOQipSidhJb/TtXy182jEP65F1KHaTqkf1GcZxu5nx77xtRdH5anWBsn4VEv6CVmfmAsaKrdMkV8Y7zv/zsF3wQ+VWZEzLFIN1CSRcPpPTrNazSCUhgmX3baRKvaZNsUp1xE4n0Zf3KRknm137N/XO5OlI0BB7YSCpf71I+3oK8Cne2y9DXqCsIs/EfYhuvoX9VfNXp2OZ7z+Fw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17AB52113C1415DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMr5gG3AFqgiXHTaEZIBJsnlJCbkNSmzJWDKQfP1IBhwgIcvuk6vbre7TFx31JUdxZPstziEVhNHSOo4o93NtQ8tS6jPECfcpioH7Avvj1s3At8umj3ZHtFK/09Ce7cCzbbuO9NCa1nXHrNZ0VANPD6chtirYmmLTkaacZ9CnXCAqGpptWq5uerrpTEzXt2t+xSvXnfqTVrqHlEvf0qRsaltQa97Q5kIkvmGsVqvyqlJm6cywTdMyHm8GYzyHGGnNy01GeaC0ubXH5QAwRBEuYxYbl8aBzWXA/TGZUSSyFLaxglOxTMOsG9Im4GT2QyvOQtCnIcvFNqKMEowi8o5UfW5AzFlQakUzlhIxj08mYZnKsQ5rrGPLoT804xDamY4OEKYc6XyOrK2vEYSQAsVQ+j3qN7Qf53UtPzpJEeUhS2N+KP43PECXELEEAp3v0tpCO9/hF5VqXgL2+xRHGSdLGKphTRAGvu0m4PNdle5SCMl6QLgc0DVX6Ix9eEfiphodMgMu/k+D9pqzcXKPogyadHi9eoxvsvaowp5eLi5M9uhcua9iKFPJAewb54qitRvxaCiLIdqcAPfFqkWPtbBa7XjdGgp6/Lr60G9f3N1G+H19va4sHnnLsHGXdp5Yr5s+edV5Bw+zxc3S8Lzkb2cx6sAK/TWvehfYCOb373x6+/ATw3LohrOx48S1cJU8jpm3XtwNWj+vXlue6D1k98ML6/bVXcerwRA6cXeC/hmhwevvbnuIzVePizR2zTtrEnrVevorSQa/GkU6e/gPdbs7P86mL4DFTlRj0O+UerJLSHxPZkpDAj3MTf1EkQ8XQIXWVKcUd/iZpDsS+LKHG9mqtq5c26zYTq1bcbx213QrpluvWz2zZXquvSOZDYojiG1GQ6JiKcrdjM33AHHsc6ABpPqSZZLpuPaNxw4SqNSnI3kJGOUwYZKeLcrXC+rUhUM5T8S7JxxHmIvM00pDJm7pbdoKBaSHnFw74OQRYJIQUMSt5prLweZC1mKBlpmIrPISlSlkktpTxbK+LIxrcBInESikRsyCLIJyMk/yyhh887V1hHmuHXUn+W07mdfxv10JpE1AlAFXuVyBbCN88bjYu0ROJmxZ+wnv3LeygKiLJespUoI3SA5/fYyJmo9iRmRGz+3xs7XDXZifffzzSeMbUMZxPYpAwZLshd093fIRkLTR3HVzgazyopwtl1neQMepGKl0b6gKGaZtjAFnktjeJuwVqFF4Mc56RQrgR8EL/SHETMzpWCABsRy4Ui6esTaMgau1oS9vyvrcneQgpCydgLX4SteO5MqjEH+7FWEfKzupvpOfFUuDj4594WsvjsxTbg2C0JmS1AvydmIuMJNuieQ+lu47/8rBV8EPlUWRCyxCDtQ0E3D6T0mRWkNDGLOMin5HyxX7RJvjFG8J+B9Gn9zkXF4sd+Tftzud5COAQa6EnOT+1RvtqytAZ3tkvQ36ma8tq9K2HMvttHK+rm74utet94qiHKBrflJ/1uzV6XjGm38A</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17AB5203248E346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17AB5203248E346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_110151</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17AB5203248F346CE05305991F0A0652</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00015_ACCESS_UVTC_UserName_RequestorUserFAU_Active_RequesteeSAU_UnlockMe_Role_Retailer_200_OK_P1" searchProperties="true" id="f4181f79-ff4e-40a0-b983-5ed08d875b8d"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="9f3f187d-6809-427c-84a1-0fbe292a7fc1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="8db00e62-9f2a-414f-831d-7be1d05c91fb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="ccb40288-76a4-488d-a1c5-74b5a4ccb177"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU" id="c7512e51-b6f8-4b32-83c7-6132c7f2ca34"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="692d7acc-9bc3-4d76-96ac-26faf4ee16bc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0Vynm8ZbxgE3AFqkyAG2eysSST5CUl5AYr2DJIMpD79SMZcICEDDNPrm63uk8vOuoLjpLY9nzOgQmS0tIqiSn3cm1Dyxj1UsQJ9yhKgHsCewP/9sazy6aHtke0UtBuaG/1uuOMrGpdr4xHWHeqjquPwrGjO6O6iwGZYc08l6acZxBQLhAVDc02LVc3q7rpDE3Xs+ueaZbPHedVKz0B49K3NCmb2gbUije0SIiZZxjL5bK8rJRTNjFs07SM59ubAY4gQVrzYp1RHog1N/a4HAKGOMZlnCbGhbFncxFyb0AmFImMwSZWeCyWaZh1Q9qEnEzOtOIshAEdp7l4iWhKCUYx+YNUfW5BRGlY8uNJyoiIkqNJWKZyrMMK69hy6Jlm7EM70dEeQsaRziNkbXz1YQwMKIbSYz9oaGendS0/OmSI8nHKEr4v/jc8QBcQpzMIdb5NawPtdIffVKp5AdgLKI4zThZwp4Z1hjDwTTcBn+6q9MBgTFY3hMsBXXGFztiFdyCuq9EmE+Di/zRopzlrJ08ozqB51c/c5bTKlr2r14cwaJ13Xn7HM+gMPiaNHMCuca4oWrsWD4ayGKL1if4LwPyq7b77o7HdC4K6uLu7uW4RNhEt5717G0H6ZxFdQ+3GfsH9OzKshqaJ/OmoU+1F8PzIBuevTmd47YPP/Pa893uCiPFwfRsH1jLqdul79qv1cD/qpxw9PXacbv0hfk6s+d/99uW89RKjl+VkTB9RP0qeMvreg+unbNEJ/mr17MrrlE/F7NeNhZ1Fp/bqN4p0dvDv67Z3fpCN3gGLrajGIGiXurJLSPxMZkpDQn2cm3ozRT5cABVaU51S3OFlku5I6MkermXr3G+5tlmxnZZZcaqXHdOtmG69bnVN36y69pZk1igOIF6mdExULEW567H5GSBOPA40BKYv0kwyHdd+8NhGApUC2peXIKUchqmkZ3hPEjad0ynGCXOzMRvNPng0rWilu1Tc03vmjwWwfUqu7VFyHzCZEVC8rcaay7nmQpZijhaZiK3yApUpZJLZmSJZz3ZqrsFJMotBATWSNMxiKM+iWV4Yg6+/to4wz7X9zjC/bEfTOvy3rYC0CYky4CqXFsguwpe3pea520SOJmxZuwlv3ftZSNS9kuUUjOA1kv1fn1OixqMYEZnR2+XgzdriLsxPPv71pPEDKOOwHkWgcEF2wm5fbvkGSNZobrs5R1Z5Xs4WiyxvoONUDCbdG6pChmkbA8CZ5LWPYToFahRejJMekQL4QfBCvw8xExEdCCQgkQNXysUTtoYBcLU1BPKirE5dSfZCytIJWInvdJex3HgU4h+XIuxhZSfVD/KzTFn42bFvfO3EkXnKpUEQOlGSekA+jswFTqVbIqkvZbvOv3PwXfB9ZVHkAouQAzXKBBz/U1Kc1tAQxmlGRdDWcsUuz+Y4xccMvE+jL25yKi92O/Lvy51O8hHAIDdCTnL/6on21BWgkx2u3gT9nq797k90vY+u+UX9VbNTp8MZb/4D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB520324AF346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB520324AF346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB520324B0346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB520324B0346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_110215</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150604_110228</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150604_110228</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150604_110228</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0Vynm8ZbxgE3AFqkyAG2eysSST5CUl5AYr2DJIMpD79SMZcICEDDNPrm63uk8vOuoLjpLY9nzOgQmS0tIqiSn3cm1Dyxj1UsQJ9yhKgHsCewP/9sazy6aHtke0UtBuaG/1uuOMrGpdr4xHWHeqjquPwrGjO6O6iwGZYc08l6acZxBQLhAVDc02LVc3q7rpDE3Xs+ueaZbPHedVKz0B49K3NCmb2gbUije0SIiZZxjL5bK8rJRTNjFs07SM59ubAY4gQVrzYp1RHog1N/a4HAKGOMZlnCbGhbFncxFyb0AmFImMwSZWeCyWaZh1Q9qEnEzOtOIshAEdp7l4iWhKCUYx+YNUfW5BRGlY8uNJyoiIkqNJWKZyrMMK69hy6Jlm7EM70dEeQsaRziNkbXz1YQwMKIbSYz9oaGendS0/OmSI8nHKEr4v/jc8QBcQpzMIdb5NawPtdIffVKp5AdgLKI4zThZwp4Z1hjDwTTcBn+6q9MBgTFY3hMsBXXGFztiFdyCuq9EmE+Di/zRopzlrJ08ozqB51c/c5bTKlr2r14cwaJ13Xn7HM+gMPiaNHMCuca4oWrsWD4ayGKL1if4LwPyq7b77o7HdC4K6uLu7uW4RNhEt5717G0H6ZxFdQ+3GfsH9OzKshqaJ/OmoU+1F8PzIBuevTmd47YPP/Pa893uCiPFwfRsH1jLqdul79qv1cD/qpxw9PXacbv0hfk6s+d/99uW89RKjl+VkTB9RP0qeMvreg+unbNEJ/mr17MrrlE/F7NeNhZ1Fp/bqN4p0dvDv67Z3fpCN3gGLrajGIGiXurJLSPxMZkpDQn2cm3ozRT5cABVaU51S3OFlku5I6MkermXr3G+5tlmxnZZZcaqXHdOtmG69bnVN36y69pZk1igOIF6mdExULEW567H5GSBOPA40BKYv0kwyHdd+8NhGApUC2peXIKUchqmkZ3hPEjad0ynGCXOzMRvNPng0rWilu1Tc03vmjwWwfUqu7VFyHzCZEVC8rcaay7nmQpZijhaZiK3yApUpZJLZmSJZz3ZqrsFJMotBATWSNMxiKM+iWV4Yg6+/to4wz7X9zjC/bEfTOvy3rYC0CYky4CqXFsguwpe3pea520SOJmxZuwlv3ftZSNS9kuUUjOA1kv1fn1OixqMYEZnR2+XgzdriLsxPPv71pPEDKOOwHkWgcEF2wm5fbvkGSNZobrs5R1Z5Xs4WiyxvoONUDCbdG6pChmkbA8CZ5LWPYToFahRejJMekQL4QfBCvw8xExEdCCQgkQNXysUTtoYBcLU1BPKirE5dSfZCytIJWInvdJex3HgU4h+XIuxhZSfVD/KzTFn42bFvfO3EkXnKpUEQOlGSekA+jswFTqVbIqkvZbvOv3PwXfB9ZVHkAouQAzXKBBz/U1Kc1tAQxmlGRdDWcsUuz+Y4xccMvE+jL25yKi92O/Lvy51O8hHAIDdCTnL/6on21BWgkx2u3gT9nq797k90vY+u+UX9VbNTp8MZb/4D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17AB520324AF346CE05305991F0A0652</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvO4ZSTbmIsrUMUlmWGGJBMgs0lepoTcgBIjGUvm9vUrGfAAIVl2n1zdbnWfvuiorySZRW7QlBISxQQvrGYRl0GmrVtpwgNBJJMBJzOQgaLBoHnbC9wiDsj+iFXodurW75Hn0AoFatcAl+xSlYQ2CWuePa5VqVcZV8ujMtGmUqbQ5VIRruqWix3fxmUbl4bYD9xa4HjFsuO9WIVfkEjtW5sUsbUDtZJ1a6pUHCC0XC6LS68okglyMXbQ021vQKcwI1bjaptRFihp7OxpMQQKUUSLVMzQFTqyuQplMGATTlSawC5W+FEsjHANaZtQsskXKz8LYZePRSa2CRecURKxDTH1uQU1FWGhGU1EwtR09mESDjaObVhRmzol/sVCx9AudHSEMJHEllPi7Hz1YQwJcAqFx363bn25rGvZ0WFCuByLZCaPxf+GB/gCIhFDaMt9Wjtolzs8U6nGFdCgy2mUSraAOzOsMaEgd90Eermrws8ExmzVY1IP6EoadOgQ3om4rUaHTUCq/9Ogg+ZsnfwiUQqN/maEYvRrXbu/nbR6/KEt/MpP/6lE2g/1DMChcabIW7sVT4YyH6Ltibj0fdKdluavEkf3vvP6uLm99lDve7PyvP76Wvkbbb5HN4tVq1UeJS/uqLPqidu/vPHj82bwjQ3J0134te9UHpOnMNzMq4Anbx7r1Vo+d/jdy901xgI7yaq1WiwfFBvdiZ6bvqjQdyrzZ+YqYJ3RvITT1aD7NmyVX6K0+oAn39qo/frW9V8205R79Hn5RJP4h6jn6RzgP9bt7/wgHb0CVXvRjEG3U7jRXSLqczIzGhba48w0iA35SAVcWQ1zynBHkGq6Y2Gge7iVnUqz5bvYc33se6Vy+1p/sF+rOTe4icu+uyeZLYoTiG3Bx8zEMpS7HZvPAdJZIIGHkNgLkWqmk9YnHjtEkUKX9/UlEFzCUGh6roAbb6qw9hyeODWYTavLqUP5emoV7oS65/dJc6wgOebk6hEn94GymIEhbjPXUg+2VLoWc7JIVeQUF6TIIdXUnhiWDdxS1UeSzeIIDFI0E2EaQTGexlllkNx+XZtQmWn718Pstn2Y1+m/fQm0TciMgTS5tEC3Ec48LnifyIcJO85hwnv3zTRk5mLpeqqE0S2S419/xsTMRz4jOqPf7cFvZ487N7/4+PuT6BNQ6LQeeaBwwQ7C7p9u/Qho2mjsuzknTnFeTBeLNGtgqeShRLtHpkIIu2gANNXEth6KN+Ao94IuekVy4CfBc/0xxFRN+UARBTM9cIVMvGBtGIA0a0NX35TVpTvJUUhdOgUrdU7XjvTKYxB/uhXRgBo7rf6pP0uRhH86dsbXQRydp94aFOMTI5kXZP3BXFCh3TLNfSI5dH7Owbngx8q8yDkWpQdqlCr4+E/BkFrdIpSKlKtux8oUh0Sb4VTrGII/Ru/cZFyeL3fs37c7m2UjQEGvhJJl/s0bHZgrwCcHZL0LepavS82bz/j6GF3jnfq95qBOpzPe+Ac=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17AB52032505346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17AB52032505346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_110228</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17AB52032506346CE05305991F0A0652</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00016_ACCESS_UVTC_UserName_RequestorUserFAU_Active_RequesteeOtherFAU_UnlockMe_Role_Retailer_200_OK_P1" searchProperties="true" id="901bcef1-f3a5-4764-81e7-5cadd8766a76"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="fa190a86-cdf3-44df-856e-b1d868a62e7a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="289ab0a7-ef76-49fc-a475-9ac9c1465e8a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult FAU" id="1d2e20d1-adb0-4376-a352-7402dd3cc965"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult FAU" id="56610fbc-a600-42ee-bb89-a1f537e8e9bc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="c0b003e9-da7f-4ac3-ac0b-afe55633f094"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZrc7I6EP4rDu/HDnJRrDDVGSvqsdVe1LZOv3RiWDUWgpKgtr/+TVCpWPV4zidml83us5c82RuGAt90aoxBxElIc+vAp8xJtBUljqgTIkaYQ1EAzOHY6de6HcfM6w7aHVFybbeifNhW0bouGYZa9oyiWrRHYxUVi7YKyBhBSQfDwKYwZSyGNmUcUV5RTN2wVL2k6sWBbjmm7RT0vFk23pXcK0RM+BYmeV3ZglqzijLlfO5o2mq1yq8K+TCaaKauG9qw2+njKQRIqd5sMkoCRdWtPc57gMH3cR6HgXajZWxuPOb0yYQiHkewjeWdiqVruq0JG4+RyR8lPQtem47DRKwjGlKCkU++kaxPF/g09HI1fxJGhE+Dk0kYunSswhqr2CjSP4qWhXahowzCiCGVTZGx9dWDMURAMeReeu2K8ueyriVHBxGibBxGAcuK/w0P0CX44Rw8le3S2kK73OGRSlVvADttiv2YkSU8yGGdIwxs203Al7vKPUUwJusOYWJA10yi0/bhHYibarhkAoz/nwbtNWfj5BX5MVSDmc86rYLpxoPn50ZJn9CI1+MmlMNuJQGwb5wo0tZuxIOhTIdoc8LV/a8muNj3hn7xOShfuU+t5fjhDnfumujxwWoz8+6eDYMJNnyG+Fu4it+1boN8vpamny+oMbxazPpf1zObx4tPPly570a0nl1fea+1e1TyGz59+uetcWXZd/d2q+Xb3CKtzjcM3wYvr4Y+7LSDTu1q9K091seTSc+1m8aSGLWgAI2+N+ja963YbUT81tVYu5Kms4c/q9vd+X48mgHmO1GOQdvNNUWXED9PZlJDPHWcmDpzST6MA+VKVZ6S3OHEgu6I54gebmTjunZrmXrBtEy7UCzVG7pV0C3bNpp6TS9Z5o5kNigOINZDOiYylqTczdicB4gDhwH1IFKXYSyYjilnPLqIo1yb9sQlCCmDQSjoeTyzLDxiUPZCP7Kp/z3xTbqcLZTcQ8gf6WNUG3OIspRczlByDzCZE5C8LceaiblmXJRigZYx9438EuUpxILZI0myjlksWxojwdwHCVQLQi/2IT+fzpPCaGzzNVWEWaLtNQbJZTuZ1uG/XQWEjUekAZO53ILoIhx5W8xdIicTNoz9hHfua7FH5L0S5eQRwRsk2V8/UyLHIx0RkdFHvf9h7HCn5hcf/31SOwNKO6xHGshbkr2wu5dbvAGCNaq7bi6QkV/k4+UyThpYLBa0SLjXZIU03dT6gGPBa1+D8BOolnrRLnpEUuAHwVN9FmLMp7TPEYdADFwuES/YGvrA5NbQFhdlfelKkgkpSsdhzY/p6r7YeCTis0sRdrC0E+on8VmFkffTsSO+9uKIPMXSwAmdSEk+IF8n5gKHwi0R1BdG+86POTgWPKtMi5xi4WKgRjGH039yktMqCsI4jClvu0qi2OfZBCf/moPzY/TLTULl6W5H/n25U0kyAhjERshI4l8+0Y68AnSyx9XboCfounyOrrPoqr/UvzV7dTqc8epf</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB52032528346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB52032528346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB52032529346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB52032529346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_110249</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150604_110258</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150604_110258</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150604_110258</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZrc7I6EP4rDu/HDnJRrDDVGSvqsdVe1LZOv3RiWDUWgpKgtr/+TVCpWPV4zidml83us5c82RuGAt90aoxBxElIc+vAp8xJtBUljqgTIkaYQ1EAzOHY6de6HcfM6w7aHVFybbeifNhW0bouGYZa9oyiWrRHYxUVi7YKyBhBSQfDwKYwZSyGNmUcUV5RTN2wVL2k6sWBbjmm7RT0vFk23pXcK0RM+BYmeV3ZglqzijLlfO5o2mq1yq8K+TCaaKauG9qw2+njKQRIqd5sMkoCRdWtPc57gMH3cR6HgXajZWxuPOb0yYQiHkewjeWdiqVruq0JG4+RyR8lPQtem47DRKwjGlKCkU++kaxPF/g09HI1fxJGhE+Dk0kYunSswhqr2CjSP4qWhXahowzCiCGVTZGx9dWDMURAMeReeu2K8ueyriVHBxGibBxGAcuK/w0P0CX44Rw8le3S2kK73OGRSlVvADttiv2YkSU8yGGdIwxs203Al7vKPUUwJusOYWJA10yi0/bhHYibarhkAoz/nwbtNWfj5BX5MVSDmc86rYLpxoPn50ZJn9CI1+MmlMNuJQGwb5wo0tZuxIOhTIdoc8LV/a8muNj3hn7xOShfuU+t5fjhDnfumujxwWoz8+6eDYMJNnyG+Fu4it+1boN8vpamny+oMbxazPpf1zObx4tPPly570a0nl1fea+1e1TyGz59+uetcWXZd/d2q+Xb3CKtzjcM3wYvr4Y+7LSDTu1q9K091seTSc+1m8aSGLWgAI2+N+ja963YbUT81tVYu5Kms4c/q9vd+X48mgHmO1GOQdvNNUWXED9PZlJDPHWcmDpzST6MA+VKVZ6S3OHEgu6I54gebmTjunZrmXrBtEy7UCzVG7pV0C3bNpp6TS9Z5o5kNigOINZDOiYylqTczdicB4gDhwH1IFKXYSyYjilnPLqIo1yb9sQlCCmDQSjoeTyzLDxiUPZCP7Kp/z3xTbqcLZTcQ8gf6WNUG3OIspRczlByDzCZE5C8LceaiblmXJRigZYx9438EuUpxILZI0myjlksWxojwdwHCVQLQi/2IT+fzpPCaGzzNVWEWaLtNQbJZTuZ1uG/XQWEjUekAZO53ILoIhx5W8xdIicTNoz9hHfua7FH5L0S5eQRwRsk2V8/UyLHIx0RkdFHvf9h7HCn5hcf/31SOwNKO6xHGshbkr2wu5dbvAGCNaq7bi6QkV/k4+UyThpYLBa0SLjXZIU03dT6gGPBa1+D8BOolnrRLnpEUuAHwVN9FmLMp7TPEYdADFwuES/YGvrA5NbQFhdlfelKkgkpSsdhzY/p6r7YeCTis0sRdrC0E+on8VmFkffTsSO+9uKIPMXSwAmdSEk+IF8n5gKHwi0R1BdG+86POTgWPKtMi5xi4WKgRjGH039yktMqCsI4jClvu0qi2OfZBCf/moPzY/TLTULl6W5H/n25U0kyAhjERshI4l8+0Y68AnSyx9XboCfounyOrrPoqr/UvzV7dTqc8epf</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17AB52032528346CE05305991F0A0652</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbV+o6EP4rrO5HV+kVoV3CWiiguL0ARbb64grpANE2hSTlsn/9SQpUQPRwzlPXTCcz31zyZS44iiPbr3MOTJCEFpZxRLmfaatayqifIE64T1EM3BfYD+r3d75dNH20PaIV2o2q9uY6JQu7ZVN3kenp7gg5Ohp6jj4qY8dzhpaLbUeacp5Cm3KBqKhqtmmVdPNcN92+WfJtz3cqxYrlvmqFATAufUuToqltQC15VZsIMfUNY7FYFBdOMWFjwzZNy3i+vwvwBGKk1S7WGWWBWG1jj4shYIgiXMRJbFwYezYXIfcDMqZIpAw2scLvYpmG6RnSJuRk/EvLz0LYpqMkE68QTSjBKCJ/karPPYhJEhbq0ThhREzib5OwTOVYhyXWseXSX5qxD+1ER3sIGUc6nyBr46sHI2BAMRSeeu2q9uu0rmVH+wxRPkpYzPfF/4YH6ByiZAqhzrdpbaCd7vBIpWoXgP02xVHKyRwe1LBOEQa+6Sbg010VOgxGZHlHuBzQJVfojF14B+K6Gg0yBi7+T4N2mrN2MkBRCrV6hZOy2z0bdFhlcknHT9HiajGkKf3NqxmAXeNMkbd2LR4MZT5E6xNjL+iI1/TVnDM+YN2ZHZ8Z3bTxpwX1Ae+MZx63n8HrtTq3/X7pHZ7g8TW4EQ+jldl8MV9QiSz58DZod/7crP52+8/d+yYOaeoFBuOTZoUtusyZ2yG7ptez+u/35Lm7lAHOPLs+un6oP90Ft8QM5sPKbNlqRqy1KrthrzlovFwOyl38dJv0ljctEjp3NIw/qnk6O/j3dds7H6TDd8BiK6oxaDcKLdklJH4mM6UhoT7KTP2pIh8ugAqtpk4p7vBTSXck9GUP17JVrl+WbNOxS+Wm455fNc2SY5Y8z2qZdfO8ZG9JZo3iAOJVQkdExVKUux6bnwHi2OdAQ2D6PEkl03HtB48NJFChTXvyEiSUQz+R9GxVWLj0xun7+Sh6tyLvo8S5G/N3QbTCQyIe6SOrjwSwfVKu7JFyDzCZElDMrQaby8nmQhZjhuapiKziHBUppJLbmaJZ33YrJYOTeBqBgmrESZhGUJxOpllpDL7+2jrCPNP2mv3sun2b2OG/bQ2kTUiUAVe5XILsIxx5XextIt8mbFm7CW/d19OQqJslCyoYwWsk+78+50QNSD4kMqO3q+DN2uLOzU8+/vWk8QMo47AeeaBwTnbCbt9u+QpI3qhtuzlDVnFWTOfzNGug6zoGk+4NVSHDtI0AcCqZbdVPPoAauRfjpGckB34QPNfvQ0zFhAYCCYjlwBUy8YS9IQCu9oa2vCrLU5eSvZCydAKW4pjuKpI7j0L841qEfazspLojP4uEhZ8dO+JrJ47MU64NgtCxktQTsvpmLnAi3RJJfgnbdX7MwbHg+8q8yDkWIQdqmAr4/k9BsVpVQxgnKRXthpYpdpk2wylWU/A/jb64ycg83+7Iv693OslGAIPcCTnJ/KtH2ldXgI532HoT9Dhh25WfCHsfXe2L+qtmp06HM177Bw==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17AB5203257E346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17AB5203257E346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_110258</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17AB5203257F346CE05305991F0A0652</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00017_ACCESS_UVTC_UserName_RequestorUserBAU_Active_RequesteeSelf_UnlockMe_Role_Retailer_200_OK_P1" searchProperties="true" id="f8ee2b20-6e5c-4c2c-a8a0-c978b5dd9c48"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="0d27dc06-1e0f-49c0-8b4f-d95b05f2a8d6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="a807b208-85b2-4188-8c77-2b7b2a835ffe"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="20f1c708-05e9-48a1-b8a5-c7447cd5023a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU" id="0b1f8457-493c-4d0e-9dc2-0529d6866574"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="574c7133-15b7-4118-807d-3f271eed3f97"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+o6EP4rTM9HpyQtFGlHmEHQY1WUI1yPni9OSBeItCk2aQF//UkKVEDxcu+nzm43u8++5MmeCRKFttcSAhLJYl5aRCEXXq5tGGnCvZgIJjxOIhCepF6/1b317DL2yOaIUfI7DePFtbFTdyzXrFg1Ylbt+tB0R9WhWT916nXbdSzAoEyFSMHnQhIuG4aNLcfENRNXB9jxbNdz3HK9cvrHKD1CIpRvZVLGxhrUQjSMiZQzD6H5fF6eV8pxMkY2xhZ66t726QQiYjTPVhnlgZLm2p6WA6AQhrRM4widoR2bs0B4fTbmRKYJrGMFh2JhhF2kbALBxj+M4iwEPh/FudgmPOaMkpC9E12fLshJHJRa4ThOmJxEB5OwsHZswoKa1KryHwbahXakox2EiSCmmBBr7esBRpAAp1D658FvGD+O61p+dJAQLkZxEold8b/hAZ5BGM8gMMUmrTW04x1+UanmGVDP5zRMBcvgTg/rjFAQ624CPd5VqZfAiC1umVADuhAaHdqGtyeuqtFhYxDy/zRoqzkrJ48kTKHZod3Xk0GtSs/bGdRPk9711dPTFLdvw2kjB7BtnCuK1q7EvaEshmh14s+TDG6yweMvGMePy8Xyoj3Fd4Nb3H9k160lub94/1WpTCcnSOBOC5FRO70PfZu810R3sOAzdNnNZn5wMj/xnRsncxdX7878th3dieXSzaR1fe3aI+yyn8+dLroOHNz72a6Q1qvstYbxecA6y7R35/+mwv5d99HiWd1GZ3rz3LkOu3dJZdo7P6+FLBpeLa33eqNIZwv/rm5z5/vp8BWo3Ih6DPxO6VJ1icjvyUxrWGCOclNvpslHSODSaOpTmju8VNEdCzzVw5VsnbbOHRtXbKdlV6q19gV2KthxXesSt3DNsTcks0KxB7Ed8xHTsTTlrsbme4A08gTwABIzi1PFdML4xmOHSFLy+YO6BDEXMIgVPVvybTjF9cgevU9nFtSmgRAim06isVG6i+U9v09aIwnJLinXd0j5ASibMdDMrQdbqMkWUhXjjWSpDK1yRsocUsXtiaZZz67WHSRYNAtBQ0VRHKQhlGeTWV4aJFZf2yRU5NqHi0F+3Q4mtv9vUwNlEzBtIHQu56D6CF+8LtVNIgcTtqzthDfuW2nA9M1SBZUJoysku78+5kQPSDEkKqOXdv/F2uAuzI8+/vkk+gYU2q9HESjI2FbYzdutXgHFG81NN9+IVX4rp1mW5g2sVisoUe6RrhDCNuoDTRWzLQfxFDgqvKCjnpEC+F7wQr8LMZUT3pdEQqQGrpSLR+wNfRB6b/DVVVkcu5TshFSlk7CQX+naodp5NOJv1yLqUW2n1D31mcdJ8NGxL3xtxVF5qrVBMj7Wkn5ClgfmgsbKLVPkFyfbzr9y8FXwXWVR5AKLVAM1TCUc/lPSrNYwCKVxyqXfMXLFNtPmOOVyBt6H0Sc3OZkX2x379/XOZPkIULVJKvvcv36kPX0F+HiLrddBDxC29R1h76JrflJ/1mzVaX/Gm38B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB520325A1346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB520325A1346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB520325A2346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB520325A2346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_110316</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150604_110328</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150604_110328</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150604_110328</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+o6EP4rTM9HpyQtFGlHmEHQY1WUI1yPni9OSBeItCk2aQF//UkKVEDxcu+nzm43u8++5MmeCRKFttcSAhLJYl5aRCEXXq5tGGnCvZgIJjxOIhCepF6/1b317DL2yOaIUfI7DePFtbFTdyzXrFg1Ylbt+tB0R9WhWT916nXbdSzAoEyFSMHnQhIuG4aNLcfENRNXB9jxbNdz3HK9cvrHKD1CIpRvZVLGxhrUQjSMiZQzD6H5fF6eV8pxMkY2xhZ66t726QQiYjTPVhnlgZLm2p6WA6AQhrRM4widoR2bs0B4fTbmRKYJrGMFh2JhhF2kbALBxj+M4iwEPh/FudgmPOaMkpC9E12fLshJHJRa4ThOmJxEB5OwsHZswoKa1KryHwbahXakox2EiSCmmBBr7esBRpAAp1D658FvGD+O61p+dJAQLkZxEold8b/hAZ5BGM8gMMUmrTW04x1+UanmGVDP5zRMBcvgTg/rjFAQ624CPd5VqZfAiC1umVADuhAaHdqGtyeuqtFhYxDy/zRoqzkrJ48kTKHZod3Xk0GtSs/bGdRPk9711dPTFLdvw2kjB7BtnCuK1q7EvaEshmh14s+TDG6yweMvGMePy8Xyoj3Fd4Nb3H9k160lub94/1WpTCcnSOBOC5FRO70PfZu810R3sOAzdNnNZn5wMj/xnRsncxdX7878th3dieXSzaR1fe3aI+yyn8+dLroOHNz72a6Q1qvstYbxecA6y7R35/+mwv5d99HiWd1GZ3rz3LkOu3dJZdo7P6+FLBpeLa33eqNIZwv/rm5z5/vp8BWo3Ih6DPxO6VJ1icjvyUxrWGCOclNvpslHSODSaOpTmju8VNEdCzzVw5VsnbbOHRtXbKdlV6q19gV2KthxXesSt3DNsTcks0KxB7Ed8xHTsTTlrsbme4A08gTwABIzi1PFdML4xmOHSFLy+YO6BDEXMIgVPVvybTjF9cgevU9nFtSmgRAim06isVG6i+U9v09aIwnJLinXd0j5ASibMdDMrQdbqMkWUhXjjWSpDK1yRsocUsXtiaZZz67WHSRYNAtBQ0VRHKQhlGeTWV4aJFZf2yRU5NqHi0F+3Q4mtv9vUwNlEzBtIHQu56D6CF+8LtVNIgcTtqzthDfuW2nA9M1SBZUJoysku78+5kQPSDEkKqOXdv/F2uAuzI8+/vkk+gYU2q9HESjI2FbYzdutXgHFG81NN9+IVX4rp1mW5g2sVisoUe6RrhDCNuoDTRWzLQfxFDgqvKCjnpEC+F7wQr8LMZUT3pdEQqQGrpSLR+wNfRB6b/DVVVkcu5TshFSlk7CQX+naodp5NOJv1yLqUW2n1D31mcdJ8NGxL3xtxVF5qrVBMj7Wkn5ClgfmgsbKLVPkFyfbzr9y8FXwXWVR5AKLVAM1TCUc/lPSrNYwCKVxyqXfMXLFNtPmOOVyBt6H0Sc3OZkX2x379/XOZPkIULVJKvvcv36kPX0F+HiLrddBDxC29R1h76JrflJ/1mzVaX/Gm38B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17AB520325A1346CE05305991F0A0652</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbc6pIEP4rFnk8hQwIqFS0ytz2eMxtveT2khqHViaBAZlBNL9+Z1CJGpN194nqpqf768t806ccR6HldTiHVNCYVRZRyLhXaFtaljIvxpxyj+EIuCeIN+jcXHtWFXl4c0SrdC9a2qtNGq5JXNCbgJFu18aWPvabpl5vun4DWY06dm1pynkGXcYFZqKlWch0dOTqyB4ix6shz3SqNdN90SoPkHLpW5pUkbYGteAtLRAi8Qwjz/NqXqvG6dSwEDKNp5vrAQkgwlr7dJVREShtr+1J1QcCYUiqJI6MU2PH5tTn3oBOGRZZCutY/nexkIGahrTxOZ2eaOVZ8LtsEhfiOWYxowSH9AOr+tyACGK/0gmncUpFEH2bhImUYx0WRCemzU40YxfakY52EKYc6zzA5tpXHyaQAiNQGfW7Le3kuK4VR4cpZnwSpxHfFf8bHmBzCOMEfJ1v0lpDO97hgUq1T4F4XUbCjNM53KphTTABvu4mkONdVe5TmNDFNeVyQBdcoTO24e2Jq2pc0Clw8X8atNWclZMHHGbQvkz7aBRdERiGQ+Nthp5tx3wbPow7dd4qAGwbF4qytStxbyjLIVqdwJA++49XwRQejF/kLxDOW286DUaDUPy+c6ifpKPLl3AZ/P1ybT8ED5A37l/el2mtH7/cJuFwceY2euEyN57f3LAR/RbXH4NbyJZPo8fgyb3tBbMaT0ad4Uj0nbvb0ePCWk56HW64Av7Mns9Qb3RfD6/9fHB54Tdvko/e5Rhlidul7Ml5/2P+Gud92uN2fRj/yVtlOlv4d3WbOz/Ixm9AxEZUY9C9qFzJLmHxM5kpDfX1SWHqJYp8uAAmtLY6pbjDyyTdUd+TPVzJZr1z5lioZjlX9Zrtnl8ip4acZtO8Qh3kOtaGZFYo9iCex2xCVSxFuaux+RkgiTwOzIdUn8eZZDqu/eDxAgtc6bK+vAQx4zCMJT2b9rsfNa3AhDAgJs6jBYCbR7lNtMptLO7YXdqZCEh3SbmxQ8p9IDShoJhbDTaXk82FLMYMzzMRmtU5rjLIJLenimY9y244BqdREoKCakSxn4VQTYKkKI3BV19Lx4QX2v7lsLhu3ya2/29TA2njU2XAVS5nIPsIB14XtEnk24RNczvhjftO5lN1s2RBRUrJCsnur885UQNSDonM6PV88GpucJfmRx//etL4AZSxX48ykD+nW2E3b7d8BSRvtDfdnGGzOqtm83lWNNC2a0Yq3RuqQgayjAGQTDLbchi/AzNKL8ZRz0gJfC94qd+FmImADQQWEMmBqxTiEXvDALjaG7ryqiyOXUp2QsrSCViIQ7rzUO48CvGPaxHxiLKT6nv5yePU/+zYAV9bcWSecm0QlE2VpJ6Q5TdzQWLplkryi9Nt54ccHAq+qyyLXGIRcqDGmYDv/1QUq7U0TEicMdG90ArFNtMWOMUyAe/T6IubgszL7Y7++3qn02IECMidkNPCv3qkPXUF2HSLrddBDxN2x/yJsHfRtb+ov2q26rQ/4+1/AA==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17AB520325F7346CE05305991F0A0652</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17AB520325F7346CE05305991F0A0652</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_110328</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17AB520325F8346CE05305991F0A0652</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00018_ACCESS_UVTC_UserName_RequestorUserBAU_Active_RequesteeFAU_UnlockMe_Role_Retailer_200_OK_P1" searchProperties="true" id="93782770-d501-4ed9-b5b1-e30c9996e077"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="cd000cbc-98a9-4476-a421-be0401745db2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="f9b15a0c-d9dc-41db-bc3d-5c0081c5e385"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="fefcbe59-e90a-4932-9770-183b865373c5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU" id="a4b7630b-218f-4eeb-a094-c00265991d24"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="9c9e9a56-6b86-42e9-a12d-a8bdf9ab1985"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMrYxV1egilsGz4aEcJvNvKQUqQ1KbNlYMpB8/UoGHCDAsvvk6nar+/RFR33LUeAXnCbnEAsastw68Bl3Um1dS2LmhIhT7jAUAHcEdkbN/r1TyJsO2h3Rcm6nrr0UUJGQslnVK4BMvVj1ynrNrhDdMstVXC6YFgJbmnKegMu4QEzUNakt6WZZN4tjs+TYplOy83a58kfLTSHm0rc0yZvaFtSa17W5EJFjGKvVKr+y82E8MwqmaRl/9+9HeA4B0hq3m4zSQHFja4/zBDD4Ps7jMDBujQObW8KdEZ0xJJIYtrHIuVimYdYMaUM4nf3QsrNAXOaFqdhGLGQUI59+IlWfPoh5SHJNfxbGVMyDs0lYpnKswxrr2CqyH5pxCO1KRwcIY450PkfW1tcQPIiBYchNhm5d+3Fd19Kj4xgx7oVxwA/F/4YH2BL8MAKi811aW2jXOzxRqcYtYMdl2E84XcKDGtYIYeDbbgK+3lVuEINH1/eUywFdc4XO2Id3JG6q0aEz4OL/NGivORsnU+Qn0ChZ7wYmrn/z3Kf8s/zReXqtufe/FuJPsZ4C2DdOFVlrN+LRUGZDtDnR83kHJ3avahd6H6OBHRHE5p/V8TNeJXx1U3seQ2UW+MHYeh141tOy0us2UXjz258/t97cyeDxN1m5vcdpV7xXh5Nh3wvRaFL+2cbPca9IF2UaVf8ioT20Wv3AKEfT0aBb6606HjxEE9oaTyuVfs2nr/74ac3bj5WJ376fsqW3Xq5/zkjwWY3mRfP913DZbq3qWTp7+A91uzs/Sl7fAIudqMbA7eTuZJeQuExmSkOJ7qWmTqTIhwtgQmuoU4o7nETSHSWO7OFGtirNVqlgWXbHqlqlTrNrlmyzUqtZd2bzrlu725HMBsURxHbIPKpiKcrdjM1lgDhwODACsb4ME8l0XLvgsYMEyrlsKC9ByDiMQ0nPXNSInL3IE6U3q0Y8jyQLhE1R0nIPoXhkj3HTExAfcnL1gJOHgGlEQRG3mmsuB5sLWYsFWibCt/JLlGeQSGqPFcs6hWK1ZHAaRD4opEYQksSHfDSP0soYfPMt6AjzVDvsjtPbdjav43+7EkgbQpUBV7m0QLYRTjwuxV0iZxO2rP2Ed+6bCaHqYsl6ipjiDZLDX19jouYjmxGZ0Ut79GLtcGfmVx//ftK4AMo4rkcWiCzpXtjd0y0fAUkbjV03F8jKL/LJcpmkDSwWbSOW7g1VIcMsGCPAiSS2j3H4DszIvBhXvSIZ8KPgmf4QYiLmbCSQgEAOXC4Vr1gbRsDV2uDKm7K+dic5CClLJ2AtTunavlx5FOKLWxF2sLKT6oH8rMKYfHXshK+9ODJPuTUIymZKUi/Ix5m5wKF0SyX3hfG+81MOTgU/VGZFzrAIOVCviYDzf3KK1OoawjhMmHA7WqrYJ9oUp/iIwPky+uYm5fJsuaP/vt3pNB0BDHIl5DT1r95oR10BNtsj623QM3xducTXh+ga39TfNXt1Op7xxj8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB52113D1715DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB52113D1715DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB52113D1815DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB52113D1815DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_11048</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150604_110421</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150604_110421</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150604_110421</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMrYxV1egilsGz4aEcJvNvKQUqQ1KbNlYMpB8/UoGHCDAsvvk6nar+/RFR33LUeAXnCbnEAsastw68Bl3Um1dS2LmhIhT7jAUAHcEdkbN/r1TyJsO2h3Rcm6nrr0UUJGQslnVK4BMvVj1ynrNrhDdMstVXC6YFgJbmnKegMu4QEzUNakt6WZZN4tjs+TYplOy83a58kfLTSHm0rc0yZvaFtSa17W5EJFjGKvVKr+y82E8MwqmaRl/9+9HeA4B0hq3m4zSQHFja4/zBDD4Ps7jMDBujQObW8KdEZ0xJJIYtrHIuVimYdYMaUM4nf3QsrNAXOaFqdhGLGQUI59+IlWfPoh5SHJNfxbGVMyDs0lYpnKswxrr2CqyH5pxCO1KRwcIY450PkfW1tcQPIiBYchNhm5d+3Fd19Kj4xgx7oVxwA/F/4YH2BL8MAKi811aW2jXOzxRqcYtYMdl2E84XcKDGtYIYeDbbgK+3lVuEINH1/eUywFdc4XO2Id3JG6q0aEz4OL/NGivORsnU+Qn0ChZ7wYmrn/z3Kf8s/zReXqtufe/FuJPsZ4C2DdOFVlrN+LRUGZDtDnR83kHJ3avahd6H6OBHRHE5p/V8TNeJXx1U3seQ2UW+MHYeh141tOy0us2UXjz258/t97cyeDxN1m5vcdpV7xXh5Nh3wvRaFL+2cbPca9IF2UaVf8ioT20Wv3AKEfT0aBb6606HjxEE9oaTyuVfs2nr/74ac3bj5WJ376fsqW3Xq5/zkjwWY3mRfP913DZbq3qWTp7+A91uzs/Sl7fAIudqMbA7eTuZJeQuExmSkOJ7qWmTqTIhwtgQmuoU4o7nETSHSWO7OFGtirNVqlgWXbHqlqlTrNrlmyzUqtZd2bzrlu725HMBsURxHbIPKpiKcrdjM1lgDhwODACsb4ME8l0XLvgsYMEyrlsKC9ByDiMQ0nPXNSInL3IE6U3q0Y8jyQLhE1R0nIPoXhkj3HTExAfcnL1gJOHgGlEQRG3mmsuB5sLWYsFWibCt/JLlGeQSGqPFcs6hWK1ZHAaRD4opEYQksSHfDSP0soYfPMt6AjzVDvsjtPbdjav43+7EkgbQpUBV7m0QLYRTjwuxV0iZxO2rP2Ed+6bCaHqYsl6ipjiDZLDX19jouYjmxGZ0Ut79GLtcGfmVx//ftK4AMo4rkcWiCzpXtjd0y0fAUkbjV03F8jKL/LJcpmkDSwWbSOW7g1VIcMsGCPAiSS2j3H4DszIvBhXvSIZ8KPgmf4QYiLmbCSQgEAOXC4Vr1gbRsDV2uDKm7K+dic5CClLJ2AtTunavlx5FOKLWxF2sLKT6oH8rMKYfHXshK+9ODJPuTUIymZKUi/Ix5m5wKF0SyX3hfG+81MOTgU/VGZFzrAIOVCviYDzf3KK1OoawjhMmHA7WqrYJ9oUp/iIwPky+uYm5fJsuaP/vt3pNB0BDHIl5DT1r95oR10BNtsj623QM3xducTXh+ga39TfNXt1Op7xxj8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17AB52113D1715DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbc9o6EP4rjPvYMb5gY+wJzJDQnNCSywFK07x0hLyAGlsylsTt1x/JgAuE5HDOk2fXq91vL/q0VxyliRu1OYdcEEYrqzShPCq0TUPmNGKIEx5RlAKPBI4G7fte5FbtCO2PGJVup2n8CkK/4YEXmqE3Hpse+J4ZNmxsjlE4dv1agKFRV6acS+hSLhAVTcO1Hd+066btDW0/qjmR41YD23kxKiPIufKtTKq2sQO14k1jJkQWWdZyuawua1WWTy3Xth3r+b43wDNIkdG62mZUBMpbO3tcjQFDkuAqZql1ZR3ZXMU8GpApRULmsIsVvxfLtuzQUjYxJ9NPRnkW4i6dsEK8QZRRglFCNkjX5x7EjMWVdjJlORGz9N0kHFs7NmGFTex49JNhHUO70NERwpwjk8+Qs/PVhwnkQDFUvve7TePTZV0rjg5zRPmE5Sk/Fv8bHqALSFgGscn3ae2gXe7wTKVaV4CjLsWJ5GQBD3pYM4SB77oJ+HJXlaccJmTVI1wN6IprdNYhvBNxW40OmQIX/6dBB83ZOhmhREIrZyA73ewFu4/r2yDczOov1t3jizsSfzcLAIfGhaJs7VY8GcpyiLYnQIq8l3/rTTcL+iPoeJv+c//piS0W7s334U/W6w+67OYrnvHZNH7Iw/7EH9OX9OmO3qXjuxR+f7t3v3t1N/sR4nu2/Gs+lYCHuCblq+/5/ijuj2tO0KiD+/u19hkvRzN7XPs6+5k9dxMZgP9shZ9769GtcN2MfL2T5HW6SWobMf85t7gzGT3Z9evXgDxcZw3eLNM5wH+s29/5gRz/Biz2oh6Dbqdyq7qExMdkpjUkNieFaZRp8uECqDBa+pTmjkgquiNxpHq4lZ2gfe27jlPr1DuO32l/sf2aHYShc2u3b7+Et3uS2aI4gXjD6IToWJpyt2PzMUCcRhxoDLm5YFIxHTc+8NhBAlW6tK8uAaMchkzR83rtu8FSzu0w3ThrhzZEFsR8sdwYlQcmHulj3p4IyI85uXHEyX3AJCOgiVvPNVeDzYWqxRwtpEic6gJVKUhF7blm2cj1Gr7FSZoloJFaKYtlAtVslhWVsfj265oI80Lb/zIsbtu7eZ3+25dA2cREG3CdyzWoNsKZx8XeJ/Juwo5zmPDefVvGRF8sVU+RE7xFcvzrz5jo+ShnRGX062bwy9njLs0vPv72pPUBKOu0HmWgeEEOwu6fbvUIKNpo7bs5R051XpWLhSwa6Hk1K1fuLV0hy3atAWCpiG09ZK9ArdKLddErUgI/CV7qjyFKMaMDgQSkauAqhXjB2jAArteGrropq0t3kqOQqnQCVuKc7iZRK49G/OFWhCOs7ZT6SX2WLI//dOyMr4M4Kk+1NQhCp1rSL8j6nbnATLklivtYfuj8nINzwY+VZZFLLEIN1FgKeP9PRZNa00AYM0lFt2MUikOiLXCKdQbRH6M3bgouL5c78u/bnUmKEcCgVkJOCv/6jY70FaDTA7LeBT3P107wEV8fo2u9Ub/VHNTpdMZb/wA=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17AB52113D6D15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17AB52113D6D15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_110421</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17AB52113D6E15DAE05307991F0AFE9F</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00019_ACCESS_UVTC_UserName_RequestorUserBAU_Active_RequesteeSAU_UnlockMe_Role_Retailer_200_OK_P1" searchProperties="true" id="fc34469b-5d25-4a84-b5fa-975ee1a59c52"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="f380a08b-ace6-4963-8b48-2a3f87385b04"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="a8bbfe63-e156-44d5-9833-6980b206b6ab"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="cb4ce92e-bacc-46c2-97da-a6ee2e451e23"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU" id="b3a492ca-8869-4952-9016-6b89257d59d7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="477fc125-8ec9-4dce-a7e4-1ec78b3d6669"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU" id="9110bc93-3d35-47c5-9fdd-0b69621ab74b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="d30fd28f-2f95-45b3-a3b2-34c2ef7f3de0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZrU/I6EP4rTP3olCZAuXSEGQRRziuIguj4xQnpAtE2wSbl4q9/kwIVUDyc86mz283us5c82QtJwiDn1aWESDHBM8sw4NJLtFUrjrgniGTS4yQE6Snq9eudWy+XRR7ZHrEy7WbVei24BYRGqGhXiF+yC2NctMtlv2gTlBuNfOQjWilpUyljaHOpCFdVK4ewa+sjqDBArpfHXr6QdYuVFyszhEhq39oki6wNqKWsWlOlZp7jLBaL7CKfFdHEySGEnefObZ9OISRW7WKdURIoqm3sadYHCkFAs1SEzoWzZ3PhS6/PJpyoOIJNLP9YLOSgiqNtfMkmZ1Z6Fvw2H4tEbBAuOKMkYJ/E1KcDair8TD2YiIipaXg0CYyMYxuW1Ka4wM8sZx/aiY72EEaS2HJK8MbXA4whAk4h8/jQrlpnp3UtOTqICJdjEYVyX/xveIDPIRAz8G25TWsD7XSHP1SqdgHUa3MaxJLNoWuGdUYoyE03gZ7uKtOLYMyWt0zqAV1Kg87ZhXcgrqvRZBOQ6v80aKc5aydDEsRQa14PJ0VZnjfPUamTz6+Gdfzn7f694vqimgDYNU4UaWvX4sFQpkO0PvH8R/YWNy/3Tzel+8vLq1HFwe68GZ0TyC+h/yZUY/nZXTxy+aSG/mfnHE3IGLVmbajftaAYPnRuJvKx2/tsD//JqWvVfLx9Xvbf3bz/4pYfr3qi15n0B5Ob3scTp9Hze3G4eGvfE966n2Har4fkcxV8LMqdm7tuY6WvSYiH9UEwfRmpXNmFUpmgViMvnO7dtaLVNJ0d/Pu67Z3vx6M3oGormjFoNzMt3SWificzo2G+PU5MvZkhH6mAK6tmThnu8GJNd8z3dA/XMi7VL90cxvlmBWO3Wb9Cbh6VKhXcQvXWVaW1JZk1igOIDcHHzMQylLsem98B0tCTwH2I7LmINdNJ6xePTaJIps0f9CUQXMJAaHrG8+LUVXgRj2bLJc6jxUq67+9FVFlZma5Qd/wuqo8VRPukXN4j5QegbMbAMLcZbKknWypdjA8yj1WAs3OS5RBrbo8MzXq5Qtl1JAtnARioTij8OIDsbDpLSuPI9TdnEyoT7cPVILluRxM7/LetgbbxmTGQJpdL0H2EH16X3DaRowljvJvw1n099pm5WbqgKmJ0jWT/19ecmAFJh0Rn9Nrov+It7tT85OPfTzq/gHIO65EG8udsJ+z27davgOaN2rabHwRnP7LxfB4nDSwU8k6k3TumQg7KOX2gsWa21UC8A3dSL85Jz0gK/CB4qt+HGKsp7yuiINQDl0nEE/aGPkizN7T1VVmeupTshdSlU7BUP+kagd55DOJf1yLqUWOn1T39WYjI/+rYD7524ug89dqgGJ8YyTwhqyNzQYV2yzT5iWjX+U8Ofgq+r0yLnGJReqBGsYLjfzKG1aoWoVTEXLWbVqLYZdoEp1rNwPsy+uYmIfN0u2P/vt7ZLBkBCnonlCzxbx5pz1wBPtlh603QI4SNfiPsfXS1b+rvmp06Hc547S8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB52113D9015DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB52113D9015DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB52113D9115DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB52113D9115DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_110453</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150604_110558</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150604_110558</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150604_110558</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZrU/I6EP4rTP3olCZAuXSEGQRRziuIguj4xQnpAtE2wSbl4q9/kwIVUDyc86mz283us5c82QtJwiDn1aWESDHBM8sw4NJLtFUrjrgniGTS4yQE6Snq9eudWy+XRR7ZHrEy7WbVei24BYRGqGhXiF+yC2NctMtlv2gTlBuNfOQjWilpUyljaHOpCFdVK4ewa+sjqDBArpfHXr6QdYuVFyszhEhq39oki6wNqKWsWlOlZp7jLBaL7CKfFdHEySGEnefObZ9OISRW7WKdURIoqm3sadYHCkFAs1SEzoWzZ3PhS6/PJpyoOIJNLP9YLOSgiqNtfMkmZ1Z6Fvw2H4tEbBAuOKMkYJ/E1KcDair8TD2YiIipaXg0CYyMYxuW1Ka4wM8sZx/aiY72EEaS2HJK8MbXA4whAk4h8/jQrlpnp3UtOTqICJdjEYVyX/xveIDPIRAz8G25TWsD7XSHP1SqdgHUa3MaxJLNoWuGdUYoyE03gZ7uKtOLYMyWt0zqAV1Kg87ZhXcgrqvRZBOQ6v80aKc5aydDEsRQa14PJ0VZnjfPUamTz6+Gdfzn7f694vqimgDYNU4UaWvX4sFQpkO0PvH8R/YWNy/3Tzel+8vLq1HFwe68GZ0TyC+h/yZUY/nZXTxy+aSG/mfnHE3IGLVmbajftaAYPnRuJvKx2/tsD//JqWvVfLx9Xvbf3bz/4pYfr3qi15n0B5Ob3scTp9Hze3G4eGvfE966n2Har4fkcxV8LMqdm7tuY6WvSYiH9UEwfRmpXNmFUpmgViMvnO7dtaLVNJ0d/Pu67Z3vx6M3oGormjFoNzMt3SWificzo2G+PU5MvZkhH6mAK6tmThnu8GJNd8z3dA/XMi7VL90cxvlmBWO3Wb9Cbh6VKhXcQvXWVaW1JZk1igOIDcHHzMQylLsem98B0tCTwH2I7LmINdNJ6xePTaJIps0f9CUQXMJAaHrG8+LUVXgRj2bLJc6jxUq67+9FVFlZma5Qd/wuqo8VRPukXN4j5QegbMbAMLcZbKknWypdjA8yj1WAs3OS5RBrbo8MzXq5Qtl1JAtnARioTij8OIDsbDpLSuPI9TdnEyoT7cPVILluRxM7/LetgbbxmTGQJpdL0H2EH16X3DaRowljvJvw1n099pm5WbqgKmJ0jWT/19ecmAFJh0Rn9Nrov+It7tT85OPfTzq/gHIO65EG8udsJ+z27davgOaN2rabHwRnP7LxfB4nDSwU8k6k3TumQg7KOX2gsWa21UC8A3dSL85Jz0gK/CB4qt+HGKsp7yuiINQDl0nEE/aGPkizN7T1VVmeupTshdSlU7BUP+kagd55DOJf1yLqUWOn1T39WYjI/+rYD7524ug89dqgGJ8YyTwhqyNzQYV2yzT5iWjX+U8Ofgq+r0yLnGJReqBGsYLjfzKG1aoWoVTEXLWbVqLYZdoEp1rNwPsy+uYmIfN0u2P/vt7ZLBkBCnonlCzxbx5pz1wBPtlh603QI4SNfiPsfXS1b+rvmp06Hc547S8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17AB52113D9015DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbc+o2EP4rjM9jxtgCDMETmCFcctxASIGkaV4yQl6DgpHAkrnk11cy4AABSvvk2fVq99uLPu2dwNMw59aEgEhSzjKraciEm2grRhwxl2NBhcvwFIQriduvddpuLmu7eHfEyHiNivGBS8XCEA/BLGGUNwu4UDSHOYTMYFiGEsk5NiZDZSpEDB4TEjNZMXI2cky7aNqFge24eeQ6xWwOOe9G5hUioXwrk6xtbEGtRMUYSzlzLWu5XGaX+SyPRlbOtpH11mn3yRim2KjebTJKAkXVrT3J+kAgDEmW8Kl1Zx3Y3PnC7dMRwzKOYBvLPxfLtuyypWx8QUe/jPQs+B4LeCLWMeOMEhzSL6zr0wE55n6mFo54ROV4ejYJZGvHJqyISVCB/TKsQ2hXOjpAGAlsijFGW189CCACRiDz0vMqxq/rupYcHUSYiYBHU3Eo/jc8wBYQ8hn4ptiltYV2vcMTlareAXE9RsJY0AU86WGdYQJi200g17vKPEcQ0FWbCjWgK6HRWfvwjsRNNRp0BEL+nwbtNWfj5BWHMVRrC+TfeIHfHNKHxmjGlzcPi6cOad3MO5UEwL5xokhbuxGPhjIdos2JVnDb/bwP838v+/Zy9Rrkg8Z49ShHteko7A6Gnhg5nVbbma0mtPjY+l3qr8sBsh0POaJcuG28YsQWra6/lFh+1Zuf3eHT8G3d/LNUXwdv68Ho3pv0Q3v97jyhXjE3aP5udWhxvZy/e390yta87Zejdju+lf3necfxyy3ZebynbDL5azBvkxdSrL8+DBr0hXOb1CppOnv4D3W7O9+Ph59A5E7UY+A1Mi3VJSwvk5nWUN8MElN3pslHSGDSqOpTmjvcWNEd9V3Vw42MSrV7R12VfKNZRE6j1rSdvF0ql1HLrrWa5daOZDYojiDWOQuojqUpdzM2lwGSqSuA+RCZCx4rphPGBY8NLHHGYz11CTgTMOCKnlHZjkQ0X9h4XMBoNhmSFf/idAxrI/PEZZd1o1ogITok5dsDUu4BoTMKmrn1YAs12UKqYszxIpYhyi5wlkGsuD3SNOvmCreOJeh0FoKGak25H4eQnY1nSWkssfnmTExEou01B8l1O5vY8b9dDZSNT7WB0Lncg+ojnHhdCrtEziaM0H7CO/e12Kf6ZqmCyoiSDZLDX99zogckHRKV0Ue9/4F2uFPzq4//PGldAGUd1yMN5C/oXtjd261eAcUb1V035xhl59l4sYiTBhYKeStS7i1dIcvOWX0gsWK29YBPgFmpF+uqZyQFfhQ81R9CjOWY9RW/wFQNXCYRr9gb+iD03uCpq7K6dik5CKlKJ2ElT+nqodp5NOKLaxFxibZT6mf1WfLI/+7YCV97cVSeam2QlI20pJ+Q9Zm5IFy5pYr8eLTv/JSDU8EPlWmRUyxSDdQwlnD+T0azWsXAhPCYSa9hJIp9pk1wyvUM3G+jH24SMk+3O/rv651JkxEgoHZCQRP/+pF29RVgoz223gY9Tdhl+xJhH6Kr/lD/1OzV6XjGq/8A</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17AB52113DE615DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17AB52113DE615DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_11052</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17AB52113DE715DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOY8g3sgF2BKsIlSwUIAcJk8pIScoOV2DJYMpd8/UgGHCDAsvvk6nar+/RFR33HUBjk3SpjEHMS0dwqDChzU21ZSWLqRogR5lIUAnM5dgfVTtvNa4aLdkeUXKteVt5LAONxYWyrpjd2VMsxQEWWbapFcOzJxDExyo+FKWMJtCjjiPKykjdMWzVuVcMaGrZbKLiGpRmO8abkRhAz4VuYaIayBbViZcXnfObq+nK51JYFLYqnet4wTP210x5gH0KkVO42GaWB4srWHmseYAgCrOEo1O/0A5s7j7kDMqWIJzFsY3nnYhm64ejCxmNk+kvJzoLXopMoFWuIRpRgFJAvJOvTAe5HXq4aTKOYcD88m4RpSMcqrLCKTYv+UvRDaFc6OkAYM6QyH5lbX32YQAwUQ+6l3yorv67rWnp0GCPKJlEcskPxv+EBuoAgmoGnsl1aW2jXOzxRqcodYLdFcZAwsoCuHNYZwsC23QR8vatcL4YJWbUJEwO6YhKdvg/vSNxUo06mwPj/adBeczZORihIoHL/OEKj0u0Exbcho9a8l4SjgR2VHhqtcgpg3zhVZK3diEdDmQ3R5gQJfs/WN822/1W/fcizm/nrPyNWfzHXeDi0PNMLS/OnxeuTjVm7X2w0X9+oVVs1u3jw4njTTxZO1sXG8+P687kaGtih5M9iVG/9IX6xgLrtdbvvPTSeSXfqo2H+2et/rRx73YhRr1od1Za9YH7fKQ2qvzsPTx/tVTda3Dj2/a1Dkri3fJs5/mNi9uvt6efrx2fno1HO0tnDf6jb3flBMv4AzHeiHINWPdcUXUL8MplJDfHUSWrqziT5MA6UKxV5SnKHmwi6I54reriRzWL13s6bZqFhWKZdrzYMu2AUHcdsGtVmw2nuSGaD4ghiLaITImNJyt2MzWWAOHQZUA9idRElgumYcsFjHXGUa9G+uAQRZTCMBD2bFiHJmBg8oR+Oafso4RFYjBHB392IP9GnuDrhEB+ScumAlPuAyYyAZG452ExMNuOiGHO0SHhgagukUUgEt8eSZt28VbJ1RsJZABKqHkZeEoA282dpaXS2+eZVhFmq7TeG6XU7m9jxv10NhI1HpAGTudyD6CP8eF3yrr1L5GzCprmf8M59NfGIvFmioDwmeIPk8Nf3nMgByYZEZPReG7ybO9yZ+dXHf57UL4DSj+uRBfIWZC/s7u0Wr4Dgjcqum3NkanMtWSyStIGWVdBj4V6XFdKNvD4AnAhmWw+jT6B65kW/6hnJgB8Fz/SHEBPu0wFHHEIxcLlUvGJvGACTe0NLXJXVtUvJQUhROg4rfkpXC8TOIxFfXIuwi6WdUPfEZxnF3nfHTvjaiyPyFGsDJ3QqJfmErM/MBY6EWyLIL4r3nZ9ycCr4oTIrcoaFi4EaJxzO/8lJVisrCOMoobxVV1LFPtOmOPl6Bu630Q83KZln2x359/VOJekIYBA7ISOpf/lIu/IK0OkeW2+DniTsumNcIuxDdJUf6p+avTodz3jlLw==</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>17AB52113E0415DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:17AB52113E0415DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20150604_110558</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>17AB52113E0515DAE05307991F0AFE9F</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e34c814a-8ac5-424b-a19a-7d3453e3b9c7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1de1e00d-487c-492d-b21b-5e895e1ee18e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00020_ACCESS_UVTC_UserName_RequestorUserBAU_Active_RequesteeOtherBAU_UnlockMe_Role_Retailer_200_OK_P1" searchProperties="true" id="baa7774d-4cf4-4c30-8893-7bbf75c197f3"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="79b70d3f-b198-4e41-9590-8e721f8f7fb9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="9b34bb64-4e30-4c17-9709-41fb4353eee8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="5d489b3f-6862-4177-900f-a9141eda9297"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU" id="2ca63f88-53f8-49c5-869a-6f7864be4719"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Second Adult BAU" id="2a286091-fff0-4cd5-9a21-eaaf77cc34a2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Second Adult BAU" id="4de7c797-df2f-4ce6-8d60-df91fda488a3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="a538b9bd-7fdc-44be-8af4-9c3c990bc21d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynmcMr5BAFegikBInIEkBYQQXlJCboNmbNlYMrevX8mAAwRYdp9c3W51n77oqO8YCnzTrjMGMSchzS0DnzI71VaVJKZ2iBhhNkUBMJtju1fvtG0zr9tod0TJOc2q8lUGb+wZY6xi3bDUQhljtWIVyyrcGtgseciyLBCmjCXgUMYR5VXF1I2iqt+qeqGvF23Lss1y3ry9HSm5AcRM+BYmeV3ZglqyqjLlPLI1bbFY5BdWPownmqnrhjbstHt4CgFSanebjNJAcW1rj/MuYPB9nMdhoN1pBzZ3LrN7ZEIRT2LYxnLPxdI1vaIJG5eRyY2SnQXXoV6Yig1EQ0ow8skayfp0gE9DN1f3J2FM+DQ4m4ShS8cqLEUNjQK9UbRDaFc6OkAYM6SyKTK2vrrgQQwUQ+6961SVm+u6lh7tx4gyL4wDdij+NzxA5+CHEbgq26W1hXa9wxOVqt0Bth2K/YSRObzIYY0QBrbtJuDrXeXeYvDIsk2YGNAlk+i0fXhH4qYaTTIBxv9Pg/aas3EyQH4CtWHLKnfcmdvH0ePjaNEdO5/twd/J+/AxrKYA9o1TRdbajXg0lNkQbU7MaRC5w3Xr8cX/iNn8vt9ylmbh15N3i399kFWDrPzBH6sAq2IMSacwncwc0wFvua7r7RLzC+vuc33trBZP2sgsFgcur5fa0eztk5cWNE6en/zhuvG8BOfBMgaTYbc0WvP3zvR3h2pPI7JqDV/fXqCYfKx003wqtPT7j+izonlsMProD17589Q1x/eTHl1Z/qSapbOH/1C3u/O9ZPwHMN+JcgycZq4luoT4ZTKTGuKqXmpqR5J8GAfKlZo8JbnDTgTdEdcWPdzIRql+XzQNw3owy0axWX/Qi5ZeqlSMll5vPVRaO5LZoDiC2AipR2QsSbmbsbkMEAc2A+pCrM7DRDAdUy54bCKOcg7tiksQUgb9UNDzkq4Qpi4OqGmyKEqmKxaNw0Ws5F5C/kpf47rHIT6k5PIBJXcBk4iA5G051kzMNeOiFDM0T7hv5OcoTyERzB5LkrXNQrmoMRJEPkigWhC6iQ/5aBqlhdHY5muqCLNU233op5ftbFrH/3YVEDYukQZM5nIPootw4m0xdomcTdgw9hPeua8nLpH3SpSTxwRvkBz++p4SOR7ZiIiMvhq9L2OHOzO/+vjPk9oFUNpxPbJA7pzshd293OINEKxR23Vzhoz8LJ/M50nawELB0mLhXpMV0nRT6wFOBK+t+uFfoFrmRbvqEcmAHwXP9IcQEz6lPY44BGLgcql4xdbQAya3BkdclOW1K8lBSFE6Dkt+StfwxcYjEV9cirCNpZ1Qv4nPIozd746d8LUXR+QplgZO6ERK8gFZnZkLHAq3RFBfGO87P+XgVPBDZVbkDAsXAzVOOJz/k5OcVlUQxmFCudNUUsU+z6Y4+SoC+9voh5uUyrPdjvz7cqeSdASw2COFfepfPtG2vAJ0ssfV26Bn6Lp0ia4P0dV+qH9q9up0POO1fwA=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB52113E2715DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB52113E2715DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB52113E2815DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB52113E2815DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_110649</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150604_110726</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150604_110726</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150604_110726</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynmcMr5BAFegikBInIEkBYQQXlJCboNmbNlYMrevX8mAAwRYdp9c3W51n77oqO8YCnzTrjMGMSchzS0DnzI71VaVJKZ2iBhhNkUBMJtju1fvtG0zr9tod0TJOc2q8lUGb+wZY6xi3bDUQhljtWIVyyrcGtgseciyLBCmjCXgUMYR5VXF1I2iqt+qeqGvF23Lss1y3ry9HSm5AcRM+BYmeV3ZglqyqjLlPLI1bbFY5BdWPownmqnrhjbstHt4CgFSanebjNJAcW1rj/MuYPB9nMdhoN1pBzZ3LrN7ZEIRT2LYxnLPxdI1vaIJG5eRyY2SnQXXoV6Yig1EQ0ow8skayfp0gE9DN1f3J2FM+DQ4m4ShS8cqLEUNjQK9UbRDaFc6OkAYM6SyKTK2vrrgQQwUQ+6961SVm+u6lh7tx4gyL4wDdij+NzxA5+CHEbgq26W1hXa9wxOVqt0Bth2K/YSRObzIYY0QBrbtJuDrXeXeYvDIsk2YGNAlk+i0fXhH4qYaTTIBxv9Pg/aas3EyQH4CtWHLKnfcmdvH0ePjaNEdO5/twd/J+/AxrKYA9o1TRdbajXg0lNkQbU7MaRC5w3Xr8cX/iNn8vt9ylmbh15N3i399kFWDrPzBH6sAq2IMSacwncwc0wFvua7r7RLzC+vuc33trBZP2sgsFgcur5fa0eztk5cWNE6en/zhuvG8BOfBMgaTYbc0WvP3zvR3h2pPI7JqDV/fXqCYfKx003wqtPT7j+izonlsMProD17589Q1x/eTHl1Z/qSapbOH/1C3u/O9ZPwHMN+JcgycZq4luoT4ZTKTGuKqXmpqR5J8GAfKlZo8JbnDTgTdEdcWPdzIRql+XzQNw3owy0axWX/Qi5ZeqlSMll5vPVRaO5LZoDiC2AipR2QsSbmbsbkMEAc2A+pCrM7DRDAdUy54bCKOcg7tiksQUgb9UNDzkq4Qpi4OqGmyKEqmKxaNw0Ws5F5C/kpf47rHIT6k5PIBJXcBk4iA5G051kzMNeOiFDM0T7hv5OcoTyERzB5LkrXNQrmoMRJEPkigWhC6iQ/5aBqlhdHY5muqCLNU233op5ftbFrH/3YVEDYukQZM5nIPootw4m0xdomcTdgw9hPeua8nLpH3SpSTxwRvkBz++p4SOR7ZiIiMvhq9L2OHOzO/+vjPk9oFUNpxPbJA7pzshd293OINEKxR23Vzhoz8LJ/M50nawELB0mLhXpMV0nRT6wFOBK+t+uFfoFrmRbvqEcmAHwXP9IcQEz6lPY44BGLgcql4xdbQAya3BkdclOW1K8lBSFE6Dkt+StfwxcYjEV9cirCNpZ1Qv4nPIozd746d8LUXR+QplgZO6ERK8gFZnZkLHAq3RFBfGO87P+XgVPBDZVbkDAsXAzVOOJz/k5OcVlUQxmFCudNUUsU+z6Y4+SoC+9voh5uUyrPdjvz7cqeSdASw2COFfepfPtG2vAJ0ssfV26Bn6Lp0ia4P0dV+qH9q9up0POO1fwA=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17AB52113E2715DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZtc6I6FP4rDvtxBwERUaY6Y1Fb2tpt1e5u+2UnDQdNhcSSoLS//iaorFrb672fmBxOnvOclzzJGUdJXPO6nEMqCKOVPIkp9wprW8tS6jHECfcoSoB7Anvj7vDGq1VND223aJWg19b+hJbbCuumpUPNbuj1lh3pLSdq6g3UtCO36bQARdKV8wwCygWioq3VTMvRzYZu1iem49m2Z7eqjWbjSav8hJRLbOlSNbUNqZy3tZkQC88wVqtVdWVXWTo1aqZpGb+HN2M8gwRpnbN1RkWgtLPxx9UQMMQxrmKWGGfGns9ZyL0xmVIkshQ2scLPYpmG2TKkT8jJ9JtW7oUwoBErlj6ijBKMYvKOVH2GIGYsrHTjKUuJmCWfJmGZCliHHOvYqtNvmrFP7USgPYYpRzqfIWuDNYIIUqAYKg+joK19O61rxdZJiiiPWJrw/eV/4wN0CTFbQKjzbVobaqcDHqlU5wywF1AcZ5ws4VYN6wJh4JtuAj4dqnKXQkTyG8LlgOZcsTN26R0s19XokSlw8X8atNOcNchPFGfQIe9T5CPz2n2+fng07Th9HM6/PwY/n++n7YLArnNhKFu7Xh4MZTlE6x25cTGB2YUfZenz/OX8HHUZ4bf9Vr2B8pc5ukomg6wf1lbCnv76fRkt++4rc53ryfyN5vH9w3y0EDRo3j5d3A1pPppYbtwz7lzR4N/vzxcPj5d23Pw1gXg8vFq9Yj95eru8ToNhYPpz8b2xvLhIA+46g1Hu+1cs9K/GvaeVGKx6znx8xR/GPf+evZO7zL9zJrxdprPDf9+2PfPj7PkFsNgu1RgEvcpAdgmJr8VMWUioR4Wrt1DiwwVQoXXULqUdXibljoSe7OF6bbndc6dmWXbf7VlOr9s3Hdt0Wy1rYHYH/dZgKzJrFgcUfUYjomIpyV2PzdcEceJxoCGk+pJlUum49gViDwlUCehIHgJGOUyYlGfLzhZNkjkuq4fcmsdplM/rlmvVQavcMvGD/ki7kYB0X5Sbe6I8AkwWBJRyq8HmcrK5kMV4RctMxFZ1iaoUMqntqZJZr1ZvOgYnySIGRdVIWJjFUF3MFkVpDL7+1nSEeWEd9SfFcfs0scN/2xpIn5AoB65yOQfZRzhyu9S2iXyasGXtJryF72YhUSdLFlSkBK+Z7P/6OydqQMohkRn98cd/rC3v0v3k7R93Gl+QMg7rUQYKl2Qn7PbulreA1I3OtpuvyKq+VrPlMisaWK/bRirhDVUhw6wZY8CZVLa3CZsDNUoU46RrpCR+ELy071PMxIyOBRKQyIGrFMsT3g1j4OrdEMijkp/6KNkLKUsnIBfHbH4s3zyK8ZfPIuxh5SfNd/KzYmn4t2NHsHbiyDzls0EQOlUrdYW8fTIXmElYIsWPpbvgxwCOBd83lkUuuQg5UM+ZgM//VJSqtTWEMcuoCHpaYdhV2oKneFuA99fpA0wh5uXrjvz7804nxQhgKVrSv8BXl7SnjgCd7qj1Juhxwa65Xwn2PrvOB/NHy06dDme88w8=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17AB52113E7D15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17AB52113E7D15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_110657</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17AB52113E7E15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMr5wdwWqCIGMZ0jIYiaV5GVKyG1QYkuOJXHJ149kwAOEZNl9cnW71X36oqO+5CiJXa/LOWSCMFpaJTHlXq5tGzKjHkOccI+iBLgnsBd0b4eeW7Y9tDtilPzrtvG7Vq9PqwhCs1GZ1s3qtBGZU6iEZg3sELtNqNlNV5lyLsGnXCAq2oZrOzXTrpt2dWLXvErVc6rleqX5bJQeIOPKtzIp28YW1Iq3jbkQqWdZy+WyvKyUWTazXNt2rMfbYYDnkCCjc7nJKA+Udbb2uBwChjjGZcwS69I6sLkMuReQGUVCZrCNFX4Wy7bslqVsQk5m34ziLIQ+jVgu9hBllGAUk3ek63MLYs7CUjeesYyIefJpEo6tHZuwwiZ2qvSbYR1CO9PRAcKMI5PPkbP1NYYIMqAYSr/Gftv4dl7X8qOTDFEesSzhh+J/wwN0ATFLVUC+S2sL7XyHJyrVuQTs+RTHkpMF3OlhTREGvu0m4PNdle4ziMhqSLga0BXX6Kx9eEfiphrXZAZc/J8G7TVn4+QBxRI69TV/bv26oCM6mCx7dTJIk5fAHdg3Pm/nAPaNc0XR2o14NJTFEG1OrPsouQpT36/cr5tkur4In8Tr4PbnCA3f4qe1O+yucChE1H+8ebgPn+zF3Syq1S+swO3ScT8Q3aX8/toVrzN8L1/rM3kR3SWPy/cXnzTDAGF+E46+0/SHk2aDkRzLYXDz494f3WQT9nQxnty1EvmL/xz1Zo/2rf18lQzJQ/wip9RGK9xkV8//RJPIh+93veF7tV2ks4f/ULe784GcvgAWO1GPgX9dGqguIfE1mWkNCc0oN/VSTT5cABVGR5/S3OFJRXck9FQPN7LT6F7VXMep9FtXTu2627drFbvRajkDuzvotwY7ktmgOILYYzQiOpam3M3YfA0QJx4HGkJmLphUTMeNLzxeI4FKPh2rS8AohwlT9MxbMcsazcYSVd/qbv2tIVkUr6tro3THxIiOsm4kIDuk5OYBJY8Bk5SA5m091lzNNReqFG9oIUXslBeoTEEqZs80yXputVmzOEnSGDRQK2GhjKGcztO8MBbffF1TjUuuHfcn+WX7NK3jf7sKKJuQaAOuc7kC1UU48bbYu0Q+Tdhx9hPeue/KkOh7pcopMoI3SA5//Z0SPR7FiKiMfveC384Od2F+9vGPJ60vQFnH9SgChQuyF3b3cqs3QLFGZ9fNN+SU38pysZB5A6vVipUp95aukGW7VgBYKl5bT9grUKvwYp31iBTAj4IX+kOIUsxpIJCARA1cKRfP2BoC4Hpr8NVFWZ27khyEVKUTsBKndL1YbTwa8ZdLEfawtlPqe/VZsiz827ETvvbiqDzV0iAInWlJPyDrT+YCM+WWKOpj2b7zUw5OBT9UFkUusAg1UFMp4PM/Jc1pbQNhzCQV/rWRK/Z5Nscp1il4f40+uMmpvNjtyL8vdybJRwCD2gg5yf3rJ9rTV4DO9rh6G/Q0XbuNr+j6EF3ng/qjZq9OxzPe+QM=</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>17AB52113E9B15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:17AB52113E9B15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20150604_110726</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>17AB52113E9C15DAE05307991F0AFE9F</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e34c814a-8ac5-424b-a19a-7d3453e3b9c7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1de1e00d-487c-492d-b21b-5e895e1ee18e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00021_ACCESS_UVTC_UserName_RequestorUserSAU_Active_RequesteeSelf_UnlockMe_Role_Retailer_200_OK_P1" searchProperties="true" id="b74ed67f-b203-494a-a87e-ff47428a9054"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="4c1d91b2-3d53-4d55-9f25-b9149d9ed995"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="253b15dd-c995-4c9f-81e2-4625b75c9557"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="516214b5-4006-4e1e-af82-c32a238f4b67"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU" id="d279c31d-2d7f-45f9-9535-e40c103b893b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="1d7f1f34-11cf-4ccd-b3e9-cf21637ecda5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdU+o6FP0rTM/jmdKWFoGOMAOCWr8F1HN9cWKyC8GSQJOW6q8/SYEKKF7ufepkd2fttT+ykmOBplHFbwsBsaSclbJpxISfW5tGEjOfI0GFz9AUhC+xP2hfX/mVsu2j9RajFHSbxku9CjWnZldMjJBrenWom3XbIyauHiHHrmDHxRXlKkQCARMSMdk0KrZTNe0j0/aGdtV3Pd+rlo88+9koPUIsFLZyKdvGilQmmsZYyplvWYvForxwyzweWRXbdqw/11cDPIYpMlrHy4zyQHFr5Y/LBDBEES5jPrWOrS2fYyL8AR0xJJMYVrHIvli2ZTcs5UMEHf0yir1AAhbyfHmCGGcUo4h+IF2fa5BjTkrtaMRjKsfTvUk4tgY2IcMmdjz2y7C2qR0ItMUwFsgUY+SssPoQQgwMQ+mhHzSNX4d1Ld86jBETIY+nYnv53/gASyHiMyCmWKe1onY44DeVah0D9gOGo0TQFG70sM4QBrHqJuDDoUp3MYQ0u6JCDWgmNDtrk97OclmNLh2BkP+nQRvNWYI8oiiB1mIyuO32ZBi+frgfz84g4Cd9t+OOSfLWzAlsOueGorXL5c5QFkO03HE/ZNGE/2b8PB0MH7LuxcAidx+T2Yxk2YP32svoUNWgfZlOTufjRU20/7hJpz5Hrw+92n14O2SPT51ur34rnz3R6WU30f3s7v784vpsbl8sbrKnxxC9nT3ZtR7Pgt/0fHJJJ88n6DLIppN/oHN0fnF2XQm75Eo69kXfPVJYjRsap5ReX/bT9vNHEGThE0kj99xrFuls8N+2rc/8IHmdAJbrpR6DoFs6VV1C8mcx0xZKzDB39WdafIQEJo2W3qW1w0+U3FHiqx4u106t3alWHMftdU6darfds6uuXWs0nFO7fdprnK5FZslih+IJZyHVsbTkLsfmZ4J46gtgBGIz5YlSOmH8gNhFEpUC1leHgDMBQ67kOaw14jogNrHfiSOJPSfuokFENDZKN1zestu4HUqItzW5vqXJfcB0RkELt55roQZbSFWLOUoTGTnlFJUZJEraY62yfsWrVy1Bp7MINFNrykkSQXk2nuWVscTyWzERFrm13xvmp21vXrv/1iVQPoRqB6Fz6YBqI3xzubjrRPYm7DibCa/h2wmh+mCpesqY4iWT7V+fY6Lno5gRldHLyeDFWfMu3A/e/nWn9QMpa7ceRSCS0o2w66tbXQJKNlrrbs6RU56XkzRN8gZ6nmvFCt7SFbLsijUAnChhex/yN2BWgWIddIsUxHeCF/Ztiokcs4FEEqZq4Er58oBnwwCEfjYE6qRkh75JtkKq0knI5He2k0g9eTTjH19F2MfaT5nv1GfBY/LZsW+wNuKoPNWrQVI20it9g7zvmQvMFSxV2sfjTfDvAL4Lvm0silxwkWqgXhMJ+/+UtKg1DYQxT5gMukZu2BTanKd8n4H/6fQFJtfy4nFH//11Z9J8BDCoJ6GgOb6+o319BNhoQ6xXQffode8nvd5m1/pi/mrZqNPujLf+Ag==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB52113EBE15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB52113EBE15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB52113EBF15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB52113EBF15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_110753</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150604_110812</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150604_110812</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150604_110812</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdU+o6FP0rTM/jmdKWFoGOMAOCWr8F1HN9cWKyC8GSQJOW6q8/SYEKKF7ufepkd2fttT+ykmOBplHFbwsBsaSclbJpxISfW5tGEjOfI0GFz9AUhC+xP2hfX/mVsu2j9RajFHSbxku9CjWnZldMjJBrenWom3XbIyauHiHHrmDHxRXlKkQCARMSMdk0KrZTNe0j0/aGdtV3Pd+rlo88+9koPUIsFLZyKdvGilQmmsZYyplvWYvForxwyzweWRXbdqw/11cDPIYpMlrHy4zyQHFr5Y/LBDBEES5jPrWOrS2fYyL8AR0xJJMYVrHIvli2ZTcs5UMEHf0yir1AAhbyfHmCGGcUo4h+IF2fa5BjTkrtaMRjKsfTvUk4tgY2IcMmdjz2y7C2qR0ItMUwFsgUY+SssPoQQgwMQ+mhHzSNX4d1Ld86jBETIY+nYnv53/gASyHiMyCmWKe1onY44DeVah0D9gOGo0TQFG70sM4QBrHqJuDDoUp3MYQ0u6JCDWgmNDtrk97OclmNLh2BkP+nQRvNWYI8oiiB1mIyuO32ZBi+frgfz84g4Cd9t+OOSfLWzAlsOueGorXL5c5QFkO03HE/ZNGE/2b8PB0MH7LuxcAidx+T2Yxk2YP32svoUNWgfZlOTufjRU20/7hJpz5Hrw+92n14O2SPT51ur34rnz3R6WU30f3s7v784vpsbl8sbrKnxxC9nT3ZtR7Pgt/0fHJJJ88n6DLIppN/oHN0fnF2XQm75Eo69kXfPVJYjRsap5ReX/bT9vNHEGThE0kj99xrFuls8N+2rc/8IHmdAJbrpR6DoFs6VV1C8mcx0xZKzDB39WdafIQEJo2W3qW1w0+U3FHiqx4u106t3alWHMftdU6darfds6uuXWs0nFO7fdprnK5FZslih+IJZyHVsbTkLsfmZ4J46gtgBGIz5YlSOmH8gNhFEpUC1leHgDMBQ67kOaw14jogNrHfiSOJPSfuokFENDZKN1zestu4HUqItzW5vqXJfcB0RkELt55roQZbSFWLOUoTGTnlFJUZJEraY62yfsWrVy1Bp7MINFNrykkSQXk2nuWVscTyWzERFrm13xvmp21vXrv/1iVQPoRqB6Fz6YBqI3xzubjrRPYm7DibCa/h2wmh+mCpesqY4iWT7V+fY6Lno5gRldHLyeDFWfMu3A/e/nWn9QMpa7ceRSCS0o2w66tbXQJKNlrrbs6RU56XkzRN8gZ6nmvFCt7SFbLsijUAnChhex/yN2BWgWIddIsUxHeCF/Ztiokcs4FEEqZq4Er58oBnwwCEfjYE6qRkh75JtkKq0knI5He2k0g9eTTjH19F2MfaT5nv1GfBY/LZsW+wNuKoPNWrQVI20it9g7zvmQvMFSxV2sfjTfDvAL4Lvm0silxwkWqgXhMJ+/+UtKg1DYQxT5gMukZu2BTanKd8n4H/6fQFJtfy4nFH//11Z9J8BDCoJ6GgOb6+o319BNhoQ6xXQffode8nvd5m1/pi/mrZqNPujLf+Ag==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17AB52113EBE15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VyvNIGVmAWVyBKgdIwi2SyQSyvqSE3GCBLTuWzJKvH8mAA2S53Pvk6nar+/Sioz4TJAzKjisEJJJFvLAKAy6cTNsy0oQ7ERFMOJyEIBxJnaF7PXDKJcshuyNGod9tGa+4RsrjiVU267VKxazWcNUc15qWWSZW1bYwVv9tZSpECn0uJOGyZZQtbJtWzbSqI8t2KrZj2aWaXXsxCg+QCOVbmZQsYwtqJVqGL2XsILRcLkvLSilKpqhsWRg9XQ+G1IeQGO2zTUZZoKS9taclDygEAS3RKERn6MDmzBPOkE05kWkC21jed7EsZDWRsvEEm/4y8rPg9fkkysQO4RFnlATsnej6XIP0I6/gBtMoYdIPv00CW9qxCStqUlzlvwx0CO1ERwcIE0FM4RO89XUHE0iAUyjc3/Vbxq/TupYdHSWEi0mUhOJQ/G94gC8giGLwTLFLawvtdIdfVKp9BtTpcxqkgi3gRg9rTCiIbTeBnu6qcJvAhK0GTKgBXQmNDu3DOxI31eiyKQj5fxq015yNkwcSpNCGJvfqlXT8Mrs9T+axNXu5pWkxeZrN5q0MwL5xpshbuxGPhjIfos2J/pKs6SBxO4LHq0D26msPTdIrMnt4Se0HT8w6RRRT38e3t5fu/B431+hpHLnLzrB30xtdk8fn4eP0pfYO7sqvUO8yfEwXxWKR1xpsIR8eR94b6y1q/XXkXr1Dc3r/h3r+Za9SZGNJRwm7Gj3y5+vm0o6Hf/p2vdFbV9cDfLUsLt7+WeKnZ/R+XpfoZkR6g+tWns4e/kPd7s4P0/EMqNyJegz63cKF6hKRP5OZ1jDPnGSmTqzJR0jg0mjrU5o7nFTRHfMc1cONjOvuuV3GuHKBq9juuj3Lrlj1ZhNfWO5Fr3mxI5kNiiOInYhPmI6lKXczNj8DpKEjgHuQmIsoVUwnjB88dokkhT6/U5cg4gJGkabnMAZSWb7HjZWNsT/nzJs3fJAeMwo3kfzNfyfuREJySMqNA1K+A8piBpq59WALNdlCqmK8kUUqA1xakBKHVHF7omnWKVcbNhIsjAPQUFEYeWkApdiPs9IgsfmWTUJFpr3rjbLr9m1ix/92NVA2HtMGQudyDqqP8Ol1qTr2LpFvE8Z4P+Gdezf1mL5ZqqAyYXSD5PDXx5zoAcmHRGX02hm+4h3u3Pzk459Poh9AoeN65IG8BdsLu3u71SugeKO96+YbwaW3UrpYpFkDq9UKSpR7pCuErDIaAk0Vs61H0Rw4yr2gk56RHPhR8Fx/CDGVPh9KIiFUA1fIxBP2hiEIvTf01VVZnbqUHIRUpZOwkl/pOoHaeTTiH9ci6lBtp9S36rOMEu+jY1/42ouj8lRrg2R8qiX9hKy/mQsaKbdMkV+U7Dv/ysFXwQ+VeZFzLFIN1DiV8P2fgma1lkEojVIu+10jU+wzbYZTrmNwPow+ucnIPN/u2L+vdybLRoCC2gkFy/zrR9rRV4BP99h6G/RLwu6d934i7EN07U/qz5q9Oh3PePsv</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17AB52113F1415DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17AB52113F1415DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_110812</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17AB52113F1515DAE05307991F0AFE9F</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00022_ACCESS_UVTC_UserName_RequestorUserSAU_Active_RequesteeFAU_UnlockMe_Role_Retailer_200_OK_P1" searchProperties="true" id="0249c1b5-8671-49f5-9adc-7f236a9004aa"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="583ae9e2-053e-4bb5-ad95-0f3e8030f906"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="cc214fb8-3cfe-4625-b59c-61e1523b5b00"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="ad398e5a-31e1-434d-8787-302ed4566117"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU" id="a49625ec-5d55-4b2e-8e01-a36a5f9ceb01"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="6a06fc56-912b-4674-b87b-9b3b201144cd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VyvM4Zbxggu0KVDksN54sTFiyvaSE3IASWwJLBpKvH8mAB0jI5d4n6Har+/Sioz7nKIltP+AcUkEYLa2SmHI/19a1LKU+Q5xwn6IEuC+w3w9urn27bPpoe0Qrha269jJ2XacGI9A9xx3pzpldkf/GIz2Cygg5Vcv2rDNpynkGIeUCUVHXbNOq6uaZbjoDs+pXqr5jlj3PfNZK95By6VualE1tA2rF69pUiJlvGMvlsryslFk6MWzTtIzHm+s+nkKCtMb5OqM8UNrY2ONyBBjiGJcxS4xzY8/mPOJ+n0woElkKm1jRsVimYXqGtIk4mfzQirMQhXTMcrGJKKMEo5h8IFWfGxBTFpWCeMJSIqbJ0SQsUznWYYV1bDn0h2bsQzvR0R7ClCOdT5G18dWDMaRAMZSGvbCu/Tita/nRQYooH7M04fvif8MDdAExm0Gk821aG2inO/yiUo1zwH5IcZxxsoBbNawzhIFvugn4dFel3ymMyeqacDmgK67QGbvwDsR1NVpkAlz8nwbtNGft5B7FGTQqiXHXcYJVm2epO6O/vYDVSDyOhg/Leg5g1zhXFK1diwdDWQzR+kTwhq56r62HZqvf7dnEWdXuL7zHh1ELoSuDIdd8cy0PBT1v2PzFLs/C9yS7CK/M+fDhmaZdb54Npv1ETG/sh177+Z/0efI4uh3jX2PSxh8uvxvEP+/Jz0EbOmZ2V32dJdxp34VPNTxtDedPg+5Nrx27qw/LuJxPwsrwo3bhvj14XXa5DJJbMgyvWiMvbvbub7tnT/UinR38+7rtne9no1fAYiuqMQhbpY7sEhLfk5nSkEgf56b+TJEPF0CF1lCnFHf4maQ7Evmyh2vZqgUXVduyKp2Ka1VbQdusVsya51kdM+i0vc6WZNYoDiA2GR0TFUtR7npsvgeIE58DjSDVFyyTTMe1bzy2kEClkPbkJWCUw4BJerYsu/Y6XWQee1+6Il5xZ7V8M5cjVyvdMtGl3TQYC0j3Odnd4+QeYDIjoIhbzTWXg82FrMUcLTIRW+UFKlPIJLWnimV923GrBifJLAaF1EhYlMVQnk1neWUMvv61dYR5ru21B/ltO5rX4bdtCaRNRJQBV7lcgGwjfPG4VLaJHE3YsnYT3roPsoioiyXrKVKC10j2P/0dEzUfxYzIjF6a/Rdri7swP/n455PGN6CMw3oUgaIF2Qm7fbrlIyBpo7Ht5hxZ5Xk5WyyyvIGOUzFS6d5QFTJM2+gDziSxvQ/YG1Cj8GKc9IoUwA+CF/p9iJmY0r5AAhI5cKVcPGFt6ANXa0Mob8rq1J1kL6QsnYCV+ErXjOXKoxB/uxVhHys7qf4tf5Ysjf527AtfO3FknnJrEIROlKRekPcjc4GZdEsk97F01/lXDr4Kvq8silxgEXKgRpmA419KitTqGsKYZVSELS1X7BJtjlO8z8D/a/TJTc7lxXJH/n2700k+AhjkSshJ7l+90b66AnSyQ9aboEf4uvYdX++ja3xSf9bs1Olwxht/AA==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB52113F3715DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB52113F3715DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB52113F3815DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB52113F3815DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_110856</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150604_110913</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150604_110913</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150604_110913</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VyvM4Zbxggu0KVDksN54sTFiyvaSE3IASWwJLBpKvH8mAB0jI5d4n6Har+/Sioz7nKIltP+AcUkEYLa2SmHI/19a1LKU+Q5xwn6IEuC+w3w9urn27bPpoe0Qrha269jJ2XacGI9A9xx3pzpldkf/GIz2Cygg5Vcv2rDNpynkGIeUCUVHXbNOq6uaZbjoDs+pXqr5jlj3PfNZK95By6VualE1tA2rF69pUiJlvGMvlsryslFk6MWzTtIzHm+s+nkKCtMb5OqM8UNrY2ONyBBjiGJcxS4xzY8/mPOJ+n0woElkKm1jRsVimYXqGtIk4mfzQirMQhXTMcrGJKKMEo5h8IFWfGxBTFpWCeMJSIqbJ0SQsUznWYYV1bDn0h2bsQzvR0R7ClCOdT5G18dWDMaRAMZSGvbCu/Tita/nRQYooH7M04fvif8MDdAExm0Gk821aG2inO/yiUo1zwH5IcZxxsoBbNawzhIFvugn4dFel3ymMyeqacDmgK67QGbvwDsR1NVpkAlz8nwbtNGft5B7FGTQqiXHXcYJVm2epO6O/vYDVSDyOhg/Leg5g1zhXFK1diwdDWQzR+kTwhq56r62HZqvf7dnEWdXuL7zHh1ELoSuDIdd8cy0PBT1v2PzFLs/C9yS7CK/M+fDhmaZdb54Npv1ETG/sh177+Z/0efI4uh3jX2PSxh8uvxvEP+/Jz0EbOmZ2V32dJdxp34VPNTxtDedPg+5Nrx27qw/LuJxPwsrwo3bhvj14XXa5DJJbMgyvWiMvbvbub7tnT/UinR38+7rtne9no1fAYiuqMQhbpY7sEhLfk5nSkEgf56b+TJEPF0CF1lCnFHf4maQ7Evmyh2vZqgUXVduyKp2Ka1VbQdusVsya51kdM+i0vc6WZNYoDiA2GR0TFUtR7npsvgeIE58DjSDVFyyTTMe1bzy2kEClkPbkJWCUw4BJerYsu/Y6XWQee1+6Il5xZ7V8M5cjVyvdMtGl3TQYC0j3Odnd4+QeYDIjoIhbzTWXg82FrMUcLTIRW+UFKlPIJLWnimV923GrBifJLAaF1EhYlMVQnk1neWUMvv61dYR5ru21B/ltO5rX4bdtCaRNRJQBV7lcgGwjfPG4VLaJHE3YsnYT3roPsoioiyXrKVKC10j2P/0dEzUfxYzIjF6a/Rdri7swP/n455PGN6CMw3oUgaIF2Qm7fbrlIyBpo7Ht5hxZ5Xk5WyyyvIGOUzFS6d5QFTJM2+gDziSxvQ/YG1Cj8GKc9IoUwA+CF/p9iJmY0r5AAhI5cKVcPGFt6ANXa0Mob8rq1J1kL6QsnYCV+ErXjOXKoxB/uxVhHys7qf4tf5Ysjf527AtfO3FknnJrEIROlKRekPcjc4GZdEsk97F01/lXDr4Kvq8silxgEXKgRpmA419KitTqGsKYZVSELS1X7BJtjlO8z8D/a/TJTc7lxXJH/n2700k+AhjkSshJ7l+90b66AnSyQ9aboEf4uvYdX++ja3xSf9bs1Olwxht/AA==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17AB52113F3715DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMrINOLErUOWBMMOESwYYwuQlJeQGRGwZLJlLvn4lAw4QyLL75Op2q/v0RUd9z3EYWK7HOcSCRiy3DgPG3VRb1pKYuRHmlLsMh8BdQdye12q6Vt5w8f6IlmvUytprCbBjW9jXC07R0YsOLukOsQo6NpS66Nz6o5I05TyBBuMCM1HWLMMs6YatG8W+UXILJbdk5+XxFy03gJhL39Ikb2g7UGte1qZCzF2EVqtVflXIR/EEWYZhomGr2SNTCLFWud9mlAaKKzt7kveBQBCQPIlCdI+ObO597vbohGGRxLCL5V+KZSDDQdLG53TyTcvOgt9g4ygVq5hFjBIc0Hes6tMCMY38nBdMopiKaXgxCdNQjnVYE52YRfZNQ8fQrnR0hDDmWOdTbO58dWEMMTACuT/dRln7dl3X0qP9GDM+juKQH4v/DQ+wJQTRHHyd79PaQbve4ZlKVe6BuA1GgoTTJbTVsM4xAb7rJpDrXeWeYhjTdZNyOaBrrtChQ3gn4rYaNToBLv5Pgw6as3UywEEClV+FP1N7EfvOYmq8Oc/Dn6PFzVPN9H6sG+UUwKFxqshauxVPhjIbou2JkR3Tv5v1S70dLKxpr/38t/UbW8XEQG2EbiCOzOpg1bPtO8ua4M7cLNJN52Xw+GLUPIsWb95fbh9qSbfXHpbE0Fr5j4UgbHnkqf7YX+EODNuP9nxUmAjDW3Weh8ayGgxhyKfj6pwPhr/WaHjz8PZuhJ79Y5ZEySNd+bOJ2W/6iT1rtn42O93ZG4nq3UHrhv4uZ+kc4D/W7e98LxnNgIi9qMagUcvVZZew+JrMlIb6+jg1deeKfLgAJrSKOqW4w00k3VHflT3cyuat971kmWahflczSzXvwSgVjFvHMeuGV39w6nuS2aI4gViN2JiqWIpyt2PzNUASuhyYD7G+jBLJdFz7wmMNC5xrsK68BBHj0I8kPZsjf2ls7Bn3Z9Q032x76i/G1mYZOFquHYkO68TeWEB8TMp3R6TcBULnFBRzq8HmcrK5kMVY4GUiAjO/xHkGieT2WNGsaxXvSojTcB6AgorCyE8CyM+n87Q0iG+/lo4JT7Xdh3563S4mdvpvXwNp41NlwFUu30H2Ec68LsV9IhcTNs3DhPfuvcSn6mbJgoqYki2S418fc6IGJBsSmdFrtfdq7nFn5lcf/3wSfQEKndYjC+Qv6UHY/dstXwHJG5V9NxfYzC/yyXKZpA0sFgsolu6RqhAyLNQDkkhm2/SjN2Ao84KuekYy4CfBM/0xxERMWU9gAaEcuFwqXrE39ICrvaEhr8r62qXkKKQsnYC1OKerBnLnUYi/XIuIS5SdVD/JzyqK/Y+OnfF1EEfmKdcGQdlESeoJ2VyYCxJJt1SSXxQfOj/n4FzwY2VW5AyLkAM1SgRc/pNTrFbWMCFRwkSjpqWKQ6ZNcYrNHNwPo09uUjLPtjv67+udTtMRICB3Qk5T/+qRdtUVYJMDtt4FPU/YhduvCPsYXeWT+rPmoE6nM175Bw==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17AB52113F8D15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17AB52113F8D15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_110913</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17AB52113F8E15DAE05307991F0AFE9F</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00023_ACCESS_UVTC_UserName_RequestorUserSAU_Active_RequesteeBAU_UnlockMe_Role_Retailer_200_OK_P1" searchProperties="true" id="8115b82c-0d0c-4085-9cfb-eac0317f09f1"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="210a77a3-9dab-43cb-92d5-362067217c66"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="a8fcbba0-24ca-4927-ad50-002be66ad432"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="c0e57549-8ea3-426d-aad0-c90bb45325cf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU" id="36b0c876-1e60-4e86-a25c-8e13a82ebe60"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="f3bfcdeb-c8bc-4696-9668-bdc4d83f401b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU" id="65967938-00f1-40f3-9a1b-4374c4b6c1ea"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="d89a16be-b000-49f3-8327-027eebd01b2b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+o4EP4rKH2sgmNIOBAVJApli7a05XJK25fKOIaYk9hgO0D769cOkAIFlt2naCbjmW8u/jw3EsVRwa9LSYSinOVWccSkn2qrViKYz5Gk0mcoJtJX2O/XOw9+Ie/4aHvEyrWbVeuDlEfYgx62vcBFthuMKjYaE88OPI+gkVfGTuBpUykT0mZSIaaqVsGBnu2UbMcdOJ5fLPnQyxdd593KvRAhtW9tknesDaiVrFqhUjMfgOVymV8W81xMQMFxIHjtPPRxSGJk1W7WGaWBRG1jj/MBwSSKcB7zGNyAPZubQPp9OmFIJYJsYgWnYjnAqQBtE0g6ubKysyRoszFPxQZinFGMIvqFTH06RIU8yNWjCRdUhfHJJKBjHNtkhW0MXXZlgX1oFzraQygksmWI4MZXj4yJIAyT3O9eu2pdXda19OhAICbHXMRyX/xveAhbkIjPSGDLbVobaJc7PFKp2g3BfpvhKJF0QR7NsM4QJnLTTYIvd5V7FmRMVw9U6gFdSYMO7MI7ENfVaNIJker/NGinOWsnLyhKSI3/5YbzqAnDUddt/y2XQ1zqTiOY1Lvlagpg1zhVZK1diwdDmQ3R+kQjeVs2650JqNz3OjBetJu0/DYePk9B96k+aL3QighevmIOVC+Uw9fK121pVE/uwuh9+dL46o9QOL/rvDj3kSdQ5RF8Tp6vR+LBQ+xh2C29z8fXS/rV6t5Wpk2vKZ+LiBbCxC1/9Z2hGA94qZG8vnM1Gg4GFTZwH1sq9O4XHgWN1u/QeX+7ZlGl9DTE5W4v+FPN0tnBv6/b3vl+MpoSrLaiGYN2M9fSXULqPJkZDQ3scWrqzwz5SEWYsmrmlOEOP9F0RwNf93Atw1/1W68AYbF1C6HXrN85XtH5VanAllNv3VVaW5JZoziA2OBsTE0sQ7nrsTkPEMe+JCwgwl7wRDOdtM54bCKFcm3W05eAM0kGXNMzHJcDCKOpOxWrOUxY/Fmaj2bTcglbuUeuntiTqI8VEfukXN4j5R7BdEaJYW4z2FJPtlS6GHO0SFQE8wuUZyTR3C4MzfoFt+wBSeNZRAxUEPMgiUh+Fs7S0gC5/hZshGWq7d0N0ut2MrHDf9saaJuAGgNpcrkluo/kyOvibBM5mTCEuwlv3deTgJqbpQuqBMVrJPu/vufEDEg2JDqjj0b/A25xZ+YXH/95EpwBBQ7rkQUKFnQn7Pbt1q+A5o3atptzBPPzfLJYJGkDXbcIhHYPTIWAUwB9ghPNbJ8D/ocwkHkBFz0jGfCD4Jl+H2KiQtZXSJFYD1wuFS/YG/pEmr2hra/K6tKlZC+kLp0iK3VM14j0zmMQn12LsI+NnVY/68+Si+C7Y0d87cTReeq1QVE2MZJ5Qj5PzAXm2i3V5MfFrvNjDo4F31dmRc6wKD1Qo0SR039yhtWqFsKYJ0y1m1aq2GXaFKf6nBH/2+iHm5TMs+2O/vt6Z9N0BDDRO6GkqX/zSPvmCrDJDltvgp4gbOccYe+jq/1Q/9Ts1Olwxmv/AA==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB52113FB015DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB52113FB015DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB52113FB115DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB52113FB115DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_110930</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150604_111015</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150604_111015</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150604_111015</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+o4EP4rKH2sgmNIOBAVJApli7a05XJK25fKOIaYk9hgO0D769cOkAIFlt2naCbjmW8u/jw3EsVRwa9LSYSinOVWccSkn2qrViKYz5Gk0mcoJtJX2O/XOw9+Ie/4aHvEyrWbVeuDlEfYgx62vcBFthuMKjYaE88OPI+gkVfGTuBpUykT0mZSIaaqVsGBnu2UbMcdOJ5fLPnQyxdd593KvRAhtW9tknesDaiVrFqhUjMfgOVymV8W81xMQMFxIHjtPPRxSGJk1W7WGaWBRG1jj/MBwSSKcB7zGNyAPZubQPp9OmFIJYJsYgWnYjnAqQBtE0g6ubKysyRoszFPxQZinFGMIvqFTH06RIU8yNWjCRdUhfHJJKBjHNtkhW0MXXZlgX1oFzraQygksmWI4MZXj4yJIAyT3O9eu2pdXda19OhAICbHXMRyX/xveAhbkIjPSGDLbVobaJc7PFKp2g3BfpvhKJF0QR7NsM4QJnLTTYIvd5V7FmRMVw9U6gFdSYMO7MI7ENfVaNIJker/NGinOWsnLyhKSI3/5YbzqAnDUddt/y2XQ1zqTiOY1Lvlagpg1zhVZK1diwdDmQ3R+kQjeVs2650JqNz3OjBetJu0/DYePk9B96k+aL3QighevmIOVC+Uw9fK121pVE/uwuh9+dL46o9QOL/rvDj3kSdQ5RF8Tp6vR+LBQ+xh2C29z8fXS/rV6t5Wpk2vKZ+LiBbCxC1/9Z2hGA94qZG8vnM1Gg4GFTZwH1sq9O4XHgWN1u/QeX+7ZlGl9DTE5W4v+FPN0tnBv6/b3vl+MpoSrLaiGYN2M9fSXULqPJkZDQ3scWrqzwz5SEWYsmrmlOEOP9F0RwNf93Atw1/1W68AYbF1C6HXrN85XtH5VanAllNv3VVaW5JZoziA2OBsTE0sQ7nrsTkPEMe+JCwgwl7wRDOdtM54bCKFcm3W05eAM0kGXNMzHJcDCKOpOxWrOUxY/Fmaj2bTcglbuUeuntiTqI8VEfukXN4j5R7BdEaJYW4z2FJPtlS6GHO0SFQE8wuUZyTR3C4MzfoFt+wBSeNZRAxUEPMgiUh+Fs7S0gC5/hZshGWq7d0N0ut2MrHDf9saaJuAGgNpcrkluo/kyOvibBM5mTCEuwlv3deTgJqbpQuqBMVrJPu/vufEDEg2JDqjj0b/A25xZ+YXH/95EpwBBQ7rkQUKFnQn7Pbt1q+A5o3atptzBPPzfLJYJGkDXbcIhHYPTIWAUwB9ghPNbJ8D/ocwkHkBFz0jGfCD4Jl+H2KiQtZXSJFYD1wuFS/YG/pEmr2hra/K6tKlZC+kLp0iK3VM14j0zmMQn12LsI+NnVY/68+Si+C7Y0d87cTReeq1QVE2MZJ5Qj5PzAXm2i3V5MfFrvNjDo4F31dmRc6wKD1Qo0SR039yhtWqFsKYJ0y1m1aq2GXaFKf6nBH/2+iHm5TMs+2O/vt6Z9N0BDDRO6GkqX/zSPvmCrDJDltvgp4gbOccYe+jq/1Q/9Ts1Olwxmv/AA==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17AB52113FB015DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZXzBBHAFqgiXjSthJkAmt5eUIjdGiS05kmxgv34lAw4QkmX3ydXtVvfpi476XKAkdv2uEMAlYbSyTGIq/ELbNjJOfYYEET5FCQhfYn/aHV37btX20faIUQn6beMZe2eO7eKWObM91/TOUMtsOjY23RA5Icw8wGegTIXIIKBCIirbhms7ddM+M23v1q77tTPfs6s1z30yKnfAhfKtTKq2sQG1FG1jLmXqW9ZisagualXGI8u1bcd6GF1P8RwSZHTO1xkVgXhnY4+rIWCIY1zFLLHOrT2b81D4UxJRJDMOm1jhV7Fsy25ZyiYUJPphlGchDOiMFWIPUUYJRjH5G+n6jEDOWVjpxhHjRM6TL5NwbO3YhCU2sePRH4a1D+1ER3sIuUCmmCNn42sCM+BAMVT+TIK28eO0rhVHbzmiYsZ4IvbF/4YHaA4xSyE0xTatDbTTHR6pVOccsB9QHGeC5PBLD2uKMIhNNwGf7qpyw2FGltdEqAFdCo3O2oV3IK6r0ScRCPl/GrTTnLWTOxRn0BkPsqv7x36et/5cp4sLfkfvwcbeXd6L2gWAXeNCUbZ2LR4MZTlE6xPygjZu6T2pj16flgELg+7QjYer+XTiJOmYPjTy3stVb3j9fiNRfbWMa1ELPwbkMqcTDpeL6OGqd/kzf3qYdwfTfvcprdVkd5K8jsf9cW8epMk8iYbU+cvypryBpo+8cTeORrXgsmk5hPUvZ1HuZHgw+PkQJHjsNcj9Q3PAEjloTvgoSgav3oriTAyXrG+3y3R28O/rtnd+mr28ApZbUY9B0K8MVZeQ/J7MtIaE5qww9VNNPkIClUZHn9Lc4WeK7kjoqx6uZafRvai7juPZ9plT73cHdr1mN1otZ2h3h4PWcEsyaxQHEHuMzoiOpSl3PTbfA8SJL4CGwM2cZYrphPGNxz6SqBLQiboEjAq4ZYqeeeuNzaTnxm9s5SzemgsiwnQma8Ko/GLyN/3NuzMJfJ+Tm3ucPAFMUgKauPVcCzXYQqpavKM8k7FTzVGVQqaonWuW9V2vWbcESdIYNFIrYWEWQzWdp0VlLLH+uibCotBOBrfFbfsyr8N/2xIom5BoA6FzuQDVRjjyuNS2iXyZsOPsJrx1381Coi+WqqfkBK+R7P/6GBM9H+WMqIyee9NnZ4u7ND/5+OeT1jegrMN6lIHCnOyE3T7d6hFQtNHZdvMdOdX3apbnWdFAz6tZXLm3dIUs27WmgDNFbKtb9gbUKr1YJ70iJfCD4KV+H2Im53QqkYREDVylEE9YG6Yg9NoQqJuyPHUn2QupSidhKY/perFaeTTib7ci7GNtp9Q36rNgPPzo2BFfO3FUnmprkIRGWtIvyOqLucBMuSWK+xjfdX7MwbHg+8qyyCUWqQbqJZPw9Z+KJrW2gTBmGZVB3ygUu0Rb4JSrFPwPo09uCi4vlzvy79udSYoRwGqRVPaFf/1G+/oK0GiHrDdBj/F1bXhhf8fX++g6n9SfNTt1Opzxzj8=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17AB5211400615DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17AB5211400615DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_110948</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17AB5211400715DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VynlMGS+YC7gCVSQErueSEJYsw0tKyG1QYkuOJbN9/UgGHCAkw8yTS+3W6dOLjnTFURTabpNzSARhtLCMQsrdzFrX0oS6DHHCXYoi4K7A7rB513Xtoumi3Rat4LXq2msFmxYKSoFuTSagOyXf0lFgV/XapFbxMbJqTuBLV85T8CgXiIq6ZptWWTd/6aYzMstu6ZdbrhVtszbWCk+QcIktXYqmtiW15HVtJkTsGsZisSguSkWWTA3bNC3j5a47xDOIkNa42mSUBUoaW39c9AFDGOIiZpFxZRz4XPncHZIpRSJNYBvL/y6WaZg1Q/r4nEwvtHwv+B4NWLa8QZRRglFI1kjV5w7EjPmFZjhlCRGz6NskLFMB67DEOrYceqEZh9TOBDpgmHCk8xmytlgDCCABiqHwOPDq2sV5Xcu2jhJEecCSiB8u/xsfoHMIWQy+zndpbamdD3iiUo0rwK5HcZhyMod7NawxwsC33QR8PlThIYGALLuEywFdcsXO2Kd3tNxUo0WmwMX/adBeczYgTyhMoTGZhRMMz8bso4NW08t+zRyRv60/Boqn9YzAvnNmyFu7WR4NZT5Emx0pES/puvt7ab7FDz30WI77nbSLSqzlrFeXfe6tPWfQj8315XB200FP9+NgvJ4E5LHXHjCojsYVn5LnWqc/N0z6wGyvVCmtFs8T5oybvnczT//creyRv+xXepHXdxL80L19NheT5fBjCfFs3Ln8a9aLHhivTJ5+P42a5ctqZ/GeVsuRtZokw/5L63n+8tIcC3tRz9PZ439o2535YTp5Ayx2SzUGXqvQll1C4mcxUxbi60Hm6sZKfLgAKrSG2qW0w02l3BHflT3crK1K87psW5Zj2o5VbjVvzXLJrNRqVttstm9r7Z3IbFgcUbxhNCAqlpLczdj8TBBHLgfqQ6LPWSqVjms/ILaQQAWPDuQhYJTDiEl5Di07iqLgvRZb8yWphn6yWr1JmMI9Ez3aS5qBgORQkasHijwATGICSrbVVHM51lzISnygeSpCqzhHRQqpFPZEaaxrO9WywUkUh6B4GhHz0xCK8SzO6mLwzdfWEeaZdXA7ys7at1kd/9sVQPr4RDlwlcs1yCbCiavF2SXybcKWtZ/wDr6Z+kQdK1lNkRC8YXL463NI1HTkEyIzer0Zvlo73rn72du/7jR+IGUc1yMP5M/JXtjdxS2vACkajV03P5BV/Cim83maNdBxSkYi4Q1VIcO0jSHgVMraasTegRo5inHWHZITPwqe2w8ppmJGhwIJiOTAFbLlGY+GIXD1aPDkOVme+yI5CClLJ2ApTtluQvngUYx/fBNhFys/aX6QnwVLPhM/hbUXR+Yp3wyC0Klaqftj9c1cYCZhiVQ+luyDnwI4FfzQmBc55yLkQE1SAd//KShJq2sIY5ZS4bW0zLAvsxlPsYrB/XT6ApMpef60I//+ttNJNgIY5IOQkwxf3dCuOgJ0uifV26Cn1LrUvjZ/UutDdo0v5q+WvTodz3jjHw==</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>17AB5211402415DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:17AB5211402415DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20150604_111015</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>17AB5211402515DAE05307991F0AFE9F</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e34c814a-8ac5-424b-a19a-7d3453e3b9c7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1de1e00d-487c-492d-b21b-5e895e1ee18e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00024_ACCESS_UVTC_UserName_RequestorUserSAU_Active_RequesteeOtherSAU_UnlockMe_Role_Retailer_200_OK_P1" searchProperties="true" id="d8be362a-a940-4e25-b06e-61f2082537c8"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="92f8b04e-b44e-4d7a-a736-b9b19d14cd35"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="4edb426a-f72d-4dfe-946d-24498660cf42"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="9ddd59c8-9517-483e-963a-0c22bb65f599"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU" id="a8eb08bf-7180-4fbf-9e32-3aac6ecef01b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Second Adult SAU" id="55c4ad80-68b2-4494-8ebf-0f264f5352cc"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Second Adult SAU" id="9a71e0b7-61fd-4213-99da-be3112b7ff67"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="fb56d684-5164-4f77-91ec-eb4c8158d261"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZrU/I6EP4rTP1cegEEOsIMgmgVxZeio3xxYrKFHNu0Nim3X/8mBSogcDjnU2e3m91nL3myVxyFge20OIdE0IgV5mHAuJNpG1qaMCdCnHKHoRC4I7DjtR57jl00HbQ5ohXcTkP7MEs1s+LXiW4D8vXyZ62u10vlql6uE2JWcckHi0hTzlNwGReIiYZmm1ZFNy91szw0K06p6tjl4mWlMtIKr5Bw6VuaFE1tDWrOG9pEiNgxjNlsVpyVilEyNmzTtIy3x56HJxAirXm1yigLlDTX9rhIAEMQ4CKOQuPK2LG5Itzx6JghkSawjkWOxTINs25IG8Lp+ELLzwJxmR9lYhuxiFGMArpEqj6PICYRKbSCcZRQMQmPJmGZyrEOc6xjq8wuNGMX2pmOdhAmHOl8gqy1rwH4kADDUHgZuA3t4ryuZUeHCWLcj5KQ74r/DQ+wKQRRDETnm7TW0M53eKBSzSvAjstwkHI6hSc1rDHCwNfdBHy+q8JzAj6d9yiXAzrnCp2xDW9PXFWjQ8fAxf9p0FZzVk5eUZBCUzxPW8DSGHW7S2wPwbttLYzPy16vHzUyANvGmSJv7UrcG8p8iFYnXheLec807+/RcnRXfkALZrQXZfIwZLfW02u/H3z+uQvwyKzfEv/9zZsno4FrzqL64GtyK+fwHR5G1m23FvSrQ4/3XffBurz/s5y2mWWx0OCdVNaGtL7Zi1f128PJNenYt+4I7GWrhu/54N1tz/xHwHfsbuGFNw8LCF8IndVr98F0+RbTr5dHsWSk1PnqvTfydLbw7+o2d95LP/8BLDaiGgO3U+jKLiFxmsyUhhLdz0ydWJEPF8CE1lSnFHc4qaQ7ShzZw5VsVVvXFduyyma5ZlU6rRuzUjKr9brVNVvdm3p3QzIrFHsQ2xHzqYqlKHc1NqcB4tDhwAgk+jRKJdNx7YTHDhKo4LKBvAQR4zCMJD3P7Oo0rFEb1fkingEsCYqDWrLUCk+R6LN+0vIFJLuUXNuh5AFgGlNQvK3Gmsu55kKW4htNUxFYxSkqMkglsyeKZOW5WsXgNIwDUECNMCJpAMV4EmeFMfjqa+sI80w7uBlml+1oWvv/NhWQNoQqA65yuQbZRTjwtlibRI4mbFnbCW/ct1JC1b2S5RQJxSsku79+pkSNRz4iMqOPtvdhbXDn5mcf/33SOAHK2K9HHohM6VbYzcst3wDJGs1NN7+RVfwuptNpmjWwXC4ZiXRvqAoZpm14gFPJa4th9AXMyL0YZz0iOfC94Ll+F2IqJswTSEAoB66QiWdsDR5wtTW48qLMz11JdkLK0gmYi0O6diA3HoX45FKEHazspPpZfmZR8pP4IV9bcWSecmkQlI2VpB6QxZG5wJF0SyX1Rcm280MODgXfVeZFzrEIOVCfqYDjfwqK0xoawjhKmXA7WqbY5tkMp1jE4PwY/XKTUXm+29F/X+50mo0ABrkRcpr5V0+0o64AG29x9TroEbqunqLrXXTNX+rfmq067c948y8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB5211404715DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB5211404715DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB5211404815DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB5211404815DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_111045</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150604_111122</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150604_111122</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150604_111122</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZrU/I6EP4rTP1cegEEOsIMgmgVxZeio3xxYrKFHNu0Nim3X/8mBSogcDjnU2e3m91nL3myVxyFge20OIdE0IgV5mHAuJNpG1qaMCdCnHKHoRC4I7DjtR57jl00HbQ5ohXcTkP7MEs1s+LXiW4D8vXyZ62u10vlql6uE2JWcckHi0hTzlNwGReIiYZmm1ZFNy91szw0K06p6tjl4mWlMtIKr5Bw6VuaFE1tDWrOG9pEiNgxjNlsVpyVilEyNmzTtIy3x56HJxAirXm1yigLlDTX9rhIAEMQ4CKOQuPK2LG5Itzx6JghkSawjkWOxTINs25IG8Lp+ELLzwJxmR9lYhuxiFGMArpEqj6PICYRKbSCcZRQMQmPJmGZyrEOc6xjq8wuNGMX2pmOdhAmHOl8gqy1rwH4kADDUHgZuA3t4ryuZUeHCWLcj5KQ74r/DQ+wKQRRDETnm7TW0M53eKBSzSvAjstwkHI6hSc1rDHCwNfdBHy+q8JzAj6d9yiXAzrnCp2xDW9PXFWjQ8fAxf9p0FZzVk5eUZBCUzxPW8DSGHW7S2wPwbttLYzPy16vHzUyANvGmSJv7UrcG8p8iFYnXheLec807+/RcnRXfkALZrQXZfIwZLfW02u/H3z+uQvwyKzfEv/9zZsno4FrzqL64GtyK+fwHR5G1m23FvSrQ4/3XffBurz/s5y2mWWx0OCdVNaGtL7Zi1f128PJNenYt+4I7GWrhu/54N1tz/xHwHfsbuGFNw8LCF8IndVr98F0+RbTr5dHsWSk1PnqvTfydLbw7+o2d95LP/8BLDaiGgO3U+jKLiFxmsyUhhLdz0ydWJEPF8CE1lSnFHc4qaQ7ShzZw5VsVVvXFduyyma5ZlU6rRuzUjKr9brVNVvdm3p3QzIrFHsQ2xHzqYqlKHc1NqcB4tDhwAgk+jRKJdNx7YTHDhKo4LKBvAQR4zCMJD3P7Oo0rFEb1fkingEsCYqDWrLUCk+R6LN+0vIFJLuUXNuh5AFgGlNQvK3Gmsu55kKW4htNUxFYxSkqMkglsyeKZOW5WsXgNIwDUECNMCJpAMV4EmeFMfjqa+sI80w7uBlml+1oWvv/NhWQNoQqA65yuQbZRTjwtlibRI4mbFnbCW/ct1JC1b2S5RQJxSsku79+pkSNRz4iMqOPtvdhbXDn5mcf/33SOAHK2K9HHohM6VbYzcst3wDJGs1NN7+RVfwuptNpmjWwXC4ZiXRvqAoZpm14gFPJa4th9AXMyL0YZz0iOfC94Ll+F2IqJswTSEAoB66QiWdsDR5wtTW48qLMz11JdkLK0gmYi0O6diA3HoX45FKEHazspPpZfmZR8pP4IV9bcWSecmkQlI2VpB6QxZG5wJF0SyX1Rcm280MODgXfVeZFzrEIOVCfqYDjfwqK0xoawjhKmXA7WqbY5tkMp1jE4PwY/XKTUXm+29F/X+50mo0ABrkRcpr5V0+0o64AG29x9TroEbqunqLrXXTNX+rfmq067c948y8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17AB5211404715DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZtc6o6EP4rDv14BgOIR2WqM1qltWrbo1497ZdOGlbMKQRKgi/99SdBpWptr/d+YnbZ7D77kid7yXEYWE6Tc0gEjVhhFQaMO5m2rqUJcyLMKXcYDoE7gjij5qDvWEXDwbsjWqHbrmvPtQqUcYUYuvFCZrpNcEmv2vZMr9ZwyazZZZtUbWnKeQpdxgVmoq5ZhlnWjZ+6YY+NslOqOLZVtOzKk1aYQMKlb2lSNLQtqBWva3MhYgeh5XJZXJaKUeIjyzBM9HvQH5E5hFhrXG4yygIlja09KXpAIAhIkUQhukQHNpced0bUZ1ikCWxjeV/FMpBRQ9LG49S/0PKz4HXZLMrEK8wiRgkO6DtW9RmAmEdeoRn4UULFPPwyCdNQjnVYEZ2YNrvQ0CG0Mx0dIEw41vkcm1tfQ5hBAoxA4Z9ht65dnNe17Og4wYzPoiTkh+J/wwNsAUEUg6fzXVpbaOc7PFGpxiUQp8tIkHK6gDs1rDEmwLfdBHK+q8JDAjO66lMuB3TFFTq0D+9I3FSjTX3g4v80aK85GycTHKTQmJnDl6WFZutqp0YS4y1cv7R6b8213f5VzwDsG2eKvLUb8Wgo8yHanHBpy5wG17/d+z727kps+WjcrYQP7qTXCXuT6eR19OT2b38sq9WbwC9Xb6uvPuonnQGqvLz2p/3e9L7TMVvjKz9yhy3XHfQmV+XQvGaPPevJWvzyV9a893Br4scbIx7TyWAxWLhuG7e6d0MCNJ5OK8v3juFW0e01emfvw+vITsbWqBtN/eqP8XWM3e5kfEPSn4N6ns4e/kPd7s6P0pc/QMROVGPQbRdc2SUsviczpaGePstMnViRDxfAhNZQpxR3OKmkO+o5socb2aw0W2XLNG2j1jbL7WbHKJeMSq1mukbT7dTcHclsUBxBvIrYjKpYinI3Y/M9QBI6HJgHib6IUsl0XPvGYxsLXOiyobwEEeMwjiQ9m2X2yoK38I8tbwmISphyeWK9irXCXSTu2X3SnAlIDjm5esDJQyA0pqCIW801l4PNhazFG16kIjCLC1xkkEpqTxTLOpZdLSNOwzgAhRSFkZcGUIzncVYZxDdfS8eEZ9phZ5zdti/zOv63K4G08agy4CqXFsg2wonHpbRL5MuETXM/4Z37ZupRdbFkPUVCyQbJ4a+PMVHzkc+IzOj5avRs7nDn5mcf/3wSfQMKHdcjD+Qt6F7Y3dMtHwFJG41dN9+wWXwrpotFmjXQtksoke6RqhAyLDQCkkpiW4+jV2Ao94LOekVy4EfBc/0hxFTM2UhgAaEcuEImnrE2jICrtaErb8rq3J3kIKQsnYCVOKW7CuTKoxB/uxURhyg7qX6Qn2WUeB8dO+FrL47MU24NgjJfSeoFWX8xFySSbqnkvijZd37Kwangh8q8yDkWIQfqJRXw9Z+CIrW6hgmJUia6bS1T7BNthlOsY3A+jD65ybg8X+7ov293Os1GgIBcCTnN/Ks32lFXgPl7ZL0Nepqv7cp3fH2IrvFJ/VmzV6fjGW/8BQ==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17AB5211409D15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17AB5211409D15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_111053</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17AB5211409E15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZtc6o6EP4rDudjBwHFKkx1BrXt2Dd71NPT+qUTwypRCEiCor/+JqhUrfZ67ydml83usy95sjcMBX7JdhiDmJOQFtLAp8zOtHUliakdIkaYTVEAzObY7jvPT3apqNtod0QpdNp15bNsWaBj5KoGukaqOXJrKipXXNW1qla1XBnha9MQpowl0KGMI8rrSkk3Kqp+rermQK/Y5ZqtW8Va2RgqhTeImfAtTIq6sgWVsrricR7ZmrZcLovLcjGMJ1pJ1w3t/fmpjz0IkNK42WSUBYobW3tcdAGD7+MiDgPtRjuwuXGZ3ScTingSwzaWey6WrumWJmxcRia/lPwsuB06DjOxhWhICUY+WSNZn2fgXugWHH8SxoR7wdkkDF06ViHFKjZM+kvRDqFd6OgAYcyQyjxkbH31YAwxUAyFP71OXfl1Wdeyo4MYUTYO44Adiv8ND9AF+GEErsp2aW2hXe7wRKUaN4DtDsV+wsgCXuSwRggD23YT8OWuCq8xjEn6RJgY0JRJdNo+vCNxU402mQDj/6dBe83ZOHlDfgKN4Tq6G3f9WbdfM83m8K/nXJmpt6zNOx/1DMC+cabIW7sRj4YyH6LNCYiiyisarIHU7p1WOTVK1y9Oa4gmeDodLd8+rM7quR8MWXOtl5vRU8cdtPmH+dpFa/f+2vjb+t1GaIoC713/eLBm3emIRP2VFyU4jBPjylkPUuQvgtSH98fHRxe9l6wu1/44w3Rg9vCsl64Wi4dKs+3cj/tP5Nni9G0YuK/+Szc23h7eJ95v6vgGfrmaX93W83T28B/qdne+n4ymgPlOlGPQaRfuRJcQ/5nMpIa46jgztSNJPowD5UpDnpLcYSeC7ohrix5uZKPqNCslwzD1ZtOotJ1bvVLWq5Zl3OnO3a11tyOZDYojiK2QjomMJSl3MzY/A8SBzYC6EKuLMBFMx5QfPLYRR4UO7YlLEFIGg1DQ8whmU0LXM9MiwEajlKTenJY9QckvIe/SbuyMOcSHlFw7oOQeYBIRkLwtx5qJuWZclGKOFgn3jeICFSkkgtljSbJ2yaxVNEaCyAcJVAtCN/GhGHlRVhiNbb4lFWGWaXu3g+yynU3r+N+uAsLGJdKAyVyaILoI396Wql3ZJXI2YcPYT3jn3klcIu+VKCePCd4gOfz1NSVyPPIRERl9tvqfxg53bn7x8e8ntR9Aacf1yAO5C7IXdvdyizdAsEZj1805MorzYrJYJFkDTbOsxcK9Jiuk6SWtDzgRvLYahDOgWu5Fu+gRyYEfBc/1hxAT7tE+RxwCMXCFTLxga+gDk1tDR1yU9NKV5CCkKB2HlJ/StXyx8UjEPy5F2MbSTqhfxWcZxu5Xx0742osj8hRLAyd0IiX5gKzOzAUOhVsiqC+M952fcnAq+KEyL3KOhYuBGiUczv8pSE6rKwjjMKG801YyxT7PZjj5KgL7y+ibm4zK892O/Ptyp5JsBDCIjZCRzL98om15Behkj6u3QU/TtVn9ia4P0TW+qb9r9up0POONfwA=</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>17AB521140BB15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:17AB521140BB15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20150604_111122</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>17AB521140BC15DAE05307991F0AFE9F</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e34c814a-8ac5-424b-a19a-7d3453e3b9c7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1de1e00d-487c-492d-b21b-5e895e1ee18e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00025_ACCESS_UVTC_UserName_RequestorUserFAU_Active_RequesteeSelf_ValidateEmail_Role_Retailer_200_OK_P1" searchProperties="true" id="057a2cde-4c2d-48e1-8dad-b59d8a983005"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="15aa7fcd-0db5-4e5b-b674-1dd53d50134a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="d4aabb1d-0475-422d-ad66-af06dea54d8c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="127962b0-6699-46a3-8c33-54d259c54bc5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtc6o6EP4rDv14BiEIvjDVGVrrKadqe6TvX87EECUtJJYERX/9TVA5amuv935idtnsPvuSJ3vOYRJbrsc5TgVhtJInMeVuoW1rWUpdBjnhLoUJ5q5AbuAN+q5VNV24PaJV/G5b+1OvgRoY2029iWBdtwEAetOxJ3prYtbs0GlBy7akKecZ9ikXkIq2ZpnA0c26btr3puPWmq5tVR3QeNUqjzjl0rc0qZraBlTO21okxMw1jMViUV3UqiydGpZpAuN50A9QhBOodc7XGRWB0s7GHlVDjHAcoypiiXFu7Nmch9wNyJRCkaV4Eys8Fss0zJYhbUJOpmdaeRaHPp2wQryElFGCYExWUNVngEXEwooXT1lKRJQcTQKYyrGOc6QjYNMzzdiHdqKjPYQphzqPINj4GuEJTjFFuPIw8tva2WldK47ep5DyCUsTvi/+NzyYznHMZjjU+TatDbTTHX5Rqc45Rq5PUZxxMsdDNawziDDfdBOj011V7lI8IXmfcDmgOVfojF14B+K6Gl0yxVz8nwbtNGft5BHGGe68J71Bf0qef79dPFz5k8B5fQjy4cqqBe/tAsCucaEoW7sWD4ayHKL1iRu+SnCdXZCb5+T2pfX2FMTGKPiF+w342PdeEu/2MufNG2/5ywDX02jZGzN0HVto2EdDq//wLJqr8Wh8/Taxh3NLNHrd5ROa3U1fUu8HMoPMaM1B62b8vhSe6VOwqK/YK3Yi//nHS+7Nc3ZvDZKn0Xv9zrm8a8DGbLD6+TsKR0/N6CX4Gfx4G+WRfxu8OfPhT9Qu09nBv6/b3vkgG79hJLaiGgO/W+nJLkHxPZkpDQn1SWHqzhT5cIGp0DrqlOION5N0R0JX9nAtg4Z34VgA2Ga3B5yud2U6NbPRaoGe6fWuWr0tyaxRHEC8ZHRCVCxFueux+R4gSlyOaYhTfc4yyXRc+8ZjFwpY8elIXgJGOb5nkp6BtcrjiDpTsXif1qAdrwRJIrGoa5UhE7f0NvUmAqf7nNzc4+QRRmRGsCJuNddcDjYXshYfcJ6JGFTnsEpxJqk9VSzrWnbTMThJZjFWSI2EhVmMq7NoVlTG4OuvpUPEC+3o6r64bUfzOvy3LYG0CYky4CqXCyzbiL94XGrbRI4mDMBuwlv3XhYSdbFkPUVK0BrJ/q+/Y6Lmo5wRmdGfy+AP2OIuzU8+/vmk8Q0o47AeZaBwTnbCbp9u+QhI2uhsu/kBQfWjms3nWdFA264ZqXRvqAoZpmUEGGWS2Jb37B1To/RinPSKlMAPgpf6fYiZiGggoMCJHLhKIZ6wNgSYq7XBlzclP3Un2QspSydwLr7SXcZy5VGIv92KkIuUnVTfyc+CpeHfjn3hayeOzFNuDYLQqZLUC7I8MheISbdEch9Ld51/5eCr4PvKssglFiEHapwJfPxPRZFaW4MIsYwKv6sVil2iLXCK5Qy7f40+uSm4vFzuyL9vdzopRgBhuRJyUvhXb7SrrgCd7pD1JugRvr76jq/30XU+qT9rdup0OOOdfwA=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB521140DE15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB521140DE15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB521140DF15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB521140DF15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_111151</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130925_075247</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130925_075247</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20130925_075247</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E736ED6B4703B84FE0401F0A05996EB3</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4jx0jG0yMPYEZPhMSAgnQlstLR8hro9TIYMlA+uuvZGIChOTS++TRerV7dvfoSNccL6KiV+ccEkFjpnVbVf2XBeWZO7PKRmVmY8Ou2I5RcR0wzFLFrLhBEDi4pGtdzlPoMi4wE1W9aFolw3SNYnls2Z7leuVKoWLbU137AQmXoaVLwdS17SJi3MvSVvU0YV6MOeUewwvgniDeqP7Q86Snh3NMeu16hzJLmNTmQiw9hEjBBwJRRAokXqBrdORz7XNvREOGRZrAa06fV/XXvZvNprApFeIkREXTNJHpIunjcxp+1Wtf8s3gd1kQ79ZNzGJGCY7oH6xAPYCYx75Wj8I4oWK++CC0hSxThTZgSwxi2eyrjt4SZOgujHQEMuHY4HNs5cGGEEACjID2fdit6l8vm+Bu7zjBjAdxsuAn67+DBGwNUbwE3+B5ZTm6yyOeaVftGojXZSRKOV1DX9FkiQlw7TGBgG57lEvy+VzLxq9tec4wIH8zkmt0iFPCRmc606IhcPF/5nU4q12UHzhKoTYejLm/eZ6IuePP+c1s9DB17tjNsPkcVzMIh847UPtRv65Pibrn1esmgQbuvdn7abbvVv/MyvVe3bltPt8sxsX5009n0LmfLR/uR7zR7W8Gyepu/r2xdqbBE2736/zHP+1V6QmJyvomHNsp+0Kjkh+uaN+y+2a/3Ww92zF8G3bCaP2Ix+PVHzSd9JaD6PZ36JhB7/kW7idPbhg635qjRtzpXVk/+aQ1XTlF9A1/uWWVoDxwV+yp93iHG6j9O6y+1XRYw7Exl4NROnsGIvKloka3pXXkvLD4XFqUhfpGkLl6S6VPXAATek3tUrLipVJ8qO/JYe7Wbad01W5dNWzHLDUqdqdt2qbVMetm2XWv2o1Srj87FCcQmzELqMqlFHbHn88BkoXHgfmQGOs4JXPg+icRW1hgrcuG8mDEjMM4lgreXiXpJCC3vc20yEtwY00nSaP9ggupjBpQyRhd68diwAZJPRCQHOu3c6TfQyB0SUGJvGI6l1TnQjZlhdepiKzCGhcYpPIaSJQSe0W7UkacLpYRKMhoEftpBIXlfJm1CPHdt2hgwjPrsD3+1R01s1P4YZGn//J+SB+fKgeu6mmAnCmcuYzsvJgPiy6ah0Xn4eupT9Vhk80VCSU7JMe/3jijyLInjKqqOfpl5bj37hdvf78TfQIKnfZjn8hf04O0+a0qLwopJbV8oitcWBXS9TrNZugomUxkeGQh00EjIKnUupdx/BsY2odAF10ze9Qnmff2Y3ypmLORwAIWknFatrzgjTECrt4YXcnu7aUPmKOUsm8CtuKcrRnJp4hC/OlrhXhE+Unzo/xs4sR/G9eZWAd5ZJ3yYSEoC9VKXSovH5CCxDIslSoYJ4fBzwU4l/zYuG/yHouQbJqlAj7+oyl5q+qYkDhlotvSM8Oh5GY4xcsSvDend2EyWX+9p7f8w3t68tAbSfFbYH3vS//b2aAZXQjIXZxmWKr6Vj45ZXIWHkj8K8BTle9IknQkT+yW6e5V3nFds+y4+wYeVVJ7Z35vOejp6Xmo/Qs=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E736F038F3804D09E0401F0A07990579</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbZcuI6EH3PV7g8j1NGXnAMrkAVa8YzQBbI+pISsgAFWzaW7JB8/UgmdoCQXOY+udRudZ/uPjrSGYNhYLotxnDCSUQVr9tQnyxkmPq07muOXa9qVdOua3A69TUf2fpMN3XTqGFV8RhLsUcZh5Q3VFM3LE2va6Y9MaquqbumVbGs2qOq3OKEidDCpaKryjoMKHPztA01TagbQUaYS2GImcuRO24NB67wdGGBSW2ebVDmCZPmgvPYBQBVfIxwEKAKikJwBnZ8znzmjsmcQp4m+D2nzxrq+96Xl5fKi1WJkjkwdV0Heh0IH5+R+Q+1eVJsxr5HZ9Fm3YE0ogTBgLxBCWqI+SLylVYwjxLCF+EXoQ1g6DK0htdIQ0aV/lDBR4Ic3ZGRdkAmDGpsAY0i2DWe4QRThJWba6+h/jhugpu9kwRSNouSkO2t/w0SphkOohj7GisqK9AdH/FAu5pnGLkeRUHKSIZHkiYxRJgplwmekfWAMEE+nyn5+JU1KxiG0b+M5Axs4xSwwYHOdMkcM/5/5rU9q02UWxikuDnsmlXQiZyrHhwY69n81/PgOcw4GJFhI4ew7bwBVY76fb1P1JJX75uW2WhC279voyuwCAw2snvT1c81n5p3q/OgQ89fydXp66N108erPz28bj+81cbgt29zK5u82XfIGy1Rvesw8/JleNK+YWliPfyM3tqTP4+ngKIaDdtJdczsmwvjFXTjyzh7fu5ZVB/eL3+tHumt/TAfPdrA4W0LsmUH1uLb4SBKreWJE8xSPAjH91cXPf+i35rF88ZHTds17BoLORin02eMeLGU1PC6Sl/MC/LvpUVaiK/Nclc3lvrEOKZcbcpdUlbcVIgP8V0xzM2651inve5pu+o4drtW7ff0qm709ZZu1+unvbZV6M8GxR7ETkRnROaSCrvhz/cAUegyTH2caFmUogVm6jcRu5BDxaPX4mBElOFJJBQ8u3v+M2BDr/PY+XV+28HLuW+1u5etSiqizohgjKqMIn5BL5LWjONkV7+dHf2+xojEBEuRl0xnguqMi6asYJbywKhksEJxKq6BRCqxa1ZrNmAkjAMsIYMw8tMAV+JFnLcIsM3X1CBiufW6N3nyxp38FH5Z5P6/oh/CxyfSgcl62ljMFB+4jIyimC+LlhV/FF2Eb6U+kYdNNJcnBG2Q7P764IwkS0kYWVVn/GQUuEv3o7d/3gm+AQX2+1Em8jOylba4VcVFIaSkWUx0BSurSpplaT5DR8pkIsIDA+gOGGOUCq17nURLTEEZAhx1zZSo9zKX9l18KV/QMYcch4JxSr484o0xxky+MTzB7vWxD5idlKJvHK/5IVsnEE8Rifjb1wpykfQT5kvxeYkS/2NcB2Jt5RF1iocFJ3QuV/JSef2CFCgSYYlQwSjZDn4owKHku8ayySUWLtg0TTn++o8i5a2hQoSilHKvq+aGbcnNcfLXGLsfTp/C5LL+fk+v2Zf39P1wMBbiF0K19CX/7ayRnC5IvFCFf46loa7Fk1Mkp/MtiX8HuK/yfd2q9a2aXu3q9VLlnXpdt5162cCdSpqfzJ8tWz3dPw/Nvw==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E736ED6B4775B84FE0401F0A05996EB3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E736ED6B4775B84FE0401F0A05996EB3</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130925_075247</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E736ED6B4776B84FE0401F0A05996EB3</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00026_ACCESS_UVTC_UserName_RequestorUserFAU_Active_RequesteeBAU_ValidateEmail_Role_Retailer_200_OK_P1" searchProperties="true" id="a4c3685a-7947-49dd-9301-54c86a917b93"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="270292dc-d0e7-46a8-ae71-42efed91d141"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="a77ca69a-9f0e-4ed9-8c5d-d21607cfcaf7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="26072d12-8de4-4b54-b5af-10e981acf971"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU" id="327e0bc9-a3ad-4641-bc67-061aa9da575e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="989025d4-11bd-4e97-b65b-c2c2daacb45f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+o6EP4rTP3olLQUtO0IMyCg9YhHAb0evzgh3UK0TbFJC/rrT1KgAgKXez91drvZffYlT/aC4yisuE3OIRE0ZqV5FDLu5tq6libMjTGn3GU4Au4K4g6avVu3UjZcvDqilbx2XXutWGD6lhPo57ZD9CoYlm47ZqAHvgNWJYDKyMfSlPMUPMYFZqKuVQyzphtnulEdGjXXst3aWblatV600hMkXPqWJmVDW4Ka87o2EWLqIjSbzcozqxwnY1QxDBM9924HZAIR1hoXi4zyQEljaU/KPhAIQ1ImcYQu0IbNhc/dAR0zLNIElrH8fbEMZDhI2vicjk+04iz4HgviXLzELGaU4JB+YVWfHohJ7Jea4ThOqJhEe5MwDeVYhznRiVllJxrahHakow2ECcc6n2Bz6asPASTACJQe+15dOzmua/nRYYIZD+Ik4pvif8MDLIMwnoKv81VaS2jHO9xRqcYFENdjJEw5zeBODesUE+DLbgI53lXpPoGAzm8plwM65wodWoe3JS6q0aZj4OL/NGitOQsnTzhMoXEDg+TKewqfH6yZzdrocX5ac+bdx/bosZ4DWDfOFUVrF+LWUBZDtDhxzZ6i5umVF/6Z2P6oBejuq/p07Qyubvr+qPryZnet6fSsObQfWtR+/4WM7n3k3Z/OHHyTTUWIu3fw0X62Wx/P+J/Pyxrq3L/1H2ZR+sXOr25PRy98HL93aOc0vhmIaGan0dfjn/N3ZvfG88ezVnb7jIfXv27DKzZk7U6b9j69LOi9j1rvQztJb56tDFhvZA2+0rdevUhnDf+mbnXnB+noDYhYiWoMvHapK7uExWEyUxrq60Fu6k4V+XABTGgNdUpxh5tKuqO+K3u4kM3zZqtWMc2qaTXNWrvZMWqWce44ZtdodjtOd0UyCxRbEC9jFlAVS1HuYmwOAySRy4H5kOhZnEqm49oBj20scMljfXkJYsZhGEt6tnzHebM/RsaYnJs0CLNk5lcd8uVopbtY/Ga/k2YgINnkZHuDk/tA6JSCIm4111wONheyFh84S0VoljNcZpBKak8Uy7qVql1DnEbTEBRSFMV+GkJ5OpnmlUF88a3omPBc2+8M89u2N6/tf6sSSBufKgOucmmBbCPseFyqq0T2Jmya6wmv3DdTn6qLJespEkoWSDZ/fY+Jmo9iRmRGr5eDV3OFuzA/+vjPk+gAKLRdjyKQn9G1sKunWz4CkjYaq25+YLP8UU6zLM0bKIuAEukeqQoho4IGQFJJbJ/D+B0YKrygo16RAvhW8EK/CTEVEzYQWEAkB66Ui0esDQPgam3w5E2ZH7uTbISUpRMwF7t0l6FceRTig1sRcYmyk+p7+ZnFif/dsR2+1uLIPOXWICgbK0m9IJ975oLE0i2V3Bcn6853OdgVfFNZFLnAIuRAjVIB+/+UFKnVNUxInDLhtbVcsU60OU7xOQX32+iHm5zLi+WO/vt2p9N8BAjIlZDT3L96o111Bdh4jayXQffwtXOIrzfRNX6of2rW6rQ9442/</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB5211413915DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB5211413915DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB5211413A15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB5211413A15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_111213</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150604_111225</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150604_111225</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150604_111225</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+o6EP4rTP3olLQUtO0IMyCg9YhHAb0evzgh3UK0TbFJC/rrT1KgAgKXez91drvZffYlT/aC4yisuE3OIRE0ZqV5FDLu5tq6libMjTGn3GU4Au4K4g6avVu3UjZcvDqilbx2XXutWGD6lhPo57ZD9CoYlm47ZqAHvgNWJYDKyMfSlPMUPMYFZqKuVQyzphtnulEdGjXXst3aWblatV600hMkXPqWJmVDW4Ka87o2EWLqIjSbzcozqxwnY1QxDBM9924HZAIR1hoXi4zyQEljaU/KPhAIQ1ImcYQu0IbNhc/dAR0zLNIElrH8fbEMZDhI2vicjk+04iz4HgviXLzELGaU4JB+YVWfHohJ7Jea4ThOqJhEe5MwDeVYhznRiVllJxrahHakow2ECcc6n2Bz6asPASTACJQe+15dOzmua/nRYYIZD+Ik4pvif8MDLIMwnoKv81VaS2jHO9xRqcYFENdjJEw5zeBODesUE+DLbgI53lXpPoGAzm8plwM65wodWoe3JS6q0aZj4OL/NGitOQsnTzhMoXEDg+TKewqfH6yZzdrocX5ac+bdx/bosZ4DWDfOFUVrF+LWUBZDtDhxzZ6i5umVF/6Z2P6oBejuq/p07Qyubvr+qPryZnet6fSsObQfWtR+/4WM7n3k3Z/OHHyTTUWIu3fw0X62Wx/P+J/Pyxrq3L/1H2ZR+sXOr25PRy98HL93aOc0vhmIaGan0dfjn/N3ZvfG88ezVnb7jIfXv27DKzZk7U6b9j69LOi9j1rvQztJb56tDFhvZA2+0rdevUhnDf+mbnXnB+noDYhYiWoMvHapK7uExWEyUxrq60Fu6k4V+XABTGgNdUpxh5tKuqO+K3u4kM3zZqtWMc2qaTXNWrvZMWqWce44ZtdodjtOd0UyCxRbEC9jFlAVS1HuYmwOAySRy4H5kOhZnEqm49oBj20scMljfXkJYsZhGEt6tnzHebM/RsaYnJs0CLNk5lcd8uVopbtY/Ga/k2YgINnkZHuDk/tA6JSCIm4111wONheyFh84S0VoljNcZpBKak8Uy7qVql1DnEbTEBRSFMV+GkJ5OpnmlUF88a3omPBc2+8M89u2N6/tf6sSSBufKgOucmmBbCPseFyqq0T2Jmya6wmv3DdTn6qLJespEkoWSDZ/fY+Jmo9iRmRGr5eDV3OFuzA/+vjPk+gAKLRdjyKQn9G1sKunWz4CkjYaq25+YLP8UU6zLM0bKIuAEukeqQoho4IGQFJJbJ/D+B0YKrygo16RAvhW8EK/CTEVEzYQWEAkB66Ui0esDQPgam3w5E2ZH7uTbISUpRMwF7t0l6FceRTig1sRcYmyk+p7+ZnFif/dsR2+1uLIPOXWICgbK0m9IJ975oLE0i2V3Bcn6853OdgVfFNZFLnAIuRAjVIB+/+UFKnVNUxInDLhtbVcsU60OU7xOQX32+iHm5zLi+WO/vt2p9N8BAjIlZDT3L96o111Bdh4jayXQffwtXOIrzfRNX6of2rW6rQ9442/</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17AB5211413915DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZWwZnIldgSouCYGEkMVMdpOXlCK3sSa2DJIMJF8/kgEPEJJl98nV7Vb36YuO+kLgNHH8lhDAJc1YZZUmTPiFtmHknPkZFlT4DKcgfEn8oDW89Z2q7ePtEaPS7zaM59qLG3nOWc0kYBOzDuG5iUnomRGpgwuui5BdV6ZC5NBnQmImG4ZjI9e0z0y7PrFdv+b5jlN1a96TUXkALpRvZVK1jQ2olWgYsZQz37KWy2V1WatmfGo5to2sf4a3AYkhxUbzYp1REYg3N/akGgKBJCFVkqXWhbVncxEKP6BThmXOYRMr/CyWbdmepWxCQaffjPIshH0WZYXYwSxjlOCEvmNdnyHIOAsrrWSacSrj9NMkkK0dm7AiJkF19s2w9qGd6GgPIRfYFDFGG19jiIADI1D5Oe43jG+nda04OuGYiSjjqdgX/xseYAtIshmEptimtYF2usMjlWpeAPH7jCS5oAu408M6wwTEpptATndVuecQ0dUtFWpAV0Kjs3bhHYjranTpFIT8Pw3aac7ayQNOcmgOWRB0IvaDDWe9wcvPdhK1nbnLevHcbhQAdo0LRdnatXgwlOUQrU8MJo90dEmXKOc3weK2NRhd894NDOfzsz52UPy9Pbg9y+DtHt0QZomHTtAaRKNYxMtf3+Ne/IvGBKG/7sJ+9PQeDV8HNzd/W6N8/NK5xqvJ2eixd3vvDbw0vwZkP7ymnafrabvdvXvM8Stq3S/SPn9fPIheJ7ycpufB1PuejN9vWlf29WO6GPCE9vhZ+ma3Wb0uGmU6O/j3dds7H+Qvv4DIrajHoN+tXKkuYfk1mWkNDc2oMPVnmnyEBCaNpj6lucPPFd3R0Fc9XMvoR6vtOgjV0fkVcrutS9ut2T88D13ZratL72pLMmsUBxA7GYuojqUpdz02XwMkqS+AhcDNRZYrphPGFx67WOJKn43VJciYgEmm6NlLUYojQV1mv9F4Rlm0xORVnhuVu0yO2Ii3Igl8n5LP9yh5DITOKGje1mMt1FwLqUoxx4tcJqi6wFUGuWJ2rknWd+rnriVoOktAA7XSLMwTqM7iWVEYS6y/juIbUWjHl5Pisn2a1uG/bQWUTUi1gdC5tEF1EY68LWibyKcJI7Sb8NZ9Kw+pvleqnJJTskay/+vPlOjxKEdEZfTcCZ7RFndpfvLxjyetL0BZh/UoA4ULuhN2+3KrN0CxRnPbzTlG1Xk1XyzyooH1es3iyr2lK2TZjhUAyRWvvU2yV2BW6cU66REpgR8EL/X7EHMZs0BiCakauEohnrA1BCD01tBXF2V16kqyF1KVTsJKHtN1ErXxaMRfLkXEJ9pOqe/VZ5nx8E/HjvjaiaPyVEuDpGyqJf2AvH0yFyRTbqmivozvOj/m4FjwfWVZ5BKLVAP1kkv4/E9Fc1rDwIRkOZP9rlEodnm2wCnfZuD/MfrgpqDycrej/77cmbQYAQJqIxS08K+faF9fATbd4epN0ON0XfO+out9dM0P6o+anTodznjzNw==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17AB5211418F15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17AB5211418F15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_111225</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17AB5211419015DAE05307991F0AFE9F</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00027_ACCESS_UVTC_UserName_RequestorUserFAU_Active_RequesteeSAU_ValidateEmail_Role_Retailer_200_OK_P1" searchProperties="true" id="288cd779-43e4-42c0-b54c-ea260340ae6c"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="588f73db-2f91-4b67-be83-b704c84f2699"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="efa2c281-016a-4884-a5d7-54a77e20af37"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="e1555274-39e3-41ee-b681-ca1ac7998d02"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU" id="d7a7fef1-2603-4789-a26e-002c12b0dc43"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="292da6d2-b95f-443e-a331-469e835709c0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdc9o6EP0rjPuYMbLNtycwAwFSSmhSoCTtS0aR10bBlh1JBpJffyUDDpCQy71PHq1Xu2d3j450KXAUOm5bCOCSxqywjkIm3MzaNFLO3BgLKlyGIxCuJO6kPbpxnaLl4t0WozDoNo3HcqWK7UYNTAs/Ncyy9+SbDb9KTKj6FatRqvk131auQqQwYEJiJpuGY9kV06qaVnlqVdxSwy1Xio5l/TUKM+BCxVYuRcvYglqLpjGXMnERWq1WxVWpGPMAKX8bPYxuJmQOETZal5uKskS8tfUnRQ8IhCEpkjhCl+jA59IT7oQGDMuUwzaXdyqXhawGUj6eoME3I98L3oD5cba8wixmlOCQvmHdnxHIeewV2mEQcyrn0ckibEsHNmFNTGKX2TcDHUI7M9ABQi6wKebY3sYagw8cGIHC7/GgaXw7b2rZ1inHTPgxj8Th8r/hAbaEME7AM8WurC208wN+0qnWJRB3wEiYCrqEn5qsCSYgttMEcn6owh0Hn65vqFAEXQuNDu3DO1puutGlAQj5fwa0N5xNkBkOU2iR0BI97PVJuLrgN7Namf6xxaBGZu1BMwOw75wZ8tFulkekzEm02eG98f4DdqJFEDHkPDjPrDMf4l9X32uYXXQovx/9IbXn++H1/Fn0OpO7BbWkFRE/YMEKVRejVX/tPC0HpfrwdfY2/HXf6/6oo2l7Xr8ajkbJs/eA7GHCx3RB/96tkotlsCj3b2F825n30MP6ZuJfz4Lrt/73srirLuqr9VvszJzZuPcDeT71emMZJAxPn8fXs9/NvJw9/Ie23ZmfpE/PQORuqWkw6Bb6akpYfi1m2kI9089c3USLj5DApNHSu7R2uKmSO+q5aoabtV1rdyqObZftTsmudNs9q1Kyao2G3bfa/V6jvxOZDYojiFcx86nOpSV3Q5uvAZLIFcA84OYyTpXSCeOLiF0scWHAxuoQxEzANFbyXPGixKFvipf1Na5XBK8GT6+LuTQKP2N5y25525fADyW5fiDJYyA0oaB1W9NaKF4LqVrxgpepDO3iEhcZpErZuRZZ1ynXK0jQKAlBA0VR7KUhFJN5kjUGic3XMTERmXXcm2aH7WRZx/92HVA+HtUOQtfSATVF+ORuKe0KOVmwbe8XvAvfTj2qz5Vqp+SUbJAc/npniaZHThFV0ePV5NHe4c7dz97+cSf6AhQ67keeyFvSvbS7m1vdAUo1WrtpvmC7+FJMl8s0G2C5XEJchUe6Q8hy0ARIqvjzOo0XwFAeBZ11ieTAj5Ln9kOIqZyzicQSIkW4QrY849UwAaFfDQN1UNbnPkkOUqrWSVjLz2xXoXrxaMRfPoqIS7SfMt+pzyrm3vvEPom1l0fVqR4NkrJAr/QF8nqCFyRWYamSvpjvB/8swGfJD415k3MsUhHqKZVw+k9Ba1rTwITEKZODrpEZ9nU2wylfE3DfnT6EyaQ8f9vRf3/cmTSjAAH1IhQ0i6+vaFcfARbsafU26Qm5dr6S60N0rQ/mj5a9Ph1zvPUP</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB521141B215DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB521141B215DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB521141B315DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB521141B315DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_111259</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150604_111314</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150604_111314</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150604_111314</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdc9o6EP0rjPuYMbLNtycwAwFSSmhSoCTtS0aR10bBlh1JBpJffyUDDpCQy71PHq1Xu2d3j450KXAUOm5bCOCSxqywjkIm3MzaNFLO3BgLKlyGIxCuJO6kPbpxnaLl4t0WozDoNo3HcqWK7UYNTAs/Ncyy9+SbDb9KTKj6FatRqvk131auQqQwYEJiJpuGY9kV06qaVnlqVdxSwy1Xio5l/TUKM+BCxVYuRcvYglqLpjGXMnERWq1WxVWpGPMAKX8bPYxuJmQOETZal5uKskS8tfUnRQ8IhCEpkjhCl+jA59IT7oQGDMuUwzaXdyqXhawGUj6eoME3I98L3oD5cba8wixmlOCQvmHdnxHIeewV2mEQcyrn0ckibEsHNmFNTGKX2TcDHUI7M9ABQi6wKebY3sYagw8cGIHC7/GgaXw7b2rZ1inHTPgxj8Th8r/hAbaEME7AM8WurC208wN+0qnWJRB3wEiYCrqEn5qsCSYgttMEcn6owh0Hn65vqFAEXQuNDu3DO1puutGlAQj5fwa0N5xNkBkOU2iR0BI97PVJuLrgN7Namf6xxaBGZu1BMwOw75wZ8tFulkekzEm02eG98f4DdqJFEDHkPDjPrDMf4l9X32uYXXQovx/9IbXn++H1/Fn0OpO7BbWkFRE/YMEKVRejVX/tPC0HpfrwdfY2/HXf6/6oo2l7Xr8ajkbJs/eA7GHCx3RB/96tkotlsCj3b2F825n30MP6ZuJfz4Lrt/73srirLuqr9VvszJzZuPcDeT71emMZJAxPn8fXs9/NvJw9/Ie23ZmfpE/PQORuqWkw6Bb6akpYfi1m2kI9089c3USLj5DApNHSu7R2uKmSO+q5aoabtV1rdyqObZftTsmudNs9q1Kyao2G3bfa/V6jvxOZDYojiFcx86nOpSV3Q5uvAZLIFcA84OYyTpXSCeOLiF0scWHAxuoQxEzANFbyXPGixKFvipf1Na5XBK8GT6+LuTQKP2N5y25525fADyW5fiDJYyA0oaB1W9NaKF4LqVrxgpepDO3iEhcZpErZuRZZ1ynXK0jQKAlBA0VR7KUhFJN5kjUGic3XMTERmXXcm2aH7WRZx/92HVA+HtUOQtfSATVF+ORuKe0KOVmwbe8XvAvfTj2qz5Vqp+SUbJAc/npniaZHThFV0ePV5NHe4c7dz97+cSf6AhQ67keeyFvSvbS7m1vdAUo1WrtpvmC7+FJMl8s0G2C5XEJchUe6Q8hy0ARIqvjzOo0XwFAeBZ11ieTAj5Ln9kOIqZyzicQSIkW4QrY849UwAaFfDQN1UNbnPkkOUqrWSVjLz2xXoXrxaMRfPoqIS7SfMt+pzyrm3vvEPom1l0fVqR4NkrJAr/QF8nqCFyRWYamSvpjvB/8swGfJD415k3MsUhHqKZVw+k9Ba1rTwITEKZODrpEZ9nU2wylfE3DfnT6EyaQ8f9vRf3/cmTSjAAH1IhQ0i6+vaFcfARbsafU26Qm5dr6S60N0rQ/mj5a9Ph1zvPUP</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17AB521141B215DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMraMnYArUMUtO54iCQOEXF6mFLnBytgSsWQD+fqRDHiAXJbdJ1e3W92nLzrqS4GT2PHbQkAqKWeVVRIz4RfappGlzOdYUOEznIDwJfHH7euB71RtH++OGJWg1zR+gX3u2MSrm+T8uW66F45j1oEgs9YgAG5jhupOTZkKkUHAhMRMNg3HRp5pn5u2O7E937V9u1Zt1GtPRmUKqVC+lUnVNragVqJpRFIufMtaLpfVZa3K07nl2DayHq4HYxJBgo3W5SajIlDa2tqTaggE4phUCU+sS+vA5jIU/pjOGZZZCttY4WexbMtuWMomFHT+zSjPQhiwGS/ELmacUYJj+oZ1fa5BRjystOM5T6mMkk+TQLZ2bMKKmAS57JthHUI70dEBwlRgU0QYbX2NYAYpMAKVu1HQNL6d1rXi6CTFTMx4mohD8b/hAZZDzBcQmmKX1hba6Q4/qFTrEogfMBJnguZwo4d1gQmIbTeBnO6qMkxhRlcDKtSAroRGZ+3DOxI31ejROQj5fxq015yNkymOM2jNFt3bdMLvGwi3eTKwSL02cG+9zsOPfrMAsG9cKMrWbsSjoSyHaHPi5wOyVm1YLUe/vbX3k/frg+9nMUEkvRiGZ/dv65vzTr89ZKRh/1hfd64fs/Y/YoBunu6D0Ws8HASRQI91J3pbpBMcPQaPichZeDa9IVcPq+ilx+7G6O6lP/Ge5TOyutN+9/F79Pv2ZYhwOB0+Eie6eZrn6zP+M1jdLSf3qzzvcI/1zqfT26e7fieew+uF9+Jkd26zTGcP/6Fud+fH2fMLELkT9RgEvcqV6hKWX5OZ1tDQnBWm/kKTj5DApNHSpzR3+JmiOxr6qocbGV20O56DkOvYdeT12n3bq9kXjQa6sttX/cbVjmQ2KI4gdjmbUR1LU+5mbL4GSBJfAAshNXOeKaYTxhcee1jiSsBG6hJwJmDCFT1HEWDbXbw+vyzzWlTDsduQDUIWRuWGy1t2m7ZnEtJDSq4fUPIICF1Q0Lytx1qouRZSleIV55mMUTXHVQaZYvZUk6zvuHXPEjRZxKCBWgkPsxiqi2hRFMYSm69jYiIK7ag/KS7bp2kd/9tVQNmEVBsInUsHVBfh+G2pNXxvl8inCSO0n/DOfTsLqb5XqpwypWSD5PDX3ynR41GOiMroV3f8C+1wl+YnH39/0voClHVcjzJQmNO9sLuXW70BijVau26+YlR9rWZ5nhUNdN2alSr3lq6QZTvWGEimeG094b+BWaUX66RHpAR+FLzUH0LMZMTGEktI1MBVCvGErWEMQm8Ngbooq1NXkoOQqnQSVvIjXTdWG49G/OVSRHyi7ZR6qD5LnoZ/O/aBr704Kk+1NEjK5lrSD8j6k7kgXLmlivp4uu/8IwcfBT9UlkUusUg1UM+ZhM//VDSnNQ1MCM+YDHpGodjn2QKnXC/A/2v0zk1B5eVuR/99uTNpMQIE1EYoaOFfP9G+vgJsvsfV26Af0jXqOF/R9SG61jv1e81enY5nvPUH</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17AB5211420815DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17AB5211420815DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_111314</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17AB5211420915DAE05307991F0AFE9F</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00028_ACCESS_UVTC_UserName_RequestorUserFAU_Active_RequesteeOtherFAU_ValidateEmail_Role_Retailer_200_OK_P1" searchProperties="true" id="a32911c9-bf32-454a-8f2f-5cbb6946e42f"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="0221d066-24d0-4f8f-ad96-3a6c4e59139d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="91e01e05-96c3-478f-b712-0bf7cf582e8a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult FAU" id="e1796fe5-99dc-4eb5-a3de-6944dc889712"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult FAU" id="83988496-fa0b-4367-ad9c-5cf9182121a6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="cc7e8b77-d122-4502-b4c3-1819b921281e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdU/I6EP4rTL10Sj8oUjrCDAoqIqKC+vreOCHdlmiblCYF9NefpEAFFA/nXHV2u9l99iNP9pSjOLK9FueQCsJoaRFHlHu5tqFlKfUY4oR7FMXAPYG9Yat/49ll00PrI1qp225or44fjGvuyVg3EVR0x6+5OkKBpY/xCdTBwTXLBmnKeQZdygWioqHZplXVzRPddEZm1XNMz7bLlmv91UpPkHLpW5qUTW0FasEb2kSIxDOM+XxenlfKLA0N2zQt40//ZognECOtebrMKA+UNlf2uOwDhijCZcxi49TYsjn1uTckIUUiS2EVy98XyzTMuiFtfE7CI604C36XBiwXzxFllGAUkU+k6tMHMWF+qRWFLCViEu9NwjKVYx0WWMeWQ480YxvagY62EKYc6XyCrJWvBwggBYqh9PjQbWhHh3UtPzpKEeUBS2O+Lf43PEBnELEEfJ2v01pBO9zhD5VqngL2uhRHGSczuFXDmiAMfNVNwIe7Kt2lEJDFDeFyQBdcoTM24e2Iy2q0SQhc/J8GbTRn6eQJRRk0K9bZyaBHr+9GiN3HL+1psMgS58Xvt/uNHMCmca4oWrsUd4ayGKLlic49uq5dQFhfZJ328XQwRh/XT+dW+3qSfibk+eY4sPtd9lap+t0koLeoHfbu/QmvT4f3J27MhvZThN1p6F6Z8FKj2eO7abzNH42k0n+pvEFY69Q+SPh31CO9O5ycsfEVcy9nz/edyqB+SYLLOPt0nctnJrK790sWDqtP+M8LTnrHnc+wd/1YnT+PnCt74QxS/71RpLOBf1u3vvPDbPwGWKxFNQbddulCdgmJ38lMaYivB7mplyjy4QKo0JrqlOIOL5N0R3xP9nApW7XWWdW2LMe2z61qu9UxqxWzVq9bF2brolO/WJPMEsUOxHNGA6JiKcpdjs3vAHHscaA+pPqMZZLpuPaLxzYSqNSlD/ISMMphxCQ9W3Xg/ruL4rEvFlZ9zGbvaBJks9TVSrdMDOggbQUC0m1SdrdI+QEwSQgo5laDzeVkcyGLMUWzTERWeYbKFDLJ7amiWc923KrBSZxEoKAaMfOzCMrJJMlLY/Dl19YR5rn2oTPKr9vexHb/rWsgbXyiDLjK5QxkH+GH18VaJ7I3YcvaTHjtvpX5RN0sWVCRErxEsv3ra07UgBRDIjN6PR++WmvchfnBx7+fNH4BZezWowjkz8hG2PXbLV8ByRvNdTenyCpPy9lsluUNdJyKkUr3hqqQYdrGEHAmme1jxN6BGoUX46BnpAC+E7zQb0PMxIQOBRIQy4Er5eIBe8MQuNobuvKqLA5dSrZCytIJWIifdOeR3HkU4l/XIuxhZSfVd/IzZ6n/1bEffG3EkXnKtUEQGipJPSEfe+YCM+mWSPJj6abznxz8FHxbWRS5wCLkQI0zAfv/lBSrNTSEMcuo6La1XLHJtDlO8ZGA92X0zU1O5sV2R/59vdNJPgJYbpLSPvevHmlPXQEabrD1Kugewj77jbC30TW/qb9rNuq0O+PNfwA=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB5211422B15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB5211422B15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB5211422C15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB5211422C15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_111341</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150604_111355</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150604_111355</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150604_111355</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdU/I6EP4rTL10Sj8oUjrCDAoqIqKC+vreOCHdlmiblCYF9NefpEAFFA/nXHV2u9l99iNP9pSjOLK9FueQCsJoaRFHlHu5tqFlKfUY4oR7FMXAPYG9Yat/49ll00PrI1qp225or44fjGvuyVg3EVR0x6+5OkKBpY/xCdTBwTXLBmnKeQZdygWioqHZplXVzRPddEZm1XNMz7bLlmv91UpPkHLpW5qUTW0FasEb2kSIxDOM+XxenlfKLA0N2zQt40//ZognECOtebrMKA+UNlf2uOwDhijCZcxi49TYsjn1uTckIUUiS2EVy98XyzTMuiFtfE7CI604C36XBiwXzxFllGAUkU+k6tMHMWF+qRWFLCViEu9NwjKVYx0WWMeWQ480YxvagY62EKYc6XyCrJWvBwggBYqh9PjQbWhHh3UtPzpKEeUBS2O+Lf43PEBnELEEfJ2v01pBO9zhD5VqngL2uhRHGSczuFXDmiAMfNVNwIe7Kt2lEJDFDeFyQBdcoTM24e2Iy2q0SQhc/J8GbTRn6eQJRRk0K9bZyaBHr+9GiN3HL+1psMgS58Xvt/uNHMCmca4oWrsUd4ayGKLlic49uq5dQFhfZJ328XQwRh/XT+dW+3qSfibk+eY4sPtd9lap+t0koLeoHfbu/QmvT4f3J27MhvZThN1p6F6Z8FKj2eO7abzNH42k0n+pvEFY69Q+SPh31CO9O5ycsfEVcy9nz/edyqB+SYLLOPt0nctnJrK790sWDqtP+M8LTnrHnc+wd/1YnT+PnCt74QxS/71RpLOBf1u3vvPDbPwGWKxFNQbddulCdgmJ38lMaYivB7mplyjy4QKo0JrqlOIOL5N0R3xP9nApW7XWWdW2LMe2z61qu9UxqxWzVq9bF2brolO/WJPMEsUOxHNGA6JiKcpdjs3vAHHscaA+pPqMZZLpuPaLxzYSqNSlD/ISMMphxCQ9W3Xg/ruL4rEvFlZ9zGbvaBJks9TVSrdMDOggbQUC0m1SdrdI+QEwSQgo5laDzeVkcyGLMUWzTERWeYbKFDLJ7amiWc923KrBSZxEoKAaMfOzCMrJJMlLY/Dl19YR5rn2oTPKr9vexHb/rWsgbXyiDLjK5QxkH+GH18VaJ7I3YcvaTHjtvpX5RN0sWVCRErxEsv3ra07UgBRDIjN6PR++WmvchfnBx7+fNH4BZezWowjkz8hG2PXbLV8ByRvNdTenyCpPy9lsluUNdJyKkUr3hqqQYdrGEHAmme1jxN6BGoUX46BnpAC+E7zQb0PMxIQOBRIQy4Er5eIBe8MQuNobuvKqLA5dSrZCytIJWIifdOeR3HkU4l/XIuxhZSfVd/IzZ6n/1bEffG3EkXnKtUEQGipJPSEfe+YCM+mWSPJj6abznxz8FHxbWRS5wCLkQI0zAfv/lBSrNTSEMcuo6La1XLHJtDlO8ZGA92X0zU1O5sV2R/59vdNJPgJYbpLSPvevHmlPXQEabrD1Kugewj77jbC30TW/qb9rNuq0O+PNfwA=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17AB5211422B15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZXzBBOMKVJEAiXNhGCDZTF5SQm5AwZbBko3h60cy4AABlt0nV7db3acvOuprhgLfdBqMQcRJSAtp4FPmZNqaEkfUCREjzKEoAOZw7PQbz0+OWdQdtD2iFNxmTflAtmkjzy6pCJVLqoWssmqXzZJ6dVUGXBlhHRsgTBmLwaWMI8priqkbZVW/UnVroJcdS3csq1iqlt+VwitETPgWJkVd2YBKWU2ZcD5zNG2xWBQXpWIYjTVT1w3t7fmpjycQIKV+vc4oCxTVN/a46AEG38dFHAbatbZnc+0xp0/GFPE4gk0s71QsXdOrmrDxGBn/UPKz4Ll0FGbiLaIhJRj5ZIVkfZ6BT0Kv0PDHYUT4JDiZhKFLxyqkWMWGRX8o2j60Cx3tIYwYUtkEGRtfPRhBBBRD4aXn1pQfl3UtOzqIEGWjMArYvvjf8ABNwA9n4Klsm9YG2uUOj1Sqfg3YcSn2Y0YS6MhhnSEMbNNNwJe7KnQjGJH0iTAxoCmT6LRdeAfiuhpNMgbG/0+DdpqzdvKK/Bjq0F146Wd3Rb3+fdd/s7TEa8XpH1RtubUMwK5xpshbuxYPhjIfovUJPpxNH8b+lVeZdG9L9ktn9flY0VK+eF0N6YNtXFVNV38M75+s+8mNH1SnP9ta0F51EHujc+PuH7h/TGCOh9AbT4MlmVpRx20uksf4c9DrxMbjoPG6fJj87r+nnNPqfTAkrUZnOm2tbtvc7A+6tv6SNqorYNai8hb/fOd3FcPAZsWd/rHv2KcxmP9GNw/eYDLUa3k6O/j3dds734+Hn4D5VpRj4DYLbdElxM+TmdQQTx1lps5Mkg/jQLlSl6ckdzixoDviOaKHa9moNG7KpmFYpm0Y5WajpZdLeqVaNdp6o92qtrcks0ZxAPE2pCMiY0nKXY/NeYA4cBhQDyI1CWPBdEw547GJOCq4tCcuQUgZDEJBz4Y9TUoT37b0dLS0TDK34qFfChOl0An5L/oraow4RPuUbO9Rcg8wmRGQvC3Hmom5ZlyUYo6SmPtGMUFFCrFg9kiSrGNadlljJJj5IIFqQejFPhRnk1lWGI2tv6aKMMu0vdYgu2wn0zr8t62AsPGINGAylxsQXYQjb0tpm8jJhA1jN+Gt+0bsEXmvRDl5RPAayf6vrymR45GPiMjo47b/YWxx5+YXH/9+UjsDSjusRx7IS8hO2O3LLd4AwRr1bTfnyCjOi3GSxFkDLaukRcK9Jiuk6abWBxwLXlsOwilQLfeiXfSI5MAPguf6fYgxn9A+RxwCMXCFTLxga+gDk1uDKy5KeulKshdSlI5Dyo/pbn2x8UjEZ5ci7GBpJ9Rd8VmEkffVsSO+duKIPMXSwAkdS0k+IMsTc4FD4ZYI6gujXefHHBwLvq/Mi5xj4WKghjGH038KktNqCsI4jCl3m0qm2OXZDCdfzsD5MvrmJqPyfLcj/77cqSQbASz2SGGf+ZdPtCOvAB3vcPUm6HG6Nm/O0fU+uvo39XfNTp0OZ7z+Fw==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17AB5211428115DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17AB5211428115DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_111355</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17AB5211428215DAE05307991F0AFE9F</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00029_ACCESS_UVTC_UserName_RequestorUserBAU_Active_RequesteeSelf_ValidateEmail_Role_Retailer_200_OK_P1" searchProperties="true" id="4f6706b4-115e-405a-aae9-0e21ad3cf2d1"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="00877ddd-8d88-4b38-9dc1-f7c503c52411"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="a88e39e4-a68f-4a30-be21-b0b1ec28e8b5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="9ab30b98-18d9-4a18-9f63-1b15a95afb90"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU" id="75768a24-e108-4667-9c35-0e276b2166b5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="d6971a97-4f58-4093-af47-c1cdb125ac2c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtc6JIEP4rFvtxCwGFKFS0img8uTLJrppski9bk6GRycGAM4OS/fU7g8qqiTnvPlHd9HQ//TLP9CVHadLyfM6BCZLRRpkmlHuVtqcVjHoZ4oR7FKXAPYG9mX8z8VpN00O7I1ojGPa0n2YnsrphZOluaLm6jVzQXxwT6QjMrt1tdzp2hKQp5wUElAtERU9rmZajmxe6ac9Nx7NNz3Gb7QvnWWs8AOPStzRpmtoWVMl7WixE7hnGer1urtvNjC2MlmlaxuPNZIZjSJHWv9xkVAVi/a09boaAIUlwE2epcWkc2FyG3JuRBUWiYLCNFZ6KZRqma0ibkJPFF60+C2FAo6wSB4hmlGCUkF9I1ecGRJyFDT9ZZIyIOD2ZhGUqxzqUWMeWTb9oxiG0Mx0dIGQc6TxG1tbXFCJgQDE07qdBT/tyXteqo3OGKI8ylvJD8b/hAbqCJMsh1PkurS208x1+UKn+JWAvoDgpOFnBrRrWHGHg224CPt9V4xuDiJQTwuWAllyhM/bhHYmbagzJArj4Pw3aa87GyQNKCuij4vsy7LjDQRGP0FfXQIsVmpKhf8ufehWAfeNKUbd2Ix4NZT1EmxNBq2j/eBuar68WDWJ0870tRo7VZujXk5uOfVjH/u3TkGTL5W3Hv+p+fbxxxtfskZE0Csr7yTR5eBp3B35n7Gd2PLu7vyv9yfP4ZTh5GJRdp3MzHvl/PfC2YX03E/f5cXzxYz5/zYflMyaTv6PHbxYlTjByo3x9vb4W4zlOZ89F9+ppUS7InF+U+dfkilm/LmJ+36vT2cN/qNvd+Vnx8gpY7EQ1BsGwMZJdQuJzMlMaEupRZerliny4ACq0vjqluMMrJN2R0JM93MiWLIzTsiy75TuWM/SvTadtdlzXGpn+6Nod7Uhmg+II4iCjEVGxFOVuxuZzgDj1ONAQmL7KCsl0XPvE4xAJ1AjoVF6CjHKYZ5KeLeYwjFLWWccr8rqQ44eWLs1NV2vcZuKO3jE/EsAOObl7wMlTwCQnoIhbzTWXg82FrMUSrQqRWM0ValIoJLUzxbJey+46BidpnoBCaqRZWCTQzOO8qozBN9+WjjCvtNPreXXbTuZ1/G9XAmkTEmXAVS5XINsIHzwu9i6Rkwlb1n7CO/d+ERJ1sWQ9BSN4g+Tw158xUfNRz4jM6Odg9tPa4a7Nzz7+/qTxCSjjuB51oHBF9sLunm75CEja6O+6uURWc9ksVquiaqBttw0m3RuqQobZMmaAC0lsb/PsH6BG7cU46xWpgR8Fr/WHEAsR05lAAlI5cI1KPGNtmAFXa0Mgb0p57k5yEFKWTkApPtINErnyKMSfbkXYw8pOqr/Jzzpj4Z+OfeBrL47MU24NgtCFktQL8nZiLnAm3RLJfRnbd/6Rg4+CHyrrItdYhByol0LA6T8NRWo9DWGcFVQEQ61S7BNthVO85eD9MXrnpuLyerkj/77d6aQaAQxyJeSk8q/eaE9dAbrYI+tt0BN8bX/G14fo+u/U7zV7dTqe8f5v</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB521142A415DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB521142A415DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB521142A515DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB521142A515DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_111420</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150604_111430</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150604_111430</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150604_111430</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtc6JIEP4rFvtxCwGFKFS0img8uTLJrppski9bk6GRycGAM4OS/fU7g8qqiTnvPlHd9HQ//TLP9CVHadLyfM6BCZLRRpkmlHuVtqcVjHoZ4oR7FKXAPYG9mX8z8VpN00O7I1ojGPa0n2YnsrphZOluaLm6jVzQXxwT6QjMrt1tdzp2hKQp5wUElAtERU9rmZajmxe6ac9Nx7NNz3Gb7QvnWWs8AOPStzRpmtoWVMl7WixE7hnGer1urtvNjC2MlmlaxuPNZIZjSJHWv9xkVAVi/a09boaAIUlwE2epcWkc2FyG3JuRBUWiYLCNFZ6KZRqma0ibkJPFF60+C2FAo6wSB4hmlGCUkF9I1ecGRJyFDT9ZZIyIOD2ZhGUqxzqUWMeWTb9oxiG0Mx0dIGQc6TxG1tbXFCJgQDE07qdBT/tyXteqo3OGKI8ylvJD8b/hAbqCJMsh1PkurS208x1+UKn+JWAvoDgpOFnBrRrWHGHg224CPt9V4xuDiJQTwuWAllyhM/bhHYmbagzJArj4Pw3aa87GyQNKCuij4vsy7LjDQRGP0FfXQIsVmpKhf8ufehWAfeNKUbd2Ix4NZT1EmxNBq2j/eBuar68WDWJ0870tRo7VZujXk5uOfVjH/u3TkGTL5W3Hv+p+fbxxxtfskZE0Csr7yTR5eBp3B35n7Gd2PLu7vyv9yfP4ZTh5GJRdp3MzHvl/PfC2YX03E/f5cXzxYz5/zYflMyaTv6PHbxYlTjByo3x9vb4W4zlOZ89F9+ppUS7InF+U+dfkilm/LmJ+36vT2cN/qNvd+Vnx8gpY7EQ1BsGwMZJdQuJzMlMaEupRZerliny4ACq0vjqluMMrJN2R0JM93MiWLIzTsiy75TuWM/SvTadtdlzXGpn+6Nod7Uhmg+II4iCjEVGxFOVuxuZzgDj1ONAQmL7KCsl0XPvE4xAJ1AjoVF6CjHKYZ5KeLeYwjFLWWccr8rqQ44eWLs1NV2vcZuKO3jE/EsAOObl7wMlTwCQnoIhbzTWXg82FrMUSrQqRWM0ValIoJLUzxbJey+46BidpnoBCaqRZWCTQzOO8qozBN9+WjjCvtNPreXXbTuZ1/G9XAmkTEmXAVS5XINsIHzwu9i6Rkwlb1n7CO/d+ERJ1sWQ9BSN4g+Tw158xUfNRz4jM6Odg9tPa4a7Nzz7+/qTxCSjjuB51oHBF9sLunm75CEja6O+6uURWc9ksVquiaqBttw0m3RuqQobZMmaAC0lsb/PsH6BG7cU46xWpgR8Fr/WHEAsR05lAAlI5cI1KPGNtmAFXa0Mgb0p57k5yEFKWTkApPtINErnyKMSfbkXYw8pOqr/Jzzpj4Z+OfeBrL47MU24NgtCFktQL8nZiLnAm3RLJfRnbd/6Rg4+CHyrrItdYhByol0LA6T8NRWo9DWGcFVQEQ61S7BNthVO85eD9MXrnpuLyerkj/77d6aQaAQxyJeSk8q/eaE9dAbrYI+tt0BN8bX/G14fo+u/U7zV7dTqe8f5v</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17AB521142A415DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbU+JKEP4rVPZxK+QCUUkJVQjiZgVFQHflxRomHRhNJiEzgeCvPzMBIkHgcM5Tqjs93V9f5pu+ZijwTbvJGMSchLSUBj5ldqatK0lM7RAxwmyKAmA2x/aw2evaZlm30faIUnLadeXN0HHlEnlYBRPparVm1tTJpKKrF7hyZXlmDaMqFqaMJeBQxhHldcXUDUvVL1S9OtItu2rYhlWuVmpjpfQCMRO+hUlZVzagUlZXZpxHtqYtl8vyslIO46lm6rqh/e11h3gGAVIa1+uMskBxY2OPyy5g8H1cxmGgXWsFm2uX2UMypYgnMWxiucdi6Zpe04SNy8j0h5KfBdehXpiJLURDSjDyySeS9ekBn4VuqelPw5jwWXA0CUOXjlVIsYqNKv2haEVoZzoqIIwZUtkMGRtfA/AgBoqh9Dxw6sqP87qWHR3FiDIvjANWFP8bHqAL8MMIXJVt09pAO9/hgUo1rgHbDsV+wsgCHuSwRggD23QT8PmuSv0YPJJ2CRMDmjKJTtuFtyeuq9EmU2D8/zRopzlrJy/IT6BhtYjTvE/98Yvb88OPQa//Z3ozrOjG9KmeAdg1zhR5a9fi3lDmQ7Q+gZ4n6c/EeJq9zv+kTtJdua1o/LL4/GC99y66H/NfbOyZVvj0Pve6eBzVpuj9Ie0v+O9uD90w1r0irt8b0rt7z+vyeJJcPFl6FdFKOkmCXxfEu5sBHz4GV4Ti3+1lOnoVh0av7mN/5cDCNfwRRc+d2cs9D/DPB+J35rHldB4Y6f59qj32tNklInf3lhb1l/U8nR38Rd32zg+TyTtgvhXlGDjtUkd0CfHTZCY1xFW9zNSOJPkwDpQrDXlKcoedCLojri16uJaNy+aNZRpG1ew0DavdvNWtin5Zqxkdvdm5rXW2JLNGsQexFVKPyFiSctdjcxogDmwG1IVYXYSJYDqmnPDYRhyVHDoQlyCkDEahoGdIVn6lEoSJP0fGtBavyHL5uVwhwckPIX+kj3HT4xAXOfmqwMkDwCQiIIlbzjUTg824qMUcLRLuG+UFKlNIBLXHkmVts3plaYwEkQ8SqRaEbuJDOZpFWWU0tv6aKsIs0w5uR9ltO5rX/r9tCYSNS6QBk7ncgGgjHHhc9G0iRxM2jN2Et+6biUvkxRL15DHBayTFX19jIucjnxGR0Vtr+GZscefmZx//flI7AUrbr0ceyF2QnbDbp1s8AoI2Gttuiskoz8vJYpFkDaxWK1os3GuyQppuakPAiSC21Sj8AKrlXrSzXpEc+F7wXF+EmPAZHXLEIRADV8rEM9aGITC5NjjipqTn7iSFkKJ0HFJ+SNfyxcojEZ/cirCNpZ1Q98VnGcbuV8cO+NqJI/IUWwMndCol+YKsjswFDoVbIrgvjHedH3JwKHhRmRc5x8LFQE0SDsf/lCSp1RWEcZhQ7rSVTLFLtBlOvorA/jL65ibj8ny5I/++3akkGwEMYiVkJPMv32hbXgE63SHrTdDDfN2snuLrIrrGN/V3zU6d9me88Q8=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17AB521142FA15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17AB521142FA15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_111430</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17AB521142FB15DAE05307991F0AFE9F</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00030_ACCESS_UVTC_UserName_RequestorUserBAU_Active_RequesteeFAU_ValidateEmail_Role_Retailer_200_OK_P1" searchProperties="true" id="e56d96dc-e3b5-498a-bc1c-5c6d4c2a2a51"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="0f3e2997-7067-4fd0-928b-98fb6073ff69"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="f134121b-91e4-4bf8-b0b9-a4bacf5590b0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="44751489-352f-49ac-8aeb-7b2a1810f8fb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU" id="1cc8f06b-6b63-4be7-8d5b-3f84d223fdfd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="2a7eef22-0390-4557-a226-59cf38b56f4e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o6EP4rjPuYMbLBBuwJzDgBUnKBEihtz0tHyGtQYsuOJXP79ZUMuEBCDuc8eXa92v32ok97zXEUVlyPc0gFjVlpFYWMu7m2qWUpc2PMKXcZjoC7grgj7+nRrZQNF++PaKVeu6n9DpyqaVtGoAcmdnTLdOq607ANvUKcoGYH9WlQq0pTzjPoMS4wE02tYpi2btR0wxobtmuZru2Ua9X6P1ppAimXvqVJ2dB2oFa8qc2FSFyElstleVktx+kMVQzDRD+fHkdkDhHWWtfbjPJAaWtnT8o+EAhDUiZxhK7Rkc21z90RnTEsshR2sfxzsQxkOEja+JzOvmjFWfB7LIhz8RazmFGCQ7rBqj5PIOaxX/LCWZxSMY/OJmEayrEOK6IT02JfNHQM7UJHRwhTjnU+x+bO1zMEkAIjUPr+3GtqXy7rWn50nGLGgziN+LH43/AAW0AYJ+DrfJ/WDtrlDj+oVOsaiNtjJMw4XUBfDWuCCfBdN4Fc7qr0LYWArh4plwO64godOoR3Im6r0aYz4OL/NOigOVsnExxm0NrcWfeIDcTauvn1NvqZAEeQPrNssxk2cwCHxrmiaO1WPBnKYoi2J77O14935pIhw/Kcm+5gWGPT+nBQs++IYDf3cJOsNsEkerQ7g4eXZChgUO+3rcVygnjtRQhrYuHeL/6z0v06e52sXvtOd/qjS9vREx70HtbBlX9fG3T5AGf4qjtuGPXp5MfmR+euW73yvHH1wRkuZv1+/J2YfQyJ9zRd1v2a1+hXQtxxKmBMx/11/aoaDduNRrNI5wD/sW5/50fZ9AWI2ItqDHrtUld2CYvPyUxpqK8HuambKPLhApjQWuqU4g43k3RHfVf2cCubde/GrpimVTU7pt32OoZdNeqOY3YNr9txunuS2aI4gXgbs4CqWIpyt2PzOUASuRyYD6m+iDPJdFz7xGMbC1zqsWd5CWLGYRxLejZrvlnNzOUsfA2Zs9lMl4Zjz23D10r9WAzYIPUCAekxJzeOOPkZCE0oKOJWc83lYHMha/GGF5kIzfIClxlkktpTxbJuxWrYiNMoCUEhRVHsZyGUk3mSVwbx7beiY8Jz7XNnnN+2s3md/tuXQNr4VBlwlcsNyDbCB4+LtU/kbMKmeZjw3r2X+VRdLFlPkVKyRXL86++YqPkoZkRm9Pt29Nvc4y7MLz7+/iT6BBQ6rUcRyF/Qg7D7p1s+ApI2WvtuvmGz/FbOFossb6BlVVEq3SNVIWRU0AhIJoltPY5fgaHCC7roFSmAnwQv9McQMzFnI4EFRHLgSrl4wdowAq7Whp68KatLd5KjkLJ0AlbiI91tKFcehfjTrYi4RNlJ9Tf5Wcap/7djH/g6iCPzlFuDoGymJPWCrM/MBYmlWyq5L04PnX/k4KPgx8qiyAUWIQdqmgk4/6ekSK2pYULijIleW8sVh0Sb4xTrBNy/Ru/c5FxeLHf037c7neYjQECuhJzm/tUb7aorwGYHZL0Leoav25/x9TG61jv1e81BnU5nvPUH</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB5211431D15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB5211431D15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB5211431E15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB5211431E15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_111521</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150604_111528</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150604_111528</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150604_111528</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc9o6EP4rjPuYMbLBBuwJzDgBUnKBEihtz0tHyGtQYsuOJXP79ZUMuEBCDuc8eXa92v32ok97zXEUVlyPc0gFjVlpFYWMu7m2qWUpc2PMKXcZjoC7grgj7+nRrZQNF++PaKVeu6n9DpyqaVtGoAcmdnTLdOq607ANvUKcoGYH9WlQq0pTzjPoMS4wE02tYpi2btR0wxobtmuZru2Ua9X6P1ppAimXvqVJ2dB2oFa8qc2FSFyElstleVktx+kMVQzDRD+fHkdkDhHWWtfbjPJAaWtnT8o+EAhDUiZxhK7Rkc21z90RnTEsshR2sfxzsQxkOEja+JzOvmjFWfB7LIhz8RazmFGCQ7rBqj5PIOaxX/LCWZxSMY/OJmEayrEOK6IT02JfNHQM7UJHRwhTjnU+x+bO1zMEkAIjUPr+3GtqXy7rWn50nGLGgziN+LH43/AAW0AYJ+DrfJ/WDtrlDj+oVOsaiNtjJMw4XUBfDWuCCfBdN4Fc7qr0LYWArh4plwO64godOoR3Im6r0aYz4OL/NOigOVsnExxm0NrcWfeIDcTauvn1NvqZAEeQPrNssxk2cwCHxrmiaO1WPBnKYoi2J77O14935pIhw/Kcm+5gWGPT+nBQs++IYDf3cJOsNsEkerQ7g4eXZChgUO+3rcVygnjtRQhrYuHeL/6z0v06e52sXvtOd/qjS9vREx70HtbBlX9fG3T5AGf4qjtuGPXp5MfmR+euW73yvHH1wRkuZv1+/J2YfQyJ9zRd1v2a1+hXQtxxKmBMx/11/aoaDduNRrNI5wD/sW5/50fZ9AWI2ItqDHrtUld2CYvPyUxpqK8HuambKPLhApjQWuqU4g43k3RHfVf2cCubde/GrpimVTU7pt32OoZdNeqOY3YNr9txunuS2aI4gXgbs4CqWIpyt2PzOUASuRyYD6m+iDPJdFz7xGMbC1zqsWd5CWLGYRxLejZrvlnNzOUsfA2Zs9lMl4Zjz23D10r9WAzYIPUCAekxJzeOOPkZCE0oKOJWc83lYHMha/GGF5kIzfIClxlkktpTxbJuxWrYiNMoCUEhRVHsZyGUk3mSVwbx7beiY8Jz7XNnnN+2s3md/tuXQNr4VBlwlcsNyDbCB4+LtU/kbMKmeZjw3r2X+VRdLFlPkVKyRXL86++YqPkoZkRm9Pt29Nvc4y7MLz7+/iT6BBQ6rUcRyF/Qg7D7p1s+ApI2WvtuvmGz/FbOFossb6BlVVEq3SNVIWRU0AhIJoltPY5fgaHCC7roFSmAnwQv9McQMzFnI4EFRHLgSrl4wdowAq7Whp68KatLd5KjkLJ0AlbiI91tKFcehfjTrYi4RNlJ9Tf5Wcap/7djH/g6iCPzlFuDoGymJPWCrM/MBYmlWyq5L04PnX/k4KPgx8qiyAUWIQdqmgk4/6ekSK2pYULijIleW8sVh0Sb4xTrBNy/Ru/c5FxeLHf037c7neYjQECuhJzm/tUb7aorwGYHZL0Leoav25/x9TG61jv1e81BnU5nvPUH</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17AB5211431D15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbc9o6EP4rjPvYMbZ84eIJzLghUJKQ5HBp0rx0VHkBEVsCSwaSX1/JgAuE5HDOk2fXq91vL/q0FwInsROEQkAqKWeldRIzEeTahpGlLOBYUBEwnIAIJAkGYe82cMp2gHdHjFK31TB+VcaoWnHGddOuuhXTszE2a+Na1XQrtRrUCYp8FylTITLoMiExkw3DsZFv2hXT9oa2H3hOgGrlGvKejdIPSIXyrUzKtrEFtRYNYyrlPLCs1WpVXrllnk4sx7aR9dS7HZApJNhoXmwyygOlza09KUdAII5JmfDEurAObC4iEQzohGGZpbCNFX0Uy7bsuqVsIkEnX4ziLERdNua5eIkZZ5TgmL5hXZ8eyCmPSmE84SmV0+TDJJCtHZuwJiZBHvtiWIfQznR0gDAV2BRTjLa++jCGFBiB0qjfbRhfzutafnSYYibGPE3Eofjf8ABbQsznEJlil9YW2vkOT1SqeQEk6DISZ4Iu4U4P6xwTENtuAjnfVekhhTFd31KhBnQtNDprH96RuKlGi05AyP/ToL3mbJz8wHEGzepji1XeXiq9p+vRt3Xaq05uFpOs5S9HopED2DfOFUVrN+LRUBZDtDkRO4kIoxlmHVlt/1O5DbE/a7sRfmmPvr523Jsrd9iZ+rfPeP0A4f0oiflT53d4xe9pp4Wu4WF80xu8rq5ni7v64/PNs+hdwzzuUKeNH5+81L58eZxUUKff74ThYDBzHWf05OMWS8VXN7yPhiPLR/3JD37JZm+uBO/nd3vmzDrpQzJg9a+P1mO18t1Dz6v2z26tUaSzh/9Qt7vzg+z3DIjciXoMuq1SW3UJy8/JTGtoZI5z02CuyUdIYNJo6lOaO4JM0R2NAtXDjYyq4TffQchzqy7yW+GV7bt2tV5HbTtsX9XbO5LZoDiCeMnZmOpYmnI3Y/M5QJIEAlgEqbnkmWI6YXzisYUlLnVZX10CzgQMuaLnlefyxULWV2/uC4JltpitfOHxRWKU7ri8Z/dpOJaQHnJy7YCT+0DonIImbj3XQg22kKoWC7zMZIzKS1xmkClqTzXLBo5X8y1Bk3kMGqmV8CiLoTyfzvPKWGLzdUxMRK7tXw3z2/ZhXsf/diVQNhHVBkLn8g1UG+HE42LvEvkwYYT2E965D7OI6oul6ilTSjZIDn/9HRM9H8WMqIx+XQ5+oR3uwvzs4+9PWp+Aso7rUQSKlnQv7O7pVo+Aoo3mrpsLjMqLcrZcZnkDPc+1UuXe0hWybMcaAMkUsb0O+Qswq/BinfWKFMCPghf6Q4iZnLKBxBISNXClXDxjbRiA0GtDV92U9bk7yUFIVToJa3lKdxmrlUcj/nQrIgHRdkr9oD4rnkZ/O3bC114clafaGiRlEy3pF+T1g7kgXLmlivt4uu/8lINTwQ+VRZELLFIN1O9Mwsd/SprUGgYmhGdMdltGrtgn2hynfJ1D8NfonZucy4vljv77dmfSfAQIqJVQ0Ny/fqMDfQXYZI+st0FP8zVqfcbXh+ia79TvNXt1Op7x5h8=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17AB5211437315DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17AB5211437315DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_111528</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17AB5211437415DAE05307991F0AFE9F</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00031_ACCESS_UVTC_UserName_RequestorUserBAU_Active_RequesteeSAU_ValidateEmail_Role_Retailer_200_OK_P1" searchProperties="true" id="4632df4a-caa3-4982-9506-514e90319121"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="b69b2212-c7d5-4cf1-acd4-b97e22908512"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="8dbabbb6-0b9a-4d49-87e0-ad4a0b1baf41"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="6d41dcaf-4c36-48e6-8eec-20b5470693c9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU" id="680bd1a2-eede-4e87-9e2c-fc41292ae6e2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="87ad3edc-e951-439f-9355-040b1e20dea6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU" id="b2e65031-45a5-4b81-9926-7eef31a7c17b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="211eb856-da59-4adb-99ac-62051a53cbeb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VynmcMl7ZXIEqwnKHGSAECOHmJaXIDYjYMlgyGL5+JAMOEGCYeXJ1u9V9etFRPzLke6ZTZQxCTgKaiX2PMifRlpUopE6AGGEORT4wh2NnUO20HTOrO+hwRMm06mXlI1f8NHRsWapVMEzVLpRKKgLbVvNF09XBdfMlHQtTxiJoUcYR5WXF1I2cqudV3R7qOcc2HSuf1fP2u5IZQciEb2GS1ZU9qJiVlRnnC0fT1ut1dm1lg3CqmbpuaONOe4Bn4COl8rjLKAkUVvb2OOsCBs/DWRz42qN2YvPoMmdAphTxKIR9LPdaLF3TS5qwcRmZPijpWXBbdBIkYg3RgBKMPLJFsj4d4LPAzVS9aRASPvOvJmHo0rEKMVaxYdMHRTuFdqejE4QhQyqbIWPvqw8TCIFiyLz2W2Xl4b6uJUeHIaJsEoQ+OxX/Gx6gK/CCBbgqO6S1h3a/wwuVqjwCdloUexEjK+jKYV0gDGzfTcD3u8r0QpiQuE2YGNCYSXTaMbwzcVeNOpkC4/+nQUfN2TkZIS+CCsdL+HoalQrbyPDIsFZtlhZW/Ic2xricADg2ThRpa3fi2VCmQ7Q7Eb4PUGFUI4Xt73qxYXbaW4jeflWX3WV127Oec+t5pzadtZ6LuBgYvc12M7VYd0zGcas/dgvDr7q3DYpz1qt/9f4cjrZWbPjtHGu6nRhmdt54a+eHfDrr/lXavnZGeo19Nf5+bRV6b532++95Ox6O3/qe7rd5vTSzwhcg1dL21/JlJFJc5dCwi93BdhotjYb1/FJO0znCf6o73PlB9DkHzA+iHINWPdMUXUL8NplJDXHVSWLqLCT5MA6UKxV5SnKHEwm6I64jeriTjUL1KWcahm2VCkauXm3oOUsX98do6tVmo9Q8kMwOxRnEWkAnRMaSlLsbm9sAse8woC6E6iqIBNMx5YbHOuIo06J9cQkCymAYCHo2cnZu6XtovpmT/Kfp02X4ZUS4YCqZbsCf6XNYnXAITzm5eMLJfcBkQUASt5xrJgabcVGLJVpF3DOyK5SlEAlqDyXLOqZdzGmM+AsPJFLND9zIg+xitkgqo7Hd11QRZom23xgmt+1qXuf/DiUQNi6RBkzm8gSijXDhcTEPiVxN2DCOEz64r0YukRdL1JOHBO+QnP76HhM5H+mMiIw+aoMP44A7Nb/7+M+T2g1Q2nk90kDuihyFPTzd4hEQtFE5dHOJjOwyG61WUdJA27a0ULjXZIU03dQGgCNBbJth8AVUS71od70iKfCz4Kn+FGLEZ3TAEQdfDFwmEe9YGwbA5NrQEjclvncnOQkpSsch5pd0NU+sPBLxza0IO1jaCXVPfNZB6H537IKvozgiT7E1cEKnUpIvyObKXOBAuCWC+4Lw2PklB5eCnyrTIqdYuBioz4jD9T8ZSWplBWEcRJS36kqiOCbaBCffLMD5NvrhJuHydLkj/77dqSQZAQxiJWQk8S/faEdeATo9Iut90Ct8nb/F16foKj/UPzVHdTqf8co/</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB5211439615DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB5211439615DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB5211439715DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB5211439715DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_111552</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150604_111627</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150604_111627</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150604_111627</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VynmcMl7ZXIEqwnKHGSAECOHmJaXIDYjYMlgyGL5+JAMOEGCYeXJ1u9V9etFRPzLke6ZTZQxCTgKaiX2PMifRlpUopE6AGGEORT4wh2NnUO20HTOrO+hwRMm06mXlI1f8NHRsWapVMEzVLpRKKgLbVvNF09XBdfMlHQtTxiJoUcYR5WXF1I2cqudV3R7qOcc2HSuf1fP2u5IZQciEb2GS1ZU9qJiVlRnnC0fT1ut1dm1lg3CqmbpuaONOe4Bn4COl8rjLKAkUVvb2OOsCBs/DWRz42qN2YvPoMmdAphTxKIR9LPdaLF3TS5qwcRmZPijpWXBbdBIkYg3RgBKMPLJFsj4d4LPAzVS9aRASPvOvJmHo0rEKMVaxYdMHRTuFdqejE4QhQyqbIWPvqw8TCIFiyLz2W2Xl4b6uJUeHIaJsEoQ+OxX/Gx6gK/CCBbgqO6S1h3a/wwuVqjwCdloUexEjK+jKYV0gDGzfTcD3u8r0QpiQuE2YGNCYSXTaMbwzcVeNOpkC4/+nQUfN2TkZIS+CCsdL+HoalQrbyPDIsFZtlhZW/Ic2xricADg2ThRpa3fi2VCmQ7Q7Eb4PUGFUI4Xt73qxYXbaW4jeflWX3WV127Oec+t5pzadtZ6LuBgYvc12M7VYd0zGcas/dgvDr7q3DYpz1qt/9f4cjrZWbPjtHGu6nRhmdt54a+eHfDrr/lXavnZGeo19Nf5+bRV6b532++95Ox6O3/qe7rd5vTSzwhcg1dL21/JlJFJc5dCwi93BdhotjYb1/FJO0znCf6o73PlB9DkHzA+iHINWPdMUXUL8NplJDXHVSWLqLCT5MA6UKxV5SnKHEwm6I64jeriTjUL1KWcahm2VCkauXm3oOUsX98do6tVmo9Q8kMwOxRnEWkAnRMaSlLsbm9sAse8woC6E6iqIBNMx5YbHOuIo06J9cQkCymAYCHo2cnZu6XtovpmT/Kfp02X4ZUS4YCqZbsCf6XNYnXAITzm5eMLJfcBkQUASt5xrJgabcVGLJVpF3DOyK5SlEAlqDyXLOqZdzGmM+AsPJFLND9zIg+xitkgqo7Hd11QRZom23xgmt+1qXuf/DiUQNi6RBkzm8gSijXDhcTEPiVxN2DCOEz64r0YukRdL1JOHBO+QnP76HhM5H+mMiIw+aoMP44A7Nb/7+M+T2g1Q2nk90kDuihyFPTzd4hEQtFE5dHOJjOwyG61WUdJA27a0ULjXZIU03dQGgCNBbJth8AVUS71od70iKfCz4Kn+FGLEZ3TAEQdfDFwmEe9YGwbA5NrQEjclvncnOQkpSsch5pd0NU+sPBLxza0IO1jaCXVPfNZB6H537IKvozgiT7E1cEKnUpIvyObKXOBAuCWC+4Lw2PklB5eCnyrTIqdYuBioz4jD9T8ZSWplBWEcRJS36kqiOCbaBCffLMD5NvrhJuHydLkj/77dqSQZAQxiJWQk8S/faEdeATo9Iut90Ct8nb/F16foKj/UPzVHdTqf8co/</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17AB5211439615DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMrKNTYIrUEW47DC5kADJJnlJCakNGmzZWDKQ+fqVDDhASJbdJ1e3W92nLzrqS4Gj0PGbQkAqWcxLqyjkws+1dSNLuR9jwYTPcQTCl8QfNm9vfKds+Xh7xCj12nXjrXbuBEFw4ZpO4LqmW63Y5kWFYtMCh1ZrnmUR11amQmTQ40JiLuuGY9meaVVNyx1Znu86vueUK0711Sg9QSqUb2VStowNqJWoG1MpEx+h5XJZXlbKcTpBjmXZ6Pn2ZkimEGGjcbnOKA+UNjb2pEyBQBiSMokjdIn2bC6p8IdswrHMUtjEol/FspBVQ8qGCjb5YRRngfZ4EOdiC/OYM4JD9gfr+tyCnMa01AwnccrkNPoyCdvSjk1YEZPYLv9hoH1oJzraQ5gKbIoptje+BhBACpxA6XHQqxs/TutafnSUYi6COI3Evvjf8ABfQBgnQE2xTWsD7XSHRyrVuATi9zgJM8EWcKeHNcEExKabQE53VbpPIWCrGybUgK6ERod24R2I62q02QSE/D8N2mnO2skTDjNoDLzfr/Sx/Tib3/6cPTnO6OH6iv4S4yd3Vs8B7BrniqK1a/FgKIshWp/ovE5fplWbnM8fX8bOYPRuWy0yGvHuc9AJn6NfXkRvatOkv+j3mzWv7z3I5fXZc9bk/Vnr1Xt+r64Gz8MJbVekM7dcO7juerPO1eL3/Z/x+T2yZwjVBu24X30Au0XhhibXCN0N/k4efrb+in6d2ZU5a4ZWd34dRHfx8HzMb14GRJ657jCUrxPnoXab/HylD/bgZVIv0tnBv6/b3vlhNv4NRG5FPQa9dqmruoTl92SmNYyaQW7qJ5p8hAQujYY+pbnDzxTdMeqrHq5l+7x55Tm27VY6LdtrNzuWV7HOazW7azW7nVp3SzJrFAcQWzEPmI6lKXc9Nt8DJJEvgFNIzUWcKaYTxjce21jiUo8P1CWIuYBRrOjZppV0Mg9kFcZeOJtm1rhCWWW1Whqlu1j2eT9tBhLSfU6+2OPkARCWMNDEredaqMEWUtVijheZDO3yApc5ZIraU82yvuNeeEiwKAlBI0VRTLMQysk0ySuDxPrrmJiIXDvojPLb9mVeh/+2JVA2lGkDoXO5AtVGOPK4uNtEvkzYtncT3rpvZpTpi6XqKVNG1kj2f32MiZ6PYkZURm+t4Zu9xV2Yn3z880n0DSh0WI8iEF2wnbDbp1s9Aoo2GttuzrFdnpezxSLLG+i6FZQq90hXCFkOGgLJFLG9j+IZcFR4QSe9IgXwg+CFfh9iJqd8KLGESA1cKRdPWBuGIPTa0FM3ZXXqTrIXUpVOwkoe07VCtfJoxN9uRcQn2k6p79VnGaf0o2NHfO3EUXmqrUEyPtGSfkHev5gLEiu3THFfnO46P+bgWPB9ZVHkAotUAzXOJHz9p6RJrW5gQuKMy17byBW7RJvjlO8J+B9Gn9zkXF4sd+zftzuT5SNAQK2EguX+9Rvt6yvAJztkvQl6nK9r1e/4eh9d45P6s2anTocz3vgH</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17AB521143EC15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17AB521143EC15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_11167</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17AB521143ED15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZdc6JKEP0rFnncQkAhKhWtwhh3NTHJVeO6edkah0YngYHMDKj59TuDyqoxud77RHXT0336Y870FUdRWHE9zoEJEtPSKgopd3NtU0sZdWPECXcpioC7Arsjb3DnVsqmi3ZHtFKv09R+Qw05Nq45et3CNd3GZk1v+PWKPgtQcOmbjj0DLE05T6FHuUBUNLWKaTm6eamb9th0XLvqWla5bjaetdIEGJe+pUnZ1LagVrypLYRIXMNYLpflZbUcs7lRMU3LmA7uRngBEdJaV5uM8kCstbXHZR8whCEu4zgyrowDmyufuyMyp0ikDLax/M9imYbZMKSNz8n8QivOgt+jQZyL14jGlGAUknek6jMAsYj9khfOY0bEIvo0CctUjnVYYR1bNr3QjENoZzo6QMg40vkCWVtfQwiAAcVQehr2mtrFeV3Lj44ZojyIWcQPxf+GB2gGYZyAr/NdWlto5zs8UanWFWC3R3GYcpLBvRrWBGHg224CPt9V6ZFBQFZ3hMsBXXGFztiHdyRuqtEhc+Di/zRorzkbJxMUptBadpwZbf9z/WvJvt2lIzHy3wfBdXSzfKs3cwD7xrmiaO1GPBrKYog2JyaP4vkebjvOrx/PyaqfPS+/L27H1ByvSTaddoOH3mptTtuZNeqvX2m/lvQhDW0jI+1u9XaYhj9t9hy9sPVstBLTSeVlSCee+Wv2o3GZPU4e0qf2/M361vb63+fOQ/UerY37wf1j5c57qAZ0OTEmtdf585Ph9L953UF78pT0OtPJANbR7B3ZdfLzLZv28eO6Xa++9ppFOnv4D3W7Oz9KZy+AxU5UY9DrlLqyS0h8TWZKQ3w9yE3dRJEPF0CF1lKnFHe4qaQ74ruyhxvZqnltp2JZtm16ltPxbkynatYaDatret2bRndHMhsURxCvYxoQFUtR7mZsvgaII5cD9YHpWZxKpuPaFx47SKBSjw7lJYgph3Es6XkVJrNlVYScxYuAzCPMsCBsRbTSfSwe6APzAgHskJLrB5Q8BEwSAoq31VhzOddcyFK8oSwVoVXOUJlCKpmdKZJ1K3bdMTiJkhAUUCOK/TSEcrJI8sIYfPOt6AjzXDu8GeeX7dO0jv/tKiBtfKIMuMqlDbKLcOJtMXeJfJqwZe0nvHPvpT5R90qWUzCCN0gOf/2dEjUexYjIjH5fj35bO9yF+dnHP540vgBlHNejCORnZC/s7uWWb4Bkjdaum2/IKr+V0yxL8wbadtVg0r2hKmSYFWMEOJW8th7Hr0CNwotx1iNSAD8KXugPIaZiQUcCCYjkwJVy8YytYQRcbQ09eVFW564kByFl6QSsxCnddSg3HoX4y6UIu1jZSfWj/Cxj5v/t2Alfe3FknnJpEITOlaQekPUnc4Fj6ZZI6ovZvvNTDk4FP1QWRS6wCDlQs1TA539KitOaGsI4TqnodbRcsc+zOU6xTsD9a/TBTU7lxW5H/n2500k+AhjkRshJ7l890a66AnS+x9XboCfputq4/IquD9G1Pqg/avbqdDzjrT8=</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>17AB5211440A15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:17AB5211440A15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20150604_111627</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>17AB5211440B15DAE05307991F0AFE9F</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e34c814a-8ac5-424b-a19a-7d3453e3b9c7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1de1e00d-487c-492d-b21b-5e895e1ee18e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00032_ACCESS_UVTC_UserName_RequestorUserBAU_Active_RequesteeOtherBAU_ValidateEmail_Role_Retailer_200_OK_P1" searchProperties="true" id="e6294191-f3af-4ea5-96c9-d0958a26d7a5"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="b77721c0-96fa-4cdc-b158-e2ca5d43ecd6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="24990414-2e5f-413f-ac5e-38bf11c283c9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="9dbbb346-a11b-49c2-be12-d016350be337"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU" id="865e8e17-795b-405a-ba15-82db9e6c674e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Second Adult BAU" id="d11e996f-e8b4-4cfb-a055-85291432be78"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Second Adult BAU" id="df85a859-a681-4cc1-b351-287e1758da4d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="21f6def9-5181-4873-96c5-3da5d488780f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtc6o6EP4rDudjB0MQbGWqM9aXc2lrj5W+f+lgCJoWAiYBtb/+JKhUbe313k/MLpvdZ1/yZM+5H0em0+YcM0ESWlnEEeVOoW1qGaNO4nPCHerHmDsCOV57cO2YVcPxN0e0itttaq/GmWFYNgr1RmgHunVmmvoYGVhvGOPTMTJPYWNsSVPOM+xSLnwqmpppQFs36rph3Rm2Y9Uc067WoPGiVR4w49K3NKka2hrUgje1qRCpA8B8Pq/Oa9WETYBpGBA8Da49NMWxr7XOVxkVgVhrbY+qAUY4ilAVJTE4Bzs25wF3PDKhvsgYXscKDsUygNEA0ibgZPJLK8/iwKVhUogdnyaUID8iH76qzwCLaRJU2tEkYURM44NJQEM51vEC6Qha9JcGdqEd6WgHIeO+zqc+XPsa4RAzTBGu3I/cpvbruK4VR++YT3mYsJjviv8ND6Y5jpIUBzrfpLWGdrzDbyrVOsfIcSmKMk5yfKOGNfUR5utuYnS8q8qQ4ZAsrgmXA7rgCh3YhrcnrqrRJRPMxf9p0FZzVk4e/CjDrbl48ybtzoDR3At62dsLHsaDC2Fd2s/NAsC2caEoW7sS94ayHKLVibR3cgKB2x9e967qveAijdnVvcvTfDluXJ6I27to7D0NyRzc2penyQka/ZPXJ++XPPfM25N2kscvaWR+oN91+/KlS0G9sfDA43L0XmvfXEIIHuKnULjoMV12aHf6EpKw0683pstgOYSwz16mNh127gfL5+Bk4Nbs0VljXJs9/x7g9PFqxtiAXSHY6y6sZPaImmU6W/h3dZs772XjN4zERlRj4HYrfdklX/xMZkpDAj0sTJ1UkQ8XmAqtpU4p7nAySXckcGQPVzI8bV/YJoSWZfag3W33DLtmnDYasG+0+71Gf0MyKxR7EDsJDYmKpSh3NTY/A0SxwzENMNPzJJNMx7UfPHZ94VdcOpKXIKEc3yWSnmEARcrtyHj/gNb4zZqGsM7PPt5yrXKTiD/0D2uHArNdTj7b4eQRRiQlWBG3mmsuB5sLWYuZn2cigtXcr1KcSWpnimUd0zqzASdxGmGFFMRJkEW4mk7TojKAr76m7iNeaEe9u+K2Hcxr/9+mBNImIMqAq1wusGwj/uZxgZtEDiYM4XbCG/ftLCDqYsl6CkbQCsnur88xUfNRzojM6LXjvcIN7tL86ONfT4IfQIH9epSBgpxshd083fIRkLTR2nRz5sPqrJrleVY00LJqgEn3QFUIGCbwMMoksS3vkndMQekFHPWKlMD3gpf6XYiZmFJP+ALHcuAqhXjE2uBhrtYGV96UxbE7yU5IWTqBF+I7XSeSK49C/ONWhByk7KR6KD/zhAWfHfvG11YcmafcGgShEyWpF2R5YC5QIt0SyX0J23b+nYPvgu8qyyKXWIQcqHEm8OE/FUVqTc1HKMmocLtaodgm2gKnWKbY+TT64qbg8nK5I/++3emkGAGE5UrISeFfvdGOugJ0skXW66AH+Lr7E1/vomt9UX/VbNVpf8ZbfwE=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB5211442D15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB5211442D15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB5211442E15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB5211442E15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_111646</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150604_111722</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150604_111722</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150604_111722</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtc6o6EP4rDudjB0MQbGWqM9aXc2lrj5W+f+lgCJoWAiYBtb/+JKhUbe313k/MLpvdZ1/yZM+5H0em0+YcM0ESWlnEEeVOoW1qGaNO4nPCHerHmDsCOV57cO2YVcPxN0e0itttaq/GmWFYNgr1RmgHunVmmvoYGVhvGOPTMTJPYWNsSVPOM+xSLnwqmpppQFs36rph3Rm2Y9Uc067WoPGiVR4w49K3NKka2hrUgje1qRCpA8B8Pq/Oa9WETYBpGBA8Da49NMWxr7XOVxkVgVhrbY+qAUY4ilAVJTE4Bzs25wF3PDKhvsgYXscKDsUygNEA0ibgZPJLK8/iwKVhUogdnyaUID8iH76qzwCLaRJU2tEkYURM44NJQEM51vEC6Qha9JcGdqEd6WgHIeO+zqc+XPsa4RAzTBGu3I/cpvbruK4VR++YT3mYsJjviv8ND6Y5jpIUBzrfpLWGdrzDbyrVOsfIcSmKMk5yfKOGNfUR5utuYnS8q8qQ4ZAsrgmXA7rgCh3YhrcnrqrRJRPMxf9p0FZzVk4e/CjDrbl48ybtzoDR3At62dsLHsaDC2Fd2s/NAsC2caEoW7sS94ayHKLVibR3cgKB2x9e967qveAijdnVvcvTfDluXJ6I27to7D0NyRzc2penyQka/ZPXJ++XPPfM25N2kscvaWR+oN91+/KlS0G9sfDA43L0XmvfXEIIHuKnULjoMV12aHf6EpKw0683pstgOYSwz16mNh127gfL5+Bk4Nbs0VljXJs9/x7g9PFqxtiAXSHY6y6sZPaImmU6W/h3dZs772XjN4zERlRj4HYrfdklX/xMZkpDAj0sTJ1UkQ8XmAqtpU4p7nAySXckcGQPVzI8bV/YJoSWZfag3W33DLtmnDYasG+0+71Gf0MyKxR7EDsJDYmKpSh3NTY/A0SxwzENMNPzJJNMx7UfPHZ94VdcOpKXIKEc3yWSnmEARcrtyHj/gNb4zZqGsM7PPt5yrXKTiD/0D2uHArNdTj7b4eQRRiQlWBG3mmsuB5sLWYuZn2cigtXcr1KcSWpnimUd0zqzASdxGmGFFMRJkEW4mk7TojKAr76m7iNeaEe9u+K2Hcxr/9+mBNImIMqAq1wusGwj/uZxgZtEDiYM4XbCG/ftLCDqYsl6CkbQCsnur88xUfNRzojM6LXjvcIN7tL86ONfT4IfQIH9epSBgpxshd083fIRkLTR2nRz5sPqrJrleVY00LJqgEn3QFUIGCbwMMoksS3vkndMQekFHPWKlMD3gpf6XYiZmFJP+ALHcuAqhXjE2uBhrtYGV96UxbE7yU5IWTqBF+I7XSeSK49C/ONWhByk7KR6KD/zhAWfHfvG11YcmafcGgShEyWpF2R5YC5QIt0SyX0J23b+nYPvgu8qyyKXWIQcqHEm8OE/FUVqTc1HKMmocLtaodgm2gKnWKbY+TT64qbg8nK5I/++3emkGAGE5UrISeFfvdGOugJ0skXW66AH+Lr7E1/vomt9UX/VbNVpf8ZbfwE=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17AB5211442D15DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZtU+o6EP4rTP14p6RvIHSEGQT1onhEQY/nfHFiukC0TUqTluKvv0mBHkD0cu+nzm43u8++5MmeCRyFjt8RAhJJOavkUciEX2hbRpown2NBhc9wBMKXxB91bge+U7V8vDliVPq9lvEChLinr6e22XglYHp1yzIxvNqmZwXNRq3u1px6U5kKkUKfCYmZbBmOZddMq25a3tiq+Z7re171tGb/NipPkAjlW5lULWMNKhctYyZl7CO0WCyqC7fKkylyLMtGz7eDEZlBhI322SqjIlDSXtuTagAEwpBUCY/QGdqxOQuEP6JThmWawDpW8FUsC1lNpGwCQacnRnkWgj6b8ELsYsYZJTikH1jX5xbkjAeVTjjlCZWz6MskbEs7NiEnJrE9dmKgXWhHOtpBmAhsihm2174eYAIJMAKVx4d+yzg5rmvF0XGCmZjwJBK74n/DAyyDkMcQmGKT1hra8Q4PVKp9BsTvMxKmgmbwQw9rjAmIdTeBHO+qMkxgQvMBFWpAc6HRoW14e+KqGj06BSH/T4O2mrNy8oTDFNrD++bv8WU3u54+MZyPFnXWH6LouTt95K0CwLZxoShbuxL3hrIcotWJLHd+Rvdo2RgOrtmc9pc3HNXD+4/BknZ/Pv393L+mddm4f3TPe92mx+CaDuWH1cmzXySqdX9RljWn+DmOpjcfF1dzeUeb185V72a58EZXl1e/77JwMpwsL94jN4wC0fuIGWk41+nFUtDx+9tfKV0McG+eubz3M0+eIxiHJItHyRAvbmcfz8GbPUTvfPw06Dz+apXpbOHf1W3u/Ch9fQMiN6Ieg36vcqm6hOX3ZKY1NDAnhakfa/IREpg02vqU5g4/VXRHA1/1cCXbp53zmmPbntdw7Vqvc2HVXOu02bQvrc7lRfNyQzIrFHsQu5xNqI6lKXc1Nt8DJJEvgAWQmBlPFdMJ4xuPPSxxpc8e1CXgTMCYK3oOYy5Ci7qTfDa1U9d7nfM0i1OaG5UfXN6xu6QzkZDscnJjh5MfgNCYgiZuPddCDbaQqhZznKUytKsZrjJIFbUnmmV9x2vUkKBRHIJGiiIepCFU41lcVAaJ1dcxMRGF9uFiXNy2L/Pa/7cpgbIJqDYQOpdzUG2EA4+Lu0nky4RtezvhjftOGlB9sVQ9ZULJCsnurz9jouejnBGV0Ut39GJvcJfmRx//fBJ9Awrt16MMFGR0K+zm6VaPgKKN9qabc2xX59U0y9KigZ7nokS5R7pCyHLQCEiqiG055u/AUOkFHfWKlMD3gpf6XYipnLGRxBIiNXCVQjxibRiB0GtDX92U/NidZCekKp2EXB7SdUO18mjE325FxCfaTqmH6rPgSfCnYwd8bcVReaqtQVI21ZJ+QZZfzAXhyi1V3MeTbeeHHBwKvqssi1xikWqgXlMJX/+paFJrGZgQnjLZ7xmFYptoC5xyGYP/x+iTm4LLy+WO/vt2Z9JiBAiolVDQwr9+o319Bdh0i6zXQQ/ztdP7jq930bU/qT9rtuq0P+PtfwA=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17AB5211448315DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17AB5211448315DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_111655</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17AB5211448415DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvO45YuMScAVqCJcMgQYCBCW4SUlZBm0GMlYMpd8/UgGHCDAsvvk6nar+/RFR/3E4SKw3TLnOBKE0cxmEVDuJtqiFkfUZZAT7lK4wNwVyO2X2y3XNiwXHo5omUa1qH085mxUcJwHPevYed2Z2LY+QQDqvmXb/iQH/CzMSVPOY9ygXEAqipptgZxuPeiWM7ByruO4dsHIg8JYywxxxKVvaWJY2h7Uhhe1mRCha5rr9dpYZw0WTU3bsoA5arf6aIYXUCs97TJKAkWlvT0yPIxwECADsYX5ZJ7YPHnc7ZMphSKO8D6Wdy2WZVoFU9p4nEx/aOlZ7DWozxKxAimjBMGAfEJVnzYWM+ZlysGURUTMFleTAJZyrOMN0hFw6A/NPIV2p6MThBGHOp9BsPfVwz6OMEU4895rFLUf93UtOTqIIOU+ixb8VPxveDBd4YCF2NP5Ia09tPsdXqhU6Qkjt0FREHOywr/UsIYQYb7vJkb3u8p0I+yTTYtwOaAbrtCZx/DOxF01qmSKufg/DTpqzs7JEAYxLrHmqPU69ivz7HPWanTfvWVrRLdsXBvMiwmAY+NEkbZ2J54NZTpEuxOrqM1eJmj8+r4Rf/nNLmLTlx74uaHD4euD/bKsI1CwWMRe/Me/t6vBMN8did+owddC4M2wRZdRTvwWk8/OdjahcwKqwXLgFUbTCIS5SnPuj1674u2tN84+t+rAL1Q+x7UujJdDB1YXtNvuNFutYf6tMH8n7e3sodMRncfaWxZNf2Ka69NROLGalTBsZjvjRjFN5wj/qe5w5/vx5B+MxEFUY9CoZuqyS1DcJjOlIZ7uJ6ZuqMiHC0yFVlKnFHe4saQ74rmyhzsZPJafczYAjlMGIFct16xc1nosFEDdKtdrhfqBZHYoziBWGPWJiqUodzc2twGihcsx9XCkr1gsmY5rNzxWoYCZBu3JS8AoxwMm6RmwOBB5shQk+BRgRu0NWNqbR+4stcwvJjq0E5V9gaNTUs6fkHIPIxISrJhbDTaXk82FLMYSrmIRAGMFDYpjye2RolnXdvI5k5NFGGAF1VwwLw6wEc7CpDQm331tHSKeaHu1QXLdriZ2/u9QA2njEWXAVS7PWPYRX3hdwCGRqwkDcJzwwX059oi6WbKgIiJoh+T019ecqAFJh0Rm9FHpf4AD7tT87uPfT5o3QJnn9UgDeStyFPbwdstXQPJG6dDNJQTG0ohXqzhpoONkzUi6N1WFTMs2+xjFktm2AzbH1Ey9mHc9Iynws+Cp/hRiLGa0L6DACzlwmUS8Y2/oY672hoa8Kpt7l5KTkLJ0kuLEJV0lkDuPQnxzLUIuUnZS3ZWfNYu8r45d8HUUR+Yp1wZB6FRJ6gnZXpkLxKRbIsmPRcfOLzm4FPxUmRY5xSLkQE1iga//yShWK2oQIRZT0ahqieKYaROcYhti98vom5uEzNPtjvz7eqeTZAQQljshJ4l/9Ui76grQ6RFb74NeJmy7eouwT9GVvqm/a47qdD7jpT8=</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>17AB521144A115DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:17AB521144A115DAE05307991F0AFE9F</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20150604_111722</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>17AB521144A215DAE05307991F0AFE9F</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e34c814a-8ac5-424b-a19a-7d3453e3b9c7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1de1e00d-487c-492d-b21b-5e895e1ee18e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00033_ACCESS_UVTC_UserName_RequestorUserSAU_Active_RequesteeSelf_ValidateEmail_Role_Retailer_200_OK_P1" searchProperties="true" id="7cdf1f07-27b1-4b1d-9489-ff6da92a4487"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="24fd16af-e7bc-4bac-b697-38049e34c314"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="cbca4b55-f55a-4303-aeae-25378b3bf5f6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="9e7b2153-a2c0-4384-bb04-e32c3d7741fe"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU" id="2f77b3c4-159a-4a37-8f49-45880e60a125"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="e78f5b0d-ce22-4b0f-af55-71bb3850368a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+o6EP4rTP3olL7QAu0IMyh4rUeRI4jgFydNA8TTJtikBfn1JylQKQKXez91drvZffYlT/aKgSg03RZjKOaYktIyCglzM21DSWLiUsAwcwmIEHM5dPutxwfXLOsu2B5RSl67obzXTACqhl9Rq6auq5bvV1XHt6FamTh+YBpGYPmOMGUsQR5hHBDeUEzdsFW9qurWQLddy3Jts1yt6m9KaYhiJnwLk7KubEAtWUOZcT53NW2xWJQXlTKNp5qIZmijx4c+nKEIKM2rdUZZoLi5sYflAEEUhrAMaaRdaQWbq4C5fTwlgCcx2sQKjsXSNd3RhE3A8PRCyc+iwCMTmok3gFCCIQjxCsj6PCI+o0GpFU5pjPksOpqEoUvHKlpCFRoWuVC0IrQzHRUQxgyobAaMja9nNEExIhCVXp69hnJxXteyo4MYEDahccSK4n/Dg0iKQjpHgcq2aW2gne/wQKWaVwi6HoFhwnCKunJY5wAitukmgue7KvViNMHLB8zEgC6ZRKftwtsT19Vo4yli/P80aKc5aydDECaoWY1WQ/z15t8FYKrdWabD5vcprY/hPW1kAHaNM0Xe2rW4N5T5EK1PjGD91e/0Rw9WuLJj/FUdd4JZhfV8OBpbnL206/WP5X33tTX27kdWbTr6nHD0Ale/ByNGB6uxbWDc8ifVQTqpaF4PB4tHY/U0bkHaY6O34dO41v89G41T4t+trtuV0eitZ4Vh+vHr12pJbpadwLv0o6HTvZyt7OtL2/zTxY93cewhrftaGf4z6pC3+1vnIejgTiNPZwd/Ube98/3E/0CQb0U5Bl67dCu6BPhpMpMaHKiTzNSdS/JhHBGuNOUpyR1uIugOB67o4Vo2aq3rmlO3q/aNrtcrTke3K7rtOMat3rq1OuaWZNYo9iDeUDLBMpak3PXYnAYII5chEqBYTWkimI4pJzy2AQcljzyLS0AJQwMq6NnQl7a/sGa+E9SmhlNzVpYRzlDqWEqpS/kTeYpbosdxkZTrBVJ+RhDPMZLMLQebiclmXBTjE6QJD41yCsoEJYLbY0mzrmnVbY3haB4iCVWLaJCEqDyfzbPSaGz9NVUAWaZ97gyy63Y0sf1/2xoImwBLAyZzuUaij+jA62JtEzmasGHsJrx130oCLG+WKCiPMVwjKf76nhM5IPmQiIzeb/rvxhZ3bn728Z8ntROgtP165IGCFO+E3b7d4hUQvNHcdvMTGOXPcpKmSdZAy6posXCvyQppuqn1EUwEs30N6B9EtNyLdtYzkgPfC57rixATPiN9DjiKxMCVMvGMvaGPmNwbPHFVlucuJYWQonQcLfkh3U0odh6J+ORaBF0o7YS6Jz4LGgffHTvgayeOyFOsDRyTqZTkE/J1ZC4gFW6xID8a7zo/5OBQ8KIyL3KOhYuB8hOOjv8pSVZrKABCmhDutZVMscu0GU7+NUfut9EPNxmZ59sd/vf1TsXZCEAkdkKGM//ykXblFSDTHbbeBD1M2Ne3pwi7iK75Q/1Ts1On/Rlv/gU=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB798565BF0839E05305991F0AF4E2</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB798565BF0839E05305991F0AF4E2</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB798565C00839E05305991F0AF4E2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB798565C00839E05305991F0AF4E2</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_111810</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150604_111824</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150604_111824</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150604_111824</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+o6EP4rTP3olL7QAu0IMyh4rUeRI4jgFydNA8TTJtikBfn1JylQKQKXez91drvZffYlT/aKgSg03RZjKOaYktIyCglzM21DSWLiUsAwcwmIEHM5dPutxwfXLOsu2B5RSl67obzXTACqhl9Rq6auq5bvV1XHt6FamTh+YBpGYPmOMGUsQR5hHBDeUEzdsFW9qurWQLddy3Jts1yt6m9KaYhiJnwLk7KubEAtWUOZcT53NW2xWJQXlTKNp5qIZmijx4c+nKEIKM2rdUZZoLi5sYflAEEUhrAMaaRdaQWbq4C5fTwlgCcx2sQKjsXSNd3RhE3A8PRCyc+iwCMTmok3gFCCIQjxCsj6PCI+o0GpFU5pjPksOpqEoUvHKlpCFRoWuVC0IrQzHRUQxgyobAaMja9nNEExIhCVXp69hnJxXteyo4MYEDahccSK4n/Dg0iKQjpHgcq2aW2gne/wQKWaVwi6HoFhwnCKunJY5wAitukmgue7KvViNMHLB8zEgC6ZRKftwtsT19Vo4yli/P80aKc5aydDECaoWY1WQ/z15t8FYKrdWabD5vcprY/hPW1kAHaNM0Xe2rW4N5T5EK1PjGD91e/0Rw9WuLJj/FUdd4JZhfV8OBpbnL206/WP5X33tTX27kdWbTr6nHD0Ale/ByNGB6uxbWDc8ifVQTqpaF4PB4tHY/U0bkHaY6O34dO41v89G41T4t+trtuV0eitZ4Vh+vHr12pJbpadwLv0o6HTvZyt7OtL2/zTxY93cewhrftaGf4z6pC3+1vnIejgTiNPZwd/Ube98/3E/0CQb0U5Bl67dCu6BPhpMpMaHKiTzNSdS/JhHBGuNOUpyR1uIugOB67o4Vo2aq3rmlO3q/aNrtcrTke3K7rtOMat3rq1OuaWZNYo9iDeUDLBMpak3PXYnAYII5chEqBYTWkimI4pJzy2AQcljzyLS0AJQwMq6NnQl7a/sGa+E9SmhlNzVpYRzlDqWEqpS/kTeYpbosdxkZTrBVJ+RhDPMZLMLQebiclmXBTjE6QJD41yCsoEJYLbY0mzrmnVbY3haB4iCVWLaJCEqDyfzbPSaGz9NVUAWaZ97gyy63Y0sf1/2xoImwBLAyZzuUaij+jA62JtEzmasGHsJrx130oCLG+WKCiPMVwjKf76nhM5IPmQiIzeb/rvxhZ3bn728Z8ntROgtP165IGCFO+E3b7d4hUQvNHcdvMTGOXPcpKmSdZAy6posXCvyQppuqn1EUwEs30N6B9EtNyLdtYzkgPfC57rixATPiN9DjiKxMCVMvGMvaGPmNwbPHFVlucuJYWQonQcLfkh3U0odh6J+ORaBF0o7YS6Jz4LGgffHTvgayeOyFOsDRyTqZTkE/J1ZC4gFW6xID8a7zo/5OBQ8KIyL3KOhYuB8hOOjv8pSVZrKABCmhDutZVMscu0GU7+NUfut9EPNxmZ59sd/vf1TsXZCEAkdkKGM//ykXblFSDTHbbeBD1M2Ne3pwi7iK75Q/1Ts1On/Rlv/gU=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17AB798565BF0839E05305991F0AF4E2</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbc6o6FP4rDvuxgwQEFaY6Y7Xdm152W3V32750YoiYFoJNwkV//UlQqdrL8ZwnJouVb33rki855TCOLK/HOWaCJLRWxBHlXmntaCmjXgI54R6FMeaeQN6od3PtWXXgwe0WreYPOtqz1bRabitwdOACpNsNiPRpqzHT3ZbVaCM7cN1GIF05T7FPuYBUdDQLmNK/qQN7DBzPdjzQrLds60mrPWDGJbZ0qQNtQ6rgHW0uxMIzjDzP63mjnrDQsAAwjcnN9QjNcQy17uk6ozIQ6278UT3ACEcRqqMkNk6NPZ/TgHsjElIoUoY3sYKvYgEDuIb0CTgJf2jVXhz4dJaUyz6kCSUIRmQFVX1usJgnQa0XhQkjYh5/mYQJFLCOC6Qj06Y/NGOf2pFAewwZhzqfQ3ODNcQzzDBFuPZn6He0H8d1rdw6ZpDyWcJivr/8b3wwzXCULHCg821aG2rHA35Sqe4pRp5PUZRykuHfalgXEGG+6SZGx0PV7hiekeKacDmgBVfsjF16B8t1NQYkxFz8nwbtNGcN8gCjFHdFc2W7ffYHtU1Is7urbO6Oe4+T0RW675QEdp1LQ9Xa9fJgKKshWu8YXEbL2LoeZK9Dlvdu25i8Gkv/hRR/+5O+71/C8GcAhr1f1MHt1mTyNgC/isYsm9zb03RqDP2LpUPjbLY4mboOnXPjToDz1VMbPKLRIsInzQTMfj4ML+/vQe6/vPROcguCuNEMRR48NC4ZYq1s3o/n4+XI/bu6HuY3J5fD0DIXcDiaNB0LPg5ur+xlCJ/4TadKZ4f/vm175kfp9AUjsV2qMfAHtQvZJSi+FzNlIYE+K129hRIfLjAVWlftUtrhpVLuSODJHq7XZqt31nLbTrNpOqDdcM+B0wCO65oXoHdhn1tbkVmzOKDYT+iMqFhKctdj8z1BFHsc0wAzPUtSqXRc+wZxAAWs+XQoD0FCOR4nUp4XU9Ze5W9hkUehmeJX28rjolgVWKv9TsQtvWW9mcBsX5Pbe5o8xIgsCFbCreaay8HmQtbiDWapiMx6BusUp1LamVJZz7LbjsFJLAdCMTXiJEgjXF/MF2VlDL7+WjpEvLQOz8flafsyr8N/2xJIn4AoB65yOcOyjfjD5WJ7zjaRLxM2zd2Et/C9NCDqYMl6CkbQmsn+r/cxUfNRzYjM6Lk/eja3vCv3o7d/3Gl8Q8o4rEcVKMjITtjt1S0vASkb3W0336BZf6unWZaWDbTthsEkvKEqZADLGGGUSmFbjpNXTI0KxTjqFqmIHwSv7PsUUzGnIwEFjuXA1crlEc+GEebq2eDLk1Ic+ybZCylLJ3AhPrP1I/nkUYy/fRUhDyk/ab6Tnzxh74l/hrUTR+YpXw2C0FCt1A2y/GIuUCJhidS+hO2CfwbwWfB9Y1XkiouQAzVNBf76T02JWkeDCCUpFf5AKw27QlvyFMsF9t6dPsCUWl497si/v+50Uo4AkqIl/Ut8dUd76gjQcEesN0E/1Wvn7OI7vd5n1/1g/mjZqdPhjHf/AQ==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17AB798566150839E05305991F0AF4E2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17AB798566150839E05305991F0AF4E2</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_111824</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17AB798566160839E05305991F0AF4E2</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00034_ACCESS_UVTC_UserName_RequestorUserSAU_Active_RequesteeFAU_ValidateEmail_Role_Retailer_200_OK_P1" searchProperties="true" id="2620cf85-43a6-46c4-965d-b5a756a6738c"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="dc05e6f4-e396-401a-8bba-e07caf4758de"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="76f2a690-79ad-4b18-b4b5-796ca8e9fca3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="256d40ab-dd27-406d-960b-7170ded48642"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU" id="8a7ea17a-bd8d-48ec-acbc-0904132f7c53"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="ccd8290b-a945-47f1-bf9e-36051c3de665"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc6pIEP4rFnlMIaCgSEWrTDR7yD3ezp68pMZhlDEw4FzQ5NfvDCpRo667T1Q3Pd1fX+abvmIgjipemzFEOU5IaRlHhHm5tqkJSrwEMMw8AmLEPA69fvvxwauUTQ9sjmglv9PU3qtj0KgD29RrTh3otmVb+rhqujoKHLfmjOvuGFnSlDGBfMI4ILypVUzL0c2abtoD0/Fsx6s45WrdftNKI0SZ9C1Nyqa2BrVkTS3kPPUMY7FYlBfVckKnRsU0LePvx4c+DFEMtNbVKqM8EG2t7WE5QBBFESzDJDaujB2bq4B5fTwlgAuK1rGCY7FMw2wY0iZgeHqhFWdR4JNJkos3gCQEQxDhL6Dq84h4mASldjRNKOZhfDQJy1SOdbSEOrRscqEZu9DOdLSDkDKgsxBYa189NEEUEYhKw57f1C7O61p+dEABYZOExmxX/G94EMlQlKQo0NkmrTW08x0eqFTrCkHPJzASDGfoSQ1rCiBi624ieL6r0gtFE7x8wEwO6JIpdMY2vD1xVY0OniLG/0+DtpqzcjICkUCth0iEs4deOLKz7pCDr1kw4/68e2fU3GYOYNs4VxStXYl7Q1kM0erEYGHBedaZO4NQfA2N+ph8TAXsdX7z18d76k/46CvB47Q7nM7D6qjt1nx7hGc0nbnx9R9B7oft4bgbZLT/Etf6w1cQtSm4wWI+qVv3zlOV/rUI+J+w3u1Yo1r266s9xPM+mN3Z12/g8umSvS5Jdhn8wmLgZPO3xnLy8JzV7u5vu8ubz9+1J1gPqrdzMLzzL7HfLNLZwr+r29z5vhjPEOQbUY2B3yndyi4BfprMlAYH+iQ39VJFPowjwrWWOqW4wxOS7nDgyR6uZKvevq43XKdWqzZMt9romk7VdBoN69Zs39rdyoZkVij2IN4kZIJVLEW5q7E5DRDGHkMkQFTPEiGZjmknPHYAByWf9OQlSAhDg0TSs8WckNlu6iKRzpZf4wgsKx+0OqNa6Snhz+SZticc0V1Odnc4uYcgTjFSxK3mmsnBZlzWYg4ywSOrnIEyQUJSO1Us61Vs1zEYjtMIKaRGnAQiQuU0TPPKGGz1regAslzb6w7y23Y0r/1/mxJImwArA6ZyuUayjejA42JtEjmasGVtJ7xx3xYBVhdL1pNTDFdIdn99j4maj2JGZEbvN/13a4O7MD/7+M+TxglQxn49ikBBhrfCbp5u+QhI2mhtujkHVnleFlkm8gbadtWg0r2hKmSYFaOPoJDE9jlIPhAxCi/GWa9IAXwveKHfhSh4SPoccBTLgSvl4hlrQx8xtTb48qYsz91JdkLK0nG05Id0N5FceRTik1sR9KCyk+oX+VkkNPju2AFfW3FknnJr4JhMlaRekM8jcwET6RZL7kvotvNDDg4F31UWRS6wcDlQY8HR8T8lRWpNDUCYCML9jpYrtok2x8k/U+R9G/1wk3N5sdzhf9/udJyPAERyJWQ496/eaE9dATLdIut10CN87Z7i6110rR/qn5qtOu3PeOsf</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB798566380839E05305991F0AF4E2</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB798566380839E05305991F0AF4E2</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB798566390839E05305991F0AF4E2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB798566390839E05305991F0AF4E2</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_111843</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150604_111854</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150604_111854</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150604_111854</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc6pIEP4rFnlMIaCgSEWrTDR7yD3ezp68pMZhlDEw4FzQ5NfvDCpRo667T1Q3Pd1fX+abvmIgjipemzFEOU5IaRlHhHm5tqkJSrwEMMw8AmLEPA69fvvxwauUTQ9sjmglv9PU3qtj0KgD29RrTh3otmVb+rhqujoKHLfmjOvuGFnSlDGBfMI4ILypVUzL0c2abtoD0/Fsx6s45WrdftNKI0SZ9C1Nyqa2BrVkTS3kPPUMY7FYlBfVckKnRsU0LePvx4c+DFEMtNbVKqM8EG2t7WE5QBBFESzDJDaujB2bq4B5fTwlgAuK1rGCY7FMw2wY0iZgeHqhFWdR4JNJkos3gCQEQxDhL6Dq84h4mASldjRNKOZhfDQJy1SOdbSEOrRscqEZu9DOdLSDkDKgsxBYa189NEEUEYhKw57f1C7O61p+dEABYZOExmxX/G94EMlQlKQo0NkmrTW08x0eqFTrCkHPJzASDGfoSQ1rCiBi624ieL6r0gtFE7x8wEwO6JIpdMY2vD1xVY0OniLG/0+DtpqzcjICkUCth0iEs4deOLKz7pCDr1kw4/68e2fU3GYOYNs4VxStXYl7Q1kM0erEYGHBedaZO4NQfA2N+ph8TAXsdX7z18d76k/46CvB47Q7nM7D6qjt1nx7hGc0nbnx9R9B7oft4bgbZLT/Etf6w1cQtSm4wWI+qVv3zlOV/rUI+J+w3u1Yo1r266s9xPM+mN3Z12/g8umSvS5Jdhn8wmLgZPO3xnLy8JzV7u5vu8ubz9+1J1gPqrdzMLzzL7HfLNLZwr+r29z5vhjPEOQbUY2B3yndyi4BfprMlAYH+iQ39VJFPowjwrWWOqW4wxOS7nDgyR6uZKvevq43XKdWqzZMt9romk7VdBoN69Zs39rdyoZkVij2IN4kZIJVLEW5q7E5DRDGHkMkQFTPEiGZjmknPHYAByWf9OQlSAhDg0TSs8WckNlu6iKRzpZf4wgsKx+0OqNa6Snhz+SZticc0V1Odnc4uYcgTjFSxK3mmsnBZlzWYg4ywSOrnIEyQUJSO1Us61Vs1zEYjtMIKaRGnAQiQuU0TPPKGGz1regAslzb6w7y23Y0r/1/mxJImwArA6ZyuUayjejA42JtEjmasGVtJ7xx3xYBVhdL1pNTDFdIdn99j4maj2JGZEbvN/13a4O7MD/7+M+TxglQxn49ikBBhrfCbp5u+QhI2mhtujkHVnleFlkm8gbadtWg0r2hKmSYFaOPoJDE9jlIPhAxCi/GWa9IAXwveKHfhSh4SPoccBTLgSvl4hlrQx8xtTb48qYsz91JdkLK0nG05Id0N5FceRTik1sR9KCyk+oX+VkkNPju2AFfW3FknnJr4JhMlaRekM8jcwET6RZL7kvotvNDDg4F31UWRS6wcDlQY8HR8T8lRWpNDUCYCML9jpYrtok2x8k/U+R9G/1wk3N5sdzhf9/udJyPAERyJWQ496/eaE9dATLdIut10CN87Z7i6110rR/qn5qtOu3PeOsf</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17AB798566380839E05305991F0AF4E2</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EP4rKPtYBSch4RIVJGjLNt1Cue7tZWWcgXgbbBo7XPrrjx0gBUp7OEdCQjMZz3xz8ee5FngeO35TCEgk5aywnsdM+Jm2bqQJ8zkWVPgMz0H4kvjDZufRd4qWj/dHjEJwWzf+ONOaU/VKFbNWCyemW3LKJvZCx5xOXGfiTgiUq54yFSKFgAmJmawbjmV7plU2LXdkeb6rfk7R8dzfRuE7JEL5ViZFy9iBWou6EUm58BFarVbFVanIkxlyLMtGPzuPQxLBHBuN621GWaCksbMnxRAIxDEpEj5H1+jI5joU/pDOGJZpArtY4UexLGTVkLIJBZ19MfKzEAZsyjPxBjPOKMExfcW6Ph2QEQ8LzXjGEyqj+YdJ2JZ2bMKamMR22RcDHUO70NERwkRgU0TY3vkawBQSYAQK40FQN75c1rXs6CjBTEx5MhfH4n/DA2wJMV9AaIp9Wjtolzs8U6nGNRA/YCROBV1CVw/rAhMQu24CudxVoZfAlK4fqVADuhYaHTqEdyJuq3FLZyDk/2nQQXO2Tr7jOIVG/8mxh14y7neh32+Ln3KwqcXdp4fmj6CeATg0zhR5a7fiyVDmQ7Q9MSLjv+Uh7d73Xid/fwQ8Tipeb9IdO6+uswzLzVboPGzK3BpdiVGP2t+eWp2H9rha+tWOmiV3crv8eXVVpl00+CpWcZNVKxub9QK3vap03QH0Ud8d/VryoVz3g2eOWh239bxs9yoP6SjyKh3ndSq58/V+9jh2Op1W34b7+2H0NJ7dOS+sxCN05T0MvnGvG/92VvU8nQP8x7r9nR+mk79A5F7UYxDcFtqqS1h+TmZaQ0Nzmpn6C00+QgKTRkOf0tzhp4ruaOirHm5lu9JsVWpVr1yu3lnVUu3O8kqWV6vZbavZdu+cPclsUZxAvOFsSnUsTbnbsfkcIJn7AlgIibnkqWI6YXzi8RZLXAjYQF0CzgSMuKJnW0ZkvbGiNC4viE1Kz1GNisiuemuj0OXyiT0lzamE5JiUq0ekPABCFxQ0c+vBFmqyhVTFeMHLVMZ2cYmLDFLF7YmmWd9xqx4SdL6IQUNFcx6mMRQX0SIrDRLbf8fERGTawd0ou24fJnb6bV8DZRNSbSB0Li1QfYQzr0tpn8iHCdv2YcJ79800pPpmqYLKhJItkuNPb3OiByQfEpXRn5vhH3uPOze/+Pj7k+gTUOi0HnmgcEkPwu7fbvUKKN5o7Lv5gu3iSzFdLtOsga5bQolyj3SFkOWgIZBUMdtmxJ+BodwLuugZyYGfBM/1xxBTGbGhxBLmauAKmXjB3jAEofeGQF2V9aVLyVFIVToJa3lOdxOrnUcj/nQtIj7RdkrdU38rnoRvHTvj6yCOylOtDZKymZb0E7L5YC4IV26pIj+eHDo/5+Bc8GNlXuQci1QDNUklfPyloFmtbmBCeMpkcGtkikOmzXDKzQL8N6N3bjIyz7c7+u/rnUmzESCgdkJBM//6kfb1FWCzA7beBT1P2KXqZ4R9jK7xTv1ec1Cn0xlv/AM=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17AB7985668E0839E05305991F0AF4E2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17AB7985668E0839E05305991F0AF4E2</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_111854</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17AB7985668F0839E05305991F0AF4E2</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00035_ACCESS_UVTC_UserName_RequestorUserSAU_Active_RequesteeBAU_ValidateEmail_Role_Retailer_200_OK_P1" searchProperties="true" id="7b6b5cb9-da88-4ca2-886a-878640eecf96"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="b21f8a64-44c4-475f-9b2d-00069c9a0187"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="519da83d-943e-4b23-a4a4-5f222ab6dae3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="a0840999-220e-4b54-a55d-8bb91a962348"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU" id="ee4d3d6b-b8c3-45c2-bbd7-6250c5a2ac7f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="f1b59dce-aa4e-48b8-bb7b-9996572f855a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU" id="68660b94-5bfd-414b-8f86-73ec77a9d2cc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="d2c0261e-fdb2-4b47-a20e-7b7cc0910e29"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbV+o6EP4rrPq4V2laWi5dwlrcPKKCG1A3+uIK6QDRNoEm5eKv30m5CCgeznnqmulk5ptLvsylwFHo+FUhIJaUs8wyCpnwU23ZSGLmcyyo8BmOQPiS+P1q+853ssjH2yNGptUoG68kN3ILKI9NHKC86ebBM4slu2h6HvJGeAgFz7OVqRAJtJiQmMmy4SDbM5U1ch+Q57t5H7lZJ198MTJPEAvlW5lkkbEBtRRlYyLl1LesxWKRXeSyPB5bDkK2NWjf9ckEImxULtcZpYHiysaeZAMgEIYkS3hkXVoHNpeB8Pt0zLBMYtjECk7FQhYqWcomEHR8YezOQtBiI56Kdcw4owSH9APr+rRBTniQqYZjHlM5iU4mYSPt2IQlMYntsgvDOoR2pqMDhLHApphge+OrByOIgRHIPPZaZePivK6lRx9izMSIx5E4FP8bHmBzCPkUAlNs09pAO9/hN5WqXALxW4yEiaBz6OhhnWICYtNNIOe7yvyOYUSXd1SoAV0Kjc7ah3ckrqvRoGMQ8v80aK85aydPOEyg0rQmuN65+SMKjW7x3vvVbdc80amCrKJyCmDfOFXsWrsWj4ZyN0TrExJ6K4ewuw/yUasV4tJLt2/ThYNuPYSCxiA/eHoeXPPZr478J3mzvcccRk6t2i+2rkL0bg3uV7f5t36vwe7RdePuhXUm1ZFToPbToM7f3fq1O3hvFh7F7aLZ9W7isejWFgiSyCuunlezzjAi3Ta/GeE/tYV4bDPZuY2LZFTq3rleUHuct18iWXIKuWf2vGps0j3Cf6jb3vl+MnwDIreiHoNWI3OluoTlz2SmNTQwR6mpP9XkIyQwaVT0Kc0dfqLojga+6uFatgvVWqFU9PL5moOKuVITeTnklUr2FapeuU1nSzJrFEcQ65yNqI6lKXc9Nj8DJJEvgAUQm3OeKKYTxg8eG1jiTIv11CXgTMADV/RsS2J/vA15bj6fBeFwJpZvC5jMl8TIdLi8Z/dxdSQhPuTk4gEn94DQKQVN3HquhRpsIVUtZnieyNDOznGWQaKoPdYs6ztu0bMEjaYhaKRWxIMkhOx0Mk0rY4n11zExEam213xIb9vJvI7/bUugbAKqDYTOpQaqjfDlcfF8b5vIyYRtez/hrftqElB9sVQ9ZUzJGsnhr88x0fOxmxGV0Wu9/2pvce/Mzz7+9aT1AyjruB67QMGc7oXdPt3qEVC0Udl2c4bt7CybzOdJ2kDXzVmxcm/pClnIsfpAEkVsqwf+DszaebHOekV2wI+C7/SHEBM5YX2JJURq4DKpeMba0Aeh14aWuinLc3eSg5CqdBKW8jtdPVQrj0b841ZEfKLtlPq3+ix4HHx27Btfe3FUnmprkJSNtaRfkNWJuSBcuaWK+3i87/w7B98FP1TuirzDItVADRMJp/9kNKmVDUwIT5hsNYxUsU+0KU65moL/afTFTcrlu+WO/vt2Z9J0BAiolVDQ1L9+o319Bdh4j6w3QU/wtf0TXx+iq3xRf9Xs1el4xit/AQ==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB798566B10839E05305991F0AF4E2</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB798566B10839E05305991F0AF4E2</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB798566B20839E05305991F0AF4E2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB798566B20839E05305991F0AF4E2</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_111920</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150604_111952</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150604_111952</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150604_111952</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbV+o6EP4rrPq4V2laWi5dwlrcPKKCG1A3+uIK6QDRNoEm5eKv30m5CCgeznnqmulk5ptLvsylwFHo+FUhIJaUs8wyCpnwU23ZSGLmcyyo8BmOQPiS+P1q+853ssjH2yNGptUoG68kN3ILKI9NHKC86ebBM4slu2h6HvJGeAgFz7OVqRAJtJiQmMmy4SDbM5U1ch+Q57t5H7lZJ198MTJPEAvlW5lkkbEBtRRlYyLl1LesxWKRXeSyPB5bDkK2NWjf9ckEImxULtcZpYHiysaeZAMgEIYkS3hkXVoHNpeB8Pt0zLBMYtjECk7FQhYqWcomEHR8YezOQtBiI56Kdcw4owSH9APr+rRBTniQqYZjHlM5iU4mYSPt2IQlMYntsgvDOoR2pqMDhLHApphge+OrByOIgRHIPPZaZePivK6lRx9izMSIx5E4FP8bHmBzCPkUAlNs09pAO9/hN5WqXALxW4yEiaBz6OhhnWICYtNNIOe7yvyOYUSXd1SoAV0Kjc7ah3ckrqvRoGMQ8v80aK85aydPOEyg0rQmuN65+SMKjW7x3vvVbdc80amCrKJyCmDfOFXsWrsWj4ZyN0TrExJ6K4ewuw/yUasV4tJLt2/ThYNuPYSCxiA/eHoeXPPZr478J3mzvcccRk6t2i+2rkL0bg3uV7f5t36vwe7RdePuhXUm1ZFToPbToM7f3fq1O3hvFh7F7aLZ9W7isejWFgiSyCuunlezzjAi3Ta/GeE/tYV4bDPZuY2LZFTq3rleUHuct18iWXIKuWf2vGps0j3Cf6jb3vl+MnwDIreiHoNWI3OluoTlz2SmNTQwR6mpP9XkIyQwaVT0Kc0dfqLojga+6uFatgvVWqFU9PL5moOKuVITeTnklUr2FapeuU1nSzJrFEcQ65yNqI6lKXc9Nj8DJJEvgAUQm3OeKKYTxg8eG1jiTIv11CXgTMADV/RsS2J/vA15bj6fBeFwJpZvC5jMl8TIdLi8Z/dxdSQhPuTk4gEn94DQKQVN3HquhRpsIVUtZnieyNDOznGWQaKoPdYs6ztu0bMEjaYhaKRWxIMkhOx0Mk0rY4n11zExEam213xIb9vJvI7/bUugbAKqDYTOpQaqjfDlcfF8b5vIyYRtez/hrftqElB9sVQ9ZUzJGsnhr88x0fOxmxGV0Wu9/2pvce/Mzz7+9aT1AyjruB67QMGc7oXdPt3qEVC0Udl2c4bt7CybzOdJ2kDXzVmxcm/pClnIsfpAEkVsqwf+DszaebHOekV2wI+C7/SHEBM5YX2JJURq4DKpeMba0Aeh14aWuinLc3eSg5CqdBKW8jtdPVQrj0b841ZEfKLtlPq3+ix4HHx27Btfe3FUnmprkJSNtaRfkNWJuSBcuaWK+3i87/w7B98FP1TuirzDItVADRMJp/9kNKmVDUwIT5hsNYxUsU+0KU65moL/afTFTcrlu+WO/vt2Z9J0BAiolVDQ1L9+o319Bdh4j6w3QU/wtf0TXx+iq3xRf9Xs1el4xit/AQ==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17AB798566B10839E05305991F0AF4E2</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbc+o4DP4rTM5jJyQBEiBTmKHQC7u0tEA5pS8d11bAh+CE2AnQX792gBQosOw+ZaTI0qeLP+uao5lfcBucQyRowHLLmc+4m2prWhwxN0CccpehGXBXYLffeOy4hbzpou0RLddu1bQPu2IiBztl3Sl4SC+VqxW9YpeKuodwkWAPkQIpSFPOY2gzLhATNa1gWrZuOrpZGpi2W3Jcq5IvWsV3LTeEiEvf0iRvahtQS17TJkKErmEsFov8opgPorFRME3LeHvs9PEEZkirX68zSgNF9Y09zhPA4Ps4j4OZcW3s2VwT7vbpmCERR7CJRU7FMg2zakgbwun4l5adBdJmXpCKTcQCRjHy6RdS9XkEMQlIruGPg4iKyexkEpapHOuwxDq2SuyXZuxDu9DRHsKII51PkLXx1QMPImAYcq+9dk37dVnX0qODCDHuBdGM74v/DQ+wBPwgBKLzbVobaJc7PFKp+jVgt82wH3OawJMa1hBh4JtuAr7cVe45Ao8uO5TLAV1yhc7YhXcgrqvRomPg4v80aKc5aydD5MdQdyJzSpp3YeN9PpYVC51+r2t37Km3CGopgF3jVJG1di0eDGU2ROsT8Wo5DZ4Xn63bitG5eWsOxe9K67H8+Jr89RT138r85pM8AKq0BnfzaptUui/3i5bX6XVC775ISANe7f7ozQpGv8fvrGuvhj0avzRGYK0Gpc9uExm9eYv0un9fvXyhsDe9fx81WgsvSTzLHPlXybjnVx8ekulVOYle35HZeViE4XB15fxxGvGI9luT2RANKy+s4/Bals4O/n3d9s73488/gMVWVGPQbuXuZJeQOE9mSkOJ7qWmbqjIhwtgQqurU4o73FjSHSWu7OFatsqNG3ldbKdsls1KsXpr2kXTrlatO7NxV7otbElmjeIAYjNgHlWxFOWux+Y8QDxzOTACkZ4EsWQ6rp3x2EIC5dqsJy9BwDgMAknPSXX+5dnhZEVKjpUUJg7mZa8aAtZyT4Hosm7U8ARE+5xc2ePkHmAaUlDEreaay8HmQtZijpJY+FY+QXkGsaT2SLGsWyhVbIPTWeiDQmrMAhL7kA8nYVoZg6+/BR1hnmp7t4P0tp3M6/DftgTShlBlwFUuNyDbCEceF3ObyMmELWs34a37RkyouliyniKieI1k/9f3mKj5yGZEZvTR7H9YW9yZ+cXHf540zoAyDuuRBSIJ3Qm7fbrlIyBpo77t5hxZ+Xk+TpI4bWCpVDQi6d5QFTLMgtEHHEtiWw2CKTAj82Jc9IpkwA+CZ/p9iLGYsL5AAmZy4HKpeMHa0Aeu1oa2vCnLS3eSvZCydAKW4piu6cuVRyE+uxVhFys7qX6Wn0UQke+OHfG1E0fmKbcGQdlYSeoFWZ2YCxxIt1RyXxDtOj/m4FjwfWVW5AyLkAP1GQs4/SenSK2mIYyDmIl2S0sVu0Sb4hSrENxvox9uUi7Pljv679udTtMRwCBXQk5T/+qNdtUVYOMdst4EPcrXzo11jq/30dV/qH9qdup0OOP1fwA=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17AB798567070839E05305991F0AF4E2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17AB798567070839E05305991F0AF4E2</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_111936</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17AB798567080839E05305991F0AF4E2</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbb+o4EP4rKH08yhUCSVSQoEAPOlBaYFu6L5VxDBgSO8QOgf76tQOkQKHL7lM0k/HMNxd/nnsGwsDy6oyhmGNKCpswIMzLtFUliYlHAcPMIyBEzOPQG9Z7Xc/SDA8cjiiFTrOqfNjQsSwEXLVsAFMtWeZEBdApqaZlOcbELjqVki9MGUtQhzAOCK8qlmHaqlFWjdLIsL1S2SsVNaNY/FspvKKYCd/CRDOUPagNqypzziNP19M01dKiRuOZbhmGqY973SGcoxAotftdRlmguLa3h5qPIAoCqEEa6vf6ic29z7whnhHAkxjtY/nXYhm64erCxmd4dqfkZ5HfIVOaiQ+AUIIhCPAnkPXpIT6nfqEezGiM+Ty8moRpSMcq2kAVmiVyp+in0G50dIIwZkBlc2DufQ3QFMWIQFT4a9CpKne3dS07OooBYVMah+xU/G94EFmjgEbIV9khrT202x1eqFTtHkGvQ2CQMLxGT3JYIwAR23cTwdtdFZ5jNMWbLmZiQDdMotOP4Z2Ju2o08Qwx/n8adNScnZNXECSo9kKxT+15B7VJK7IHM7uyepk3B8vZW1rNABwbZ4q8tTvxbCjzIdqd+BzbQwfM//RDuOi13xd2NwmXn5Pfz/2U8bDbHriYP67qz3+m0ejVXw7s9ga+6NAqj/uvb8XJq9NuN9zyeGk/vL2bDo2b9d/b93550YKT7a9tt56WnwKj0Uodv/LcrIy77Cl9c3rtSWvZMJfL8aO7CZJNOnlZmMnW9V8CfRU5q8f35rACG6vpYNSMe70UOL/MDazm6RzhP9Ud7vwwmSwQ5AdRjkGnWWiLLgH+M5lJDfbVaWbqRZJ8GEeEKzV5SnKHlwi6w74neriTzUq9UXEdu1yxbMMpui3DLhq265pto94utawDyexQnEF8oGSKZSxJubux+RkgDD2GiI9idU0TwXRM+cFjE3BQ6JCBuASUMDSigp6j1AmNIKJJFFpm6roLg/IpTmNLKTxR3if9uD7lKD7lZOeEkwcI4ggjSdxyrpkYbMZFLVZgnfDA1NZAIygR1B5LlvWskmPrDIdRgCRSPaR+EiAtmkdZZXS2+1qCcFimHbRG2W27mtf5v0MJhI2PpQGTuTSQaCO68LgUD4lcTdg0jxM+uK8nPpYXS9STxxjukJz++hoTOR/5jIiMPh6GH+YBd25+8/HvJ/UfQOnn9cgD+Wt8FPbwdItHQNBG7dDNFTC1lZas10nWwFKpqMfCvS4rpBuWPkQwEcS2HdElInruRb/pFcmBnwXP9acQEz4nQw44CsXAFTLxhrVhiJhcGzripmxu3UlOQorScbThl3QPgVh5JOIftyLoQWkn1M/ik9L4K/FLvo7iiDzF1sAxmUlJviDbK3MBqXCLBffR+Nj5JQeXgp8q8yLnWLgYqEnC0fU/BUlqVQVASBPCO00lUxwTbYaTbyPkfRl9c5Nxeb7c4X/f7lScjQBEYiVkOPMv32hPXgEyOyLrfdCLfF1umD/x9Sm62jf1d81Rnc5nvPYP</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>17AB798567250839E05305991F0AF4E2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:17AB798567250839E05305991F0AF4E2</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20150604_111952</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>17AB798567260839E05305991F0AF4E2</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e34c814a-8ac5-424b-a19a-7d3453e3b9c7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1de1e00d-487c-492d-b21b-5e895e1ee18e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00036_ACCESS_UVTC_UserName_RequestorUserSAU_Active_RequesteeOtherSAU_ValidateEmail_Role_Retailer_200_OK_P1" searchProperties="true" id="279c4f30-923c-4598-8f6c-aad5a6b531b3"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="8d7f2567-2215-4d08-a5f9-6f8db16e0014"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="77e85324-467b-468b-942e-960913a69a1e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="100be56a-0314-4990-94c3-ffe25a6f11eb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU" id="506e42d2-ffb1-41ef-b093-30657adedf3f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Second Adult SAU" id="18704b78-4217-4bd0-b3fc-3401a1ca35a0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Second Adult SAU" id="c769992b-83f1-4839-91f2-8cecc75b6a46"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="392eba10-3727-4b2f-b1d8-6e3bdc10a068"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+JIEP4rVPajFfJKSFJCFQruxhPdE3Rdv2yNkw6MJjOYmQTw199MgAgoHnefUt3p6X76ZZ7pU46y1A57nEMuCKONRZZSHlbajlbkNGSIEx5SlAEPBQ5HveFVaDfNEG2OaI2o39H+JJbbxhAnuue7ge56tqMj08O663hx7LfcdtzG0pTzAiLKBaKio9mm1dJNTzfdsdkK3XZomU3fsR+1xj3kXPqWJk1TW4Na8I42FWIWGsZ8Pm/OnSbLJ4ZtmpbxMLwa4SlkSOuerjKqAuXdtT1uxoAhTXETs8w4NXZsTmMejsiEIlHksI4VH4plGmZgSJuYk8k3rT4LcUQTVonniDJKMErJG1L1GYKYsrjRSycsJ2KaHUzCMpVjHRZYx5ZLv2nGLrQjHe0gzDnS+RRZa1+3kEAOFEPj7jbqaN+O61p1dJwjyhOWZ3xX/G94gJaQshnEOt+ktYZ2vMNPKtU9BRxGFKcFJyVcq2GdIQx83U3Ax7tq/MwhIYsrwuWALrhCZ2zD2xNX1eiTCXDxfxq01ZyVk3uUFtA1H+f+1ZJZL94gL/4avgXIDjAtZ7dnk04FYNu4UtStXYl7Q1kP0erE2OrTtkiZTwaDzLuC71cUosWj+WN48tstn/s3g9RDbvTLXnhv3y9/GU8jIwtadnERJXdPcZKOLi8evT5ZjMfDh8HSeTm5o2nbebhnL/x68YTmRfzrbRgM2d8Zv7g8KwOv9zry4Tv5HdHfIPVo5MzvzOXdJOA/xvY9eTqZj62A4CknInp4HiZG7sBbPAY679TpbOHf1W3u/Kh4egYsNqIag6jfuJBdQuJrMlMaEutJZRrOFPlwAVRoXXVKcUdYSLojcSh7uJKtdu+sHfgtr+0Gpu8EA7PlmK0gsC7M3oU7sDcks0KxB/Gc0YSoWIpyV2PzNUCchRxoDLleskIyHde+8NhHAjUieisvAaMcxkzSs++V5WLp86QkrkXmxWtp+YLEjqM1rpm4oTd5LxGQ73Kyv8PJt4DJjIAibjXXXA42F7IWr6gsRGo1S9SkUEhqzxXLhrbrtwxOslkKCqmRsbhIoTmbzqrKGHz1tXWEeaW9HYyr23Ywr/1/mxJIm5goA65yOQPZRvjkcTE3iRxM2LK2E9647xUxURdL1lPkBK+Q7P56HxM1H/WMyIz+nI/+WBvctfnRxz+eNL4AZezXow4Ul2Qr7Obplo+ApI3uppuvyGq+NouyLKoGuq5j5NK9oSpkmLYxAlxIYluO2QtQo/ZiHPWK1MD3gtf6XYiFmNKRQAIyOXCNSjxibRgBV2tDJG/K4tidZCekLJ2AhfhMd57KlUch/nIrwiFWdlL9U37mLI/fO/aJr604Mk+5NQhCJ0pSL8jywFxgJt0SyX0s33b+mYPPgu8q6yLXWIQcqKdCwOE/DUVqHQ1hzAoqor5WKbaJtsIpljMI340+uKm4vF7uyL9vdzqpRgCDXAk5qfyrNzpUV4BOtsh6HfQAX/tf8fUuuu4H9UfNVp32Z7z7Dw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>17AB798567480839E05305991F0AF4E2</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:17AB798567480839E05305991F0AF4E2</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>17AB798567490839E05305991F0AF4E2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:17AB798567490839E05305991F0AF4E2</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser_201502_20150604_112027</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>16ACF97A7D5118ACE05305991F0A9199</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150604_11219</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150604_11219</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150604_11219</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+JIEP4rVPajFfJKSFJCFQruxhPdE3Rdv2yNkw6MJjOYmQTw199MgAgoHnefUt3p6X76ZZ7pU46y1A57nEMuCKONRZZSHlbajlbkNGSIEx5SlAEPBQ5HveFVaDfNEG2OaI2o39H+JJbbxhAnuue7ge56tqMj08O663hx7LfcdtzG0pTzAiLKBaKio9mm1dJNTzfdsdkK3XZomU3fsR+1xj3kXPqWJk1TW4Na8I42FWIWGsZ8Pm/OnSbLJ4ZtmpbxMLwa4SlkSOuerjKqAuXdtT1uxoAhTXETs8w4NXZsTmMejsiEIlHksI4VH4plGmZgSJuYk8k3rT4LcUQTVonniDJKMErJG1L1GYKYsrjRSycsJ2KaHUzCMpVjHRZYx5ZLv2nGLrQjHe0gzDnS+RRZa1+3kEAOFEPj7jbqaN+O61p1dJwjyhOWZ3xX/G94gJaQshnEOt+ktYZ2vMNPKtU9BRxGFKcFJyVcq2GdIQx83U3Ax7tq/MwhIYsrwuWALrhCZ2zD2xNX1eiTCXDxfxq01ZyVk3uUFtA1H+f+1ZJZL94gL/4avgXIDjAtZ7dnk04FYNu4UtStXYl7Q1kP0erE2OrTtkiZTwaDzLuC71cUosWj+WN48tstn/s3g9RDbvTLXnhv3y9/GU8jIwtadnERJXdPcZKOLi8evT5ZjMfDh8HSeTm5o2nbebhnL/x68YTmRfzrbRgM2d8Zv7g8KwOv9zry4Tv5HdHfIPVo5MzvzOXdJOA/xvY9eTqZj62A4CknInp4HiZG7sBbPAY679TpbOHf1W3u/Kh4egYsNqIag6jfuJBdQuJrMlMaEutJZRrOFPlwAVRoXXVKcUdYSLojcSh7uJKtdu+sHfgtr+0Gpu8EA7PlmK0gsC7M3oU7sDcks0KxB/Gc0YSoWIpyV2PzNUCchRxoDLleskIyHde+8NhHAjUieisvAaMcxkzSs++V5WLp86QkrkXmxWtp+YLEjqM1rpm4oTd5LxGQ73Kyv8PJt4DJjIAibjXXXA42F7IWr6gsRGo1S9SkUEhqzxXLhrbrtwxOslkKCqmRsbhIoTmbzqrKGHz1tXWEeaW9HYyr23Ywr/1/mxJIm5goA65yOQPZRvjkcTE3iRxM2LK2E9647xUxURdL1lPkBK+Q7P56HxM1H/WMyIz+nI/+WBvctfnRxz+eNL4AZezXow4Ul2Qr7Obplo+ApI3uppuvyGq+NouyLKoGuq5j5NK9oSpkmLYxAlxIYluO2QtQo/ZiHPWK1MD3gtf6XYiFmNKRQAIyOXCNSjxibRgBV2tDJG/K4tidZCekLJ2AhfhMd57KlUch/nIrwiFWdlL9U37mLI/fO/aJr604Mk+5NQhCJ0pSL8jywFxgJt0SyX0s33b+mYPPgu8q6yLXWIQcqKdCwOE/DUVqHQ1hzAoqor5WKbaJtsIpljMI340+uKm4vF7uyL9vdzqpRgCDXAk5qfyrNzpUV4BOtsh6HfQAX/tf8fUuuu4H9UfNVp32Z7z7Dw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:17AB798567480839E05305991F0AF4E2</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0Vynm8ZbxgE3AFqkiAXGeBsCRD7ktKyA1oYstEkg3J149kwAECDDMvUN1udZ9edNRXHEWh7TU4ByZITAvLKKTcy7Q1LWHUixEn3KMoAu4J7A0ajw+eXTQ9tDmiFfxmTXszXctE7iXotn1Z0h1cAR25JUtH2K1UAsBWaWJLU84T8CkXiIqaZpuWq5tl3XSGpus5l17JKZZc+49WeAHGpW9pUjS1Naglr2kzIeaeYSwWi+KiVIzZ1LBN0zJGjw8DPIMIafWrVUZZIFZf2+OiRABhiIs4jowrY8fmKuDegEwpEgmDdazgWCzTMKuGtAk4mV5o+VkIfDqJM/EG0ZgSjELyhVR9HkHM4qDQCKcxI2IWHU3CMpVjHZZYx5ZDLzRjF9qZjnYQMo50PkPW2lcfJsCAYig89/2adnFe17KjQ4Yon8Qs4rvif8MDNIUwnkOg801aa2jnOzxQqfoVYM+nOEw4SaGjhnWOMPB1NwGf76rwxGBClg+EywFdcoXO2Ia3J66q0SRT4OL/NGirOSsnLyhMoL4cMbt3N6TjUXrLFh13iZrRvX836ISVWgZg2zhT5K1diXtDmQ/R6kSv3XtIWdDvXtvjx7vu42fzF6TvzejlWdx/3X6Elvsybr43pu6rbTScRRl+JfczsO6f/Nmrj79Ms41SPPodWM0WHwk2dXt31G61y/1J8+7LMQXqtZ5Ho/LAXNymbHj/hYaVcmcxjq9DK+ZDukjd65t+ddxui2lV3LpD5gdmmXRm3b94B//p09fu78F4ivx5s1fL09nCv6vb3PlBMv4bsNiIagz8ZqEtu4TEaTJTGhLok8zUmyvy4QKo0OrqlOIOL5F0RwJP9nAlW5eN68tqxS1fVltmpSR/3JLpVqtW22y0nZa9IZkVij2INzGdEBVLUe5qbE4DxJHHgQbA9DROJNNx7YTHJhKo4NO+vAQx5TCMJT1bOCDv5TKjJHSJlS7scM6TSRC6rlboxKJLu6wxEcB2SbmyQ8p9wGROQDG3GmwuJ5sLWYwPlCYitIopKlJIJLczRbOe7VRcg5NoHoKCakRxkIRQnM/mWWkMvvq3JdnwTNtvDbPrdjSx/W+bGkibgCgDrnK5BtlHOPC62JtEjiZsWdsJb9w3koComyULKhjBKyS7n77nRA1IPiQyo7ebwZu1wZ2bn33850njBChjvx55oCAlW2E3b7d8BSRv1Dfd/EBW8aOYpGmSNdBxSgaT7g1VIcO0jQHgRDLb5zB+B2rkXoyznpEc+F7wXL8LMREzOhBIQCQHrpCJZ+wNA+Bqb/DlVVmeu5TshJSlE7AUh3Q3odx5FOKTaxH2sLKT6if5t4hZ8N2xA7624sg85dogCJ0qST0hn0fmAsfSLZHkF7Nt54ccHAq+q8yLnGMRcqDGiYDjXwqK1WoawjhOqPCbWqbYZtoMp/icg/dt9MNNRub5dkf+fb3TSTYCGOROyEnmXz3SnroCdLrF1uughwnbqZwi7F109R/qn5qtOu3PeP0f</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>17AB7985679E0839E05305991F0AF4E2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:17AB7985679E0839E05305991F0AF4E2</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20150604_112048</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>17AB7985679F0839E05305991F0AF4E2</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZtc6o6EP4rDv3YwYCCCFOdQa2ttba1eE57zpczMQTNEQKSgLa//iaoVK3t9d5PzC6b3Wdf8mSvGIzCmuMyhlNOYlpZRyFlTqFtKVlKnRgywhwKI8wcjhzPHd07tarmwN0RpTLotZQ/yA+smm0HatA0G6ph6ZY6tQNLbTSwbyBo2+bUEKaMZXhAGYeUt5Sappuq1lA1Y6KZjmE5plmtNc3fSuUnTpnwLUyqmrIFtWYtZc554gCwWq2qq3o1Tmegpmk6eB3de2iOI6i0rzYZFYHS9tYeVX2McBiiKoojcAUObK585nhkRiHPUryN5X8VSwOaDYSNz8jsQinPYn9Ag7gQu5DGlCAYknco6zPCfB77FTecxSnh8+jLJHRNOlbxGqlIN+iFAg6hnenoAGHKoMrmUN/6esYBTjFFuPLjedBSLs7rWnF0kkLKgjiN2KH43/BgmuMwTrCvsl1aW2jnOzxRqfYVRs6AojBjJMcPclgTiDDbdhOj811VnlIckPU9YWJA10yiA/vwjsRNNXpkhhn/Pw3aa87GyU8YZrg9H7Hk1ex4k8bv7t+bH+T1bvVOxuMFuPnVKgDsGxeKsrUb8WgoyyHanFgvrM6CNtzeeJwGv+7HbmM1XBr9weODxgMCnqABVuPhtbka3fUtOn0ztOVlb/r+0vGeUR3yYT5IRujGnsV/L29zNw/y7vjSfmlo15dPySOYvufB3dDt86nuWjcpHlJr2nnVnx4eXl6imjnvWTePodvFL283g8WsMV0Y778tHwYwckeTHvJGS+92eNv3bpfz+o9Wmc4e/kPd7s572fQvRnwnyjEY9Cp90SXIvyczqSG+GhSmTiLJh3FMudKWpyR3OJmgO+I7oocbWbfcjmWLW2N1ulqzbl9rZl0zbVvva27fuK7tSGaD4ghiN6YBkbEk5W7G5nuAKHIYpj5O1TzOBNMx5RuPPchhZUCfxSWIKcOTWNCzvsjnLMHxVNNXVtQ0bLNWz2HDzJTKQ8wf6WPqBhynh5zcPODkZ4xIQrAkbjnXTAw246IWS5hnPNSrOaxSnAlqTyXLOjWjaQJGoiTEEimIYj8LcTWZJ0VlANt8aypErNA+X0+K2/ZlXsf/diUQNj6RBkzm0sGijfjE42LsEvkyYV3fT3jn3s18Ii+WqCdPCdogOfz1MSZyPsoZERn96Xp/9B3u0vzs459Pgm9AgeN6lIH8nOyF3T3d4hEQtNHedXMJ9eqymuV5VjTQMOogFe6BrBDQasDDKBPE9jaJF5iC0gs46xUpgR8FL/WHEDM+px6HHEdi4CqFeMba4GEm14aBuCnrc3eSg5CidByv+SldNxQrj0T87VaEHCTthPpJfFZx6n907ISvvTgiT7E1cEJnUpIvyNsXc4Fi4ZYI7ovTfeenHJwKfqgsi1xi4WKgphnHX/+pSFJrKRChOKN80FMKxT7RFjj5W4KdD6NPbgouL5c78u/bnUqKEUBYrISMFP7lG+3IK0Bne2S9DXqar43md3x9iK79Sf1Zs1en4xlv/wM=</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>17AB798567BC0839E05305991F0AF4E2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:17AB798567BC0839E05305991F0AF4E2</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20150604_11219</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>17AB798567BD0839E05305991F0AF4E2</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e34c814a-8ac5-424b-a19a-7d3453e3b9c7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1de1e00d-487c-492d-b21b-5e895e1ee18e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>role</con:name><con:value>nodeIdRTL</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:${#Project#nodeidRTLCS}</con:value></con:property></con:properties><con:tearDownScript>if(context.expand( '${#Project#runTeardown}' )=='true')
	{
	log.info("Executing TearDown for Suite '" + testSuite.getName() + "'");
	
	for ( testCaseResult in runner.results )
	{
	   currentTestCaseName = testCaseResult.getTestCase().name;  
	   currentTestCase = testCaseResult.getTestCase(); 
	   log.info("Current TestCase : '"+ currentTestCaseName + "'");
	   log.info("Current TestCase Status : '" + testCaseResult.getStatus().toString() + "'");
	   
	   if ( testCaseResult.getStatus().toString() == 'FAILED' )
	   {
	      log.info("Re-executing failed TC");
	      def currentRunnerTC = currentTestCase.run(null, false);
	      log.info("Status on re-execution : '" + currentRunnerTC.status + "'");
	   }
	}
	log.info("Execution of TearDown for Suite '" + testSuite.getName() + "' Completed" );
}</con:tearDownScript><con:reportParameters/></con:testSuite><con:endpointStrategy xsi:type="con:DefaultEndpointStrategy" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:endpoint mode="OVERRIDE">https://qa.p.uvvu.com:7001/${#TestCase#endPoint}</con:endpoint></con:endpointStrategy><con:requirements/><con:properties><con:property><con:name>account_oid</con:name><con:value>E608A05B1095BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>ADULT_DOB</con:name><con:value>29-Jul-94</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-08-17</con:value></con:property><con:property><con:name>ADULT_MIN_AGE</con:name><con:value>18</con:value></con:property><con:property><con:name>ALID</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_237864210.txt</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>APID</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A878916240</con:value></con:property><con:property><con:name>assertionUID</con:name><con:value>E19E3D2D6A904D06E0401F0A05994A7A</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:RET_CS_1</con:value></con:property><con:property><con:name>Batch_HostName</con:name><con:value>https://qa1.b.uvvu.com</con:value></con:property><con:property><con:name>cacheDuration</con:name><con:value>86400</con:value></con:property><con:property><con:name>CertMatchesNodeID</con:name><con:value>YES</con:value></con:property><con:property><con:name>CertMatchesNodeName</con:name><con:value>YES</con:value></con:property><con:property><con:name>certsPath_Linux</con:name><con:value>../../Certs/QALP1/</con:value></con:property><con:property><con:name>certsPath_Windows</con:name><con:value>../../Certs/QALP1/</con:value></con:property><con:property><con:name>CHILD_DOB</con:name><con:value>27-Jul-02</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-08-15</con:value></con:property><con:property><con:name>CHILD_MAX_AGE</con:name><con:value>12</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_740255950.txt</con:value></con:property><con:property><con:name>clusterNumber</con:name><con:value>1</con:value></con:property><con:property><con:name>coordinatorSchema</con:name><con:value>http://www.decellc.org/schema/2015/03/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_02</con:name><con:value>http://www.decellc.org/schema/2015/03/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_06</con:name><con:value>http://www.decellc.org/schema/2012/12/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_07</con:name><con:value>http://www.decellc.org/schema/2013/06/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_11</con:name><con:value>http://www.decellc.org/schema/2013/10/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_21</con:name><con:value>http://www.decellc.org/schema/2013/10/coordinator</con:value></con:property><con:property><con:name>coords</con:name><con:value>FALKY,COORD-10000,COORD-3034,COORD-2999,COORD-2509,COORD-627,UV-135,UV-340,Coord-2180</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-08-17</con:value></con:property><con:property><con:name>DateOfBirthXML</con:name><con:value>1999-07-19</con:value></con:property><con:property><con:name>DBHost</con:name><con:value>LP1</con:value></con:property><con:property><con:name>DBIdentifier</con:name><con:value>LP1</con:value></con:property><con:property><con:name>DBPassword</con:name><con:value>lp1db_23</con:value></con:property><con:property><con:name>DBUsername</con:name><con:value>DEQA1_APP</con:value></con:property><con:property><con:name>Device_HostName</con:name><con:value>https://qa.d.uvvu.com</con:value></con:property><con:property><con:name>disablePriority</con:name><con:value>P3,CHILD,CLG</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>enablePriorityScript</con:name><con:value>false</con:value></con:property><con:property><con:name>encodedUserID</con:name><con:value/></con:property><con:property><con:name>ENV</con:name><con:value>QALP1</con:value></con:property><con:property><con:name>envIdentifier</con:name><con:value>LP1</con:value></con:property><con:property><con:name>eTag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GeoProfile</con:name><con:value>US</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>user20130716_022720</con:value></con:property><con:property><con:name>JDBCConnStr</con:name><con:value>jdbc:oracle:thin:@stdeqp-clu2-scan.va.neustar.com:2115/stdecqa.neustar.com</con:value></con:property><con:property><con:name>JKSAliasName</con:name><con:value>qalp1</con:value></con:property><con:property><con:name>JKSPassword</con:name><con:value>testing</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Language2</con:name><con:value>de</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>maxUserName</con:name><con:value>64</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>minUserName</con:name><con:value>6</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>NODEACCID</con:name><con:value>E1AF78725D9E6410E0401F0A07997B12</con:value></con:property><con:property><con:name>nodeIdAccportal</con:name><con:value>ACCESS</con:value></con:property><con:property><con:name>nodeIdAccportal2</con:name><con:value>ACCESS_2</con:value></con:property><con:property><con:name>nodeIdAccportalCS</con:name><con:value>ACCESCS</con:value></con:property><con:property><con:name>nodeIdAccportalCS2</con:name><con:value>ACCESSCS_2</con:value></con:property><con:property><con:name>nodeIdCON</con:name><con:value>CON</con:value></con:property><con:property><con:name>nodeIdCON2</con:name><con:value>CON_2</con:value></con:property><con:property><con:name>nodeIdCONCS</con:name><con:value>CON_CS_1</con:value></con:property><con:property><con:name>nodeIdCONCS2</con:name><con:value>CON_CS_2</con:value></con:property><con:property><con:name>nodeIdCoo</con:name><con:value>COO</con:value></con:property><con:property><con:name>nodeIdCoo2</con:name><con:value>COO_2</con:value></con:property><con:property><con:name>nodeIdCoordCS</con:name><con:value>coord:cs</con:value></con:property><con:property><con:name>nodeIdDECE</con:name><con:value>DECE</con:value></con:property><con:property><con:name>nodeIdDECECS</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>nodeIdDECECS1</con:name><con:value>truststore-dece-cs</con:value></con:property><con:property><con:name>nodeIdDEV</con:name><con:value>DEV</con:value></con:property><con:property><con:name>nodeIdDEV2</con:name><con:value>DEV_2</con:value></con:property><con:property><con:name>nodeIdDEVCS</con:name><con:value>DEV_CS_1</con:value></con:property><con:property><con:name>nodeIdDEVCS2</con:name><con:value>DEV_CS_2</con:value></con:property><con:property><con:name>nodeIdDLASP</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>nodeIdDLASP2</con:name><con:value>DLASP_2</con:value></con:property><con:property><con:name>nodeIdDLASPCS</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>nodeIdDLASPCS2</con:name><con:value>DLASP_CS_2</con:value></con:property><con:property><con:name>nodeIdDSP</con:name><con:value>DSP</con:value></con:property><con:property><con:name>nodeIdDSP2</con:name><con:value>DSP_2</con:value></con:property><con:property><con:name>nodeIdDSPCS</con:name><con:value>DSP_CS_1</con:value></con:property><con:property><con:name>nodeIdDSPCS2</con:name><con:value>DSP_CS_2</con:value></con:property><con:property><con:name>nodeIdLLASP</con:name><con:value>LLASP</con:value></con:property><con:property><con:name>nodeIdLLASP2</con:name><con:value>LLASP_2</con:value></con:property><con:property><con:name>nodeIdLLASPCS</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>nodeIdLLASPCS2</con:name><con:value>LLASP_CS_2</con:value></con:property><con:property><con:name>nodeIdportal</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>nodeIdportalCS</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>nodeIdRetailerforDeviceAuthToken</con:name><con:value/></con:property><con:property><con:name>nodeIdRTL</con:name><con:value>RET</con:value></con:property><con:property><con:name>nodeIdRTL1</con:name><con:value>sriniretailer</con:value></con:property><con:property><con:name>nodeIdRTL2</con:name><con:value>RET_2</con:value></con:property><con:property><con:name>nodeIdRTLCS</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>nodeIdRTLCS1</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>nodeIdRTLCS2</con:name><con:value>RET_CS_2</con:value></con:property><con:property><con:name>nodeIdSPCLCS</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E19F934C4E6BFA99E0401F0A05993DA2</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E528648B66BDACF7E0401F0A05994DAF</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E19F95D7CFC268C9E0401F0A079952C9</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E151F333D66812AFE0401F0A07996C63</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E528808A600535F3E0401F0A07996230</con:value></con:property><con:property><con:name>OrgID</con:name><con:value>ISC_R1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3ATermsOfUse</con:value></con:property><con:property><con:name>Policy_TOU</con:name><con:value>https://qa1.c.uvvu.com/Consent/Text/US/urn:dece:type:policy:TermsOfUse:20140811/html</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>projectPath</con:name><con:value>C:\Users\rshrivastava\Desktop</con:value></con:property><con:property><con:name>Provision_HostName</con:name><con:value>https://qa1.p.uvvu.com</con:value></con:property><con:property><con:name>Query_HostName</con:name><con:value>https://qa1.q.uvvu.com</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>RandomPwdFlag</con:name><con:value/></con:property><con:property><con:name>Request_XML</con:name><con:value><![CDATA[<User UserClass="urn:dece:role:user:class:${#TestCase#Privilege}" xmlns="${#TestCase#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#"> 	<Name> 		<GivenName>${#TestCase#GivenName}</GivenName> 		<SurName>${#TestCase#SurName}</SurName> 	</Name> 	<ContactInfo> 		<PrimaryEmail> 			<Value>${#TestCase#PrimaryEmail}</Value> 			</PrimaryEmail> 			<AlternateEmail> 				<Value>${#TestCase#AlternateEmail}</Value> 				</AlternateEmail> 			<Address> 				<PostalAddress>${#TestCase#PostalAddress}</PostalAddress> 				<PostalCode>${#TestCase#PostalCode}</PostalCode> 				<Locality>${#TestCase#Locality}</Locality> 				<StateOrProvince>${#TestCase#StateOrProvince}</StateOrProvince> 				<Country>${#TestCase#Country}</Country> 			</Address> 			<TelephoneNumber>			 					<Value>${#TestCase#TelephoneNumber}</Value> 				</TelephoneNumber> 				<MobileTelephoneNumber> 					<Value>${#TestCase#MobileTelephoneNumber}</Value> 				</MobileTelephoneNumber> 	</ContactInfo> 	<Languages> 		<Language>${#TestCase#Language1}</Language> 	</Languages> 	<!-- <DateOfBirth> depricated </DateOfBirth> --> 	${#TestCase#LegalGuardian} 	<Credentials> 		<Username>${#TestCase#UserName}</Username> 		<Password ${#Project#RandomPwdFlag}>${#TestCase#password}</Password> 	</Credentials> 		${#TestCase#ResourceStatus} </User>]]></con:value></con:property><con:property><con:name>Request_XML_Buffer</con:name><con:value><![CDATA[<User UserClass="urn:dece:role:user:class:${#TestCase#Privilege}" xmlns="${#TestCase#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#"> 	<Name> 		<GivenName>${#TestCase#GivenName}</GivenName> 		<SurName>${#TestCase#SurName}</SurName> 	</Name> 	<ContactInfo> 		<PrimaryEmail> 			<Value>${#TestCase#PrimaryEmail}</Value> 			</PrimaryEmail> 			<AlternateEmail> 				<Value>${#TestCase#AlternateEmail}</Value> 				</AlternateEmail> 			<Address> 				<PostalAddress>${#TestCase#PostalAddress}</PostalAddress> 				<PostalCode>${#TestCase#PostalCode}</PostalCode> 				<Locality>${#TestCase#Locality}</Locality> 				<StateOrProvince>${#TestCase#StateOrProvince}</StateOrProvince> 				<Country>${#TestCase#Country}</Country> 			</Address> 			<TelephoneNumber>			 					<Value>${#TestCase#TelephoneNumber}</Value> 				</TelephoneNumber> 				<MobileTelephoneNumber> 					<Value>${#TestCase#MobileTelephoneNumber}</Value> 				</MobileTelephoneNumber> 	</ContactInfo> 	<Languages> 		<Language>${#TestCase#Language1}</Language> 	</Languages> 	<!-- <DateOfBirth> depricated </DateOfBirth> --> 	${#TestCase#LegalGuardian} 	<Credentials> 		<Username>${#TestCase#UserName}</Username> 		<Password ${#Project#RandomPwdFlag}>${#TestCase#password}</Password> 	</Credentials> 		${#TestCase#ResourceStatus} </User>]]></con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>runTeardown</con:name><con:value>false</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=null</con:value></con:property><con:property><con:name>SAML1</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>scriptsPath_Linux</con:name><con:value>../../GlobalScripts</con:value></con:property><con:property><con:name>scriptsPath_Windows</con:name><con:value>../../GlobalScripts</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>user20130716_022720</con:value></con:property><con:property><con:name>targerHostd</con:name><con:value>qa.d.uvvu.com</con:value></con:property><con:property><con:name>targetDeviceDomain</con:name><con:value>qa.d.uvvu.com</con:value></con:property><con:property><con:name>targetHost</con:name><con:value>qa1.p.uvvu.com</con:value></con:property><con:property><con:name>targetHostb</con:name><con:value>qa1.b.uvvu.com</con:value></con:property><con:property><con:name>targetHostC</con:name><con:value>qa1.c.uvvu.com</con:value></con:property><con:property><con:name>targetHostd</con:name><con:value>qa.d.uvvu.com</con:value></con:property><con:property><con:name>targetHostP</con:name><con:value>qa1.p.uvvu.com</con:value></con:property><con:property><con:name>targetHostq</con:name><con:value>qa1.q.uvvu.com</con:value></con:property><con:property><con:name>targetHostS</con:name><con:value>qa1.s.uvvu.com</con:value></con:property><con:property><con:name>targetPort</con:name><con:value>443</con:value></con:property><con:property><con:name>targetPortd</con:name><con:value>7001</con:value></con:property><con:property><con:name>targetPortq</con:name><con:value>443</con:value></con:property><con:property><con:name>targetSystem</con:name><con:value>LP1</con:value></con:property><con:property><con:name>targetURL</con:name><con:value>qa.p.uvvu.com:7001</con:value></con:property><con:property><con:name>targetUrlSHost</con:name><con:value>qa1.s.uvvu.com</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>TokenType_RP</con:name><con:value>urn:dece:type:token:ResetPassword</con:value></con:property><con:property><con:name>TokenType_UM</con:name><con:value>urn:dece:type:token:UnlockMe</con:value></con:property><con:property><con:name>TokenType_VE</con:name><con:value>urn:dece:type:token:ValidateEmail</con:value></con:property><con:property><con:name>TOUUrl</con:name><con:value>qa1.c.uvvu.com</con:value></con:property><con:property><con:name>TOU_AT</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_AU</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_BE</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_CA</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_CH</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_DE</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_FR</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_GB</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_IE</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_LU</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_NL</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_NZ</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_US</con:name><con:value>20140811</con:value></con:property><con:property><con:name>URLEncode</con:name><con:value>NO</con:value></con:property><con:property><con:name>urnaccount</con:name><con:value>urn:dece:accountid:org:dece:</con:value></con:property><con:property><con:name>urnError</con:name><con:value>urn:dece:errorid:org:dece:</con:value></con:property><con:property><con:name>urnNode</con:name><con:value>urn:dece:org:org:dece:</con:value></con:property><con:property><con:name>urntokenType_deviceauthtoken</con:name><con:value>urn:dece:type:tokentype:DeviceAuthToken</con:value></con:property><con:property><con:name>urntokenType_saml</con:name><con:value>urn:dece:type:tokentype:saml2</con:value></con:property><con:property><con:name>urntokenType_userpassword</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130726_035217</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>versionMajor</con:name><con:value>2015</con:value></con:property><con:property><con:name>versionMinor</con:name><con:value>02</con:value></con:property><con:property><con:name>YOUTH_DOB</con:name><con:value>28-Jul-99</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>yyyy-MM-dd</con:value></con:property><con:property><con:name>YOUTH_MIN_AGE</con:name><con:value>13</con:value></con:property><con:property><con:name>Rights_APID</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A828402846</con:value></con:property><con:property><con:name>Rights_ALID</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_233695895.txt</con:value></con:property><con:property><con:name>Rights_CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_196237681.txt</con:value></con:property><con:property><con:name>Streams_APID</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A487811501</con:value></con:property><con:property><con:name>Streams_ALID</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_368915851.txt</con:value></con:property><con:property><con:name>Streams_CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_596034053.txt</con:value></con:property><con:property><con:name>DMR_CID</con:name><con:value>urn:dece:cid:org:200002</con:value></con:property><con:property><con:name>DMR_APID</con:name><con:value>urn:dece:apid:org:200002</con:value></con:property><con:property><con:name>DMR_ALID</con:name><con:value>urn:dece:alid:org:200002</con:value></con:property><con:property><con:name>DMR_BID</con:name><con:value>urn:dece:bid:org:200002</con:value></con:property><con:property><con:name>enableFlakyScript</con:name><con:value>false</con:value></con:property><con:property><con:name>expectHTTPcontenttype</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>FLAKYSELECTOR</con:name><con:value>without_flaky</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>ï»¿CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_729880294.txt</con:value></con:property></con:properties><con:afterLoadScript/><con:wssContainer/><con:databaseConnectionContainer/><con:oAuth2ProfileContainer/><con:reporting><con:reportTemplates/><con:xmlTemplates/><con:parameters/></con:reporting><con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep"><con:script>if(testStepResult.getTestStep().config.type.toString() == "restrequest")
{
	byte [] tempByteArrRequest = testStepResult.getRawRequestData();
	String tempRequest = new String(tempByteArrRequest);

	log.info("-----------------------------&lt;" + testStepResult.getTestStep().getName() + " Request>--------------------------------");
	log.info(tempRequest);
	log.info("-----------------------------&lt;/" + testStepResult.getTestStep().getName() + " Request>--------------------------------");

	byte [] tempByteArrResponse = testStepResult.getRawResponseData();
	String tempResponse = new String(tempByteArrResponse);


	log.info("-----------------------------&lt;" + testStepResult.getTestStep().getName() + " Response>--------------------------------");
	log.info(tempResponse);
	log.info("-----------------------------&lt;/" + testStepResult.getTestStep().getName() + " Response>--------------------------------");
}</con:script></con:eventHandlers><con:eventHandlers type="TestSuiteRunListener.beforeTestCase" name="TestSuiteRunListener.beforeTestCase"><con:script>log.info("################################################################################");</con:script></con:eventHandlers><con:sensitiveInformation/></con:soapui-project>