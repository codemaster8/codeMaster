<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="R15_Backward_Compatibility_111_107" resourceRoot="${projectDir}" soapui-version="5.1.2" defaultScriptLanguage="Groovy" activeEnvironment="Default" id="c1e9a9e8-b7d9-4404-b884-53cee62f42a0" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.ProTestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="&lt;all>"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value="E:\DECE API\STS\Builds\R3\106.2.3\Reports106\STSAPI_Payload_NodeOId_TCs_R3"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">/opt/dece/soapUIReports/Build-1.1.1-1.0.8_LP2/R5_Reports2014-01-24::00-47-50/Backward_Compatibility</con:setting></con:settings><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Account" type="rest" id="8252ba06-b20f-4a82-a0b6-fd7f3523ede0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="AccountCreate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account" id="ed70a636-717d-4786-b6de-deabd446719b"><con:settings/><con:parameters/><con:method name="AccountCreate" method="POST" id="09857898-3271-43d8-a451-d5bf44ce4858"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404 403 503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400 500</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>400 500 405 403 503</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:request name="AccountCreate" mediaType="application/xml" postQueryString="false" id="ca4ff0a9-00f8-41e3-871a-d799b7db932c" sslKeystore="80080010.pem"><con:settings><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="http://www.decellc.org/schema/2010/10/dece"> 
<DisplayName>${#Project#AccountDisplayName}</DisplayName>
<Country>US</Country>
</Account>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="AccountGET" method="GET" id="09857898-3271-43d8-a451-d5bf44ce4858"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>201 303 200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404 403 503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400 500 401</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>400 500 405 403</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="AccountGET_BasicAuth" mediaType="application/xml" postQueryString="false" id="ca4ff0a9-00f8-41e3-871a-d799b7db932c" sslKeystore="500500.pem"><con:settings><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Device_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="http://www.decellc.org/schema/2010/10/dece"> 
<DisplayName>${#Project#AccountDisplayName}</DisplayName>
<Country>US</Country>
</Account>
]]></con:request><con:credentials><con:username>${#Project#UserName}</con:username><con:password>Password1</con:password><con:domain>DECE</con:domain><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request><con:request name="AccountGET_SAML" mediaType="application/xml" postQueryString="false" id="ca4ff0a9-00f8-41e3-871a-d799b7db932c" sslKeystore="500500.pem"><con:settings><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="http://www.decellc.org/schema/2010/10/dece"> 
<DisplayName>${#Project#AccountDisplayName}</DisplayName>
<Country>US</Country>
</Account>
]]></con:request><con:credentials><con:username/><con:password/><con:domain/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Account" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}" id="bda852c0-5ccd-41d2-911c-bdec0459e462"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="AccountGet" method="GET" id="5cccdc43-2b89-4e8c-88a3-390b7ef3f239"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 401 400</con:status><con:params/><con:element xmlns:urn="urn:oasis:names:tc:SAML:2.0:protocol">urn:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Account</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="AccountGet" mediaType="application/xml" sslKeystore="500500.pem" id="e1b8ad00-9ed3-4f09-980e-f2f86bdf18ca"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#NODEACCID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request><con:request name="AccountGet_BasicAuth" mediaType="application/xml" sslKeystore="500580.pem" id="e1b8ad00-9ed3-4f09-980e-f2f86bdf18ca"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@remove_empty_content">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:username>${#Project#UserName}</con:username><con:password>Password1</con:password><con:domain>DECE</con:domain><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="AB1E09D1A009474DE0401F0A07995BBC" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method><con:method name="AccountDelete" method="DELETE" id="3dd5e135-f342-47db-9631-1bec111dba45"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" sslKeystore="80080010.pem" id="7e19750b-606f-4d7d-bda7-cfa0c9074a64"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#NODEACCID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method><con:method name="AccountUpdate" method="PUT" id="5cccdc43-2b89-4e8c-88a3-390b7ef3f239"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:urn="urn:oasis:names:tc:SAML:2.0:protocol">urn:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Account</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Account</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:request name="AccountUpdate" mediaType="application/xml" sslKeystore="80080010.pem" id="e1b8ad00-9ed3-4f09-980e-f2f86bdf18ca" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="http://www.decellc.org/schema/2010/10/dece"> 
<DisplayName>${#Project#AccountDisplayName}</DisplayName>
<Country>US</Country>
</Account>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#NODEACCID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="FirstUserCreate" type="rest" id="63e68881-a234-4670-82d0-16b5421c30a4" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="FirstUserCreate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" id="9ed9c404-b207-4c25-a786-7bd711105b44"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:resource name="UserAPI" path="/{UserID}" id="8c72fe92-42e8-4bcc-bfc3-29cb8a3ca9cb"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>UserID</con:name><con:value>UserID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>UserID</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:resource name="User_StatusUpdate" path="/ResourceStatus/Current/Update" id="b0f04600-c6bc-42f8-b382-bdb9ef258eee"><con:settings/><con:parameters/><con:method name="UserStatusUpdate" method="PUT" id="5e4818b9-48a0-429e-aa1a-3379298d12be"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/06/coordinator">coor:ResourceStatus</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/06/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>303</con:status><con:params/></con:representation><con:request name="UserStatusUpdate" mediaType="application/xml" postQueryString="false" id="ae263fb2-2f71-4002-b6e4-7831863b5d6f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#Project#NODEACCID}"/>
  <con:entry key="UserID" value="${#Project#NODEUSERID}"/>
</con:parameters></con:request></con:method></con:resource><con:method name="UserGet" method="GET" id="55de7616-71c0-4cac-bade-e9aa4166e711"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/06/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/06/coordinator">coor:User</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="UserGet" mediaType="application/xml" id="86860311-fe06-418d-9e53-0c4d81aa0896" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="UserList" path="/List" id="16a08242-2ac7-42a8-b9c6-ca954b9794d4"><con:settings/><con:parameters/><con:method name="UserList" method="GET" id="e58e8f42-4a16-498a-86e7-a405a0125794"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:UserList</con:element></con:representation><con:request name="UserList" mediaType="application/xml" id="869ab87f-d5fa-4e59-8a29-1bca986023a1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="urn:dece:accountid:org:dece:${#Project#NODEACCID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource><con:method name="FirstUserCreate" method="POST" id="557bc5f3-c2ce-4146-81fc-71cdc6358536"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>404 403 500 400</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404 403 503 502</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>404 405 400 500</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="FirstUserCreate" mediaType="application/xml" postQueryString="false" id="54c781b4-bf2d-4e55-ab6c-fc7337e96457" sslKeystore="80080010.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:full" xmlns="http://www.decellc.org/schema/2010/10/dece" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
        	<GivenName>${#Project#UserName}</GivenName>
		<SurName>Harbor</SurName>
	</Name>	
	<ContactInfo>
	<PrimaryEmail>			
          <Value>shikha.gupta@neustar.biz</Value>
         <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</PrimaryEmail>
	<AlternateEmail>			
        <Value>test_+428@uvvutesting.biz</Value>			
        <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</AlternateEmail>
	<Address>
		<PostalAddress>45999 Center Oak Plaza</PostalAddress>
		<PostalCode>20166</PostalCode>
		<Locality>Sterling</Locality>
		<StateOrProvince>NJ</StateOrProvince>
                <Country>US</Country>
	</Address>
	</ContactInfo>
        <Languages>
		<Language>de</Language>	
	</Languages>
       <!-- <DateOfBirth> depricated </DateOfBirth> -->
       <Credentials> 
		<Username>NewnameShikha</Username>		  
                <Password>mypWd007</Password> 
	</Credentials>
<UserRecoveryTokens>
      <RecoveryItem>
		<QuestionID>1200</QuestionID>  
		<QuestionResponse>Turner</QuestionResponse>
       </RecoveryItem>
       <RecoveryItem>
		<QuestionID>1650</QuestionID>  
		<QuestionResponse>Phoenix</QuestionResponse>
       </RecoveryItem> 
</UserRecoveryTokens>
</User>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="urn:dece:accountid:org:${#TestCase#NODE_ACCOUNT_ID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource><con:resource name="UserDelete" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" id="b4da2587-c2fe-45c4-aa0b-7bfdda8db2c0"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:value>${#TestCase#NODE_ACCOUNT_ID}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestCase#NODE_ACCOUNT_ID}</con:default></con:parameter><con:parameter disableUrlEncoding="true"><con:name>UserID</con:name><con:value>${#TestCase#NODE_USER_ID}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestCase#NODE_USER_ID}</con:default></con:parameter></con:parameters><con:method name="DeleteUser" method="DELETE" id="02c9752d-c22c-4713-874a-3f6c2b982142"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>412</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" id="0f18fdda-5e02-4f21-8def-a3f312f61ac8"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="AddNewUser" type="rest" id="785934cf-6e29-492d-9dd8-504d1aeb0b28" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#HostName}</con:endpoint></con:endpoints><con:resource name="AddUser" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" id="a8f8ca6d-db1b-4090-9ffc-68be2d519618"><con:settings/><con:parameters/><con:resource name="UserAPI" path="/{UserID}" id="20cfed44-6bef-4e69-8937-8a0ed4466e50"><con:settings/><con:parameters><con:parameter><con:name>UserID</con:name><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="UserDelete" method="DELETE" id="ec0bb443-5d9b-4e69-b1d5-c6cf6535c7e4"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>UserID</con:name><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 500 400</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="UserDelete" mediaType="application/xml" sslKeystore="80080010.pem" id="d0bc938e-dbab-4193-8cc9-85cb4f10c8bf"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="urn:dece:accountid:org:dece:${#Project#NODEACCID}"/>
  <con:entry key="UserID" value="urn:dece:userid:org:dece:${#Project#NODEUSERID1}"/>
</con:parameters></con:request></con:method><con:method name="UserGet" method="GET" id="b4c52e6c-50f0-4ebf-b8e3-ab596e55b443"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter disableUrlEncoding="true"><con:name>UserID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 404 500 400</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:User</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>404 400 405</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="UserGet" mediaType="application/xml" sslKeystore="80080010.pem" id="0a991f82-1623-4495-b24c-9cc11cc37183"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="UserUpdate" method="PUT" id="b4c52e6c-50f0-4ebf-b8e3-ab596e55b443"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value>urn:dece:accountid:org:dece:${#Project#NODEACCID}</con:value><con:style>TEMPLATE</con:style><con:default>urn:dece:accountid:org:dece:${#Project#NODEACCID}</con:default></con:parameter><con:parameter><con:name>UserID</con:name><con:value>urn:dece:userid:org:dece:${#Project#NODEUSERID}</con:value><con:style>TEMPLATE</con:style><con:default>urn:dece:userid:org:dece:${#Project#NODEUSERID}</con:default></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400 500 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:User</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>404 503</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:User</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403 400 404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>303</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>412</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="UserUpdate" mediaType="application/xml" sslKeystore="500500.pem" id="0a991f82-1623-4495-b24c-9cc11cc37183" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:full" xmlns="http://www.decellc.org/schema/2010/10/dece" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
        	<GivenName>${#Project#UserName}</GivenName>
		<SurName>Harbor</SurName>
	</Name>	
	<ContactInfo>
	<PrimaryEmail>			
          <Value>shikha.gupta@neustar.biz</Value>
         <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</PrimaryEmail>
	<AlternateEmail>			
        <Value>test_+428@uvvutesting.biz</Value>			
        <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</AlternateEmail>
	<Address>
		<PostalAddress>45999 Center Oak Plaza</PostalAddress>
		<PostalCode>20166</PostalCode>
		<Locality>Sterling</Locality>
		<StateOrProvince>NJ</StateOrProvince>
                <Country>US</Country>
	</Address>
	</ContactInfo>
        <Languages>
		<Language>de</Language>	
	</Languages>
       <!-- <DateOfBirth> depricated </DateOfBirth> -->
       <Credentials> 
		<Username>${#Project#UserName}</Username>		  
                <Password>mypWd007</Password> 
	</Credentials>
<UserRecoveryTokens>
      <RecoveryItem>
		<QuestionID>1200</QuestionID>  
		<QuestionResponse>Turner</QuestionResponse>
       </RecoveryItem>
       <RecoveryItem>
		<QuestionID>1650</QuestionID>  
		<QuestionResponse>Phoenix</QuestionResponse>
       </RecoveryItem> 
</UserRecoveryTokens>
</User>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:method name="AddUser" method="POST" id="c8e33bf9-7e9a-4fc7-a85d-b9258d44e3b4"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:urn="urn:oasis:names:tc:SAML:2.0:protocol">urn:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:urn="urn:oasis:names:tc:SAML:2.0:protocol">urn:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="AddUser" mediaType="application/xml" postQueryString="false" sslKeystore="80080010.pem" id="8f456815-cfce-46c5-9b39-907b23b9d134"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:full" xmlns="http://www.decellc.org/schema/2010/10/dece" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
        	<GivenName>${#Project#UserName}</GivenName>
		<SurName>Harbor</SurName>
	</Name>	
	<ContactInfo>
	<PrimaryEmail>			
          <Value>shikha.gupta@neustar.biz</Value>
         <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</PrimaryEmail>
	<AlternateEmail>			
        <Value>test_+428@uvvutesting.biz</Value>			
        <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</AlternateEmail>
	<Address>
		<PostalAddress>45999 Center Oak Plaza</PostalAddress>
		<PostalCode>20166</PostalCode>
		<Locality>Sterling</Locality>
		<StateOrProvince>NJ</StateOrProvince>
                <Country>US</Country>
	</Address>
	</ContactInfo>
        <Languages>
		<Language>de</Language>	
	</Languages>
       <!-- <DateOfBirth> depricated </DateOfBirth> -->
       <Credentials> 
		<Username>${#Project#UserName}</Username>		  
                <Password>mypWd007</Password> 
	</Credentials>
<UserRecoveryTokens>
      <RecoveryItem>
		<QuestionID>1200</QuestionID>  
		<QuestionResponse>Turner</QuestionResponse>
       </RecoveryItem>
       <RecoveryItem>
		<QuestionID>1650</QuestionID>  
		<QuestionResponse>Phoenix</QuestionResponse>
       </RecoveryItem> 
</UserRecoveryTokens>
</User>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="urn:dece:accountid:org:dece:${#Project#NODEACCID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Rights Token" type="rest" id="2cc5edf0-44c3-45c0-af0b-d6e19735bdd5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="Rights Token Get_List" path="${#TestCase#endPoint}" id="80183adb-1c5a-4de7-9d84-191f16c47def"><con:settings/><con:parameters/><con:method name="Rights Token Get" method="GET" id="8b4cec3d-fe23-4572-9b38-8f6059da115f"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 404 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:RightsTokenList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:RightsToken</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" id="dc5964a7-d54c-453b-85c8-f1cc8f5c4976"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Rights Token Create" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{RIGHTSTOKEN}/RightsToken" id="483f410c-4aec-4f56-bdb8-b53566c9bb97"><con:settings/><con:parameters><con:parameter><con:name>RIGHTSTOKEN</con:name><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="Rights Token Create" method="POST" id="1c20f275-4760-4c4b-994f-d981d038615c"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="0565a9cc-8569-46e9-a479-f8aacc70fa3f"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="AccountMergeTest" type="rest" id="6ba05ee5-e87a-41e2-93b7-5fac7723d364" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="AccountMergeTest" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{SurvivingAccountID}/Merge/Test/{RetiredAccountID}" id="d3ab43df-328b-4e09-8562-58a80596481d"><con:settings/><con:parameters><con:parameter><con:name>SurvivingAccountID</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>RetiredAccountID</con:name><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="Method 1" method="POST" id="449e438d-5c8b-4814-8ea3-5b23b2d9c7fc"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="cfd0be42-a0ab-4e51-972d-c4a67c9d1208"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="AccountMerge" type="rest" id="38577162-173b-4e3b-b7a4-7084681116dd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="AccountMerge" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{SurvivingAccountID}/Merge/{RetiredAccountID}" id="6ecab418-a971-4402-baea-c83b2ded7efc"><con:settings/><con:parameters><con:parameter><con:name>SurvivingAccountID</con:name><con:value>SurvivingAccountID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>SurvivingAccountID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>RetiredAccountID</con:name><con:value>RetiredAccountID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>RetiredAccountID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" method="POST" id="4659148b-17e0-4ad5-a68e-924d516aa757"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="acbfb94a-f132-4a9c-8d15-8b85ecc78c8c" sslKeystore="7600.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 Assertion=nVdbc6pKE333V1juR8twUVSsnVQNFwlGNCBeX77CYQSUizIg6K8/A26NZif77PM9pMw00z2ruxfNmp/YCny2BzBGceJFYVWVnmv/23Sam9a6YzWasAUbLR7BRpffWOS/Lt1imSYNrU2tqmKcIjXEiRUmzzWWZpoNutlgeJNu91psj2s9sXR3VavOUIxJaLLlia5V88APca889rmWxmEvsrCHe6EVINxLYG8CtGGP7OxZV0y1l58XlOWB8YubJPseRcEnG0Hk+/AJRgH1k3rY89PGvYnnhFaSxujXmTZ+rv3yzbLsKWs+RbFDsTRNUzRPkT029pwftZfK1RnZariJLmvRCqPQg5bvna0ClIYSN7KrwHei2Evc4JvQDMXQRegGymEDMq3wR436OKBE95eRHkDG2Gpg12KuwQy0QTEKIapODfW59uPvOnjxNWMrxJsoDvCn9X+DhMIj8qM9shv4mtkV3d9H/KJcLz8R7Kkh9FPsHdGooMnegghX32O08fKhhwn5bFwt21/N8ZVhCP6Xlvyk7nES2NQXlZE8B+Hk/+nXfa8uUWaWn6KXXI2d8M2SxtrQmeTjlQnoLZx0ZnLmPJcQ7jdfQN1a/Wv9mag3Xv1y0jZd+lCfxpvhCEFXOq60bmBxC44fs4o/PATjZTte8trIkUzROvLteYtdjsRkNqGwzw0RPzeNFd1nopVOwQpKjrtOyAz4oLudniXVW2AtXEfZajaM11x/O2VSHDj1MUoWM+s4YrtuwmC3Xp/X1abHRqyhHzkNrKEB17OKQYtma7v1vZYKzJXbByl4/sjpPocirzd0KpMs/l9wNC9ZiXVbiMWk2JDXM0EvmqpK6VkUwWnigEwVgEP+tmAkOLuDu/MUPqMFoOt9IImCv5WHGtgpgJnKgquJs5mWi2cwEJzRjDiaFeCvBM2QMylbSjNdf5Uz17SV2Wmt+OnqLI80gEtn0dVkQ55JhilrGogutlyT1kq+1SZapupLqUICSHK+P9sKnyAl9yCrctqEY5cTLl0tZsTePw2D0XFtyr4maoo4OSgTdd2UdHkAjOUcsv2U+J6HwT6qLKfCndNgj7YA9TOanAnOmrnLNHPKjiTDKm3mo01TlYGm40zUy6yUipwNZtPzRy1EQRPtQM5lE7xfagFNsT+iV4sBtuZcqBkgk5zS+U3O7PEViKbTWUW81GooZ4ZsTEd9zVAzGZQ2Sc58vGZH7lpxj7Cp5wMTbO8bI+ryvB+S56FxhCfuULGUPlgHMwY2DRd6nGctosxZdTNJXw7eopVKwoyALguCDgggGhSpkfoLYCjMuPHe41kPDTf9KEBuXNGY6G13POd012uOnffRnJM2u8674r03LdulVB+y2+YOqCqy3xhXt2xjSRlS6J3b47fpAnnx8pyMOJ1pe12uYszT6UKK/I79ulhO3+r5Eurm+H0ynb+f83x02HbPfvI6Fl7jyUCTnPEIoXcM6xRt9QWzK3Hi8nVL+LQxaMRVgKMJAChbx5E9QmDhdXsh4auhyYS8QBMzRZyLygQoSl1WBUnXN32XeYfKLJ0yI02VbZ+U6bRcGH5lJQoS6RRtzVf7JdunyVixy2B6S+47+pSrDxZopY98c5aAbD/bhAxDK3v9daNlDtQKBthqNhHIWyRUUhVMrfF+QOdvszbNHHTbH0x4MG3mE3aXj11nddo5qx1pyvLu1VmawJ+ZdxxTCcXmFd2UDQ10L+9brqnTpuHDIN+vA5hLJulZ6RyZgmz0dXqaSxJ4u9iwCdgcL8/yVhPl0r8Ccs0itDiuFy5ehiNvbMopIW16R5ftmqX/lWMFxSqPHDuIQAefOSZfOCaDzaGudiUGc21xj+eZIyjyQe/MhgN+T+uL4a4i1PuUk3h+axx2M/OtPmdOWcfd6vM5r0quWA83S7e5TgTaOkMdDXYdxTN2Uthu+SdtqOnc1KP8E71FhwwPKyOVCeVmcu5TfJzWhWDlBedzs8VOg/dJelSn1htmTu76MOez7ftrm6Ji5cSdO6uj3l9EcHn5jnwekjfjZYxS9wP2YQJftdckXW8RTK7L4jusStU++ThayZ91XGHx7Mam3NrbF2IQJyhMai+FV6HheilRep7dI1/Oy1rqttg2x8gCw3dlwLZkukUzfRrQHZ5vcm3uKvYuKD5BFKNw4xVnFXL28rH+M0AY9DAKbRQ3jlEKXYRrf4hY1KuqhgZRIVGIkRkRudzuCu12h5VZmZY7Qr9NS0QLyy0R8C2O4UW+Vh1FyTgcx2CToPhRKvMPUtlA0Nt7qNDThajARFXghJTkYB3TxGeejtZTiFKiuONC9PbYVpejsBfsfVQApoLITn30tHf3ZYEofPllGxbEpbXTpulS7Xyb3+dn11KQPbZXbMBFMgIi7URfiP7WNZNvM2bY+4yv4UFqe4WoIXVNYg9ekDw++qBLwZMbV4qUrphvWz8bHsJSnzO6nWQfPXhj/O1ORCQ1EV0v14YcrKfDU3o8pmULOoWgjEl4iqHoNjVBMCWq8GRGOxRStxDUXwnyG+pPJ9/sj/jSxA0nCXmbA0KYarn8i9vYBOHiNqYSwud/e9V7OJLULUF58pVN9MmlrUD8x3sd7MFiHzG/k58siu2Pdn0R6+4ckmcxvrzQKVaF/D59wwoYkbAeGWFRfB/8qwBfHf5ovBX5hiUhbFqnCfr+SbWYTc81C8IoDRNVqpWG+3lZ4kxOe9T72PRbmFIA/7rR5PjbG81CG07I5Aqs2m2v9++bG15JF4iIF/ZKLM+1nFzOyeGhczeffwH8ekR3/ziiHzN5+c38u+Wupp/fh5d/AA=="/>
  &lt;con:entry key="Authorization" value="SAML2 Assertion=nVdbc6pKE333V1juR8twUbxVkqrhKioqiNeXrxBGQBGQAUF//RkwGs1O9tnne0iZaaZ7VncvmjWvyDh4dBcgBKPYDfyyzL9V/mcxDNmuG62a0aq3aw0S1msdkyFrcEM2yLphkpZBVcoyQgmUfRQbfvxWoUmqXiPrNaqjk81uo9UlqZdOg1lXynMYIRwab3khK+Xs4PmoWxz7VkkivxsYyEVd3zhA1I3N7hQowy7e2TVumCrvr1eUxYHRuxPHYZcgzBcLmtDzzBczOBCvxNOeVwt1p67tG3ESwY8zLfRW+fBN0/Qlrb8EkU3QJEkSZIfAeyzk2r8q76WbM7Rkfxtc15zhB75rGp57MXJQCoydwCoDzw4iN3YOP4SmCIrMQ9dgZtZMquH/qhCfBxTo/jLSE8gIGTXk4CZ8BNPgFkbQN2F5pslvlV9/18Grrx4ZPtoG0QF9Wf83SNA/QS8IoVVDt8xu6P4+4jflen+FZlf2TS9B7gmOcpqEhglReRLBrZsNXYTJZ6Fy0f5yhm4Mg+Z/ackr8YgTwya+qQzv2hDF/0+/Hnt1jTI3vAS+E+LO8wZue+P0U6XPu5zTm874yXaBuVpAeNx8BXVv9cf6K1HvvPpw0mxHlY2YllqTem9z1vn2xmukVRZcQMsm6bS9jjsWN5A3l3GgR0q23ynygW5yQ1hN5mGk9IdNi/ZW8upgqSXTQWF/GEI/JAVlOgonhNpL25BYDw9xXal6kqbOm5Pjxc/801gC88H5aFFeqrfQuLpTdmF6Jlc7bxbF9Hxbaqh9jWH98dbaj+utrXsh0NtnTo855HkN4LlIMv9/yZAd3oiN+4LLJ8UWv54xfFdkmU8uHAfOUxukMgts/LcDI9beH529K3VSkgWqKgKeY72dMFTAXgLUTGAdhZvPlYy7gD5rj+bYUS8Bb80qmpDy6Yqfq2pPSB3dkubnjeQl64swUgAqnDlHETRhzmu6oCgguNoyhd9I2U6ZKqmsrvgSDsALWXixpE4Mpcw1aZlRpgy9mjLJejnHdvE8PIxOG13wFE6RuOlRmsqbOq8KfaCtFiYtJtj3MjyEQWk1Yx+c+iHcASimJD4TXBR9nyr6jB7xmlHY9GebIkt9RUUppxZZSSUh7c9nl89acKzCWQchE3QwudbC1DlxRK6XfWQsGF/RQMrbhfNASK3xDYiikmmJu9ZqKKSaoM1GoqLJqQAKGy+kHtrQI2cjOSezrmZ9HeweG8OpwkL08XNfO5ln5lgyJBFsDnPKrGuO6TKusQxSe91OeXXVHwRrGYcZAVVgWRVgQCTIU8P1Z8GQnTPj0O3QLhxuxeAAnaikUMFgf7pkZNutj+3JaMHw231rIrmTumE5hOyZ9K6+B7IMrQHlqIalrQiN991LczyYLaEbrS7xiFGppttmStoimS35wGtZveVqNqhmK1PVx5PpbDG5ZNnouGtfvLg3ZnvRtK/w9ngE4QSZVYI0RFZv8wy36u0wn7YaCZkSsBUWAGln24KLCcz2dlcS9jRFwOQFCpdK3IKTpkCSqoLM8qq6FR1qYkrzZEaNFFmwPFym82qpeaU1x/K4U6SxWIcrWiTXOrCKYGpDEG11xlT7S7hWR54+j0Eazrc+RZFSqPa2SmqbSs4AS06nLH6L2FIig5kxDvtkNpg3SeqoWl5/2gGzejal99nYsdfnvb3e46asHl6dlQ68uf7AMRlTbFFSdUFTQPv6vmWKPKtrnnnIws3BzHgd96xwDnRW0ESVnGU8DwZXG9IBnaHVRdgpnFD4l0CmGJgWp83SQSt/5I51IcGkTR7ostvQ5L9yLKdY6ZljRw6o4CvHhCvHBLA9VuU2TyGmyYVokdqsJBzV1nzY74SkuhzuS2xVJOzY9Rpjv53qg+qCOqctZ6cuFh2Zd7iqv1059U3MksbFVGF/35Jcbc/7zYZ3VoaKysxcwjuTO3hM0bA0kilfqMcXkehESZU9rN3D5VJv0LPDZJqc5JkxQNTZ2RwXnXQ36TUJIpLOzKW1PqniMjBX1+/I1yF5N17HKPE4YJ8m8E17TZPNDprxbZl/h2W+LOKPoxH/WcflFteqbYut3TAXgyiGflx5z71yDddNsNJzrS7+cl7XfLtBt9oUAKABKKEpCli0UCIJyFanwzQ74Cb2rii+QOQCf+vmZ+Vy9vqx/jNA89BF0LdgVDsFielAVPlDxLxeZdnXsAoJfAT1AMtljmRYQHIt/E43WiLbFltNsQMYkRE4ssPUhUp5FMRjfxyBbQyjZ6nceZLKGjTd0IW5ns5FBcKqAsW4JEfjlMQe9XIyXnyYYMUd5aK3SzfaDIHcQ+jBHDBxCKzEgy+hExYFItD1l64ZJiqsrSZJFmrnx/y+PruVAu+x3HwDypNhIW4n/E30N7vMLZMfM6box4xv4UFiubmowXWNI9e8Inl+9EmXnCd3ruQp3TDft341PIUlvmZ0P8k6uead8fc7EZbUWHS93xpyNF6OL8nplBQtaOWCMsLhCYogm8QUmglWhWc92EOfuIcg/kqQ31F/Ofluf8aXxI4/jfHbfMCEKRfLv7iNTSHKb2MyJnz2t1e9pyNx3WKYxd/ZOA9f2nLEf7zXmV0z34fNE/yTBpH12a5vYj2cg/PMx5fr2/kql9/nH1hhBjisi0dYED0G/y7Ad4c/G+9FvmOJMZs2SQx/flLOZ9NbxTDNIPFjma8Uhsd5WeCMzyHsfm76LUwhgD9uNBn68UazVIZTPLkORuW+1/33zTW3oIsJsRdyCyxvlQxfzvHhvv0wnz8Afj+i6+yfRvRzJu+/mX+3PNT06/vw/g8="/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:AccountMerge xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/schema/md/v1.2/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd ">
<dece:UserReference ResourceDisposition="urn:dece:type:status:active">urn:dece:userid:org:dece:D842651EB198EA24E0401F0A07993565</dece:UserReference>                
<dece:UserReference ResourceDisposition="urn:dece:type:status:active">urn:dece:userid:org:dece:D842781AAA4A1E6FE0401F0A0799569A</dece:UserReference>                
</dece:AccountMerge>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="SurvivingAccountID" value="urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD842651EB188EA24E0401F0A07993565"/>
  <con:entry key="RetiredAccountID" value="urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD842781AAA3B1E6FE0401F0A0799569A"/>
</con:parameters></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="AccountMergeUndo" type="rest" id="216cdb32-edc4-42ff-940d-0a24ddc5b6ef" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints/><con:resource name="AccountMergeUndo" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{SurvivingAccountID}/Merge/Undo" id="a3a07d2e-db6c-4d70-a443-af62d5a50a00"><con:settings/><con:parameters><con:parameter><con:name>SurvivingAccountID</con:name><con:value>SurvivingAccountID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>SurvivingAccountID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" method="POST" id="4995638c-d575-4d0f-a861-2a267308a8d9"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="9f81ce2b-c5b6-493d-9b1f-7c101faacf30"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="UserResourceStatusUpdate" type="rest" id="3c0ff9bd-188e-4595-ac97-ec945cbf1b34" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="UserResourceStatusUpdate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}/ResourceStatus/Current/Update" id="a72ea2ab-ce4e-47cc-b28d-787420d41eae"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value>AccountID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>AccountID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>UserID</con:name><con:value>UserID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>UserID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="UserResourceStatusUpdate" method="PUT" id="bae01694-be77-463a-bcef-02134d4e45fb"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ResourceStatus</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="d9791dad-3957-43a7-9916-acc98d6cfcfe"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="AccountResourceStatusUpdate" type="rest" id="d2b48757-d9d7-48b6-99e2-5ffaec2a0276" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="AccountResourceStatusUpdate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/ResourceStatus/Current/Update" id="087a86a9-8ddc-4222-aa5e-8ea5f58f3b44"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value>AccountID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>AccountID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="ResourceStatusUpdate" method="PUT" id="a3720389-3d1d-49ca-8d11-1e6c7977a6b6"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="c5de7daa-09fc-46a7-9439-7290f79b45c1"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="STS" type="rest" id="2b399c77-329a-43cb-9c65-b90e43e27bf5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="STSCreate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/SecurityToken/SecurityTokenExchange" id="c9f3de54-1283-4f02-b8ea-7030652e5a47"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>tokentype</con:name><con:value>tokentype</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>tokentype</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter disableUrlEncoding="true"><con:name>audience</con:name><con:value>audience</con:value><con:style>QUERY</con:style><con:default>audience</con:default></con:parameter></con:parameters><con:method name="STSCreate" method="POST" id="dd8dec87-e935-415f-91f4-ef072cb2b292"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:proj="${#Project#coordinatorSchema}">proj:Credentials</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="8eccae92-53c1-462c-ad88-7bb2ab6bc7a9"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="STSGet" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/SecurityToken/Assertion/{assertionUUID}" id="f7ffc3a2-890e-4d43-8f2a-582eb82ffd58"><con:settings/><con:parameters><con:parameter><con:name>assertionUUID</con:name><con:value>assertionUUID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>assertionUUID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="STSGet" method="GET" id="5edddbc8-bc7c-4b0d-9fa5-394b1f0932ed"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:urn="urn:oasis:names:tc:SAML:2.0:assertion">urn:Assertion</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" id="198a8863-08df-42da-87ef-91fde7f4ac06"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Users" type="rest" id="32a17229-7301-496a-9959-f8a198085c37" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:endpoint>${#Project#Query_HostName}</con:endpoint></con:endpoints><con:resource name="UserCreate" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" id="3214816b-5fdb-4cbb-a66c-0817d39ee5df"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="UserCreate" method="POST" id="85b1a86d-a174-4a21-be14-f72b3789767e"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="08386969-1ac0-48dd-a9c3-c7714e2e2ac6"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="UserGet" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" id="5eecdb30-4456-4b9c-a0d6-ee415044ae53"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter><con:name>UserID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="UserGet" method="GET" id="a7071467-bfcd-4637-bf7b-0fd5fae347f5"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" accept="" id="c1d9f669-0fab-420a-b3bb-41ba3a62d2a9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
</con:parameters></con:request></con:method><con:method name="Head" method="HEAD" id="4a652ec2-ccfc-41cc-ab9b-e3da0c6b6423"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" accept="" id="fee61050-2c66-4855-922a-0f70b711d75d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
</con:parameters></con:request></con:method><con:method name="Options" method="OPTIONS" id="f642aa2f-8b97-41b6-844a-48dca64ed4c3"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" accept="" id="176e5778-d69f-44ea-8604-5360e81bcd24"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
</con:parameters></con:request></con:method><con:method name="Put" method="PUT" id="c122ff34-b808-442e-9ba2-fc17ea862f76"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" accept="" id="7babc99f-67fc-4407-a575-a93d30d5d843"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
</con:parameters></con:request></con:method><con:method name="Post" method="POST" id="9e8179bf-f9d7-451a-8883-82d91554a9cf"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" accept="" id="944c1307-de01-46fb-bc01-90848ec0f7f8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
</con:parameters></con:request></con:method><con:method name="Delete" method="DELETE" id="c97151d5-3250-4d30-97ed-a6ac164b227f"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" accept="" id="593e3a94-9165-4242-bf1f-0cddbdce0698"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
</con:parameters></con:request></con:method></con:resource><con:resource name="UserUpdate" path="rest/${Project#V1}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" id="3b2cbab6-f236-452c-aa72-c2c6458a86d6"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter><con:name>UserID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="UserUpdate" method="PUT" id="c67e1844-82e6-473a-bcb4-7d0de6df9ad5"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="b0aef7c9-b9d7-4ba6-a411-1c8f0518fac9"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="UserDelete" path="rest/${Project#V1}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" id="4edb7459-8c75-4e8d-b3e4-0c4eea50eba8"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter><con:name>UserID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="UserDelete" method="DELETE" id="bfac645e-6c49-4e98-b8ee-34ce5354498f"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" id="7203106d-e33e-47f0-8c7d-ff82142e0924"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Policy_Create" type="rest" id="6d3a7f09-e930-4088-8e8d-82c1ac9f0e03" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="Policy_Create_User" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" id="eca36453-96aa-47e7-9dc1-e4ced6b1aa9f"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:value>NodeAccountId</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>NodeAccountId</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>NodeUserId</con:name><con:value>NodeUserId</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>NodeUserId</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>PolicyClass</con:name><con:value>PolicyClass</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>PolicyClass</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Policy_Create_User" method="POST" id="f82b76b1-702f-4936-bfbe-ae4246c9f2c4"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/06/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:proj="${#Project#coordinatorSchema}">proj:PolicyList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="e0beb2b8-560f-4a6a-a81b-b1fe38331d00"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:request></con:method></con:resource><con:resource name="Policy_Create_Account" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/Policy/{PolicyClass}" id="a67de1c2-f527-43c9-b030-1ea24f12bf69"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:value>NodeAccountId</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>NodeAccountId</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>PolicyClass</con:name><con:value>PolicyClass</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>PolicyClass</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Policy_Create_Account" method="POST" id="f2bf0d7b-7172-4961-8691-fbf8614d860c"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="ad5d32d6-2baa-402c-b241-087d80533a71"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="UserValidationTokenCreate" type="rest" basePath="${#Project#HostName}" definitionUrl="C:\Users\ralluri\Desktop\LatestProjects_Users\Build_4.1\UserValidationTokenCreate_1.wadl" id="30abc44b-5ea3-4400-b3ca-43d9041e92bf" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Users/ralluri/Desktop/LatestProjects_Users/Build_4.1/UserValidationTokenCreate_1.wadl"><con:part><con:url>file:/C:/Users/ralluri/Desktop/LatestProjects_Users/Build_4.1/UserValidationTokenCreate_1.wadl</con:url><con:content><![CDATA[<application xmlns="http://wadl.dev.java.net/2009/02">
  <doc xml:lang="en" title="UserValidationTokenCreate"/>
  <resources base="${#Project#HostName}">
    <resource path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}/VerificationToken/{TokenType}" id="UserValidationTokenCreate">
      <doc xml:lang="en" title="UserValidationTokenCreate"/>
      <param name="AccountID" default="AccountID" type="xs:string" required="true" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <param name="UserID" default="UserID" type="xs:string" required="true" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <param name="TokenType" type="xs:string" required="false" default="" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <method name="POST" id="UserValidationTokenCreate">
        <doc xml:lang="en" title="UserValidationTokenCreate"/>
        <request>
          <representation mediaType="application/xml" element="dece:ErrorList" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </request>
        <response status="404 500">
          <representation mediaType="text/html"/>
        </response>
        <response status="400 401 403">
          <representation mediaType="application/xml" element="sch:ErrorList" xmlns:sch="http://www.decellc.org/schema"/>
        </response>
        <response status="405">
          <representation mediaType="text/plain"/>
        </response>
        <response status="">
          <representation mediaType="application/xml" element="dece:ErrorList" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="404">
          <representation mediaType="text/xml"/>
        </response>
        <response status="200">
          <representation mediaType="application/xml"/>
        </response>
        <response status="0">
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
        </response>
      </method>
      <method name="HEAD" id="HEAD">
        <doc xml:lang="en" title="HEAD"/>
        <request/>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
      </method>
      <method name="PUT" id="PUT">
        <doc xml:lang="en" title="PUT"/>
        <request>
          <representation mediaType="application/xml"/>
        </request>
        <response status="0">
          <representation mediaType=""/>
        </response>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="405">
          <representation mediaType="text/plain"/>
        </response>
      </method>
      <method name="GET" id="GET">
        <doc xml:lang="en" title="GET"/>
        <request/>
      </method>
      <method name="DELETE" id="DELETE">
        <doc xml:lang="en" title="DELETE"/>
        <request/>
        <response status="0">
          <representation mediaType=""/>
        </response>
        <response status="405">
          <representation mediaType="text/plain"/>
        </response>
      </method>
      <method name="OPTIONS" id="OPTIONS">
        <doc xml:lang="en" title="OPTIONS"/>
        <request/>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="0">
          <representation mediaType=""/>
        </response>
        <response status="403">
          <representation mediaType="application/xml" element="coor:ErrorList" xmlns:coor="http://www.decellc.org/schema/2012/03/coordinator"/>
        </response>
        <response status="405">
          <representation mediaType="text/xml" element="dece:ErrorList" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
      </method>
    </resource>
  </resources>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:endpoint>${#Project#Query_HostName}</con:endpoint></con:endpoints><con:resource name="UserValidationTokenCreate" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}/VerificationToken/{TokenType}" id="5df52baa-c16c-4070-8289-d37e2b3d0d91"><con:settings/><con:parameters><con:parameter required="true"><con:name>AccountID</con:name><con:value>AccountID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>AccountID</con:default></con:parameter><con:parameter required="true"><con:name>UserID</con:name><con:value>UserID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>UserID</con:default></con:parameter><con:parameter><con:name>TokenType</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:method name="UserValidationTokenCreate" method="POST" id="8de4779b-2ff7-41b9-b378-bfd5179b4804"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>404 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 403</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="4db9e8d8-d4b8-4e1b-810c-10a3530be4f2"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="HEAD" method="HEAD" id="dcbf8124-20bb-464c-b7c3-91edcf231c67"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="db646728-e0db-492e-b36f-a02b339ed188"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="PUT" method="PUT" id="bed9e179-1b77-4e4a-8b64-d47aee81b878"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" id="55913024-13ae-4bce-866a-b53874027734"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="GET" method="GET" id="ebe8a305-f1e9-46f7-bbe1-6ec59aeccaa6"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/json" id="4ba7779b-b9ca-4d20-858b-2373cc920c8b"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="DELETE" method="DELETE" id="c124c68e-1d87-428e-9160-694941b50e10"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="909b802a-19cc-472f-a134-5c9cfb180a61"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="OPTIONS" method="OPTIONS" id="43dff25a-f5f8-42ff-8994-1c12452869bb"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/03/coordinator">coor:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="01e389f9-1251-462e-9e6e-c7ba84db5c6d"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite name="CommonTestSteps" disabled="true" id="6deffdf6-8888-4ac0-bba9-62ac3f5a0a8b"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AccountCreate API" searchProperties="true" id="11a715f3-fabc-4fee-900a-f24ebd6d9c5a"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="9ce61892-9d8a-4055-b161-e19938292410"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("accountname",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);

tC.setPropertyValue("ResponseType","SUCCESS");

tP.setPropertyValue("Request_XML",tP.getPropertyValue("Request_XML_Buffer"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="4dc8aec7-2e8e-4eef-9a55-46dedaad9403"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname);
def callTS = tP.getTestSuiteByName(callTSname);

tP.setPropertyValue("Country",callTS.getPropertyValue("Country"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));


def b = tC.getPropertyValue("nodeid");

log.info b;</script></con:config></con:testStep><con:testStep type="groovy" name="Generate AccountName" id="b8ba87db-df08-4f36-8c88-c580bb3ec25b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def today= new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("AccountName","accname_"+today);</script></con:config></con:testStep><con:testStep type="groovy" name="Set coordinatorSchema" id="b7781048-a75c-4c27-a26d-173632d33bbb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

log.info "versionMinor: "+tP.getPropertyValue("versionMinor");

def v2 = context.expand( '${#Project#versionMinor}' )
def schema = tP.getPropertyValue("coordinatorSchema_"+v2);

tP.setPropertyValue("coordinatorSchema",schema);
log.info "Setting the coordinatorSchema value ---- "+schema;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="1671024d-d72f-4387-92d2-ba0ce6079396"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 
import soapUIUtils.soapUIUtils;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
//def certPath = groovyUtils.projectPath

//Set fileKeyStorePath value 
//log.info "certPath: "+certPath;
//tP.setPropertyValue("certPath",""+certPath);

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")

myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("Account_Create");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="Account_Create" id="63a3307b-6106-4786-9cd4-e176efd0bf16"><con:settings/><con:config service="Account" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account" methodName="AccountCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Account_Create" mediaType="application/xml" postQueryString="false" id="ca4ff0a9-00f8-41e3-871a-d799b7db932c" accept="" sslKeystore="RET_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@remove_empty_content">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="${#Project#coordinatorSchema}"> 
<DisplayName>${#TestCase#AccountName}</DisplayName>
<Country>${#Project#Country}</Country>
</Account>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="23303af8-41d1-41dc-8fef-fb959f9c4a2f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('Account_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 			
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);

</script></con:config></con:testStep><con:testStep type="groovy" name="Validate Response" id="bd82d430-2a93-49e7-b2a1-7b84f0809636"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def url       = context.expand( '${#Project#Provision_HostName}' );
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');


boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = context.expand( '${#Project#expectHTTPcontenttype}' );
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
		
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
		errorReason = "The supplied country code is invalid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
		errorReason = "The country code cannot be null.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
		errorReason = "API call not authorized";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserNotActive";
		errorReason = "User is not active";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
		errorReason = "Requesting User ID Not Specified";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;
	case "INVALID_GEO":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestedOperationNotAllowedForSpecifiedGeography";
		errorReason = "The requested operation is not allowed for the specified geography.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestedOperationNotAllowedForSpecifiedGeography";

	break; 	
	
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
/*
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
*/
//Location Header

if (httpLocationHeader) {
      assert context.expand( '${#TestCase#httpLocation}') != null;


      def a = context.expand( '${#TestCase#httpLocation}');
      def b = a.toURL();
      def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

      if (tP.getPropertyValue("URLEncode") == "NO"){
                                
		assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
                 
          int lastColon = urlStr.lastIndexOf(':');
	     int lastSlash = urlStr.lastIndexOf('/');
	     accountid     = urlStr.substring(lastColon + 1);
	     def node_Account = urlStr.substring(lastSlash + 1);

          tC.setPropertyValue("NODE_ACCOUNT_ID",accountid);
                    
          tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",node_Account);                        
          tC.setPropertyValue("NODE_ACCOUNT_ID_FULL_Encoded",URLEncoder.encode(node_Account,"UTF-8")); 
          tC.setPropertyValue("NODE_ACCOUNT_ID_FULL_Decoded",URLDecoder.decode(node_Account,"UTF-8"));                                                  
          
      } else {
            assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*");
            int lastColon = urlStr.lastIndexOf('%3A');
            int lastSlash = urlStr.lastIndexOf('/');
            accountid     = urlStr.substring(lastColon + 3);
            def node_Account = urlStr.substring(lastSlash + 1);

            tC.setPropertyValue("NODE_ACCOUNT_ID",accountid);
            
          tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",node_Account);                        
          tC.setPropertyValue("NODE_ACCOUNT_ID_FULL_Encoded",URLEncoder.encode(node_Account,"UTF-8")); 
          tC.setPropertyValue("NODE_ACCOUNT_ID_FULL_Decoded",URLDecoder.decode(node_Account,"UTF-8")); 
      }

} else {
      	assert context.expand( '${#TestCase#httpLocation}') == "";
}





//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:testStep type="groovy" name="Return the NodeAccountId to the Calling Test Case" id="35d38137-3ff3-47da-9602-9bed11652bbf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("accountname",tC.getPropertyValue("accountname"));
callTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
callTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

</script></con:config></con:testStep><con:properties><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/2015/02/Account/urn:dece:accountid:org:dece:0E55DF4069BB33EDE05307991F0A2BFA</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">RET</con:value></con:property><con:property><con:name>ResponseType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>Account_Create_Firsrt_User_Create_STS_Policies</con:value></con:property><con:property><con:name>sName</con:name><con:value>First_User_Create</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0E55DF4069BB33EDE05307991F0A2BFA</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">C:\ALL_CODES\Git\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>accountname</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">accname_20150205_040820</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:0E55DF4069BB33EDE05307991F0A2BFA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E955244D99F28971E0401F0A07992091</con:value></con:property><con:property><con:name>Consent_Version</con:name><con:value>20121024</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL_Encoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A0E55DF4069BB33EDE05307991F0A2BFA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL_Decoded</con:name><con:value>urn:dece:accountid:org:dece:0E55DF4069BB33EDE05307991F0A2BFA</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>b8ba87db-df08-4f36-8c88-c580bb3ec25b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9ce61892-9d8a-4055-b161-e19938292410</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c50a4409-da80-4892-a2c3-07a22e674bd0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd13479c-f25a-495b-8c94-31e5557a93a8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AccountStatusUpdate API" searchProperties="true" id="51ed92e6-c568-4115-881a-88771404b0de" disabled="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="2842594e-4ff8-47cb-afd9-7d9447bd34b7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("status",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("ResponseType",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("SAML",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="1c828cc6-c718-4458-8285-8f3412120ef1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)


tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("status",callTC.getPropertyValue("status"));
tC.setPropertyValue("NODE_ACCOUNT_ID",callTC.getPropertyValue("NODE_ACCOUNT_ID"));

if (tP.getPropertyValue("V2")=="06" || tP.getPropertyValue("V2")=="07"){
			
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			}else{
				
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			}
			
tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));

if (tC.getPropertyValue("ResponseType") == null ||
	tC.getPropertyValue("ResponseType") == "") {
		tC.setPropertyValue("ResponseType","SUCCESS");
}



</script></con:config></con:testStep><con:testStep type="groovy" name="Set Pem" id="aec46fe2-046b-4208-9b99-b3f8610a7a8d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("AccountResourceStatusUpdate");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="AccountResourceStatusUpdate" id="e434e6ab-627f-454e-a457-6101a23db2bf"><con:settings/><con:config service="AccountResourceStatusUpdate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/ResourceStatus/Current/Update" methodName="ResourceStatusUpdate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AccountResourceStatusUpdate" mediaType="application/xml" postQueryString="false" sslKeystore="dececs_concat.pem" id="39b00378-397c-419e-8bd4-6f9c3fa1d565"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<ResourceStatus xmlns="${#Project#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
  <Current>
    <Value>urn:dece:type:status:${#TestCase#status}</Value>
    <Description>Account Updated</Description>
  </Current>
</ResourceStatus>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#TestCase#ENCODED_NODE_ACCOUNT_ID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="bef51ec6-85bf-456b-9ec3-670fd87002cf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('AccountResourceStatusUpdate');
def expXML = tStep.httpRequest.response.getResponseContent();
 
String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
 
 
tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                                contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}
 
tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="518795a7-9465-4ca9-aaa5-d30618461158"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseType}' );
log.info "errorRespType"+errorRespType;

def usercount = context.expand( '${#TestCase#UserCount}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#Project#Node_Account}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = context.expand( '${#Project#expectHTTPcontenttype}' );
//String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		log.info 'Error Response Type is'
		log.info errorRespType
		expectHTTPstatus   = "HTTP/1.1 303 See Other";
		XMLbodynull        = true;
		processXMLFlag  = false;
		httpLocationHeader = true;
		
	break;

	case "INVALID_STATUS_UPDATE":
		log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:ResourceStatusTransitionRequestedNotAllowed";
		//errorReason = "Requested Status transition is not allowed for the resource";
		errorReason = "The requested status transition is not allowed for the resource.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceStatusTransitionRequestedNotAllowed";
	break;

		case "INVALID_STATUS_UPDATE_ON_USER":
		log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:ResourceStatusTransitionRequestedNotAllowed";
		//errorReason = "Requested Status transition is not allowed for the resource";
		errorReason = "The requested status transition is not allowed for the resource. - Status requested cannot be applied on the user";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceStatusTransitionRequestedNotAllowed";
	break;


	
	case "API_NOT_AUTH":
	log.info 'Error Response Type is'
	log.info errorRespType
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	//errorReason = "API call not authorized";
	errorReason = "The API call is not authorized.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		log.info 'Error Response Type is'
		log.info errorRespType
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	case "NULL_BODY":
		log.info 'Error Response Type is'
		log.info errorRespType
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		expectHTTPcontenttype = "text/xml";
		XMLbodynull        = true;
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	case "XML_PARSE_ERROR":
		log.info 'Error Response Type is'
		log.info errorRespType
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID = "urn:dece:errorid:org:dece:SaxParserException";
		errorReasonFlag = false;
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#SaxParserException";
	break;
	
	case "USER_NOT_MATCH_TOKEN":
		log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		//errorReason = "User ID does not match security token";
		errorReason = "The member’s user ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	break;

	
	case "USER_INACTIVE":
	log.info 'Error Response Type is'
	log.info errorRespType
	expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
	//errorReason = "The requestor is not active.";
	errorReason = "The requesting member is not active.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;
	
	case "USER_REQUESTING_NOT_PROVIDED":
	log.info 'Error Response Type is'
	log.info errorRespType
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	//errorReason = "Requesting User ID Not Specified";
	errorReason = "A user ID is required.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;

	case "USER_NOT_PERMIT":
		log.info 'Error Response Type is'
		log.info errorRespType
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		//errorReason = "The user does not have permission to perform the requested action.";
		errorReason = "The requesting member does not have permission to perform this action."
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
		log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		//errorReason = "Request Account ID not match";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "NO_MNG_ACC_CNST":
		log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		//errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	case "NO_MNG_USER_CNST":

	log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		//errorReason = "The setting of the \"Manage User Consent\" policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
		errorReason = "The setting of the ManageUserConsent policy prevents the requested action from being completed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
	break;
	case "TOU_NOT_ACCEPTED":
		log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The account status cannot be modified. - First User has to accept TOU to move the Account to active status";
		errorID     = "urn:dece:errorid:org:dece:AccountStatusCannotBeModified";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountStatusCannotBeModified";
	break;

     case "ACCT_INACTIVE":
     	log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		//errorReason = "The identified account is not active.";
		errorID     = "The account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "SPL_CS_ALLOWED_ACCT":
     	log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		//errorReason = "The request is unauthorized.";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;

     case "ACCT_ALREADY_DELETED":
     	log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:AccountDeleted";
		errorReason = "The account has already been removed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDeleted";
     break;

     case "SAME_CURRENT_STATUS":
     	log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:ResourceAlreadyInRequestedStatus";
		//errorReason = "Resource is already in the status requested";
		errorReason = "The resource is already in the requested status.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceAlreadyInRequestedStatus";
     break;

     case "MTHD_NOT_ALLOWED":
     log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
		errorID     = "urn:dece:errorid:org:dece:ResourceAlreadyInRequestedStatus";
		errorReason = "Resource is already in the status requested";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceAlreadyInRequestedStatus";
	
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
log.info 'Expected: '+expectHTTPstatus
log.info 'Actual: '+context.expand( '${#TestCase#httpStatus}' )
assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;
def a = URLDecoder.decode(context.expand( '${#TestCase#httpLocation}'), "UTF-8");
	//def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

	//assert b.getPath().matches("$errorHost/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
	
	
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}




//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;

	    if(errorReasonFlag)
	    {
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;
	    }
		// ErrorLink
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
} 


</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>1.7. Account Status Changed through Resource Update: Account Unlocked [Your UltraViolet account has been unlocked]</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Notifications_Test Cases</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/06/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE0097920D44DE4BAE0401F0A0599272E</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 303 See Other</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>dececs</con:value></con:property><con:property><con:name>ResponseType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E0097920D44DE4BAE0401F0A0599272E</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVdbc6rKEn73V1juR8twUxQrSdUgoKh4A68vp2AYEOUmA4L++jOY6EqyknXWPi/iND3dX1/o+eYZm4HPdgHGKEm9KKyq0kvtP4KFOLbV5hqCzTuNpsWihmXxfKPVsRjIMBxtW0ytqmKcITXEqRmmLzWWZrgGzTdY3qD5LkN3Oe6JbQm7WnWFEkxME5UnulYtAj/E3Zvbl1qWhN3IxB7uhmaAcDeFXR1o4y7R7Jp3TLXX5zeUN4fJ6z5N4y5FwScbQeT78AlGAfVMfdJ5tnFX99zQTLMEvfu08UvtfW+e50859xQlLsXSNE3RAkV0bOy5/9ReK/fNyFZDJ3pb98wwCj1o+t7VLEFpKN1HdhX4bpR46T74wTRDMXRpuoEK2IBMM/ynRv1ycEP3l5Y+gUyw2cB7k7kbWyAHJSiEqLpcqC+1f/6ugm97jcQMsRMlAf6y/neQUHhGfhQju4Hvkd3R/b3Fb9L1+oxgVw2hn2HvjCZlm8QmRLg6S5DjFWMPk+azcfVW/mqB7x2G4L8pyTP1ESeBTX2TGclzEU7/n3p9rNWblZXpZ+h1tEGzc09SVoMITuGRNi5nvdhFvenh+HKD8FH5DdSj1O/rr4366Kv3TTBQ+tv6QKRaOdd3lmzfadWHQ784jK9+PwgKxvLb2mIWnXnR2iS2MMuRqjgzwwg3Np+dFOfoZs2Ddxz5/KASnizqNDD6So+eJkW+TXNJaXHHUNmitAiGkj4YnCYnOhDxfGLNZzo1MqOJdCkGzUiQfaUFZgatHZPdHoyjiiPPj+tkwTS13WmZCnqyd19+xfQxhjKuEbrcgiz/b1q0IJmp+Vj0yknhkM8zRa+aqvbqUq8HUM8FuSoCVxXHVzAR3eNpf/T6Qk6LYL5UgAQu2gLkkruVVvP5SM7t1crfrVRFEbVFMx+ArVQhLyS5WEm7zZA217t4yyr0ThdFe7OILG4Y24NjPtjDiWZo+cRQL9pBLiaGTK9vMrcg66t20JipseQq64MoaAs5l/KbR0nO95PdehFvl0IOr/JcA80+YJZyb68NjGDFQG6xhwd5rIHjTS7utd5qpRWyAWYV0Z2sSGxGT9nFMLBjK/D3H4wPiHHD7q8uVt/Pdlf5oPXkfk8/9XXV4qS5PASL7dJar47mWjlX4GACrLtHr+WZmyh3d51cmm+Ho2in7s9wAuayKM4BSRcNNLU/BFFfBFoTeMW1dxD5qGcrOTVkcaUu+H1+c/FOG2z2ad9kOh1mO17zsxMvyWF9N8qsw17bb5RpfaTb56WQCtctPtfPvOkxsIid+UYepKPCGcz1ijWTig0c1G13SPlXQUm09hAk18ve19xFuuan+GJ5jrMWN9Om33Z8jVvEju/EF1w3ovkxoXmRTEJqezmP0gpwNRGA/mF5EOea2CmTaqv5fKuJJlDkNAPXA5uO2NVpODj7cMuBqBitybf4XhhbymWRyucyaSu50pGAXRZhoC9l5QCWousmoisr4hxKYL5VR/mW5Gs5IMpf86jc8ujKIpC5HeCFQYVb0kI6TfVmE1xCcRkqwl47FWubD+j2CcljfRI3cw1PnHC3jo5a4CXLJNOXo9FkXFhG1j8eyKxyaH105nYV+XyMgTcZGfujFEnmLN5u07gewgSmahxoanGd7vCh41kBPay3GHFGS7DNLgMrX/ZNeTdKXJ0ZDRbhjGsLFZw5l0FQP3Tydd3Q+bht90JHulyoXbKiIxApwqJ1sguWPe6X+ZjPnSE4WiY7KXxBvAjyaGfAfDEfrfWg3qq0zuNxQF8NqjmJp7nez5vyfF7nbNEYGDhOvG3WcYtkGtrs1kz5845e8V7sHwU2OxrNmFu5ASnW7GzHbW1WmTc3cBe47RgOqQV1BnLbGav9i3U1r3EwhW8D9Ot0eAjf5gf1cbJ8Gj130qGTbkUwvS/LA0iVqgo5Fcz0zwSmlHh2w7mpduOSBeEUhWnttdxVkpduRiiOZ3fJkfG2lmlaaHd6rKAApsPIkkw3aUahAd0SBLbN8XeW84biC8ReFDpe6avkcW+n1J8BwqCLUWijpHGOMrhHuPYHi2W+qmq4IMdvFGJkRIQnttgWEAEDOL7VYsgPL3O8rLAcxypKS2L4WnUSpdNwmgAnRclnjih84ogLBL3YQyWRLE9TTI5TnJKUnMxzlvrM09l8ClFGqGZSsr0u2+y0KOwFsY9KwFQQ2ZmPnuJ9fEsQhd+ebMOE+CYtswvx7aD/McKv7+7JIDq2VyrgMhwRkYKib/gue4/lx5gZ9mPMd/Mgs73yPCeZTRMPviH5/OpXw5Sd8uiW2w/Ed9gP7a+CT5apr0E9nNlnDz7a/nEjIISSUI7Xe1VO5tPpKTufs1sd2iWdSoh5iqFontIRzAgnuhjREYXUwwT1V3T0gfqL54f8M74s3Yd6Sj7pgHRN9bb8i7uIjnB5F1FJ1xd/e9H55JLkLUVF+p2s55MrS4n4j7ca2IWlHhHPyCOPEvtXub6x9cEPibOcYV7olquSfF5+aAwYEbMemWNR8tH4dwa+c/5Z+EjyA0tKusnKUvTzm2o5oF5qJoRRFqaqVLsJPg7NG870EqPuL6XfzNzo3zufL/CPfH6jjXUyvgKz9tD1/rdyw7u1C0RkF/ZuWF5qBbmaEueh+2FIvwP8bU4LLC01m5LcJMf4pznNyo8Efork9Tfx75IPOf36Pbz+Fw==</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\UsersAPIs\User_Notifications\dececs_concat.pem</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE0097920D44DE4BAE0401F0A0599272E</con:value></con:property><con:property><con:name>status</con:name><con:value>active</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>8dac2685-8684-45a7-9383-18906924bc23</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>40b51506-e7ed-484f-9cef-144c355c10b8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0e921030-fc0e-4088-8519-d2ea05acede9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserUpdate API" searchProperties="true" id="32279977-861a-426e-81a7-71cea06f5005"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="6adad577-eaef-4e3c-afac-44f9db5cfddc"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("userType",null);
tC.setPropertyValue("Privilege",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("GivenName",null);
tC.setPropertyValue("SurName",null);
tC.setPropertyValue("PrimaryEmail",null);
tC.setPropertyValue("Language1",null);
tC.setPropertyValue("DisplayImageURL",null);
tC.setPropertyValue("AlternateEmail",null);
tC.setPropertyValue("PostalAddress",null);
tC.setPropertyValue("PostalCode",null);
tC.setPropertyValue("Locality",null);
tC.setPropertyValue("StateOrProvince",null);
tC.setPropertyValue("Country",null);
tC.setPropertyValue("TelephoneNumber",null);
tC.setPropertyValue("MobileTelephoneNumber",null);
tC.setPropertyValue("MeetsAgeOfMajority",null);
tC.setPropertyValue("DateOfBirth",null);
tC.setPropertyValue("urnUser",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("QuestionID1",null);
tC.setPropertyValue("QuestionResponse1",null);
tC.setPropertyValue("QuestionID2",null);
tC.setPropertyValue("QuestionResponse2",null);
tC.setPropertyValue("ResourceStatus",null);

tC.setPropertyValue("ResponseType",null);
tC.setPropertyValue("userType",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("NODE_USER_ID_FULL",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("SAML",null);
tC.setPropertyValue("ETag",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="582ee56f-8fca-4801-8e79-089606b7f0d5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserUpdate"));
tC.setPropertyValue("userType",callTC.getPropertyValue("userType"));
tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("GivenName",callTC.getPropertyValue("GivenName"));
tC.setPropertyValue("SurName",callTC.getPropertyValue("SurName"));
tC.setPropertyValue("PrimaryEmail",callTC.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("Language1",callTC.getPropertyValue("Language1"));
tC.setPropertyValue("DisplayImageURL",callTC.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",callTC.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",callTC.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",callTC.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",callTC.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",callTC.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",callTC.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",callTC.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",callTC.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("DateOfBirth",callTC.getPropertyValue("DateOfBirth"));
tC.setPropertyValue("urnUser",callTC.getPropertyValue("urnUser"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",callTC.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",callTC.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",callTC.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",callTC.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",callTC.getPropertyValue("ResourceStatus"));

tC.setPropertyValue("ETag",callTC.getPropertyValue("ETag"));
tC.setPropertyValue("expectErrType",callTC.getPropertyValue("PolicyCreateResponseType"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("SAML",callTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID", callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL", callTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("CLG_NODE_USER_ID", callTC.getPropertyValue("CLG_NODE_USER_ID"));
			</script></con:config></con:testStep><con:testStep type="groovy" name="Setting constants based on Geo Profile" id="2ff13040-1add-4f87-a0b9-6af40a7e2ae7"><con:settings/><con:config><script>import java.text.SimpleDateFormat;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


/* Setting constants based on Geo Profile*/

if(tP.getPropertyValue("Country")=="US")
{
  tP.setPropertyValue("GeoProfile","US");
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","13");
  tP.setPropertyValue("CHILD_MAX_AGE","12");
}
else
if(tP.getPropertyValue("Country")=="CA")
{
  tP.setPropertyValue("GeoProfile","CA");	
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","13");
  tP.setPropertyValue("CHILD_MAX_AGE","12");
}
else
if(tP.getPropertyValue("Country")=="GB")
{
  tP.setPropertyValue("GeoProfile","GB");	
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
else
if(tP.getPropertyValue("Country")=="NZ")
{
  tP.setPropertyValue("GeoProfile","NZ");	
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
else
if(tP.getPropertyValue("Country")=="AU")
{
  tP.setPropertyValue("GeoProfile","AU");	
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
else
if(tP.getPropertyValue("Country")=="IE")
{
  tP.setPropertyValue("GeoProfile","IE");	
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
else
if(tP.getPropertyValue("Country")=="AT")
{
  tP.setPropertyValue("GeoProfile","AT");	
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
else
if(tP.getPropertyValue("Country")=="DE")
{
  tP.setPropertyValue("GeoProfile","DE");	
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
  else
if(tP.getPropertyValue("Country")=="CH")
{
  tP.setPropertyValue("GeoProfile","CH");	
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
  else
if(tP.getPropertyValue("Country")=="FR")
{
  tP.setPropertyValue("GeoProfile","FR");	
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("CHILD_MAX_AGE","17");
}

	def userType = tC.getPropertyValue("userType")
	log.info "userType: "+userType;
	
	switch(userType){
	
	case "ADULT":
	
	Date dob = (new Date());
	dob = dob - ((tP.getPropertyValue("ADULT_MIN_AGE").toInteger()+1)*365);
	log.info "Adult DateOfBirth: "+dob.format('yyyy-MM-dd');
	tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
	break;

	case "YOUTH":
	
	Date dob = (new Date());
	dob = dob - ((tP.getPropertyValue("YOUTH_MIN_AGE").toInteger()+1)*365);
	log.info "YOUTH DateOfBirth: "+dob.format('yyyy-MM-dd');
	tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
	break;

	case "CHILD":
	
	Date dob = (new Date());
	dob = dob - ((tP.getPropertyValue("CHILD_MAX_AGE").toInteger()-1)*365);
	log.info "CHILD DateOfBirth: "+dob.format('yyyy-MM-dd');
	tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
	break;

	case "ADULTPlus":
	
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, -1);
	def dob = sdf.format(calendar.getTime());
	log.info "AdultPlus DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	break;

	case "ADULTMinus":
	
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear1 = today.get(Calendar.YEAR)- tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear1-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, +1);
	def dob = sdf.format(calendar.getTime());
	log.info "ADULTMinus DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	break;

	case "YOUTHPlus":
		
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, -1);
	def dob = sdf.format(calendar.getTime());
	log.info "YOUTHPlus DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	break;

	case "YOUTHMinus":
   	
   	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, +1);
	def dob = sdf.format(calendar.getTime());
	log.info "YOUTHMinus DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	break;

	case "ADULTToday":
	 
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, 0);
	def dob = sdf.format(calendar.getTime());
	log.info "ADULTToday DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	break;

	case "YOUTHToday":

	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear1 = today.get(Calendar.YEAR)- tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear1-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, 0);
	def dob = sdf.format(calendar.getTime());
	log.info "YOUTHToday DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	break;

	default:
	log.info "userType is not matched!!"
	break;

	}</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="f7cbec75-91d0-429f-b094-d143c3decaa4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("UserUpdate");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="UserUpdate" id="4a3defaf-88a2-4566-8381-302dabf5857e"><con:settings/><con:config service="AddNewUser" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" methodName="UserUpdate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserUpdate" mediaType="application/xml" sslKeystore="RET_CS_1_concat.pem" id="0a991f82-1623-4495-b24c-9cc11cc37183" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="If-Match" value="${#TestCase#ETag}"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:${#TestCase#Privilege}" xmlns="${#TestCase#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
		<GivenName>${#TestCase#GivenName}</GivenName>
		<SurName>${#TestCase#SurName}</SurName>
	</Name>
	<ContactInfo>
		<PrimaryEmail>
			<Value>${#TestCase#PrimaryEmail}</Value>
			</PrimaryEmail>
			<AlternateEmail>
				<Value>${#TestCase#AlternateEmail}</Value>
				</AlternateEmail>
			<Address>
				<PostalAddress>${#TestCase#PostalAddress}</PostalAddress>
				<PostalCode>${#TestCase#PostalCode}</PostalCode>
				<Locality>${#TestCase#Locality}</Locality>
				<StateOrProvince>${#TestCase#StateOrProvince}</StateOrProvince>
				<Country>${#TestCase#Country}</Country>
			</Address>
			<TelephoneNumber>			
					<Value>${#TestCase#TelephoneNumber}</Value>
				</TelephoneNumber>
				<MobileTelephoneNumber>
					<Value>${#TestCase#MobileTelephoneNumber}</Value>
				</MobileTelephoneNumber>
	</ContactInfo>
	<Languages>
		<Language>${#TestCase#Language1}</Language>
	</Languages>
	<!-- <DateOfBirth> depricated </DateOfBirth> -->
	<LegalGuardian>${#TestCase#urnUser}${#TestCase#CLG_NODE_USER_ID}</LegalGuardian>
	<Credentials>
		<Username>${#TestCase#UserName}</Username>
<!--		<Password>${#TestCase#password}</Password>-->
	</Credentials>
<!--	${#TestCase#ResourceStatus}-->
</User>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="293a03bd-d0ae-44dc-9331-fc1b9f4abdc0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('UserUpdate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			log.info "V2: "+tP.getPropertyValue("V2");
			if (tP.getPropertyValue("V2")=="06" || tP.getPropertyValue("V2")=="07"){
			contentLocation = URLDecoder.decode(value[0], "UTF-8");
			}else{
				contentLocation = value[0];
			}
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="dca7613e-6ad6-45be-943f-d3a3720a12c7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

def RequestorType = "";
def RequestorClass = "";
def Requestee = "";

def usernamestring = "";
def givennamestring = "";
def surnamestring = "";

int firstmask = 0;
int lastmask = 0;

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#TestCase#AccountID}')+ "/User/" + context.expand('${#TestCase#UserID}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = context.expand( '${#Project#expectHTTPcontenttype}' );
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
	break;

	case "USER_PRIVILEGE_CANNOT_BE_CHANGED":
	XMLbodynull     = false;
	expectHTTPstatus  = "HTTP/1.1 403 Forbidden";
	errorID  = "urn:dece:errorID:org:dece:UserPrivilegeCannotBeChanged";
	errorReason ="The member's permission level cannot be changed.";
	errorLink   ="$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeCannotBeChanged";
	break;

	case "NOT_ALLOWED_TO_UPDATE_INFO":
 	expectHTTPstatus  = "HTTP/1.1 403 Forbidden";
	errorID  = "urn:dece:errorID:org:dece:RequestorNotAllowedToUpdateUserInformation";
	errorReason = "The requesting member cannot update member information.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToUpdateUserInformation"
	break;

	case "REQUESTOR_PRIVILEGE_INSUFFICIENT_TO_UPDATE_USER_CLASS":
 	expectHTTPstatus  = "HTTP/1.1 403 Forbidden";
	errorID  = "urn:dece:errorID :org:dece:RequestorPrivilegeInsufficientToUpdateUserClass";
	errorReason = "The requesting member does not have permission to change the member's permission level.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToUpdateUserClass"
	break;

	case "COUNTRY_CANNOT_BE_CHANGED_ONCE_SET":
	XMLbodynull     = false;
 	expectHTTPstatus  = "HTTP/1.1 400 Bad Request";
	errorID  = "urn:dece:errorID :org:dece:CountryCannotBeChangedOnceSet";
	errorReason = "The country cannot be changed.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#CountryCannotBeChangedOnceSet"
	break;

	case "UNAUTH_CLG_CHANGE":
	expectHTTPstatus  = "HTTP/1.1 403 Forbidden";
	errorID  = "urn:dece:errorID:org:dece:UnauthorizedCLGChangeInRequest";
	errorReason = "The connected legal guardian (CLG) change request is not authorized.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UnauthorizedCLGChangeInRequest";
	break;
	
	case "UNAUTH_NODE_TO_UPDATE_INFO":
 	expectHTTPstatus  = "HTTP/1.1 403 Forbidden";
	errorID  = "urn:dece:errorID:org:dece:NodeUnauthorizedToUpdateUserInformation";
	errorReason = "The node is not authorized to update member information.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToUpdateUserInformation"
	break;

	
	case "REQUESTOR_NOT_ALLOWED_TO_UPDATE_OTHER_USERS":
	XMLbodynull     = false;
 	expectHTTPstatus  = "HTTP/1.1 400 Bad Request";
	errorID  = "urn:dece:errorID :org:dece:RequestorNotAllowedToUpdateOtherUsers";
	errorReason = "The requesting member cannot update another member.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToUpdateOtherUsers"
	break;

	case "INVALID_STATUS":
	XMLbodynull     = false;
	expectHTTPstatus  = "HTTP/1.1 400 Bad Request";
	errorID  = "urn:dece:errorID:org:dece:UserStatusNotValid";
	errorReason = "The member's status is not valid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserStatusNotValid";
	break;

	case "FULL_ACCESS_USER_MUST_BE_18_OR_OLDER":
	XMLbodynull     = false;
 	expectHTTPstatus  = "HTTP/1.1 403 Forbidden";
	errorID  = "urn:dece:errorIDorg:dece:A full-access member must be 18 or older";
	errorReason = "A full-access member must be 18 or older.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FullAccessUserMustBe18OrOlder";
	break;

	case "LAST_FULL_ACCESS_USER_CANNOT_BE_DEMOTED_TO_STANDARD_OR_BASIC_PRIVILGE":
	XMLbodynull     = false;
 	expectHTTPstatus  = "HTTP/1.1 403 Forbidden";
	errorID  = "urn:dece:errorIDorg:dece:LastFullAccessUserCannotBeDemotedToStandardOrBasicPrivilege";
	errorReason = "The permission level of the last remaining full-access member in an account cannot be changed.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#LastFullAccessUserCannotBeDemotedToStandardOrBasicPrivilege"
	break;


	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "The API call is not authorized.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "DOB_NOT_EDITABLE":
	XMLbodynull     = false;
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID  =  "urn:dece:errorid:org:dece:DateOfBirthNotEditable";
	errorReason = "A member's date of birth cannot be changed.";
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
     errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#DateOfBirthNotEditable" ;
	break;



	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	case "NOT_ALLOWED_TO_UPDATE_ACS_LEVEL":
	XMLbodynull     = false;
 	expectHTTPstatus  = "HTTP/1.1 403 Forbidden";
	errorID  = "urn:dece:errorid:org:dece:RequestorNotAllowedToUpdateUserAccessLevel";
	errorReason = "The requesting member cannot update a member's permission level.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToUpdateUserAccessLevel"
   break;


	case "USER_NOT_VALID":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserIdInvalid";
		errorReason = "The user ID is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
	break;

	case "USER_INACTIVE":
	expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
	errorReason = "The requesting member is not active.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;

	case "NOT_ALLOWED_TO_UPDATE_OTHERS":
	XMLbodynull     = false;
 	expectHTTPstatus  = "HTTP/1.1 400 Bad Request";
	errorID  = "urn:dece:errorID:org:dece:RequestorNotAllowedToUpdateOtherUsers";
	errorReason = "The requesting member cannot update another member.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToUpdateOtherUsers"
	break;

     case "URL_NOT_FOUND":
	expectHTTPstatus = "HTTP/1.1 404 Not Found";
	expectHTTPcontenttype = "text/xml"
	XMLbodynull     = true;
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "MTHD_NOT_ALLWD":
	expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
	expectHTTPcontenttype = "text/plain; charset=UTF-8"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "USER_NOT_IN_ACC":
	expectHTTPstatus = "HTTP/1.1 404 Not Found";
	errorID     = "urn:dece:errorid:org:dece:UserNotFound";
	errorReason = "The user ID was not found.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotFound";
	break;

     case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;

	case "NO_ENABLE_MNG_USR_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the EnableManageUserConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:EnableManageUserConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:EnableManageUserConsentRequired";
	break;

	case "NO_MNG_USR_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageUserConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
	break;

	case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		//errorReason = "The identified account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "SPL_CS_ALLOWED_ACCT":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;

     case "SPL_CS_ALLOWED_USER":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToDeleteSuspendedUsers";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToDeleteSuspendedUsers";
     break;

    case "REQUESTEE_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorReason = "The member has been removed.";
		errorID     = "urn:dece:errorid:org:dece:AccountUserStatusDeleted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserStatusDeleted";
	break;
      
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;
/*
//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
*/
//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

	assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
	
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	accountid     = urlStr.substring(lastColon + 1);
	
	tC.setPropertyValue("ACCID",accountid);
	
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}


//

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}
if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		//assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		//assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	}
} </script></con:config></con:testStep><con:properties><con:property><con:name>ResponseType</con:name><con:value>UNAUTH_NODE_TO_UPDATE_INFO</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:NodeUnauthorizedToUpdateUserInformation">
      <Reason Language="en">The node is not authorized to update member information.</Reason>
      <OriginalRequest>https://qa.p.uvvu.com:7001/rest/1/07/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE40D5200989FCC89E0401F0A079901AE/User/urn%3Adece%3Auserid%3Aorg%3Adece%3AE40D52009981CC89E0401F0A079901AE</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/07/error/en/ErrorList.html#NodeUnauthorizedToUpdateUserInformation</ErrorLink>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 403 Forbidden</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">848</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_02012_UserUpdate_FUNC_CHILD_Update_CHILD_Access 400 Bad Request</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Update_GeoProfile_CS</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E40D5200989FCC89E0401F0A079901AE</con:value></con:property><con:property><con:name>SecondUserName</con:name><con:value>username_20130122_043244</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVfZcuq6En3nKyj2I0U8YMCmklTJExgwk834csrI8gCe8IANX39kCOwkO9k35z6B2q3u1YNaS8+J4Xt0FyQJilM3DKqK+FL7Z9eyOgzsmI32rtlqMDTHNrgWQzaQ1WQY2GQsps3WqkqSZEgJktQI0pcaTVLNBsk2qLZOsl261aXZJ6rNbWvVJYoTbBqrPJG1auF7QdK9un2pZXHQDY3ETbqB4aOkm8KuBtRRF2t2jTum2uvzDeXVYfzqpGnUJQj4ZCKIPA8+wdAnnokPOs9m0tVcOzDSLEZvPs3kpfa2N8/zp7z5FMY2QZMkSZAcgXXMxLV/1V4r983IVAIrvK0FIwgDFxqeezFKUCpKndCsAs8OYzd1/G9MUwRFlqYbqIANSDHBrxrx28EV3Q8tfQAZJ0YjcQzqbmyOLBSjAKLqYq681H79rIK3vXpsBIkVxn7yaf3fIKHghLwwQmYjuUd2R/dzi1+k6/UZwa4SQC9L3BMal20SGRAl1WmMLLcYuQluPjOpXstfLZJ7hyH4X0ryTLzHiWETX2RGdG2UpP9Pvd7X6mZlaXgZemWjzhCq4+mOnCC2SfaPUtPTIsPqWYeXK4T3yjdQj1K/rT836qOv3jZ5gxMrpAdLFk6UU8wtskhXG2FLG5dLDlnHWmiiTnnDneaZIeTSlRppNtnq+EMJjSaivrWV0bA1PNvkHLEVZ7/RWSdb0bvj7qixeS84K/OWIcHxcdKr99cpNQWjQpYtj++srI0rprM1IthIydtyX1+CsZA241lzQs21rLKf7UfGqDUYsfVeKLLT+pZ5+R3T+xjKuIbofA2y/L9ukZxopMZjIZSTwsLHM0WvqqIIdVEQABJskCs8sBV+dAFj3j4cnYPb43KSB7OFDERwVucgF+2NuJzNhlJuLpfedqnIMq/OmbwPNmIFfxClYilu1wPSWG2jDS2TW43nzfU83DUHkdk/5H0HjlVdzce6clb3UjHWJXJ1ldkFXl/UvUpN9EWzstrznDqXcjG/ehSl3BlvV/Nos+ByeJFmKmB6gFpIgqP2dX9JwebcgXtppILDVc47qrBcqoWkg2mFt8dLHJsuyNsI+ma08z3nnfE+Nq6bveV51/Oy7UXaq4LUE7RjT1N2TXEmDcB8s9itlgdjJZ8qsD8Gu7tHt+Ua6zC3t2wuzjaDYbhVnBMcg5nE8zOA00UCVekNQNjjgcoAt7gIe74dCqacEwM6qdQ5r9den93jOjF6pGdQLEttRqv29NgWpaC+HWa7vaM6a3lSH2rmacGl3GWTnOqntuFSsIis2Vrqp8PC6s+0ym4qFmvYr5v2gPAunByrnQGIL2fHU+15umpPkvPOtawVv54wXsfy1OY8sjwrOid1PZwdYrLNoyZNbM6nYVoBtsoD0Nsv9vxM5dkyqaaSzzYqbwBZSjNw2dPpkF4eB/2TBzdNEBbD1WR/eCuMKeYST+QzCbeVVGFFYJZF6GsLSd6DBW/bMW9LMj+DIphtlGG+wfla9LHy5zzK1zzaEg+k5ha0uX6luSC5dJJqDAPOAb8IZM5Rj8XKbPtk54ikkTaOmFxNxlawXYUH1XfjRZxpi+FwPCp2etY77PGsskhteGpuK9LpEAF3PNSdgxiKxjTabNKoHsAYpkrkq0pxmWyTPevufHJQb1H8lBRhh174u3zRM6TtMLY1atifB9Nmh6skmXXu+/U9m6/qutaOOqYQWOL5TGzjJRmCUObmraNZ0PTBWeSjdm4NwGFn0OPC4/gzJw23Oszns+FK8+utSus0GvnkRSeYcTTJtV7OSLNZvWnyel9PotjdZKxdxJPApDdG2j5tyWXbjbwDR2cHnYmaS9vHxZqezKijTiszZg23vt2J4ICYEycgdayR0jvvLsYl8ifwNkA/T4eH8DY/iPeT5cPouZMODXcrgul9WV5AiliV8a1gpH8nMKXENRvWVbUblSwoSVGQ1l7LXSV56WaY4rhmF18Zt7XEkGILXx4cRzcFgeUkkiEpmQRkh+NICkh3lnND8QmiEAaWW/oqedztlvo7QOh3ExSYKG6cwgw6KKn9xWKZr6oSzPH1GwYJ0kPME2mKavMSJQGWJYWWKLUkQMuUyJMi3+YFjq5Vx2E6CSYxsFIUf+CIFPWBI84RdCMXlUSyvE0TfJ0mKU7J0ThlqUc9nYynAGWYasYl2+vSDNsiEtePPFQCJvzQzDz0FDnRNUFEcvulGwZMrlKBFCSZlUhWwDdDR2w/EtviOIom+SsF+Db2z9/uacI6plsqJGWgPMKlRl8wYeoe5ffZYN5n424eZKZb3vQ452nswhuSj59+t1LZQ48+mkv6P4L2D3XH/VD/LPhgmvgc1cObeXLh40Q8HguYa2I28nov2NF4Oj5lp1N2LVGnZFoxNk9QBNkhNAQzTJfOenhAAfEwQfyIqT5Qf/L8kH/El6VOoKX4tPu4oarX5Q+eKRpKymeKgg9E8dM30AeXOG8pKtKvZIKHXzMl4r8+eGAXlnpYPMU/eRibv8v1ha13fnCc5XhzA7tclbz0/E1nwBCbdfGIC+P3xr8y8JXzj8JHkh9YUtxNuyxF33+plrPrpWZAGGZBqoi1q+D9PL3iTM8R6v5W+sPMlRm+Uf0i+Zbqr9WRhiebb9Qeuu7/Vm6413aBCO9K3CuWl1qBX63YeWC/m99vAL8c4Swn/22Ef4zk9Q/xn5J3Of18Hl7/BQ==</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E40D52009981CC89E0401F0A079901AE</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE19E24F0C476894EE0401F0A05992542</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:/certs/RET_CS_1_concat.pem</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2002-08-19</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>UserName</con:name><con:value>seconduser20130816_015753</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E40D520098B5CC89E0401F0A079901AE</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E26875D79D093C60E0401F0A05996273</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>seconduser20130816_015753</con:value></con:property><con:property><con:name>SurName</con:name><con:value>seconduser20130816_015753</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>test_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3ATermsOfUse</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE40D5200989FCC89E0401F0A079901AE</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE40D52009981CC89E0401F0A079901AE</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>coordinatorSchema</con:name><con:value>${#Project#coordinatorSchema}</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E40D520099C8CC89E0401F0A079901AE"</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-08-03</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-08-16</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5ff78eb3-d79f-4f4a-b9a8-5ec1c84f61c0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3d78db1c-105b-43a0-b406-6bb0f690c833</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662fb201-c4e7-401c-b10a-548ea13f5020</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="User_DB_Validations" searchProperties="true" id="1cc8c7f1-8717-461e-801a-f31149324c32"><con:settings/><con:testStep type="groovy" name="Establish_TestCase_Properties" id="43c5dbf9-3574-4373-9d3f-f1b49a7247c5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("userType",null);
tC.setPropertyValue("Privilege",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("GivenName",null);
tC.setPropertyValue("SurName",null);
tC.setPropertyValue("PrimaryEmail",null);
tC.setPropertyValue("Language1",null);
tC.setPropertyValue("DisplayImageURL",null);
tC.setPropertyValue("AlternateEmail",null);
tC.setPropertyValue("PostalAddress",null);
tC.setPropertyValue("PostalCode",null);
tC.setPropertyValue("Locality",null);
tC.setPropertyValue("StateOrProvince",null);
tC.setPropertyValue("Country",null);
tC.setPropertyValue("TelephoneNumber",null);
tC.setPropertyValue("MobileTelephoneNumber",null);
tC.setPropertyValue("MeetsAgeOfMajority",null);
tC.setPropertyValue("DateOfBirth",null);
tC.setPropertyValue("urnUser",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("QuestionID1",null);
tC.setPropertyValue("QuestionResponse1",null);
tC.setPropertyValue("QuestionID2",null);
tC.setPropertyValue("QuestionResponse2",null);
tC.setPropertyValue("ResourceStatus",null);

tC.setPropertyValue("ResponseType",null);
tC.setPropertyValue("userType",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("NODE_USER_ID_FULL",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("user_oid",null);
tC.setPropertyValue("account_oid",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract_Required_Properties_from_Calling_TestCase" id="2a994256-e261-4ca0-80c7-b287ce942e01"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("userType",callTC.getPropertyValue("userType"));
tC.setPropertyValue("GivenName",callTC.getPropertyValue("GivenName"));
tC.setPropertyValue("SurName",callTC.getPropertyValue("SurName"));
tC.setPropertyValue("PrimaryEmail",callTC.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("Language1",callTC.getPropertyValue("Language1"));
tC.setPropertyValue("DisplayImageURL",callTC.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",callTC.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",callTC.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",callTC.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",callTC.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",callTC.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",callTC.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",callTC.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",callTC.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("DateOfBirth",tP.getPropertyValue("DateOfBirth"));
tC.setPropertyValue("urnUser",callTC.getPropertyValue("urnUser"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",callTC.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",callTC.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",callTC.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",callTC.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",callTC.getPropertyValue("ResourceStatus"));

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("user_oid",callTC.getPropertyValue("user_oid"));
tC.setPropertyValue("account_oid",callTC.getPropertyValue("account_oid"));
tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserUpdate"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify_ACCOUNT_USER_Table" id="4108f834-15fa-43d3-9ca8-4257a25e02d1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("IsMinor","");

def dbHost = context.expand( '${#Project#targetsystem}' );
def userID = context.expand( '${#TestCase#user_oid}' );

def BirthDate = null;
def myXML1 = null;
def finalbday = null;

a = new dbUtils.dbUtils(log,dbHost);
b = new dbUtils.dbUser(log,dbHost);

Result = b.userGetRow(userID);

myXML1 = new XmlSlurper().parseText(Result);

log.info "Actual Rows ==  " + myXML1.ResultSet.Row.size();
		
 if(context.expand( '${#TestCase#ResponseType}')=='SUCCESS')
     {
        assert  myXML1.ResultSet.Row.size() == 1;
       	
       // assert myXML1.ResultSet.Row.STATUS == 'pending';
        assert myXML1.ResultSet.Row.PRIVILEGE == context.expand( '${#TestCase#Privilege}' );
        assert myXML1.ResultSet.Row.USERNAME == context.expand( '${#TestCase#UserName}' ) ;
        assert myXML1.ResultSet.Row.GIVEN_NAME == context.expand( '${#TestCase#GivenName}' ) ;
        assert myXML1.ResultSet.Row.SURNAME == context.expand( '${#TestCase#SurName}' ) ;
        assert myXML1.ResultSet.Row.PRIMARY_EMAIL == context.expand( '${#TestCase#PrimaryEmail}' ) ;
        assert myXML1.ResultSet.Row.TELEPHONE == context.expand( '${#TestCase#TelephoneNumber}' ) ;
        assert myXML1.ResultSet.Row.MOBILE_TELEPHONE == context.expand( '${#TestCase#MobileTelephoneNumber}' ) ;

        if(context.expand( '${#TestCase#DateOfBirth}' )== context.expand( '${#Project#CHILD_DOB_XML}' ))
        {

        	 log.info "I am CHILD";
        	 
           BirthDate = context.expand( '${#Project#CHILD_DOB_XML}' );
           assert myXML1.ResultSet.Row.AGE_CLASS == 'CHILD';

           tC.setPropertyValue("IsMinor","true");
           
         //  assert myXML1.ResultSet.Row.EMAIL_CLOCK_START_TIME == 'null' ;
         //  assert myXML1.ResultSet.Row.EMAIL_CLOCK_END_TIME == 'null' ;        
        } 
       
        else
        if(context.expand( '${#TestCase#DateOfBirth}' )== context.expand( '${#Project#YOUTH_DOB_XML}' ))
        {
        	log.info "I am YOUTH";
        	
          BirthDate = context.expand( '${#Project#YOUTH_DOB_XML}' );
          assert myXML1.ResultSet.Row.AGE_CLASS == 'YOUTH';

          tC.setPropertyValue("IsMinor","true");

                    
        //  assert myXML1.ResultSet.Row.EMAIL_CLOCK_START_TIME == 'null' ;
        //  assert myXML1.ResultSet.Row.EMAIL_CLOCK_END_TIME == 'null' ;

         } 
        else
        if(context.expand( '${#TestCase#DateOfBirth}' )== context.expand( '${#Project#ADULT_DOB_XML}' ))
        {

        	log.info "I am ADULT";
        	
          BirthDate = context.expand( '${#Project#ADULT_DOB_XML}' );
          
          assert myXML1.ResultSet.Row.AGE_CLASS == 'ADULT';

          tC.setPropertyValue("IsMinor","false");
          
        /* if(context.expand( '${#TestCase#attested}' ) == 'true')
          {
            assert myXML1.ResultSet.Row.EMAIL_CLOCK_START_TIME == 'null' ;
            assert myXML1.ResultSet.Row.EMAIL_CLOCK_END_TIME == 'null' ;
          }
          else
          {
            assert myXML1.ResultSet.Row.EMAIL_CLOCK_START_TIME != 'null' ;
            assert myXML1.ResultSet.Row.EMAIL_CLOCK_END_TIME != 'null' ;	
          }
          */ 
        } 

          // Retrieving Birth Date in proper format
 /******************************************************************************************************/
          
         bdaystring = myXML1.ResultSet.Row.BIRTH_DATE.toString();

         int lastspace = bdaystring.lastIndexOf(' ');

         finalbday = bdaystring.substring(0,lastspace);
          
         log.info "Birth Day:  " + finalbday;
       
        assert finalbday == BirthDate;

/******************************************************************************************************/

        assert myXML1.ResultSet.Row.COUNTRY == context.expand( '${#Project#GeoProfile}' );

        if(context.expand( '${#TestCase#attested}' ) == 'true')
        {
          assert myXML1.ResultSet.Row.PRIMARYEMAIL_VERIFICATION_DATE != null ;
          assert myXML1.ResultSet.Row.PRIMARYEMAIL_VERIFICATION_ENTY != null ;
          assert myXML1.ResultSet.Row.PRIMARYEMAIL_VERIFICATION_ID != null ;
        }  

      log.info "User Validations Passed";
               
   }// end if for success response check
  else
  {
  	assert  myXML1.ResultSet.Row.size() == 0;
  	log.info "No Validation Required";
  }
  

   
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify_NODE_USER_Table" id="d5048118-293d-456d-bcb5-ee8b23237085"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def dbHost = context.expand( '${#Project#targetsystem}' );
def userID = context.expand( '${#TestCase#user_oid}' );
def nodeid =context.expand('${#TestCase#nodeid}' );

a = new dbUtils.dbUtils(log,dbHost);
b = new dbUtils.dbUser(log,dbHost);
c=  new dbUtils.dbNode(log,dbHost);
//log.info b.accountGetfromNodeAccountId(accID);

String sql = """select to_char(rawtohex(NODE_OID)) NODE_OID from NODE_USER where USER_OID = '$userID'""";

log.info sql;

results = a.SelectFromDB(sql,dbHost);

log.info results;

/*
*  If zero length, no need to continue;
*/
 assert results.length() > 0;

  def myXML = new XmlSlurper().parseText(results);
  
  log.info "myXML.ResultSet.Row.size() is [" + myXML.ResultSet.Row.size() + "]";


if (context.expand( '${#TestCase#ResponseType}' ) == 'SUCCESS')
{
	assert myXML.ResultSet.Row.size() > 0;


	if(nodeid=="dece:cs"|| nodeid=="coord:cs" || nodeid=="portal" || nodeid=="portal:cs")
     {  
       assert myXML.ResultSet.Row.size() == 4;  
       //assert myXML.ResultSet.Row[0].NODE_OID == context.expand( '${#Project#Node_OID}' ); 
       log.info "DECE Node User Validation Passed";     
     }
     else
     { 
       assert myXML.ResultSet.Row.size() == 5;
      // assert myXML.ResultSet.Row[0].NODE_OID == context.expand( '${#Project#Node_OID}' );    
      // assert myXML.ResultSet.Row[1].NODE_OID == "10"; 
       log.info "3rd Party Node User Validation Passed";    
     }
	
}
else
{
	assert myXML.ResultSet.Row.size() == 0;
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify_USER_LEGAL_GUARDIAN_Table" id="70dfe865-49f8-4aca-add1-185a25e98712"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

if(context.expand( '${#TestCase#IsMinor}' )=="true")
{
def dbHost = context.expand( '${#Project#targetsystem}' );
def userID = context.expand( '${#TestCase#user_oid}' );

  a = new dbUtils.dbUtils(log,dbHost);
  b = new dbUtils.dbUser(log,dbHost);

  String sql = """select ATTESTATION_STATUS from USER_LEGAL_GUARDIAN where USER_OID ='$userID'""";
  results = a.SelectFromDB(sql,dbHost);

  /*
  *  If zero length, no need to continue;
  */
   assert results.length() > 0;

   def myXML = new XmlSlurper().parseText(results);
  
   log.info "myXML.ResultSet.Row.size() is [" + myXML.ResultSet.Row.size() + "]";

   assert myXML.ResultSet.Row.size() > 0;
	
   assert myXML.ResultSet.Row[0].ATTESTATION_STATUS == "pending";  

   log.info "Legal Guardian Validation Passed";	
}
else
{
	log.info "No Legal Guardian Validation Required";
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify_USER_Policies" id="301570ed-8bd6-4339-b7c4-a3404efd7948"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

if(context.expand( '${#TestCase#IsMinor}' )=="true")
{
def dbHost = context.expand( '${#Project#targetsystem}' );
def userID = context.expand( '${#TestCase#user_oid}' );

  a = new dbUtils.dbUtils(log,dbHost);
  b = new dbUtils.dbUser(log,dbHost);

  String sql = """select POLICY_CLASS,STATUS from POLICY P, POLICY_RELATIONSHIP PR where PR.POLICY_ACTOR = '"""+b.userGetfromNodeUserId(userID)+"""'
  and P.POLICY_OID = PR.POLICY_OID""";

  results = a.SelectFromDB(sql,dbHost);

  /*
  *  If zero length, no need to continue;
  */
   assert results.length() > 0;

   def myXML = new XmlSlurper().parseText(results);
  
   log.info "myXML.ResultSet.Row.size() is [" + myXML.ResultSet.Row.size() + "]";

   assert myXML.ResultSet.Row.size() > 0;
	
   assert myXML.ResultSet.Row[0].ATTESTATION_STATUS == "pending";  

   log.info "Legal Guardian Validation Passed";	
}
else
{
	log.info "No Legal Guardian Validation Required";
}
</script></con:config></con:testStep><con:properties><con:property><con:name>IsMinor</con:name><con:value/></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00004_UserUpdate_FUNC_CLG_Update_CHILD_DOB_TO_YOUTH_AGE</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Update_GeoProfile</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>Username</con:name><con:value>seconduser20130813_120746</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>seconduser20130813_120746</con:value></con:property><con:property><con:name>SurName</con:name><con:value>seconduser20130813_120746</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>test_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-08-17</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseType</con:name><con:value>DOB_NOT_EDITABLE</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE3CF68DF2A8CD783E0401F0A07994C97</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E3CF68DF2A8CD783E0401F0A07994C97</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>user_oid1</con:name><con:value>E2A349A2ABBCCB1DE0401F0A059926E1</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E3CF68DF2A8DD783E0401F0A07994C97</con:value></con:property><con:property><con:name>user_oid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E3CF692D5BE44697E0401F0A05993AD3</con:value></con:property><con:property><con:name>attested</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="FirstUserCreate API" searchProperties="true" id="0559683a-89a8-4543-9672-06581fc3aece"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="bedc0ab9-3355-4621-b7e0-f48610b91460"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("userType",null);
tC.setPropertyValue("Privilege",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("GivenName",null);
tC.setPropertyValue("SurName",null);
tC.setPropertyValue("PrimaryEmail",null);
tC.setPropertyValue("Language1",null);
tC.setPropertyValue("DisplayImageURL",null);
tC.setPropertyValue("AlternateEmail",null);
tC.setPropertyValue("PostalAddress",null);
tC.setPropertyValue("PostalCode",null);
tC.setPropertyValue("Locality",null);
tC.setPropertyValue("StateOrProvince",null);
tC.setPropertyValue("Country",null);
tC.setPropertyValue("TelephoneNumber",null);
tC.setPropertyValue("MobileTelephoneNumber",null);
tC.setPropertyValue("MeetsAgeOfMajority",null);
tC.setPropertyValue("DateOfBirth",null);
tC.setPropertyValue("urnUser",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("QuestionID1",null);
tC.setPropertyValue("QuestionResponse1",null);
tC.setPropertyValue("QuestionID2",null);
tC.setPropertyValue("QuestionResponse2",null);
tC.setPropertyValue("ResourceStatus",null);

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_USER_ID_FULL",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("user_oid1",null);
tC.setPropertyValue("account_oid",null);

tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("ResponseType",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="4ae93ffb-a493-4199-bb3b-ede863d5de79"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserCreate"));

tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("userType",callTC.getPropertyValue("userType"));
tC.setPropertyValue("GivenName",callTC.getPropertyValue("GivenName"));
tC.setPropertyValue("SurName",callTC.getPropertyValue("SurName"));
tC.setPropertyValue("PrimaryEmail",callTC.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("Language1",callTC.getPropertyValue("Language1"));
tC.setPropertyValue("DisplayImageURL",callTC.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",callTC.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",callTC.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",callTC.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",callTC.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",callTC.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",callTC.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",callTC.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",callTC.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("urnUser",callTC.getPropertyValue("urnUser"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",callTC.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",callTC.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",callTC.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",callTC.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",callTC.getPropertyValue("ResourceStatus"));

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", URLDecoder.decode(callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL")));
}
else
{
	tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", URLEncoder.encode(URLDecoder.decode(callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))));
}

tC.setPropertyValue("user_oid1",callTC.getPropertyValue("user_oid"));
tC.setPropertyValue("account_oid",callTC.getPropertyValue("account_oid"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Setting constants based on Geo Profile" id="41c0ba17-fa13-480d-8834-3f12d3df65f6"><con:settings/><con:config><script>import java.text.SimpleDateFormat;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/* Setting constants based on Geo Profile*/

if(tP.getPropertyValue("Country")=="US")
{
  tP.setPropertyValue("GeoProfile","US");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","13");
  tP.setPropertyValue("CHILD_MAX_AGE","12");
}
else
if(tP.getPropertyValue("Country")=="CA")
{
  tP.setPropertyValue("GeoProfile","CA");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","13");
  tP.setPropertyValue("CHILD_MAX_AGE","12");
}
else
if(tP.getPropertyValue("Country")=="GB")
{
  tP.setPropertyValue("GeoProfile","GB");          
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
else
if(tP.getPropertyValue("Country")=="AU")
{
  tP.setPropertyValue("GeoProfile","AU");          
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
  else
if(tP.getPropertyValue("Country")=="NZ")
{
  tP.setPropertyValue("GeoProfile","NZ");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
  else
if(tP.getPropertyValue("Country")=="IE")
{
  tP.setPropertyValue("GeoProfile","IE");             
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
else
if(tP.getPropertyValue("Country")=="AT")
{
  tP.setPropertyValue("GeoProfile","AT");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","14");
  tP.setPropertyValue("CHILD_MAX_AGE","13");
}
else
if(tP.getPropertyValue("Country")=="DE")
{
  tP.setPropertyValue("GeoProfile","DE");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","14");
  tP.setPropertyValue("CHILD_MAX_AGE","13");
}
  else
if(tP.getPropertyValue("Country")=="CH")
{
  tP.setPropertyValue("GeoProfile","CH");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
  else
if(tP.getPropertyValue("Country")=="FR")
{
  tP.setPropertyValue("GeoProfile","FR");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("CHILD_MAX_AGE","17");
}

	def userType = tC.getPropertyValue("userType")
	log.info "userType: "+userType;
	
	switch(userType){
	
	case "ADULT":
	
	Date dob = (new Date());
	dob = dob - ((tP.getPropertyValue("ADULT_MIN_AGE").toInteger()+1)*365);
	log.info "Adult DateOfBirth: "+dob.format('yyyy-MM-dd');
	tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
	tC.setPropertyValue("ADULT_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "YOUTH":
	
	Date dob = (new Date());
	dob = dob - ((tP.getPropertyValue("YOUTH_MIN_AGE").toInteger()+1)*365);
	log.info "YOUTH DateOfBirth: "+dob.format('yyyy-MM-dd');
	tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
	tC.setPropertyValue("YOUTH_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "CHILD":
	
	Date dob = (new Date());
	dob = dob - ((tP.getPropertyValue("CHILD_MAX_AGE").toInteger()-1)*365);
	log.info "CHILD DateOfBirth: "+dob.format('yyyy-MM-dd');
	tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
	tC.setPropertyValue("CHILD_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "ADULTPlus":
	
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, -1);
	def dob = sdf.format(calendar.getTime());
	log.info "AdultPlus DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	tC.setPropertyValue("ADULT_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "ADULTMinus":
	
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear1 = today.get(Calendar.YEAR)- tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear1-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, +1);
	def dob = sdf.format(calendar.getTime());
	log.info "ADULTMinus DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	tC.setPropertyValue("YOUTH_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "YOUTHPlus":
		
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, -1);
	def dob = sdf.format(calendar.getTime());
	log.info "YOUTHPlus DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob);
	tC.setPropertyValue("YOUTH_DOB_XML",dob.format('yyyy-MM-dd')); 
	break;

	case "YOUTHMinus":
   	
   	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, +1);
	def dob = sdf.format(calendar.getTime());
	log.info "YOUTHMinus DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	tC.setPropertyValue("CHILD_DOB_XML",dob.format('yyyy-MM-dd')); 
	break;

	case "ADULTToday":
	 
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, 0);
	def dob = sdf.format(calendar.getTime());
	log.info "ADULTToday DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	tC.setPropertyValue("ADULT_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "YOUTHToday":

	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear1 = today.get(Calendar.YEAR)- tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear1-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, 0);
	def dob = sdf.format(calendar.getTime());
	log.info "YOUTHToday DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	tC.setPropertyValue("YOUTH_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	default:
	log.info "userType is not matched!!"
	break;

	}

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="7c12515d-c0f7-4a6c-a684-75453558cb42"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("User_Create");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="User_Create" id="023f1f23-a8b5-425d-9e29-a568f9e8445e"><con:settings/><con:config service="FirstUserCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" methodName="FirstUserCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User_Create" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="RET_concat.pem" id="724e5565-4aea-428e-b350-ee18e51cc2bd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request>${#Project#Request_XML}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1" id="dc7939c7-4e38-4936-ab5e-97a276c8b7cf"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="ffed8a39-2649-4812-a385-bceebc786337"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('User_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 			
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="a2ce6c17-6e9b-454c-9aa6-9a3043335d92"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
def primaryEmail = context.expand( '${#TestCase#PrimaryEmail}');
//def nodetype      = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = context.expand( '${#Project#expectHTTPcontenttype}' );
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/

if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
		expectHTTPconnection = "close";
	break;

	case "INVALID_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
		errorReason = "The supplied country code is invalid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
		expectHTTPconnection = "close";
	break;

	case "NULL_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
		errorReason = "The country code cannot be null.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
		expectHTTPconnection = "close";
	break;
	
	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
		errorReason = "API call not authorized";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserNotActive";
		errorReason = "User is not active";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
		errorReason = "Requesting User ID Not Specified";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
		expectHTTPconnection = "close";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

		case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The user does not have permission to create a full-access user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The user does not have permission to create a user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:FirstUserMustBe18OrOlder";
		errorReason = "First User must be 18 years or older";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBe18OrOlder";
	break;


	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The first user in a household account must be a full-access user.";
		errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;

	case "INVALID_PASSWORD":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorReason = "The password is not valid.";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPasswordNotValid";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPasswordNotValid";
		expectHTTPconnection = "close";
	break;

	case "INVALID_PRIMARY_EMAIL":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPrimaryEmailNotValid";
		errorReason = "The primary email address is not valid. - " + primaryEmail;
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPrimaryEmailNotValid";
		expectHTTPconnection = "close";
	break;
	case "INVALID_GEO":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestedOperationNotAllowedForSpecifiedGeography";
		errorReason = "The requested operation is not allowed for the specified geography.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestedOperationNotAllowedForSpecifiedGeography";

	break; 
	
}

tC.setPropertyValue("expectHTTPstatus",expectHTTPstatus);


// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
/*
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
*/
//Location Header

if (httpLocationHeader) {
	 assert context.expand( '${#TestCase#httpLocation}') != null;

      def a = context.expand( '${#TestCase#httpLocation}');
      def b = a.toURL();
      def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

      if (tP.getPropertyValue("URLEncode")=="NO"){
                                
         assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
         
         int lastColon = urlStr.lastIndexOf(':');
         int lastSlash = urlStr.lastIndexOf('/');
         userid     = urlStr.substring(lastColon + 1);
         def node_User = urlStr.substring(lastSlash + 1);
                                           
         tC.setPropertyValue("NODE_USER_ID",userid);

          tC.setPropertyValue("NODE_USER_ID_FULL",node_User);                        
          tC.setPropertyValue("NODE_USER_ID_FULL_Encoded",URLEncoder.encode(node_User,"UTF-8")); 
          tC.setPropertyValue("NODE_USER_ID_FULL_Decoded",URLDecoder.decode(node_User,"UTF-8")); 
          
      } else {

         assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");
         int lastColon = urlStr.lastIndexOf('%3A');
         int lastSlash = urlStr.lastIndexOf('/');
         userid     = urlStr.substring(lastColon + 3);
         def node_User = urlStr.substring(lastSlash + 1);
                                
         tC.setPropertyValue("NODE_USER_ID",userid);

          tC.setPropertyValue("NODE_USER_ID_FULL",node_User);                        
          tC.setPropertyValue("NODE_USER_ID_FULL_Encoded",URLEncoder.encode(node_User,"UTF-8")); 
          tC.setPropertyValue("NODE_USER_ID_FULL_Decoded",URLDecoder.decode(node_User,"UTF-8")); 
         
       }
      }
                                

else {
                                
       	assert context.expand( '${#TestCase#httpLocation}') == "";
}





//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		log.info errorLink;
		log.info myXML.Error.ErrorLink.toString()
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract_Account_OID_and_User_OID" disabled="true" id="ca396c35-eafa-4355-8444-c969f9a3aec4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def dbUser;

def expectHTTPstatus = tC.getPropertyValue("expectHTTPstatus");

if (expectHTTPstatus == "HTTP/1.1 201 Created")
     {  	
  		def dBHost = context.expand( '${#Project#targetsystem}' )
		
		try          {
		                dbUser = new dbUtils.dbUser(log,dBHost);
		                }
		catch(Throwable e) {
		                log.info "ERROR - dbUtils.dbUser - $e";
		                assert 1 == 2;
		                }
		finally {
		         try {
		                 String u = dbUser.userGetUserOID(tC.getPropertyValue("UserName"));
		                 String a = dbUser.userGetAccountOIDbyUsername(tC.getPropertyValue("UserName"))
		
		                 assert u.length() > 0;
		                 assert a.length() > 0;
		                 
		                 tC.setPropertyValue("user_oid", u);
		                 tC.setPropertyValue("account_oid", a);
		                }
		          catch(Throwable e) {
		                 log.info "ERROR - dbUtils.userGetUserOID - $e";
		                 assert 1 == 2;                     
		     		     }
				}
     }
     else
     {
     	log.info ("Can not retreive User_OID for a negative scenario");
     }
     

</script></con:config></con:testStep><con:testStep type="groovy" name="Return the Username and NodeUserId to the Calling Test Case" id="e27e4584-6c0b-409f-af97-7768adb0c50b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID"));
callTC.setPropertyValue("NODE_USER_ID1",tC.getPropertyValue("NODE_USER_ID"));
callTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
callTC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL1"));
callTC.setPropertyValue("UserName",tC.getPropertyValue("UserName"));
callTC.setPropertyValue("user_oid1",tC.getPropertyValue("user_oid"));
callTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));
callTC.setPropertyValue("DateOfBirth",tC.getPropertyValue("DateOfBirth"));</script></con:config></con:testStep><con:properties><con:property><con:name>AlternateEmail</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value/></con:property><con:property><con:name>coordinatorSchema</con:name><con:value>${#Project#coordinatorSchema}</con:value></con:property><con:property><con:name>Country</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">IE</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1996-02-10</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>FirstFullUsername</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ugr4_bc_firstuser20150205_040822</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/2015/02/Account/urn:dece:accountid:org:dece:0E55DF4069BB33EDE05307991F0A2BFA/User/urn:dece:userid:org:dece:0E55DA062BB0684DE05305991F0AFBF3</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>Language1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">en</con:value></con:property><con:property><con:name>Locality</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0E55DF4069BB33EDE05307991F0A2BFA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:0E55DF4069BB33EDE05307991F0A2BFA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0E55DA062BB0684DE05305991F0AFBF3</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0E55DA062BB0684DE05305991F0AFBF3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:E955244D9A018971E0401F0A07992091</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">full</con:value></con:property><con:property><con:name>QuestionID</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1650</con:value></con:property><con:property><con:name>QuestionResponse</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ResponseType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>sName</con:name><con:value>First_User_Create</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ugr4_bc_firstuser20150205_040822</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">+1.703598741</con:value></con:property><con:property><con:name>tName</con:name><con:value>Account_Create_Firsrt_User_Create_STS_Policies</con:value></con:property><con:property><con:name>urnUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>UserName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ugr4_bc_firstuser20150205_040822</con:value></con:property><con:property><con:name>userType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ADULT</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>user_oid</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>account_oid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">06C9F8B2728B771EE05307991F0AFB05</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectHTTPstatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1996-02-10</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL_Encoded</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A0E55DA062BB0684DE05305991F0AFBF3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL_Decoded</con:name><con:value>urn:dece:userid:org:dece:0E55DA062BB0684DE05305991F0AFBF3</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>3d78db1c-105b-43a0-b406-6bb0f690c833</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662fb201-c4e7-401c-b10a-548ea13f5020</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserCreate API" searchProperties="true" id="30aefa36-5265-4855-8432-a953e41b8771"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="cc7ab515-dee1-4301-a271-69c0066d67df"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("userType",null);
tC.setPropertyValue("Privilege",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("GivenName",null);
tC.setPropertyValue("SurName",null);
tC.setPropertyValue("PrimaryEmail",null);
tC.setPropertyValue("Language1",null);
tC.setPropertyValue("DisplayImageURL",null);
tC.setPropertyValue("AlternateEmail",null);
tC.setPropertyValue("PostalAddress",null);
tC.setPropertyValue("PostalCode",null);
tC.setPropertyValue("Locality",null);
tC.setPropertyValue("StateOrProvince",null);
tC.setPropertyValue("Country",null);
tC.setPropertyValue("TelephoneNumber",null);
tC.setPropertyValue("MobileTelephoneNumber",null);
tC.setPropertyValue("MeetsAgeOfMajority",null);
tC.setPropertyValue("DateOfBirth",null);
tC.setPropertyValue("urnUser",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("QuestionID1",null);
tC.setPropertyValue("QuestionResponse1",null);
tC.setPropertyValue("QuestionID2",null);
tC.setPropertyValue("QuestionResponse2",null);
tC.setPropertyValue("ResourceStatus",null);

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_USER_ID_FULL",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("SAML",null);
//
//tC.setPropertyValue("ResponseType","SUCCESS");

def request_XML_Buffer = context.expand( '${#Project#Request_XML_Buffer}' )
tP.setPropertyValue("Request_XML",request_XML_Buffer);

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="815bff3b-842a-4070-86bb-cece5b19c7a8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tP.setPropertyValue("Request_XML",tP.getPropertyValue("Request_XML_Buffer"));

tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserCreate"));

tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("userType",callTC.getPropertyValue("userType"));
tC.setPropertyValue("GivenName",callTC.getPropertyValue("GivenName"));
tC.setPropertyValue("SurName",callTC.getPropertyValue("SurName"));
tC.setPropertyValue("PrimaryEmail",callTC.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("Language1",callTC.getPropertyValue("Language1"));
tC.setPropertyValue("DisplayImageURL",callTC.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",callTC.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",callTC.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",callTC.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",callTC.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",callTC.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",callTC.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",callTC.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",callTC.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("urnUser",callTC.getPropertyValue("urnUser"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",callTC.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",callTC.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",callTC.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",callTC.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",callTC.getPropertyValue("ResourceStatus"));
tC.setPropertyValue("LegalGuardian",callTC.getPropertyValue("LegalGuardian"));

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
if( tP.getPropertyValue("URLEncode") == "NO")
{
	tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", URLDecoder.decode(callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL")));

}
else
{
	tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", URLEncoder.encode(URLDecoder.decode(callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))));

	
}
tC.setPropertyValue("NODE_USER_ID1", callTC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL", callTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("SAML",callTC.getPropertyValue("SAML"));
tC.setPropertyValue("CLG_NODE_USER_ID",callTC.getPropertyValue("CLG_NODE_USER_ID"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Setting constants based on Geo Profile" id="f23d9bb0-0bd1-4723-928b-a9c1d99c147f"><con:settings/><con:config><script>import java.text.SimpleDateFormat;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/* Setting constants based on Geo Profile*/

if(tP.getPropertyValue("Country")=="US")
	{
		tP.setPropertyValue("GeoProfile","US");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","13");
		tP.setPropertyValue("CHILD_MAX_AGE","12");
	}
else
if(tP.getPropertyValue("Country")=="CA")
	{
		tP.setPropertyValue("GeoProfile","CA");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","13");
		tP.setPropertyValue("CHILD_MAX_AGE","12");
	}
else
if(tP.getPropertyValue("Country")=="GB")
	{
		tP.setPropertyValue("GeoProfile","GB");          
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="AU")
	{
		tP.setPropertyValue("GeoProfile","AU");          
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="NZ")
	{
		tP.setPropertyValue("GeoProfile","NZ");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="IE")
	{
		tP.setPropertyValue("GeoProfile","IE");             
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="AT")
	{
		tP.setPropertyValue("GeoProfile","AT");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","14");
		tP.setPropertyValue("CHILD_MAX_AGE","13");
	}
else
if(tP.getPropertyValue("Country")=="DE")
	{
		tP.setPropertyValue("GeoProfile","DE");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","14");
		tP.setPropertyValue("CHILD_MAX_AGE","13");
	}
else
if(tP.getPropertyValue("Country")=="CH")
	{
		tP.setPropertyValue("GeoProfile","CH");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="FR")
	{
		tP.setPropertyValue("GeoProfile","FR");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("CHILD_MAX_AGE","17");
	}


	def userType = tC.getPropertyValue("userType")
	log.info "userType: "+userType;
	
	switch(userType){
	
	case "ADULT":
		Date dob = (new Date());
		dob = dob - ((tP.getPropertyValue("ADULT_MIN_AGE").toInteger()+1)*365);
		log.info "Adult DateOfBirth: "+dob.format('yyyy-MM-dd');
		tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
		tC.setPropertyValue("ADULT_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "YOUTH":	
		Date dob = (new Date());
		dob = dob - ((tP.getPropertyValue("YOUTH_MIN_AGE").toInteger()+1)*365);
		log.info "YOUTH DateOfBirth: "+dob.format('yyyy-MM-dd');
		tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
		tC.setPropertyValue("YOUTH_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "CHILD":	
		Date dob = (new Date());
		dob = dob - ((tP.getPropertyValue("CHILD_MAX_AGE").toInteger()-1)*365);
		log.info "CHILD DateOfBirth: "+dob.format('yyyy-MM-dd');
		tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
		tC.setPropertyValue("CHILD_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "ADULTPlus":	
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
		log.info curYear;
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear-1900,curMonth,curDay); 
		log.info now; 
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, -1);
		def dob = sdf.format(calendar.getTime());
		log.info "AdultPlus DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("ADULT_DOB_XML",dob); 
	break;

	case "ADULTMinus":	
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear1 = today.get(Calendar.YEAR)- tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
		log.info curYear1;
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear1-1900,curMonth,curDay);  
		log.info now; 
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, +1);
		def dob = sdf.format(calendar.getTime());
		log.info "ADULTMinus DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("YOUTH_DOB_XML",dob);
	break;

	case "YOUTHPlus":
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, -1);
		def dob = sdf.format(calendar.getTime());
		log.info "YOUTHPlus DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob); 
		tC.setPropertyValue("YOUTH_DOB_XML",dob);
	break;

	case "YOUTHMinus":   	
	   	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, +1);
		def dob = sdf.format(calendar.getTime());
		log.info "YOUTHMinus DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("CHILD_DOB_XML",dob); 
	break;

	case "ADULTToday":	 
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, 0);
		def dob = sdf.format(calendar.getTime());
		log.info "ADULTToday DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("ADULT_DOB_XML",dob); 
	break;

	case "YOUTHToday":
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear1 = today.get(Calendar.YEAR)- tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear1-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, 0);
		def dob = sdf.format(calendar.getTime());
		log.info "YOUTHToday DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("YOUTH_DOB_XML",dob); 
	break;

	default:
		log.info "userType is not matched!!"
	break;

	}</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="5aec259f-6efc-4047-958a-f404549b66a3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")

myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("User_Create");

def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="User_Create" id="bdbb05a4-3195-40a4-a273-e98edb919cda"><con:settings/><con:config service="FirstUserCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" methodName="FirstUserCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User_Create" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="RET_concat.pem" id="f0fb27bf-ba63-4076-b31b-11f7ef831355"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request>${#Project#Request_XML}
</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1" id="dc7939c7-4e38-4936-ab5e-97a276c8b7cf"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="bc996057-be4c-4bee-a9ac-43bd22a866c4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('User_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);

</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="b31e8838-e244-4a70-b23e-27ecedeb39ef"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = context.expand( '${#Project#expectHTTPcontenttype}' );
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	   case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";		
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;


   case "INVALID_USER_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUsernameNotValid";
		errorReason = "The sign-in name is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUsernameNotValid";
	break;

   case "INVALID_GIVEN_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserGivenNameNotValid";
		errorReason = "The given name is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserGivenNameNotValid";
	break;

    case "INVALID_PASSWORD":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPasswordNotValid";
		errorReason = "The password is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPasswordNotValid";
	break;

    case "INVALID_SECURITY_ANS":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserSecurityAnswerNotValid";
		errorReason = "The answer to the security question is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserSecurityAnswerNotValid";
	break;

    case "INVALID_ADDRESS":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserAddressNotValid";
		errorReason = "The address is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserAddressNotValid";
	break;

	case "INVALID_SURNAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserSurnameNotValid";
		errorReason = "The surname is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserSurnameNotValid";
	break;


	case "INVALID_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
		errorReason = "The country code is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
		errorReason = "The country code is required.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "INVALID_PRIMARY_EMAIL":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPrimaryEmailNotValid";
		errorReason = "The primary email address is not valid." + primaryEmail;
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPrimaryEmailNotValid";
	break;
	
	case "INVALID_ALTERNATE_EMAIL":
			expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
			errorID     = "urn:dece:errorid:org:dece:AccountUserAlternateEmailNotValid";

			if(tP.getPropertyValue("AlternateEmail")=="")
			{
			  errorReason = "The alternate email address is not valid.";
			}
			else
			{
				errorReason = "The alternate email address is not valid. - " + tP.getPropertyValue("AlternateEmail");
			}
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserAlternateEmailNotValid";
	break;	
	
	
	case "INVALID_TELEPHONE":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserTelephoneNumberNotValid";
		errorReason = "The telephone number is not valid. - "+ context.expand('${#Project#TelephoneNo}');
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserTelephoneNumberNotValid";
	break;
	
	
	case "INVALID_PRIMARY_LANG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPrimaryLanguageNotValid";
		errorReason = "The primary language is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPrimaryLanguageNotValid";
	break;
	
	case "INVALID_LANG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserLanguageNotValid";
		errorReason = "The language is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserLanguageNotValid";
	break;
	
	case "DUPLICATE_LANG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserLanguageDuplicated";
		errorReason = "The language is a duplicate.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserLanguageDuplicated";
	break;
	
	case "DUPLICATE_EMAIL":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserEmailAddressDuplicated";
		errorReason = "The email address is a duplicate.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserEmailAddressDuplicated";
	break;

		
	case "USERNAME_EXISTS":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUsernameRegistered";
		errorReason = "The sign-in name already exists.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUsernameRegistered";
	break;

	case "INVALID_DOB":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserBirthDateNotValid";
		errorReason = "The date of birth is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserBirthDateNotValid";
	break;
	
	case "INVALID_CLG_STATUS":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:CLGStatusInRequestNotValid";
		errorReason = "The status of the connected legal guardian (CLG) must be active or pending.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#CLGStatusInRequestNotValid";
	break;
	
	
	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
		errorReason = "The API call is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";		
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_INACTIVE":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
		errorReason = "The requesting member is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;

	case "MAX_USERS_IN_ACCOUNT":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountActiveUserCountReachedMaxLimit";
		errorReason = "The maximum number of active members allowed has been reached.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountActiveUserCountReachedMaxLimit";
	break;
	
	case "USER_REQUESTING_NOT_PROVIDED":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
		errorReason = "Requesting User ID Not Specified";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

	case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The requesting member does not have permission to create a full-access member.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The requesting member does not have permission to create a member.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserMustBe18OrOlderToRegister";
		errorReason = "The member must be 18 or older.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserMustBe18OrOlderToRegister";
	break;
	
	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The first member must be a full-access member.";
		errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;
	
	case "FAU_MUST_BE_ABOVE18":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "A full-access member must be 18 or older.";
		errorID     = "urn:dece:errorid:org:dece:FullAccessUserMustBe18OrOlder";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FullAccessUserMustBe18OrOlder";
	break;
	
	case "LEGAL_GUARDIAN_REQD":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserRequiresLegalGuardianDeclared";
		errorReason = "The connected legal guardian (CLG) must be declared.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserRequiresLegalGuardianDeclared";
	break;
	
	case "CREATOR_MUST_BE_CLG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:CLGMustBeSameAsCreator";
		errorReason = "An underage member must be created by a connected legal guardian (CLG).";			       
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#CLGMustBeSameAsCreator";
	break;
	
	case "CREATOR_RESTRICTED_TO_BE_CLG":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The requesting member cannot create an underage member.";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateChildOrYouthUsers";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateChildOrYouthUsers";
	break;

	case "CLG_NOT_FOUND":
	     expectHTTPstatus   = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:LegalGuardianUserNotFound";
		errorReason = "The connected legal guardian (CLG) was not found.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#LegalGuardianUserNotFound";
	break;

	case "CLG_MUST_BE_FAU":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";		
		errorReason = "A connected legal guardian (CLG) must be a full-access member.";
		errorID     = "urn:dece:errorid:org:dece:LegalGuardianMustBeFullAccessUser";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#LegalGuardianMustBeFullAccessUser";
	break;

	case "CLG_STATUS_INVALID":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorReason = "The connected legal guardian (CLG) is not in a valid status.";
		errorID     = "urn:dece:errorid:org:dece:PendingCLGDeclaredNotInValidStatus";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#PendingCLGDeclaredNotInValidStatus";
	break;

     case "ACC_STATUS_INVALID":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountStatusNotValid";
		errorReason = "The account status is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountStatusNotValid";
	break;

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "STATUS_NOT_ALLOWED":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:ResourceStatusElementNotAllowed";
		errorReason = "The resource status element is not allowed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceStatusElementNotAllowed";
     break;

          case "DOB_NOT_CONSISTENT":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserDOBNotConsistentWithAgeOfMajorityDeclaration";
		errorReason = "The member's date of birth conflicts with the value of the AgeOfMajority attribute.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserDOBNotConsistentWithAgeOfMajorityDeclaration";
     break;

     case "AGE_OF_MAJORITY_BOOLEAN_ERROR":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:SaxParserException";
		errorReason = "cvc-datatype-valid.1.2.1: \'' is not a valid value for \'boolean\'.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#SaxParserException";
     break;

	case "DOB_DATATYPE_ERROR":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:SaxParserException";
		errorReason = "cvc-datatype-valid.1.2.3: \'' is not a valid value of union type \'DayOptionalDate-type\'.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#SaxParserException";
     break;

     case "INSUFFICIENT_PRIVILEGES":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "The user does not have permission to perform the requested action.";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;    
	case "INVALID_GEO":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestedOperationNotAllowedForSpecifiedGeography";
		errorReason = "The requested operation is not allowed for the specified geography.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestedOperationNotAllowedForSpecifiedGeography";

	break;  

	
}

tC.setPropertyValue("expectHTTPstatus",expectHTTPstatus);

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
/*
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;
*/

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();

if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header

if (httpLocationHeader) {
	 assert context.expand( '${#TestCase#httpLocation}') != null;

      def a = context.expand( '${#TestCase#httpLocation}');
      def b = a.toURL();
      def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

      if (tP.getPropertyValue("URLEncode")=="NO")
      	{                                
			assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
			
			int lastColon = urlStr.lastIndexOf(':');
			int lastSlash = urlStr.lastIndexOf('/');
			userid     = urlStr.substring(lastColon + 1);
			def node_User = urlStr.substring(lastSlash + 1);
			                                 
			tC.setPropertyValue("NODE_USER_ID",userid);			
			
			tC.setPropertyValue("NODE_USER_ID_FULL",node_User);                        
	          tC.setPropertyValue("NODE_USER_ID_FULL_Encoded",URLEncoder.encode(node_User,"UTF-8")); 
	          tC.setPropertyValue("NODE_USER_ID_FULL_Decoded",URLDecoder.decode(node_User,"UTF-8")); 
      	} 
      else 
      	{
			assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");
			int lastColon = urlStr.lastIndexOf('%3A');
			int lastSlash = urlStr.lastIndexOf('/');
			userid     = urlStr.substring(lastColon + 3);
			def node_User = urlStr.substring(lastSlash + 1);
			                      
			tC.setPropertyValue("NODE_USER_ID",userid);			
			tC.setPropertyValue("NODE_USER_ID_FULL",node_User);                        
	          tC.setPropertyValue("NODE_USER_ID_FULL_Encoded",URLEncoder.encode(node_User,"UTF-8")); 
	          tC.setPropertyValue("NODE_USER_ID_FULL_Decoded",URLDecoder.decode(node_User,"UTF-8")); 
      	}
                                
} else 
	{
       	assert context.expand( '${#TestCase#httpLocation}') == "";
	}





//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		log.info "Errorlink from Coord : " + myXML.Error.ErrorLink.toString();
		log.info "Errorlink  expected" + errorLink;
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract_Account_OID_and_User_OID" id="95f3189f-715e-4cef-bc91-14a1b4138b68" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def dbUser;

def expectHTTPstatus = tC.getPropertyValue("expectHTTPstatus");

if (expectHTTPstatus == "HTTP/1.1 201 Created")
     {
		def dBHost = context.expand( '${#Project#targetsystem}' )
		
		try          {
		                dbUser = new dbUtils.dbUser(log,dBHost);
		                }
		catch(Throwable e) {
		                log.info "ERROR - dbUtils.dbUser - $e";
		                assert 1 == 2;
		                }
		finally {
		         try {
		                String u = dbUser.userGetUserOID(tC.getPropertyValue("UserName"));
		                //String a = dbUser.userGetAccountOIDbyUsername(tC.getPropertyValue("UserName"))
		
		                 assert u.length() > 0;
		                 //assert a.length() > 0;
		                 
		                 tC.setPropertyValue("user_oid", u);
		                //tP.setPropertyValue("account_oid", a);
		                }
		          catch(Throwable e) 
		          	{
		                 log.info "ERROR - dbUtils.userGetUserOID - $e";
		                 assert 1 == 2;                     
		          	}
		}
     }
     else
     {
     	log.info ("Can not retreive User_OID for a negative scenario");
     }
     

</script></con:config></con:testStep><con:testStep type="groovy" name="Return the NodeAccountId and NodeUserId to the Calling Test Case" id="419e9428-03d9-4db9-8ef2-4eaee630ffe1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("UserName",tC.getPropertyValue("UserName"));
callTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID"));
callTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
callTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid"));
callTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

callTC.setPropertyValue("ADULT_DOB_XML",tC.getPropertyValue("ADULT_DOB_XML"));
callTC.setPropertyValue("YOUTH_DOB_XML",tC.getPropertyValue("YOUTH_DOB_XML"));
callTC.setPropertyValue("CHILD_DOB_XML",tC.getPropertyValue("CHILD_DOB_XML"));
callTC.setPropertyValue("DateOfBirth",tC.getPropertyValue("DateOfBirth"));</script></con:config></con:testStep><con:properties><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1996-02-10</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2003-11-17</con:value></con:property><con:property><con:name>coordinatorSchema</con:name><con:value>${#Project#coordinatorSchema}</con:value></con:property><con:property><con:name>Country</con:name><con:value>IE</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1996-02-10</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE19F934C4E6BFA99E0401F0A05993DA2</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE19F95D7CFC268C9E0401F0A079952C9</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150205_040839</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/11/Account/urn:dece:accountid:org:dece:0E55DF4069BB33EDE05307991F0A2BFA/User/urn:dece:userid:org:dece:0E55B52024FE36C5E05307991F0AFD81</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:0E55DF4069BB33EDE05307991F0A2BFA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0E55B52024FE36C5E05307991F0AFD81</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0E5547934C1407A7E05305991F0AF80E</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0E55B52024FE36C5E05307991F0AFD81</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E56665ABC808DB00E0401F0A07993371</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VyvN4y1g2S4IrUMUamIRAgCQTXlJCbkBgyyDJLPn6kQw4QJbLvU+ubre6Ty866huBA99xy0IAlzRkqU3gM+HG2qIRceaGWFDhMhyAcCVx++X2veukkYsPR4xUq1Y03rJ5yOFsxjNtB8DMegVkYs9DpoOzoxxGXuaKjJWpEBG0mJCYyaLhIDtnIsdEuYGN3EzetfPpguMMjdQzcKF8K5M0MvagNqJoTKVcuJa1Xq/T60w65BPLQci2/rTv+2QKATZKN7uM4kC8tLcnaQ8I+D5JkzCwbqwTmxtPuH06YVhGHPaxvO9iIQsVLGXjCTr5ZSRnwWuxcRiLVcxCRgn26TvW9WmDnIZequxPQk7lNPg2CRtpxyZsiEnsLPtlWKfQLnR0gpALbIoptve+ejAGDoxA6qnXKhq/LutafHTAMRPjkAfiVPxveICtwA8X4JnikNYe2uUOv6hU6QaI22LEjwRdwYMe1gUmIPbdBHK5q1SXw5hu7qlQA7oRGp11DO9M3FWjRicg5P9p0FFzdk6esR9BqbO2l9Hdw2xYbTyPHudwu314eOF1Vuk8FWMAx8axImntTjwbymSIdifqQ9yi2+GrP1jVB0GuQWeV+/bcyt6Nek/D7vXL5GX69NxceAN1253fzUqzwkZOc+l1/ajdmqBOlw6pXFrTBt8UptX1uHC13HpkPX3507l9JnO2yv6zvp3Nx48Qic6k+dITtg3r1/IcrtfNW+hF7caiW7/bOuW5xX8/vrwOutxrRsP646ywsjG3q6wwsu+ecsNyMUnnCP+p7nDn+9FoBkQeRD0GrVqqobqE5c9kpjXUM8exqbvQ5CMkMGmU9CnNHW6k6I56rurhTkb1XK5WRnmnUkH562ytjnIZlCsU7AYqNyqNzIFkdijOIFZDNqY6lqbc3dj8DJAErgDmATdXYaSYThg/eKxhiVMt1lOXIGQCBqGiZ3tG0WZB3t9X48IEB3kYX82RPZ1hI/UQyg7r8PJYAj/l5MwJJ/eA0AUFTdx6roUabCFVLZZ4FUnfTq9wmql+S8w1y7pO9jpnCRosfNBIrSD0Ih/Si+kirowldl/HxETE2l59EN+2b/M6/3cogbLxqDYQOpcKqDbCF48LOiTyfcL544QP7suRR/XFUvWUnJIdktNfH2Oi5yOZEZXRW7X/Zh9wJ+YXH/980voBlHVejySQt6JHYQ9Pt3oEFG2UDt1c4vQyHa1WUdy/K02PXLm3dIUs5Fh9IJEitu0gnAOzEi/WRa9IAvwseKI/hRjJKetLLCFQA5eKxQvWhj4IvTa01E3ZXLqTnIRUpZOwkV/pqr5aeTTiH7ci4hJtp9Rd9VmH3Pvo2Be+juKoPNXWICmbaEm/INtv5oKEyi1V3BfyY+dfOfgq+KkyKXKCRaqBGkUSvv+T0qRWNDAhYcRkq2bEimOijXHK7QLcD6NPbmIuT5Y7+u/bnUnjESCgVkJBY//6jXb1FWCTI7LeB/3E140syhcqlUymvuPrqx1fO5VGOSnKCbrSJ/VnzVGdzme89Bc=</con:value></con:property><con:property><con:name>SAML2</con:name><con:value>SAML2 Assertion=null</con:value></con:property><con:property><con:name>SecondUserName</con:name><con:value>username_20130122_043244</con:value></con:property><con:property><con:name>sName</con:name><con:value>01.UserCreate_Backward_Compatability</con:value></con:property><con:property><con:name>StandardUserName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150205_040839</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00021_Account and User Create with IE 111_SecondFullUserCreate_107_SUCCESS_P0</con:value></con:property><con:property><con:name>UC_RequestBody_Mandatory</con:name><con:value/></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150205_040839</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>expectHTTPstatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID_FULL_Encoded</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A0E55B52024FE36C5E05307991F0AFD81</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL_Decoded</con:name><con:value>urn:dece:userid:org:dece:0E55B52024FE36C5E05307991F0AFD81</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5ff78eb3-d79f-4f4a-b9a8-5ec1c84f61c0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3d78db1c-105b-43a0-b406-6bb0f690c833</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662fb201-c4e7-401c-b10a-548ea13f5020</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f23d9bb0-0bd1-4723-928b-a9c1d99c147f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95f3189f-715e-4cef-bc91-14a1b4138b68</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Child_UserCreate API" searchProperties="true" id="590b402e-4d94-4c2b-a26d-a4d3267a4ef0"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="53f78935-cf33-4b8d-bcc2-2818800efdb8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("userType",null);
tC.setPropertyValue("Privilege",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("GivenName",null);
tC.setPropertyValue("SurName",null);
tC.setPropertyValue("PrimaryEmail",null);
tC.setPropertyValue("Language1",null);
tC.setPropertyValue("DisplayImageURL",null);
tC.setPropertyValue("AlternateEmail",null);
tC.setPropertyValue("PostalAddress",null);
tC.setPropertyValue("PostalCode",null);
tC.setPropertyValue("Locality",null);
tC.setPropertyValue("StateOrProvince",null);
tC.setPropertyValue("Country",null);
tC.setPropertyValue("TelephoneNumber",null);
tC.setPropertyValue("MobileTelephoneNumber",null);
tC.setPropertyValue("MeetsAgeOfMajority",null);
tC.setPropertyValue("DateOfBirth",null);
tC.setPropertyValue("urnUser",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("QuestionID1",null);
tC.setPropertyValue("QuestionResponse1",null);
tC.setPropertyValue("QuestionID2",null);
tC.setPropertyValue("QuestionResponse2",null);
tC.setPropertyValue("ResourceStatus",null);

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_USER_ID_FULL",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("SAML",null);

tC.setPropertyValue("ResponseType","SUCCESS");
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="56894004-19c0-4506-b935-c205833b20df"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserCreate"));

tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("userType",callTC.getPropertyValue("userType"));
tC.setPropertyValue("GivenName",callTC.getPropertyValue("GivenName"));
tC.setPropertyValue("SurName",callTC.getPropertyValue("SurName"));
tC.setPropertyValue("PrimaryEmail",callTC.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("Language1",callTC.getPropertyValue("Language1"));
tC.setPropertyValue("DisplayImageURL",callTC.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",callTC.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",callTC.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",callTC.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",callTC.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",callTC.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",callTC.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",callTC.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",callTC.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("urnUser",callTC.getPropertyValue("urnUser"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",callTC.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",callTC.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",callTC.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",callTC.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",callTC.getPropertyValue("ResourceStatus"));

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", URLDecoder.decode(callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL")));

}
else
{
	tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", URLEncoder.encode(callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL")));

	
}
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID1", callTC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL", callTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("SAML",callTC.getPropertyValue("SAML"));
tC.setPropertyValue("CLG_NODE_USER_ID", callTC.getPropertyValue("CLG_NODE_USER_ID"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Setting constants based on Geo Profile" id="65badbed-0d33-408b-969d-61fbab5364da"><con:settings/><con:config><script>import java.text.SimpleDateFormat;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


/* Setting constants based on Geo Profile*/

if(tP.getPropertyValue("Country")=="US")
	{
		tP.setPropertyValue("GeoProfile","US");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","13");
		tP.setPropertyValue("CHILD_MAX_AGE","12");
	}
else
if(tP.getPropertyValue("Country")=="CA")
	{
		tP.setPropertyValue("GeoProfile","CA");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","13");
		tP.setPropertyValue("CHILD_MAX_AGE","12");
	}
else
if(tP.getPropertyValue("Country")=="GB")
	{
		tP.setPropertyValue("GeoProfile","GB");          
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="AU")
	{
		tP.setPropertyValue("GeoProfile","AU");          
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="NZ")
	{
		tP.setPropertyValue("GeoProfile","NZ");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="IE")
	{
		tP.setPropertyValue("GeoProfile","IE");             
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="AT")
	{
		tP.setPropertyValue("GeoProfile","AT");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","14");
		tP.setPropertyValue("CHILD_MAX_AGE","13");
	}
else
if(tP.getPropertyValue("Country")=="DE")
	{
		tP.setPropertyValue("GeoProfile","DE");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","14");
		tP.setPropertyValue("CHILD_MAX_AGE","13");
	}
else
if(tP.getPropertyValue("Country")=="CH")
	{
		tP.setPropertyValue("GeoProfile","CH");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="FR")
	{
		tP.setPropertyValue("GeoProfile","FR");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("CHILD_MAX_AGE","17");
	}


	def userType = tC.getPropertyValue("userType")
	log.info "userType: "+userType;
	
	switch(userType){
	
	case "ADULT":
		Date dob = (new Date());
		dob = dob - ((tP.getPropertyValue("ADULT_MIN_AGE").toInteger()+1)*365);
		log.info "Adult DateOfBirth: "+dob.format('yyyy-MM-dd');
		tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
		tC.setPropertyValue("ADULT_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "YOUTH":	
		Date dob = (new Date());
		dob = dob - ((tP.getPropertyValue("YOUTH_MIN_AGE").toInteger()+1)*365);
		log.info "YOUTH DateOfBirth: "+dob.format('yyyy-MM-dd');
		tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
		tC.setPropertyValue("YOUTH_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "CHILD":	
		Date dob = (new Date());
		dob = dob - ((tP.getPropertyValue("CHILD_MAX_AGE").toInteger()-1)*365);
		log.info "CHILD DateOfBirth: "+dob.format('yyyy-MM-dd');
		tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
		tC.setPropertyValue("CHILD_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "ADULTPlus":	
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, -1);
		def dob = sdf.format(calendar.getTime());
		log.info "AdultPlus DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("ADULT_DOB_XML",dob); 
	break;

	case "ADULTMinus":	
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear1 = today.get(Calendar.YEAR)- tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear1-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, +1);
		def dob = sdf.format(calendar.getTime());
		log.info "ADULTMinus DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("YOUTH_DOB_XML",dob);
	break;

	case "YOUTHPlus":
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, -1);
		def dob = sdf.format(calendar.getTime());
		log.info "YOUTHPlus DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob); 
		tC.setPropertyValue("YOUTH_DOB_XML",dob);
	break;

	case "YOUTHMinus":   	
	   	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, +1);
		def dob = sdf.format(calendar.getTime());
		log.info "YOUTHMinus DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("CHILD_DOB_XML",dob); 
	break;

	case "ADULTToday":	 
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, 0);
		def dob = sdf.format(calendar.getTime());
		log.info "ADULTToday DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("ADULT_DOB_XML",dob); 
	break;

	case "YOUTHToday":
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear1 = today.get(Calendar.YEAR)- tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear1-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, 0);
		def dob = sdf.format(calendar.getTime());
		log.info "YOUTHToday DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("YOUTH_DOB_XML",dob); 
	break;

	default:
		log.info "userType is not matched!!"
	break;

	}</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="a122b5af-b7b3-4be0-9b25-092844e2873f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")

myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("User_Create");

def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="User_Create" id="d0aacc9c-c66b-47a7-9a34-0844110f7243"><con:settings/><con:config service="FirstUserCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" methodName="FirstUserCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User_Create" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="RET_concat.pem" id="e5cd4248-7ed9-4bff-90ff-6931ff9543c9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:${#TestCase#Privilege}" xmlns="${#TestCase#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
		<GivenName>${#TestCase#GivenName}</GivenName>
		<SurName>${#TestCase#SurName}</SurName>
	</Name>
	<ContactInfo>
		<PrimaryEmail>
			<Value>${#TestCase#PrimaryEmail}</Value>
			</PrimaryEmail>
			<AlternateEmail>
				<Value>${#TestCase#AlternateEmail}</Value>
				</AlternateEmail>
			<Address>
				<PostalAddress>${#TestCase#PostalAddress}</PostalAddress>
				<PostalCode>${#TestCase#PostalCode}</PostalCode>
				<Locality>${#TestCase#Locality}</Locality>
				<StateOrProvince>${#TestCase#StateOrProvince}</StateOrProvince>
				<Country>${#TestCase#Country}</Country>
			</Address>
			<TelephoneNumber>			
					<Value>${#TestCase#TelephoneNumber}</Value>
				</TelephoneNumber>
				<MobileTelephoneNumber>
					<Value>${#TestCase#MobileTelephoneNumber}</Value>
				</MobileTelephoneNumber>
	</ContactInfo>
	<Languages>
		<Language>${#TestCase#Language1}</Language>
	</Languages>
	<!-- <DateOfBirth> depricated </DateOfBirth> -->
	<LegalGuardian>${#TestCase#urnUser}${#TestCase#CLG_NODE_USER_ID}</LegalGuardian>
	<Credentials>
		<Username>${#TestCase#UserName}</Username>
		<Password>${#TestCase#password}</Password>
	</Credentials>
	${#TestCase#ResourceStatus}
</User>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1" id="dc7939c7-4e38-4936-ab5e-97a276c8b7cf"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="26c3b62c-b72c-4ea4-ba52-7c4ba0c05d14"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('User_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="f507634a-61d1-45ff-b66e-0f465d0a140c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = context.expand( '${#Project#expectHTTPcontenttype}' );
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	   case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";		
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;


   case "INVALID_USER_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUsernameNotValid";
		errorReason = "The sign-in name is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUsernameNotValid";
	break;

   case "INVALID_GIVEN_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserGivenNameNotValid";
		errorReason = "The given name is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserGivenNameNotValid";
	break;

    case "INVALID_PASSWORD":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPasswordNotValid";
		errorReason = "The password is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPasswordNotValid";
	break;

    case "INVALID_SECURITY_ANS":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserSecurityAnswerNotValid";
		errorReason = "The answer to the security question is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserSecurityAnswerNotValid";
	break;

    case "INVALID_ADDRESS":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserAddressNotValid";
		errorReason = "The address is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserAddressNotValid";
	break;

	case "INVALID_SURNAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserSurnameNotValid";
		errorReason = "The surname is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserSurnameNotValid";
	break;


	case "INVALID_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
		errorReason = "The country code is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
		errorReason = "The country code is required.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "INVALID_PRIMARY_EMAIL":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPrimaryEmailNotValid";
		errorReason = "The primary email address is not valid." + primaryEmail;
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPrimaryEmailNotValid";
	break;
	
	case "INVALID_ALTERNATE_EMAIL":
			expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
			errorID     = "urn:dece:errorid:org:dece:AccountUserAlternateEmailNotValid";

			if(tP.getPropertyValue("AlternateEmail")=="")
			{
			  errorReason = "The alternate email address is not valid.";
			}
			else
			{
				errorReason = "The alternate email address is not valid. - " + tP.getPropertyValue("AlternateEmail");
			}
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserAlternateEmailNotValid";
	break;	
	
	
	case "INVALID_TELEPHONE":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserTelephoneNumberNotValid";
		errorReason = "The telephone number is not valid. - "+ context.expand('${#Project#TelephoneNo}');
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserTelephoneNumberNotValid";
	break;
	
	
	case "INVALID_PRIMARY_LANG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPrimaryLanguageNotValid";
		errorReason = "The primary language is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPrimaryLanguageNotValid";
	break;
	
	case "INVALID_LANG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserLanguageNotValid";
		errorReason = "The language is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserLanguageNotValid";
	break;
	
	case "DUPLICATE_LANG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserLanguageDuplicated";
		errorReason = "The language is a duplicate.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserLanguageDuplicated";
	break;
	
	case "DUPLICATE_EMAIL":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserEmailAddressDuplicated";
		errorReason = "The email address is a duplicate.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserEmailAddressDuplicated";
	break;

		
	case "USERNAME_EXISTS":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUsernameRegistered";
		errorReason = "The sign-in name already exists.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUsernameRegistered";
	break;

	case "INVALID_DOB":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserBirthDateNotValid";
		errorReason = "The date of birth is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserBirthDateNotValid";
	break;
	
	case "INVALID_CLG_STATUS":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:CLGStatusInRequestNotValid";
		errorReason = "The status of the connected legal guardian (CLG) must be active or pending.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#CLGStatusInRequestNotValid";
	break;
	
	
	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
		errorReason = "The API call is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";		
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_INACTIVE":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
		errorReason = "The requesting member is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;

	case "MAX_USERS_IN_ACCOUNT":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountActiveUserCountReachedMaxLimit";
		errorReason = "The maximum number of active members allowed has been reached.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountActiveUserCountReachedMaxLimit";
	break;
	
	case "USER_REQUESTING_NOT_PROVIDED":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
		errorReason = "Requesting User ID Not Specified";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

	case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The requesting member does not have permission to create a full-access member.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The requesting member does not have permission to create a member.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserMustBe18OrOlderToRegister";
		errorReason = "The member must be 18 or older.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserMustBe18OrOlderToRegister";
	break;
	
	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The first member must be a full-access member.";
		errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;
	
	case "FAU_MUST_BE_ABOVE18":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "A full-access member must be 18 or older.";
		errorID     = "urn:dece:errorid:org:dece:FullAccessUserMustBe18OrOlder";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FullAccessUserMustBe18OrOlder";
	break;
	
	case "LEGAL_GUARDIAN_REQD":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserRequiresLegalGuardianDeclared";
		errorReason = "The connected legal guardian (CLG) must be declared.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserRequiresLegalGuardianDeclared";
	break;
	
	case "CREATOR_MUST_BE_CLG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:CLGMustBeSameAsCreator";
		errorReason = "An underage member must be created by a connected legal guardian (CLG).";			       
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#CLGMustBeSameAsCreator";
	break;
	
	case "CREATOR_RESTRICTED_TO_BE_CLG":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The requesting member cannot create an underage member.";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateChildOrYouthUsers";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateChildOrYouthUsers";
	break;

	case "CLG_NOT_FOUND":
	     expectHTTPstatus   = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:LegalGuardianUserNotFound";
		errorReason = "The connected legal guardian (CLG) was not found.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#LegalGuardianUserNotFound";
	break;

	case "CLG_MUST_BE_FAU":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";		
		errorReason = "A connected legal guardian (CLG) must be a full-access member.";
		errorID     = "urn:dece:errorid:org:dece:LegalGuardianMustBeFullAccessUser";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#LegalGuardianMustBeFullAccessUser";
	break;

	case "CLG_STATUS_INVALID":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorReason = "The connected legal guardian (CLG) is not in a valid status.";
		errorID     = "urn:dece:errorid:org:dece:PendingCLGDeclaredNotInValidStatus";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#PendingCLGDeclaredNotInValidStatus";
	break;

     case "ACC_STATUS_INVALID":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountStatusNotValid";
		errorReason = "The account status is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountStatusNotValid";
	break;

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "STATUS_NOT_ALLOWED":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:ResourceStatusElementNotAllowed";
		errorReason = "The resource status element is not allowed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceStatusElementNotAllowed";
     break;

          case "DOB_NOT_CONSISTENT":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserDOBNotConsistentWithAgeOfMajorityDeclaration";
		errorReason = "The member's date of birth conflicts with the value of the AgeOfMajority attribute.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserDOBNotConsistentWithAgeOfMajorityDeclaration";
     break;

     case "AGE_OF_MAJORITY_BOOLEAN_ERROR":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:SaxParserException";
		errorReason = "cvc-datatype-valid.1.2.1: \'' is not a valid value for \'boolean\'.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#SaxParserException";
     break;

	case "DOB_DATATYPE_ERROR":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:SaxParserException";
		errorReason = "cvc-datatype-valid.1.2.3: \'' is not a valid value of union type \'DayOptionalDate-type\'.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#SaxParserException";
     break;

     case "INSUFFICIENT_PRIVILEGES":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "The user does not have permission to perform the requested action.";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;    

	
}

tC.setPropertyValue("expectHTTPstatus",expectHTTPstatus);

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
/*
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;
*/

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
/*
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
*/
//Location Header

if (httpLocationHeader) {
	 assert context.expand( '${#TestCase#httpLocation}') != null;

      def a = context.expand( '${#TestCase#httpLocation}');
      def b = a.toURL();
      def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

      if (tP.getPropertyValue("V2") != tP.getPropertyValue("versionURLEncode"))
      	{                                
			assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
			
			int lastColon = urlStr.lastIndexOf(':');
			int lastSlash = urlStr.lastIndexOf('/');
			userid     = urlStr.substring(lastColon + 1);
			def node_User = urlStr.substring(lastSlash + 1);
			                                 
			tC.setPropertyValue("NODE_USER_ID",userid);
			
			tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
//			tC.setPropertyValue("NODE_USER_ID_FULL2",node_User);
      	} 
      else 
      	{
			assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");
			int lastColon = urlStr.lastIndexOf('%3A');
			int lastSlash = urlStr.lastIndexOf('/');
			userid     = urlStr.substring(lastColon + 3);
			def node_User = urlStr.substring(lastSlash + 1);
			                      
			tC.setPropertyValue("NODE_USER_ID",userid);
			
			tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
//			tC.setPropertyValue("NODE_USER_ID_FULL2",node_User);
      	}
                                
} else 
	{
       	assert context.expand( '${#TestCase#httpLocation}') == "";
	}





//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		log.info "Errorlink from Coord : " + myXML.Error.ErrorLink.toString();
		log.info "Errorlink  expected" + errorLink;
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract_Account_OID_and_User_OID" id="cbe9a915-3efb-4418-8ed3-60b29077c3f1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def dbUser;

def expectHTTPstatus = tC.getPropertyValue("expectHTTPstatus");

if (expectHTTPstatus == "HTTP/1.1 201 Created")
     {
		def dBHost = context.expand( '${#Project#targetsystem}' )
		
		try          {
		                dbUser = new dbUtils.dbUser(log,dBHost);
		                }
		catch(Throwable e) {
		                log.info "ERROR - dbUtils.dbUser - $e";
		                assert 1 == 2;
		                }
		finally {
		         try {
		                String u = dbUser.userGetUserOID(tC.getPropertyValue("UserName"));
		                String a = dbUser.userGetAccountOIDbyUsername(tC.getPropertyValue("UserName"))
		
		                 assert u.length() > 0;
		                 assert a.length() > 0;
		                 
		                 tC.setPropertyValue("user_oid", u);
		                tP.setPropertyValue("account_oid", a);
		                }
		          catch(Throwable e) 
		          	{
		                 log.info "ERROR - dbUtils.userGetUserOID - $e";
		                 assert 1 == 2;                     
		          	}
		}
     }
     else
     {
     	log.info ("Can not retreive User_OID for a negative scenario");
     }
     

</script></con:config></con:testStep><con:testStep type="groovy" name="Return the NodeAccountId and NodeUserId to the Calling Test Case" id="7983d482-bc3a-4ea0-ac6f-f5354eb2c4ae"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("UserName",tC.getPropertyValue("UserName"));
callTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID"));
callTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
callTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid"));

//callTC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//callTC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL2"));
//callTC.setPropertyValue("UserName2",tC.getPropertyValue("UserName"));
//callTC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));

callTC.setPropertyValue("ADULT_DOB_XML",tC.getPropertyValue("ADULT_DOB_XML"));
callTC.setPropertyValue("YOUTH_DOB_XML",tC.getPropertyValue("YOUTH_DOB_XML"));
callTC.setPropertyValue("CHILD_DOB_XML",tC.getPropertyValue("CHILD_DOB_XML"));
callTC.setPropertyValue("DateOfBirth",tC.getPropertyValue("DateOfBirth"));</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Validate_Response" disabled="true" id="3ad8e463-1aa4-47b0-9006-51ba96bf8f7c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = context.expand( '${#Project#expectHTTPcontenttype}' );
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#nodeIdRetailerforDeviceAuthToken}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#nodeIdRetailerforDeviceAuthToken}' );
}
if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The supplied country code is invalid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code cannot be null.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "API call not authorized";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:UserNotActive";
	errorReason = "User is not active";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

		case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The user does not have permission to create a full-access user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The user does not have permission to create a user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
			expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBe18OrOlder";
			errorReason = "First User must be 18 years or older";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBe18OrOlder";
	break;


	case "NO_MNG_ACC_CNST":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
			errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The first user in a household account must be a full-access user.";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;
	
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
/*
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
*/
//Location Header

if (httpLocationHeader) {
	 assert context.expand( '${#TestCase#httpLocation}') != null;

      def a = context.expand( '${#TestCase#httpLocation}');
      def b = a.toURL();
      def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

      if (tP.getPropertyValue("V2") != tP.getPropertyValue("versionURLEncode")){
                                
         assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
         
         int lastColon = urlStr.lastIndexOf(':');
         int lastSlash = urlStr.lastIndexOf('/');
         userid     = urlStr.substring(lastColon + 1);
         def node_User = urlStr.substring(lastSlash + 1);
                                           
         tC.setPropertyValue("NODE_USER_ID",userid);

         tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
         tC.setPropertyValue("NODE_USER_ID_FULL2",node_User);
      } else {
         assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");
         int lastColon = urlStr.lastIndexOf('%3A');
         int lastSlash = urlStr.lastIndexOf('/');
         userid     = urlStr.substring(lastColon + 3);
         def node_User = urlStr.substring(lastSlash + 1);
                                
         tC.setPropertyValue("NODE_USER_ID",userid);

         tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
         tC.setPropertyValue("NODE_USER_ID_FULL2",node_User);
      }
                                
} else {
                                
       	assert context.expand( '${#TestCase#httpLocation}') == "";
}





//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:properties><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-08</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E5A158E8FAED7930E0401F0A0599188B</con:value></con:property><con:property><con:name>coordinatorSchema</con:name><con:value>${#Project#coordinatorSchema}</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE19F934C4E6BFA99E0401F0A05993DA2</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE19F95D7CFC268C9E0401F0A079952C9</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>seconduser20130905_04010</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/07/Account/urn:dece:accountid:org:dece:E5A158BFEF210675E0401F0A07992D42/User/urn:dece:userid:org:dece:E5A158BFF59C0675E0401F0A07992D42</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:/certs/RET_concat.pem</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5A158BFEF210675E0401F0A07992D42</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E5A158BFEF210675E0401F0A07992D42</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E5A158BFF59C0675E0401F0A07992D42</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E5A158E8FAED7930E0401F0A0599188B</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5A158BFF59C0675E0401F0A07992D42</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E56665ABC808DB00E0401F0A07993371</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8uwimIlqRo2RcUNXG/eQhgQZZMBQX/9O5joMTnJ+fJ+VzpNT/fTy/Q884zMwKc7ACGYpF4UVlXppfaPzbEm6fBcg7J4ssG2zHbD5KxWw3Z4ewsZyLCkWauqCGVQDVFqhulLjSYppkHyDbJpUGSHbnVY+qnNUJtadQEThE1jlSeyVi0CP0Sdq9uXWpaEnchEHuqEZgBRJ7U6OtCGHazZMW+Yaq/PbyivDpPXXZrGHYKwnmxoQd+3nqwoIJ6JDzrPNuronhuaaZbAd582eqm9783z/ClnnqLEJWiSJAmSJ7COjTz3V+21ctsMbTV0ore1aIZR6Fmm713MEpQG011kV4HvRomX7oJvTFMERZamG7CwGhbFhr9qxG8HV3Q/tPQBZILMBtqZ1M3YDDowgaEFq/OZ+lL79bMKvu01EjNETpQE6NP6v0GC4Qn6UQztBrpFdkP3c4tfpOv1GVodNbT8DHknOCrbJDYtiKqTBDpeMfQQbj4bVa/lrxbo1mHQ+i8leSYecWLYxBeZkTwXovT/qddjrd6sLEw/g6+9aBnyXBOJdA5WS4WZ5mRkMmvZmoCXK4RH5TdQ91K/rz836r2v3jelTLaeDODZ5PuTurmwHGFJ6kVr7K72MfDycW+w34otwXDEqaxd6sJx6abSQWW7vRXX22ah4BVrsIhHg6Z+rHDk7MBdLnSyTVYtokeiJiGcJmOZmJi9ppRPt8wyWpK+fbRnI0XhocHQJuuPE9frOoIi7JpFN3VITmVT1qksjIw6ToJYHC0WxbgvG+vo5XdMjzGUceEQrkGW/1dNkpfM1LwvxHJSOPh4pvBVU1WxLokigKILclUArioML2AkuIfj7uB1+ZwUwHSuAAmctRnIJXctLabTgZzbi4W/WaiKImgzNu+BtVTBHyS5WEibVZ80l5t4TSvkRhcEezWLtkw/tnuHvLezRpqh5SNDPWt7uRgZMrm8ytwCry/aXqPGxpypLPcCr83kXMqvHiU53402y1m8nvO5dZGnGmC7gJrL4k7rGcGCspjZztrLQw0crnJhp4mLhVbIBphUBHe0wLEZorKJrcCOt4G/ezDew8YNu7s4b7t+trnIe02Uu6J+7OrqlpGmch/M1vPtcnEwl8qpYvVGYHvz6DU9cxXl7qadS9N1fxBt1N3JGoGpLAhTgNNFAk3t9kHUFYDGAq+4iHuBi0RbyYk+jSp13u9yq7N3XCGzS/om1W5T6+GSmxw5SQ7rm0G23e+03UoZ1we6fZrzKX9Zo1P9xJkeZRWxM13JvXRQOL2pXtlOpGJl9eq22yf8C68kWqsPkst552vuLF1yY3Teeo6zFFZj1m85vsbMYsd34jOqG9H0kJCcABmaWJ9Pg7QCXE0AoLuf74WpJrTLpNpqPl1rggkUOc3AZU+nA3px7PdOvrVmQFQMluP94b0wtpTLApFPZdxWcqUtAbssQk+fy8oezAXXTQRXVoSpJYHpWh3ka5yveQ8rf86jcs2jKwtAZjaA43sVZk7y6TjVWRacQ2EeKvxOOxZLmwvI1hHKQ30Us7mGRk64WUYHLfCSeZLp88FgNCy2RtY97PGsckh9cGI2Ffl0wEd7NDB2BymSzEm8XqdxPbQSK1XjQFOLy3iD9m1vG5D9epMSJqRkteh5sM3nXVPeDBJXpwa9WThhWnwFZc65F9T37XxZN3Qubtli6EjnM7FJFmQEIoWfNY92QdOH3TwfcrnTB4etSY8KnxfOvDzYGFY+mw6WelBvVpqn4TAgLwbBjuJxrndzVp5O64wtGD0DxYm3ztpukYxDm16bKXfakAvOi/0DT2cHg42ZhRvgYk1OdtzSJpUpu7I2gduKrT4xI05AbjlDtXveXsxLHIyttwH6eTrchW/zg3icLB9Gz4106LhboZXeluUFpEpVBd8KZvp3AlNKPLvhXFU7ccmCUArDtPZa7irJSyfDFMezO/jKeFvLTUA123JbAbLU4hlSJlmSUkhANnkeHyPhxnLeUHyCKEah45W+Sh73dkv9HaAVdBAMbZg0TlFm7SCq/cVima+qGs7w9RuFCBoR5om0QMlNrimxLKU0KRKILaUNRJ5TpCYvkKxSq46idByOE+CkMPnIEZkPHHEGLS/2YEkky9sU4esUpTglR/OUpT71dDKfQphhqpmUbK9Ds+0mgbwg9mEJmAgiO/PhU7yLrwki0Nsv3TAtdJXOZOMfVRevN/23IX7+dssG1rG9UgGV8QgQVxR+QXiZWzDfB809Bn0zDzLbKy90nNo08aw3JB8//e6YslXu7VJGJer/UDfcd/Ufb/9zJ/EXUMTnfNwd2Sfvwe2NuWMyiunK662iR/Pp+JSdTtm1hq2SiiXYPEERZIvQoZVhPnU2ogMMibsJ4kdU9o76k+e7/CO+LN2FeorHQYA7rnpd/uAdo0NUvmNUfGKKnz6SPrjEeUthkX4lE3383CkR//VFZHWsUg+LJ/gnjxL7d7m+sPXgB8dZzj8vdMtVSVzP3zSFFWGzHp6BUfJo/CsDXzn/KLwn+Y4lxd20zVL4/ZdqOdxeaqZlRVmYqlLtKngcuFec6TmGnd9Kf5i5Usf3t0CBvn0LrLShjkdfYNbuut7/Vm5413axIN6FvCuWl1qBn7XYeeg+DPh3gH/OeEGRFZoiuVbzPuNbPE9LLH1P4IdIXv8Q/yl5yOnn8/D6Lw==</con:value></con:property><con:property><con:name>SAML2</con:name><con:value>SAML2 Assertion=null</con:value></con:property><con:property><con:name>SecondUserName</con:name><con:value>username_20130122_043244</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Create_GeoProfile</con:value></con:property><con:property><con:name>StandardUserName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>seconduser20130905_04010</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00033_UserCreate_AUTH_Creator_ADULT_Full_New_CHILD_Standard_201_CREATED_P1</con:value></con:property><con:property><con:name>UC_RequestBody_Mandatory</con:name><con:value/></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>UserName</con:name><con:value>seconduser20130905_04010</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5A158BFF59D0675E0401F0A07992D42</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-07</con:value></con:property><con:property><con:name>expectHTTPstatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5ff78eb3-d79f-4f4a-b9a8-5ec1c84f61c0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3d78db1c-105b-43a0-b406-6bb0f690c833</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662fb201-c4e7-401c-b10a-548ea13f5020</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f23d9bb0-0bd1-4723-928b-a9c1d99c147f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95f3189f-715e-4cef-bc91-14a1b4138b68</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserGet" searchProperties="true" id="18d6dbdf-5594-4023-8f59-664e83628798" disabled="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="40b51506-e7ed-484f-9cef-144c355c10b8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("UserName",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("ResponseType",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("ENCODED_NODE_USER_ID",null);
tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID",null);
tC.setPropertyValue("SAML",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="0e921030-fc0e-4088-8519-d2ea05acede9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID",callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID",callTC.getPropertyValue("NODE_USER_ID"));
if (tP.getPropertyValue("V2")=="06" || tP.getPropertyValue("V2")=="07"){
			tC.setPropertyValue("ENCODED_NODE_USER_ID", URLEncoder.encode("urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"), "UTF-8"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			}else{
			tC.setPropertyValue("ENCODED_NODE_USER_ID", "urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			}
tC.setPropertyValue("ResponseType",callTC.getPropertyValue("UserGetResponseType"));
tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Pem" id="8dac2685-8684-45a7-9383-18906924bc23"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("UserGET");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="UserGET" id="9edfc5bd-e710-4adb-a343-f24a81968540"><con:settings/><con:config service="FirstUserCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" methodName="UserGet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserGET" mediaType="application/xml" id="86860311-fe06-418d-9e53-0c4d81aa0896" sslKeystore="RET_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#ENCODED_NODE_ACCOUNT_ID}"/>
  <con:entry key="UserID" value="${#TestCase#ENCODED_NODE_USER_ID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="5be437dd-519a-4ddb-9991-82608accc06d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('UserGET');
def expXML = tStep.httpRequest.response.getResponseContent();
 
String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
 
 
tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                                log.info "V2: "+tP.getPropertyValue("V2");
			if (tP.getPropertyValue("V2")=="06" || tP.getPropertyValue("V2")=="07"){
			contentLocation = URLDecoder.decode(value[0], "UTF-8");
			}else{
				contentLocation = value[0];
			}
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}
 
tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="a34e05a2-007f-4659-9d23-4e5f076e5223"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
 
def url       = context.expand( '${#Project#Provision_HostName}' );
 
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");
 
def RequestorType = "";
def RequestorClass = "";
def Requestee = "";
 
def usernamestring = "";
def givennamestring = "";
def surnamestring = "";
 
int firstmask = 0;
int lastmask = 0;
 
boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;
 
String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#TestCase#AccountID}')+ "/User/" + context.expand('${#TestCase#UserID}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
                errorHost = "http://error.decellc.org";
} else {
                errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";
 
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus   = "HTTP/1.1 200 OK";
                break;
 
                case "API_NOT_AUTH":
                expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
                errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
                errorReason = "API call not authorized";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
                break;
 
                case "FORBIDDEN":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                processXMLFlag  = false;
                                errorIDFlag     = false;
                                errorReasonFlag = false;
                                errorLinkFlag   = false;
                break;
                
                case "USER_NOT_VALID":
                     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
                                errorID     = "urn:dece:errorid:org:dece:UserIdInvalid";
                                errorReason = "The supplied UserID is invalid.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
                break;
 
                case "USER_INACTIVE":
                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
                errorReason = "The requestor is not active.";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
                break;
 
     case "URL_NOT_FOUND":
                expectHTTPstatus = "HTTP/1.1 404 Not Found";
                expectHTTPcontenttype = "text/xml"
                XMLbodynull     = true;
                processXMLFlag  = false;
                errorIDFlag     = false;
                errorReasonFlag = false;
                errorLinkFlag   = false;
                break;
 
                case "MTHD_NOT_ALLWD":
                expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
                expectHTTPcontenttype = "text/plain; charset=UTF-8"
                processXMLFlag  = false;
                errorIDFlag     = false;
                errorReasonFlag = false;
                errorLinkFlag   = false;
                break;
 
                case "USER_NOT_IN_ACC":
                expectHTTPstatus = "HTTP/1.1 404 Not Found";
                errorID     = "urn:dece:errorid:org:dece:UserNotFound";
                errorReason = "The supplied UserID was not found.";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotFound";
                break;
 
     case "USER_NOT_PERMIT":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
                                errorReason = "The user does not have permission to perform the requested action.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
                break;   
 
                case "ACC_NOT_MATCH_TOKEN":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
                                errorReason = "Request Account ID not match";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
                break;
 
                case "NO_MNG_ACC_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
                break;
 
                case "NO_ENABLE_MNG_USR_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Enable Manage User Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:EnableManageUserConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:EnableManageUserConsentRequired";
                break;
 
                case "NO_MNG_USR_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Manage User Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
                break;
 
                case "ACCT_INACTIVE":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
                                errorReason = "The identified account is not active.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;
 
     case "SPL_CS_ALLOWED_ACCT":
                     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
                                errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
                                errorReason = "The request is unauthorized.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;
 
     case "SPL_CS_ALLOWED_USER":
                     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
                                errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToDeleteSuspendedUsers";
                                errorReason = "The request is unauthorized.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToDeleteSuspendedUsers";
     break;
 
    case "REQUESTEE_INACTIVE":
                     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
                                errorReason = "The user has been removed.";
                                errorID     = "urn:dece:errorid:org:dece:AccountUserStatusDeleted";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserStatusDeleted";
                break;
      
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
 
assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;
 
// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;
 
//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
                //assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
                //assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
 
//Location Header
if (httpLocationHeader) {
                assert context.expand( '${#TestCase#httpLocation}') != null;
 
                def a = context.expand( '${#TestCase#httpLocation}');
                def b = a.toURL();
                def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}
 
                assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
                
                int lastColon = urlStr.lastIndexOf(':');
                int lastSlash = urlStr.lastIndexOf('/');
                accountid     = urlStr.substring(lastColon + 1);
                
                tC.setPropertyValue("ACCID",accountid);
                
} else {
                assert context.expand( '${#TestCase#httpLocation}') == "";
}
 

//
 
//XML body should be null test
if (XMLbodynull) {
 
                assert XMLbody == "";
}
 
if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
                
                def myXML = new XmlSlurper().parseText(XMLbody);
  
                if (errorRespType != "SUCCESS" ) {
                                // Verify response sizes...
                                assert myXML.Error.size() == 1;
                                assert myXML.Error.Reason.size() == 1;
                                assert myXML.Error.OriginalRequest.size() == 1;
                                assert myXML.Error.ErrorLink.size() == 1;
                                
                                // ErrorCode
                                this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
                                assert myXML.Error.@ErrorID.toString() == errorID;
                
                                // ErrorReason
                                this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
                                assert myXML.Error.Reason.toString() == errorReason;
 
                                // ErrorLink
                                this.log.info "ErrorLink Received [" + myXML.Error.ErrorLink.toString() + "] Exp[$errorLink]";
                                assert myXML.Error.ErrorLink.toString() == errorLink;
                } 
  else
  {
   //Data Types
   // RequestorType: Self, CLG, CS, Other
   // RequestorClass: BAU,SAU,FAU
   //Requestee: CHILD, YOUTH, ADULT
 
   RequestorType = context.expand( '${#TestCase#RequestorType}');
   RequestorClass = context.expand( '${#TestCase#RequestorClass}');
   Requestee = context.expand( '${#TestCase#Requestee}');
 
    // Following Fields returned for Everyone
    
         assert myXML.@UserClass.size() == 1;
         assert myXML.@UserClass.toString().matches("urn:dece:role:user:class:[a-z]*");
         
         assert myXML.Credentials.size() == 1;
         assert myXML.Credentials.Username.size() == 1;
         assert myXML.Credentials.Password.size() == 0;
 
         assert myXML.Name.size() == 1;
         assert myXML.Name.GivenName.size() == 1;
         assert myXML.Name.SurName.size() == 1;
             
         assert myXML.ContactInfo.size() == 1;
       //  assert myXML.ContactInfo.Address.size() == 1;
      //   assert myXML.ContactInfo.Address.PostalAddress.size() == 1;
       //  assert myXML.ContactInfo.Address.PostalCode.size() == 1;
       //  assert myXML.ContactInfo.Address.Locality.size() == 1;
     //    assert myXML.ContactInfo.Address.StateOrProvince.size() == 1;
     //    assert myXML.ContactInfo.Address.Country.size() == 1;
      //   assert myXML.ContactInfo.TelephoneNumber.size() == 1;
      //   assert myXML.ContactInfo.TelephoneNumber.Value.size() == 1;
       //  assert myXML.ContactInfo.MobileTelephoneNumber.size() == 1;
       //  assert myXML.ContactInfo.MobileTelephoneNumber.Value.size() == 1;
     
         assert myXML.Languages.size() == 1;
         assert myXML.Languages.Language.size() > 0;
     
         assert myXML.ResourceStatus.size() == 1;
         assert myXML.ResourceStatus.Current.size() == 1;
 
         if(RequestorType == "CS")
         {
           assert myXML.ResourceStatus.History.size() > 0;   
         } 
         else
         {
           assert myXML.ResourceStatus.History.size() == 0;                
         }
 
   /******************************************************************************************************************/
           
   //Filtering fields based on PI and Access levels
 
   if(Requestee == "CHILD")
    {
 
                  this.log.info "Getting CHILD details";
                  
                 if((RequestorType == "CLG") || (RequestorType == "Self"))
                  {
                   /****************DOB, Security Token and Email Shown only to Self,CLG and CS**********/
        assert myXML.DateOfBirth.size() == 1;     
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0;
        
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;     
                 }
                 else
                  {
         /****************DOB, Security Token and Email not shown to CS and others**********/
         assert myXML.DateOfBirth.size() == 0;     
       //  assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() == 0;
         //assert myXML.LegalGuardian.size() == 1; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 0;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 0;
                   
 
         /**************Verifying Masking of CHILD PI details *******************/
          
         usernamestring = myXML.Credentials.Username.toString();
         givennamestring = myXML.Name.GivenName.toString();
         surnamestring = myXML.Name.SurName.toString();
                
         //*************Verifying Masking of CHILD UserName details ******************
   
         firstmask = usernamestring.indexOf('â');
         lastmask = usernamestring.lastIndexOf('¢');
 
         usernamestring = usernamestring.substring(firstmask,lastmask+1);
 
         assert usernamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
 
       //*************Verifying Masking of CHILD GivenName details ******************
          
        firstmask = givennamestring.indexOf('â');
        lastmask = givennamestring.lastIndexOf('¢');
 
         givennamestring = givennamestring.substring(firstmask,lastmask+1);
 
         assert givennamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
 
         //*************Verifying Masking of CHILD SurName details ******************
          
        firstmask = surnamestring.indexOf('â');
        lastmask = surnamestring.lastIndexOf('¢');
 
         surnamestring = surnamestring.substring(firstmask,lastmask+1);
 
         assert surnamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";         
    }
                 if(RequestorType == "CS")
          {
             this.log.info "Getting CHILD LG details for CS";
             
             assert myXML.LegalGuardian.size() > 0; 
 
              if(myXML.LegalGuardian.size() == 1)        
             {
                 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");  
             }
             else
             if(myXML.LegalGuardian.size() == 2)         
             {
                if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                                assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else
               if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
                {
                  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";    
               } 
            }         
          else if(myXML.LegalGuardian.size() != 0)                    
                {
                   this.log.info "Getting CHILD Active CLG details for NonCS";
                 
                   assert myXML.LegalGuardian.size() == 1;   
                   assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";        
               }
           else
               {
                 this.log.info "Getting CHILD Pending CLG details for NonCS";
                 assert myXML.LegalGuardian.size() == 0;  
              }
          }
    }  
   else if((RequestorClass == "FAU") || (RequestorClass == "SAU") || (RequestorType == "Self") || (RequestorType == "CS"))
    {
                                  
                    assert myXML.DateOfBirth.size() == 1; 
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;
         
          if(Requestee == "YOUTH")                
          {
            this.log.info "Getting YOUTH details";
            assert myXML.LegalGuardian.size() == 0; 
/*
             if(RequestorType == "CS")
            {
              assert myXML.LegalGuardian.size() > 0; 
 
              if(myXML.LegalGuardian.size() == 1)        
             {
                 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");  
             }
             else if(myXML.LegalGuardian.size() == 2)                
             {
                 if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                                assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
                {
                  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";    
               } 
            }
            else if(myXML.LegalGuardian.size() != 0)                  
            {
                 assert myXML.LegalGuardian.size() == 1;   
                 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";          
            }
           else
            {
                 assert myXML.LegalGuardian.size() == 0;  
            }                  
          }
*/          
       }  
     else
        {
           this.log.info "Getting ADULT details";          
           //assert myxml.LegalGuardian.size() == 0;                
                                assert myXML.LegalGuardian.size() == 0;              
        }
    }  
     else 
    {   
                 //   this.log.info "BAU geting other's details";
                    
                    assert myXML.DateOfBirth.size() == 1; 
        // assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() >> 0; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1; 
         
         if(Requestee == "YOUTH") 
          {
            if(myXML.LegalGuardian.size() != 0)           
            {
                 assert myXML.LegalGuardian.size() == 1;   
                 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";          
            }
          else
            {
                 assert myXML.LegalGuardian.size() == 0;  
            }  
          }
          else
          {
            assert myXML.LegalGuardian.size() == 0; 
          }                    
    }       
    
  }            // end if for SUCCESS response
} // end if for XML Body Validations
</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>TC_DECE_14015 - STSCreate - Portal:CS - unamepasswd - User created by node RTL - P2</con:value></con:property><con:property><con:name>sName</con:name><con:value>4_STS Create - Node Role - CREATED_BY_NODE_OID</con:value></con:property><con:property><con:name>UserName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpConnect</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>ResponseType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>DC2F5A7DCFDE454AE0401F0A0799394E</con:value></con:property><con:property><con:name>SAML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\DECE\RET_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>8dac2685-8684-45a7-9383-18906924bc23</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>40b51506-e7ed-484f-9cef-144c355c10b8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0e921030-fc0e-4088-8519-d2ea05acede9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserStatusUpdate API" searchProperties="true" id="19cc486a-a16d-4ec8-86ef-9f451f07ebed" disabled="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="46e67ffd-7362-4e1c-a502-21e353b9227c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("status",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("ResponseType",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("SAML",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="277c6a80-14fb-4da5-bd51-3f2ccc23180d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("NODE_USER_ID",callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("status",callTC.getPropertyValue("status"));
tC.setPropertyValue("NODE_ACCOUNT_ID",callTC.getPropertyValue("NODE_ACCOUNT_ID"));

if (tP.getPropertyValue("V2")=="06" || tP.getPropertyValue("V2")=="07"){
			tC.setPropertyValue("ENCODED_NODE_USER_ID", URLEncoder.encode("urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"), "UTF-8"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			}else{
				tC.setPropertyValue("ENCODED_NODE_USER_ID", "urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			}
			
tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));

if (tC.getPropertyValue("ResponseType") == null ||
	tC.getPropertyValue("ResponseType") == "") {
		tC.setPropertyValue("ResponseType","SUCCESS");
}



</script></con:config></con:testStep><con:testStep type="groovy" name="Set Pem" id="11565952-3245-4993-9a90-b45b77daa42f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("UserResourceStatusUpdate");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="UserResourceStatusUpdate" id="aa2ec204-f680-47ad-98fb-51d2d96fbf59"><con:settings/><con:config service="UserResourceStatusUpdate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}/ResourceStatus/Current/Update" methodName="UserResourceStatusUpdate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserResourceStatusUpdate" mediaType="application/xml" postQueryString="false" sslKeystore="" id="f8a47a77-f54b-4e3d-8eb2-7ab4e8b02994"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<ResourceStatus xmlns="${#Project#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
  <Current>
    <Value>urn:dece:type:status:${#TestCase#status}</Value>
    <Description>Account Updated</Description>
  </Current>
</ResourceStatus>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#ENCODED_NODE_ACCOUNT_ID}"/>
  <con:entry key="UserID" value="${#TestCase#ENCODED_NODE_USER_ID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="367744f1-376f-4646-9264-0e788eced0b1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('UserResourceStatusUpdate');
def expXML = tStep.httpRequest.response.getResponseContent();
 
String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
 
 
tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                                contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}
 
tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="e8904455-2076-49b1-9371-9836b5d0c1cf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
 
def url       = context.expand( '${#Project#Provision_HostName}' );
 
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");
 
def RequestorType = "";
def RequestorClass = "";
def Requestee = "";
 
def usernamestring = "";
def givennamestring = "";
def surnamestring = "";
 
int firstmask = 0;
int lastmask = 0;
 
boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;
 
String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#TestCase#AccountID}')+ "/User/" + context.expand('${#TestCase#UserID}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
                errorHost = "http://error.decellc.org";
} else {
                errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";
 
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus   = "HTTP/1.1 200 OK";
                break;
 
                case "API_NOT_AUTH":
                expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
                errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
                errorReason = "API call not authorized";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
                break;
 
                case "FORBIDDEN":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                processXMLFlag  = false;
                                errorIDFlag     = false;
                                errorReasonFlag = false;
                                errorLinkFlag   = false;
                break;
                
                case "USER_NOT_VALID":
                     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
                                errorID     = "urn:dece:errorid:org:dece:UserIdInvalid";
                                errorReason = "The supplied UserID is invalid.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
                break;
 
                case "USER_INACTIVE":
                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
                errorReason = "The requestor is not active.";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
                break;
 
     case "URL_NOT_FOUND":
                expectHTTPstatus = "HTTP/1.1 404 Not Found";
                expectHTTPcontenttype = "text/xml"
                XMLbodynull     = true;
                processXMLFlag  = false;
                errorIDFlag     = false;
                errorReasonFlag = false;
                errorLinkFlag   = false;
                break;
 
                case "MTHD_NOT_ALLWD":
                expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
                expectHTTPcontenttype = "text/plain; charset=UTF-8"
                processXMLFlag  = false;
                errorIDFlag     = false;
                errorReasonFlag = false;
                errorLinkFlag   = false;
                break;
 
                case "USER_NOT_IN_ACC":
                expectHTTPstatus = "HTTP/1.1 404 Not Found";
                errorID     = "urn:dece:errorid:org:dece:UserNotFound";
                errorReason = "The supplied UserID was not found.";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotFound";
                break;
 
     case "USER_NOT_PERMIT":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
                                errorReason = "The user does not have permission to perform the requested action.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
                break;   
 
                case "ACC_NOT_MATCH_TOKEN":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
                                errorReason = "Request Account ID not match";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
                break;
 
                case "NO_MNG_ACC_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
                break;
 
                case "NO_ENABLE_MNG_USR_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Enable Manage User Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:EnableManageUserConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:EnableManageUserConsentRequired";
                break;
 
                case "NO_MNG_USR_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Manage User Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
                break;
 
                case "ACCT_INACTIVE":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
                                errorReason = "The identified account is not active.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;
 
     case "SPL_CS_ALLOWED_ACCT":
                     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
                                errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
                                errorReason = "The request is unauthorized.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;
 
     case "SPL_CS_ALLOWED_USER":
                     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
                                errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToDeleteSuspendedUsers";
                                errorReason = "The request is unauthorized.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToDeleteSuspendedUsers";
     break;
 
    case "REQUESTEE_INACTIVE":
                     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
                                errorReason = "The user has been removed.";
                                errorID     = "urn:dece:errorid:org:dece:AccountUserStatusDeleted";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserStatusDeleted";
                break;
      
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
 
assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;
 
// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;
 
//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
                //assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
                assert context.expand( '${#TestCase#httpContentLength}').toInteger()== 0;
}
 
//Location Header
if (httpLocationHeader) {
                assert context.expand( '${#TestCase#httpLocation}') != null;
 
                def a = context.expand( '${#TestCase#httpLocation}');
                def b = a.toURL();
                def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}
 
                assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
                
                int lastColon = urlStr.lastIndexOf(':');
                int lastSlash = urlStr.lastIndexOf('/');
                accountid     = urlStr.substring(lastColon + 1);
                
                tC.setPropertyValue("ACCID",accountid);
                
} else {
                assert context.expand( '${#TestCase#httpLocation}') == "";
}
 

//
 
//XML body should be null test
if (XMLbodynull) {
 
                assert XMLbody == "";
}
 
if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
                
                def myXML = new XmlSlurper().parseText(XMLbody);
  
                if (errorRespType != "SUCCESS" ) {
                                // Verify response sizes...
                                assert myXML.Error.size() == 1;
                                assert myXML.Error.Reason.size() == 1;
                                assert myXML.Error.OriginalRequest.size() == 1;
                                assert myXML.Error.ErrorLink.size() == 1;
                                
                                // ErrorCode
                                this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
                                assert myXML.Error.@ErrorID.toString() == errorID;
                
                                // ErrorReason
                                this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
                                assert myXML.Error.Reason.toString() == errorReason;
 
                                // ErrorLink
                                this.log.info "ErrorLink Received [" + myXML.Error.ErrorLink.toString() + "] Exp[$errorLink]";
                                assert myXML.Error.ErrorLink.toString() == errorLink;
                } 
  else
  {
   //Data Types
   // RequestorType: Self, CLG, CS, Other
   // RequestorClass: BAU,SAU,FAU
   //Requestee: CHILD, YOUTH, ADULT
 
   RequestorType = context.expand( '${#TestCase#RequestorType}');
   RequestorClass = context.expand( '${#TestCase#RequestorClass}');
   Requestee = context.expand( '${#TestCase#Requestee}');
 
    // Following Fields returned for Everyone
    
         assert myXML.@UserClass.size() == 1;
         assert myXML.@UserClass.toString().matches("urn:dece:role:user:class:[a-z]*");
         
         assert myXML.Credentials.size() == 1;
         assert myXML.Credentials.Username.size() == 1;
         assert myXML.Credentials.Password.size() == 0;
 
         assert myXML.Name.size() == 1;
         assert myXML.Name.GivenName.size() == 1;
         assert myXML.Name.SurName.size() == 1;
             
         assert myXML.ContactInfo.size() == 1;
       //  assert myXML.ContactInfo.Address.size() == 1;
      //   assert myXML.ContactInfo.Address.PostalAddress.size() == 1;
       //  assert myXML.ContactInfo.Address.PostalCode.size() == 1;
       //  assert myXML.ContactInfo.Address.Locality.size() == 1;
     //    assert myXML.ContactInfo.Address.StateOrProvince.size() == 1;
     //    assert myXML.ContactInfo.Address.Country.size() == 1;
      //   assert myXML.ContactInfo.TelephoneNumber.size() == 1;
      //   assert myXML.ContactInfo.TelephoneNumber.Value.size() == 1;
       //  assert myXML.ContactInfo.MobileTelephoneNumber.size() == 1;
       //  assert myXML.ContactInfo.MobileTelephoneNumber.Value.size() == 1;
     
         assert myXML.Languages.size() == 1;
         assert myXML.Languages.Language.size() > 0;
     
         assert myXML.ResourceStatus.size() == 1;
         assert myXML.ResourceStatus.Current.size() == 1;
 
         if(RequestorType == "CS")
         {
           assert myXML.ResourceStatus.History.size() > 0;   
         } 
         else
         {
           assert myXML.ResourceStatus.History.size() == 0;                
         }
 
   /******************************************************************************************************************/
           
   //Filtering fields based on PI and Access levels
 
   if(Requestee == "CHILD")
    {
 
                  this.log.info "Getting CHILD details";
                  
                 if((RequestorType == "CLG") || (RequestorType == "Self"))
                  {
                   /****************DOB, Security Token and Email Shown only to Self,CLG and CS**********/
        assert myXML.DateOfBirth.size() == 1;     
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0;
        
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;     
                 }
                 else
                  {
         /****************DOB, Security Token and Email not shown to CS and others**********/
         assert myXML.DateOfBirth.size() == 0;     
       //  assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() == 0;
         //assert myXML.LegalGuardian.size() == 1; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 0;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 0;
                   
 
         /**************Verifying Masking of CHILD PI details *******************/
          
         usernamestring = myXML.Credentials.Username.toString();
         givennamestring = myXML.Name.GivenName.toString();
         surnamestring = myXML.Name.SurName.toString();
                
         //*************Verifying Masking of CHILD UserName details ******************
   
         firstmask = usernamestring.indexOf('â');
         lastmask = usernamestring.lastIndexOf('¢');
 
         usernamestring = usernamestring.substring(firstmask,lastmask+1);
 
         assert usernamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
 
       //*************Verifying Masking of CHILD GivenName details ******************
          
        firstmask = givennamestring.indexOf('â');
        lastmask = givennamestring.lastIndexOf('¢');
 
         givennamestring = givennamestring.substring(firstmask,lastmask+1);
 
         assert givennamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
 
         //*************Verifying Masking of CHILD SurName details ******************
          
        firstmask = surnamestring.indexOf('â');
        lastmask = surnamestring.lastIndexOf('¢');
 
         surnamestring = surnamestring.substring(firstmask,lastmask+1);
 
         assert surnamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";         
    }
                 if(RequestorType == "CS")
          {
             this.log.info "Getting CHILD LG details for CS";
             
             assert myXML.LegalGuardian.size() > 0; 
 
              if(myXML.LegalGuardian.size() == 1)        
             {
                 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");  
             }
             else
             if(myXML.LegalGuardian.size() == 2)         
             {
                if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                                assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else
               if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
                {
                  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";    
               } 
            }         
          else if(myXML.LegalGuardian.size() != 0)                    
                {
                   this.log.info "Getting CHILD Active CLG details for NonCS";
                 
                   assert myXML.LegalGuardian.size() == 1;   
                   assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";        
               }
           else
               {
                 this.log.info "Getting CHILD Pending CLG details for NonCS";
                 assert myXML.LegalGuardian.size() == 0;  
              }
          }
    }  
   else if((RequestorClass == "FAU") || (RequestorClass == "SAU") || (RequestorType == "Self") || (RequestorType == "CS"))
    {
                                  
                    assert myXML.DateOfBirth.size() == 1; 
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;
         
          if(Requestee == "YOUTH")                
          {
            this.log.info "Getting YOUTH details";
            assert myXML.LegalGuardian.size() == 0; 
/*
             if(RequestorType == "CS")
            {
              assert myXML.LegalGuardian.size() > 0; 
 
              if(myXML.LegalGuardian.size() == 1)        
             {
                 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");  
             }
             else if(myXML.LegalGuardian.size() == 2)                
             {
                 if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                                assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
                {
                  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";    
               } 
            }
            else if(myXML.LegalGuardian.size() != 0)                  
            {
                 assert myXML.LegalGuardian.size() == 1;   
                 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";          
            }
           else
            {
                 assert myXML.LegalGuardian.size() == 0;  
            }                  
          }
*/          
       }  
     else
        {
           this.log.info "Getting ADULT details";          
           //assert myxml.LegalGuardian.size() == 0;                
                                assert myXML.LegalGuardian.size() == 0;              
        }
    }  
     else 
    {   
                 //   this.log.info "BAU geting other's details";
                    
                    assert myXML.DateOfBirth.size() == 1; 
        // assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() >> 0; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1; 
         
         if(Requestee == "YOUTH") 
          {
            if(myXML.LegalGuardian.size() != 0)           
            {
                 assert myXML.LegalGuardian.size() == 1;   
                 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";          
            }
          else
            {
                 assert myXML.LegalGuardian.size() == 0;  
            }  
          }
          else
          {
            assert myXML.LegalGuardian.size() == 0; 
          }                    
    }       
    
  }            // end if for SUCCESS response
} // end if for XML Body Validations
</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>1.15. User Status Changed through Resource Update: User Locked [Your UltraViolet membership has been locked]</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Notifications_Test Cases</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>859</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 400 Bad Request</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>ResponseType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:InvocationPathHasNonEncodedParameters">
      <Reason Language="en">The parameters in the invocation path must be escape-encoded.</Reason>
      <OriginalRequest>https://qa.p.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:DF7C3C9C94E2F31EE0401F0A07992917/User/urn:dece:userid:org:dece:DF7C3E49DCFC8E50E0401F0A05995F38/ResourceStatus/Current/Update</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/06/error/en/ErrorList.html#InvocationPathHasNonEncodedParameters</ErrorLink>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DF7C3E49DCFC8E50E0401F0A05995F38</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>DF7C3C9C94E2F31EE0401F0A07992917</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8sAgihWkqphU1TcwPXmLRwGRNlk11//DiZ6TE5yvrxf5cJM09P99DI9zzzHhuc2uyCOUZQ4gV9VxJfaPxzTJBkWNRt00zIbDLczG0aT6uBlh2pRBkVZDFerKnGcIsWPE8NPXmpNkqIbJNugOJ1sdelOl+k8sSyzrVWXKIqxaazyRNaqhef6cffq9qWWRn43MGIn7vqGh+JuArsaUEddrNk1bphqr89vKK8Oo9d9koRdgoBPJoLIdeETDDzimfig82zGXc2xfSNJI/Tu04xfau978zx/yumnILKJJkmSBMkRWMeMHftX7bVy24xMxbeCt7Vg+IHvQMN1LkYJSkXJPjCrwLWDyEn23jemKYIiS9MNVMAGpBj/V4347eCK7oeWPoCMYqMR7w3qZmyOLBQhH6LqYq681H79rIJve/XI8GMriLz40/q/QUJ+htwgRGYjvkV2Q/dzi1+k6/UZwa7iQzeNnQyNyzYJDYji6jRCllOMnBg3nxlXr+WvFvGtwxD8LyV5Jh5xYtjEF5kRHRvFyf9Tr8davVlZGm6KXgGVdJC/9rRR1qunMuNpHH8O80vnQL5cITwqv4G6l/p9/blR7331vmkizeSkl02UHWImJKhPLrBlSqucXmx1rW+QuUJL9mAEt9qw3TZMYw6glp6QSazSvdXL8mBdEELCd5RLqFdcuJ0o7eKkjdzW+UgeXd8VNDSVpuqRS0HeonkhPE5mobsMZcsMBQseTO7ILkfncM+yxakN/Nhklwf2rO8qy0l4CS7H1B4yUXDOaWO9efkd02MMZVxDdL4GWf6/bpGcaCTGfSGUk8LCxzNBr6qiCHVREAASbJArPLAVfnQBY94+nvZHp8flJA9mCxmI4KzOQS7aG3E5mw2l3Fwu3e1SkWVenTN5H2zECv4gSsVS3K4HpLHahpumTG41njfX82BHD0Kzf8z7ezhWdTUf68pZPUjFWJfI1VVmF3h9UQ8qNdEXdGV14Dl1LuVifvUoSvl+vF3Nw82Cy+FFmqmA6QFqIQl7ta97SwrS8z08SCMVHK9yfq8Ky6VaSDqYVnh7vMSx6YK8DaFnhjvP3T8Y72Pjutlbnnc9N91epIMqSD1BO/U0ZUeLM2kA5pvFbrU8Gis5q8D+GOxuHp2WY6yD3N52cnG2GQyDrbLP4BjMJJ6fAZwuEqhKbwCCHg9UBjjFRTjwbCCYck4MmnGlzrk9dn12TuvY6JGuQXU61Ga0YqcnVpT8+naY7g57db+WJ/WhZmYLLuEumzirZ6zhULAIrdla6ifDwurPtMpuKhZr2K+b9oBwL5wcqe0BiC7nvava82TFTuLzzrGsFb+eMG7bclV6HlquFZ7juh7MjhHJ8ohuEptzNkwqwFZ5AHqHxYGfqXynTKqp5LONyhtAlpIUXA7NZNhcngb9zIUbGgTFcDU5HN8LY4q5xBP5TMJtJVU6IjDLIvS1hSQfwIK37Yi3JZmfQRHMNsow3+B8LfpY+XMe5WsebYkHEr0FLNev0AuSSyaJxjDg7PMLX+b26qlYmaxHtk9IGmnjkMnVeGz521VwVD0nWkSpthgOx6Nip6e94wHPKovUhhm9rUjZMQTOeKjvj2IgGtNws0nCug8jmCihpyrFZbKNDx1n55GDeovip6QI282Ft8sXPUPaDiNbo4b9uT+l21wlTq1z36sfOvmqrmts2DYF3xLPZ2IbLckABDI3b53Motk87hf5iM2tATjujOa4cPEo46ThVof5fDZcaV69VWllo5FHXnSCGYeTXOvljDSb1WmT1/t6HEbOJu3YRTTxzebGSNhsSy5ZJ3SPXDM96kxIL20PF2uamWFbnVZmzBpuPbsdwgExJzIgta2R0jvvLsYl9CbwbYB+ng534dv8IB4ny4fRcyMdGu5WBJPbsryAFLEq41vBSP5OYEqJYzasq2o3LFlQnCA/qb2Wu0ry0k0xxXHMLr4y3tai3BZoieFEQRY6UouUSIakZBKQLY5ryXTnxnLeUHyCKAS+5ZS+Sh73dkv9HSD0ujHyTRQ1siCFexTX/mKxzFdV8ef4+g38GOkB5okMIGmB4QX8x9ACxTG8SLdFSQJcu0UJfKdWHQfJxJ9EwEpQ9JEjdj5wxDmCTuigkkiWt2mMr9M4wSk5GVmauNRTZjz5KMVUMyrZXrfJdFpE7Hihi0rAhBeYqYuewn14TRARv/02GwaMr1KBFCS5I5EdAd8MbZF9TCzVJPkrBfg29s/fbmnCOqZTKsRloDzCpUZfMGH6FuW32aCox2zczIPUdMqbHuc8iRz4huTjp9+tVPbQvY/mkv6PoP1D3XDf1T8LPpgmPkd192ZmDryfiPtjAXNNzEZebwU7GU+npzTL0muJ2iXTirB5giJIltAQTDFdOuvBEfnE3QTxI6Z6R/3J813+EV+a7H0twafdww1VvS5/8EzRUFw+UxR8IIqfvoE+uMR5S1CRfCUTXPyaKRH/9cEDu7DUw+Ip/smDyPxdri9sPfjBcZbjzfHtclXy0vM3nQEDbNbBIy6IHo1/ZeAr5x+F9yTfsSS4m3Zpgr7/Ui1n10vNgDBI/UQRa1fB4zy94kzOIer+VvrDzJUZvlP9Iv6W6q/VkYYnm2fU7rrO/1ZuONd2gQjvip0rlpdagV+t2LlvP8zvd4B/jHCBEzhGaso0Jd0nTZvjmhzVvifwQySvf4j/lDzk9PN5eP0X</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\User_Notifications\RET_CS_1_concat.pem</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3ADF7C3E49DCFC8E50E0401F0A05995F38</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADF7C3C9C94E2F31EE0401F0A07992917</con:value></con:property><con:property><con:name>status</con:name><con:value>blocked</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>8dac2685-8684-45a7-9383-18906924bc23</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>40b51506-e7ed-484f-9cef-144c355c10b8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0e921030-fc0e-4088-8519-d2ea05acede9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserDelete_API" searchProperties="true" id="3ad94f34-6a5c-418b-b8f8-a203cab10bc0"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="a41d2cef-51b0-46b7-b40c-1d6923e3263d"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="e0e1fe9a-79d7-42ce-8931-9ee2304fe307"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserDelete"));

tC.setPropertyValue("ETag",callTC.getPropertyValue("ETag"));
tC.setPropertyValue("expectErrType",callTC.getPropertyValue("ResponseTypeUserDelete"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("SAML",callTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID", callTC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
//tC.setPropertyValue("NODE_USER_ID_FULL", callTC.getPropertyValue("NODE_USER_ID_FULL"));
if( tP.getPropertyValue("URLEncode") == "NO")
{
	tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", URLDecoder.decode(callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL")));
	tC.setPropertyValue("NODE_USER_ID_FULL", URLDecoder.decode(callTC.getPropertyValue("NODE_USER_ID_FULL")));
}
else
{
	tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", URLEncoder.encode(URLDecoder.decode(callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))));
	tC.setPropertyValue("NODE_USER_ID_FULL", URLEncoder.encode(URLDecoder.decode(callTC.getPropertyValue("NODE_USER_ID_FULL"))));
}


			</script></con:config></con:testStep><con:testStep type="groovy" name="Set Pem" id="dc69f304-d0b1-4059-89ba-47e13860aae8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("UserDelete");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="UserDelete" id="f64f1781-9c0e-4af0-98c4-96319bba32ff"><con:settings/><con:config service="FirstUserCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" methodName="DeleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserDelete" mediaType="application/xml" id="86860311-fe06-418d-9e53-0c4d81aa0896" sslKeystore="RET_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="If-Match" value="${#TestCase#ETag}"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="1e9ae371-1bd0-4759-940c-81391e47aabd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('UserDelete');
def expXML = tStep.httpRequest.response.getResponseContent();
 
String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
 
 
tStep.httpRequest.response.responseHeaders.each() { header, value ->
switch (header) {
     case "Location": 
		contentLocation = value[0];
          break;
     case "#status#": 
		status = value[0]; 
          break;
	case "Connection": 
		connection = value[0]; 
	     break;
	case "Content-Type": 
	     contentType = value[0]; 
	     break;
	case "Content-Length": 
	     contentLength = value[0]; 
	     break;
	case "Transfer-Encoding": 
	     httpContentEncoding = value[0]; 
	     break;
      }
}
 
tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="fc5935eb-e5d0-495a-bb33-6346b3b9fdb4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def projectPath = groovyUtils.projectPath

def url = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#TestCase#AccountID}')+ "/User/" + context.expand('${#TestCase#UserID}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = context.expand( '${#Project#expectHTTPcontenttype}' );
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = true;
		//httpLocationHeader = true;
	break;

	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";	
		errorReason = "The API call is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_VALID":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserIdInvalid";
		errorReason = "The user ID is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
	break;

	case "USER_INACTIVE":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";	
		errorReason = "The requesting member is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;

     case "URL_NOT_FOUND":
		expectHTTPstatus = "HTTP/1.1 404 Not Found";
		expectHTTPcontenttype = "text/xml"
		XMLbodynull     = true;
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	case "MTHD_NOT_ALLWD":
		expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
		expectHTTPcontenttype = "text/plain; charset=UTF-8"
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	case "USER_NOT_IN_ACC":
		expectHTTPstatus = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:UserNotFound";
		errorReason = "The user ID was not found.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotFound";
	break;

     case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;

	case "NO_ENABLE_MNG_USR_CNST":	
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Policy:EnableManageUserConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:EnableManageUserConsentRequired";
		errorReason = "The setting of the EnableManageUserConsent policy prevents the requested action from being completed.";

	break;

	case "NO_MNG_USR_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageUserConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
	break;

	case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "SPL_CS_ALLOWED_ACCT":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;

     case "USER_ALREADY_DELETED":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserAlreadyDeleted";
		errorReason = "The member has already been removed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserAlreadyDeleted";
     break;

     case "LAST_FULL_USER":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:LastFullAccessUserofAccountCannotBeDeleted";
		errorReason = "The last remaining full-access member in an account cannot be removed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#LastFullAccessUserofAccountCannotBeDeleted";
     break;

     case "FULL_USER_DELETE_NOT_ALLWD":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToDeleteFullAccessUser";
		errorReason = "The requesting member does not have permission to delete a full-access member.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToDeleteFullAccessUser";
     break;

     case "SPL_CS_ALLOWED_USER":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToDeleteSuspendedUsers";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToDeleteSuspendedUsers";
     break;

     case "USER_ACTIVE_CLG":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:LegalGuardianUserCannotBeDeleted";
		errorReason = "The connected legal guardian (CLG) cannot be removed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#LegalGuardianUserCannotBeDeleted";
	break;

	case "USER_PRIVILEGE_INSUFFICIENT":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:RequestorPermissionInsufficientToDeleteUser";
		errorReason = "The requesting member cannot delete the member.";		
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPermissionInsufficientToDeleteUser";
	break;
	case "INVALID_GEO":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestedOperationNotAllowedForSpecifiedGeography";
		errorReason = "The requested operation is not allowed for the specified geography.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestedOperationNotAllowedForSpecifiedGeography";

	break;

     
     
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	//def a = context.expand( '${#TestCase#httpLocation}');
	def a = URLDecoder.decode(context.expand( '${#TestCase#httpLocation}'), "UTF-8");
	def b = a.toURL();
	def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

	assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
	
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	accountid     = urlStr.substring(lastColon + 1);
	
	tC.setPropertyValue("ACCID",accountid);

} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}




//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorLink Received [" + myXML.Error.ErrorLink.toString() + "] Exp[$errorLink]";
		assert myXML.Error.ErrorLink.toString() == errorLink;

		// code added to get the expected and actual responses
		def fileName = tS.project.name + new Date().format( 'yyyyMMdd_hhmms' );

//		tP.setPropertyValue("fileName",fileName);
//		def testCaseName = testRunner.testCase.name;
//
//		def logFile = new File(projectPath +"\\" +context.expand( '${#Project#fileName}' )+".xls")
//		logFile.append(testCaseName.toString()+"\t"+context.expand( '${#TestCase#httpStatus}').toString()+"\t"+expectHTTPstatus.toString()+"\t"+"Exp[$errorID]"+"\t"+"ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "]"+"\t"+"\n")

	} 
	
 } 


</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Validate_Response" disabled="true" id="737e05f7-2733-4628-99dc-9fdca62c3c7d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
 
def url       = context.expand( '${#Project#Provision_HostName}' );
 
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");
 
def RequestorType = "";
def RequestorClass = "";
def Requestee = "";
 
def usernamestring = "";
def givennamestring = "";
def surnamestring = "";
 
int firstmask = 0;
int lastmask = 0;
 
boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;
 
String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#TestCase#AccountID}')+ "/User/" + context.expand('${#TestCase#UserID}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
                errorHost = "http://error.decellc.org";
} else {
                errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";
 
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus   = "HTTP/1.1 200 OK";
                break;
 
                case "API_NOT_AUTH":
                expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
                errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
                errorReason = "API call not authorized";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
                break;
 
                case "FORBIDDEN":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                processXMLFlag  = false;
                                errorIDFlag     = false;
                                errorReasonFlag = false;
                                errorLinkFlag   = false;
                break;
                
                case "USER_NOT_VALID":
                     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
                                errorID     = "urn:dece:errorid:org:dece:UserIdInvalid";
                                errorReason = "The supplied UserID is invalid.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
                break;
 
                case "USER_INACTIVE":
                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
                errorReason = "The requestor is not active.";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
                break;
 
     case "URL_NOT_FOUND":
                expectHTTPstatus = "HTTP/1.1 404 Not Found";
                expectHTTPcontenttype = "text/xml"
                XMLbodynull     = true;
                processXMLFlag  = false;
                errorIDFlag     = false;
                errorReasonFlag = false;
                errorLinkFlag   = false;
                break;
 
                case "MTHD_NOT_ALLWD":
                expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
                expectHTTPcontenttype = "text/plain; charset=UTF-8"
                processXMLFlag  = false;
                errorIDFlag     = false;
                errorReasonFlag = false;
                errorLinkFlag   = false;
                break;
 
                case "USER_NOT_IN_ACC":
                expectHTTPstatus = "HTTP/1.1 404 Not Found";
                errorID     = "urn:dece:errorid:org:dece:UserNotFound";
                errorReason = "The supplied UserID was not found.";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotFound";
                break;
 
     case "USER_NOT_PERMIT":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
                                errorReason = "The user does not have permission to perform the requested action.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
                break;   
 
                case "ACC_NOT_MATCH_TOKEN":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
                                errorReason = "Request Account ID not match";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
                break;
 
                case "NO_MNG_ACC_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
                break;
 
                case "NO_ENABLE_MNG_USR_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Enable Manage User Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:EnableManageUserConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:EnableManageUserConsentRequired";
                break;
 
                case "NO_MNG_USR_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Manage User Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
                break;
 
                case "ACCT_INACTIVE":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
                                errorReason = "The identified account is not active.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;
 
     case "SPL_CS_ALLOWED_ACCT":
                     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
                                errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
                                errorReason = "The request is unauthorized.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;
 
     case "SPL_CS_ALLOWED_USER":
                     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
                                errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToDeleteSuspendedUsers";
                                errorReason = "The request is unauthorized.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToDeleteSuspendedUsers";
     break;
 
    case "REQUESTEE_INACTIVE":
                     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
                                errorReason = "The user has been removed.";
                                errorID     = "urn:dece:errorid:org:dece:AccountUserStatusDeleted";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserStatusDeleted";
                break;
      
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
 
assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;
 
// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;
 
//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
                //assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
                assert context.expand( '${#TestCase#httpContentLength}').toInteger()== 0;
}
 
//Location Header
if (httpLocationHeader) {
                assert context.expand( '${#TestCase#httpLocation}') != null;
 
                def a = context.expand( '${#TestCase#httpLocation}');
                def b = a.toURL();
                def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}
 
                assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
                
                int lastColon = urlStr.lastIndexOf(':');
                int lastSlash = urlStr.lastIndexOf('/');
                accountid     = urlStr.substring(lastColon + 1);
                
                tC.setPropertyValue("ACCID",accountid);
                
} else {
                assert context.expand( '${#TestCase#httpLocation}') == "";
}
 

//
 
//XML body should be null test
if (XMLbodynull) {
 
                assert XMLbody == "";
}
 
if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
                
                def myXML = new XmlSlurper().parseText(XMLbody);
  
                if (errorRespType != "SUCCESS" ) {
                                // Verify response sizes...
                                assert myXML.Error.size() == 1;
                                assert myXML.Error.Reason.size() == 1;
                                assert myXML.Error.OriginalRequest.size() == 1;
                                assert myXML.Error.ErrorLink.size() == 1;
                                
                                // ErrorCode
                                this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
                                assert myXML.Error.@ErrorID.toString() == errorID;
                
                                // ErrorReason
                                this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
                                assert myXML.Error.Reason.toString() == errorReason;
 
                                // ErrorLink
                                this.log.info "ErrorLink Received [" + myXML.Error.ErrorLink.toString() + "] Exp[$errorLink]";
                                assert myXML.Error.ErrorLink.toString() == errorLink;
                } 
  else
  {
   //Data Types
   // RequestorType: Self, CLG, CS, Other
   // RequestorClass: BAU,SAU,FAU
   //Requestee: CHILD, YOUTH, ADULT
 
   RequestorType = context.expand( '${#TestCase#RequestorType}');
   RequestorClass = context.expand( '${#TestCase#RequestorClass}');
   Requestee = context.expand( '${#TestCase#Requestee}');
 
    // Following Fields returned for Everyone
    
         assert myXML.@UserClass.size() == 1;
         assert myXML.@UserClass.toString().matches("urn:dece:role:user:class:[a-z]*");
         
         assert myXML.Credentials.size() == 1;
         assert myXML.Credentials.Username.size() == 1;
         assert myXML.Credentials.Password.size() == 0;
 
         assert myXML.Name.size() == 1;
         assert myXML.Name.GivenName.size() == 1;
         assert myXML.Name.SurName.size() == 1;
             
         assert myXML.ContactInfo.size() == 1;
       //  assert myXML.ContactInfo.Address.size() == 1;
      //   assert myXML.ContactInfo.Address.PostalAddress.size() == 1;
       //  assert myXML.ContactInfo.Address.PostalCode.size() == 1;
       //  assert myXML.ContactInfo.Address.Locality.size() == 1;
     //    assert myXML.ContactInfo.Address.StateOrProvince.size() == 1;
     //    assert myXML.ContactInfo.Address.Country.size() == 1;
      //   assert myXML.ContactInfo.TelephoneNumber.size() == 1;
      //   assert myXML.ContactInfo.TelephoneNumber.Value.size() == 1;
       //  assert myXML.ContactInfo.MobileTelephoneNumber.size() == 1;
       //  assert myXML.ContactInfo.MobileTelephoneNumber.Value.size() == 1;
     
         assert myXML.Languages.size() == 1;
         assert myXML.Languages.Language.size() > 0;
     
         assert myXML.ResourceStatus.size() == 1;
         assert myXML.ResourceStatus.Current.size() == 1;
 
         if(RequestorType == "CS")
         {
           assert myXML.ResourceStatus.History.size() > 0;   
         } 
         else
         {
           assert myXML.ResourceStatus.History.size() == 0;                
         }
 
   /******************************************************************************************************************/
           
   //Filtering fields based on PI and Access levels
 
   if(Requestee == "CHILD")
    {
 
                  this.log.info "Getting CHILD details";
                  
                 if((RequestorType == "CLG") || (RequestorType == "Self"))
                  {
                   /****************DOB, Security Token and Email Shown only to Self,CLG and CS**********/
        assert myXML.DateOfBirth.size() == 1;     
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0;
        
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;     
                 }
                 else
                  {
         /****************DOB, Security Token and Email not shown to CS and others**********/
         assert myXML.DateOfBirth.size() == 0;     
       //  assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() == 0;
         //assert myXML.LegalGuardian.size() == 1; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 0;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 0;
                   
 
         /**************Verifying Masking of CHILD PI details *******************/
          
         usernamestring = myXML.Credentials.Username.toString();
         givennamestring = myXML.Name.GivenName.toString();
         surnamestring = myXML.Name.SurName.toString();
                
         //*************Verifying Masking of CHILD UserName details ******************
   
         firstmask = usernamestring.indexOf('â');
         lastmask = usernamestring.lastIndexOf('¢');
 
         usernamestring = usernamestring.substring(firstmask,lastmask+1);
 
         assert usernamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
 
       //*************Verifying Masking of CHILD GivenName details ******************
          
        firstmask = givennamestring.indexOf('â');
        lastmask = givennamestring.lastIndexOf('¢');
 
         givennamestring = givennamestring.substring(firstmask,lastmask+1);
 
         assert givennamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
 
         //*************Verifying Masking of CHILD SurName details ******************
          
        firstmask = surnamestring.indexOf('â');
        lastmask = surnamestring.lastIndexOf('¢');
 
         surnamestring = surnamestring.substring(firstmask,lastmask+1);
 
         assert surnamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";         
    }
                 if(RequestorType == "CS")
          {
             this.log.info "Getting CHILD LG details for CS";
             
             assert myXML.LegalGuardian.size() > 0; 
 
              if(myXML.LegalGuardian.size() == 1)        
             {
                 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");  
             }
             else
             if(myXML.LegalGuardian.size() == 2)         
             {
                if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                                assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else
               if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
                {
                  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";    
               } 
            }         
          else if(myXML.LegalGuardian.size() != 0)                    
                {
                   this.log.info "Getting CHILD Active CLG details for NonCS";
                 
                   assert myXML.LegalGuardian.size() == 1;   
                   assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";        
               }
           else
               {
                 this.log.info "Getting CHILD Pending CLG details for NonCS";
                 assert myXML.LegalGuardian.size() == 0;  
              }
          }
    }  
   else if((RequestorClass == "FAU") || (RequestorClass == "SAU") || (RequestorType == "Self") || (RequestorType == "CS"))
    {
                                  
                    assert myXML.DateOfBirth.size() == 1; 
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;
         
          if(Requestee == "YOUTH")                
          {
            this.log.info "Getting YOUTH details";
            assert myXML.LegalGuardian.size() == 0; 
/*
             if(RequestorType == "CS")
            {
              assert myXML.LegalGuardian.size() > 0; 
 
              if(myXML.LegalGuardian.size() == 1)        
             {
                 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");  
             }
             else if(myXML.LegalGuardian.size() == 2)                
             {
                 if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                                assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
                {
                  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";    
               } 
            }
            else if(myXML.LegalGuardian.size() != 0)                  
            {
                 assert myXML.LegalGuardian.size() == 1;   
                 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";          
            }
           else
            {
                 assert myXML.LegalGuardian.size() == 0;  
            }                  
          }
*/          
       }  
     else
        {
           this.log.info "Getting ADULT details";          
           //assert myxml.LegalGuardian.size() == 0;                
                                assert myXML.LegalGuardian.size() == 0;              
        }
    }  
     else 
    {   
                 //   this.log.info "BAU geting other's details";
                    
                    assert myXML.DateOfBirth.size() == 1; 
        // assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() >> 0; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1; 
         
         if(Requestee == "YOUTH") 
          {
            if(myXML.LegalGuardian.size() != 0)           
            {
                 assert myXML.LegalGuardian.size() == 1;   
                 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";          
            }
          else
            {
                 assert myXML.LegalGuardian.size() == 0;  
            }  
          }
          else
          {
            assert myXML.LegalGuardian.size() == 0; 
          }                    
    }       
    
  }            // end if for SUCCESS response
} // end if for XML Body Validations
</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>TC_DECE_00030_Account and User Create with CA 111_UserDelete Standard Youth user107_SUCCESS_P0</con:value></con:property><con:property><con:name>sName</con:name><con:value>03.UserDelete_Backward_Compatability</con:value></con:property><con:property><con:name>UserName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>ResponseType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C8A26EB01A60E7E05305991F0A415B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbU+o6FP4rTH3cU9qUVqAjzCAXNx5FpbiP7hcnpqsQLUlpUi7715+kQAVED+c8dbK68q1vXfIlFwJPY8dvCQGppJyVltOYCT+3NowsZT7Hggqf4SkIXxI/aN3e+E7Z9vF2i1HqdxrGC7K90IvCyKzbddt0X18r5isKXdP16jVcRbaNnFC5CpFBnwmJmWwYjo1cEyETuSMb+RXPd6plt1L5bZR+QSoUtnIp28aG1FI0jImUiW9Zi8WivKiUeTq2HIVsPd3eBGQCU2w0L9YZ5YHS5saflEMgEMekTPjUurD2fC5C4Qd0zLDMUtjECr+KZVt23VI+oaDjM6PYC2GfRTxftjHjjBIc0z9Y1+cW5ISHpVY85imVk+mXSSBbA5uwJCZBLjszrH1qJwLtMUwFNsUEow3WECJIgREoPQ77DePstK7lW0cpZiLi6VTsL/8bH2BziHkCoSm2aW2onQ54pFLNCyB+n5E4E3QOAz2sCSYgNt0EcjpU6T6FiC5vqFADuhSanbVL72C5rkaHjkHI/9OgneasQX7hOIOmU0XLuBsEd3czuKXRpLW6nHWvmHW9eGzkBHadc0PR2vXyYCiLIVrvuJlVB5dV7+HNOl+Nrp8eqZhcdR4q4+4IfgYj5CTO9a3bbdeuevftFepSFvcWOImqlxT9cW5jee6+hcun55vKco7uBs9P52+i4g7kc/D78u8O/DV4+zFcjKjzMGx3hvfOw/XyLpiKn5U4iX7IQa22eI2DydjpwtUVJuJhNUCj87qYPd+/S4mv7R6prq5aInqgwhONIp0d/vu27ZkPstc3IHK71GPQ75R6qktYfi9m2kJDM8pd/USLj5DApNHUu7R2+JmSOxr6qofrtV1t11oVp1XrtGvnyENd26vYXr2Oenar5tW9rcisWRxQbHMWUR1LS+56bL4nSKa+ABZCas55ppROGN8gdrDEpT4bqkPAmYARV/IMOHHes4iH4bw24XwMIV/FkyQ2SgMu79hd2ookpPuS7O5J8hAITSho3dZjLdRcC6lKMcPzTMaoPMdlBplS9lSLrO+4Nc8SdJrEoIlaUx5mMZSTSZIXxhLrr2OqCcitw+4oP2xfpnX4b1sB5RNS7SB0LpegughH7ha0TeTrhKu7CW/hW1lI9blS5ZQpJWsm+78+pkSPRzEiKqOXdvCCtrwL95O3f95pfUPKOqxHESic052w25tb3QFKNZrbbs5weVbO5vMs719Vq2Oq4JVkIc+yHSsAkildW434OzCrQLFOukQK4gfBC/s+xUxOWCCxhKkauFK+POHVEIDQr4a+OijLU58keyFV6SQs5TFbO1YvHs3420cR8Yn2U+Z79Vnw9CPxY1g7cVSe6tEgKRvrlb5AVl/MBeEKlirp4+ku+DGAY8H3jUWRCy5SDdRrJuHrPyWtaQ0DE8IzJvsdIzfs6mzOU64S8D+cPsHkUl687ei/P+5Mmo8AAfUiFDTH11e0r48AG+9o9SboEbnuVWvd7jlye7ty3e2gWlGUPXbNT+bPlp06Hc548x8=</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3ADF8026914382E445E0401F0A05996AFB</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADF802691433EE445E0401F0A05996AFB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:07C8A32A8DC86151E05305991F0A8595</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:07C8A32F78EE614FE05305991F0AED18</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07C8A32F78F9614FE05305991F0AED18:ADF6126C"</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>8dac2685-8684-45a7-9383-18906924bc23</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>40b51506-e7ed-484f-9cef-144c355c10b8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0e921030-fc0e-4088-8519-d2ea05acede9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="FullUserUpdate API" searchProperties="true" id="7862a908-a45a-4b81-bc0e-801e8e24856e" disabled="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="e8e7711f-eb52-4a17-984b-8a6a0236e395"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("ResponseType",null);
tC.setPropertyValue("userType",null);
tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID",null);
tC.setPropertyValue("ENCODED_NODE_USER_ID",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("SAML",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="fc0f6904-5506-463b-adf0-9309f4db6c7a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));

tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID", callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));
tC.setPropertyValue("userType", callTC.getPropertyValue("userType"));
tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserCreate"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
if (tP.getPropertyValue("V2")=="06" || tP.getPropertyValue("V2")=="07"){
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			tC.setPropertyValue("ENCODED_NODE_USER_ID", URLEncoder.encode("urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"), "UTF-8"));
			}else{
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			tC.setPropertyValue("ENCODED_NODE_USER_ID", "urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"));
			}</script></con:config></con:testStep><con:testStep type="groovy" name="Setting constants based on Geo Profile" id="15098d07-3e28-4bd9-8ce6-eddc712c561b"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


/* Setting constants based on Geo Profile*/

if(tP.getPropertyValue("GeoProfile")=="US")
{
  tP.setPropertyValue("Country","US");                
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","13");
  tP.setPropertyValue("CHILD_MAX_AGE","12");
}
else
if(tP.getPropertyValue("GeoProfile")=="CA")
{
  tP.setPropertyValue("Country","CA");                
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","13");
  tP.setPropertyValue("CHILD_MAX_AGE","12");
}
else
if(tP.getPropertyValue("GeoProfile")=="GB")
{
  tP.setPropertyValue("Country","GB");                
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
else
if(tP.getPropertyValue("GeoProfile")=="AU")
{
  tP.setPropertyValue("Country","AU");                
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
  else
if(tP.getPropertyValue("GeoProfile")=="NZ")
{
  tP.setPropertyValue("Country","NZ");                
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
  else
if(tP.getPropertyValue("GeoProfile")=="IE")
{
  tP.setPropertyValue("Country","IE");  
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
/*Setting DOB for Adults*/
Date dob = (new Date());
  
dob = dob - ((tP.getPropertyValue("ADULT_MIN_AGE").toInteger()+1)*365);

tP.setPropertyValue("ADULT_DOB",dob.format('dd-MMM-yy'));
tP.setPropertyValue("ADULT_DOB_XML",dob.format('yyyy-MM-dd'));

/*Setting DOB for Youth*/

dob = (new Date());
  
dob = dob - ((tP.getPropertyValue("YOUTH_MIN_AGE").toInteger()+1)*365);

tP.setPropertyValue("YOUTH_DOB",dob.format('dd-MMM-yy'));
tP.setPropertyValue("YOUTH_DOB_XML",dob.format('yyyy-MM-dd'));


/*Setting DOB for Child*/

dob = (new Date());
  
dob = dob - ((tP.getPropertyValue("CHILD_MAX_AGE").toInteger()-1)*365);

tP.setPropertyValue("CHILD_DOB",dob.format('dd-MMM-yy'));
tP.setPropertyValue("CHILD_DOB_XML",dob.format('yyyy-MM-dd'));


if(tC.getPropertyValue("userType")=="ADULT"){
	tC.setPropertyValue("DateOfBirth",tP.getPropertyValue("ADULT_DOB_XML"));
	tC.setPropertyValue("MeetsAgeOfMajority","true");
}else if(tC.getPropertyValue("userType")=="YOUTH"){
	tC.setPropertyValue("DateOfBirth",tP.getPropertyValue("YOUTH_DOB_XML"));
	tC.setPropertyValue("MeetsAgeOfMajority","false");
}else if(tC.getPropertyValue("userType")=="CHILD"){
	tC.setPropertyValue("DateOfBirth",tP.getPropertyValue("CHILD_DOB_XML"));
	tC.setPropertyValue("MeetsAgeOfMajority","false");
}else{
	tC.setPropertyValue("DateOfBirth",tP.getPropertyValue("ADULT_DOB_XML"));
	tC.setPropertyValue("MeetsAgeOfMajority","true");
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="02239d7c-1ce6-4d58-9ae0-6470a8e1e472"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("UserUpdate");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="UserUpdate" id="a1716223-f6c8-4dc3-856d-e8679a537744"><con:settings/><con:config service="AddNewUser" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" methodName="UserUpdate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserUpdate" mediaType="application/xml" sslKeystore="RET_concat.pem" id="0a991f82-1623-4495-b24c-9cc11cc37183" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:full" xmlns="${#Project#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
        	<GivenName>${#TestCase#UserName}</GivenName>
		<SurName>${#TestCase#UserName}</SurName>
	</Name>	
	<ContactInfo>
        <PrimaryEmail>			
	       <Value>${#Project#PrimaryEmail}</Value>
               <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</PrimaryEmail>
	<AlternateEmail>			
        <Value>${#Project#AlternateEmailAddress}</Value>			
        <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</AlternateEmail>
	</ContactInfo>
        <Languages>
		<Language>de</Language>	
	</Languages>
       <!-- <DateOfBirth> depricated </DateOfBirth> -->
       <Credentials> 
               <Username>${#TestCase#UserName}</Username>	 
	</Credentials>
<UserRecoveryTokens>
      <RecoveryItem>
		<QuestionID>1200</QuestionID>  
		<QuestionResponse>Turner</QuestionResponse>
       </RecoveryItem>
       <RecoveryItem>
		<QuestionID>1650</QuestionID>  
		<QuestionResponse>Phoenix</QuestionResponse>
       </RecoveryItem> 
</UserRecoveryTokens>
</User>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#ENCODED_NODE_ACCOUNT_ID}"/>
  <con:entry key="UserID" value="${#TestCase#ENCODED_NODE_USER_ID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="3af7e03a-0317-48f5-92bd-e35a465a120e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('UserUpdate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			log.info "V2: "+tP.getPropertyValue("V2");
			if (tP.getPropertyValue("V2")=="06" || tP.getPropertyValue("V2")=="07"){
			contentLocation = URLDecoder.decode(value[0], "UTF-8");
			}else{
				contentLocation = value[0];
			}
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="5d887a92-965a-45ab-ab45-7daaea74c225"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
 
def url       = context.expand( '${#Project#Provision_HostName}' );
 
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");
 
def RequestorType = "";
def RequestorClass = "";
def Requestee = "";
 
def usernamestring = "";
def givennamestring = "";
def surnamestring = "";
 
int firstmask = 0;
int lastmask = 0;
 
boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;
 
String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#TestCase#AccountID}')+ "/User/" + context.expand('${#TestCase#UserID}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
                errorHost = "http://error.decellc.org";
} else {
                errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";
 
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus   = "HTTP/1.1 200 OK";
                break;
 
                case "API_NOT_AUTH":
                expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
                errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
                errorReason = "API call not authorized";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
                break;
 
                case "FORBIDDEN":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                processXMLFlag  = false;
                                errorIDFlag     = false;
                                errorReasonFlag = false;
                                errorLinkFlag   = false;
                break;
                
                case "USER_NOT_VALID":
                     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
                                errorID     = "urn:dece:errorid:org:dece:UserIdInvalid";
                                errorReason = "The supplied UserID is invalid.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
                break;
 
                case "USER_INACTIVE":
                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
                errorReason = "The requestor is not active.";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
                break;
 
     case "URL_NOT_FOUND":
                expectHTTPstatus = "HTTP/1.1 404 Not Found";
                expectHTTPcontenttype = "text/xml"
                XMLbodynull     = true;
                processXMLFlag  = false;
                errorIDFlag     = false;
                errorReasonFlag = false;
                errorLinkFlag   = false;
                break;
 
                case "MTHD_NOT_ALLWD":
                expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
                expectHTTPcontenttype = "text/plain; charset=UTF-8"
                processXMLFlag  = false;
                errorIDFlag     = false;
                errorReasonFlag = false;
                errorLinkFlag   = false;
                break;
 
                case "USER_NOT_IN_ACC":
                expectHTTPstatus = "HTTP/1.1 404 Not Found";
                errorID     = "urn:dece:errorid:org:dece:UserNotFound";
                errorReason = "The supplied UserID was not found.";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotFound";
                break;
 
     case "USER_NOT_PERMIT":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
                                errorReason = "The user does not have permission to perform the requested action.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
                break;   
 
                case "ACC_NOT_MATCH_TOKEN":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
                                errorReason = "Request Account ID not match";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
                break;
 
                case "NO_MNG_ACC_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
                break;
 
                case "NO_ENABLE_MNG_USR_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Enable Manage User Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:EnableManageUserConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:EnableManageUserConsentRequired";
                break;
 
                case "NO_MNG_USR_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Manage User Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
                break;
 
                case "ACCT_INACTIVE":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
                                errorReason = "The identified account is not active.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;
 
     case "SPL_CS_ALLOWED_ACCT":
                     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
                                errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
                                errorReason = "The request is unauthorized.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;
 
     case "SPL_CS_ALLOWED_USER":
                     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
                                errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToDeleteSuspendedUsers";
                                errorReason = "The request is unauthorized.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToDeleteSuspendedUsers";
     break;
 
    case "REQUESTEE_INACTIVE":
                     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
                                errorReason = "The user has been removed.";
                                errorID     = "urn:dece:errorid:org:dece:AccountUserStatusDeleted";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserStatusDeleted";
                break;
      
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
 
assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;
 
// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;
 
//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
                //assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
                assert context.expand( '${#TestCase#httpContentLength}').toInteger()== 0;
}
 
//Location Header
if (httpLocationHeader) {
                assert context.expand( '${#TestCase#httpLocation}') != null;
 
                def a = context.expand( '${#TestCase#httpLocation}');
                def b = a.toURL();
                def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}
 
                assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
                
                int lastColon = urlStr.lastIndexOf(':');
                int lastSlash = urlStr.lastIndexOf('/');
                accountid     = urlStr.substring(lastColon + 1);
                
                tC.setPropertyValue("ACCID",accountid);
                
} else {
                assert context.expand( '${#TestCase#httpLocation}') == "";
}
 

//
 
//XML body should be null test
if (XMLbodynull) {
 
                assert XMLbody == "";
}
 
if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
                
                def myXML = new XmlSlurper().parseText(XMLbody);
  
                if (errorRespType != "SUCCESS" ) {
                                // Verify response sizes...
                                assert myXML.Error.size() == 1;
                                assert myXML.Error.Reason.size() == 1;
                                assert myXML.Error.OriginalRequest.size() == 1;
                                assert myXML.Error.ErrorLink.size() == 1;
                                
                                // ErrorCode
                                this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
                                assert myXML.Error.@ErrorID.toString() == errorID;
                
                                // ErrorReason
                                this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
                                assert myXML.Error.Reason.toString() == errorReason;
 
                                // ErrorLink
                                this.log.info "ErrorLink Received [" + myXML.Error.ErrorLink.toString() + "] Exp[$errorLink]";
                                assert myXML.Error.ErrorLink.toString() == errorLink;
                } 
  else
  {
   //Data Types
   // RequestorType: Self, CLG, CS, Other
   // RequestorClass: BAU,SAU,FAU
   //Requestee: CHILD, YOUTH, ADULT
 
   RequestorType = context.expand( '${#TestCase#RequestorType}');
   RequestorClass = context.expand( '${#TestCase#RequestorClass}');
   Requestee = context.expand( '${#TestCase#Requestee}');
 
    // Following Fields returned for Everyone
    
         assert myXML.@UserClass.size() == 1;
         assert myXML.@UserClass.toString().matches("urn:dece:role:user:class:[a-z]*");
         
         assert myXML.Credentials.size() == 1;
         assert myXML.Credentials.Username.size() == 1;
         assert myXML.Credentials.Password.size() == 0;
 
         assert myXML.Name.size() == 1;
         assert myXML.Name.GivenName.size() == 1;
         assert myXML.Name.SurName.size() == 1;
             
         assert myXML.ContactInfo.size() == 1;
       //  assert myXML.ContactInfo.Address.size() == 1;
      //   assert myXML.ContactInfo.Address.PostalAddress.size() == 1;
       //  assert myXML.ContactInfo.Address.PostalCode.size() == 1;
       //  assert myXML.ContactInfo.Address.Locality.size() == 1;
     //    assert myXML.ContactInfo.Address.StateOrProvince.size() == 1;
     //    assert myXML.ContactInfo.Address.Country.size() == 1;
      //   assert myXML.ContactInfo.TelephoneNumber.size() == 1;
      //   assert myXML.ContactInfo.TelephoneNumber.Value.size() == 1;
       //  assert myXML.ContactInfo.MobileTelephoneNumber.size() == 1;
       //  assert myXML.ContactInfo.MobileTelephoneNumber.Value.size() == 1;
     
         assert myXML.Languages.size() == 1;
         assert myXML.Languages.Language.size() > 0;
     
         assert myXML.ResourceStatus.size() == 1;
         assert myXML.ResourceStatus.Current.size() == 1;
 
         if(RequestorType == "CS")
         {
           assert myXML.ResourceStatus.History.size() > 0;   
         } 
         else
         {
           assert myXML.ResourceStatus.History.size() == 0;                
         }
 
   /******************************************************************************************************************/
           
   //Filtering fields based on PI and Access levels
 
   if(Requestee == "CHILD")
    {
 
                  this.log.info "Getting CHILD details";
                  
                 if((RequestorType == "CLG") || (RequestorType == "Self"))
                  {
                   /****************DOB, Security Token and Email Shown only to Self,CLG and CS**********/
        assert myXML.DateOfBirth.size() == 1;     
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0;
        
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;     
                 }
                 else
                  {
         /****************DOB, Security Token and Email not shown to CS and others**********/
         assert myXML.DateOfBirth.size() == 0;     
       //  assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() == 0;
         //assert myXML.LegalGuardian.size() == 1; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 0;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 0;
                   
 
         /**************Verifying Masking of CHILD PI details *******************/
          
         usernamestring = myXML.Credentials.Username.toString();
         givennamestring = myXML.Name.GivenName.toString();
         surnamestring = myXML.Name.SurName.toString();
                
         //*************Verifying Masking of CHILD UserName details ******************
   
         firstmask = usernamestring.indexOf('â');
         lastmask = usernamestring.lastIndexOf('¢');
 
         usernamestring = usernamestring.substring(firstmask,lastmask+1);
 
         assert usernamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
 
       //*************Verifying Masking of CHILD GivenName details ******************
          
        firstmask = givennamestring.indexOf('â');
        lastmask = givennamestring.lastIndexOf('¢');
 
         givennamestring = givennamestring.substring(firstmask,lastmask+1);
 
         assert givennamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
 
         //*************Verifying Masking of CHILD SurName details ******************
          
        firstmask = surnamestring.indexOf('â');
        lastmask = surnamestring.lastIndexOf('¢');
 
         surnamestring = surnamestring.substring(firstmask,lastmask+1);
 
         assert surnamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";         
    }
                 if(RequestorType == "CS")
          {
             this.log.info "Getting CHILD LG details for CS";
             
             assert myXML.LegalGuardian.size() > 0; 
 
              if(myXML.LegalGuardian.size() == 1)        
             {
                 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");  
             }
             else
             if(myXML.LegalGuardian.size() == 2)         
             {
                if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                                assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else
               if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
                {
                  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";    
               } 
            }         
          else if(myXML.LegalGuardian.size() != 0)                    
                {
                   this.log.info "Getting CHILD Active CLG details for NonCS";
                 
                   assert myXML.LegalGuardian.size() == 1;   
                   assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";        
               }
           else
               {
                 this.log.info "Getting CHILD Pending CLG details for NonCS";
                 assert myXML.LegalGuardian.size() == 0;  
              }
          }
    }  
   else if((RequestorClass == "FAU") || (RequestorClass == "SAU") || (RequestorType == "Self") || (RequestorType == "CS"))
    {
                                  
                    assert myXML.DateOfBirth.size() == 1; 
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;
         
          if(Requestee == "YOUTH")                
          {
            this.log.info "Getting YOUTH details";
            assert myXML.LegalGuardian.size() == 0; 
/*
             if(RequestorType == "CS")
            {
              assert myXML.LegalGuardian.size() > 0; 
 
              if(myXML.LegalGuardian.size() == 1)        
             {
                 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");  
             }
             else if(myXML.LegalGuardian.size() == 2)                
             {
                 if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                                assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
                {
                  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";    
               } 
            }
            else if(myXML.LegalGuardian.size() != 0)                  
            {
                 assert myXML.LegalGuardian.size() == 1;   
                 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";          
            }
           else
            {
                 assert myXML.LegalGuardian.size() == 0;  
            }                  
          }
*/          
       }  
     else
        {
           this.log.info "Getting ADULT details";          
           //assert myxml.LegalGuardian.size() == 0;                
                                assert myXML.LegalGuardian.size() == 0;              
        }
    }  
     else 
    {   
                 //   this.log.info "BAU geting other's details";
                    
                    assert myXML.DateOfBirth.size() == 1; 
        // assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() >> 0; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1; 
         
         if(Requestee == "YOUTH") 
          {
            if(myXML.LegalGuardian.size() != 0)           
            {
                 assert myXML.LegalGuardian.size() == 1;   
                 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";          
            }
          else
            {
                 assert myXML.LegalGuardian.size() == 0;  
            }  
          }
          else
          {
            assert myXML.LegalGuardian.size() == 0; 
          }                    
    }       
    
  }            // end if for SUCCESS response
} // end if for XML Body Validations
</script></con:config></con:testStep><con:properties><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>tName</con:name><con:value>1.21. User Email Address Changed by Another User [Your UltraViolet email address has been changed]</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Notifications_Test Cases</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>DF83148BF14A1B37E0401F0A0799725A</con:value></con:property><con:property><con:name>SecondUserName</con:name><con:value>username_20130122_043244</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8uwiAtWkqpBUFHRgLjevIXDgCibDJv++nfQ6DE5yfnyflc6PT3dTy/0PPOMDc9lOwBjFMVO4Jdl8aXyT7PFcg2Th7WGVedqnNFu1Np0m6+xvGnVG3R7uzWYSlnGOEGyj2PDj18qLM3Ua3SzxvA6U+806E69+USz3KZSXqAIE9NE5YmulHPP9XHn4valkkR+JzCwgzu+4SHciWFnBpRxh2h2jBumyuvzFeXFYfS6i+OwQ1HwyUQQuS58goFHPVMfdJ5N3Jk5tm/ESYTefZr4pfJ+Nsuyp6z+FEQ2xdI0TdE8RXRM7Ni/Kq+l22Fkyr4VXNddww98BxquczYKUAqKd4FZBq4dRE68874xzVAMXZiuoRzWIMP5vyrUbwcXdD+09AFkhI0a3pEivBvTkIUi5ENUnmvyS+XXzyp4PatHho+tIPLwp/V/g4T8FLlBiMwavkV2Q/dzi1+k6/UZwY7sQzfBToomRZuEBkS4/BYhy8nHDibNZ+LypfzlHN86DMH/UpJn6hEngU19kRnRsRGO/596PdbqamVhuAl6bc4Ye7D3+oln7yJRsFdmQ+NWIuqGwcsFwqPyFdS91O/rz41676v3Q9aSsua+vTwziatnYX7O1S7XPMxTS287OQgHbhuej/l5U9dVaz3Ydkchv6H9pDoc5Nvxymc0zemP9y0eSNtSg6/i5bq614ataj5fRlqaCNXT0lw38154ipqWeaB8VU0MwVjM1UzdU6c8dLhwoEtWjH1/82ZQPSMVFG0pl05QYbdiHhyEQ+jUe8yEll5+x/QYQxHXCJ0uQRb/Vw2aF43YuC+6xaSwyOcZo1dFlrtVsdsFqGuDTBaALQvjM5gI9uG4Ozh9PqMFoM57QAQnRQOZaK/FhaqOpMxcLNzNQu71CD4uG4C1WCIbopQvxM1qSBvLTbhme/RmJgjmSgu29WFoDg7ZYAcniq5kE10+KXspn+gSvbzI7Jysz8peYab6vF5a7gVe0aRMzC4eRSnbTTZLLVzP+QyeJVUBXB8wc6m7Uwa6t2BgXdvBvTRWwOEiF3ZKd7FQckkHbyXBnixIbHq3twmhZ4Zbz909GB8Q47rZX5y2fTfZnKW90pX63dmxP5O3dVGVhkBbz7fLxcFY9tISHEzA9ubRaTjGKsjsTTsT1fVwFGzkXQonQJUEQQUkXTRQ5P4QBH0BKBxw8nN3LzSDrtnLqCGLS1Xe7TdXJ+e4wkafdg2m3WbW42Xz7dgUJb+6GSXb/U7ZrXrT6mhmpnM+5s9rnFbTpuEwMA8tdSUN4lFuDdRZafsm5is4qJr2kHLPfC9SWkMQnU87V7G1eNmc4tPWsaylsJpybstylboWWq4VnnBVD9RDRDcFVGep9SkdxSVgKwIA/f18L6iK0C6SasqZulYEA/SkOAHnPRuP2MVxOEhduK6DIB8tp/vDe2FMMZMEKlMl0lZSqS0CsyjCYDaXenswF2w7EmypJ6hQBOpaHmVrkq/5gCh/zmPvkkdbEoBU34AmPyjV5zQfT+MZx4GTL8z9Hr9TjvnSbHp064ik8WwScpmCJ5a/WQYHxXOieZTM5qPRZJxv9aR/2JNZZdGzUVrflKT0EAJnMtJ3BzEQjbdwvY7Dqg8jGMuhp8j5ebrB+7az9ehhtcEIb7QIW+zc22bzviFtRpE9Y0YDzX+rt/gSTqzTwKvu29myqs+aYcvs+pZ4OlGbaEEHIOjxWuNo5ix72M2zcTOzhuCwNdhJ7vLCiZdGGx1mmjpazrxqo9RIx2OPPusUNwmn2ayfcZKqVuumoA90HEbOOmnbeTT1TXZtxM10Qy+aTugeeDY56FxYX9geKdZbaoYt5a2kciu48exWCIeURqVAalljuX/ano1z6E3hdYB+ng534XV+UI+T5cPouZGOGelWBOPbsriAZLHcI7eCEf+dwBQSx6xZF9VOWLAgHCM/rrwWpwry0kkIxXHMDrkyrmux164zXFvoMQ2eEeotieZopkcDusXzLbYBbizniuITxG7gW07hq+Bx11vq7wCh18HIN1FUS4ME7hCu/MVika+y7Gvk+g18jPSA8MSWxDFCQxJbvNBmWbbREOgGgS5227TYZFhQKU+CeOpPI2DFKPrIEZsfOKKGoBM6qCCSxW2KyXWKY5KSo5Emscs8pcaTjxJCNaOC7XVYrt2gsOOFLioAU15gJi56CnfhJUEUvv6yNQPii1ST9H/kWfdy038b4ue9WzaIjukUCriIR0CkougLwsvegvk+aP4x6Jt5kJhOcaGT1MaRA69IPm797piiVe7tQqK6Qb5rfhZ8sEp9DujuyEwdeO/5+3OAsEnCN15vJTkaT8enJE2TSxFaBZeKiHmKoegmNUMwIYTopAcH5FN3E9SPuOgd9SfPd/lHfEm882cx+Z490jLly/IHD5EZwsVDRCYtn//0lfPBJclbjPL4K1nXJe+VAvFfnzSwAws9In4jP1kQmb/L9YWtBz8kzmKAOb5drArmefqmKWBAzDpkiAXRo/GvDHzl/KPwnuQ7lph00zaJ0fc75WI6vVQMCIPEj2WxchE8TswLzvgUos5vpT/MXLjfO5nP8bdkfqWMZ2R2eUblruv8b+Wac2kXiMgp7FywvFRy8i4lzn37YUK/A/x6SHPgb0P6YySvf4j/lDzk9PP38Pov</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>DF831D3BDEBB69DEE0401F0A05992E1F</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADF83148BF14A1B37E0401F0A0799725A</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\User_Notifications\RET_concat.pem</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-06-24</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3ADF831D3BDEBB69DEE0401F0A05992E1F</con:value></con:property><con:property><con:name>UserName</con:name><con:value>fullusername_20130619_072217</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5ff78eb3-d79f-4f4a-b9a8-5ec1c84f61c0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3d78db1c-105b-43a0-b406-6bb0f690c833</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662fb201-c4e7-401c-b10a-548ea13f5020</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CLGTransfer" searchProperties="true" id="9d562b4c-2b21-4e4b-9dee-ea86ba8721ce" disabled="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="b6c59ddd-f128-45cc-acc1-fcb9c7601c10"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("ResponseType",null);
tC.setPropertyValue("userType",null);
tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID",null);
tC.setPropertyValue("ENCODED_NODE_USER_ID",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("SAML",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="d2122245-f595-48c8-b54c-ea78d0db3f52"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));

tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID", callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("CLG_NODE_USER_ID", callTC.getPropertyValue("CLG_NODE_USER_ID"));
tC.setPropertyValue("FULL_NODE_USER_ID", callTC.getPropertyValue("FULL_NODE_USER_ID"));
tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));
tC.setPropertyValue("userType", callTC.getPropertyValue("userType"));
tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserCreate"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
if (tP.getPropertyValue("V2")=="06" || tP.getPropertyValue("V2")=="07"){
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			tC.setPropertyValue("ENCODED_NODE_USER_ID", URLEncoder.encode("urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"), "UTF-8"));
			}else{
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			tC.setPropertyValue("ENCODED_NODE_USER_ID", "urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"));
			}</script></con:config></con:testStep><con:testStep type="groovy" name="Setting constants based on Geo Profile" id="7060fe95-13b3-41ca-a150-3f0edc3adc54"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


/* Setting constants based on Geo Profile*/

if(tP.getPropertyValue("GeoProfile")=="US")
{
  tP.setPropertyValue("Country","US");                
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","13");
  tP.setPropertyValue("CHILD_MAX_AGE","12");
}
else
if(tP.getPropertyValue("GeoProfile")=="CA")
{
  tP.setPropertyValue("Country","CA");                
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","13");
  tP.setPropertyValue("CHILD_MAX_AGE","12");
}
else
if(tP.getPropertyValue("GeoProfile")=="GB")
{
  tP.setPropertyValue("Country","GB");                
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
else
if(tP.getPropertyValue("GeoProfile")=="AU")
{
  tP.setPropertyValue("Country","AU");                
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
  else
if(tP.getPropertyValue("GeoProfile")=="NZ")
{
  tP.setPropertyValue("Country","NZ");                
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
  else
if(tP.getPropertyValue("GeoProfile")=="IE")
{
  tP.setPropertyValue("Country","IE");  
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
/*Setting DOB for Adults*/
Date dob = (new Date());
  
dob = dob - ((tP.getPropertyValue("ADULT_MIN_AGE").toInteger()+1)*365);

tP.setPropertyValue("ADULT_DOB",dob.format('dd-MMM-yy'));
tP.setPropertyValue("ADULT_DOB_XML",dob.format('yyyy-MM-dd'));

/*Setting DOB for Youth*/

dob = (new Date());
  
dob = dob - ((tP.getPropertyValue("YOUTH_MIN_AGE").toInteger()+1)*365);

tP.setPropertyValue("YOUTH_DOB",dob.format('dd-MMM-yy'));
tP.setPropertyValue("YOUTH_DOB_XML",dob.format('yyyy-MM-dd'));


/*Setting DOB for Child*/

dob = (new Date());
  
dob = dob - ((tP.getPropertyValue("CHILD_MAX_AGE").toInteger()-1)*365);

tP.setPropertyValue("CHILD_DOB",dob.format('dd-MMM-yy'));
tP.setPropertyValue("CHILD_DOB_XML",dob.format('yyyy-MM-dd'));


if(tC.getPropertyValue("userType")=="ADULT"){
	tC.setPropertyValue("DateOfBirth",tP.getPropertyValue("ADULT_DOB_XML"));
	tC.setPropertyValue("MeetsAgeOfMajority","true");
}else if(tC.getPropertyValue("userType")=="YOUTH"){
	tC.setPropertyValue("DateOfBirth",tP.getPropertyValue("YOUTH_DOB_XML"));
	tC.setPropertyValue("MeetsAgeOfMajority","false");
}else if(tC.getPropertyValue("userType")=="CHILD"){
	tC.setPropertyValue("DateOfBirth",tP.getPropertyValue("CHILD_DOB_XML"));
	tC.setPropertyValue("MeetsAgeOfMajority","false");
}else{
	tC.setPropertyValue("DateOfBirth",tP.getPropertyValue("ADULT_DOB_XML"));
	tC.setPropertyValue("MeetsAgeOfMajority","true");
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="20e9cc33-a9bd-4521-aef3-430d62debf4b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("CLGTransfer");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="CLGTransfer" id="f04ef3e0-3f34-4fd7-b08e-576d088813e1"><con:settings/><con:config service="AddNewUser" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" methodName="UserUpdate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CLGTransfer" mediaType="application/xml" sslKeystore="dececs_concat.pem" id="0a991f82-1623-4495-b24c-9cc11cc37183" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:standard" xmlns="${#Project#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
        	<GivenName>${#TestCase#UserName}</GivenName>
		<SurName>${#TestCase#UserName}</SurName>
	</Name>	
	<ContactInfo>
        <PrimaryEmail>			
	       <Value>${#Project#PrimaryEmail}</Value>
               <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</PrimaryEmail>
	<AlternateEmail>			
        <Value>${#Project#AlternateEmailAddress}</Value>			
        <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</AlternateEmail>
	</ContactInfo>
        <Languages>
		<Language>de</Language>	
	</Languages>
       <!-- <DateOfBirth> depricated </DateOfBirth> -->
      <LegalGuardian Status="urn:dece:type:status:active">urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}</LegalGuardian>
      <LegalGuardian Status="urn:dece:type:status:pending">urn:dece:userid:org:dece:${#TestCase#FULL_NODE_USER_ID}</LegalGuardian>
       <Credentials> 
               <Username>${#TestCase#UserName}</Username>	 
	</Credentials>
<UserRecoveryTokens>
      <RecoveryItem>
		<QuestionID>1200</QuestionID>  
		<QuestionResponse>Turner</QuestionResponse>
       </RecoveryItem>
       <RecoveryItem>
		<QuestionID>1650</QuestionID>  
		<QuestionResponse>Phoenix</QuestionResponse>
       </RecoveryItem> 
</UserRecoveryTokens>
</User>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#ENCODED_NODE_ACCOUNT_ID}"/>
  <con:entry key="UserID" value="${#TestCase#ENCODED_NODE_USER_ID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="2479ab41-1198-444b-88a0-f69cfd793c9b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('CLGTransfer');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			log.info "V2: "+tP.getPropertyValue("V2");
			if (tP.getPropertyValue("V2")=="06" || tP.getPropertyValue("V2")=="07"){
			contentLocation = URLDecoder.decode(value[0], "UTF-8");
			}else{
				contentLocation = value[0];
			}
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="5db4b6fe-99bc-4dbd-b846-0fe097588a46"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
 
def url       = context.expand( '${#Project#Provision_HostName}' );
 
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");
 
def RequestorType = "";
def RequestorClass = "";
def Requestee = "";
 
def usernamestring = "";
def givennamestring = "";
def surnamestring = "";
 
int firstmask = 0;
int lastmask = 0;
 
boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;
 
String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#TestCase#AccountID}')+ "/User/" + context.expand('${#TestCase#UserID}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
                errorHost = "http://error.decellc.org";
} else {
                errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";
 
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus   = "HTTP/1.1 200 OK";
                break;
 
                case "API_NOT_AUTH":
                expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
                errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
                errorReason = "API call not authorized";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
                break;
 
                case "FORBIDDEN":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                processXMLFlag  = false;
                                errorIDFlag     = false;
                                errorReasonFlag = false;
                                errorLinkFlag   = false;
                break;
                
                case "USER_NOT_VALID":
                     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
                                errorID     = "urn:dece:errorid:org:dece:UserIdInvalid";
                                errorReason = "The supplied UserID is invalid.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
                break;
 
                case "USER_INACTIVE":
                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
                errorReason = "The requestor is not active.";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
                break;
 
     case "URL_NOT_FOUND":
                expectHTTPstatus = "HTTP/1.1 404 Not Found";
                expectHTTPcontenttype = "text/xml"
                XMLbodynull     = true;
                processXMLFlag  = false;
                errorIDFlag     = false;
                errorReasonFlag = false;
                errorLinkFlag   = false;
                break;
 
                case "MTHD_NOT_ALLWD":
                expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
                expectHTTPcontenttype = "text/plain; charset=UTF-8"
                processXMLFlag  = false;
                errorIDFlag     = false;
                errorReasonFlag = false;
                errorLinkFlag   = false;
                break;
 
                case "USER_NOT_IN_ACC":
                expectHTTPstatus = "HTTP/1.1 404 Not Found";
                errorID     = "urn:dece:errorid:org:dece:UserNotFound";
                errorReason = "The supplied UserID was not found.";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotFound";
                break;
 
     case "USER_NOT_PERMIT":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
                                errorReason = "The user does not have permission to perform the requested action.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
                break;   
 
                case "ACC_NOT_MATCH_TOKEN":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
                                errorReason = "Request Account ID not match";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
                break;
 
                case "NO_MNG_ACC_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
                break;
 
                case "NO_ENABLE_MNG_USR_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Enable Manage User Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:EnableManageUserConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:EnableManageUserConsentRequired";
                break;
 
                case "NO_MNG_USR_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Manage User Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
                break;
 
                case "ACCT_INACTIVE":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
                                errorReason = "The identified account is not active.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;
 
     case "SPL_CS_ALLOWED_ACCT":
                     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
                                errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
                                errorReason = "The request is unauthorized.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;
 
     case "SPL_CS_ALLOWED_USER":
                     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
                                errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToDeleteSuspendedUsers";
                                errorReason = "The request is unauthorized.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToDeleteSuspendedUsers";
     break;
 
    case "REQUESTEE_INACTIVE":
                     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
                                errorReason = "The user has been removed.";
                                errorID     = "urn:dece:errorid:org:dece:AccountUserStatusDeleted";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserStatusDeleted";
                break;
      
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
 
assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;
 
// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;
 
//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
                //assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
                assert context.expand( '${#TestCase#httpContentLength}').toInteger()== 0;
}
 
//Location Header
if (httpLocationHeader) {
                assert context.expand( '${#TestCase#httpLocation}') != null;
 
                def a = context.expand( '${#TestCase#httpLocation}');
                def b = a.toURL();
                def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}
 
                assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
                
                int lastColon = urlStr.lastIndexOf(':');
                int lastSlash = urlStr.lastIndexOf('/');
                accountid     = urlStr.substring(lastColon + 1);
                
                tC.setPropertyValue("ACCID",accountid);
                
} else {
                assert context.expand( '${#TestCase#httpLocation}') == "";
}
 

//
 
//XML body should be null test
if (XMLbodynull) {
 
                assert XMLbody == "";
}
 
if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
                
                def myXML = new XmlSlurper().parseText(XMLbody);
  
                if (errorRespType != "SUCCESS" ) {
                                // Verify response sizes...
                                assert myXML.Error.size() == 1;
                                assert myXML.Error.Reason.size() == 1;
                                assert myXML.Error.OriginalRequest.size() == 1;
                                assert myXML.Error.ErrorLink.size() == 1;
                                
                                // ErrorCode
                                this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
                                assert myXML.Error.@ErrorID.toString() == errorID;
                
                                // ErrorReason
                                this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
                                assert myXML.Error.Reason.toString() == errorReason;
 
                                // ErrorLink
                                this.log.info "ErrorLink Received [" + myXML.Error.ErrorLink.toString() + "] Exp[$errorLink]";
                                assert myXML.Error.ErrorLink.toString() == errorLink;
                } 
  else
  {
   //Data Types
   // RequestorType: Self, CLG, CS, Other
   // RequestorClass: BAU,SAU,FAU
   //Requestee: CHILD, YOUTH, ADULT
 
   RequestorType = context.expand( '${#TestCase#RequestorType}');
   RequestorClass = context.expand( '${#TestCase#RequestorClass}');
   Requestee = context.expand( '${#TestCase#Requestee}');
 
    // Following Fields returned for Everyone
    
         assert myXML.@UserClass.size() == 1;
         assert myXML.@UserClass.toString().matches("urn:dece:role:user:class:[a-z]*");
         
         assert myXML.Credentials.size() == 1;
         assert myXML.Credentials.Username.size() == 1;
         assert myXML.Credentials.Password.size() == 0;
 
         assert myXML.Name.size() == 1;
         assert myXML.Name.GivenName.size() == 1;
         assert myXML.Name.SurName.size() == 1;
             
         assert myXML.ContactInfo.size() == 1;
       //  assert myXML.ContactInfo.Address.size() == 1;
      //   assert myXML.ContactInfo.Address.PostalAddress.size() == 1;
       //  assert myXML.ContactInfo.Address.PostalCode.size() == 1;
       //  assert myXML.ContactInfo.Address.Locality.size() == 1;
     //    assert myXML.ContactInfo.Address.StateOrProvince.size() == 1;
     //    assert myXML.ContactInfo.Address.Country.size() == 1;
      //   assert myXML.ContactInfo.TelephoneNumber.size() == 1;
      //   assert myXML.ContactInfo.TelephoneNumber.Value.size() == 1;
       //  assert myXML.ContactInfo.MobileTelephoneNumber.size() == 1;
       //  assert myXML.ContactInfo.MobileTelephoneNumber.Value.size() == 1;
     
         assert myXML.Languages.size() == 1;
         assert myXML.Languages.Language.size() > 0;
     
         assert myXML.ResourceStatus.size() == 1;
         assert myXML.ResourceStatus.Current.size() == 1;
 
         if(RequestorType == "CS")
         {
           assert myXML.ResourceStatus.History.size() > 0;   
         } 
         else
         {
           assert myXML.ResourceStatus.History.size() == 0;                
         }
 
   /******************************************************************************************************************/
           
   //Filtering fields based on PI and Access levels
 
   if(Requestee == "CHILD")
    {
 
                  this.log.info "Getting CHILD details";
                  
                 if((RequestorType == "CLG") || (RequestorType == "Self"))
                  {
                   /****************DOB, Security Token and Email Shown only to Self,CLG and CS**********/
        assert myXML.DateOfBirth.size() == 1;     
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0;
        
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;     
                 }
                 else
                  {
         /****************DOB, Security Token and Email not shown to CS and others**********/
         assert myXML.DateOfBirth.size() == 0;     
       //  assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() == 0;
         //assert myXML.LegalGuardian.size() == 1; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 0;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 0;
                   
 
         /**************Verifying Masking of CHILD PI details *******************/
          
         usernamestring = myXML.Credentials.Username.toString();
         givennamestring = myXML.Name.GivenName.toString();
         surnamestring = myXML.Name.SurName.toString();
                
         //*************Verifying Masking of CHILD UserName details ******************
   
         firstmask = usernamestring.indexOf('â');
         lastmask = usernamestring.lastIndexOf('¢');
 
         usernamestring = usernamestring.substring(firstmask,lastmask+1);
 
         assert usernamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
 
       //*************Verifying Masking of CHILD GivenName details ******************
          
        firstmask = givennamestring.indexOf('â');
        lastmask = givennamestring.lastIndexOf('¢');
 
         givennamestring = givennamestring.substring(firstmask,lastmask+1);
 
         assert givennamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
 
         //*************Verifying Masking of CHILD SurName details ******************
          
        firstmask = surnamestring.indexOf('â');
        lastmask = surnamestring.lastIndexOf('¢');
 
         surnamestring = surnamestring.substring(firstmask,lastmask+1);
 
         assert surnamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";         
    }
                 if(RequestorType == "CS")
          {
             this.log.info "Getting CHILD LG details for CS";
             
             assert myXML.LegalGuardian.size() > 0; 
 
              if(myXML.LegalGuardian.size() == 1)        
             {
                 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");  
             }
             else
             if(myXML.LegalGuardian.size() == 2)         
             {
                if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                                assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else
               if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
                {
                  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";    
               } 
            }         
          else if(myXML.LegalGuardian.size() != 0)                    
                {
                   this.log.info "Getting CHILD Active CLG details for NonCS";
                 
                   assert myXML.LegalGuardian.size() == 1;   
                   assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";        
               }
           else
               {
                 this.log.info "Getting CHILD Pending CLG details for NonCS";
                 assert myXML.LegalGuardian.size() == 0;  
              }
          }
    }  
   else if((RequestorClass == "FAU") || (RequestorClass == "SAU") || (RequestorType == "Self") || (RequestorType == "CS"))
    {
                                  
                    assert myXML.DateOfBirth.size() == 1; 
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;
         
          if(Requestee == "YOUTH")                
          {
            this.log.info "Getting YOUTH details";
            assert myXML.LegalGuardian.size() == 0; 
/*
             if(RequestorType == "CS")
            {
              assert myXML.LegalGuardian.size() > 0; 
 
              if(myXML.LegalGuardian.size() == 1)        
             {
                 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");  
             }
             else if(myXML.LegalGuardian.size() == 2)                
             {
                 if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                                assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
                {
                  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";    
               } 
            }
            else if(myXML.LegalGuardian.size() != 0)                  
            {
                 assert myXML.LegalGuardian.size() == 1;   
                 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";          
            }
           else
            {
                 assert myXML.LegalGuardian.size() == 0;  
            }                  
          }
*/          
       }  
     else
        {
           this.log.info "Getting ADULT details";          
           //assert myxml.LegalGuardian.size() == 0;                
                                assert myXML.LegalGuardian.size() == 0;              
        }
    }  
     else 
    {   
                 //   this.log.info "BAU geting other's details";
                    
                    assert myXML.DateOfBirth.size() == 1; 
        // assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() >> 0; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1; 
         
         if(Requestee == "YOUTH") 
          {
            if(myXML.LegalGuardian.size() != 0)           
            {
                 assert myXML.LegalGuardian.size() == 1;   
                 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";          
            }
          else
            {
                 assert myXML.LegalGuardian.size() == 0;  
            }  
          }
          else
          {
            assert myXML.LegalGuardian.size() == 0; 
          }                    
    }       
    
  }            // end if for SUCCESS response
} // end if for XML Body Validations
</script></con:config></con:testStep><con:properties><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>tName</con:name><con:value>1.31. CLG Change Completed [The legal guardianship setting for an underage UltraViolet member has been changed]</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Notifications_Test Cases</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>dececs</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>DF8240BDE2C9DC9EE0401F0A05997B85</con:value></con:property><con:property><con:name>SecondUserName</con:name><con:value>username_20130122_043244</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVfZkqrKEn33KwzPo2EziANGd0cUgoqKIzi93MCiGJRJikm//hbauu3e3fvuc1/ESrIyVw5krXrFuueyHYAximIn8Muy+Fb5D982aNjQ27V9q8nUOJ5u1PZGE9ZgnWk1aYZrtPZ8pSxjnCDZx7Hux28VlmbqNbpZY3iVYTsc36HZlwbd2lXKKxRhYpqovNCVcu65Pu5c3b5VksjvBDp2cMfXPYQ7MewsgTLuEM2OfsdUeX+9obw6jN7tOA47FAVfDASR68IXGHjUK/VJ59XAnaVj+XqcROjDp4HfKh97syx7yeovQWRRLE3TFM1TRMfAjvVP5b1034wM2TeD27qr+4HvQN11LnoBSkGxHRhl4FpB5MS294NphmLownQN5SR9DOf/U6F+Obii+0tLn0BGWK9hW2fuxhbIRBHyISprC/mt8s/fVfC2V410H5tB5OEv638HCfkpcoMQGTV8j+yO7u8tfpOu91cEO7IP3QQ7KZoUbRLqEOHyLEKmk48dTJrPwOVr+cs5vncYgv+mJK/UM04Cm/omM6JjIRz/P/V6rtXNykp3E/TuyUIGD9To4Kz6m0G+mqqebMHQTBfa2xXCs/IN1KPUH+uvjfroq49Nvom2vBb6zqSrVJdSHc0uDNI0rX5m3KQXKs4md7e0H3PrFhsf061Nj05NdcP1VtrQmgB5jf3LxN/3N6JrlpSumc+r9TNX5UO6MWvSeDWecOP2KbCs4WXsJXbT32/8wclh2E2uL0/Was7tq+yskWvnoRtjmZ1Jl53tO5RZUvdOmrZlLrT9qDU1jzjevv2K6TmGIq4ROl+DLP5vGjQv6rH+WHSLSWGSzzNG74osd6titwtQ1wKZLABLFsYXMBGs48k+On0+owUw13pABGdlATLR2oqr+XwkZcZq5e5Wcq8nKAsuG4CtWCIvRClfibvNkNbXu3DL9ujdUhCMzSLY14ehMThmAxtOFFXJJqp8Vg5SPlElen2VWTlZX5SDwkxVrV5aHwReWUiZmF09ilJmT3brRbjV+AxepLkCuD5gNKlrKwPVWzGwvrDhQRor4HiVC7bSXa2UXFLBrCRYkxWJTe32diH0jHDvufaT8QExrhr91Xnfd5PdRTooXanfXZ76S3lfF+fSECy22n69OurrXlqCgwnY3z06DUffBJm1a2fifDscBTvZTuEEzCVBmAOSLhoocn8Igr4AFA44+aV7EJpB1+hl1JDFpSrv9pubs3PaYL1PuzrTbjPb8bo5OzVFya/uRsn+YCv2pjetjpZGqvExf9nitJo2dYeBeWjON9IgHuXmYL4s7WdivoGDqmENKffC9yKlNQTR5Wy7irWI180pPu8d01wLmynntkxXqS9C0zXDM66qwfwY0U0B1Vlqe05HcQlYigBA/6AdhLkitIukGnI23yqCDnpSnIDLgY1H7Oo0HKQu3NZBkI/W08PxozCGmEkClc0l0lZSqS0CoyjCYKlJvQPQBMuKBEvqCXMogvlWHmVbki9tQJS/5rF3zaMlCUCq70CTH5TqGs3H03jJceDsC5rf423llK+Npke3TkgaLychlyl4Yvq7dXBUPCfSomSpjUaTcb5Xk/7xQGaVSS9HaX1XktJjCJzJSLWPYiDqs3C7jcOqDyMYy6GnyPllusOHtrP36GG1wQgzWoQtVvP2mdbXpd0ospbMaLDwZ/UWX8KJeR541UM7W1fVZTNsGV3fFM9nahet6AAEPX7ROBk5yx5tLRs3M3MIjnudneQuL5x5abRTYbaYj9ZLr9ooNdLx2KMvKsVNwmm27GecNCfzxBDUgYrDyNkmbSuPpr7BbvW4me7oVdMJ3SPPJkeVC+sryyPFmqVG2FJmpTm3gTvPaoVwSC2oFEgtcyz3z/uLfgm9KbwN0K/T4SG8zQ/qebJ8Gj130rEk3YpgfF8WB5AslnvkVNDjPxOYQuIYNfOq2gkLFoRj5MeV92JXQV46CaE4jtEhR8ZtLfbaLEcLosSKTbHLSxLN0UyPBnSD51tCu3FnOTcUXyB2A990Cl8Fj7udUn8GCL0ORr6BoloaJNBGuPIHi0W+yrK/IMdv4GOkBoQnggYjtQHgu5LQYKVGlxPaXIsWabrBsW0SS6U8CeKpP42AGaPoM0dsfOKICwSd0EEFkSxOU0yOUxyTlJz0NIld5iXVX3yUEKoZFWyvw3LtBoUdL3RRAZjyAiNx0Utoh9cEUfj2ZGs6xFdpkV2Irwf9jxF+fXdPBtExnEIBF+EIiBQU/cZ3253GPZafY24/x3w3DxLDKc5zktk4cuANyedXvxqm6JRHt1x/IL7Dfmh/FXyyTH0N6uHMSB34aPvHjYAQSkI53u9VOekvp5ckTZNrHVoFnYqIeYqh6Ca1RDAhnOisBkfkUw8T1F/R0QfqL54f8s/4ktj2lzH5pD3SNeXr8i/uIkuEi7uITLo+/9uLzieXJG8xyuPvZF2XXFkKxH+81cAOLPSIeEYeWRAZv8r1ja0nPyTOYoY5vlWsCvJ5/qExYEDMOmSOBdGz8e8MfOf8s/CR5AeWmHTTPonRz2/KxYB6q+gQBokfy2LlKngemlec8TlEnV9Kv5m50r8PPp/jH/n8Rhkvyfjy9MpD1/nfyjXn2i4QkV3YuWJ5q+Tkakqc+9bTkP4A+P2c7vJ/mtOfI3n/Tfy75CmnX7+H9/8C</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>DF82425275355BDBE0401F0A079960F2</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADF8240BDE2C9DC9EE0401F0A05997B85</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\User_Notifications\dececs_concat.pem</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2002-06-22</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3ADF82425275355BDBE0401F0A079960F2</con:value></con:property><con:property><con:name>UserName</con:name><con:value>standardusername_20130619_062045</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>DF8240BDE2D6DC9EE0401F0A05997B85</con:value></con:property><con:property><con:name>FULL_NODE_USER_ID</con:name><con:value>DF82425275645BDBE0401F0A079960F2</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5ff78eb3-d79f-4f4a-b9a8-5ec1c84f61c0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3d78db1c-105b-43a0-b406-6bb0f690c833</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662fb201-c4e7-401c-b10a-548ea13f5020</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateTOU_API" searchProperties="true" id="16c677b6-f520-424c-859c-233d39f17e8a"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="dd1e09d0-905e-41e0-ad30-be072bd52183"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

tC.setPropertyValue("expectErrType","SUCCESS");


</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="fba30604-b900-430e-8cc5-ae11940a4bd3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("Policy_Create_TOU");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="groovy" name="Set TOU Policy Resource" id="bdfd55d0-5f16-4631-ae20-168e1d30824c"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def policy_TOU = context.expand( '${#Project#Policy_TOU}' )


String country = context.expand( '${#Project#Country}' );
def tOUUrl = context.expand( '${#Project#TOUUrl}' )

def touForCountry = "TOU_"+country
def consent_Version =  tP.getPropertyValue(touForCountry);

tP.setPropertyValue("policy_TOU",'https://'+ tOUUrl + '/Consent/Text/' + country + '/urn:dece:type:policy:TermsOfUse:' + consent_Version + '/html');

log.info "Policy TOU from Project level property " + tP.getPropertyValue("policy_TOU");
</script></con:config></con:testStep><con:testStep type="restrequest" name="Policy_Create_TOU" id="4f2814df-afc3-424c-b63e-1b0c364624f2"><con:settings/><con:config service="Policy_Create" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="Policy_Create_User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Policy_Create_TOU" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="RET_concat.pem" id="8e1fee51-73ec-4306-923c-113c6fe4c4f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd"  xmlns:dece="${#Project#coordinatorSchema}"  xmlns:ds="http://www.w3.org/2000/09/xmldsig#"  xmlns:md="http://www.movielabs.com/md"  xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <dece:Policy>
    <dece:PolicyClass>urn:dece:type:policy:TermsOfUse</dece:PolicyClass>
    <dece:Resource>${#Project#Policy_TOU}</dece:Resource>
    <dece:RequestingEntity>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_REQ_ENTITY}</dece:RequestingEntity>
    <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
    <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_CREATED_BY}">
        <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
    </dece:ResourceStatus>
  </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="247b2ac7-9692-476c-945c-96efbd809562">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('Policy_Create_TOU');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                             log.info "V2: "+tP.getPropertyValue("V2");
			if (tP.getPropertyValue("V2")=="06" || tP.getPropertyValue("V2")=="07"){
			contentLocation = URLDecoder.decode(value[0], "UTF-8");
			}else{
				contentLocation = value[0];
			}
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="5a271d68-a905-4eab-81a5-b7e970e7f6a5">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D12F2DD48A10D559E0401F0A059918B0/User/urn:dece:userid:org:dece:D12F2DD48A1ED559E0401F0A059918B0/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/2015/02/Account/urn:dece:accountid:org:dece:0E55DF4069BB33EDE05307991F0A2BFA/User/urn:dece:userid:org:dece:0E55DA062BB0684DE05305991F0AFBF3/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C8A32F78EE614FE05305991F0AED18</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:0E55DF4069BB33EDE05307991F0A2BFA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4E99389111664AEE0401F0A07990AF6</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E4E99389111664AEE0401F0A07990AF6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:0E55DA062BB0684DE05305991F0AFBF3</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VyvN4y1g2S4IrUMUamIRAgCQTXlJCbkBgyyDJLPn6kQw4QJbLvU+ubre6Ty866huBA99xy0IAlzRkqU3gM+HG2qIRceaGWFDhMhyAcCVx++X2veukkYsPR4xUq1Y03rJ5yOFsxjNtB8DMegVkYs9DpoOzoxxGXuaKjJWpEBG0mJCYyaLhIDtnIsdEuYGN3EzetfPpguMMjdQzcKF8K5M0MvagNqJoTKVcuJa1Xq/T60w65BPLQci2/rTv+2QKATZKN7uM4kC8tLcnaQ8I+D5JkzCwbqwTmxtPuH06YVhGHPaxvO9iIQsVLGXjCTr5ZSRnwWuxcRiLVcxCRgn26TvW9WmDnIZequxPQk7lNPg2CRtpxyZsiEnsLPtlWKfQLnR0gpALbIoptve+ejAGDoxA6qnXKhq/LutafHTAMRPjkAfiVPxveICtwA8X4JnikNYe2uUOv6hU6QaI22LEjwRdwYMe1gUmIPbdBHK5q1SXw5hu7qlQA7oRGp11DO9M3FWjRicg5P9p0FFzdk6esR9BqbO2l9Hdw2xYbTyPHudwu314eOF1Vuk8FWMAx8axImntTjwbymSIdifqQ9yi2+GrP1jVB0GuQWeV+/bcyt6Nek/D7vXL5GX69NxceAN1253fzUqzwkZOc+l1/ajdmqBOlw6pXFrTBt8UptX1uHC13HpkPX3507l9JnO2yv6zvp3Nx48Qic6k+dITtg3r1/IcrtfNW+hF7caiW7/bOuW5xX8/vrwOutxrRsP646ywsjG3q6wwsu+ecsNyMUnnCP+p7nDn+9FoBkQeRD0GrVqqobqE5c9kpjXUM8exqbvQ5CMkMGmU9CnNHW6k6I56rurhTkb1XK5WRnmnUkH562ytjnIZlCsU7AYqNyqNzIFkdijOIFZDNqY6lqbc3dj8DJAErgDmATdXYaSYThg/eKxhiVMt1lOXIGQCBqGiZ3tG0WZB3t9X48IEB3kYX82RPZ1hI/UQyg7r8PJYAj/l5MwJJ/eA0AUFTdx6roUabCFVLZZ4FUnfTq9wmql+S8w1y7pO9jpnCRosfNBIrSD0Ih/Si+kirowldl/HxETE2l59EN+2b/M6/3cogbLxqDYQOpcKqDbCF48LOiTyfcL544QP7suRR/XFUvWUnJIdktNfH2Oi5yOZEZXRW7X/Zh9wJ+YXH/980voBlHVejySQt6JHYQ9Pt3oEFG2UDt1c4vQyHa1WUdy/K02PXLm3dIUs5Fh9IJEitu0gnAOzEi/WRa9IAvwseKI/hRjJKetLLCFQA5eKxQvWhj4IvTa01E3ZXLqTnIRUpZOwkV/pqr5aeTTiH7ci4hJtp9Rd9VmH3Pvo2Be+juKoPNXWICmbaEm/INtv5oKEyi1V3BfyY+dfOfgq+KkyKXKCRaqBGkUSvv+T0qRWNDAhYcRkq2bEimOijXHK7QLcD6NPbmIuT5Y7+u/bnUnjESCgVkJBY//6jXb1FWCTI7LeB/3E140syhcqlUymvuPrqx1fO5VGOSnKCbrSJ/VnzVGdzme89Bc=</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Update_Access_NonCS</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00005_UserUpdate_FUNC_NonCS_Full_Update_UserName_Others</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID_REQ_ENTITY</con:name><con:value>0E55DA062BB0684DE05305991F0AFBF3</con:value></con:property><con:property><con:name>NODE_USER_ID_CREATED_BY</con:name><con:value>0E55DA062BB0684DE05305991F0AFBF3</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bd6efb96-bbf3-4226-9917-48245caf20c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateCLGAttestation" searchProperties="true" id="69fd4170-842f-452d-b5ba-2a3dcb222763"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="fb8ba6e2-1dcb-4747-ac0a-00a7949754a6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

tC.setPropertyValue("expectErrType","SUCCESS");

if( tP.getPropertyValue("URLEncode") == "NO")
{
	tC.setPropertyValue("Policy_Class","urn:dece:type:policy:CLGAttestation");
}
else
{
	tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:CLGAttestation", "UTF-8"));
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="6f62f720-8990-433e-b87f-e5bfb4b7fa27" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

//tC.setPropertyValue("Policy_Class", "urn:dece:type:policy:CLGAttestation");


</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="7c79a678-7925-4976-94ee-c3154ca35f04"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreate_CLGAttestation" id="93760dd9-c5a0-42fc-8b45-0decab53a060"><con:settings/><con:config service="Policy_Create" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="Policy_Create_User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreate_CLGAttestation" mediaType="application/xml" postQueryString="false" accept="" id="eca4f67f-6609-4b59-aa1b-9ba18843b11d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd"  xmlns:dece="${#Project#coordinatorSchema}"  xmlns:ds="http://www.w3.org/2000/09/xmldsig#"  xmlns:md="http://www.movielabs.com/md"  xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <dece:Policy>
    <dece:PolicyClass>urn:dece:type:policy:CLGAttestation</dece:PolicyClass>
    <dece:Resource>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_CHILD}</dece:Resource>
    <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
    <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}">
        <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
    </dece:ResourceStatus>
  </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="5af21160-0c58-4478-9f89-b7449b524f96">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreate_CLGAttestation');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                             log.info "V2: "+tP.getPropertyValue("V2");
			if (tP.getPropertyValue("V2")=="06" || tP.getPropertyValue("V2")=="07"){
			contentLocation = URLDecoder.decode(value[0], "UTF-8");
			}else{
				contentLocation = value[0];
			}
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="e13fb319-3b83-4e5e-a3b5-bb484920401f">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0Tp41HIhWuiggQN7c7ebWmBXl8q40zAkDhp7ADt1x87NBQo9LCPhIQ8Gc+smVle9hlDUWg5bcYg5SSmiuc21Vfw7UbNL1vaCFVqWsUaVTUEflkLqvV6o1qxjcAIVMVjLAOPMo4ob6qWYVY0o6GZ9tCsOZWqYzRKlm2+qMoDpEyEFi4lQ1WWUUiZk6dtqllKnRgxwhyKImAOx86gfX3lCE8HFZjU1tkKZZ4wbU04TxxdxyUfMIQhLuE40s/0LZ8znzkDMqaIZyl85vRZU/3cu1gsSotyKU7HumUYhm7YuvDxGRmfqq2TYjP4Hg3i1foc0ZgSjELygSSoa+CT2Ffa4ThOCZ9EB0KbumnI0BossYbNCj1V9a8EObojI22BTBnS2ASZRbA+BJACxaDc972menrcBFd7hymiLIjTiO2s/w4S0DmEcQK+xorKCnTHR9zTrtYZYMejOMwYmcONpEmCMDDlNoWALK8IE+TzmZKPX1ky8SMFywD/zVjO9E2sArq+pzsuGQPj/2dmm/NaRXlAYQatK17p272nyPRvn4a1ZPDHvez0ru6BmYtmDmHTeQVqPe7P9S5Z19z63JT2bOvyZVJbPjXu2/VL9N4NKqPRP5n32zVHxnl5jIDYZNq5cKk7cwePzyRY1ILquDPMppw89kZvnfu04T3+ii+nJ/NOcFvz7sLO9LI+Je3ZR9u6eZ558FjH3e6zNa2Nfl9+oO7dSwPiXhBEv4Z/bm4/IpO93dlB78U36lnVenzou+PO/MTS/evFR+Q2xqOZlczKYbfS/Kpps4ZtYyEJg2w0BcyLpaSH5yoXYl6I/ywv0kJ8LchdnURqFONAudqSu6S0OJkQIOI7YpirtWFcdLvdWvviwuyWDcPtGtWyUbdt88Jom3atWmjQCsUOxPOYBkTmkiq74s/PAHHkMKA+pNo8zvAEmPpDRBdxpHi0Lw5HTBkMY6HiiTG3syksISlbpl1ZBLNqkqEkfFeVm5j3aC9tBxzSbem2t6S7D5gkBKS+S4IzwXDGRS/e0DzjoVmaoxKFTNwAqRRhx6o0qjojURKCRKpHsZ+FUEomSd4Zna3+LQ1hllv73WF+8A7WtfutaIHw8Yl0YLKWDogxwrc7qOJUi0IOFmxZmwUX4duZT+T5Ev3kKcErJNufvmgi+bHmiKjo9Xzwaha41+5Hb/++U/8BlL7bj3Uif0420haXqbgfhHq0imm+odJbKZvPs3x+damMqQivm7pR1weAMyFv78N4BlRfh9CPul3WqHcyr+3b+DI+oQOOOESCbUq+POJpMQAmnxaeOCbLY98tWylF3zgs+T7beSheIBLxj48U7GDpJ8y34m8Rp/7XuPbE2sgj6hTvCU7oWK7kPfJ+gBQ4FmGJEL443Qy+L8C+5NvGdZPXWLhg0yjjcPiLIhWtqSKM44xyz1Vzw6bK5jj5ewLOl9O3MLmSf17NS3bwan66vhoIvYuQuvYl/+2skZwuGFT5AsixNNWleGmK5HS8oeqfAL8Le9uuNexzQbb6prDXqvbXYd6qpPXN/N2y0dPd89D6Fw==</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00066_Account and User Create with US 107_UserDelete Basic Child user111_SUCCEESS_P0</con:value></con:property><con:property><con:name>sName</con:name><con:value>03.UserDelete_Backward_Compatability</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E48705C62976FCB4E0401F0A079971D7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D12F2DD48A10D559E0401F0A059918B0/User/urn:dece:userid:org:dece:D12F2DD48A1ED559E0401F0A059918B0/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 400 Bad Request</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">812</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn:dece:type:policy:CLGAttestation</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs//RET_concat.pem</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FEEEA968C52017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA9689C2017E05307991F0A6591</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E486FC50804D1AE5E0401F0A05991EF2</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E2E22E83505CC024E0401F0A0599357E</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>00FEEE6AFF1E300DE05307991F0A1965</con:value></con:property><con:property><con:name>CHILD_NODE_USER_ID</con:name><con:value>E2E25B1DF5BEDD19E0401F0A07991448</con:value></con:property><con:property><con:name>NODE_USER_ID_CHILD</con:name><con:value>00FEEEA968C52017E05307991F0A6591</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bd6efb96-bbf3-4226-9917-48245caf20c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateMAC" searchProperties="true" id="7d85ebf5-2378-47de-9c73-bcc3be05c78c" disabled="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="d4371971-21ff-4a90-a0e0-37d68d88fa6b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("ENCODED_NODE_USER_ID",null);
tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("SAML",null);
tC.setPropertyValue("expectErrType",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="1de7ab16-bf7b-4512-ae11-1599f01163bd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID",callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID",callTC.getPropertyValue("NODE_USER_ID"));
if (tP.getPropertyValue("V2")=="06" || tP.getPropertyValue("V2")=="07"){
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			}else{
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			}
tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));
tC.setPropertyValue("expectErrType",callTC.getPropertyValue("PolicyCreateResponseType"));
tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:ManageAccountConsent", "UTF-8"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="4285855e-3060-462c-b83f-1d458ec03956"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreateSinglePolicyPost_MAC");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="bf51df31-427c-436d-aab8-95c2f091660b">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreateSinglePolicyPost_MAC');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;
/*

def expXML = tStep.httpRequest.response.getResponseContent();
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/
tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                               log.info "V2: "+tP.getPropertyValue("V2");
			if (tP.getPropertyValue("V2")=="06" || tP.getPropertyValue("V2")=="07"){
			contentLocation = URLDecoder.decode(value[0], "UTF-8");
			}else{
				contentLocation = value[0];
			}
                                                
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="9df4ad07-5eae-44d6-bbbf-fa0607afb8ef">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVdZk6LKEn73VxjOo2Gzucd0RxSLNCoqiOvLCSxKQFmUAkF//S1wtLWne86c+9BhV5KZ9WXmV1lZP7Hpe2wXYIyi2A2DsiK+Vv5pNqFFWyxd27Ibq1Y30bbWaba4GsNxrdamSbe2zU2lrGCcICXAsRnErxWWZrga3ajRHYOud+tct954aTCddaU8RxEmronKC10pZ74X4G6x7WsliYJuaGIXdwPTR7gbw+4UqMMu0eyaN0yVt59XlMWG0ZsTx4cuRcEXC0HkefAFhj71k3rS+Wnh7tS1AzNOIvRrTwu/Vn7Zpmn6knIvYWRTLE3TFN2hiI6FXftH5a10M0aWEmzD61owgzBwoem5FzMHpaLYCa0y8OwwcmPH/8Y1QzF07rqGMliDTD34UaE+NijQ/aWnJ5ARNmvYMZmbMx1tUYQCiMozXXmt/Pi7Cl5tjcgM8DaMfPxp/d8goeCEvPCArBq+RXZD9/cev0jX208Eu0oAvQS7JzTKaXIwIcLlSYS2bjZ0MSGfhctF+csZvjEMwf9Skp/UI04Cm/oiM6JrIxz/P/V6rNXVy9z0EvQmWzvFn2yGBhOttYx6X66rBu11BCiFrwWER+UrqHupf60/E/XOq19G+xnsUdVLMuZ6ekpN14O9M9FAf9hsj0M8mZ4YD67aR6AKy4HV8O3jfBcyozZoR3rUV7lRc6gtk1Bp6aw98UtH2bEW+hG5lqDu7SMftweXfmZG65geuoiTW1bnwDQ3K5n32WS5wLjVwkrHXzPNkQa5o4J3avss6Lu2s4alZDXEVHVYx02r2qr3L4wRvn7E9BhDHtcAnYsg8/+XDbojmrF5Xwh5p9iS4xmjN1VRxOQiCOA8tUGq8MAmfzsw4u390dm7cieleaBpPSAKvLeThirYy4CZSbyjCvO5mgkX0Oft0ZwYGiXgrXlVl1IxXYlzTXuXUsew5Pl5I3vJ+iKNVIALY8FRJV2ai7ohqSoIr7JMFTdytlOnaqpoK7FEHIhSdrhYcidGcuZCVmmo0wa7mjaS9XJO5L3z0B+dNobkqYIqC9OjPFU2nKhJfaCvFpDtJcT2MvQPYWk14x+M+ge0A6iX0mRPcFGNfaoaM3Yk6mYhM55lqiL3VQ2nglZEJZektD+fXT5yIfCqYPlSJhlgcs0FNITeiF4v+9hcNAJVB6loF8YDKbXGNyCqRqcl4ZqroZTqkj4b9VRdSSVQyEQp9fCGHTkb2TlBTsv6Btg9FkbQpEUvIN8D/QTPjWPJlHtg488ZyOkOdBuuuQxTe91ORW3VH4RrhbgZAU3ieQ0QQDTIQyP558GQnzfGB7fDumi47YU+cqKSyoSD/emS0W2XG9uT0aIhbvetiexOONNyKMWD7I7bA0VB1oBxNNPSV5QuBu6lOR7MlsiNVpd41NCYpttulPRFMluKodey3per2aCaraBmjCfT2WJyybLRcde+ePH7mH+Ppn1VtMcjhCYYVina7PFGW2wIq/cd4dNWp1GjBGyVB0De2bbkEgLz77srCd91VSLkJcczlYWFIE+BLFclhRc1bdtzmAmU58mMGamKZHkkTefVUvdKa4EXSaVoc7E+rNgevTaAVTjT6lLP1maNan+J1trIM+YxSA/zbcAwtHzQ3rdqakM1Z4ClpFOenCK+lChgZo4PfTobzJs0c9Qsrz/tgBmXTdl9Nnbs9Xlvr/ekKKuHo7MygDc3HjimEIotSpoh6SpoX89bpiozTvegnx02PsxEg9SsMA4NXtJ7Gj3LRBEMrjJsADbDq4u0UwWpsC+BTDUJLU6bpYNXwcgdG1JCSJs80GW3Yel/5VhOsdIzx44C0MBnjklXjklge6wqbZHBjaZwwIvU5mXpqLXmw37nQGvL4b7EV3uUHbtefRy0U2NQXTDntOXstMWio4iOUA22K4fbxDxtXqCG+vuW7Op7MWjWvbM6VLXGzKW8M71DxxQPSyOFCSQuvvSoTpRUeX/t+pcLV2dn/mSanJSZOcDM2dkcF510N3lvUlQknxuX1vqk9ZYhXF3vkc9N8i68tlHqscE+deDb7DVNNjsE49syv4cVsdwjl6MZ/3mOyyWuVdsWqt1DPgziGAVx5S23yme4bkImPdfqkpvzuhaFOtvm221W4Jge3xYkuk4zPRrQrU6nKTa427B3RfEJohAGWzffKx9nr5f1nwFCv4tRYKGodgoT6CBc+YPHPF9lJdDJFBIGGJErq/JPi+FEscHyHCtxLbrdoJudVhO06Z5IxHQTVMqjMB4H4whsYxQ9j8qtp1FZR9A9uCifp/OhApOpAsckJUfzlMQe83IyXwKUkIk7yofeLltvNyjs+gcP5YApP7QSD70cnEORIApff9maCXEhbTVpuph2vo3v87dbKoiO5eYKOA+GR6Sc6Iuhn7tF8m3EDP0Y8c09SCw3H2pIXuPIhVckz58+6JLz5M6VPKQb5rvqZ8GTW+pzRPedrJML74y/v4nISE2GrrdbQY7my/ElOZ2SogStfKCMiHuKoegmNUUwIVPh2Qj3KKDuLqi/GsjvqD/tfJc/40tiJ5jG5DT7hDDlYvkXr7EpwvlrTCGEz/72qfe0JclbjLL4K5ngkUdbjviP7zrYhbkeEU/ITxpG1ke5vvD1sA+JM29fbmDnq3z8Pn/DChgSty5pYWH06PwrB19t/iy8J/mOJSZs2iQx+v5LOe9NrxUTwjAJYkWsFILHflngjM8H1P1Q+s1NMQD/etFk+NsXzVIdTknn8s3KXdf9d+WaW9AFImKF3QLLayUjj3OyeWA/9OdfAL9u0Sz3pxb9HMnbb+LfJQ85/Xwe3v4H</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_11018 - STSCreate - retailer - unamepasswd - Different users on save account share same node accountID - P2</con:value></con:property><con:property><con:name>sName</con:name><con:value>1_STS Create Tokentype unamepasswd - Payload</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>DC428B882C31FB8CE0401F0A07996D53</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>DC428B882C23FB8CE0401F0A07996D53</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>7600</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 400 Bad Request</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>829</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:DC428B882C23FB8CE0401F0A07996D53/Policy/urn:dece:type:policy:ManageAccountConsent</con:value></con:property><con:property><con:name>ENNODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD3CD43AEEE91F252E0401F0A079913BF</con:value></con:property><con:property><con:name>ENNODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD3CD44C830AA5460E0401F0A079913BD</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AManageAccountConsent</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADC428B882C23FB8CE0401F0A07996D53</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\STSAPI_Projects\7600.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AccountMergeTestRequest" searchProperties="true" id="1ed1186f-c5dd-457e-8f01-8a0cc98d07bb"><con:settings/><con:testStep type="groovy" name="Feed Data for the AccountMergeTest API" id="e55544f2-194d-400f-9b20-0f2f08c38bf1"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import dbUtils.dbAccount;
import dbUtils.dbUser;
import com.eviware.soapui.support.types.StringToStringMap

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//Set the Node Details
testCase.setPropertyValue("nodeid",CallingTCase.getPropertyValue("nodeid"));


//Surviving and Retiring Account Details
testCase.setPropertyValue("SurvivingAccountID",CallingTCase.getPropertyValue("SurvivingAccountID"));
testCase.setPropertyValue("RetiredAccountID",CallingTCase.getPropertyValue("RetiredAccountID"));
if (testProject.getPropertyValue("V2")=="06")
{
	testCase.setPropertyValue("encodedSurvivingAccountID",URLEncoder.encode(CallingTCase.getPropertyValue("SurvivingAccountID"),"UTF-8"));
	testCase.setPropertyValue("encodedRetiredAccountID",URLEncoder.encode(CallingTCase.getPropertyValue("RetiredAccountID"),"UTF-8"));
}
else if (testProject.getPropertyValue("V2")=="02")
{
	testCase.setPropertyValue("encodedSurvivingAccountID",CallingTCase.getPropertyValue("SurvivingAccountID"));
	testCase.setPropertyValue("encodedRetiredAccountID",CallingTCase.getPropertyValue("RetiredAccountID"));
}

//User Details for Merging two Accounts
testCase.setPropertyValue("user1Status",CallingTCase.getPropertyValue("user1Status");
testCase.setPropertyValue("mergeUser1",CallingTCase.getPropertyValue("mergeUser1"));
testCase.setPropertyValue("user2Status",CallingTCase.getPropertyValue("user2Status");
testCase.setPropertyValue("mergeUser2",CallingTCase.getPropertyValue("mergeUser2"));
testCase.setPropertyValue("user3Status",CallingTCase.getPropertyValue("user3Status");
testCase.setPropertyValue("mergeUser3",CallingTCase.getPropertyValue("mergeUser3"));
testCase.setPropertyValue("user4Status",CallingTCase.getPropertyValue("user4Status");
testCase.setPropertyValue("mergeUser4",CallingTCase.getPropertyValue("mergeUser4"));
testCase.setPropertyValue("user5Status",CallingTCase.getPropertyValue("user5Status");
testCase.setPropertyValue("mergeUser5",CallingTCase.getPropertyValue("mergeUser5"));
testCase.setPropertyValue("user6Status",CallingTCase.getPropertyValue("user6Status");
testCase.setPropertyValue("mergeUser6",CallingTCase.getPropertyValue("mergeUser6"));

//Set the SAML Details of the Full Users to the AccountMergeTest API

def headers = new StringToStringMap()
headers.put("Authorization","SAML2 assertion="+ CallingTCase.getPropertyValue("survivingAccountUserAssertion"));
headers.put("Authorization","SAML2 assertion="+ CallingTCase.getPropertyValue("RetiredAccountUserAssertion"));

testRunner.testCase.getTestStepByName("AccountMergeTest_API").testRequest.setRequestHeaders(headers);

//Set the Expected Value
testCase.setPropertyValue("expectErrTypeAccountMergeTest",CallingTCase.getPropertyValue("expectErrTypeAccountMergeTest"));
</script></con:config></con:testStep><con:testStep type="groovy" name="pem set for AccountMergeTest_API" id="ff916405-df6f-46b9-a011-a6689d00989e">
        <con:settings/>
        <con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase    = testRunner.getTestCase();
def testSuite   = testCase.getTestSuite();
def testProject = testSuite.getProject();

String keyStorePath  = "";
String keyStoreAlias = "";
String nodeId = testCase.getPropertyValue("nodeid");

RestTestRequestStep testStep = testCase.getTestStepByName("AccountMergeTest_API");

//String keyStorePath = testCase.getPropertyValue("KeyStorePath");
//String keyStoreAlias = testCase.getPropertyValue("notValidExpiredNode");

switch (nodeId) {
	case "0799":
		keyStorePath = "C:\\DECE\\certs\\0799_concat.pem";
	break;
	case "0798":
		keyStorePath = "C:\\DECE\\certs\\0798_concat.pem";
	break;
	case "0701":
		keyStorePath = "C:\\DECE\\certs\\0701_concat.pem";
	break;
	case "0702":
		keyStorePath = "C:\\DECE\\certs\\0702_concat.pem";
	break;
	case "500500":
		keyStorePath = "C:\\DECE\\certs\\500500.pem";
	break;
	case "222312":
		keyStorePath = "C:\\DECE\\certs\\222312_concat.pem";
	break;
	case "222333":
		keyStorePath = "C:\\DECE\\certs\\222333_concat.pem";
	break;
	case "222332":
		keyStorePath = "C:\\DECE\\certs\\222332_concat.pem";
	break;
	case "222334":
		keyStorePath = "C:\\DECE\\certs\\222334_concat.pem";
	break;
	case "222335":
		keyStorePath = "C:\\DECE\\certs\\222335_concat.pem";
	break;
	case "222336":
		keyStorePath = "C:\\DECE\\certs\\222336_concat.pem";
	break;
	case "222337":
		keyStorePath = "C:\\DECE\\certs\\222337_concat.pem";
	break;
	case "222338":
		keyStorePath = "C:\\DECE\\certs\\222338_concat.pem";
	break;
	case "222339":
		keyStorePath = "C:\\DECE\\certs\\222339_concat.pem";
	break;
	case "222340":
		keyStorePath = "C:\\DECE\\certs\\222340_concat.pem";
	break;
	}
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);

soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config>
      </con:testStep><con:testStep type="restrequest" name="AccountMergeTest_API" id="ed28c5b3-0007-40cc-849a-38beaea556d6"><con:settings/><con:config service="AccountMergeTest" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{SurvivingAccountID}/Merge/Test/{RetiredAccountID}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AccountMergeTest_API" mediaType="application/xml" postQueryString="false" accept="" id="b45f0264-e296-4d05-94cc-4af2341d167a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="SurvivingAccountID" value="${#TestCase#SurvivingAccountID}"/>
  <con:entry key="RetiredAccountID" value="${#TestCase#RetiredAccountID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="26183098-d0ae-4f26-b4bb-e416676cf6a4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('AccountMergeTest_API');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="d8f0ba87-2757-4ec7-ac6d-427210632ea1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def url       = context.expand( '${#Project#Provision_HostName}' );
//def urnacct   = tP.getPropertyValue("urnaccount");
//def acct      = tC.getPropertyValue("nodeaccountid");
//def urnnode   = tP.getPropertyValue("urnNode");

//def sh            = tC.getPropertyValue("streamhandleFULL");
//def nodeid        = tC.getPropertyValue("nodeid");
//def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = context.expand( '${#TestCase#expectErrTypeAccountMergeTest}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The supplied country code is invalid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code cannot be null.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "API call not authorized";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:UserNotActive";
	errorReason = "User is not active";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

     case "RESOURCE_STATUS_NOT_ALLOWED":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:ResourceStatusElementNotAllowed";
		errorReason = "Resource Status Element Not Allowed";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceStatusElementNotAllowed";
	break;

	
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

	assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
	
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	accountid     = urlStr.substring(lastColon + 1);
	//streamidFULL = urlStr.substring(lastSlash + 1);

	//this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

	tC.setPropertyValue("ACCID",accountid);
	//tC.setPropertyValue("streamhandleFULL",streamidFULL);
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}




//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:properties><con:property><con:name>SurvivingAccountID</con:name><con:value/></con:property><con:property><con:name>RetiredAccountID</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyGet" searchProperties="true" id="23d09377-9e3c-47e0-92cd-8d7e2ed8d6fd"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="3f9a5121-1ba4-4ce7-9098-b2a7278fb180"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("ENCODED_NODE_USER_ID",null);
tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("SAML",null);
tC.setPropertyValue("expectErrType",null);
tC.setPropertyValue("policyCLASS",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="21cf2586-d1ed-4fdc-832a-472a816d6528"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("NODE_USER_ID",callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID",callTC.getPropertyValue("NODE_ACCOUNT_ID"));
if (tP.getPropertyValue("V2")=="06" || tP.getPropertyValue("V2")=="07"){
	
			tC.setPropertyValue("ENCODED_NODE_USER_ID", URLEncoder.encode("urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"), "UTF-8"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			log.info ""+URLEncoder.encode("urn:dece:type:policy:"+callTC.getPropertyValue("POLICY_CLASS"), "UTF-8");
			tC.setPropertyValue("policyClass",URLEncoder.encode("urn:dece:type:policy:"+callTC.getPropertyValue("POLICY_CLASS"), "UTF-8"));
			
			
			}else{
				tC.setPropertyValue("ENCODED_NODE_USER_ID", "urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			tC.setPropertyValue("policyClass","urn:dece:type:policy:"+callTC.getPropertyValue("POLICY_CLASS"));
			}

tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));
tC.setPropertyValue("expectErrType",callTC.getPropertyValue("PolicyGetResponseType"));


if (tC.getPropertyValue("expectErrType") == null ||
	tC.getPropertyValue("expectErrType") == "") {
		tC.setPropertyValue("expectErrType","SUCCESS");
}




</script></con:config></con:testStep><con:testStep type="groovy" name="Set Pem" id="eaa96ed5-3cca-4156-8a09-c54bea8b60f0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("Policy Get");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="Policy_Get" id="ea31ec84-49b5-4260-9fd3-9b9042ee1f2d"><con:settings/><con:config service="Policy_Create" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="Policy_Create_User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Policy_Get" mediaType="application/xml" postQueryString="false" id="47b23ac5-e1bd-485e-bd38-23f3df92ffc0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="3764bed9-292d-4b3e-8638-5dd84e1225de">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('Policy Get');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                                contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);


 </script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="3bb99271-32ca-4459-9ddc-4ca05ee135c6">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def XMLbody    = tC.getPropertyValue("XMLbody");
def httpStatus = tC.getPropertyValue("httpStatus");

String policyWasFound = "false";
String xmlPolicyClass = "";
String tcPolicyClass  = tC.getPropertyValue("policyClass");

/*
*  We can assume that if we get returned an HTTP status 
*  of 'HTTP/1.1 200 OK' the policy was found.  However,
*  it is never a bad idea to doublecheck.
*/

/*
*  The body should not be null...something should be
*  there.
*/
assert XMLbody.size() > 0;

if (XMLbody != null) {
                def myXML = new XmlSlurper().parseText(XMLbody);

                xmlPolicyClass = myXML.Policy[0].PolicyClass.text();
}

log.info "xmlPolicyClass [$xmlPolicyClass] - tcPolicyClass[$tcPolicyClass]";
                                
if (httpStatus == "HTTP/1.1 200 OK" || xmlPolicyClass == tcPolicyClass) {
                policyWasFound = "true";
                def PolicyID = context.expand( '${#TestCase#XMLbody#declare namespace ns1=\'http://www.decellc.org/schema/2013/10/coordinator\'; //ns1:PolicyList[1]/ns1:Policy[1]/@PolicyID}' )
                log.info "================="+PolicyID
                tC.setPropertyValue("PolicyID",PolicyID);
}


tC.setPropertyValue("policyExists", policyWasFound);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Return policyId" id="db2d7a86-6720-4405-a764-6b8d396ae082"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("PolicyID",tC.getPropertyValue("PolicyID"));

</script></con:config></con:testStep><con:properties><con:property><con:name>NODE_USER_ID</con:name><con:value>D84127385A77AB9FE0401F0A0799779D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>D841235B02690A67E0401F0A05995219</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>7600</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVdbc6pKE333V1jux5ThoqhYO6kaLhKMqFy8vnyFw4gogjIgyK8/A26NZif77PM9pMw0PT2ruxfNmp/Y3vtsF2CMotgLg6oqvdT+10A0z3HtRp1r20y9ybf5+qrRseuw1aLXbMu2uRaqVVWME6QGOLaD+KXG0kyjTjfqDG/RXJdpdDn6mW63lrXqFEWYhCYuz3Stmu39AHfLY19qSRR0Qxt7uBvYe4S7MeyaQBt0iWfXvmKqvf68oCwPjF43cXzoUhR8dhBEvg+fYbinflIPPj8d3DU9N7DjJEK/znTwS+3X3jRNn9PGcxi5FEvTNEXzFPFxsOf+qL1WrpuRowbr8LIW7SAMPGj7Xm4XoDQUb0KnCnw3jLx4s/8mNEMxdBG6jjJYh0wz+FGjPg4o0f1lpAeQEbbreGMz12AGWqMIBRBVJ4b6Uvvxdx287LUiO8DrMNrjT+v/BgkFJ+SHB+TU8TWzK7q/j/hFuV5/IthVA+gn2DuhYUGTgw0Rro4jtPaygYcJ+RxcLdtfzfCVYQj+l5b8pO5xEtjUF5WRPBfh+P/p132vLlGmtp+gV9sMBHfXbPPnBuwvcl7XLKfZMuwx33wpIdw7X0DdWv1r/ZmoN1792rSd77DPOD3JT89j+riF4WIXQR3kST4Yj9KhstrzDS7ghe0CurTpjxWVbaKDcE4Yhl/uUqHVlyQ3cHuC9F5Zb8eJZybaiUmpPdSDzrH/JMFjzO5yzo4P5lv/CZ3W6ZA/SUKeqcF+8AYGa6+PBAuu7SdHbqkKd4zdviKCyiydthlT5xNjn6s9Lj5R+OUjp/scirze0blMsvh/ztG8ZMf2bSEWk2JNXs8YvWqqKiW5KIKz6YJUFYBL/rZgSAp93Ow8hU9pAeh6D0ii4G/lgQZ2CmAmsrDRxOlUy8Qc9AV3OCUbrQrwl4JmyKmULqSprr/J6cZylOl5pfjJMpeHGsDlZnGjyYY8lQxL1jQQXmyZJq2UbKuZWqrqC6lCAkhydsgdhY+RknmQVTnN5NiFySXL+ZTYe+fBfnhaWbKviZoimkfFVFcNSZf7wFjMINtLyN58sD+ElcVEuNvUP6AtQL2UJmeCXLN2qWZN2KFk2KXNerRpqtLXdJyKepmVUpHT/nSSf9RCFDTR2cuZbIHxpRbQEntDejnvY3vGBZoBUsktN7/LqTO6AtF0Oq2Il1oN5NSQjcmwpxlqKoPSJsmpj1fscLNSNifY0LO+Bbb3jRF1edYLyPPAOMEzd6zYSg+s9lMGNowN9DjPnoepu+ykkr7ov4dLlYQZAl0WBB0QQDQoUiP1F8BAmHKjg8ezHhqse+EebaKKxoTvu1Oe0R2vMXLHwxknrXftseKNG7azoVQfstvGDqgqct6ZjW47xoIypMDLW6P3yRx50SKPh5zOtLwOVzFmyWQuhX7beZsvJu9P2QLq1mhsTmbjPMuGx20n9+O3kfAWmX1NckdDhMYYPlG03ROsjsSJi7ct4dPaoBFXAa4mAKBsXVf2CIGFt+2FhG+GJhPyAk1MFXEmKiZQlCdZFSRdX/c2zBgq02TCDDVVdnxSpvNibviVpShIpFO0PVseFmyPXlrAKYPpTbnn6hPuqT9HS33oW9MYpIfpOmAYWjnob2stdaFWMMBRU1Mgb5FQSVQwsUeHPp29T1s0c9Qdv2/yYNLITHaXjTbu8rxzyZxwl4u7V2dhAX9q3XFMJRSbVXRLNjTQubxvmaZOGoYP99lhtYeZZJGelZtDS5CNnk5PMkkC7xcbtgCb4UUubzVRLvdXQKbZhBan1XyDF8HQG1lyQkib3NFlu2Lpf+VYQbHKI8eOItDBZ47JF47JYH18UjsSg7mWeMCz1BUU+ai3p4M+f6D1+WBXEZ56lBt7fnMUdFLr/WnGnNP2ZqvPZrwqbcSnYL3YNFaxQNs51FF/11Y8YycFraZ/1gaazk08yj/TW3RM8aAyVJlAbsR5j+Kj5EnYL719njea7GQ/NpOTOrHfMXPerI4zPt2O31oUFSlnLm8vT3pvHsLF5TvyeUjejJcxSt0P2IcJfNVeZrLaIhhfl8V3WJWqPfJxtOM/67jC4jn1denaPRRiEMcoiGuvxa5Cw3UTovQ8p0u+nJe11GkybLvR4UC7DQS+J9NNmunRgG7zfLvNS1exd0HxCaIYBmuvOKuQs5eP9Z8Bwn0Xo8BBUf0UJnCDcO0PEYt6VdXAICokDDCyQiKXW1yD7Ygdpg1anAQIYNDmANdpsoIosqDH1KrDMB4FowisYxQ9SuXOg1Q2EPQOHir0dCEqMFEVOCYlOdqnJPaZ55P9HKCEKO6oEL1dttnhKOztDz4qAFP70El89HzYHMoCUfjyy9ZtiEtru0XTpdr5Nr/Pz66lID6OVzjgIhkBkXaiL0R/85rJtxkzzH3G1/AgcbxC1JC6xpEHL0geH33QpeDJjStFSlfMN9fPhoew1OeMbic5Jw/eGH+7ExFJTUTX67UhR/v5+JycTknZgnYhKCMSnmIoukWZCCZEFZ6tcIcC6haC+itBfkP96eSb/RFfEm8CMyZv854Qplou/+I2ZiJc3MZUQvjsb696D0eSusUoi7+yiT65tBWI/3ivg11Y+BHzmPykYeR8tOuLWHfnkDyL8eUFbrEq5Pf5G1bAkIT1yAgLo/vgXwX46vBH463INywxYdMqidH3T6rFbHqp2RCGSRCrUq003M/LEmd8PqDuh9NvYUoB/OtGk+FvbzRzbWCSybW3azdf79+d615JF0ju8sS/xPJSy8jlnBweuHfz+RfA30Z0gxNotsXToNW+jWiO5zmW4W8FfMjk9Tfz75a7mn5+H17/AQ==</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>POLICY_ID</con:name><con:value/></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_ 20008 - SAMLExchange - retailer - saml2 - FORBIDDEN - Active full user - with deleted ULC</con:value></con:property><con:property><con:name>sName</con:name><con:value>STS Create and SAML Exchange - FUNC</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 404 Not Found</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>837</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AUserLinkConsent</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<PolicyList xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Policy PolicyID="urn:dece:policyid:org:dece:D8412DEC2C19E6E5E0401F0A059962B6">
      <PolicyClass>urn:dece:type:policy:UserLinkConsent</PolicyClass>
      <Resource>urn:dece:userid:org:dece:D84127385A77AB9FE0401F0A0799779D</Resource>
      <RequestingEntity>urn:dece:org:org:dece:7600</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreatedBy="urn:dece:userid:org:dece:D84127385A77AB9FE0401F0A0799779D" CreationDate="2013-03-19T05:14:46.000Z">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
</PolicyList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>952</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyExists</con:name><con:value>true</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD84127385A77AB9FE0401F0A0799779D</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD841235B02690A67E0401F0A05995219</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\ISC_Nodes\7600.pem</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>urn:dece:policyid:org:dece:D8412DEC2C19E6E5E0401F0A059962B6</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5935459c-5982-4cb1-9974-1d4d88038a65</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9bbb88e5-07dd-4d4f-ba3c-1c734ce9be3a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserUpdate" searchProperties="true" id="16f91eb6-d036-4044-a104-3416700f4139" disabled="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="9ecbac18-bd7a-4df2-b9d2-c9fb4bc9817c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("ResponseType","SUCCESS");
tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID",null);
tC.setPropertyValue("ENCODED_NODE_USER_ID",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("userStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("SAML",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="dc3fbb0f-7f56-43ad-b37a-35c38bae3724"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("NODE_USER_ID",callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID",callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));
tC.setPropertyValue("expectErrType",callTC.getPropertyValue("PolicyDeleteResponseType"));

if (tP.getPropertyValue("V2")=="06" || tP.getPropertyValue("V2")=="07"){
			tC.setPropertyValue("ENCODED_NODE_USER_ID", URLEncoder.encode("urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"), "UTF-8"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
				tC.setPropertyValue("PolicyID",URLEncoder.encode(""+callTC.getPropertyValue("PolicyID"), "UTF-8"));
			}else{
				tC.setPropertyValue("ENCODED_NODE_USER_ID", "urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			tC.setPropertyValue("PolicyID",""+callTC.getPropertyValue("PolicyID"));
			}
			
if (tC.getPropertyValue("expectErrType") == null ||
	tC.getPropertyValue("expectErrType") == "") {
		tC.setPropertyValue("expectErrType","SUCCESS");
}



</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="98cfc05d-90a4-4012-b47d-f1f449632e22"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("User_Update");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="User_Update" id="fb4ef185-64fb-4374-8300-43409b18034e"><con:settings/><con:config service="AddNewUser" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" methodName="UserUpdate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User_Update" mediaType="application/xml" sslKeystore="RET_concat.pem" id="0a991f82-1623-4495-b24c-9cc11cc37183" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:${#TestCase#userStatus}" xmlns="${#Project#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
        	<GivenName>${#TestCase#UserName}</GivenName>
		<SurName>Ganji</SurName>
	</Name>	
	<ContactInfo>
        <PrimaryEmail>			
	       <Value>test_+428@uvvutesting.biz</Value>
               <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</PrimaryEmail>
	<AlternateEmail>			
        <Value>test_+428@uvvutesting.biz</Value>			
        <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</AlternateEmail>
	<!--Address>
		<PostalAddress>45999 Center Oak Plaza</PostalAddress>
		<PostalCode>20166</PostalCode>
		<Locality>Sterling</Locality>
		<StateOrProvince>NJ</StateOrProvince>
                <Country>UK</Country>
	</Address-->
	</ContactInfo>
        <Languages>
		<Language>de</Language>	
	</Languages>
       <!-- <DateOfBirth> depricated </DateOfBirth> -->
      <LegalGuardian>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID}</LegalGuardian>
       <Credentials> 
               <Username>${#TestCase#UserName}</Username>	
                <Password>${#Project#password}</Password> 
	</Credentials>
<UserRecoveryTokens>
      <RecoveryItem>
		<QuestionID>1200</QuestionID>  
		<QuestionResponse>Turner</QuestionResponse>
       </RecoveryItem>
       <RecoveryItem>
		<QuestionID>1650</QuestionID>  
		<QuestionResponse>Phoenix</QuestionResponse>
       </RecoveryItem> 
</UserRecoveryTokens>
</User>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#ENCODED_NODE_ACCOUNT_ID}"/>
  <con:entry key="UserID" value="${#TestCase#ENCODED_NODE_USER_ID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="b23cb4e2-2bd7-421f-91f3-9470fd51d912"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('User_Update');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			log.info "V2: "+tP.getPropertyValue("V2");
			if (tP.getPropertyValue("V2")=="06" || tP.getPropertyValue("V2")=="07"){
			contentLocation = URLDecoder.decode(value[0], "UTF-8");
			}else{
				contentLocation = value[0];
			}
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="cd84f76e-b48f-43aa-8526-34731eaf10da"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );
//def urnacct   = tP.getPropertyValue("urnaccount");
//def acct      = tC.getPropertyValue("nodeaccountid");
//def urnnode   = tP.getPropertyValue("urnNode");

//def sh            = tC.getPropertyValue("streamhandleFULL");
//def nodeid        = tC.getPropertyValue("nodeid");
//def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#nodeIdRetailerforDeviceAuthToken}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#nodeIdRetailerforDeviceAuthToken}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = true;
		httpLocationHeader = false;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The supplied country code is invalid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code cannot be null.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "API call not authorized";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:UserNotActive";
	errorReason = "User is not active";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

		case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The user does not have permission to create a full-access user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The user does not have permission to create a user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
			expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBe18OrOlder";
			errorReason = "First User must be 18 years or older";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBe18OrOlder";
	break;


	case "NO_MNG_ACC_CNST":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
			errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The first user in a household account must be a full-access user.";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;
	
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

	assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
	
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	userid     = urlStr.substring(lastColon + 1);
	//streamidFULL = urlStr.substring(lastSlash + 1);

	//this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

	tC.setPropertyValue("NODE_USER_ID",userid);
	//tC.setPropertyValue("streamhandleFULL",streamidFULL);
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}




//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:testStep type="groovy" name="Return the NodeAccountId and NodeUserId to the Calling Test Case" disabled="true" id="c3f3c863-6773-4ad7-883e-f4966c2bcb43"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("NODE_USER_ID1",tC.getPropertyValue("NODE_USER_ID"));
callTC.setPropertyValue("SecondUserName",tC.getPropertyValue("SecondUserName"));
callTC.setPropertyValue("password",tP.getPropertyValue("password"));</script></con:config></con:testStep><con:properties><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpConnect</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_70082 - STSCreate - llasp - unamepasswd - for the user who updated to Standard from Basic</con:value></con:property><con:property><con:name>sName</con:name><con:value>STS Create Tokentype usernamepassword - Linked LASP Test Cases</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>D82F859216DC97E2E0401F0A05996483</con:value></con:property><con:property><con:name>SecondUserName</con:name><con:value>username_20130122_043244</con:value></con:property><con:property><con:name>SAML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>UserName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\DECE\RET_concat.pem</con:value></con:property><con:property><con:name>userStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5ff78eb3-d79f-4f4a-b9a8-5ec1c84f61c0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3d78db1c-105b-43a0-b406-6bb0f690c833</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662fb201-c4e7-401c-b10a-548ea13f5020</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyDelete" searchProperties="true" id="853b66b1-2855-4d93-8f16-0c0514cd932e"><con:settings/><con:testStep type="groovy" name="Set Pem" id="6a0df690-63bf-4b9c-ae59-c6c2ff9420bf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("Policy Delete");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="17df3acf-9f74-4983-9c2c-7ca80c9272ea">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def tStep  = tC.getTestStepByName('Policy Delete');

/*
*  Get the HTTP headers
*/
def status = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];

log.info status[0];
log.info contentLocation;
log.info connection[0];
log.info contentType[0];
log.info contentLength[0];

tC.setPropertyValue("status",status[0]);
tC.setPropertyValue("contentType", contentType[0]);
tC.setPropertyValue("contentLength", contentLength[0]);
//tC.setPropertyValue("contentLocation", contentLocation[0]);

if (contentLength[0].toInteger() > 0) {
	rawResp = new ByteArrayOutputStream();
    def rawResp = tStep.httpRequest.response.getRawResponseData();
     strVal  = new String(rawResp);
      log.info strVal[0];

    int startAssert = strVal.indexOf("&lt;?xml version=\"1.0\" ");

	String XMLbody  = strVal.substring(startAssert, strVal.size());
     
	tC.setPropertyValue("XMLbody", XMLbody);
}</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers and save assertion" id="3d442766-d852-4dda-8d00-1ca77ae70830">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
def expectErrType = tC.getPropertyValue("expectErrType");
log.info(expectErrType);
def XMLbody       = tC.getPropertyValue("XMLbody");

boolean dobodyXML = true;
boolean doContentTypeHeader = true;
boolean doConnectionClose = false;
boolean doContentLocaton  = true;
boolean contentLengthZero = false;

String errorID     = "";
String errorReason = "";
String errorLink   = "";
String expectHTTPstatus = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";

if (expectErrType == "") {
	expectErrType = "SUCCESS";
}

this.log.info "expectErrType is $expectErrType";
switch (expectErrType) {
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 200 OK";
		expectHTTPcontenttype = "application/xml";
		contentLengthZero = true;
		doContentLocaton  = false;
		dobodyXML = false;
		
	break;
	case "FORBIDDEN":
	default:
		errorReason = "assertion_not_found";
		errorID = "urn:dece:errorid:org:dece:securitycontext:unauthorized";
		errorLink = "https://qa.q.uvvu.com:7001/deceerrors/error/error_response.html";
		orgRequest = "";
		doContentLocaton  = false;
		dobodyXML = true;
	break;
}

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("status");
assert tC.getPropertyValue("status") == expectHTTPstatus;

// Connection

if (doConnectionClose) {
	this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("connection");
	assert tC.getPropertyValue("connection") == expectHTTPconnection;
}


//Content-Length
/*if (contentLengthZero) {
	//assert tC.getPropertyValue("contentLength").toInteger() == 0;
} else {
	//assert tC.getPropertyValue("contentLength").toInteger() > 0;
}
	

if (doContentTypeHeader) {
	assert tC.getPropertyValue("contentType") == expectHTTPcontenttype;
}

// Content-Location
if (doContentLocaton) {
	assert tC.getPropertyValue("contentLocation") != null;
	
	def b = tC.getPropertyValue("contentLocation").toURL();
	assert b.getPath().matches("");
	def parms = b.getPath().split("/");
	
	tC.setPropertyValue("assertionUUID",parms[parms.size() - 1]);
} else {
	assert tC.getPropertyValue("contentLocation") == null;
}

if (dobodyXML) {
	if (XMLbody.length() > 0) {
		def myXML = new XmlSlurper().parseText(XMLbody);

		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode: Expect[$errorID] Received: " + myXML.Error.@ErrorID.toString();
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason: Expect[$errorReason] Received: " + myXML.Error.Reason.toString();
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorReason: Expect[$errorLink] Received: " + myXML.Error.ErrorLink.toString();
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} else {
		return false;
	}
} */</script></con:config>
      </con:testStep><con:properties><con:property><con:name>NODE_USER_ID</con:name><con:value>D84127385A77AB9FE0401F0A0799779D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>D841235B02690A67E0401F0A05995219</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8uwumAlqQIBRcUVN27ewmFAlE2G1V//Dho9SU5yvrzflU5PT/fTCz3PPCPDc+kujxCMYifwq4r4UvvHoKy9CcG+0TQBaLCsBRv7NttqdGALdEwDAthhalUFoQQqPooNP36p0STFNEiuQVEa2eo2mW6Te2pzjF6rrmGEsGms8kTWqrnn+qh7dftSSyK/GxjIQV3f8CDqxqC75NVxF2t2jTum2uvzDeXVYfR6iOOwSxDgCUOErgueQOARz8QHnWcTdZeO7RtxEsE3nyZ6qb2dzbLsKWOegsgmaJIkCZIjsI6JHPtX7bVyPwxNxbeC27pn+IHvAMN1LkYJSoXxITCrvGsHkRMfvG9MUwRFlqYbMAcNQLH+rxrx28EV3Q8tfQAZIaOBDgZ1N7aAFoygD2B1tVBear9+VsHbWS0yfGQFkYc+rf8bJOin0A1CaDbQPbI7up9b/CJdr88QdBUfuAlyUjgp2yQ0AETVWQQtJx87CDefiarX8ldzdO8wCP5LSZ6J9zgxbOKLzIiODVH8/9Trfa1uVtaGm8DXqekHKGkfizgNqPF6z9X3vKzavpWfXq4Q3ivfQD1K/bb+3KiPvno7BNZHitWms71eX+68MI20Y1CMW/GMiPXD+tQppsLFzTfaTs9D5rjT2dYYHXpyT2H7WfNopfFE7Aj0eLSxNLbSPPUnyW7qDDpN3XAhKcoztXCbCpCbEVswCtPMT6K8BmhEZGZSH+lpwLnNgOrslYCONuOF5F2SYt1eC/KqMqGzrT1hhgtCO7Oqv2VN8uV3TO9jKOMaweIaZPl/2yQ50YiNx6JXTgoLf54xfFUVpVcXez0e9mw+UwTeVoTxhZ8I9ul8ODl9LiMFfr6SeZEv1AWfifZOXM/nIykz12tXXyuyLKgLNhvwO7GCN0QpX4v6dkgaGz3c0TKpLwXB3C6CPTMMzcEpGxzARNXUbKIphXqU8okmkZurzM7x+qIeVWqqrZjK5ihw6kLKxOzqUZSyw0TfLMLdisvARZqrPNvnqZXUO6gDzVtTgFkcwFEaq/zpKhcOam+9VnNJ42cVwZ6scWxaT9ZD4Jnh3nMP74wPsHHN7K+Lfd9N9It0VHtSv7c895fKnhHn0pBf7Fb7zfpkbOS0AgYTfn/36DQdYxtktt7JxPluOAp05ZCCCT+XBGHO43SRvKr0h3zQF3iV5Z380jsKraBnyhkxpFGlzrn91rZwzltk9EnXoDodajfetGbnlij5dX2U7I8H9bCVp/XR0kxXXMxddiitpy3DoUAeWvOtNIhHuTWYLyv7mZhvwaBu2kPCvXBypLaHfHQpDq5qL+JNa4qKvWNZG2E7Zd225arMIrRcKyxQXQvmp4hsCZChiV2RjuIKb6sCz/ePq6MwV4VOmVRTyeY7VTB4WYoT/nKk4xG9Pg8HqQt2DB/ko830eHorjClmkkBkcwm3lVTpiLxZFmGwXEnykV8Jth0JtiQLcyDy850yynY4X6sBVv6cR/maR1sSeInR+RY3qDArkoun8ZJl+cIXVr7MHdRzvjFbHtk+Q2m8nIRspqKJ5eub4KR6TrSKkuVqNJqM872W9E9HPKsscjlKGb0ipaeQdyYj7XASA9GYhbtdHNZ9EIFYCT1VyS9THR07zt4jh/UmJcxIEbTplbfPVn1D0keRvaRGg4U/Y9pcBSVWMfDqx062qWvLVtg2e74lFgWhR2sy4AOZWzTPZk7Tp8MqG7cya8if9gY9yV1OKDhppGsgW8xHm6VXb1aa6XjskReNYCfhNFv2M1aaz+uMKWgDDYWRs0s6dh5NfZPeGXEr1cl1ywndE0cnJ40NmbXt4WLNUjNsq7PKnN0C3bPbIRgSCyLlpbY1VvrF/mJcQm8KbgP083R4CG/zg3g/WT6MnjvpWOJuhSC+L8sLSBGrMr4VjPjvBKaUOGbDuqp2w5IFoRj6ce21PFWSl26CKY5jdvGVcVtLLapNSpLcYiSalmlSIlmSkkmebHIcKzHcneXcUHyC2At8yyl9lTzudkv9HSDwugj6JowaaZCAA0S1v1gs81VV/AW+fgMfQS3APFGUqU6z3RFbFCtSJNOUmk2J69C8JJJNkWnRteokiKf+NOKtGEYfOSL3gSMuIHBCB5ZEsrxNEb5OUYxTcjbSJHapp9R48mGCqWZUsr0uzXaaBHK80IUlYMILzMSFT+EhvCaIQLdfumEAdJUuJO0fZdm73vTfhvh5754NrGM6pQIq4xEgrij8gvCy92C+DZqi3wd9N88nplNe6Di1ceSAG5KPW787pmyVR7vgqO6QH5qfBR+sEp8DejgyUwc8ev7xHMBsEvON13tJzsbT+SlJ0+RahHbJpSJsnqAIsk0sIUgwISq04AR94mGC+BEXfaD+5Pkh/4gviQ/+Msbfs4dbpnpd/uAhsoSofIgouOXzn75yPrjEeYthHn8l67n4vVIi/uuTBnRBqYfFM/yTBZH5u1xf2HrnB8dZDjDHt8tVyTyLb5oCBNisg4dYEL03/pWBr5x/FD6S/MAS427aJzH8fqdaTqeXmgFAkPixItaugvcT84ozLkLY/a30h5kr93sj8zn6lsxv1fESzy7PqD10nf+t3HCu7QIgPoWcK5aXWo7fpdi5b7+b0G8Avx7SPfFvQ/pjJK9/iP+UvMvp5+/h9V8=</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>POLICY_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:policyid:org:dece:E617180F360A7374E0401F0A05995FE1</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00011_US_UserGet_FUNC_YOUTH_SAU_Get_CHILD_Blocked_tou_P2</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Get_GeoProfile</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 404 Not Found</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>765</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD84127385A77AB9FE0401F0A0799779D</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD841235B02690A67E0401F0A05995219</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>urn%3Adece%3Apolicyid%3Aorg%3Adece%3AD8412DEC2C19E6E5E0401F0A059962B6</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:/certs/RET_concat.pem</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E6170EEF63CD2F20E0401F0A05994E39</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ErrorList xmlns="http://www.decellc.org/schema/2013/06/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
    <Error ErrorID="urn:dece:errorid:org:dece:Policy:PolicyNotFound">
        <Reason Language="en">The policy was not found.</Reason>
        <OriginalRequest>https://qa.p.uvvu.com:7001/rest/1/07/Account/urn:dece:accountid:org:dece:E6170EEF63CD2F20E0401F0A05994E39/Policy/urn:dece:policyid:org:dece:E617180F360A7374E0401F0A05995FE1</OriginalRequest>
        <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/07/error/en/ErrorList.html#Policy:PolicyNotFound</ErrorLink>
    </Error>
</ErrorList>
]]></con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetPem" searchProperties="true" id="9eefa1a9-efcc-493d-a73f-76683cebfde6"><con:settings/><con:testStep type="groovy" name="Set Pem" id="6512c4b0-42ef-4467-b104-ffa33eace57b"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import org.apache.commons.lang.SystemUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def projectPath = groovyUtils.projectPath

def eNV = context.expand( '${#Project#ENV}' )

def propertiesPath = null;

if (System.properties['os.name'].toLowerCase().contains('windows')) 
	{
    		log.info "it's Windows OS!!";
    		File temp = new File( projectPath + "\\..\\..\\..\\Properties\\");
    		propertiesPath = temp.getCanonicalPath();
	} 
else 
	{
    		log.info "it's Linux OS!!";
    		File temp = new File(projectPath + "/../../../Properties/");
    		propertiesPath = temp.getCanonicalPath();
	}
	
log.info("Properties File Location : '" + propertiesPath+ "'");




def propMap=[:]
BufferedReader reader = new BufferedReader(new FileReader(propertiesPath + "/" + eNV +"project.properties"));

String line;
while ((line = reader.readLine()) != null)
      {
	       if (line.trim().length()==0) continue;
	       if (line.charAt(0)=='#') continue;
	
	       int delimPosition = line.indexOf("=");
	       String key = line.substring(0, delimPosition-0).trim();
	       String value = line.substring(delimPosition+1).trim();
	       propMap.put(key, value);
      }


if (System.properties['os.name'].toLowerCase().contains('windows')) 
      {
            log.info "it's Windows OS!!!";
            File temp = new File( projectPath + "\\..\\..\\..\\Certs\\" + eNV + "\\");
    		  certPath = temp.getCanonicalPath();      
      } 
else 
      {
            log.info "it's Linux OS!!!";
            File temp = new File(projectPath + "/../../../Certs/" + eNV + "/");
    		  certPath = temp.getCanonicalPath();
      }  
      
 log.info("Cert path: " + certPath );  
                  
def nodeId = context.expand( '${#TestCase#nodeid}' )

log.info "nodeId: "+nodeId;

 if (nodeId == "dece:cs")
       {
             nodeId = "dececs";
       }
 else if (nodeId == "coord:cs")
       {
             nodeId = "coordcs";
       }
 else
       {
             nodeId = nodeId;
       }


//log.info "~~~~~~~~~~~~" +nodeId
boolean imFine = true;
def pwd = null;
def certMatchesNodeID = context.expand( '${#Project#CertMatchesNodeID}' )
log.info("CertMatchesNodeID : '" + certMatchesNodeID + "'");
if (certMatchesNodeID == "YES")
{
		File f1 = new File(certPath+"/"+nodeId + "_concat.pem");
		File f2 = new File(certPath+"/"+nodeId + ".jks");
		File f3 = new File(certPath+"/truststore-"+nodeId + ".jks");
		File f4 = new File(certPath+"/"+nodeId + ".pem");

		log.info("F1 : '" + f1.getPath()+ "'");
		log.info("F2 : '" + f2.getPath()+ "'");
		log.info("F3 : '" + f3.getPath()+ "'");
		log.info("F4 : '" + f4.getPath()+ "'");
	
	// sets the certificate from the specific folder when the certname and NodeId are same
	  if(f1.exists()) 
             {
                   keyStorePath = certPath+"/"+nodeId + "_concat.pem";
                   pwd = "123"
                   log.info("F1 file exists!!!");
                   log.info("keyStorePath : '" + keyStorePath + "'");      
             }
	  else if(f2.exists())
             {
                  	keyStorePath = certPath+"/"+nodeId + ".jks";
                   	pwd = "abcd1234" 
                   	log.info("F2 file exists!!!");
                   log.info("keyStorePath : '" + keyStorePath + "'");          
             }
	  else if(f3.exists())
             {
                  	keyStorePath = certPath+"/truststore-"+nodeId + ".jks";
                   	pwd = "12elma";
				log.info("F3 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");
             }
	  else if(f4.exists()) 
             {
                   	keyStorePath = certPath+"/"+nodeId + ".pem";
                   	pwd = "123";
                   	log.info("F4 file exists!!!");
                   log.info("keyStorePath : '" + keyStorePath + "'");       
             }
	  else
             {
                  	log.info "No cert file is Found!!!";
                  	imFine = false;
             }
}
else
{
	//to get the certificate name from another property based on the nodeid property.
		
	
       def value = propMap.find{ it.value == nodeId }?.key
       def certName = testProject.getPropertyValue(value+"_cert");       
       log.info "cert name .... " + certName;

		File f1 = new File(certPath+"/"+certName + "_concat.pem");
		File f2 = new File(certPath+"/"+certName + ".jks");
		File f3 = new File(certPath+"/truststore-"+certName + ".jks");
		File f4 = new File(certPath+"/"+certName + ".pem");

		log.info("F1 : '" + f1.getPath()+ "'");
		log.info("F2 : '" + f2.getPath()+ "'");
		log.info("F3 : '" + f3.getPath()+ "'");
		log.info("F4 : '" + f4.getPath()+ "'");      
		     
       if(f1.exists()) 
             {
             		
				keyStorePath = certPath+"/"+certName + "_concat.pem";
				pwd = "123";
				log.info("F1 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");     
             }
       else if(f2.exists())
             {
				keyStorePath = certPath+"/"+certName + ".jks";
				pwd = "abcd1234";
				log.info("F2 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");           
             }
       else if(f3.exists())
             {
                  	keyStorePath = certPath+"/truststore-"+certName + ".jks";
                   	pwd = "abcd1234";
                   	log.info("F3 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");
                   	         
             }
       else if(f4.exists()) 
             {
				keyStorePath = certPath+"/"+certName + ".pem";
				pwd = "123";  
				log.info("F4 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");     
             }
       else
			{
			log.info "No cert file is Found!!!";
			imFine = false;
			}                             
}


if(imFine)
{
      def callTSname = testCase.getPropertyValue("sName");
      def callTCname = testCase.getPropertyValue("tName");
      
      def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
      
      callTC.setPropertyValue("keyStorePath","$keyStorePath");
      testCase.setPropertyValue("keyStorePath","$keyStorePath");
      
      SoapUI.settings.setString( SSLSettings.KEYSTORE, keyStorePath );
      SoapUI.settings.setString( SSLSettings.KEYSTORE_PASSWORD, pwd);
      log.info 'pwd='+pwd
}

assert imFine == true;
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set Pem" disabled="true" id="70f86d54-d8c5-4980-b94d-43dd792b567e"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String nodeId = testCase.getPropertyValue("nodeid");

log.info "nodeId: "+nodeId;

if (nodeId == "dece:cs")
	{
		nodeId = "dececs";
	}
else if (nodeId == "coord:cs")
	{
		nodeId = "coordcs";
	}
else
	{
		nodeId = nodeId;
	}
String certPath = testProject.getPropertyValue("certPath");

File f1 = new File(certPath+"/"+nodeId + "_concat.pem");
File f2 = new File(certPath+"/"+nodeId + ".jks");
File f3 = new File(certPath+"/truststore-"+nodeId + ".jks");

boolean imFine = true;

if(f1.exists()) 
	{
		keyStorePath = certPath+"/"+nodeId + "_concat.pem";
		pwd = "123"	
	 }
 else if(f2.exists())
	 {
	 	keyStorePath = certPath+"/"+nodeId + ".jks";
		pwd = "abcd1234"	
	 }
 else if(f3.exists())
	 {
	 	keyStorePath = certPath+"/truststore-"+nodeId + ".jks";
		pwd = "abcd1234"	
	 }
 else
	 {
	 	log.info "Error!";
	 	imFine = false;
	 }


if(imFine)
{
	log.info "keyStorePath: "+keyStorePath;
	def callTSname = testCase.getPropertyValue("sName");
	def callTCname = testCase.getPropertyValue("tName");
	
	def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
	
	callTC.setPropertyValue("keyStorePath","$keyStorePath");
	
	SoapUI.settings.setString( SSLSettings.KEYSTORE, keyStorePath );
	SoapUI.settings.setString( SSLSettings.KEYSTORE_PASSWORD, pwd);
	log.info 'pwd='+pwd
}

assert imFine == true;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">RET</con:value></con:property><con:property><con:name>tName</con:name><con:value>UserCreate API</con:value></con:property><con:property><con:name>sName</con:name><con:value>CommonTestSteps</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\Certs\QALP1/RET_concat.pem</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Rename Test Cases" searchProperties="true" id="e2c4e4ac-425a-4711-bf15-1e0925e0b8a1"><con:settings/><con:testStep type="groovy" name="Rename Test Cases from external" id="bf86a2d2-4144-4811-a43f-1013547ebc99"><con:settings/><con:config><script>import java.io.*;

def testCase  = testRunner.getTestCase();
def testSuite = "STS Create Tokentype unamepasswd - Portal:CS";

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

BufferedReader br = new BufferedReader(new FileReader("C:\\Users\\raju.ganji\\Desktop\\TCs.txt"));

def newTestCaseName;

log.info "TCCount:"+TCCount;

for(i = 0; i &lt;= TCCount - 1; i++)
{	
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);

	newTestCaseName = br.readLine();
	log.info "Input Test Case Name: "+newTestCaseName;
	
	//if(targetTestCase.isDisabled() == false)
	//{
		targetTestCase.setFailOnError(true);
		targetTestCase.name = newTestCaseName;	
	//}

}</script></con:config></con:testStep><con:testStep type="groovy" name="Rename Test Cases internal" id="4380f443-dbba-469e-a609-36e3fa51657a"><con:settings/><con:config><script>//Copyright (c) 2010 Bhavin Bharat Joshi - Neustar, Inc.

import java.io.*;

//TestCase
def testCase  = testRunner.getTestCase();

//Get Arguments
//def testSuite = testCase.getPropertyValue("TestSuite"); 
def testSuite = "STS Tokentype DeviceAuthToken - Device Role";

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

def TCNum = 13;

//BufferedWriter bufferedWriter = null;
//bufferedWriter = new BufferedWriter(new FileWriter("c:\\DiscreteMediaLeaseCreateQuestions.txt"));

def oldTestCaseName;
def newTestCaseName;

for(i = 0; i &lt;= TCCount - 1; i++)
{	
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
	//if(targetTestCase.isDisabled() == false)
	//{
		//targetTestCase.setFailOnError(true);
		oldTestCaseName = TCList[i].name;
		newTestCaseName = oldTestCaseName.replace("Copy of ", "");	
		targetTestCase.name = newTestCaseName;	
		TCNum = TCNum + 1;
		log.info "Done renaming Test Case '" + oldTestCaseName + "' to '" + newTestCaseName + "'";
	//}
	//else
	//{
	//	bufferedWriter.write(targetTestCase.name);
	//	bufferedWriter.newLine();
	//}
}

//if (bufferedWriter != null) {
	//bufferedWriter.flush();
     //bufferedWriter.close();
//}

log.info 'Woohoo!'</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AccountMergeRequest" searchProperties="true" id="789968d3-8176-4b31-8f47-431e3011758b"><con:settings/><con:testStep type="groovy" name="Feed Data for the AccountMerge API" id="80d70818-b5a8-4794-8ce0-8d82f461f03e"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import dbUtils.dbAccount;
import dbUtils.dbUser;
import com.eviware.soapui.support.types.StringToStringMap

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("sName");
def callTCasename = testCase.getPropertyValue("tName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//Set the Node Details
testCase.setPropertyValue("nodeid",CallingTCase.getPropertyValue("nodeid"));


//Surviving and Retiring Account Details
testCase.setPropertyValue("SurvivingAccountID",CallingTCase.getPropertyValue("survive_assertionAccountIdFULL"));
testCase.setPropertyValue("RetiredAccountID",CallingTCase.getPropertyValue("retire_assertionAccountIdFULL"));
if (testProject.getPropertyValue("V2")=="06")
{
	testCase.setPropertyValue("encodedSurvivingAccountID",URLEncoder.encode(CallingTCase.getPropertyValue("survive_assertionAccountIdFULL"),"UTF-8"));
	testCase.setPropertyValue("encodedRetiredAccountID",URLEncoder.encode(CallingTCase.getPropertyValue("retire_assertionAccountIdFULL"),"UTF-8"));
}
else if (testProject.getPropertyValue("V2")=="02")
{
	testCase.setPropertyValue("encodedSurvivingAccountID",CallingTCase.getPropertyValue("survive_assertionAccountIdFULL"));
	testCase.setPropertyValue("encodedRetiredAccountID",CallingTCase.getPropertyValue("retire_assertionAccountIdFULL"));
}

//User Details for Merging two Accounts
testCase.setPropertyValue("user1Status","active");
testCase.setPropertyValue("mergeUser1",CallingTCase.getPropertyValue("survive_assertionUserIdFULL"));
testCase.setPropertyValue("user2Status","active");
testCase.setPropertyValue("mergeUser2",CallingTCase.getPropertyValue("retire_assertionUserIdFULL"));

testCase.setPropertyValue("survive_assert","SAML2 assertion="+ CallingTCase.getPropertyValue("survive_assert"));
testCase.setPropertyValue("retire_assert","SAML2 assertion="+ CallingTCase.getPropertyValue("retire_assert"));
//Set the Expected Value
testCase.setPropertyValue("expectErrTypeAccountMerge",CallingTCase.getPropertyValue("expectErrTypeAccountMerge"));
</script></con:config></con:testStep><con:testStep type="groovy" name="pem set for AccountMerge_API" id="476e4efc-f319-4609-aa59-39cb705eb97a">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("AccountMerge");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config>
      </con:testStep><con:testStep type="restrequest" name="AccountMerge" id="5112a73a-602e-4296-8f8b-3bf52b94d139"><con:settings/><con:config service="AccountMerge" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{SurvivingAccountID}/Merge/{RetiredAccountID}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AccountMerge" mediaType="application/xml" postQueryString="false" sslKeystore="RET_concat.pem" accept="" id="7a8ee4fb-00b4-4a08-83e4-5f7c3640983e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#retire_assert}"/>
  &lt;con:entry key="Authorization" value="${#TestCase#survive_assert}"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:AccountMerge xmlns:dece="${#Project#coordinatorSchema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/schema/md/v1.2/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd ">
<dece:UserReference ResourceDisposition="urn:dece:type:status:${#TestCase#user1Status}">${#TestCase#mergeUser1}</dece:UserReference>                
<dece:UserReference ResourceDisposition="urn:dece:type:status:${#TestCase#user2Status}">${#TestCase#mergeUser2}</dece:UserReference>                
</dece:AccountMerge>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="SurvivingAccountID" value="${#TestCase#encodedSurvivingAccountID}"/>
  <con:entry key="RetiredAccountID" value="${#TestCase#encodedRetiredAccountID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="8b0dbffb-cde9-43ff-b2ab-4d8ab9a34c14"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('AccountMerge');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="1d6adba7-5667-4993-a3d5-c0da8990549f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def url       = context.expand( '${#Project#Provision_HostName}' );
//def urnacct   = tP.getPropertyValue("urnaccount");
//def acct      = tC.getPropertyValue("nodeaccountid");
//def urnnode   = tP.getPropertyValue("urnNode");

//def sh            = tC.getPropertyValue("streamhandleFULL");
//def nodeid        = tC.getPropertyValue("nodeid");
//def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = context.expand( '${#TestCase#expectErrTypeAccountMerge}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = context.expand( '${#Project#expectHTTPcontenttype}' );
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = true;
		httpLocationHeader = false;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The supplied country code is invalid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code cannot be null.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "API call not authorized";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:UserNotActive";
	errorReason = "User is not active";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

     case "RESOURCE_STATUS_NOT_ALLOWED":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:ResourceStatusElementNotAllowed";
		errorReason = "Resource Status Element Not Allowed";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceStatusElementNotAllowed";
	break;

	
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

	assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
	
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	accountid     = urlStr.substring(lastColon + 1);
	//streamidFULL = urlStr.substring(lastSlash + 1);

	//this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

	tC.setPropertyValue("ACCID",accountid);
	//tC.setPropertyValue("streamhandleFULL",streamidFULL);
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}




//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>1.40. Account Merged Notice [Your UltraViolet account has been merged with another UltraViolet account]</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Notifications_Test Cases</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SurvivingAccountID</con:name><con:value>urn:dece:accountid:org:dece:DF7DD728D818E14DE0401F0A05997D5C</con:value></con:property><con:property><con:name>RetiredAccountID</con:name><con:value>urn:dece:accountid:org:dece:DF7DD728D87CE14DE0401F0A05997D5C</con:value></con:property><con:property><con:name>encodedSurvivingAccountID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADF7DD728D818E14DE0401F0A05997D5C</con:value></con:property><con:property><con:name>encodedRetiredAccountID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADF7DD728D87CE14DE0401F0A05997D5C</con:value></con:property><con:property><con:name>user1Status</con:name><con:value>active</con:value></con:property><con:property><con:name>mergeUser1</con:name><con:value>urn:dece:userid:org:dece:DF7DD728D828E14DE0401F0A05997D5C</con:value></con:property><con:property><con:name>user2Status</con:name><con:value>active</con:value></con:property><con:property><con:name>mergeUser2</con:name><con:value>urn:dece:userid:org:dece:DF7DD728D88AE14DE0401F0A05997D5C</con:value></con:property><con:property><con:name>expectErrTypeAccountMerge</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\User_Notifications\RET_concat.pem</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>survive_assert</con:name><con:value>SAML2 assertion=nVdZc6pME773V1ieS8uwuWElqRoEFRU3cOPmLRyGRdlkQNBf/w4aPUlOcr6835VOT0/30ws9zzxjw/fYDsAYxYkbBmVZfKn80zR52uI4prbjjXat3uKMWrvO1GscbEKWqUOaa9CVsoxxiuQAJ0aQvFRYmuFqdLPG8Brd6nBch6k/MTyjV8orFGNimqg8kVO57wW4c3X7UknjoBMa2MWdwPAR7iSwowJl3CGaHeOOqfL6fEN5dRi/OkkSdSgKPpkIIs+DTzD0qWfqg86ziTuqawdGksbozaeJXypvZ7Mse8q4pzC2KZamaYrmKaJjYtf+VXkt3Q8jUw6s8LbuGkEYuNDw3ItRgFJQ4oRmGXh2GLuJ439jmqEYujBdQzmsQaYe/KpQvx1c0f3Q0geQMTZq2DGYu7EFslCMAojKy4X8Uvn1swrezmqxEWArjH38af3fIKHghLwwQmYN3yO7o/u5xS/S9fqMYEcOoJdi94QmRZtEBkS4PIuR5eZjF5PmM3H5Wv5yju8dhuB/Kckz9R4ngU19kRnRtRFO/p96va/VzcrK8FL0enaCfr81lePJOdHTlF0sj8amsRifMHi5QnivfAP1KPXb+nOjPvrq7VC0GjI6rM9ZCTsLlV16Q6clyJm/dy6UfzY1MXNlzeSkw7CvGkm0STWKEqeZprfj4Xrh2pvNyZ6sPcqUp7MS3ZIOl8CXdtXqaioOR64UNIbe1K5uq3LspOcmSgMutvoNDfGj8cAK3BaeJBultdHOvfZRrdaXE7Mpy3SoiyViq79pu9NVtT1O5BmdNw8vv2N6H0MR1widr0EW/zcNmheNxHgsusWksMjnmaBXRZa7VbHbBahrg0wWgC0L4wuYCPbh6BzcPp/RApgve0AEZ2UBMtHeiqv5fCRl5mrl6Su51xOURT0bgK1YIhuilK9EfTOkjbUebdkerauCYG4W4Y4bRubgkA0cOFE0JZto8lnZS/lEk+j1VWbnZH1R9goz1ZZcab0XeGUhZWJ29ShKmTPR14tou+QzeJHmCqj3AbOUuo4y0PwVA7mFA/fSWAGHq1xwlO5qpeSSBmYlwZ6sSGxat6dH0Dejne8574wPiHHN7K/Ou76X6hdpr3Slflc99lV5x4lzaQgW2+VuvToY696pBAcTsLt7dBuusQkzW29n4nw7HIW67JzgBMwlQZgDki4aKHJ/CMK+AJQ6cPNLdy80w67Zy6ghi0tV3us3N2f3uMFGn/YMpt1mtuN1c3ZsilJQ1Ufpbu8ozqY3rY5U87TkE/6yxafqqWm4DMwja76RBskotwZztbSbifkGDqqmPaS8C9+LldYQxJez4yn2Ilk3p/i8cy1rLWymda9leQq3iCzPis64qoXzQ0w3BcSx1PZ8GiUlYCsCAP39ci/MFaFdJNWUs/lWEQzQk5IUXPZsMmJXx+Hg5MEtB8J8tJ7uD2+FMcVMEqhsLpG2kkptEZhFEQbqUurtwVKw7ViwpZ4whyKYb+VRtiX5Wg6I8uc89q55tCUBSJwOmvygxC1pPpkmar0OzoGwDHq8oxzztdn06dYRSWN1EtUzBU+sQF+HB8V342WcqsvRaDLOd1raP+zJrLJodXTi9JJ0OkTAnYw05yCGojGLttskqgYwhokc+YqcX6Y63rfdnU8Pqw1GmNEibLFLf5ct+4akj2JbZUaDRTDjWnwJp9Z54Ff37Wxd1dRm1DK7gSWez5Qer+gQhD1+0TiaOcsenGU2bmbWEBx2BjvJPV4489JI12C2mI/Wql9tlBqn8dinLxpVn0TTTO1ndWk+r3KmoA00HMXuNm3beTwNTHZrJM2TTq+abuQdeDY9aPWIW9k+KdbsZEYtZVaa1zdQ9+1WBIfUgjoBqWWN5f55dzEukT+FtwH6eTo8hLf5Qb2fLB9Gz510qKRbEUzuy+ICksVyj9wKRvJ3AlNIXLNmXVU7UcGCcIKCpPJanCrISyclFMc1O+TKuK3FXksUW2xbbLNtiamLEl2nmR4N6AbPt8RG985ybig+QeyGgeUWvgoed7ul/g4Q+h2MAhPFtVOYQgfhyl8sFvkqy8GCXL9hgJEWEp7ICSzL0IDpNntsj23U2zxNSz2elqQG3aIZUClPwmQaTGNgJSj+wBEZ+gNHXCDoRi4qiGRxm2JyneKEpORonNLEY55OxlOAUkI144Ltddh6u0Fh1488VACm/NBMPfQUOdE1QRS+/bI1A+KrdCFp/8hq93rTfxvi5717NoiO6RYKuIhHQKSi6AvCS9+D+T5o7n3Qd/MgNd3iQiepTWIX3pB83PrdMUWrPNqFRHWH/ND8LPhglfoc0MOReXLho+cfzwHCJgnfeL2X5Gg8HZ/S0ym9FqFVcKmYmKcYim5SKoIpIURnLTyggHqYoH7ERR+oP3l+yD/iSxMnUBPyPfukZcrX5Q8eIirCxUNEJi2f//SV88ElyVuC8uQrWdcj75UC8V+fNLADCz0inpGfLIzN3+X6wtY7PyTOYoC5gV2sCuZ5/qYpYEjMumSIhfF7418Z+Mr5R+EjyQ8sCemmXZqg73fKxXR6qRgQhmmQyGLlKng/Ma84k3OEOr+V/jBz5X5vZD7H35L5jTJWyezyjcpD1/3fyjX32i4QkVPYvWJ5qeTkXUqcB/a7Cf0G8Oshzfx1SH+M5PUP8Z+Sdzn9/D28/gs=</con:value></con:property><con:property><con:name>retire_assert</con:name><con:value>SAML2 assertion=nVdZc6pME773V1ieS8sAggtWkio2FRWN4MrNWzgMi7LJsOmvfweNHpOTnC/vd6XT09P99ELPM8/I8L1mj0MIxokbBlVZfKn9s6ObVKezazVIyFINhmyDRrfFMA2GYRlmZ+1Yq8XWqjJCKZQDlBhB8lJrkhTdINsNil2QnR5N95jmE9Ol9Vp1BWOETWOVJ7JWLXwvQL2L25daGge90EAu6gWGD1EvAT2NUyY9rNkzbphqr89XlBeH8auTJFGPIMCTCQH0PPAEQp94Jj7oPJuop7l2YCRpDN99muil9n42z/OnnH4KY5tokiRJkCyBdUzk2r9qr5XbYWjKgRVe14IRhIELDM89GyUoBSZOaFY5zw5jN3H8b0xTBEWWphuwAA1AMcGvGvHbwQXdDy19ABkjo4Ecg7oZU6EFYxgAWF2q8kvt188qeD27iI0AWWHso0/r/wYJBhn0wgiaDXSL7Ibu5xa/SNfrMwQ9OQBeitwMTss2iQwAUfUthpZbTFyEm89E1Uv5qwW6dRgE/6Ukz8QjTgyb+CIzomtDlPw/9Xqs1dXKyvBS+EquYqe+ynZTYspNDGE8L4w1suP8uLdfLhAela+g7qV+X39u1HtfvR9S+fNYP+/71hkO9vT2kOh+2NlClW4XzHQy49k34yREwmmmuXKsJ/N2fGzyszFxXLfDeVPlVWuxnSYsE9sgqbiSeETUUY9zyG6GEU2Qe6E/G0yCtXtaa3Hbm4yccHfWgLskO0OVifaplq11lZkBKtjb0flEtDyTbCNnZFROZ1/S9CSjQZ3huakyy5cvv2N6jKGMawxPlyDL/5sWyYpGYtwXQjkpLPx5JvBVkWWhLgoCBwWby2Wes2V+cuamvH04Ogd3wOYkz82XfU7kTorK5aK9FVfz+VjKzdXK01dyv88rKpMPua1YwRuiVKxEfTMijbUebZt9Utd43tyo4Y4eRebwkA8dMFUWSj5dyCdlLxXThUSuLzK7wOuzsleo2WJJV9Z7nlVUKRfzi0dRyp2pvlaj7ZLNwVmaKxwz4KilJDjKcOGvKECrDthLE4U7XOS8owirlVJIC+6twtvTFY5tIfT1CPhmtPM958H4EBtfmIPVaTfwUv0s7RVBGgjacaDJO1qcSyNO3S5369XBWPezChhOud3No9tyjU2Y23o3F+fb0TjUZScDU24u8fycw+kiOUUejLhwwHMKw7nFWdjz7VAw+zkxaqJKnfUG7c3JPW6QMSA9g+p2qe1k3X47tkUpqOvjdLd3FGfTn9XHmpkt2YQ9b1FWz9qGS4EisuYbaZiMC2s41yq7N7HYgGHdtEeEd2b7sdIZcfH55HiKrSbr9gyddq5lrfnNjPE6lqfQamR5VnRC9UU4P8Rkm4d0k9iesnFS4WyF57jBfrnn5wrfLZNqyvl8q/AG15eSlDvvm8m4uTqOhpkHtjQXFuP1bH94L4wp5hJP5HMJt5VU6YqcWRZhqC2l/p5b8rYd87bU5+dA5OZbeZxvcb6WQ6z8OY/9Sx5tieckWufa7LBCL0k2mSUaw3CngF8GfdZRjsXabPtk5wiliTaNmFxBUyvQ1+FB8d14GafacjyeTordIh0c9nhWWaQ2zmi9ImWHiHOn44VzEEPReIu22ySqByAGiRz5ilycZzrad92dT47qLYp/I0XQaS79Xb4cGJI+jm2NGg/V4I3usBWUWqehX99383V9obWjjikElng6EXq8IkMu7LNq62gWzebBWeaTdm6NuMPOaE4Lj+VPrDTWFyBX5+O15tdblVY2mfjkeUEw02iWa4OckebzOm3yi+ECRbG7Tbt2Ec8Cs7k1knamk6u2G3kHtpkeFkxEr2wfF+stM6OO8laZMxug+3YnAiNCJTJO6lgTeXDanY1z5M/AdYB+ng534XV+EI+T5cPouZEODXcrBMltWV5Asljt41vBSP5OYEqJazasi2ovKlkQSmCQ1F7LUyV56aWY4rhmD18Z17XY74hip9kVu11OohhRIhmS6pMc2WLZjtgSbizniuITRCEMLLf0VfK46y31d4DA7yEYmDBuZGEKHIhqf7FY5qsqByq+fsMAwUWIeSJFdlu0yIptVqCojtBvMgLVpwVRovoU3e4Lteo0TGbBLOasBMYfOCJFfuCIKgRu5MKSSJa3KcLXKUpwSo5GliYe9ZQZTwFMMdWMS7bXazLdFoFcP/JgCZjwQzP14FPkRJcEEej622wYAF2kqrT4R9aEy03/bYif927ZwDqmWyqgMh4e4orCLwgvfQvm+6Dpx6Bv5rnUdMsLHac2iV1wRfJx63fHlK1ybxcc1Q3yXfOz4INV4nNAd0dm5oJ7z9+fA5hNYr7xeivJ0Xg6PqVZll6K0Cm5VIzNExRBtgkNghQTotMiPMCAuJsgfsRF76g/eb7LP+JLEyfQEvw9+7hlqpflDx4iGkTlQ0TGLV/89JXzwSXOWwKL5CuZ4OH3Son4r08a0AOlHha/4Z88jM3f5frC1oMfHGc5wNzALlcl8zx90xQgxGZdPMTC+NH4Vwa+cv5ReE/yHUuCu2mXJvD7nWo5nV5qBgBhGiSyWLsIHifmBWdyimDvt9IfZi7c753MF+hbMr9RJhqeXb5Ru+u6/1u54V7aBUB8CrkXLC+1Ar9LsfPAfpjQ7wC/HtId4W9D+mMkr3+I/5Q85PTz9/D6Lw==</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>600743e6-779f-43ea-8db9-37ac0891f773</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AccountMergeUndoRequest" searchProperties="true" id="bb7e7d8b-e8e3-4dc9-9073-6b2a9c8ac469"><con:settings/><con:testStep type="groovy" name="Feed Data for the AccountMergeUndo API" id="979f1903-1ef6-4a21-b7ed-3c829bec85dc"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import dbUtils.dbAccount;
import dbUtils.dbUser;
import com.eviware.soapui.support.types.StringToStringMap

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//Set the Node Details
testCase.setPropertyValue("nodeid",CallingTCase.getPropertyValue("nodeid"));


//Surviving and Retiring Account Details
testCase.setPropertyValue("SurvivingAccountID",CallingTCase.getPropertyValue("SurvivingAccountID"));
if (testProject.getPropertyValue("V2")=="06")
{
	testCase.setPropertyValue("encodedSurvivingAccountID",URLEncoder.encode(CallingTCase.getPropertyValue("SurvivingAccountID"),"UTF-8"));
}
else if (testProject.getPropertyValue("V2")=="02")
{
	testCase.setPropertyValue("encodedSurvivingAccountID",CallingTCase.getPropertyValue("SurvivingAccountID"));
}


//Set the SAML Details of the Full Users to the AccountMergeTest API

def headers = new StringToStringMap()
headers.put("Authorization","SAML2 assertion="+ CallingTCase.getPropertyValue("survivingAccountUserAssertion"));

testRunner.testCase.getTestStepByName("AccountMerge").testRequest.setRequestHeaders(headers);

//Set the Expected Value
testCase.setPropertyValue("expectErrTypeAccountMergeUndo",CallingTCase.getPropertyValue("expectErrTypeAccountMergeUndo"));
</script></con:config></con:testStep><con:testStep type="groovy" name="pem set for AccountMergeUndo_API" id="9d27ef5d-226b-4710-91da-6a452b364641">
        <con:settings/>
        <con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase    = testRunner.getTestCase();
def testSuite   = testCase.getTestSuite();
def testProject = testSuite.getProject();

String keyStorePath  = "";
String keyStoreAlias = "";
String nodeId = testCase.getPropertyValue("nodeid");

RestTestRequestStep testStep = testCase.getTestStepByName("AccountMergeUndo");

//String keyStorePath = testCase.getPropertyValue("KeyStorePath");
//String keyStoreAlias = testCase.getPropertyValue("notValidExpiredNode");

switch (nodeId) {
	case "0799":
		keyStorePath = "C:\\DECE\\certs\\0799_concat.pem";
	break;
	case "0798":
		keyStorePath = "C:\\DECE\\certs\\0798_concat.pem";
	break;
	case "0701":
		keyStorePath = "C:\\DECE\\certs\\0701_concat.pem";
	break;
	case "0702":
		keyStorePath = "C:\\DECE\\certs\\0702_concat.pem";
	break;
	case "500500":
		keyStorePath = "C:\\DECE\\certs\\500500.pem";
	break;
	case "222312":
		keyStorePath = "C:\\DECE\\certs\\222312_concat.pem";
	break;
	case "222333":
		keyStorePath = "C:\\DECE\\certs\\222333_concat.pem";
	break;
	case "222332":
		keyStorePath = "C:\\DECE\\certs\\222332_concat.pem";
	break;
	case "222334":
		keyStorePath = "C:\\DECE\\certs\\222334_concat.pem";
	break;
	case "222335":
		keyStorePath = "C:\\DECE\\certs\\222335_concat.pem";
	break;
	case "222336":
		keyStorePath = "C:\\DECE\\certs\\222336_concat.pem";
	break;
	case "222337":
		keyStorePath = "C:\\DECE\\certs\\222337_concat.pem";
	break;
	case "222338":
		keyStorePath = "C:\\DECE\\certs\\222338_concat.pem";
	break;
	case "222339":
		keyStorePath = "C:\\DECE\\certs\\222339_concat.pem";
	break;
	case "222340":
		keyStorePath = "C:\\DECE\\certs\\222340_concat.pem";
	break;
	}
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);

soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config>
      </con:testStep><con:testStep type="restrequest" name="AccountMergeUndo" id="ff86e280-8efc-438f-a0f8-c455f69b9e1e"><con:settings/><con:config service="AccountMergeUndo" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{SurvivingAccountID}/Merge/Undo" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AccountMergeUndo" mediaType="application/xml" postQueryString="false" id="dd3830bf-c8ce-4552-96cc-cdb5bd6ace32"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SurvivingAccountID" value="${#TestCase#SurvivingAccountID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="355f30c0-6988-4a19-b98d-00eb17001332"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('AccountMergeUndo');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="7b43b087-c6b1-41fa-9958-b3af8215ddd8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def url       = context.expand( '${#Project#Provision_HostName}' );
//def urnacct   = tP.getPropertyValue("urnaccount");
//def acct      = tC.getPropertyValue("nodeaccountid");
//def urnnode   = tP.getPropertyValue("urnNode");

//def sh            = tC.getPropertyValue("streamhandleFULL");
//def nodeid        = tC.getPropertyValue("nodeid");
//def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = context.expand( '${#TestCase#expectErrTypeAccountMergeTest}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The supplied country code is invalid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code cannot be null.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "API call not authorized";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:UserNotActive";
	errorReason = "User is not active";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

     case "RESOURCE_STATUS_NOT_ALLOWED":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:ResourceStatusElementNotAllowed";
		errorReason = "Resource Status Element Not Allowed";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceStatusElementNotAllowed";
	break;
	case "FORBIDDEN_SURVIVING_ACCOUNT_HAS_BEEN_MODIFIED":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:SurvivingAccountHasBeenModified";
		errorReason = "Changes have been made to the Surviving Account since the Merge happened";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#SurvivingAccountHasBeenModified";
	break;

	
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

	assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
	
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	accountid     = urlStr.substring(lastColon + 1);
	//streamidFULL = urlStr.substring(lastSlash + 1);

	//this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

	tC.setPropertyValue("ACCID",accountid);
	//tC.setPropertyValue("streamhandleFULL",streamidFULL);
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}




//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>600743e6-779f-43ea-8db9-37ac0891f773</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>424ec930-ca02-4bff-8ed5-51aa458ee303</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateULC_nodes" searchProperties="true" id="3217055c-57f5-4f6b-8986-5c97d330161d"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="7b00abc6-17e9-4793-8beb-c38a75a236da"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("ENCODED_NODE_USER_ID",null);
tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("SAML",null);
tC.setPropertyValue("expectErrType",null);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="a0a81299-e499-4d96-8fe3-ee9125bfe1ac"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("NODE_USER_ID",callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID",callTC.getPropertyValue("NODE_ACCOUNT_ID"));

if (tP.getPropertyValue("V2")=="06" || tP.getPropertyValue("V2")=="07"){
			tC.setPropertyValue("ENCODED_NODE_USER_ID", URLEncoder.encode("urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"), "UTF-8"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			}else{
				tC.setPropertyValue("ENCODED_NODE_USER_ID", "urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			}
			
tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));
tC.setPropertyValue("expectErrType",callTC.getPropertyValue("PolicyCreateResponseType"));
tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:UserLinkConsent", "UTF-8"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="afad6394-18c1-41f0-834e-d5fd2a0de724"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreateSinglePolicyPost_ULC");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="4ed4c6fb-f157-4d76-90cf-c2111034e717">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreateSinglePolicyPost_ULC');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;
/*

def expXML = tStep.httpRequest.response.getResponseContent();
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/
tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                               log.info "V2: "+tP.getPropertyValue("V2");
			if (tP.getPropertyValue("V2")=="06" || tP.getPropertyValue("V2")=="07"){
			contentLocation = URLDecoder.decode(value[0], "UTF-8");
			}else{
				contentLocation = value[0];
			}
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="7065e381-9693-46c0-afa3-f3f540ed93ee">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVfbkqLKEn33Kwzn0bC5ibeY7ojiImKLCuL15QQWJaAISoGgX78LHG3t6Z49+zx02JVUZq3MXCSrfmJr77MdgDGKYi8Myqr0Wvkf30R83eZRrQ4Zpla36E3NWrON2qbV3LRZG67tNlspqxgnSA1wbAXxa4WlGa5GczWWNxm6U293aPqFa7RXlfIMRZiEJlte6Eo52/sB7hTHvlaSKOiEFvZwJ7D2CHdi2JkAbdAhOzvWDVPl7ecVZXFg9ObG8aFDUfDFRhD5PnyB4Z76ST3t+WnjzsRzAitOIvTrTBu/Vn75pmn6knIvYeRQLE3TFN2myB4be86Pylvp5oxsNdiE17VoBWHgQcv3LlYOSkOxG9pl4Dth5MXu/pvQDMXQeegaymANMvXgR4X6OKBA95eRnkBG2Kph12JuwQy0QREKICpPDfW18uPvOnj1NSMrwJsw2uNP6/8GCQUn5IcHZNfwLbMbur+P+EW53n4i2FED6CfYO6FhTpODBREujyO08bKBhwn5bFwu2l/O8I1hCP6XlvykHnES2NQXlZE8B+H4/+nXY6+uUWaWn6C38UrSqWDcG8nn9XSihLgnXS7Z1FjX1dcCwuPmK6h7q3+tPxP1zqtfTj3a2U8nTqi2GL4BxWYUpiBR8FZJdlGPmUm7YNg4XS6c7u4kVtyOqvUWUt05VM79dXhsu6B1nk/E9ozbbLel6pjjpqA1gbvM2gRznFCzSRXGYyVdDAPZ2qheuA3n/RbHZ/p4wKirPlflhrsGVBdO60R1OecgYUrZL3BjWgrhZqoK+plNVzE+sntuQb9+5PSYQ57XOzoXSeb/L3i6LVmxdV+I+aTYkNczRm+aqkrJRRTBeeKAVBWAQ/62YCg4u6O785R2SgtA17tAEgV/Kw80sFMAM5UFVxNnMy0TL6AvOMMZcTRLwF8JmiGnUrqUZrrek1PXtJXZea34yeoiDzWAC2fR1WRDnkmGKWsaCK+2TJPWSrbVJlqq6kupRAJIcna42Eo7RkrmQVbltQnPLid8slrMiL17HuyHp7Up+5qoKeLkqEzUNSfpch8YyzlkuwnxvQz2h7C0nAoPTv0D2gLUTWlyJrho5i7VzCk7lAyrsJnPNk1V+pqOU1EvslJKctqfTS8ftRAFTbT3ciabYHytBTTF7pBeLfrYmvOBZoBUcgrndzm1Rzcgmk6nJfFaq4GcGrIxHXY1Q01lUNgkOfXxmh26a8U9QU7P+ibYPjZG1OV5NyDPA+MEz/yxZCldsN7PGMgZLvR4z1qEqbNqpZK+7L+HK5WEGQJdFgQdEEA0yFMj9RfAQJjxo4PXZj002HTDPXKjksaE77vTJaNbHjdyxsM5L212zbHijTnLdinVh+yW2wFVRfY74+qWbSwpQwq8S2P0Pl0gL1pe4iGvMw2vxZeMeTJdSKHftHuL5fS9mi2hbo7Gk+l8fMmy4XHbuvhxbyT0oklfk5zREKExhlWKtrqC2ZJ4cdnbEj5tDBrxJeBoAgDK1nFkjxBY6G2vJOwZmkzICzQxVcS5qEyAolRlVZB0fdN1mTFUZsmUGWqqbPukTOflwvBLK1GQSKdoa746LNkuvTKBXQTT63LX0ad8tb9AK33om7MYpIfZJmAYWjnovY2WOlDLGWCr6UQgb5FQSlQwtUaHPp29zxo0c9Rtvz9pgymXTdhdNnKd1XnnrHakKcuHV2dpAn9mPnBMJRSbl3RTNjTQur5vmaZOOcOH++yw3sNMMknPCufQFGSjq9PTTJLA+9WGTcBmeHmRt5ooF/4lkGkWocVpvXDxMhh6I1NOCGmTB7ps1yz9rxzLKVZ65thRBDr4zDH5yjEZbI5VtSUxmG+IBzxPHUGRj3pzNui3D7S+GOxKQrVLObHn10dBKzXfq3PmnDbdrT6ft1XJFavBZuly61igrQvUUX/XVDxjJwWNun/WBprOTz3KP9NbdEzxoDRUmUDm4kuXakdJVdivvD0Z13V2uh9PkpM6td4xc3bXx3k73Y57DYqKlDN/aa5OencRwuX1O/J5SN6N1zFKPQ7Ypwl8016TZL1FML4t8++wKpW75ONoxX/WcbnFs2ubYmvnkItBHKMgrrzlXrmG6yRE6Xl2h3w5r2upJchNiWFEgWbaLZqX6TrNdGlAN9ttVmaYm9i7ovgEUQyDjZeflcvZ68f6zwDhvoNRYKOodgoT6CJc+UPEvF5lNTCICgkDjMyQyOVuA9RlVmozdLdNt5p0V+IaYrMtyBIttbkWqJSHYTwKRhHYxCh6lsrck1Q2EPQOHsr1dC4qMFEVOCYlOVqnJPaZl5P1EqCEKO4oF70dtt7iKeztDz7KAVP70E589HJwD0WBKHz9ZWsWxIW12aDpQu18m9/nZ7dSkD22l2/AeTICIu1Ev4n+Voe/ZfJ9xo3HjG/hQWJ7uaghdY0jD16RPD/6oEvOkztX8pRumO9bPxuewlKfM7qfZJ88eGf8/U5EJDURXW+3hhytl+NLcjolRQuauaCMSHiKoegGNUEwIarwbIY7FFD3ENRfCfI76k8n3+3P+JLYDSYxeZv3hDDlYvkXt7EJwvltTCWEz/72qvd0JKlbjLL4K5vok0tbjviP9zrYgfk+Yh6TnzSM7I92fRHr4RySZz6+vMDJV7n8Pn/DChiSsB4ZYWH0GPyrAF8d/my8F/mOJSZsWicx+v5JOZ9NrxULwjAJYlWqFIbHeVngjM8H1PnY9FuYQgD/utFk+NsbzUIbTMjk2luV+17v3zfXvIIuEBEv7BVYXisZuZyTwwPnYT7/AvjliAZy/U8j+jmTt9/Mv1seavr5fXj7Bw==</con:value></con:property><con:property><con:name>tName</con:name><con:value>WithRightsLockerDataGet and MUC</con:value></con:property><con:property><con:name>sName</con:name><con:value>ISC_TestCases</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>D8BE7D11CB019805E0401F0A07992E11</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>D8BE7D11CAE49805E0401F0A07992E11</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>7600</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>connection</con:name><con:value>close</con:value></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D14403889CD0F3ECE0401F0A07992161/User/urn:dece:userid:org:dece:D14403889CDFF3ECE0401F0A07992161/Policy/urn:dece:type:policy:UserLinkConsent</con:value></con:property><con:property><con:name>policyId</con:name><con:value>urn:dece:type:policy:UserLinkConsent</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D8BE7D11CAE49805E0401F0A07992E11/User/urn:dece:userid:org:dece:D8BE7D11CB019805E0401F0A07992E11/Policy/urn:dece:type:policy:UserLinkConsent</con:value></con:property><con:property><con:name>ENNODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD3DD6C150D6CC4DCE0401F0A0799470D</con:value></con:property><con:property><con:name>ENNODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD3CD44C830AA5460E0401F0A079913BD</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AUserLinkConsent</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD8BE7D11CAE49805E0401F0A07992E11</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD8BE7D11CB019805E0401F0A07992E11</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\ISC_Nodes\7600.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateMUC_nodes" searchProperties="true" id="02e196fd-6a33-458f-a779-20bdcb8f65f6"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="4a1fa38b-4b5a-43bc-b4ac-c8b2cd422c62"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("ENCODED_NODE_USER_ID",null);
tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("SAML",null);
tC.setPropertyValue("expectErrType",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="78a51972-e97c-4fcc-a444-ae8c86a62bc6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("NODE_USER_ID",callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID",callTC.getPropertyValue("NODE_ACCOUNT_ID"));

if (tP.getPropertyValue("V2")=="06" || tP.getPropertyValue("V2")=="07"){
			tC.setPropertyValue("ENCODED_NODE_USER_ID", URLEncoder.encode("urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"), "UTF-8"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			}else{
				tC.setPropertyValue("ENCODED_NODE_USER_ID", "urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			}
			
tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));
tC.setPropertyValue("expectErrType",callTC.getPropertyValue("PolicyCreateResponseType"));
tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:ManageUserConsent", "UTF-8"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="45db53d0-e287-4b60-a809-f9e6735e4f2f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreateSinglePolicyPost_MUC");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="517a95b3-ce83-437a-827d-5e49fdb10fa1">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreateSinglePolicyPost_MUC');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;
/*

def expXML = tStep.httpRequest.response.getResponseContent();
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/
tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                              log.info "V2: "+tP.getPropertyValue("V2");
			if (tP.getPropertyValue("V2")=="06" || tP.getPropertyValue("V2")=="07"){
			contentLocation = URLDecoder.decode(value[0], "UTF-8");
			}else{
				contentLocation = value[0];
			}
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="6a93b9aa-b6dc-4adf-983f-0d78466e7a19">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVfbkqLKEn33Kwzn0bC5ibeY7ojiImKLCuL15QQWJaAISoGgX78LHG3t6Z49+zx02JVUZq3MXCSrfmJr77MdgDGKYi8Myqr0Wvkf30R83eZRrQ4Zpla36E3NWrON2qbV3LRZG67tNlspqxgnSA1wbAXxa4WlGa5GczWWNxm6U293aPqFa7RXlfIMRZiEJlte6Eo52/sB7hTHvlaSKOiEFvZwJ7D2CHdi2JkAbdAhOzvWDVPl7ecVZXFg9ObG8aFDUfDFRhD5PnyB4Z76ST3t+WnjzsRzAitOIvTrTBu/Vn75pmn6knIvYeRQLE3TFN2myB4be86Pylvp5oxsNdiE17VoBWHgQcv3LlYOSkOxG9pl4Dth5MXu/pvQDMXQeegaymANMvXgR4X6OKBA95eRnkBG2Kph12JuwQy0QREKICpPDfW18uPvOnj1NSMrwJsw2uNP6/8GCQUn5IcHZNfwLbMbur+P+EW53n4i2FED6CfYO6FhTpODBREujyO08bKBhwn5bFwu2l/O8I1hCP6XlvykHnES2NQXlZE8B+H4/+nXY6+uUWaWn6C38UrSqWDcG8nn9XSihLgnXS7Z1FjX1dcCwuPmK6h7q3+tPxP1zqtfTj3a2U8nTqi2GL4BxWYUpiBR8FZJdlGPmUm7YNg4XS6c7u4kVtyOqvUWUt05VM79dXhsu6B1nk/E9ozbbLel6pjjpqA1gbvM2gRznFCzSRXGYyVdDAPZ2qheuA3n/RbHZ/p4wKirPlflhrsGVBdO60R1OecgYUrZL3BjWgrhZqoK+plNVzE+sntuQb9+5PSYQ57XOzoXSeb/L3i6LVmxdV+I+aTYkNczRm+aqkrJRRTBeeKAVBWAQ/62YCg4u6O785R2SgtA17tAEgV/Kw80sFMAM5UFVxNnMy0TL6AvOMMZcTRLwF8JmiGnUrqUZrrek1PXtJXZea34yeoiDzWAC2fR1WRDnkmGKWsaCK+2TJPWSrbVJlqq6kupRAJIcna42Eo7RkrmQVbltQnPLid8slrMiL17HuyHp7Up+5qoKeLkqEzUNSfpch8YyzlkuwnxvQz2h7C0nAoPTv0D2gLUTWlyJrho5i7VzCk7lAyrsJnPNk1V+pqOU1EvslJKctqfTS8ftRAFTbT3ciabYHytBTTF7pBeLfrYmvOBZoBUcgrndzm1Rzcgmk6nJfFaq4GcGrIxHXY1Q01lUNgkOfXxmh26a8U9QU7P+ibYPjZG1OV5NyDPA+MEz/yxZCldsN7PGMgZLvR4z1qEqbNqpZK+7L+HK5WEGQJdFgQdEEA0yFMj9RfAQJjxo4PXZj002HTDPXKjksaE77vTJaNbHjdyxsM5L212zbHijTnLdinVh+yW2wFVRfY74+qWbSwpQwq8S2P0Pl0gL1pe4iGvMw2vxZeMeTJdSKHftHuL5fS9mi2hbo7Gk+l8fMmy4XHbuvhxbyT0oklfk5zREKExhlWKtrqC2ZJ4cdnbEj5tDBrxJeBoAgDK1nFkjxBY6G2vJOwZmkzICzQxVcS5qEyAolRlVZB0fdN1mTFUZsmUGWqqbPukTOflwvBLK1GQSKdoa746LNkuvTKBXQTT63LX0ad8tb9AK33om7MYpIfZJmAYWjnovY2WOlDLGWCr6UQgb5FQSlQwtUaHPp29zxo0c9Rtvz9pgymXTdhdNnKd1XnnrHakKcuHV2dpAn9mPnBMJRSbl3RTNjTQur5vmaZOOcOH++yw3sNMMknPCufQFGSjq9PTTJLA+9WGTcBmeHmRt5ooF/4lkGkWocVpvXDxMhh6I1NOCGmTB7ps1yz9rxzLKVZ65thRBDr4zDH5yjEZbI5VtSUxmG+IBzxPHUGRj3pzNui3D7S+GOxKQrVLObHn10dBKzXfq3PmnDbdrT6ft1XJFavBZuly61igrQvUUX/XVDxjJwWNun/WBprOTz3KP9NbdEzxoDRUmUDm4kuXakdJVdivvD0Z13V2uh9PkpM6td4xc3bXx3k73Y57DYqKlDN/aa5OencRwuX1O/J5SN6N1zFKPQ7Ypwl8016TZL1FML4t8++wKpW75ONoxX/WcbnFs2ubYmvnkItBHKMgrrzlXrmG6yRE6Xl2h3w5r2upJchNiWFEgWbaLZqX6TrNdGlAN9ttVmaYm9i7ovgEUQyDjZeflcvZ68f6zwDhvoNRYKOodgoT6CJc+UPEvF5lNTCICgkDjMyQyOVuA9RlVmozdLdNt5p0V+IaYrMtyBIttbkWqJSHYTwKRhHYxCh6lsrck1Q2EPQOHsr1dC4qMFEVOCYlOVqnJPaZl5P1EqCEKO4oF70dtt7iKeztDz7KAVP70E589HJwD0WBKHz9ZWsWxIW12aDpQu18m9/nZ7dSkD22l2/AeTICIu1Ev4n+Voe/ZfJ9xo3HjG/hQWJ7uaghdY0jD16RPD/6oEvOkztX8pRumO9bPxuewlKfM7qfZJ88eGf8/U5EJDURXW+3hhytl+NLcjolRQuauaCMSHiKoegGNUEwIarwbIY7FFD3ENRfCfI76k8n3+3P+JLYDSYxeZv3hDDlYvkXt7EJwvltTCWEz/72qvd0JKlbjLL4K5vok0tbjviP9zrYgfk+Yh6TnzSM7I92fRHr4RySZz6+vMDJV7n8Pn/DChiSsB4ZYWH0GPyrAF8d/my8F/mOJSZsWicx+v5JOZ9NrxULwjAJYlWqFIbHeVngjM8H1PnY9FuYQgD/utFk+NsbzUIbTMjk2luV+17v3zfXvIIuEBEv7BVYXisZuZyTwwPnYT7/AvjliAZy/U8j+jmTt9/Mv1seavr5fXj7Bw==</con:value></con:property><con:property><con:name>tName</con:name><con:value>WithRightsLockerDataGet and MUC</con:value></con:property><con:property><con:name>sName</con:name><con:value>ISC_TestCases</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>D8BE7D11CB019805E0401F0A07992E11</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>D8BE7D11CAE49805E0401F0A07992E11</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>7600</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D8BE7D11CAE49805E0401F0A07992E11/User/urn:dece:userid:org:dece:D8BE7D11CB019805E0401F0A07992E11/Policy/urn:dece:type:policy:ManageUserConsent</con:value></con:property><con:property><con:name>ENNODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD3CD43AEEE91F252E0401F0A079913BF</con:value></con:property><con:property><con:name>ENNODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD3CD44C830AA5460E0401F0A079913BD</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AManageUserConsent</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD8BE7D11CB019805E0401F0A07992E11</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD8BE7D11CAE49805E0401F0A07992E11</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\ISC_Nodes\7600.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f2eeb936-13ad-4f02-a213-128d8a600f31</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="STS_API" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="96fdea5e-3165-42ad-86cd-31f66cb06840">
      <con:settings/>
      <con:testStep type="groovy" name="Establish Test Case Properties" id="bb2e92b9-dc86-4f49-ae0a-deeb71f07d16">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("tokentype",null);
tC.setPropertyValue("audience",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);

tC.setPropertyValue("expectErrType","SUCCESS");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="6bcb6e2f-0c39-4dbe-ab39-5ba90771ddf5">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def dbUtils;

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

def callTS = tP.getTestSuiteByName(callTSname);

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("username",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
	tP.setPropertyValue("audience",callTS.getPropertyValue("audience"));
}
else
{
	tC.setPropertyValue("tokentype",URLEncoder.encode(tP.getPropertyValue("urntokenType_userpassword"), "UTF-8"));
	tP.setPropertyValue("audience",URLEncoder.encode(callTS.getPropertyValue("audience"), "UTF-8"));
}

	</script></con:config>
      </con:testStep>
      
      
      
      
      <con:testStep type="groovy" name="Establish pem" id="94b59c95-ff72-47e3-9fd0-fd8d7afd897f">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("POST - STS");
RestTestRequestStep testStep1 = tC.getTestStepByName("GET - STS");

def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);</script></con:config>
      </con:testStep>
      
      <con:testStep type="restrequest" name="POST - STS" id="55861e87-d000-4e3f-a460-80253badf0e6"><con:settings/><con:config service="STS" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/SecurityToken/SecurityTokenExchange" methodName="STSCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - STS" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="RET_concat.pem" id="f83e537b-514e-48e2-a1c0-f42c1b4875fc"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes" ?> 
  <Credentials xmlns="${#Project#coordinatorSchema}">
  <Username>${#TestCase#username}</Username> 
  <Password>${#TestCase#password}</Password> 
  </Credentials>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="audience" value="${#Project#audience}"/>
  <con:entry key="tokentype" value="${#TestCase#tokentype}"/>
</con:parameters></con:restRequest></con:config></con:testStep>
      <con:testStep type="groovy" name="Extract Response Body and Headers" id="5f26ab80-49a7-4b7f-a8ac-214d6e575899">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def tStep = tC.getTestStepByName('POST - STS');

tC.setPropertyValue("status", null);
tC.setPropertyValue("connection", null);
tC.setPropertyValue("contentType", null);
tC.setPropertyValue("contentLength", null);
tC.setPropertyValue("contentLocation", null);
/*
*  Get the HTTP headers
*/
String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("V1");
String minor = tP.getPropertyValue("V2");

tP.setPropertyValue("targetURL","qa.p.uvvu.com:7001");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("status", status);
tC.setPropertyValue("connection", connection);
tC.setPropertyValue("contentType", contentType);
tC.setPropertyValue("contentLength", contentLength);
tC.setPropertyValue("contentLocation", contentLocation);

this.log.info "contentLength [$contentLength]";
this.log.info "status [$status]";
this.log.info "contentType [$contentType]";
this.log.info "contentLocation [$contentLocation]";

/*
 *if (contentLength.toInteger() > 0) {
	rawResp = new ByteArrayOutputStream();
     rawResp = tStep.httpRequest.response.getRawResponseData();
     strVal  = new String(rawResp);

     int startAssert = strVal.indexOf("&lt;?xml version=\"1.0\" ");
  
	String XMLbody  = strVal.substring(startAssert, strVal.length());
     
	tC.setPropertyValue("XMLbody", XMLbody);
}
*/</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Extract ERROR table information" disabled="true" id="18c20693-7ad0-44a2-952a-564ab8172ee7">
        <con:settings/>
        <con:config>
          <script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def a = new dbUtils.dbErrors(log,tP.getPropertyValue("targetSystem"));

tC.setPropertyValue("errorStatusCode",null);
tC.setPropertyValue("errorReason",null);
tC.setPropertyValue("errorID",null);

String xmlData = "";
String errId = "";

log.info "expectErrType[" + tC.getPropertyValue("expectErrType") + "]";

switch (tC.getPropertyValue("expectErrType")) {
	case "ADULT_CONTENT_NOT_ALLOWED":
		errId = "Policy:AdultContentNotAllowed";
		break;
	case "ACCOUNT_NOT_ACTIVE":
		errId = "AccountNotActive";
		break;
	case "API_NOT_AUTH":
		errId = "Security:RoleInvalid";
		break;
	case "BLOCKED_ACCESS_UNRATED":
		errId = "Policy:UnratedContentBlocked";
		break;
	case "CID_NOT_ACTIVE":
		errId = "ContentIDNotActive";
		break;
	case "CID_NOT_FOUND":
		errId = "ContentIDNotFound";
		break;
	case "LOGICAL_ASSET_NOT_ACTIVE":
		errId = "AssetLogicalIDNotActive";
		break;
	case "RT_RENT_EXPIRED":
		errId = "RightsTokenRentalExpired";
		break;
	case "RT_NOT_FOUND":
		errId = "RightsTokenNotFound";
		break;
	case "RT_NOT_ACTIVE":
		errId = "RightsTokenNotActive";
		break;
	case "RATING_POLICY":
		errId = "RatingPolicyExists";
		break;
	case "CID_NOT_GRANTED":
	case "STREAM_RIGHTS_NOT_GRANTED":
		errId = "StreamRightsNotGranted";
		break;
	case "STREAM_COUNT_EXCEEDED":
		errId = "AccountStreamCountExceedMaxLimit";
		break;
	case "STREAM_COUNT_EXCEEDED_USER":
		errId = "UserStreamCountExceedMaxLimit";
		break;
	case "STREAM_INVALID_TRANS":
		errId = "StreamTransactionIdInvalid";
		break;
	case "STREAM_ACCOUNTID_MISMATCH":
		errId = "AccountIdUnmatched";
		break;		
	case "STREAM_NICKNAME_TOO_LONG":
		errId = "StreamClientNicknameTooLong";
		break;		
	case "STREAM_WINDOW_NOT_ALLOWED":
		errId = "StreamAssetWindowNotAllowed";
		break;
	case "STREAM_OWNER_MISMATCH":
		errId = "StreamOwnerMismatch";
		break;
	case "STREAM_NOT_FOUND":
		errId = "StreamNotFound";
		break;
	case "STREAM_NOT_ACTIVE":
		errId = "StreamNotActive";
		break;
	case "USER_NOT_MATCH_TOKEN":
		errId = "UserIdUnmatched";
		break;
	case "USER_NOT_ACTIVE":
		errId = "UserNotActive";
		break;
	case "USER_NOT_SUPPLIED":
		errId = "UserNotSpecified";
		break;
}

try {
	xmlData = a.errGetIdInfo(errId);
	
	assert xmlData.trim().length() > 1;

	def myXML = new XmlSlurper().parseText(xmlData);

	log.info myXML.ResultSet.Row.size();
	tC.setPropertyValue("errorStatusCode", myXML.ResultSet.Row[0].STATUS_CODE.toString());
	tC.setPropertyValue("errorReason", myXML.ResultSet.Row[0].REASON.toString());
	tC.setPropertyValue("errorID", myXML.ResultSet.Row[0].ERROR_ID.toString());

	/*
	*  The DB does not contain the complete HTTP status
	*  string, only the code.  Thus, we must adjust.
	*/
	switch (tC.getPropertyValue("errorStatusCode")) {
		case "400":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 400 Bad Request");
			break;
		case "403":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 403 Forbidden");
			break;
		case "404":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 404 Not Found");
			break;
		case "409":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 409 Conflict");
			break;
	}
}
catch (Throwable e) {
	log.info "STEP FAILURE! --- " + e;
}</script>
        </con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify Response Body and Headers and save assertion" id="69059415-99a9-4054-9d3a-665fe84852c6">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def url           = tP.getPropertyValue("targetURL");
//def urnacct       = tP.getPropertyValue("urnaccount");
//def urnstream     = tP.getPropertyValue("urnstream");
def expectErrType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");
def nodeaccountid = tC.getPropertyValue("nodeaccountid");

boolean dobodyXML = true;
boolean doContentTypeHeader = true;
boolean doConnectionClose = false;
boolean doContentLocaton  = false;
boolean contentLengthZero = false;

String errorID     = "";
String errorReason = "";
String errorLink   = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
//String orgRequest  = url + "/dece/Account/" + urnacct + nodeaccountid;
String expectHTTPstatus = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = context.expand( '${#Project#expectHTTPcontenttype}' );

if (expectErrType == "") {
	expectErrType = "SUCCESS";
}

this.log.info "expectErrType is $expectErrType";
switch (expectErrType) {
	case "SUCCESS":
	default:
		expectHTTPstatus = "HTTP/1.1 201 Created";
		expectHTTPcontenttype = "application/xml";
		contentLengthZero = false;
		doContentLocaton  = true;
		doContentTypeHeader = false;
		dobodyXML = true;
	break;
}

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("status");
//assert tC.getPropertyValue("status") == expectHTTPstatus;

// Connection
log.info "doConnectionClose=="+doConnectionClose;
if (doConnectionClose) {
	this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("connection");
	assert tC.getPropertyValue("connection") == expectHTTPconnection;
}
/*
//Content-Length
if (contentLengthZero) {
	//assert tC.getPropertyValue("contentLength").toInteger() > 0;
} else {
	//assert tC.getPropertyValue("contentLength").toInteger() > 0;
}
*/	

if (doContentTypeHeader) {
	assert tC.getPropertyValue("contentType") == expectHTTPcontenttype;
}

// Content-Location
log.info "doContentLocaton=="+doContentLocaton;
if (doContentLocaton) {
	assert tC.getPropertyValue("contentLocation") != null;
	
	def b = tC.getPropertyValue("contentLocation").toURL();
	log.info "Path=="+b.getPath();
	assert b.getPath().matches("/rest/$major/$minor/SecurityToken/Assertion/[_,0-9,a-f,-]*");
	def parms = b.getPath().split("/");
	tC.setPropertyValue("assertionUUID",parms[parms.size() - 1]);
} else {
	//assert tC.getPropertyValue("contentLocation") == null;
}

if (dobodyXML) {
	if (XMLbody.length() > 0) {
		def myXML = new XmlSlurper().parseText(XMLbody);

		// Verify response sizes...
		assert myXML.saml2:Assertion.size() == 1;
		assert myXML.ds:Signature.size()    == 1;
		assert myXML.ds:SignedInfo.size()   == 1;
		assert myXML.ds:DigestValue.size()  == 1;
		assert myXML.ds:SignatureValue.size()  == 1;
		assert myXML.ds:X509Certificate.size() == 1;
		assert myXML.saml2:NameID.size()    == 1;
		assert myXML.saml2:AudienceRestriction.size() == 1;
		assert myXML.saml2:AssertionURIRef.size() == 1;
		assert myXML.saml2:AssertionURIRef.size() == 1;
	}
}</script></con:config>
      </con:testStep>
      
      
      
      
      
      
      
      
      
      
      <con:testStep type="groovy" name="Return the assertion information to the Calling Test Case" id="20461525-048a-4536-8678-4455b7855583">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("assertionUUID",null);
callTC.setPropertyValue("assertionUUID",null);
callTC.setPropertyValue("assertionUUID",tC.getPropertyValue("assertionUUID"));
callTC.setPropertyValue("assertionUUID1",tC.getPropertyValue("assertionUUID"));</script></con:config>
      </con:testStep><con:testStep type="restrequest" name="GET - STS" id="8fe4918b-9c80-4756-b413-43acab56631f"><con:settings/><con:config service="STS" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/SecurityToken/Assertion/{assertionUUID}" methodName="STSGet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - STS" mediaType="application/xml" sslKeystore="RET_concat.pem" accept="" id="dc4a921f-4f33-4852-bc57-bdb074406df1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="assertionUUID" value="${#TestCase#assertionUUID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers 1" id="1eec0579-6856-46a0-9b9c-4d551f3dbdc2">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def tStep  = tC.getTestStepByName('GET - STS');

/*
*  Get the HTTP headers
*/
String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("V1");
String minor = tP.getPropertyValue("V2");
String XMLbody = "";

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

//def expXML = tStep.httpRequest.response.getResponseContent();
this.log.info tStep.httpRequest.response.getRawResponseData();
//new b = tStep.httpRequest.response.getResponseContent();

rawResp = new ByteArrayOutputStream();

rawResp = tStep.httpRequest.response.getRawResponseData();
strVal  = new String(rawResp);
log.info strVal;

int startAssert = strVal.indexOf("&lt;?xml version=\"1.0\" ");
log.info  "startAssert: "+startAssert;

if (startAssert > 0) {
	XMLbody  = strVal.substring(startAssert, strVal.length());
}

tC.setPropertyValue("XMLbody", XMLbody);
tC.setPropertyValue("status", status);
tC.setPropertyValue("connection", connection);
tC.setPropertyValue("contentType", contentType);
tC.setPropertyValue("contentLength", contentLength);
tC.setPropertyValue("contentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Extract Key Elements from &lt;Assertion> Body" id="48bbe8d6-e5f5-4efa-9cca-4e5041d67e39">
        <con:settings/>
        <con:config><script>
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def XMLbody = tC.getPropertyValue("XMLbody");
def expectErrType = tC.getPropertyValue("expectErrType");

int lastColon = 0;
int lastSlash = 0;

if (expectErrType == "" || expectErrType == "SUCCESS") {
	tC.setPropertyValue("SAML",null);
	tC.setPropertyValue("NODE_ACCOUNT_ID",null);
	tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
	tC.setPropertyValue("NODE_USER_ID",null);
	tC.setPropertyValue("NODE_USER_ID_FULL",null);
	
	if (XMLbody.length() > 0) {
		def myXML = new XmlSlurper().parseText(XMLbody).declareNamespace(saml2: "urn:oasis:names:tc:SAML:2.0:assertion");

			// Verify response sizes...
			assert myXML.size() == 1;

			def accountId = myXML."saml2:AttributeStatement"."saml2:Attribute"."saml2:AttributeValue";
			def userId    = myXML."saml2:Subject"."saml2:NameID";
			def NotBefore = myXML."saml2:Conditions".@NotBefore.text();
			def NotOnOrAfter = myXML."saml2:Conditions".@NotOnOrAfter.text();
			def AudienceRestriction = myXML."saml2:Conditions".AudienceRestriction;
			
			this.log.info "accountId [$accountId]";
			this.log.info "userId [$userId]";
			this.log.info "NotBefore [$NotBefore]";
			this.log.info "NotOnOrAfter [$NotOnOrAfter]";
			this.log.info "AudienceRestriction [$AudienceRestriction]";
						
			//tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",accountId.toString());
			//tC.setPropertyValue("NODE_USER_ID_FULL",userId.toString());
			tC.setPropertyValue("assertionNotBefore",NotBefore.toString());
			tC.setPropertyValue("assertionNotOnOrAfter",NotOnOrAfter.toString());
			tC.setPropertyValue("assertionAudienceRestriction",NotBefore.toString());
			tC.setPropertyValue("NODE_ACCOUNT_ID",accountId.toString().substring(accountId.toString().lastIndexOf(':') + 1).toString());
			tC.setPropertyValue("NODE_USER_ID",userId.toString().substring(userId.toString().lastIndexOf(':') + 1).toString());
			
			if (tP.getPropertyValue("V2") != tP.getPropertyValue("versionURLEncode"))
			{
                    tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",accountId.toString());
				tC.setPropertyValue("NODE_USER_ID_FULL",userId.toString());
        	     } 
        	     else 
        	     {
				tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(accountId.toString()));
				tC.setPropertyValue("NODE_USER_ID_FULL",URLEncoder.encode(userId.toString()));        	     	
		     }
	} 
	else {
		return false;
	}
}</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="148aa13a-5c99-4938-927e-647856de4cb8">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def url           = tP.getPropertyValue("targetURL");
//def urnacct       = tP.getPropertyValue("urnaccount");
//def urnstream     = tP.getPropertyValue("urnstream");
def expectErrType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");
def nodeaccountid = tC.getPropertyValue("nodeaccountid");

boolean dobodyXML = true;
boolean doContentTypeHeader = true;
boolean doConnectionClose = false;
boolean doContentLocaton  = false;
boolean contentLengthZero = false;

String errorID     = "";
String errorReason = "";
String errorLink   = "";
//String orgRequest  = url + "/dece/Account/" + urnacct + nodeaccountid;
String expectHTTPstatus = "HTTP/1.1 200 OK";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = context.expand( '${#Project#expectHTTPcontenttype}' );

if (expectErrType == "") {
	expectErrType = "SUCCESS";
}

this.log.info "expectErrType is $expectErrType";
switch (expectErrType) {
	case "SUCCESS":
	default:
		expectHTTPstatus = "HTTP/1.1 200 OK";
		expectHTTPcontenttype = "application/xml";
		contentLengthZero = false;
		doContentLocaton  = false;
		doContentTypeHeader = false;
		dobodyXML = true;
	break;
}

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("status");
//assert tC.getPropertyValue("status") == expectHTTPstatus;

// Connection

if (doConnectionClose) {
	this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("connection");
	assert tC.getPropertyValue("connection") == expectHTTPconnection;
}
/*
//Content-Length
if (contentLengthZero) {
	//assert tC.getPropertyValue("contentLength").toInteger() == 0;
} else {
	//assert tC.getPropertyValue("contentLength").toInteger() > 0;
}
*/	

if (doContentTypeHeader) {
	assert tC.getPropertyValue("contentType") == expectHTTPcontenttype;
}

// Content-Location
if (doContentLocaton) {
	assert tC.getPropertyValue("contentLocation") != null;
	
	def b = tC.getPropertyValue("contentLocation").toURL();
	assert b.getPath().matches("/dece/SecurityToken/Assertion/[0-9,a-f,-]*");
	def parms = b.getPath().split("/");
	
	tC.setPropertyValue("assertionUUID",parms[parms.size() - 1]);
} else {
	assert tC.getPropertyValue("contentLocation") == null;
}

if (dobodyXML) {
	if (XMLbody.length() > 0) {
		def myXML = new XmlSlurper().parseText(XMLbody);

		// Verify response sizes...
		assert myXML.saml2:Assertion.size() == 1;
		assert myXML.ds:Signature.size()    == 1;
		assert myXML.ds:SignedInfo.size()   == 1;
		assert myXML.ds:DigestValue.size()  == 1;
		assert myXML.ds:SignatureValue.size()  == 1;
		assert myXML.ds:X509Certificate.size() == 1;
		assert myXML.saml2:NameID.size()    == 1;
		assert myXML.saml2:AudienceRestriction.size() == 1;
		assert myXML.saml2:AssertionURIRef.size() == 1;
		assert myXML.saml2:AssertionURIRef.size() == 1;
/*
		
		// ErrorCode
		this.log.info "ErrorCode: Expect[$errorID] Received: " + myXML.Error.@ErrorID.toString();
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason: Expect[$errorReason] Received: " + myXML.Error.Reason.toString();
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorReason: Expect[$errorLink] Received: " + myXML.Error.ErrorLink.toString();
		assert myXML.Error.ErrorLink.toString() == errorLink;
		*/
	} else {
		return false;
	}
}



</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Deflate and encode the &lt;Assertion>" id="c144772b-c2dc-4c8e-abd2-155ea169cbb3">
        <con:settings/>
        <con:config><script>import java.util.zip.Deflater;
import org.w3c.tools.codec.Base64Encoder;
import java.io.ByteArrayOutputStream;
import java.util.zip.DeflaterOutputStream;
import java.lang.*;

import org.opensaml.xml.util.Base64;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)


int compressedLength = 0;
//String XMLbody = tC.getPropertyValue("XMLassertion").toString();
String XMLbodyRaw = tC.getPropertyValue("XMLbody").toString();

int startAssert = XMLbodyRaw.indexOf("&lt;saml2:Assertion ");
int endAssert   = XMLbodyRaw.indexOf("&lt;/saml2:Assertion>");


String XMLbody = XMLbodyRaw.substring(startAssert, endAssert + 18).trim();
String base64encodeStr = "";

this.log.info "XMLbody is [$XMLbody]";

def myXML = new XmlSlurper().parseText(XMLbody);
tC.setPropertyValue("assertId",myXML.@ID.toString());

// Perform Deflation
//byte[] xmlBytes = XMLbody.trim().getBytes();
byte [] xmlBytes = new byte[XMLbody.trim().length()];

Deflater compresser = new Deflater(Deflater.DEFLATED, true);
compresser.setInput(XMLbody.trim().getBytes());
compresser.finish();
compressedLength = compresser.deflate(xmlBytes);

byte [] subArray = Arrays.copyOfRange(xmlBytes, 0, compressedLength);
base64encodeStr = Base64.encodeBytes(subArray,Base64.DONT_BREAK_LINES);
// finally, URL encode it
tC.setPropertyValue("SAML", "SAML2 Assertion="+base64encodeStr);


</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Return extracted Properties back to calling Test Case" id="c82bddda-72f4-44e4-97a2-cc81c1c9062b">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

String acctID = tC.getPropertyValue("NODE_ACCOUNT_ID");
String userID = tC.getPropertyValue("NODE_USER_ID");

callTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));
//callTC.setPropertyValue("SAML_USER1",tC.getPropertyValue("SAML"));

if (acctID != null &amp;&amp; acctID.length() > 0) {
	
	callTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
	//callTC.setPropertyValue("NODE_ACCOUNT_ID1",tC.getPropertyValue("NODE_ACCOUNT_ID"));
	callTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
	//callTC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
} else {
	callTC.setPropertyValue("assertionAccountId","ERROR");
}
if (userID != null &amp;&amp; userID.length() > 0) {
	callTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID"));
	//callTC.setPropertyValue("NODE_USER_ID1",tC.getPropertyValue("NODE_USER_ID"));
	callTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
	//callTC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL"));
} else {
	callTC.setPropertyValue("assertionUserId","ERROR");
}</script></con:config>
      </con:testStep><con:properties>
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
      <con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>tName</con:name><con:value>Account_Create_Firsrt_User_Create_STS_Policies</con:value></con:property><con:property><con:name>sName</con:name><con:value>First_User_Create</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>audience</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value>ugr4_bc_firstuser20150205_040822</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>connection</con:name><con:value>close</con:value></con:property><con:property><con:name>contentType</con:name><con:value>text/xml;charset=UTF-8</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>2950</con:value></con:property><con:property><con:name>contentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorStatusCode</con:name><con:value/></con:property><con:property><con:name>errorReason</con:name><con:value/></con:property><con:property><con:name>errorID</con:name><con:value/></con:property><con:property><con:name>assertionUUIDprior</con:name><con:value>_732606f9-3702-470e-9ecf-2bbb514a18ba</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_46e5a43d-12ee-4d90-add0-2a4b5a0d37cf</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<?xml version="1.0" encoding="UTF-8"?><saml2:Assertion xmlns:saml2="urn:oasis:names:tc:SAML:2.0:assertion" ID="_46e5a43d-12ee-4d90-add0-2a4b5a0d37cf" IssueInstant="2015-02-05T10:36:16.922Z" Version="2.0" xmlns:xs="http://www.w3.org/2001/XMLSchema"><saml2:Issuer>http://c.decellc.com/</saml2:Issuer><ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#"><ds:SignedInfo><ds:CanonicalizationMethod Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"/><ds:SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/><ds:Reference URI="#_46e5a43d-12ee-4d90-add0-2a4b5a0d37cf"><ds:Transforms><ds:Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/><ds:Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"><ec:InclusiveNamespaces xmlns:ec="http://www.w3.org/2001/10/xml-exc-c14n#" PrefixList="xs"/></ds:Transform></ds:Transforms><ds:DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/><ds:DigestValue>Ow1quKNjZCFVbQkeGyNNWrEnBOU=</ds:DigestValue></ds:Reference></ds:SignedInfo><ds:SignatureValue>EZaIiyZYlTvETm5FijBLMk/4KbRUZP8WgWhUVHpdTAML2JHBHBnb2HqdPluMIg0OPiZitq/hFrx9hCwf97qydcwhWXOGVcknv4+wGjkfQeusOgHWRs11ewYAke8wHGeRuMFpPEKy2Ak/rJQWYTPrdHuZEQj9v1ar1Cn9b1KU5ZA=</ds:SignatureValue></ds:Signature><saml2:Subject><saml2:NameID Format="urn:oasis:names:tc:SAML:2.0:nameid-format:persistent">urn:dece:userid:org:dece:0E55DA062BB0684DE05305991F0AFBF3</saml2:NameID><saml2:SubjectConfirmation Method="urn:oasis:names:tc:SAML:2.0:cm:sender-vouches"><saml2:SubjectConfirmationData InResponseTo="_1ji0xpczzvf9gam6ef7k01hja" NotOnOrAfter="2015-02-05T13:36:16.922Z" Recipient="https://stdecqavutl1.va.neustar.com:2485/simplesaml/module.php/saml/sp/saml2-acs.php/RET"/></saml2:SubjectConfirmation></saml2:Subject><saml2:Conditions NotBefore="2015-02-05T10:36:06.922Z" NotOnOrAfter="2015-02-05T16:36:16.922Z"><saml2:AudienceRestriction><saml2:Audience>urn:dece:org:org:dece:RET_CS_1</saml2:Audience><saml2:Audience>urn:dece:org:org:dece:RET</saml2:Audience></saml2:AudienceRestriction></saml2:Conditions><saml2:Advice><saml2:AssertionURIRef>https://qa.q.uvvu.com:7001/rest/2015/02/SecurityToken/Assertion/_46e5a43d-12ee-4d90-add0-2a4b5a0d37cf</saml2:AssertionURIRef></saml2:Advice><saml2:AuthnStatement AuthnInstant="2015-02-05T10:36:16.922Z" SessionIndex="_46e5a43d-12ee-4d90-add0-2a4b5a0d37cf"><saml2:AuthnContext><saml2:AuthnContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:Password</saml2:AuthnContextClassRef><saml2:AuthenticatingAuthority>urn:dece:org:org:dece:coordinator</saml2:AuthenticatingAuthority></saml2:AuthnContext></saml2:AuthnStatement><saml2:AttributeStatement><saml2:Attribute Name="accountID" NameFormat="urn:dece:type:accountID"><saml2:AttributeValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xs:string">urn:dece:accountid:org:dece:0E55DF4069BB33EDE05307991F0A2BFA</saml2:AttributeValue></saml2:Attribute></saml2:AttributeStatement></saml2:Assertion>]]></con:value></con:property><con:property><con:name>username1</con:name><con:value>firstuser20130726_035156</con:value></con:property><con:property><con:name>SAML</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SAML2 Assertion=nVbZcuI6EP0VyvN4y1g2S4IrUMUamIRAgCQTXlJCbkBgyyDJLPn6kQw4QJbLvU+ubre6Ty866huBA99xy0IAlzRkqU3gM+HG2qIRceaGWFDhMhyAcCVx++X2veukkYsPR4xUq1Y03rJ5yOFsxjNtB8DMegVkYs9DpoOzoxxGXuaKjJWpEBG0mJCYyaLhIDtnIsdEuYGN3EzetfPpguMMjdQzcKF8K5M0MvagNqJoTKVcuJa1Xq/T60w65BPLQci2/rTv+2QKATZKN7uM4kC8tLcnaQ8I+D5JkzCwbqwTmxtPuH06YVhGHPaxvO9iIQsVLGXjCTr5ZSRnwWuxcRiLVcxCRgn26TvW9WmDnIZequxPQk7lNPg2CRtpxyZsiEnsLPtlWKfQLnR0gpALbIoptve+ejAGDoxA6qnXKhq/LutafHTAMRPjkAfiVPxveICtwA8X4JnikNYe2uUOv6hU6QaI22LEjwRdwYMe1gUmIPbdBHK5q1SXw5hu7qlQA7oRGp11DO9M3FWjRicg5P9p0FFzdk6esR9BqbO2l9Hdw2xYbTyPHudwu314eOF1Vuk8FWMAx8axImntTjwbymSIdifqQ9yi2+GrP1jVB0GuQWeV+/bcyt6Nek/D7vXL5GX69NxceAN1253fzUqzwkZOc+l1/ajdmqBOlw6pXFrTBt8UptX1uHC13HpkPX3507l9JnO2yv6zvp3Nx48Qic6k+dITtg3r1/IcrtfNW+hF7caiW7/bOuW5xX8/vrwOutxrRsP646ywsjG3q6wwsu+ecsNyMUnnCP+p7nDn+9FoBkQeRD0GrVqqobqE5c9kpjXUM8exqbvQ5CMkMGmU9CnNHW6k6I56rurhTkb1XK5WRnmnUkH562ytjnIZlCsU7AYqNyqNzIFkdijOIFZDNqY6lqbc3dj8DJAErgDmATdXYaSYThg/eKxhiVMt1lOXIGQCBqGiZ3tG0WZB3t9X48IEB3kYX82RPZ1hI/UQyg7r8PJYAj/l5MwJJ/eA0AUFTdx6roUabCFVLZZ4FUnfTq9wmql+S8w1y7pO9jpnCRosfNBIrSD0Ih/Si+kirowldl/HxETE2l59EN+2b/M6/3cogbLxqDYQOpcKqDbCF48LOiTyfcL544QP7suRR/XFUvWUnJIdktNfH2Oi5yOZEZXRW7X/Zh9wJ+YXH/980voBlHVejySQt6JHYQ9Pt3oEFG2UDt1c4vQyHa1WUdy/K02PXLm3dIUs5Fh9IJEitu0gnAOzEi/WRa9IAvwseKI/hRjJKetLLCFQA5eKxQvWhj4IvTa01E3ZXLqTnIRUpZOwkV/pqr5aeTTiH7ci4hJtp9Rd9VmH3Pvo2Be+juKoPNXWICmbaEm/INtv5oKEyi1V3BfyY+dfOfgq+KkyKXKCRaqBGkUSvv+T0qRWNDAhYcRkq2bEimOijXHK7QLcD6NPbmIuT5Y7+u/bnUnjESCgVkJBY//6jXb1FWCTI7LeB/3E140syhcqlUymvuPrqx1fO5VGOSnKCbrSJ/VnzVGdzme89Bc=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>0E55DF4069BB33EDE05307991F0A2BFA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A0E55DF4069BB33EDE05307991F0A2BFA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>0E55DA062BB0684DE05305991F0AFBF3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A0E55DA062BB0684DE05305991F0AFBF3</con:value></con:property><con:property><con:name>assertionNotBefore</con:name><con:value>2015-02-05T10:36:06.922Z</con:value></con:property><con:property><con:name>assertionNotOnOrAfter</con:name><con:value>2015-02-05T16:36:16.922Z</con:value></con:property><con:property><con:name>assertionAudienceRestriction</con:name><con:value>2015-02-05T10:36:06.922Z</con:value></con:property><con:property><con:name>assertId</con:name><con:value>_46e5a43d-12ee-4d90-add0-2a4b5a0d37cf</con:value></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>555384c9-6fa2-448b-a38e-713264e945f2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="User_Notification DB Validation" searchProperties="true" id="e6d93400-ec29-487d-845d-0269783271b0"><con:settings/><con:testStep type="groovy" name="User_Notification DB Validation" id="36a03322-c94f-4c44-9b0d-8ed3193a4a59"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

int cnt = 0;

	String emailAddress = tP.getPropertyValue("PrimaryEmailAddress").toString();
	String username = callTC.getPropertyValue("UserName").toString();
	String emailEvent = callTC.getPropertyValue("emailEvent").toString();
	
	String sql = """Select * FROM EMAIL_NOTIFICATION WHERE EMAIL_ADDRESS='$emailAddress' and EMAIL_DISPATCH_STATUS = 'Y' and EMAIL_NOTIFICATION_EVENT='$emailEvent' and USER_OID=(SELECT USER_OID FROM ACCOUNT_USER WHERE USERNAME='$username')""";

	log.info sql;

	try {
		a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());
		
	}
	catch(Throwable e) {
		log.info "ERROR - dbUtils.dbUtils - $e"; 
		assert 1 == 2;

		}
	finally {
		def results   = a.SelectFromDB(sql,tP.getPropertyValue("targetSystem"));
		log.info results;
	
		try {
			def myXML = new XmlSlurper().parseText(results);
			assert myXML.ResultSet.Row.size() == 1;
			
		}
		catch (Throwable e) {
			log.info "ERROR - XmlSlurper - $e";
			assert 1 == 2;
		} 
		
		}
</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>1.2. Account Create: Email Address Confirmed [Your UltraViolet account has been created]</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Notifications_Test Cases</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserGet_API" searchProperties="true" id="a9371951-a0d7-4374-b477-39820ba727c5"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="34eab9ef-094b-4ea5-b816-16bad8f3019a"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def myTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);


tC.setPropertyValue("ResponseTypeUserGet",myTC.getPropertyValue("ResponseTypeUserGet"));
tC.setPropertyValue("RequestorType",myTC.getPropertyValue("RequestorType"));
tC.setPropertyValue("RequestorClass",myTC.getPropertyValue("RequestorClass"));
tC.setPropertyValue("Requestee",myTC.getPropertyValue("Requestee"));


tC.setPropertyValue("nodeid",myTC.getPropertyValue("nodeid"));
tC.setPropertyValue("SAML",myTC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_USER_ID",myTC.getPropertyValue("NODE_USER_ID1"));
if( tP.getPropertyValue("URLEncode") == "NO")
{
	tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"))); 
	tC.setPropertyValue("NODE_USER_ID_FULL",URLDecoder.decode(myTC.getPropertyValue("NODE_USER_ID_FULL1")));
}
else
{
	tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1")))); 
	tC.setPropertyValue("NODE_USER_ID_FULL",URLEncoder.encode(URLDecoder.decode(myTC.getPropertyValue("NODE_USER_ID_FULL1"))));
}
</script></con:config></con:testStep><con:testStep type="groovy" name="SetPem" id="ab184205-d3f8-4833-a390-e2590f4dff15"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("User_Get");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="User_Get" id="b1f07386-c318-46b0-a543-a144f0082f96"><con:settings/><con:config service="Users" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" methodName="UserGet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User_Get" mediaType="application/xml" sslKeystore="RET_concat.pem" id="664c76b5-bb31-40c0-a09e-db5c746d2081"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="3475aa35-aee4-44f3-bc56-b7358d0abca8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('User_Get');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String ETag = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);

//tC.setPropertyValue("ETagPrior",tC.getPropertyValue("ETag"));
tC.setPropertyValue("ETag", ETag);

//log.info "ETagPrior: " + tC.getPropertyValue("ETagPrior")+", ETag: "+ tC.getPropertyValue("ETag");
//assert tC.getPropertyValue("ETagPrior")!= tC.getPropertyValue("ETag");
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="621e6c79-25ba-4fc8-86b5-0fa7a2e3401f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseTypeUserGet}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

def RequestorType = "";
def RequestorClass = "";
def Requestee = "";

def usernamestring = "";
def givennamestring = "";
def surnamestring = "";

int firstmask = 0;
int lastmask = 0;

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#TestCase#AccountID}')+ "/User/" + context.expand('${#TestCase#UserID}');
String expectHTTPstatus      = "HTTP/1.1 200 OK";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = context.expand( '${#Project#expectHTTPcontenttype}' );
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
	break;

	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
		errorReason = "The API call is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_VALID":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserIdInvalid";
		errorReason = "The user ID is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
		expectHTTPconnection = "close";
	break;

	case "USER_INACTIVE":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
		errorReason = "The requesting member is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;

     case "URL_NOT_FOUND":
		expectHTTPstatus = "HTTP/1.1 404 Not Found";
		expectHTTPcontenttype = "text/xml"
		XMLbodynull     = true;
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	case "MTHD_NOT_ALLWD":
		expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
		expectHTTPcontenttype = "text/plain; charset=UTF-8"
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	case "USER_NOT_IN_ACC":
		expectHTTPstatus = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:UserNotFound";
		errorReason = "The user ID was not found.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotFound";
	break;

     case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;

	case "NO_ENABLE_MNG_USR_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the EnableManageUserConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:EnableManageUserConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:EnableManageUserConsentRequired";
	break;

	case "NO_MNG_USR_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageUserConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
	break;

	case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		//errorReason = "The identified account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "SPL_CS_ALLOWED_ACCT":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;

     case "SPL_CS_ALLOWED_USER":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToDeleteSuspendedUsers";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToDeleteSuspendedUsers";
     break;

    case "REQUESTEE_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorReason = "The member has been removed.";
		errorID     = "urn:dece:errorid:org:dece:AccountUserStatusDeleted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserStatusDeleted";
		expectHTTPconnection = "close";
	break;
      
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

      def a = context.expand( '${#TestCase#httpLocation}');
      def b = a.toURL();
      def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

      if (tP.getPropertyValue("V2") != tP.getPropertyValue("versionURLEncode"))
      	{                                
			assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
			
			int lastColon = urlStr.lastIndexOf(':');
			int lastSlash = urlStr.lastIndexOf('/');
			userid     = urlStr.substring(lastColon + 1);
			def node_User = urlStr.substring(lastSlash + 1);
			                                 
			tC.setPropertyValue("NODE_USER_ID",userid);			
			tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
      	} 
      else 
      	{
			assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");
			int lastColon = urlStr.lastIndexOf('%3A');
			int lastSlash = urlStr.lastIndexOf('/');
			userid     = urlStr.substring(lastColon + 3);
			def node_User = urlStr.substring(lastSlash + 1);
			                      
			tC.setPropertyValue("NODE_USER_ID",userid);			
			tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
      	}
	
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}


//

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}


if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorLink Received [" + myXML.Error.ErrorLink.toString() + "] Exp[$errorLink]";
		assert myXML.Error.ErrorLink.toString() == errorLink;

	} 
  else
  {
   //Data Types
   // RequestorType: Self, CLG, CS, Other
   // RequestorClass: BAU,SAU,FAU
   //Requestee: CHILD, YOUTH, ADULT

   RequestorType = context.expand( '${#TestCase#RequestorType}');
   RequestorClass = context.expand( '${#TestCase#RequestorClass}');
   Requestee = context.expand( '${#TestCase#Requestee}');

    // Following Fields returned for Everyone
    // Contact Info shwon only for CLG or Self or Portal:CS or DECE:CS or COORD:CS - kalyan 05092013
    if ( (RequestorType == "Other")  || (RequestorType == "CS")|| (RequestorType == "SPLCS"))
    {
         assert myXML.@UserClass.size() == 1;
         assert myXML.@UserClass.toString().matches("urn:dece:role:user:class:[a-z]*");
         
         assert myXML.Credentials.size() == 1;
         assert myXML.Credentials.Username.size() == 1;
         assert myXML.Credentials.Password.size() == 0;

         assert myXML.Name.size() == 1;
         assert myXML.Name.GivenName.size() == 1;
         assert myXML.Name.SurName.size() == 1;
            
         assert myXML.Languages.size() == 1;
         assert myXML.Languages.Language.size() > 0;
     
         assert myXML.ResourceStatus.size() == 1;
         assert myXML.ResourceStatus.Current.size() == 1;
    }
    else
    {
    	    assert myXML.@UserClass.size() == 1;
         assert myXML.@UserClass.toString().matches("urn:dece:role:user:class:[a-z]*");
         
         assert myXML.Credentials.size() == 1;
         assert myXML.Credentials.Username.size() == 1;
         assert myXML.Credentials.Password.size() == 0;

         assert myXML.Name.size() == 1;
         assert myXML.Name.GivenName.size() == 1;
         assert myXML.Name.SurName.size() == 1;
  /*      
         def a = myXML.DisplayImage.DisplayImageURL;
         log.info a ;
		//def b = a.toURL();
		//log.info b;
		 log.info "Response_DisplayImageURL: "+a.getPath();
         assert  a.matches("https://qa.uvvu.com:7001/ssp/image?type=image&amp;imageId=[0-9,A-F]*");
        log.info "here";
*/
        
         assert myXML.ContactInfo.size() == 1;
         assert myXML.ContactInfo.Address.size() == 1;
         assert myXML.ContactInfo.Address.PostalAddress.size() == 1;
         assert myXML.ContactInfo.Address.PostalCode.size() == 1;
         assert myXML.ContactInfo.Address.Locality.size() == 1;
         assert myXML.ContactInfo.Address.StateOrProvince.size() == 1;
         assert myXML.ContactInfo.Address.Country.size() == 1;
         assert myXML.ContactInfo.TelephoneNumber.size() == 1;
         assert myXML.ContactInfo.TelephoneNumber.Value.size() == 1;
         assert myXML.ContactInfo.MobileTelephoneNumber.size() == 1;
         assert myXML.ContactInfo.MobileTelephoneNumber.Value.size() == 1;
     
         assert myXML.Languages.size() == 1;
         assert myXML.Languages.Language.size() > 0;
     
         assert myXML.ResourceStatus.size() == 1;
         assert myXML.ResourceStatus.Current.size() == 1;
    }
         if ((RequestorType == "CS")|| (RequestorType == "SPLCS"))
         {
           assert myXML.ResourceStatus.History.size() > 0; 	
         } 
         else
         {
           assert myXML.ResourceStatus.History.size() == 0; 	
         }

   /******************************************************************************************************************/
           
   //Filtering fields based on PI and Access levels

   if(Requestee == "CHILD")
    {

    	  this.log.info "Getting CHILD details";
    	  
  	 if((RequestorType == "CLG") || (RequestorType == "Self") || (RequestorType == "SPLCS"))
  	 {
  	   /****************DOB, Security Token and Email Shown only to Self,CLG and CS**********/
         assert myXML.DateOfBirth.size() == 1;     
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0;
        
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;     
  	 }
  	 else
  	  {
         /****************DOB, Security Token and Email not shown to CS and others**********/
         assert myXML.DateOfBirth.size() == 0;     
       //  assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() == 0;
         //assert myXML.LegalGuardian.size() == 1; 

         assert myXML.ContactInfo.PrimaryEmail.size() == 0;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 0;
  	   

         /**************Verifying Masking of CHILD PI details *******************/
          
         usernamestring = myXML.Credentials.Username.toString();
         givennamestring = myXML.Name.GivenName.toString();
         surnamestring = myXML.Name.SurName.toString();
                
         //*************Verifying Masking of CHILD UserName details ******************

         //firstmask = usernamestring.indexOf('u');
        lastmask = usernamestring.length();
        
     log.info firstmask;
 		 log.info  lastmask;
        usernamestring = usernamestring.substring(1,lastmask-1);
        //usernamestring = "••••••";
   log.info usernamestring;
//        assert usernamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
         assert usernamestring == "••••••";

       //*************Verifying Masking of CHILD GivenName details ******************
          
        //firstmask = givennamestring.indexOf('â');
        lastmask = givennamestring.length();

         givennamestring = givennamestring.substring(1,lastmask-1);

       // assert givennamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
        assert givennamestring == "••••••";

         //*************Verifying Masking of CHILD SurName details ******************
          
       // firstmask = surnamestring.indexOf('â');
        lastmask = surnamestring.length();

         surnamestring = surnamestring.substring(1,lastmask-1);

       //assert surnamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";     
      assert surnamestring == "••••••";        
    }
  	 if ((RequestorType == "CS")|| (RequestorType == "SPLCS"))
          {
             this.log.info "Getting CHILD CLG details for CS";
             
             assert myXML.LegalGuardian.size() > 0; 

              if(myXML.LegalGuardian.size() == 1)     	
             {
           	 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");	
             }
             else
             if(myXML.LegalGuardian.size() == 2)     	
             {
                if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                	assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else
               if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
             	{
           	  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";	
               } 
            }         
          else if(myXML.LegalGuardian.size() != 0)     	
                {
            	   this.log.info "Getting CHILD Active CLG details for NonCS";
            	 
           	   assert myXML.LegalGuardian.size() == 1;   
           	   assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";	
               }
           else
               {
            	 this.log.info "Getting CHILD Pending CLG details for NonCS";
           	 assert myXML.LegalGuardian.size() == 0;  
              }
          }
    }  
   else if((RequestorClass == "FAU") || (RequestorClass == "SAU") || (RequestorType == "Self")|| (RequestorType == "SPLCS")|| (RequestorType == "CS"))
    {
    	       	  
    	    assert myXML.DateOfBirth.size() == 1; 
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0; 

         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;
         
          if(Requestee == "YOUTH")	
          {
            this.log.info "Getting YOUTH details";
            assert myXML.LegalGuardian.size() == 0; 
/*
             if(RequestorType == "CS")
            {
              assert myXML.LegalGuardian.size() > 0; 

              if(myXML.LegalGuardian.size() == 1)     	
             {
           	 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");	
             }
             else if(myXML.LegalGuardian.size() == 2)     	
             {
           	 if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                	assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
             	{
           	  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";	
               } 
            }
            else if(myXML.LegalGuardian.size() != 0)     	
            {
           	 assert myXML.LegalGuardian.size() == 1;   
           	 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";	
            }
           else
            {
           	 assert myXML.LegalGuardian.size() == 0;  
            }      	
          }
*/          
       }  
     else
        {
           this.log.info "Getting ADULT details";	
           //assert myxml.LegalGuardian.size() == 0; 	
		assert myXML.LegalGuardian.size() == 0; 	
        }
    }  
     else 
    {   
    	    this.log.info "BAU geting other's details";
    	    
    	    assert myXML.DateOfBirth.size() == 1; 
        // assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() == 0; 
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1; 
         
         if(Requestee == "YOUTH")	
          {
            if(myXML.LegalGuardian.size() != 0)     	
            {
           	 assert myXML.LegalGuardian.size() == 1;   
           	 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";	
            }
          else
            {
           	 assert myXML.LegalGuardian.size() == 0;  
            }	
          }
          else
          {
            assert myXML.LegalGuardian.size() == 0; 	
          }      	
    }       
    
  }	// end if for SUCCESS response
} // end if for XML Body Validations
</script></con:config></con:testStep><con:testStep type="groovy" name="Return_ETag_to_Calling_TestCase" id="79920801-2904-4252-b63f-94ba17aa3a96"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));</script></con:config></con:testStep><con:properties><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"07C8A32F78F9614FE05305991F0AED18:ADF6126C"</con:value></con:property><con:property><con:name>ETagPrior</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:07C8A32F78EE614FE05305991F0AED18</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>07C8A26EB01A60E7E05305991F0A415B</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E5F850C559F9CD04E0401F0A05993FCD</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C8A32A8DC86151E05305991F0A8595</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E5F850C559F9CD04E0401F0A05993FCD</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZZb+o6EP4rKOexCnHCHhUkylLlFkoPoYvOS2WcCbhNnDR2WPrrjx0gBQq93PsUzWQ8883iz3PNcRhYdptzSASNWGEVBozbmbappQmzI8wptxkOgduC2G57OLCtIrLx7ohWcLpN7dVHqGSVianX65WGXgZU1+tTBDoGVMJTqw5Tvy5NOU/BYVxgJpqahcyybpq6WZ4g0y5VbLNcrFjVP1rhCRIufUuTItK2oFa8qc2FiG3DWC6XxWWpGCUzw0LINF6GA5fMIcRa63qTURYoaW3tSdEDAkFAiiQKjWvjwOba47ZLZwyLNIFtLO9cLGSghiFtPE5nv7T8LHgO86NM7GAWMUpwQD+xqs8QxDzyCu1gFiVUzMOzSZhIOdZhRXRiltkvzTiEdqGjA4QJxzqfY3Praww+JMAIFB7HTlP7dVnXsqOTBDPuR0nID8X/hgfYAoIoBk/nu7S20C53eKJSrWsgtsNIkHK6gHs1rDEmwLfdBHK5q8JDAj5dDSiXA7riCp2xD+9I3FSjS2fAxf9p0F5zNk6ecJBCC/X59HPQX8nztUZ/Wk27YWc2ETEyUTMDsG+cKfLWbsSjocyHaHPi8TPu0uAN3ZUaT/ejkD3Phu/RLO7g1e3NcrVcu2X/uT7w38YPb6X7j9urRlQeDyf1x1mNPcdr7E79+d3b8OF2QJzRnI34ojZ1R0EpfRG/6+agN5rjOZpcEc+9i/E/eLH2k5fKNFg/DkcvV/Hwnq2d7sC1bhYJ1FbVQYi71nvsd63f46rz4lhdfBvdPa6fekv+p9fM09nDf6jb3Xk3nb4BETtRjYHTLfRll7D4mcyUhnq6n5nasSIfLoAJraVOKe6wU0l31LNlDzcyqnXqbavau0Fmu4p6tR6qlFCl0TD7qF02Kzc7ktmgOILYiZhPVSxFuZux+RkgCW0OzINEX0SpZDqu/eCxiwUuOGwsL0HEOEwiSc+1MFhOAz6lpc+SyefsrVJbVASuvGuF+0iM2Chp+wKSQ04uH3DyGAiNKSjiVnPN5WBzIWvxgRepCMziAhcZpJLaE8WytlWuVwxOwzgAhdQIIy8NoBjP46wyBt98LR0TnmnHvUl2287mdfxvVwJp41FlwFUuNyDbCCceF7RL5HzCtf2Ed+7bqUfVxZL1FAklGySHv77GRM1HPiMyo9eO+2rucOfmFx//ftL4AZRxXI88kLege2F3T7d8BCRttHbd/MDFj2K6WKRZ/2qKHhPpXnKWWTGQZbhAUkls60n0DszIvRgXvSI58KPguf4QYirmzBVYQCgHrpCJF6wNLnC1Njjypqwu3UkOQsrSCViJU7pOIFcehfjHrYjYRNlJ9YP8LKPE++rYCV97cWSecmsQlM2UpF6Q9Zm5IJF0SyX3Rcm+81MOTgU/VOZFzrEIOVDTVMD5PwVFak0NExKlTDhdLVPsE22GU6xjsL+MvrnJuDxf7ui/b3c6zUaAgFwJOc38qzfaVleAzfbIehv0G1+XrH6t3utVzXJ/n697XfNrPg/Qtb6pv2v26nQ8462/</con:value></con:property><con:property><con:name>sName</con:name><con:value>03.UserDelete_Backward_Compatability</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00030_Account and User Create with CA 111_UserDelete Standard Youth user107_SUCCESS_P0</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E603BD56DDEEF0CEE0401F0A07990E43</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E5F850C559FACD04E0401F0A05993FCD</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<dece:User UserID="urn:dece:userid:org:dece:07C8A32A8DC86151E05305991F0A8595" UserClass="urn:dece:role:user:class:standard" xmlns:dece="http://www.decellc.org/schema/2015/03/coordinator" xmlns:md="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#">
   <dece:Name>
      <dece:GivenName>usercreate20141114_070622</dece:GivenName>
      <dece:SurName>usercreate20141114_070622</dece:SurName>
   </dece:Name>
   <dece:DisplayImage>
      <dece:DisplayImageURL>https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/07C8A32A8DC96151E05305991F0A8595</dece:DisplayImageURL>
   </dece:DisplayImage>
   <dece:ContactInfo>
      <dece:PrimaryEmail VerificationStatus="urn:dece:type:status:pending">
         <dece:Value>testing@uvvutesting.biz</dece:Value>
      </dece:PrimaryEmail>
      <dece:AlternateEmail Notify="false" VerificationStatus="urn:dece:type:status:pending">
         <dece:Value>test_+126@uvvutesting.biz</dece:Value>
      </dece:AlternateEmail>
      <dece:Address>
         <dece:PostalAddress>46000 Center Oak Plaza</dece:PostalAddress>
         <dece:PostalCode>20166</dece:PostalCode>
         <dece:Locality>Sterling</dece:Locality>
         <dece:StateOrProvince>VA</dece:StateOrProvince>
         <dece:Country>CA</dece:Country>
      </dece:Address>
      <dece:TelephoneNumber>
         <dece:Value>+1.703598741</dece:Value>
      </dece:TelephoneNumber>
      <dece:MobileTelephoneNumber>
         <dece:Value>+1.703598742</dece:Value>
      </dece:MobileTelephoneNumber>
   </dece:ContactInfo>
   <dece:Languages>
      <dece:Language primary="true">en-ca</dece:Language>
      <dece:Language primary="false">en</dece:Language>
   </dece:Languages>
   <dece:DateOfBirth MeetsAgeOfMajority="true">1888-08-09</dece:DateOfBirth>
   <dece:Credentials>
      <dece:Username>usercreate20141114_070622</dece:Username>
   </dece:Credentials>
   <dece:UserRecoveryTokens>
      <dece:RecoveryItem>
         <dece:QuestionID>1200</dece:QuestionID>
         <dece:Question>What is the name of your favorite movie?</dece:Question>
         <dece:QuestionResponse>myname</dece:QuestionResponse>
      </dece:RecoveryItem>
      <dece:RecoveryItem>
         <dece:QuestionID>1650</dece:QuestionID>
         <dece:Question>What is the name of your favorite song?</dece:Question>
         <dece:QuestionResponse>myname</dece:QuestionResponse>
      </dece:RecoveryItem>
   </dece:UserRecoveryTokens>
   <dece:ResourceStatus>
      <dece:Current ModificationDate="2014-11-14T01:35:31.409Z" ModifiedBy="urn:dece:org:org:dece:RET" CreationDate="2014-11-14T01:35:24.138Z" CreatedBy="urn:dece:org:org:dece:RET">
         <dece:Value>urn:dece:type:status:active</dece:Value>
         <dece:Description>Flipping User Status to active</dece:Description>
      </dece:Current>
   </dece:ResourceStatus>
</dece:User>]]></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>cc891f73-44b8-47ce-9d08-8d9a2f63ef82</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c72b5513-a556-4ec7-9925-002c39bb23ff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9c734ae7-5af5-42b8-9df0-6dd308e44f7c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateMUC_API" searchProperties="true" id="b842e70d-a8b1-44af-91c2-44516599f032"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="cf75b3c5-f040-42ed-a8f8-44aca6d66160"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

tC.setPropertyValue("expectErrType","SUCCESS");


</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="01faaa74-e8d3-4ddf-957f-7b8f1d53eb65"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("Policy_Create_MUC");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="Policy_Create_MUC" id="d40da162-e2a5-455c-8937-0c65fc0b8735"><con:settings/><con:config service="Policy_Create" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="Policy_Create_User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Policy_Create_MUC" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="RET_concat.pem" id="9cd1ca89-06fd-4c52-8fe2-891395fe39bd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd"  xmlns:dece="${#Project#coordinatorSchema}"  xmlns:ds="http://www.w3.org/2000/09/xmldsig#"  xmlns:md="http://www.movielabs.com/md"  xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <dece:Policy>
    <dece:PolicyClass>urn:dece:type:policy:ManageUserConsent</dece:PolicyClass>
    <dece:Resource>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_REQ_ENTITY}</dece:Resource>
    <dece:RequestingEntity>urn:dece:org:org:dece:${#TestCase#nodeid}</dece:RequestingEntity>
    <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
    <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_CREATED_BY}">
        <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
    </dece:ResourceStatus>
  </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="58027902-8c10-42c8-af34-84317fcf2eca">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('Policy_Create_MUC');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                             log.info "V2: "+tP.getPropertyValue("V2");
			if (tP.getPropertyValue("V2")=="06" || tP.getPropertyValue("V2")=="07"){
			contentLocation = URLDecoder.decode(value[0], "UTF-8");
			}else{
				contentLocation = value[0];
			}
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="040955cf-ceeb-4fcc-bb99-ec8e5b2aac61">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VyvN4y1g2S4IrUMUamIRAgCQTXlJCbkBgyyDJLPn6kQw4QJbLvU+ubre6Ty866huBA99xy0IAlzRkqU3gM+HG2qIRceaGWFDhMhyAcCVx++X2veukkYsPR4xUq1Y03rJ5yOFsxjNtB8DMegVkYs9DpoOzoxxGXuaKjJWpEBG0mJCYyaLhIDtnIsdEuYGN3EzetfPpguMMjdQzcKF8K5M0MvagNqJoTKVcuJa1Xq/T60w65BPLQci2/rTv+2QKATZKN7uM4kC8tLcnaQ8I+D5JkzCwbqwTmxtPuH06YVhGHPaxvO9iIQsVLGXjCTr5ZSRnwWuxcRiLVcxCRgn26TvW9WmDnIZequxPQk7lNPg2CRtpxyZsiEnsLPtlWKfQLnR0gpALbIoptve+ejAGDoxA6qnXKhq/LutafHTAMRPjkAfiVPxveICtwA8X4JnikNYe2uUOv6hU6QaI22LEjwRdwYMe1gUmIPbdBHK5q1SXw5hu7qlQA7oRGp11DO9M3FWjRicg5P9p0FFzdk6esR9BqbO2l9Hdw2xYbTyPHudwu314eOF1Vuk8FWMAx8axImntTjwbymSIdifqQ9yi2+GrP1jVB0GuQWeV+/bcyt6Nek/D7vXL5GX69NxceAN1253fzUqzwkZOc+l1/ajdmqBOlw6pXFrTBt8UptX1uHC13HpkPX3507l9JnO2yv6zvp3Nx48Qic6k+dITtg3r1/IcrtfNW+hF7caiW7/bOuW5xX8/vrwOutxrRsP646ywsjG3q6wwsu+ecsNyMUnnCP+p7nDn+9FoBkQeRD0GrVqqobqE5c9kpjXUM8exqbvQ5CMkMGmU9CnNHW6k6I56rurhTkb1XK5WRnmnUkH562ytjnIZlCsU7AYqNyqNzIFkdijOIFZDNqY6lqbc3dj8DJAErgDmATdXYaSYThg/eKxhiVMt1lOXIGQCBqGiZ3tG0WZB3t9X48IEB3kYX82RPZ1hI/UQyg7r8PJYAj/l5MwJJ/eA0AUFTdx6roUabCFVLZZ4FUnfTq9wmql+S8w1y7pO9jpnCRosfNBIrSD0Ih/Si+kirowldl/HxETE2l59EN+2b/M6/3cogbLxqDYQOpcKqDbCF48LOiTyfcL544QP7suRR/XFUvWUnJIdktNfH2Oi5yOZEZXRW7X/Zh9wJ+YXH/980voBlHVejySQt6JHYQ9Pt3oEFG2UDt1c4vQyHa1WUdy/K02PXLm3dIUs5Fh9IJEitu0gnAOzEi/WRa9IAvwseKI/hRjJKetLLCFQA5eKxQvWhj4IvTa01E3ZXLqTnIRUpZOwkV/pqr5aeTTiH7ci4hJtp9Rd9VmH3Pvo2Be+juKoPNXWICmbaEm/INtv5oKEyi1V3BfyY+dfOfgq+KkyKXKCRaqBGkUSvv+T0qRWNDAhYcRkq2bEimOijXHK7QLcD6NPbmIuT5Y7+u/bnUnjESCgVkJBY//6jXb1FWCTI7LeB/3E140syhcqlUymvuPrqx1fO5VGOSnKCbrSJ/VnzVGdzme89Bc=</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00005_UserUpdate_FUNC_NonCS_Full_Update_UserName_Others</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Update_Access_NonCS</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4E99389111664AEE0401F0A07990AF6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C8A32F78EE614FE05305991F0AED18</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D12F2DD48A10D559E0401F0A059918B0/User/urn:dece:userid:org:dece:D12F2DD48A1ED559E0401F0A059918B0/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/2015/02/Account/urn:dece:accountid:org:dece:0E55DF4069BB33EDE05307991F0A2BFA/User/urn:dece:userid:org:dece:0E55DA062BB0684DE05305991F0AFBF3/Policy/urn:dece:type:policy:ManageUserConsent</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn:dece:type:policy:ManageUserConsent</con:value></con:property><con:property><con:name>ENNODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD3CD43AEEE91F252E0401F0A079913BF</con:value></con:property><con:property><con:name>ENNODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD3CD44C830AA5460E0401F0A079913BD</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE1B04F1ACAC275C1E0401F0A079905C0</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE1B04F1ACAA475C1E0401F0A079905C0</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:0E55DA062BB0684DE05305991F0AFBF3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:0E55DF4069BB33EDE05307991F0A2BFA</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E4E99389111664AEE0401F0A07990AF6</con:value></con:property><con:property><con:name>NODE_USER_ID_REQ_ENTITY</con:name><con:value>0E55DA062BB0684DE05305991F0AFBF3</con:value></con:property><con:property><con:name>NODE_USER_ID_CREATED_BY</con:name><con:value>0E55DA062BB0684DE05305991F0AFBF3</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bd6efb96-bbf3-4226-9917-48245caf20c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateULC_API" searchProperties="true" id="87b56fb8-25f5-4b44-930e-4573a583f220"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="e7953381-a745-475b-9329-6089976d3bd4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

tC.setPropertyValue("expectErrType","SUCCESS");

if( tP.getPropertyValue("URLEncode") == "NO")
{
	tC.setPropertyValue("Policy_Class","urn:dece:type:policy:UserLinkConsent");
}
else
{
	tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:UserLinkConsent", "UTF-8"));
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="fbb558bc-47c3-45ac-9434-e9010ef104d9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreate_ULC");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreate_ULC" id="ae98bbd5-9889-44e7-897c-e9e8c330e24b"><con:settings/><con:config service="Policy_Create" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="Policy_Create_User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreate_ULC" mediaType="application/xml" postQueryString="false" id="13148205-df8a-4b5e-a01d-ffabb3aac135"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd"  xmlns:dece="${#Project#coordinatorSchema}"  xmlns:ds="http://www.w3.org/2000/09/xmldsig#"  xmlns:md="http://www.movielabs.com/md"  xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <dece:Policy>
    <dece:PolicyClass>urn:dece:type:policy:UserLinkConsent</dece:PolicyClass>
    <dece:Resource>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_REQ_ENTITY}</dece:Resource>
    <dece:RequestingEntity>urn:dece:org:org:dece:${#TestCase#nodeid}</dece:RequestingEntity>
    <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
    <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_CREATED_BY}">
        <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
    </dece:ResourceStatus>
  </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="6e6b1cf7-0a4e-4e67-82ba-d0453da2873a">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreate_ULC');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                             log.info "V2: "+tP.getPropertyValue("V2");
			if (tP.getPropertyValue("V2")=="06" || tP.getPropertyValue("V2")=="07"){
			contentLocation = URLDecoder.decode(value[0], "UTF-8");
			}else{
				contentLocation = value[0];
			}
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="a5b9e6c4-b6ef-4534-a8a0-60a93ba272be">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVfZkqrKEn33Kwz3o2EzOmB0d0QhoKioDI4vJxBKRJmkQNCvP4W2bu3dvW+f+6SVlZW5ciBr1SsyfY9uA4RgnLhhUJaFt8o/LRquOabeqrVY2KyxNM3VOBtaNYtpbWjKXrNNq1kpywilUA5QYgbJW4UmKaZGNmt0w6DoNs21SfqFbFCrSnkGY4RNY5UXslLOfS9A7Yvbt0oaB+3QRC5qB6YPUTux2jpQhm2s2TZvmCrvr1eUF4fx+zZJojZBWC8YEvQ868UKfeKVeNJ5tVFbd53ATNIYfvi00Vvl42yWZS8Z8xLGDkGTJEmQHIF1bOQ6vyrvpdthaMvBJryuO2YQBq5leu7ZLEApMNmGdhl4Thi7ydb/xjRFUGRhugZznD6KDX5ViN8OLuh+aOkJZIzMGtqa1M2YBjcwhoEFy1NNfqv8+lkFr2eN2AzQJox99Gn93yDB4Ai9MIJ2Dd0iu6H7ucUv0vX+Cq22HFheitwjHBVtEpkWROVJDDduPnQRbj4blS/lL+fo1mHQ+i8leSUecWLYxBeZEVwHouT/qddjra5WZqaXwnc1FrhcZSxU1xxDyHtLoaUp41jP5su3C4RH5Suoe6k/1p8b9d5XH4e6LqsPIzmlFcI5S1yLGXDOStq3Zrpf7fEJT/fH+czprrSlRpGMv/Z6+aRbDXV90pUMjVn1grlsJvN0vHazUpOOBYXhlRgIBn0YZEgd+QfeHs+0eViNXGU8t4j0vDn3TXkYLB0tCNXG2WT0+mgvOZOtK9H9wzRTpozUlUotKdO0/ihr5Q3KhJE485Zvv2N6jKGIawBPlyCL/4s6yQlmYt4XnWJSbPDnmcB3RZY7VaHTAbDjgEzmgSPzwzMY8c7+sN27XS4jeaBOJSCAk6KBTHCWwkxVB2Jmz2beaiZLEq9obNYDS6GENwQxnwmrRZ8056toSUvkSud5e6GFa6Yf2b191ttaI8VQspEhn5SdmI8MkZxfZE6O12dlp1BjY8qU5jueUzQxE7KLR0HMtqPVXIuWUy6zzqKqALYLqKnY2So9w59RFqNtrZ04VMD+Iue3Smc2U3LRAJMS74xmODajI60iy7ejte9tH4z3sHHD7s5O666Xrs7iTumI3Y5+6OrymhFUsQ+05XQ9n+3NuXQsWb0RWN88unXXXISZs2plgrrsD8KVvD1aI6CKPK8CnC4SKHK3D8IuDxQWuPm5s+MbYceWMqJPo1KV87qNxck9LJDZJT2TarWo5XDemBwaghhUV4N0vdsq24U0rg50+zjlEu68RMfqsWG6lJVHG3Uh9pJBvumpemk9EfKF1avaTp/wzpwUK80+iM+nrac4WjJvjNFp7W42c34xZr3mxlMYLdp4m+iEqkao7mOywUOGJpan4yApAUfhAejupjteVfhWkVRbztSlwptAEpMUnHd0MqBnh37v6FlLBoT5YD7e7T8KYwuZyBOZKuK2EkstAdhFEXr6VJR2YMo7Tsw7osSrlgDUpTzIljhf0x5W/pxH6ZJHR+SByKxAg+uVmCnJJeNEZ1lwCvhpIHFb5ZDP7YZPNg9QHOqjiM0UNNoEq3m4V3w3nsapPh0MRsN8baTd/Q7Pqg2pD47MqiQe9xFwRwNjuxdCwZxEy2USVQMrthI58hU5P49XaNdy1z7Zr9YpfkIKVpOe+uts2jXF1SB2dGrQ04IJ0+RKKN2cen5118rmVUNvRE27E2yE04lYxTMyBKHEafWDndP0fjvNho1s0wf7tUmPco/jT5w4WBlWpqmDOR439VL9OBz65Nkg2FE0zvRuxoqqWmVs3ugZKIrdZdpy8ngc2PTSTBrHFTlruJG35+h0b7ARM3N8XKzJ0Y6ayqSksgtr5TvNyOoTGnEEYnMzlLun9dk8R/7Yug7Qz9PhLrzOD+JxsjyNnhvp0HG3Qiu5LYsLSBbKEr4VzOTvBKaQuHZtc1FtRwULQgkMksp7caogL+0UUxzXbuMr47oW6QZgGyQrUvWCT3EiyZKURAKyznEkz/M3lnNF8QliJww2buGr4HHXW+rvAC2/jWBgw7h2DFNrC1HlLxaLfJXlQMPXbxggaISYJ1IdUaBovikAukmzAiuyDUkkKYHnmgILBLpSHoXJOBjHYJPA+Jkj1p84ogYtN3JhQSSL2xTh6xQlOCUH85gmHvVyNF8CmGKqGRdsr02zrTqBXD/yYAGY8EM79eBLtI0uCSLQ9ZeumRa6SDXR+EfWO5eb/tsQP+/dsoF1bLdQQEU8PMQVhX8Q3la7fgvm+6Bbj0HfzIPUdosLHac2iV3riuR563fHFK1ybxcc1Q3yXfOz4Mkq8TmguyP76Fr3nr8/BzCbxHzj/VaSg/lyeEmPx/RShGbBpWJsnqAIskno0EoxIToZ4R4GxN0E8SMuekf9yfNd/owvTbaBnuDv2cctU74sf/AQ0SEqHiIybvn8p6+cJ5c4bwnMk69kHQ+/VwrEf33SWG2r0MPiCf7Jwtj+Xa4vbD34wXEWA8wNnGJVMM/TN01hhdisi4dYGD8a/8rAV86fhfck37EkuJvWaQK/3ykX0+mtYlpWmAaJLFQugseJecGZnCLY/q30h5kL9/sg8zn6lswvlKGOZ5dvVu667v9WrrmXdrEgPoXcC5a3So7fpdh54DxM6A+AXw5pUuz8bUg/R/L+h/hPyUNOP38P7/8C</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00005_UserUpdate_FUNC_NonCS_Full_Update_UserName_Others</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Update_Access_NonCS</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E26A4604E1520139E0401F0A05990BBB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E26A4604E0EC0139E0401F0A05990BBB</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D12F2DD48A10D559E0401F0A059918B0/User/urn:dece:userid:org:dece:D12F2DD48A1ED559E0401F0A059918B0/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/07/Account/urn:dece:accountid:org:dece:E26A4604E0EC0139E0401F0A05990BBB/User/urn:dece:userid:org:dece:E26A4604E1520139E0401F0A05990BBB/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3ATermsOfUse</con:value></con:property><con:property><con:name>ENNODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD3CD43AEEE91F252E0401F0A079913BF</con:value></con:property><con:property><con:name>ENNODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD3CD44C830AA5460E0401F0A079913BD</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE1B04F1ACAC275C1E0401F0A079905C0</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE1B04F1ACAA475C1E0401F0A079905C0</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:/DECE/RET_concat.pem</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE26A4604E1520139E0401F0A05990BBB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE26A4604E0EC0139E0401F0A05990BBB</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bd6efb96-bbf3-4226-9917-48245caf20c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>43c5dbf9-3574-4373-9d3f-f1b49a7247c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateGeoPrivacyAssent" searchProperties="true" id="1a42b403-fac9-4e9b-beba-08428b612d51"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="f74e5784-1d0a-419a-990a-b662677f67aa"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

tC.setPropertyValue("expectErrType","SUCCESS");

if( tP.getPropertyValue("URLEncode") == "NO")
{
	tC.setPropertyValue("Policy_Class","urn:dece:type:policy:GeoPrivacyAssent");
}
else
{
	tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:GeoPrivacyAssent", "UTF-8"));
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="b4bbdc71-26ce-4105-a1c5-3063cfdb4034"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreateSinglePolicyPost_CLGAttestation");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateGeoPrivacyAssent" id="65f52025-58a1-4398-bdc3-9f30f6c9bad2"><con:settings/><con:config service="Policy_Create" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="Policy_Create_User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateGeoPrivacyAssent" mediaType="application/xml" postQueryString="false" accept="" id="06fb09d5-73c9-4703-83f2-587b03afb367"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd"  xmlns:dece="${#Project#coordinatorSchema}"  xmlns:ds="http://www.w3.org/2000/09/xmldsig#"  xmlns:md="http://www.movielabs.com/md"  xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <dece:Policy>
    <dece:PolicyClass>urn:dece:type:policy:GeoPrivacyAssent</dece:PolicyClass>
    <dece:Resource>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_REQ_ENTITY}</dece:Resource>
    <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
    <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_CREATED_BY}">
        <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
    </dece:ResourceStatus>
  </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="2a564872-ad94-488f-9cc6-5a4e6277e32d">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreateGeoPrivacyAssent');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                             log.info "V2: "+tP.getPropertyValue("V2");
			if (tP.getPropertyValue("V2")=="06" || tP.getPropertyValue("V2")=="07"){
			contentLocation = URLDecoder.decode(value[0], "UTF-8");
			}else{
				contentLocation = value[0];
			}
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="18c6eb56-39ad-4be3-8ce9-bc8af57e5a95">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZZb+I6FH7vr4jSx6uQhZCQqCCFrUMHugDT6fBSuc4B3CYOjR2W/vprh4YCpb3MlZDQOTnLdxZ/9gVDcWT5AWOQcpJQpduqqY8VsCeGHRqa54ZYs8uupz2BJ0RwPWzZDrJcQ1W6jGXQpYwjymuqZZi2ZjiaZY1M0zcrvmGUvIo3VpV7SJkILUxKwmsVR5T5edqamqXUTxAjzKcoBuZz7A+Dfs8Xlj4qMKn1iw3KPGFan3E+93Udl0LAEEW4hJNYv9D3bC5C5g/JlCKepfCeM2Q19d13uVyWluVSkk51yzAM3fB0YRMyMj1X62eFM4RdOkk2chPRhBKMIvKGJKg+8FkSKkE0TVLCZ/EXoU3dNGRoDVZYw6ZNz1X9I0GO7sRIeyBThjQ2Q2YRbAATSIFiUH4NujX1/LQJbnxHKaJskqQxO5D/DhLQBUTJHEKNFZUV6E6PeKRd9QvAfpfiKGNkAddyTeYIA1NuU5iQVY8wsXwhU/LxKysmfqTYMsB/M5YLfRergK4f6U6LTIHx/zOz3XltotyjKIN6NmqXPfQQ2r/Xr+F8Fffty9nD02g4bv6q5RB2jTegtuN+lw+Xdbtb704v/Mcd/Lxa8Xg4rLi9NR/fVJcva3dcfluuW0HjJWhfDcJFb7V2+p11JRxdLtrl2BpVhuHrnTE33m5u182HcOxe8euzB7t5F5Fx9+reuiRvtx1n1LHvKxytf6RZs9/785vdzbwoaE4aA9Qx17j63L/9WW2v7h4I66WXrfHciq+eDX7TwelZ8M+z96f8564/uiYQGC+/X4PaR027NewrC0oYZk/PgHkhyvXotpSOmBfi39OL1JBQm+Sm/lxyFONAuVqXXpJa/EwQEAl9McyN3Gk6jZZTcZyy51iNcrVt2IbZMQLD9Tw7sNsFB21QHEBsJnRCZC7Jspv9+R4gjn0GNIRUWyQZngFTv4nYQhwpXToQhyOhDEaJZPGgEQQNo+U6tld2LKfVtjumUy0HbqvcbLgtVblO+A29SYMJh3Sfwe09Bh8AJnMCkublnjOx6IyLlryiRcYjs7RAJQqZuAhSycW+ZVcrOiPxPAIJWI+TMIugNJ/N8wbpbPNvaQizXDtoj/Lz92V5h9+KTgibkEgDJmtpgJgmfLqKbL9SFPJ1we5uwUX4IAuJPGairTwleINk/9PHtsg12a6KqOixOXw0C9xb85PdP3vq34DSD/uxTRQuyE7a4k4V14QgkXoxzVdUei1li0WWz8+VBJmK8LqpG64+BJwJlluPkheg+jaEftIls0V9kHmr38eX8RkdcsQhFtum5OIJL4whMPnC6IrTsjr1+bKXUvSNw4of0zUj8RCRiL99q2AfSzuhvhV/yyQNP8Z1JNZOHlGneFZwQqdSktfJ+oulwIkISwT/Jelu8GMBjiXfV26bvMXCxTY9ZRy+/qJIYqupCOMko7wrCUQodsk2x8nXc/A/jD6FyQn9/YZesS9v6Id+byhoL0bq1pb8t7FG8nXBoMqHQI6lpq7Eg1Mkp9Mdcn8HeJzfq953/L5fSf2T+rNmp6eH56H+Lw==</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00005_UserUpdate_FUNC_NonCS_Full_Update_UserName_Others</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Update_Access_NonCS</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4DAFF5120AEA1B8E0401F0A079957C6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D12F2DD48A10D559E0401F0A059918B0/User/urn:dece:userid:org:dece:D12F2DD48A1ED559E0401F0A059918B0/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/07/Account/urn:dece:accountid:org:dece:FC6BD65663892B38E0401F0A07994A4E/User/urn:dece:userid:org:dece:FC6BD65663E52B38E0401F0A07994A4E/Policy/urn:dece:type:policy:GeoPrivacyAssent</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn:dece:type:policy:GeoPrivacyAssent</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">/opt/dece/certs//RET_concat.pem</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:FC6BD65663E52B38E0401F0A07994A4E</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC6BD65663892B38E0401F0A07994A4E</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E4DAFF51203BA1B8E0401F0A079957C6</con:value></con:property><con:property><con:name>NODE_USER_ID_REQ_ENTITY</con:name><con:value>FC6BD65663E52B38E0401F0A07994A4E</con:value></con:property><con:property><con:name>NODE_USER_ID_CREATED_BY</con:name><con:value>FC6BD65663962B38E0401F0A07994A4E</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bd6efb96-bbf3-4226-9917-48245caf20c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6f62f720-8990-433e-b87f-e5bfb4b7fa27</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update_UserStatus" searchProperties="true" id="8b84599f-9011-4a1a-a266-93bd146fbbc4"><con:settings/><con:testStep type="groovy" name="Update_User_Status" id="9d7c6fca-007c-49de-8dda-ef17e5237ce8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def status = context.expand( '${#TestCase#Status}' )
def userID = context.expand( '${#TestCase#User_OID}' )

def dbHost = context.expand( '${#Project#targetsystem}' );

a = new dbUtils.dbUtils(log,dbHost);

String sql = """update ACCOUNT_USER set STATUS = '$status' where USER_OID =  hextoraw('$userID')""";

log.info "SQL : " + sql;

a.dbConnExecuteUpdate(sql,dbHost);
</script></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>deleted</con:value></con:property><con:property><con:name>UserID</con:name><con:value>${#TestCase#UserID}</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E357C457986AEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE357C457986AEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>user_oid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E8ED55608DC49F52E0401F0A07991345</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E357C457986BEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00029_UserGet_FUNC_CLG_Get_CHILD_Active_and_Deleted_CLG_403_FORBIDDEN_P2</con:value></con:property><con:property><con:name>sName</con:name><con:value>01.User_Get_GeoProfile</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20130917_070832</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update_AccStatus" searchProperties="true" id="80487ede-aacb-4a03-9614-e48d276255d6"><con:settings/><con:testStep type="groovy" name="Update_AccStatus" id="75fef9ac-8f82-47d0-8064-34c95aed75c0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def status = context.expand( '${#TestCase#Status}' )
def accountID = context.expand( '${#TestCase#account_oid}' )

a = new dbUtils.dbAccount(log,context.expand( '${#Project#targetSystem}' ));

assert a.accountSetStatus(accountID,status) == 1;

</script></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>mergedeleted</con:value></con:property><con:property><con:name>UserID</con:name><con:value>${#TestCase#UserID}</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E357C457986AEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE357C457986AEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>user_oid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00040_UserGet_FUNC_SPLCS_Get_AccStatus_Mergedeleted_P2</con:value></con:property><con:property><con:name>sName</con:name><con:value>08.Functional_UserGet_SPLCS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5fdeaf38-c814-4c84-a148-2fc4448e3d23</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7ebe7972-d488-48c3-9a7f-c13ef2cdf20d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update_Policy_Status" searchProperties="true" id="0fe6ceb2-bf24-4dc3-a614-abc94dd19143"><con:settings/><con:testStep type="groovy" name="Update_Policy_Status" id="1ed21ab2-25df-497f-a4cd-e18c7f7e0324"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def status = context.expand( '${#TestCase#Status}' )
def policyclass = context.expand( '${#TestCase#Policy}' )
def username = context.expand( '${#TestCase#Username}' )

def dbHost = context.expand( '${#Project#targetsystem}' );

a = new dbUtils.dbUtils(log,dbHost);


//String sql = """update POLICY set STATUS = '$status' where CREATED_BY = hextoraw('$userID') and POLICY_CLASS = '$Policy'""";


String sql = """update policy set status = '$status' where status = 'active' and policy_oid in (select policy_oid from policy_relationship where policy_actor in 
((select user_oid from account_user where lower(username) = lower('$username')),
(select account_oid from account_user where lower(username) = lower('$username')))) and policy_class='$policyclass'"""



log.info "SQL : " + sql;

a.dbConnExecuteUpdate(sql,dbHost);






</script></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>deleted</con:value></con:property><con:property><con:name>UserID</con:name><con:value>${#TestCase#UserID}</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E357C457986AEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE357C457986AEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>user_oid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E67B0B0EA6B4A35AE0401F0A059938AF</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E357C457986BEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00016_UserGet_FUNC_SPLCS_No_ManageUserConsent_P1</con:value></con:property><con:property><con:name>sName</con:name><con:value>08.Functional_UserGet_SPLCS</con:value></con:property><con:property><con:name>Policy</con:name><con:value>200</con:value></con:property><con:property><con:name>username</con:name><con:value>usercreate20131017_022410</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5fdeaf38-c814-4c84-a148-2fc4448e3d23</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7ebe7972-d488-48c3-9a7f-c13ef2cdf20d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RenameTCs" searchProperties="true" id="9dedc8c4-1bc7-4f3d-90f8-76fc1c3bb757"><con:settings/><con:testStep type="groovy" name="Rename" id="0f1339ac-2d28-4dfc-9adb-29af427b77ca"><con:settings/><con:config><script>import java.io.*;

def testCase  = testRunner.getTestCase();
def testSuite = "23.User_Get_CS_Geopolicy_Portal_US";

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

BufferedReader br = new BufferedReader(new FileReader("C:\\Users\\ralluri\\Desktop\\TCs.txt"));

def newTestCaseName;

log.info "TCCount:"+TCCount;

for(i = 0; i &lt;= TCCount - 1; i++)
{               
                def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);

                newTestCaseName = br.readLine();
                log.info "Input Test Case Name: "+newTestCaseName;
                
                                targetTestCase.setFailOnError(true);
                                targetTestCase.name = newTestCaseName;    
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Get_Responses" id="ea18db35-6bcb-4ab7-85db-c8bc87ad88dd"><con:settings/><con:config><script>import java.io.*;

//def commonTestStep = "User_Delete_API";

def testCase  = testRunner.getTestCase();
def TSList = testRunner.testCase.testSuite.project.getTestSuiteList();
def TSCount = testRunner.testCase.testSuite.project.getTestSuiteCount();

//def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
//def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();


log.info "TS List:"+TSList[0].name;

//log.info "TCCount:"+TCCount;

for(k in (0..TSCount-1))
      {
            def testSuite = TSList[k].name;
            def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList(); 
            def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();
            log.info "TestSuite  " + testSuite +"  TCCount:"+TCCount;
            log.info "TSList[k].disabled " + TSList[k].disabled 
            
            if ((TSList[k].disabled).toString() != "true")
            {                              
                  for(i in (0..TCCount-1))                                                                  
				{                                                                                         
                  	try {
                        		def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
						def targetStep = targetTestCase.getTestStepByName(commonTestStep);
						log.info  testSuite + " " + targetTestCase.name+" "+targetStep.getPropertyValue("ResponseType");         
                  		}
                  	catch(Throwable e) {
                        log.info "Exception : " + e;
                        }                                                                              
                   }                              
            }
      }
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserDelete_DB_Validation" searchProperties="true" id="04c62a5f-b87c-4edf-81e6-67cf45583012"><con:settings/><con:testStep type="groovy" name="SAML_HISTORY_STATUS_Validate" id="661ea5c0-3c8f-4020-8aa7-d5b5f6c13c51"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def dbHost = context.expand( '${#Project#DBHost}' );
def node_User_ID = context.expand( '${#TestCase#Node_User_ID}');
def userID = context.expand( '${#TestCase#User_OID}' )
def status = context.expand( '${#TestCase#Status}' )

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("ResponseTypeUserDelete",callTC.getPropertyValue("ResponseTypeUserDelete"));

def responseType = tC.getPropertyValue("ResponseTypeUserDelete");

log.info "Response Type is:  ----> "+ responseType;


if (responseType == "SUCCESS")
	{              
		a = new dbUtils.dbUtils(log,dbHost);
		b = new dbUtils.dbUser(log,dbHost);

			String sql = """select accUsr.status USER_STATUS, usrHstry.status USER_HISTORY_STATUS, 
			usrSAMLAssrt.status USER_SAML_STATUS, usrHstry.DESCRIPTION 
			FROM ACCOUNT_USER accUsr INNER JOIN USER_STATUS_HISTORY usrHstry
			ON accUsr.user_oid = '$userID' and usrHstry.status='deleted'
			and accUsr.user_oid = usrHstry.user_oid INNER JOIN NODE_USER ndUsr
			ON accUsr.user_oid=ndUsr.user_oid INNER JOIN node_user_saml_assertion usrSAMLAssrt
			ON ndUsr.row_oid = usrSAMLAssrt.node_user_id""";
			
			log.info sql;
			
			results = a.SelectFromDB(sql,dbHost);

		//b.dbConnClose();
		assert results.length() > 0;
		log.info "results" + results;
		
		def myXML = new XmlSlurper().parseText(results);   
		def i = 0;

		for (i;i&lt;=myXML.ResultSet.Row.size()-1;i++)
			{  
				if (myXML != null) 
				{
					log.info "User Status from ACCOUNT_USER table is -----      " + myXML.ResultSet.Row.USER_STATUS[0].text();
					assert myXML.ResultSet.Row.USER_STATUS[0].text() == context.expand( '${#TestCase#Status}' );

					if(context.expand( '${#TestCase#Status}')=='deleted')
						{
							assert myXML.ResultSet.Row.DESCRIPTION[0].text() == "User Deleted" ;
							assert myXML.ResultSet.Row.USER_HISTORY_STATUS[0].text() == context.expand( '${#TestCase#Status}') ;
							assert myXML.ResultSet.Row.USER_SAML_STATUS[0].text() == context.expand( '${#TestCase#Status}') ;
							log.info "Description from USER_STATUS_HISTORY is -----     " + myXML.ResultSet.Row.DESCRIPTION[0].text();
							log.info "User status from USER_STATUS_HISTORY is -----     " + myXML.ResultSet.Row.USER_HISTORY_STATUS[0].text();
							log.info "SAML status from NODE_USER_SAML_ASSERTION is -----" + myXML.ResultSet.Row.USER_SAML_STATUS[0].text();                                                   
						}
					else
					{
						assert myXML.ResultSet.Row.USER_SAML_STATUS[0].text() == "active" ;
					}
					log.info "User DB Validations Passed"; 
				}
				
				else 
				{
					assert XMLbody == "";
				}          
			}
	}
else
	{
		log.info "DB Validations skipped due to non SUCCESS scenario";
	}

</script></con:config></con:testStep><con:properties><con:property><con:name>dbxmlresponse</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>Status</con:name><con:value>deleted</con:value></con:property><con:property><con:name>Node_User_ID</con:name><con:value>07C88CAB14553BC3E05307991F0A2022</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>91160</con:value></con:property><con:property><con:name>User_OID</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>dbxmlresponse_rowOID</con:name><con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <NODE_USER_SAML_UUID>_77a2a0ff-dba8-4c48-bd90-b725d6ece88e</NODE_USER_SAML_UUID>
    </Row>
    <Row rowNumber='2'>
      <NODE_USER_SAML_UUID>_77a2a0ff-dba8-4c48-bd90-b725d6ece88e</NODE_USER_SAML_UUID>
    </Row>
  </ResultSet>
</Results>]]></con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00026_Account and User Create with AU 111_UserDelete SecondFull user 107_SUCCESS_P0</con:value></con:property><con:property><con:name>sName</con:name><con:value>03.UserDelete_Backward_Compatability</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters><con:property><con:name>ACCID</con:name><con:value/></con:property></con:reportParameters></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update_User_CLG_Details" searchProperties="true" id="d2b2d499-5c24-479e-9969-404560acf0db"><con:settings/><con:testStep type="groovy" name="Update_User_CLG_Details" id="f0b07be8-9562-47a9-bf07-71b47bce4ef9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def dbHost = context.expand( '${#Project#DBHost}' );

def nodeuserID = context.expand('${#TestCase#UserID}' );
def clguserID = context.expand('${#TestCase#CLGUserID}' );


a = new dbUtils.dbUtils(log,dbHost);
b = new dbUtils.dbUser(log,dbHost);

//log.info b.userGetfromNodeUserId(nodeuserID);

if(context.expand( '${#TestCase#Action}' ) == "addclg")
{
sql = """DECLARE
BEGIN
insert into USER_LEGAL_GUARDIAN values(sys_guid(),
'$nodeuserID',
'$clguserID',
'"""+context.expand('${#TestCase#CLGAttestationStatus}' )+"""',
sysdate,
null,
null);
commit;
END;""";
}
else
if(context.expand( '${#TestCase#Action}' ) == "removeclg")
{
sql = """delete from USER_LEGAL_GUARDIAN where USER_OID = '$nodeuserID'""";
}

a.dbConnExecuteUpdate(sql,dbHost);

</script></con:config></con:testStep><con:properties><con:property><con:name>Action</con:name><con:value>addclg</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>UserID</con:name><con:value>E4890111840E60DCE0401F0A05993DE1</con:value></con:property><con:property><con:name>CLGAttestationStatus</con:name><con:value>pending</con:value></con:property><con:property><con:name>CLGUserID</con:name><con:value>E488FA3B9A214958E0401F0A05993DE5</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>91162</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00002_US_UserDelete_FUNC_Pending_CLG_Delete_Self_P1</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Delete_GeoProfile</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="User_Create_DB_Validation" searchProperties="true" id="c4b23f47-43c5-4476-ac81-eaa1b66c5619"><con:settings/><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="d7765da1-c221-46a8-b0ee-4ada2ad4098a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

def callTS = tP.getTestSuiteByName(callTSname);

tC.setPropertyValue("ADULT_DOB_XML",callTC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("YOUTH_DOB_XML",callTC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("CHILD_DOB_XML",callTC.getPropertyValue("CHILD_DOB_XML"));
tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("GivenName",callTC.getPropertyValue("GivenName"));
tC.setPropertyValue("SurName",callTC.getPropertyValue("SurName"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("DateOfBirth",callTC.getPropertyValue("DateOfBirth"));
tC.setPropertyValue("ResponseTypeUserCreate",callTC.getPropertyValue("ResponseTypeUserCreate"));
tC.setPropertyValue("GeoProfile",callTC.getPropertyValue("GeoProfile"));
tC.setPropertyValue("role",callTS.getPropertyValue("role"));

tC.setPropertyValue("PrimaryEmail",callTC.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("DisplayImageURL",callTC.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",callTC.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",callTC.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",callTC.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",callTC.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",callTC.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",callTC.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",callTC.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",callTC.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",callTC.getPropertyValue("Language1"));
tC.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("urnUser",callTC.getPropertyValue("urnUser"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",callTC.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",callTC.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",callTC.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",callTC.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",callTC.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify_ACCOUNT_USER_Table" id="5ef6218a-906a-4002-a25c-f14a2c5756e2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname);

tC.setPropertyValue("IsMinor","");
tC.setPropertyValue("Requestee","");

def dbHost = context.expand( '${#Project#DBHost}' );
def node_User_ID = context.expand( '${#TestCase#Node_User_ID}');
def userID = context.expand( '${#TestCase#User_OID}' );
def node_OID = context.expand( '${#Project#Node_OID}' );
def responseType = tC.getPropertyValue("ResponseTypeUserCreate");

def BirthDate = context.expand( '${#TestCase#DateOfBirth}' );
def myXML1 = null;
def finalbday = null;

a = new dbUtils.dbUtils(log,dbHost);
b = new dbUtils.dbUser(log,dbHost);

			
log.info "Response Type is:  ----> "+ responseType;

def cHILD_DOB_XML = context.expand( '${#TestCase#CHILD_DOB_XML}' )
def aDULT_DOB_XML = context.expand( '${#TestCase#ADULT_DOB_XML}' )
def yOUTH_DOB_XML = context.expand( '${#TestCase#YOUTH_DOB_XML}' )

def dateOfBirth = context.expand( '${#TestCase#DateOfBirth}' )
def privilege = context.expand( '${#TestCase#Privilege}' )


if (responseType == "SUCCESS")
     {
		Result = b.userGetRow(userID);
	
		log.info "Result Set:   " + Result		
		myXML1 = new XmlSlurper().parseText(Result);		
		log.info "Actual Rows ==  " + myXML1.ResultSet.Row.size();
		
		assert myXML1.ResultSet.Row.size() == 1;       	
		assert myXML1.ResultSet.Row.STATUS == 'blocked:tou';
		log.info "privelege ;; " + myXML1.ResultSet.Row.PRIVILEGE;
		assert myXML1.ResultSet.Row.PRIVILEGE == tC.getPropertyValue("Privilege");
		assert myXML1.ResultSet.Row.USERNAME == tC.getPropertyValue("UserName");
		assert myXML1.ResultSet.Row.GIVEN_NAME == tC.getPropertyValue("GivenName");
		assert myXML1.ResultSet.Row.SURNAME == tC.getPropertyValue("SurName") ;
		assert myXML1.ResultSet.Row.PRIMARY_EMAIL == tC.getPropertyValue("PrimaryEmail") ;
		assert myXML1.ResultSet.Row.TELEPHONE == tC.getPropertyValue("TelephoneNumber") ;
		assert myXML1.ResultSet.Row.MOBILE_TELEPHONE == tC.getPropertyValue("MobileTelephoneNumber") ;

        if(context.expand( '${#TestCase#DateOfBirth}' )== context.expand( '${#TestCase#CHILD_DOB_XML}' ))
        { 
			log.info "I am CHILD";
			tC.setPropertyValue("Requestee","CHILD");
			
			BirthDate = tC.getPropertyValue("CHILD_DOB_XML");
			assert myXML1.ResultSet.Row.AGE_CLASS == 'CHILD';
			
			tC.setPropertyValue("IsMinor","true");
			
			assert myXML1.ResultSet.Row.EMAIL_CLOCK_START_TIME == 'null' ;
			assert myXML1.ResultSet.Row.EMAIL_CLOCK_END_TIME == 'null' ;        
        } 
		else 
		if(context.expand( '${#TestCase#DateOfBirth}' )== context.expand( '${#TestCase#YOUTH_DOB_XML}' ))
        {
			log.info "I am YOUTH";
			tC.setPropertyValue("Requestee","YOUTH");
			
			BirthDate = tC.getPropertyValue("YOUTH_DOB_XML");
			assert myXML1.ResultSet.Row.AGE_CLASS == 'YOUTH';
			
			tC.setPropertyValue("IsMinor","true");
			
			assert myXML1.ResultSet.Row.EMAIL_CLOCK_START_TIME == 'null' ;
			assert myXML1.ResultSet.Row.EMAIL_CLOCK_END_TIME == 'null' ;
         } 
        else 
        if(context.expand( '${#TestCase#DateOfBirth}' )== context.expand( '${#TestCase#ADULT_DOB_XML}' ))
        {
			log.info "I am ADULT";
			tC.setPropertyValue("Requestee","ADULT");
			
			BirthDate = tC.getPropertyValue("ADULT_DOB_XML");
			
			assert myXML1.ResultSet.Row.AGE_CLASS == 'ADULT';
			
			tC.setPropertyValue("IsMinor","false");
  /*        
         if(context.expand( '${#TestCase#attested}' ) == 'true')
          {
            assert myXML1.ResultSet.Row.EMAIL_CLOCK_START_TIME == 'null' ;
            assert myXML1.ResultSet.Row.EMAIL_CLOCK_END_TIME == 'null' ;
          }
          else
          {
            assert myXML1.ResultSet.Row.EMAIL_CLOCK_START_TIME != 'null' ;
            assert myXML1.ResultSet.Row.EMAIL_CLOCK_END_TIME != 'null' ;	
          }
   */        
        } 

          // Retrieving Birth Date in proper format
 /******************************************************************************************************/
          
         bdaystring = myXML1.ResultSet.Row.BIRTH_DATE.toString();

         int lastspace = bdaystring.lastIndexOf(' ');

         finalbday = bdaystring.substring(0,lastspace);
          
         log.info "Birth Day:  " + finalbday;
       
        assert finalbday == BirthDate;

/******************************************************************************************************/

        assert myXML1.ResultSet.Row.COUNTRY == context.expand( '${#Project#GeoProfile}');

        if(context.expand( '${#TestCase#attested}' ) == 'true')
        {
          assert myXML1.ResultSet.Row.PRIMARYEMAIL_VERIFICATION_DATE != null ;
          assert myXML1.ResultSet.Row.PRIMARYEMAIL_VERIFICATION_ENTY != null ;
          assert myXML1.ResultSet.Row.PRIMARYEMAIL_VERIFICATION_ID != null ;
        }  

      log.info "User ACCOUNT_USER table Validations Passed";
               
   }// end if for success response check
  else
  { 
  	assert  myXML1.ResultSet.Row.size() == 0;
  	log.info "No Validation Required";
  	testRunner.gotoStepByName("End_Of_DB_Validations");
  }
  
   
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify_NODE_USER_Table" id="8d9caecc-daac-4600-823c-18f0729b4705"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def dbHost = context.expand( '${#Project#DBHost}' );
def node_User_ID = context.expand( '${#TestCase#Node_User_ID}');
def userID = context.expand( '${#TestCase#User_OID}' );
def node_OID = context.expand( '${#Project#Node_OID}' );
def responseType = tC.getPropertyValue("ResponseTypeUserCreate");
def geoProfile = context.expand( '${#Project#GeoProfile}' )


def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname);

a = new dbUtils.dbUtils(log,dbHost);
b = new dbUtils.dbUser(log,dbHost);

def role = tC.getPropertyValue("role");

log.info "Role : --- " + role;

//log.info b.accountGetfromNodeAccountId(accID);

String sql = """select to_char(rawtohex(NODE_OID)) NODE_OID from NODE_USER where USER_OID = hextoraw('$userID')""";

log.info sql;

results = a.SelectFromDB(sql,dbHost);

//log.info results;

/*
*  If zero length, no need to continue;
*/
  assert results.length() > 0;

  def myXML = new XmlSlurper().parseText(results);
  
  log.info "myXML.ResultSet.Row.size() is [" + myXML.ResultSet.Row.size() + "]";


if (responseType == "SUCCESS")
{
	assert myXML.ResultSet.Row.size() > 0;

// Modified to comply with Generic Portal
//    if(context.expand( '${#TestCase#Role}' ) == 'urn:dece:role:portal' || context.expand( '${#TestCase#Role}' ) == 'urn:dece:role:portal:customersupport' || context.expand( '${#TestCase#Role}' ) == 'urn:dece:role:dece:customersupport' || context.expand( '${#TestCase#Role}' ) == 'urn:dece:role:coordinator:customersupport')

	if( role ==  'urn:dece:role:dece:customersupport' || role == 'urn:dece:role:coordinator:customersupport')
     { 	
       assert myXML.ResultSet.Row.size() == 4;	 
       //assert myXML.ResultSet.Row[0].NODE_OID == context.expand( '${#Project#Node_OID}' ); 
       log.info "DECE Node User Validation Passed";	    
     }
     else
     { 
       assert myXML.ResultSet.Row.size() > 4;
      // assert myXML.ResultSet.Row[0].NODE_OID == context.expand( '${#Project#Node_OID}' ); 		 
      // assert myXML.ResultSet.Row[1].NODE_OID == "10"; 
       log.info "3rd Party Node User Validation Passed";    
     }
	
}
else
{
	assert myXML.ResultSet.Row.size() == 0;
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify_USER_Policies" id="59c41533-a7c3-4983-a2a8-4f0cf8fead39"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def dbHost = context.expand( '${#Project#DBHost}' );
def node_User_ID = context.expand( '${#TestCase#Node_User_ID}');
def userID = context.expand( '${#TestCase#User_OID}' );
def node_OID = context.expand( '${#Project#Node_OID}' );
def responseType = tC.getPropertyValue("ResponseTypeUserCreate");
def geoProfile = context.expand( '${#Project#GeoProfile}' )


def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname);

a = new dbUtils.dbUtils(log,dbHost);
b = new dbUtils.dbUser(log,dbHost);

def role = tC.getPropertyValue("role");

		String sql = """select POLICY_CLASS,STATUS,RESOURCE_ID from POLICY P,POLICY_RELATIONSHIP PR,POLICY_RESOURCE PRE where PR.POLICY_ACTOR = hextoraw('$userID')
		and P.POLICY_OID = PR.POLICY_OID and PR.POLICY_OID = PRE.POLICY_OID(+) ORDER BY POLICY_CLASS""";


		this.log.info "Query is:  " + sql;
		results = a.SelectFromDB(sql,dbHost);
		
		log.info "Policies Results : " + results;
		/*
		*  If zero length, no need to continue;
		*/
		assert results.length() > 0;
		
		def myXML = new XmlSlurper().parseText(results);
		
		log.info "myXML.ResultSet.Row.size() is [" + myXML.ResultSet.Row.size() + "]";
		
		assert myXML.ResultSet.Row.size() > 0;

		//if( (context.expand( '${#TestCase#IsMinor}')=="true") &amp;&amp; (context.expand( '${#Project#AgeClass}')=="YOUTH") ) 

		if (context.expand( '${#TestCase#IsMinor}')=="true") 
			{
				if((geoProfile == "US")|| (geoProfile == "CA"))
					{
						assert myXML.ResultSet.Row[0].POLICY_CLASS == "302";  
						//      assert myXML.ResultSet.Row[0].RESOURCE_ID == "us:riaa:prohibitexplicitlyrics";  
						assert myXML.ResultSet.Row[0].RESOURCE_ID == "US:RIAA:PROHIBITEXPLICITLYRICS"; 
					}
				else if ((geoProfile == "GB") || (geoProfile == "AU") || (geoProfile == "NZ") || (geoProfile == "IE") || (geoProfile == "AT") || (geoProfile == "CH") || (geoProfile == "DE") || (geoProfile == "FR"))
					{
						assert myXML.ResultSet.Row[0].POLICY_CLASS == "300"; 

						assert myXML.ResultSet.Row[1].POLICY_CLASS == "302";  
						//      assert myXML.ResultSet.Row[1].RESOURCE_ID == "us:riaa:prohibitexplicitlyrics";  
						assert myXML.ResultSet.Row[1].RESOURCE_ID == "US:RIAA:PROHIBITEXPLICITLYRICS"; 
					} 
			} 
		else
			{
				assert myXML.ResultSet.Row[0].POLICY_CLASS == "304";
			}


log.info "Policy Validation Passed";	


</script></con:config></con:testStep><con:testStep type="groovy" name="Verify_USER_LEGAL_GUARDIAN_Table" id="6e0351ad-a3cd-417e-b296-cfb3ced76b07"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

if ((context.expand( '${#TestCase#IsMinor}' )=="true") &amp;&amp; context.expand( '${#Testcase#Requestee}')=="CHILD")
	{
	  	def dbHost = context.expand( '${#Project#DBHost}' );
		def userID = context.expand( '${#TestCase#User_OID}' );
	  	def node_OID = context.expand( '${#Project#Node_OID}' );

		a = new dbUtils.dbUtils(log,dbHost);
		b = new dbUtils.dbUser(log,dbHost);
		
		String sql = """select ATTESTATION_STATUS from USER_LEGAL_GUARDIAN where USER_OID = hextoraw('$userID')""";
		
		results = a.SelectFromDB(sql,dbHost);
		
		/*
		*  If zero length, no need to continue;
		*/
		assert results.length() > 0;
		
		def myXML = new XmlSlurper().parseText(results);
		
		log.info "myXML.ResultSet.Row.size() is [" + myXML.ResultSet.Row.size() + "]";
		
		assert myXML.ResultSet.Row.size() > 0;
		
		assert myXML.ResultSet.Row[0].ATTESTATION_STATUS == "pending";  
		
		log.info "Legal Guardian Validation Passed";	
	}
else
	{
		log.info "No Legal Guardian Validation Required";
	}
</script></con:config></con:testStep><con:testStep type="groovy" name="End_Of_DB_Validations" id="418d894c-0d5e-41ce-af71-087c1cf97b82"><con:settings/><con:config><script>

log.info "DB Validations Complete";</script></con:config></con:testStep><con:properties><con:property><con:name>ADULT_DOB_XML</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>attested</con:name><con:value/></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2002-09-08</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130910_092427</con:value></con:property><con:property><con:name>IsMinor</con:name><con:value>true</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Node_User_ID</con:name><con:value>E60068AEF0205738E0401F0A07990D3F</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>90508</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>Role</con:name><con:value>nodeIdRTL</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Create_GeoProfile</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Status</con:name><con:value>FAIL</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130910_092427</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00021_UserCreate_AUTH_Creator_ADULT_Full_New_YOUTH_Standard_201_CREATED_P1</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20130910_092427</con:value></con:property><con:property><con:name>User_OID</con:name><con:value>E60068AEF0215738E0401F0A07990D3F</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1999-09-14</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>GeoProfile</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters><con:property><con:name>ACCID</con:name><con:value/></con:property></con:reportParameters><con:breakPoints><con:testStepId>d7765da1-c221-46a8-b0ee-4ada2ad4098a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>418d894c-0d5e-41ce-af71-087c1cf97b82</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AccountCreate API_Invalid_Geo" searchProperties="true" id="6cf8069e-8941-4d58-8b32-64283b60b1f7"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="f7bddf49-6db4-4985-aff9-4deaa2d2c064"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("accountname",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);

tP.setPropertyValue("Request_XML",tP.getPropertyValue("Request_XML_Buffer"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="21823cf1-bc0d-48ee-a997-688c0ebdf6a0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname);
def callTS = tP.getTestSuiteByName(callTSname);

tP.setPropertyValue("Country",callTS.getPropertyValue("Country"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));


def b = tC.getPropertyValue("nodeid");

log.info b;</script></con:config></con:testStep><con:testStep type="groovy" name="Generate AccountName" id="f62a5838-f97c-4e6a-afba-46efa757a6f1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def today= new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("AccountName","accname_"+today);</script></con:config></con:testStep><con:testStep type="groovy" name="Set Coordinator Schema" id="803afdb8-9083-46b9-949e-93b22ed1dfac"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

log.info "versionMinor: "+tP.getPropertyValue("versionMinor");

def v2 = context.expand( '${#Project#versionMinor}' )
def schema = tP.getPropertyValue("coordinatorSchema_"+v2);

tP.setPropertyValue("coordinatorSchema",schema);
log.info "Setting the coordinatorSchema value ---- "+schema;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="0ef852eb-4838-49de-8714-3ee6cef59e87"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 
import soapUIUtils.soapUIUtils;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
//def certPath = groovyUtils.projectPath

//Set fileKeyStorePath value 
//log.info "certPath: "+certPath;
//tP.setPropertyValue("certPath",""+certPath);

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")

myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("Account_Create");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="Account_Create" id="4bb6eb13-d75a-4d54-bf0b-b165247f3108"><con:settings/><con:config service="Account" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account" methodName="AccountCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Account_Create" mediaType="application/xml" postQueryString="false" id="ca4ff0a9-00f8-41e3-871a-d799b7db932c" accept="" sslKeystore="RET_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@remove_empty_content">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="${#Project#coordinatorSchema}"> 
<DisplayName>${#TestCase#AccountName}</DisplayName>
<Country>${#Project#Country}</Country>
</Account>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="dedd7305-ca7f-41da-95a7-7c4cbeedff69"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('Account_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 			
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);

</script></con:config></con:testStep><con:testStep type="groovy" name="Validate Response" id="10f90b63-ea39-41f9-bf67-b37d8d6219ca"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def url       = context.expand( '${#Project#Provision_HostName}' );
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');


boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = context.expand( '${#Project#expectHTTPcontenttype}' );
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}

this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
		
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
		errorReason = "The supplied country code is invalid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
		errorReason = "The country code cannot be null.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
		errorReason = "API call not authorized";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserNotActive";
		errorReason = "User is not active";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
		errorReason = "Requesting User ID Not Specified";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;
	case "INVALID_GEO":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestedOperationNotAllowedForSpecifiedGeography";
		errorReason = "The requested operation is not allowed for the specified geography.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestedOperationNotAllowedForSpecifiedGeography";

	break; 	
	
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
/*
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
*/
//Location Header

if (httpLocationHeader) {
      assert context.expand( '${#TestCase#httpLocation}') != null;


      def a = context.expand( '${#TestCase#httpLocation}');
      def b = a.toURL();
      def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

      if (tP.getPropertyValue("URLEncode") == "NO")
      {
                                
		assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
                 
          int lastColon = urlStr.lastIndexOf(':');
	     int lastSlash = urlStr.lastIndexOf('/');
	     accountid     = urlStr.substring(lastColon + 1);
	     def node_Account = urlStr.substring(lastSlash + 1);

          tC.setPropertyValue("NODE_ACCOUNT_ID",accountid);
                    
          tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",node_Account);                        
          tC.setPropertyValue("NODE_ACCOUNT_ID_FULL_Encoded",URLEncoder.encode(node_Account,"UTF-8")); 
          tC.setPropertyValue("NODE_ACCOUNT_ID_FULL_Decoded",URLDecoder.decode(node_Account,"UTF-8"));                                                  
          
      } else {
            assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*");
            int lastColon = urlStr.lastIndexOf('%3A');
            int lastSlash = urlStr.lastIndexOf('/');
            accountid     = urlStr.substring(lastColon + 3);
            def node_Account = urlStr.substring(lastSlash + 1);

            tC.setPropertyValue("NODE_ACCOUNT_ID",accountid);
            
          tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",node_Account);                        
          tC.setPropertyValue("NODE_ACCOUNT_ID_FULL_Encoded",URLEncoder.encode(node_Account,"UTF-8")); 
          tC.setPropertyValue("NODE_ACCOUNT_ID_FULL_Decoded",URLDecoder.decode(node_Account,"UTF-8")); 
      }

} else {
      	assert context.expand( '${#TestCase#httpLocation}') == "";
}





//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		log.info errorLink;

		log.info myXML.Error.ErrorLink.toString();
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:testStep type="groovy" name="Return the NodeAccountId to the Calling Test Case" id="2996bfb1-8379-4251-83e8-05eb1a3341a3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("accountname",tC.getPropertyValue("accountname"));
callTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
callTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

</script></con:config></con:testStep><con:properties><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/11/Account/urn:dece:accountid:org:dece:07C90B306FE05F2CE05305991F0A7335</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">RET</con:value></con:property><con:property><con:name>ResponseType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00003_AccountCreate_with_country_LU_107_200_OK_P0</con:value></con:property><con:property><con:name>sName</con:name><con:value>04.AccountCreate_Backward_Compatability</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C90B306FE05F2CE05305991F0A7335</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>accountname</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">accname_20141114_07353</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:07C90B306FE05F2CE05305991F0A7335</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E955244D99F28971E0401F0A07992091</con:value></con:property><con:property><con:name>Consent_Version</con:name><con:value>20140811</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL_Encoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C90B306FE05F2CE05305991F0A7335</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL_Decoded</con:name><con:value>urn:dece:accountid:org:dece:07C90B306FE05F2CE05305991F0A7335</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>b8ba87db-df08-4f36-8c88-c580bb3ec25b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9ce61892-9d8a-4055-b161-e19938292410</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c50a4409-da80-4892-a2c3-07a22e674bd0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd13479c-f25a-495b-8c94-31e5557a93a8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>dbd205af-6a2e-447d-a1c5-eb49c82ff6e4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>64613dd6-4244-4f8a-8186-0d4745fa0115</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Account_Get_API" searchProperties="true" id="4d78d731-9853-4db4-9260-f602b5a707a8"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="4943cef2-db7c-4a1d-91f7-106e11f9663e"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="c61d4047-9a04-410d-9e04-d5bf73ad8372"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("AccountGet");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep.name]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="AccountGet" id="55fd92d3-cdab-418d-82b1-ad6b3b4de9b8"><con:settings/><con:config service="Account" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}" methodName="AccountGet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AccountGet" mediaType="application/xml" sslKeystore="RET_concat.pem" id="e1b8ad00-9ed3-4f09-980e-f2f86bdf18ca"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="ece9afe0-e290-4a46-9cd8-2e78d3bd2f42"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('AccountGet');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String ETag = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);

tC.setPropertyValue("ETag", ETag);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="b95d174e-ad46-47b1-9c92-03c8890a0820"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseTypeAccountGet}' );
def usercount = context.expand( '${#TestCase#UserCount}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#Project#Node_Account}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = context.expand( '${#Project#expectHTTPcontenttype}' );
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		assert context.expand( '${#TestCase#httpCacheControl}') != null;
		assert context.expand( '${#TestCase#httpEtag}') != null;
		assert context.expand( '${#TestCase#httpExpires}') != null;
		assert context.expand( '${#TestCase#httpLastModified}') != null;
		//XMLbodynull        = true;
		//httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
		errorReason = "The country code is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
		errorReason = "The country code is required.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
		errorReason = "The API call is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	break;
	
	case "USER_INACTIVE":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
		errorReason = "The requestor is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;
	
	case "USER_REQUESTING_NOT_PROVIDED":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
		errorReason = "Requesting User ID Not Specified";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;

	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "The user does not have permission to perform the requested action.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;	

     case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "SPL_CS_ALLOWED_ACCT":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;

     case "ACCT_ALREADY_DELETED":
	     expectHTTPstatus = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:AccountDeleted";
		errorReason = "The account has already been removed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDeleted";
     break;


	
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}


//  -- Comment for cache issue


//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
	log.info "myXML  "+ myXML;
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	else {
		//assert myXML.Account.size() == 1;
		assert myXML.DisplayName.size() == 1;
		assert myXML.Country.size() == 1;
		assert myXML.RightsLockerID.size() == 1;
//		assert myXML.ActiveStreamCount == 0;
//		assert myXML.AvailableStreams == 12;
		assert myXML.UserList.size() == 1;
		assert myXML.UserList.UserReference.size().toString() > 0;
		assert myXML.ResourceStatus.size() == 1;
		assert myXML.ResourceStatus.Current.size() == 1;
		assert myXML.ResourceStatus.Current.@CreatedBy.size() == 1;
		assert myXML.ResourceStatus.Current.@CreationDate.size() == 1;
		assert myXML.ResourceStatus.Current.Value.size() == 1;
		assert myXML.ResourceStatus.Current.Description.size() == 1;

	     if(context.expand( '${#TestCase#CS}') == 'Y')
	     {
	     	log.info "CustomerSupport"
	       assert myXML.ResourceStatus.History.size() == 1;
	     }
	}
} 

</script></con:config></con:testStep><con:testStep type="groovy" name="Return_ETag_to_Calling_TestCase" id="81dd5324-ce51-49a9-94b4-16c619296861"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));</script></con:config></con:testStep><con:properties><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<dece:Account AccountID="urn:dece:accountid:org:dece:081FD5432A33432CE05307991F0A5C45" xmlns:dece="http://www.decellc.org/schema/2015/03/coordinator" xmlns:md="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#">
   <dece:DisplayName>accname_20141118_033259</dece:DisplayName>
   <dece:Country>AT</dece:Country>
   <dece:RightsLockerID>urn:dece:rightslockerid:org:dece:081FD5432A3B432CE05307991F0A5C45</dece:RightsLockerID>
   <dece:UserList>
      <dece:UserReference>urn:dece:userid:org:dece:081FF4C8F1A25C4EE05305991F0A217E</dece:UserReference>
   </dece:UserList>
   <dece:ResourceStatus>
      <dece:Current ModificationDate="2014-11-18T10:02:23.846Z" ModifiedBy="urn:dece:org:org:dece:RET" CreationDate="2014-11-18T10:02:14.785Z" CreatedBy="urn:dece:org:org:dece:RET">
         <dece:Value>urn:dece:type:status:active</dece:Value>
         <dece:Description>Flipping Account Status to active</dece:Description>
      </dece:Current>
   </dece:ResourceStatus>
</dece:Account>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00004_AccountUserCreate_with_country_AT_111_AccountDelete_107_SUCCESS_P0</con:value></con:property><con:property><con:name>sName</con:name><con:value>07.AccountDelete_Backward_Compatability</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>DF6FE78EF7554B5BE0401F0A05994050</con:value></con:property><con:property><con:name>SecondUserName</con:name><con:value>username_20130618_082841</con:value></con:property><con:property><con:name>SAML</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SAML2 Assertion=nVZbb/I4EP0rKH2sQuJACEQFiULpl94LbLftS2UcB0wTG2wHQn/92gFSoJdl9wU0k/HMmYuP50zAJHb8thCYS8JoKUtiKvxc2zRSTn0GBRE+hQkWvkT+oH174ztl24fbI0Yp6DaNt0YNVGqjBjSjsALMahi5ZgM3RiasediLRiB0HUeZCpHigAoJqWwajg2qJgAmqA+B7duODxrlmu28GqUnzIXyrUzKtrEBlYmmMZFy5lvWcrksLytlxseWY9vAer69GaAJTqDROltnlAfirY09KocY4ThGZcQS68zaszkLhT8gYwplyvEmVvhTLNuyG5ayCQUZnxjFWRwGNGK52IGUUYJgTD6grs8tlhMWltrxmHEiJ8mPSQBbOzZxhkwEqvTEsPahHeloDyEX0BQTCDa++jjCHFOES3/1g6ZxclzX8qNDDqmIGE/Evvjf8GC6wDGb4dAU27Q20I53+E2lWmcY+QFFcSrIAt/pYZ1BhMWmmxgd76r0wHFEshsi1IBmQqOzduEdiOtqdMkYC/l/GrTTnLWTJxinuBXMh73g8bJaSeaXjUX3ko4H547LRtAeN3MAu8a5omjtWjwYymKI1ifoxe28E7WfHrPporOqS/shHS9fxgmvut51r/44P/0IO1lU+TOsvYxuXk+X7LYdy8vJ05+gO3wFr6No2r/7uFvN+f1oMrx+94IkPhcWuGPPk0H/8T3DEtw9Od2r8yxzvUfRdx8rr1JMnclzxROdl27ben2+6oABX1keal/TZS/svvBVNggAv1oltdMERE/Tv7seaxbp7ODf123v/CAdTTGSW1GPQdAt9VSXoPydzLSGhGaUm/ozTT5CYiqNlj6lucNPFd2R0Fc9XMt2HfR61U69B9qO26leXNhuxXYbDdCz2w7wLrYks0ZxALHDaER0LE2567H5HSBKfIFpiLm5YKliOmH84rELJSwFtK8uAaMCD5mi57GAXi1bLLxpPB19MDYPp24qJ5lRumPynt7zdiQx36fkyh4l9zEiM4I1b+uxFmquhVSlmMNFKmNQXsAyxalidq5J1neqddcSJJnFWAO1EhamMS7PJrO8MJZY/zsmRCLX9i+G+WX7Ma3Db9sKKJuQaAOhcznHqov4m7fF3ibyc8K13YS37ttpSPS9UuWUnKA1kv1Pn1Oix6MYEZXRW2fwBra4C/Ojj389af0CyjqsRxEoXJCdsNuXW70BijVa227OYXleTheLNO+fp9mRK/eKsoBr2Y41wChVvLYasndMrcKLddQjUgA/CF7o9yGq0aQDCSVO1MCVcvGIrWGAhd4aAnVRsmNXkr2QqnQSZ/I7XSdWG49G/OtShHyk7ZT6Qf0tGQ8/O/aNr504Kk+1NEhCx1rSD8jqh7lATLklivoY33X+nYPvgu8riyIXWKQaqFEq8c9fSprTmgZEiKVUBl0jV+zybI5TrmbY/zT64ian8mK3I/++3JkkHwGE1UYoSO5fP9G+vgJ0vMPVm6CHdN11qxWnXamo305O196arhV9u0VR9tC1vqi/anbqdDjjrX8A</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>D3DF7BAE6D161DAEE0401F0A05993EE0</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADF6FE78EF7554B5BE0401F0A05994050</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:081FD5432A33432CE05307991F0A5C45</con:value></con:property><con:property><con:name>ResponseTypeAccountGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"081FE26B60996352E05307991F0A6EF0:6EEAC643"</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E763CEDB3CA1FFCEE0401F0A07991BDA</con:value></con:property><con:property><con:name>CS</con:name><con:value>N</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5ff78eb3-d79f-4f4a-b9a8-5ec1c84f61c0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3d78db1c-105b-43a0-b406-6bb0f690c833</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662fb201-c4e7-401c-b10a-548ea13f5020</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Account_Update_API" searchProperties="true" id="ceb55155-b734-49b0-bf39-858002c515ed"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="b872bee4-815e-45cd-865b-a4d3dfa4c046"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeAccountUpdate"));
</script></con:config></con:testStep><con:testStep type="groovy" name="SET PEM" id="1a8a90a1-cd09-4970-8fa7-32db6b90e30c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("AccountUpdate");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep.name]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="AccountUpdate" id="750de236-86a6-4bbe-abd6-b06438b2e7b1"><con:settings/><con:config service="Account" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}" methodName="AccountUpdate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AccountUpdate" mediaType="application/xml" sslKeystore="RET_concat.pem" id="e1b8ad00-9ed3-4f09-980e-f2f86bdf18ca" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="If-Match" value="${#TestCase#eTag}"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="${#Project#coordinatorSchema}"> 
<DisplayName>${#TestCase#AccountDisplayName}</DisplayName>
<Country>${#TestCase#Country}</Country>
${#TestCase#ResourceStatus}
</Account>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="2ee87bb2-ba69-4b52-91d6-8663a262d58a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('AccountUpdate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="ce427d79-8c15-4092-8b97-561dec29f08e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def url       = context.expand( '${#Project#Provision_HostName}' );
//def urnacct   = tP.getPropertyValue("urnaccount");
//def acct      = tC.getPropertyValue("nodeaccountid");
//def urnnode   = tP.getPropertyValue("urnNode");

//def sh            = tC.getPropertyValue("streamhandleFULL");
//def nodeid        = tC.getPropertyValue("nodeid");
//def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#Project#Node_Account}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = context.expand( '${#Project#expectHTTPcontenttype}' );
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = false;
		//httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The country code is not valid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code is required.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "The API call is not authorized.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "The member's user ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	break;
	
	case "USER_INACTIVE":
	expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
	errorReason = "The requesting member is not active.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;
	
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "A user ID is required.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;

	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "ACC_ID_INVALID":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountIDNotValid";
		errorReason = "The account ID is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIDNotValid";
	break;

	case "CANNOT_UPDATE_COUNTRY":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:CountryCannotBeChangedOnceSet";
		errorReason = "The country cannot be changed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#CountryCannotBeChangedOnceSet";
	break;

	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";		
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;	

     case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;


     case "SPL_CS_ALLOWED_ACCT":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;

     case "ACCT_ALREADY_DELETED":
	     expectHTTPstatus = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:AccountDeleted";
		errorReason = "The account has already been removed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDeleted";
     break;	

     case "STS_UPDT_NOT_ALLWD":
          expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:ResourceStatusElementNotAllowed";
		errorReason = "The resource status element is not allowed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceStatusElementNotAllowed";
     break;
	case "INVALID_GEO":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestedOperationNotAllowedForSpecifiedGeography";
		errorReason = "The requested operation is not allowed for the specified geography.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestedOperationNotAllowedForSpecifiedGeography";

	break; 	


	
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
//if (XMLbodynull) {
//	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
//} else {
//	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
//}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}




//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
	/*else {
		this.log.info "ResourceStatus size is " + myXML.ResourceStatus.size();
		this.log.info "ResourceStatus.Current size is " + myXML.ResourceStatus.Current.size();
		this.log.info "ResourceStatus.Current.Value size is " + myXML.ResourceStatus.Current.Value.size();
		this.log.info "ResourceStatus.Current.Description size is " + myXML.ResourceStatus.Current.Description.size();
		this.log.info "myXML.RequestingUserID size is " + myXML.RequestingUserID.size();
		this.log.info "myXML.RightsTokenID size is " + myXML.RightsTokenID.size();
		this.log.info "ExpirationDateTime size is " + myXML.ExpirationDateTime.size();
		assert myXML.ResourceStatus.size() == 1;
		assert myXML.ResourceStatus.Current.size() == 1;
		assert myXML.ResourceStatus.Current.Value.size() == 1;
		assert myXML.ResourceStatus.Current.Description.size() == 1;
	
	}*/
} 

</script></con:config></con:testStep><con:properties><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>Country</con:name><con:value>AT</con:value></con:property><con:property><con:name>AccountID</con:name><con:value>E6BDE72E56ADA402E0401F0A05991956</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00004_AccountUserCreate_with_country_AT_111_AccountUpdate_107_SUCCESS_P0</con:value></con:property><con:property><con:name>sName</con:name><con:value>06.AccountUpdate_Backward_Compatability</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VyvM4ZSwZm8UVqCJAUr7ZCJAFXlKK3IAyRnYsmSVfP5IBB0jI5d4nV7db3acXHfWZILPQ9ppCQCJZxAvLWciFl2nrRppwLyKCCY+TGQhPUq/fvLn27CLyyPaIUfDbdeOFBphUqm7JDEp22XRQDZvVErhmmYyrr7jmjKGGlakQKfhcSMJl3bARdkyMTewMkO1h10O1omujkVF4hEQo38qkiIwNqKWoG1MpY8+yFotFcVEqRsnEshHC1vPNdZ9OYUaMxtk6oyxQ0tjY02IAFMKQFmk0s86sPZuzQHh9NuFEpglsYgXHYiEL1SxlEwg2+WXkZyHw+TjKxBbhEWeUhOyD6PrcgJxGQaEZTqKEyensaBIYaccmLKlJscN/GdY+tBMd7SFMBDHFlOCNrx6MIQFOofDQ8+vGr9O6lh0dJISLcZTMxL743/AAn0MYxRCYYpvWBtrpDr+pVOMMqOdzGqaCzeFWD2tMKIhNN4Ge7qrQTWDMltdMqAFdCo3O2oV3IK6r0WYTEPL/NGinOWsnjyRMoSGWPSf5fXEvYcjci1a7x98fwiv02gxoPQOwa5wp8tauxYOhzIdofWLYqd1fRP4qjbux9dRxrx7O6c15lb49Xt2UR+fX4Wvcva/dtdk0fLi8YOEzvnwLr0f/4LF167vP3RsYdkmTzSd4serffizSau9+9SqfyG06fBpUJg+X89+d6h0e1OZ0jJygMvQH/JJZz5e2M0GTxYjelxSC24+PYNS+7rLHq1KVvY+qo046EP3uEIXV+5SKJnvw63k6O/j3dds7309f34DKrajHwG8XLlSXiPyZzLSGBeY4M/ViTT5CApdGQ5/S3OGliu5Y4KkermVUadXsdge1nGarVLZRB7kl5NZq+AI1m+dOeUsyaxQHEFsRHzMdS1Puemx+BkhnngAeQGLOo1QxnTB+8NgmkhR83lOXIOICBpGiZxxOlrWVLWnZfa/8id/GGDsorgjXKNxG8o7fJc2xhGSfk909Tu4BZTEDTdx6roUabCFVLd7JPJUhLs5JkUOqqD3RLOvZTtW1BJvFIWik1iwK0hCK8TTOKmOJ9dc2CRWZttcZZLftaF6H/7YlUDYB0wZC53IOqo3w5XFxPHebyPGEq7sJb90304Dpi6XqKRNG10j2f32OiZ6PfEZURi+t/gve4s7NTz7+9aT1AyjrsB55oGDOdsJun271CCjaaGy7+U6K78V0Pk+z/lU0PSbKveIs7FrItvpAU0Vsq0H0B7iVe7FOekVy4AfBc/0+xFROeV8SCTM1cIVMPGFt6IPQa4Ovbsry1J1kL6QqnYSl/E7XCtXKoxH/uBVRj2o7pe6qzyJKgs+OfeNrJ47KU20NkvGJlvQLsjoyFzRSbpnivijZdf6dg++C7yvzIudYpBqo11TC8T8FTWp1g1AapVz6bSNT7BJthlOuYvA+jb64ybg8X+7Yv293JstGgIJaCQXL/Os32tNXgE92yHoT9JCvS6jsYPfcKbXbrV2+LrXdz/ncQ9f4ov6q2anT4Yw3/gI=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:07C9306415B43DDCE05305991F0A3D51</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountDisplayName</con:name><con:value>accname_20141114_074623</con:value></con:property><con:property><con:name>eTag</con:name><con:value>"07C93061499B3DD8E05305991F0A7E5F:3D48A091"</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E763CB6F92EFB57BE0401F0A05995250</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>4c267fcb-f9a3-4c2a-b8ba-ac05705d407d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Account_Update_DB_Validation" searchProperties="true" id="fa31e0c1-9062-4ff4-a16d-109624f4cefa"><con:settings/><con:testStep type="groovy" name="Verify_Account_DB_Details" id="3073d3aa-cdcc-4ebf-939d-5add5d4c5374"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def tC  = testRunner.getTestCase();

def dbHost = context.expand( '${#Project#DBHost}');
def userName = context.expand( '${#TestCase#Username}' ) 
def rowcount = context.expand( '${#TestCase#Rowcount}' );


def Result;
def myXML;
a = new dbUtils.dbUtils(log,dbHost);
b = new dbUtils.dbAccount(log,dbHost);
c = new dbUtils.dbUser(log,dbHost);

	 	log.info "SQL Query " 
	 	String sql = """select A.STATUS,to_char(rawtohex(A.ACCOUNT_OID)) ACCOUNT_OID,
			A.DISPLAY_NAME DISPLAY_NAME,to_char(rawtohex(B.HISTORY_OID)) HISTORY_OID
			from ACCOUNT A, ACCOUNT_STATUS_HISTORY B
			where A.ACCOUNT_OID = (select account_oid from account_user where username = lower('$userName')) 
			and B.HISTORY_OID = (select max(HISTORY_OID) from ACCOUNT_STATUS_HISTORY 
			where A.ACCOUNT_OID = (select account_oid from account_user where username = lower('$userName')))""";
				
		Result = a.SelectFromDB(sql,dbHost);
		log.info "Result  : " + Result
	 	myXML = new XmlSlurper().parseText(Result);
	
	 	log.info "Results  "+  myXML;
	 	def count = myXML.ResultSet.Row.size();
	 	log.info "RowCount is  " + count;
		assert (myXML.ResultSet.Row.size().toString() == rowcount);

 		assert myXML.ResultSet.Row.STATUS.text() == context.expand( '${#TestCase#ACCOUNT_STATUS}' );
	     assert myXML.ResultSet.Row.ACCOUNT_OID.text() == context.expand( '${#TestCase#account_oid}' );
	     assert myXML.ResultSet.Row.DISPLAY_NAME.text() == context.expand( '${#TestCase#DisplayName}');	 		

		log.info " Account DB Validations Completed";




</script></con:config></con:testStep><con:properties><con:property><con:name>ACCOUNT_OID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">00FEEEA64202201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>ACCOUNT_STATUS</con:name><con:value>active</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value>06.AccountUpdate_Backward_Compatability</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00023_AccountUserCreate_with_country_US_107_AccountUpdate_111_SUCCESS_P0</con:value></con:property><con:property><con:name>USER_SAML_STATUS</con:name><con:value>deleted</con:value></con:property><con:property><con:name>USER_STATUS</con:name><con:value>active</con:value></con:property><con:property><con:name>Username</con:name><con:value>ugr4_bc_firstuser20140819_124733</con:value></con:property><con:property><con:name>DisplayName</con:name><con:value>accname_20140819_124735</con:value></con:property><con:property><con:name>Rowcount</con:name><con:value>1</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>142255c0-283c-4c33-b8e9-5f6a22d944a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Account_Delete_API" searchProperties="true" id="e8b6d795-f208-4e13-bf70-bf4cb5768304"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="d39c536f-2463-487b-8bb1-847ef08a8471"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="47821372-dfce-4c85-ade6-d968a44c5fd6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("AccountDelete");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep.name]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="AccountDelete" id="4f6fd83f-0283-465d-abe4-8fe2db2e73ca"><con:settings/><con:config service="Account" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}" methodName="AccountDelete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AccountDelete" mediaType="application/xml" sslKeystore="RET_concat.pem" id="7e19750b-606f-4d7d-bda7-cfa0c9074a64" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="IF-Match" value="${#TestCase#ETag}"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="6b5b6541-d277-4803-bf37-6fa3b4f2f88a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('AccountDelete');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="eb5f25cb-cdf8-4f8d-ad16-2f8bc38b9a92"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );
def errorRespType = context.expand( '${#TestCase#ResponseTypeAccountDelete}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = context.expand( '${#Project#expectHTTPcontenttype}' );
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) 
{
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = true;
		//httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "The API call is not authorized.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	break;
	
	case "USER_INACTIVE":
	expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
	errorReason = "The requesting member is not active";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;
	
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;

	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;	

     case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "SPL_CS_ALLOWED_ACCT":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;

     case "ACCT_ALREADY_DELETED":
	     expectHTTPstatus = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:AccountDeleted";
		errorReason = "The account has already been removed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDeleted";
     break;
	case "INVALID_GEO":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestedOperationNotAllowedForSpecifiedGeography";
		errorReason = "The requested operation is not allowed for the specified geography.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestedOperationNotAllowedForSpecifiedGeography";

	break; 	

     

     
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}




//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="7f65628e-8485-4094-a868-a40a58114e59"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
def responseTypeAccountDelete = context.expand( '${#TestCase#ResponseTypeAccountDelete}' )
</script></con:config></con:testStep><con:properties><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SAML2 Assertion=nVZbb/I4EP0rKH2sQuJACEQFiULpl94LbLftS2UcB0wTG2wHQn/92gFSoJdl9wU0k/HMmYuP50zAJHb8thCYS8JoKUtiKvxc2zRSTn0GBRE+hQkWvkT+oH174ztl24fbI0Yp6DaNt0YNVGqjBjSjsALMahi5ZgM3RiasediLRiB0HUeZCpHigAoJqWwajg2qJgAmqA+B7duODxrlmu28GqUnzIXyrUzKtrEBlYmmMZFy5lvWcrksLytlxseWY9vAer69GaAJTqDROltnlAfirY09KocY4ThGZcQS68zaszkLhT8gYwplyvEmVvhTLNuyG5ayCQUZnxjFWRwGNGK52IGUUYJgTD6grs8tlhMWltrxmHEiJ8mPSQBbOzZxhkwEqvTEsPahHeloDyEX0BQTCDa++jjCHFOES3/1g6ZxclzX8qNDDqmIGE/Evvjf8GC6wDGb4dAU27Q20I53+E2lWmcY+QFFcSrIAt/pYZ1BhMWmmxgd76r0wHFEshsi1IBmQqOzduEdiOtqdMkYC/l/GrTTnLWTJxinuBXMh73g8bJaSeaXjUX3ko4H547LRtAeN3MAu8a5omjtWjwYymKI1ifoxe28E7WfHrPporOqS/shHS9fxgmvut51r/44P/0IO1lU+TOsvYxuXk+X7LYdy8vJ05+gO3wFr6No2r/7uFvN+f1oMrx+94IkPhcWuGPPk0H/8T3DEtw9Od2r8yxzvUfRdx8rr1JMnclzxROdl27ben2+6oABX1keal/TZS/svvBVNggAv1oltdMERE/Tv7seaxbp7ODf123v/CAdTTGSW1GPQdAt9VSXoPydzLSGhGaUm/ozTT5CYiqNlj6lucNPFd2R0Fc9XMt2HfR61U69B9qO26leXNhuxXYbDdCz2w7wLrYks0ZxALHDaER0LE2567H5HSBKfIFpiLm5YKliOmH84rELJSwFtK8uAaMCD5mi57GAXi1bLLxpPB19MDYPp24qJ5lRumPynt7zdiQx36fkyh4l9zEiM4I1b+uxFmquhVSlmMNFKmNQXsAyxalidq5J1neqddcSJJnFWAO1EhamMS7PJrO8MJZY/zsmRCLX9i+G+WX7Ma3Db9sKKJuQaAOhcznHqov4m7fF3ibyc8K13YS37ttpSPS9UuWUnKA1kv1Pn1Oix6MYEZXRW2fwBra4C/Ojj389af0CyjqsRxEoXJCdsNuXW70BijVa227OYXleTheLNO+fp9mRK/eKsoBr2Y41wChVvLYasndMrcKLddQjUgA/CF7o9yGq0aQDCSVO1MCVcvGIrWGAhd4aAnVRsmNXkr2QqnQSZ/I7XSdWG49G/OtShHyk7ZT6Qf0tGQ8/O/aNr504Kk+1NEhCx1rSD8jqh7lATLklivoY33X+nYPvgu8riyIXWKQaqFEq8c9fSprTmgZEiKVUBl0jV+zybI5TrmbY/zT64ian8mK3I/++3JkkHwGE1UYoSO5fP9G+vgJ0vMPVm6CHdN11qxWnXamo305O196arhV9u0VR9tC1vqi/anbqdDjjrX8A</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00004_AccountUserCreate_with_country_AT_111_AccountDelete_107_SUCCESS_P0</con:value></con:property><con:property><con:name>sName</con:name><con:value>07.AccountDelete_Backward_Compatability</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:081FD5432A33432CE05307991F0A5C45</con:value></con:property><con:property><con:name>ResponseTypeAccountDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"081FE26B60996352E05307991F0A6EF0:6EEAC643"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5ff78eb3-d79f-4f4a-b9a8-5ec1c84f61c0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3d78db1c-105b-43a0-b406-6bb0f690c833</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662fb201-c4e7-401c-b10a-548ea13f5020</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Account_Delete_DB_Validation" searchProperties="true" id="6b53e11a-a3a3-464e-9be7-9889c8cd79bc"><con:settings/><con:testStep type="groovy" name="Verify_User_DB_Details" id="567f4687-c18c-433b-ac4f-0a4439f1ecee"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def tC  = testRunner.getTestCase();

def dbHost = context.expand( '${#Project#targetsystem}');
def accID = context.expand( '${#TestCase#ACCOUNT_OID}' )

def aCCOUNT_STATUS = context.expand( '${#TestCase#ACCOUNT_STATUS}' )
def uSER_SAML_STATUS = context.expand( '${#TestCase#USER_SAML_STATUS}' )
def uSER_STATUS = context.expand( '${#TestCase#USER_STATUS}' )

def Result;
def myXML;
a = new dbUtils.dbUtils(log,dbHost);
b = new dbUtils.dbAccount(log,dbHost);
c = new dbUtils.dbUser(log,dbHost);

	 	
	 	String sql = """Select to_char(rawtohex(accusr.user_oid)) user_oid, accusr.status USER_STATUS,acc.status ACCNT_STATUS,
	 					to_char(rawtohex(ndusr.node_user_id)) node_user_id, nusa.status NUSA_STATUS 
	 					from account acc INNER JOIN account_user accusr 
	 					ON 
	 					acc.account_oid=hextoraw('$accID')  
	 					and acc.account_oid=accusr.account_oid  
	 					INNER JOIN node_user ndusr 
	 					ON 
	 					ndusr.node_user_saml_uuid is not null 
	 					and accusr.user_oid=ndusr.user_oid  
	 					LEFT OUTER JOIN  node_user_saml_assertion nusa 
	 					ON  
	 					ndusr.node_user_saml_uuid=nusa.node_user_saml_uuid""";

	log.info "SQL Query : " + sql;
		Result = a.SelectFromDB(sql,dbHost);
		log.info "Result  : " + Result
	 	myXML = new XmlSlurper().parseText(Result);
	
	 	log.info "Results  "+  myXML;
	 	def count = myXML.ResultSet.Row.size();
	 	def i = 1;
	 	for (i; i&lt;=count-1;i++)
	 	{ 
	 		log.info "loop " + i
	 		log.info "%%%%% " + myXML.ResultSet.Row[i].ACCNT_STATUS.toString();
	 		assert myXML.ResultSet.Row[i].USER_STATUS.toString() == context.expand('${#TestCase#USER_STATUS}');
	 		assert myXML.ResultSet.Row[i].ACCNT_STATUS.toString() == context.expand('${#TestCase#ACCOUNT_STATUS}');
	 		assert myXML.ResultSet.Row[i].NUSA_STATUS.toString() == context.expand('${#TestCase#USER_SAML_STATUS}');		 		
	 	}

  log.info "User Validations Passed";


</script></con:config></con:testStep><con:properties><con:property><con:name>ACCOUNT_OID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">06C9F8B2728B771EE05307991F0AFB05</con:value></con:property><con:property><con:name>ACCOUNT_STATUS</con:name><con:value>deleted</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value>07.AccountDelete_Backward_Compatability</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00004_AccountUserCreate_with_country_AT_111_AccountDelete_107_SUCCESS_P0</con:value></con:property><con:property><con:name>USER_SAML_STATUS</con:name><con:value>deleted</con:value></con:property><con:property><con:name>USER_STATUS</con:name><con:value>active</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>142255c0-283c-4c33-b8e9-5f6a22d944a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserValidationTokenCreate_Account_User" searchProperties="true" id="86cf74cd-3f7c-4442-94aa-9d27131ed137"><con:settings/><con:testStep type="groovy" name="SetPem" id="862862d6-5479-49c6-a1b3-21b6fed2e38a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("UserValidationTokenCreate");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="UserValidationTokenCreate" id="9c679102-b9fd-41c9-bb1b-bbbe437632dd"><con:settings/><con:config service="UserValidationTokenCreate" resourcePath="${#Project#HostName}/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}/VerificationToken/{TokenType}" methodName="UserValidationTokenCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserValidationTokenCreate" mediaType="application/xml" postQueryString="false" sslKeystore="RET_concat.pem" id="bc89fd3d-63d7-4393-8f06-84b03c63632f" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">Mandatory and Data</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="TokenType" value="${#TestCase#TokenType}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Response_Details" id="bfa0e7c3-5cad-4475-a85c-ee33d0f85217"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('UserValidationTokenCreate');
def expXML = tStep.httpRequest.response.getResponseContent();
log.info "Extracting Response Details"

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);

log.info "End of Extracting Response Details"
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response_Details" id="2fc4592d-0d42-4a8f-b94b-9bcaad655a02"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#errorRespType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;


String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype =  context.expand( '${#Project#expectHTTPcontenttype}' );
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
                errorHost = "http://error.decellc.org";
} else {
                errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
               case "SUCCESS":        
                			  log.info "Success message --->"	                        
                                expectHTTPstatus   = "HTTP/1.1 200 OK";
                                XMLbodynull        = true;
                                httpLocationHeader = true;
                                //this.log.info "Hello";
                break;           
                
                case "API_NOT_AUTH":
                		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
                		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
                		//errorReason = "API call not authorized";
					errorReason = "The API call is not authorized.";
                		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
                break;

                case "ACCOUNT_FORBIDDEN":
                          expectHTTPstatus = "HTTP/1.1 403 Forbidden";                               
                          errorID = "urn:dece:errorid:org:dece:AccountIdUnmatched";
                          //errorReason = "Request Account ID not match";
					 errorReason = "The account ID does not match.";
                          errorLink   = "https://qa.q.uvvu.com:7002/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
                break;

                case "SECURITY_FORBIDDEN":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";                               
                                errorID = "urn:dece:errorid:org:dece:securitycontext:forbidden:1122";
                                errorReason = "forbidden";							
                                errorLink   = "https://qa.q.uvvu.com:7002/deceerrors/error/error_response.html";
                break;

                case "NOT_FOUND":
                                expectHTTPstatus = "HTTP/1.1 404 Not Found";                               
                                 XMLbodynull        = true;
                                 httpLocationHeader = true;
                                 expectHTTPcontenttype = "text/xml;charset=UTF-8";                               
                break;   
			
			case "INVALID_TOKENTYPE":						
                                expectHTTPstatus = "HTTP/1.1 400 Bad Request";                               
                                errorID = "urn:dece:errorid:org:dece:TokenTypeNotValid";
                                //errorReason = "Token type in the request is not valid";
						  errorReason = "The token type is not valid";
                                errorLink   = "https://qa.q.uvvu.com:7002/rest/$major/$minor/error/en/ErrorList.html#TokenTypeNotValid";
                break;   

			case "INVALID_METHOD":
						expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
						errorID = "urn:dece:error:MalformedRequest";
						//errorReason = "405 Method Not Allowed. The request cannot be fulfilled because the method is unknown or not supported at the requested server.";	
						errorReason = "The request cannot be fulfilled because the method is unknown or not supported by the server.";							
			break;
			
			case "INVALID_USERID":						
                                expectHTTPstatus = "HTTP/1.1 400 Bad Request";                               
                                errorID = "urn:dece:errorid:org:dece:UserIdInvalid";
                                //errorReason = "The supplied UserID is invalid.";
						   errorReason = "The user ID is not valid.";
                                errorLink   = "https://qa.q.uvvu.com:7002/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
                break;   
                case "FORBIDDEN_COORD":
			               expectHTTPstatus = "HTTP/1.1 403 Forbidden";
						errorID = "urn:dece:errorid:org:dece:RequestCannotBeServiced";
						//errorReason = "Coordinator cannot service the request.";
						errorReason = "The request cannot be serviced.";
						errorLink = "https://qa.q.uvvu.com:7002/rest/$major/$minor/error/en/ErrorList.html#RequestCannotBeServiced";
			break;
			case "USER_STATUS_NOT_VALID":
						expectHTTPstatus = "HTTP/1.1 400 Bad Request";
						errorID = "urn:dece:errorid:org:dece:UserStatusNotValid";
						//errorReason = "The user status is invalid.";
						errorReason = "The member\'s status is not valid.";
						errorLink = "https://qa.q.uvvu.com:7002/rest/$major/$minor/error/en/ErrorList.html#UserStatusNotValid";					
			break;
			case "REQUESTOR_NOT_ACTIVE":
						expectHTTPstatus = "HTTP/1.1 403 Forbidden";
						errorID = "urn:dece:errorid:org:dece:RequestorNotActive";
						//errorReason = "The requestor is not active.";
						errorReason = "The requesting member is not active.";
						errorLink = "https://qa.q.uvvu.com:7002/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";	
			break;
			case "FORBIDDEN_USER_LINK_CONSENT":
						expectHTTPstatus = "HTTP/1.1 403 Forbidden";
						errorID = "urn:dece:errorid:org:dece:Policy:UserLinkConsentRequired";
						errorReason = "The setting of the \"User Link Consent\" policy prevents the requested action from being completed.";
						errorLink = "https://qa.q.uvvu.com:7002/rest/$major/$minor/error/en/ErrorList.html#Policy:UserLinkConsentRequired";	
			break;

			case "Invalid_Assertion":
						expectHTTPstatus = "HTTP/1.1 403 Forbidden";
						errorID = "urn:dece:errorid:org:dece:securitycontext:InvalidAssertion";
						errorReason = "The security token is required.";
						errorLink = "https://qa.q.uvvu.com:7002/rest/$major/$minor/error/en/ErrorList.html";	
			break;
			case "INVALID_GEO":
						expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
						errorID     = "urn:dece:errorid:org:dece:RequestedOperationNotAllowedForSpecifiedGeography";
						errorReason = "The requested operation is not allowed for the specified geography.";
						errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestedOperationNotAllowedForSpecifiedGeography";

			break; 
						
			
}

// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
                //assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
                //assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}




//XML body should be null test
if (XMLbodynull) {

                assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
                def myXML = new XmlSlurper().parseText(XMLbody);
  
                if (errorRespType != "SUCCESS" ) {
                                // Verify response sizes...
                                assert myXML.Error.size() == 1;
                                assert myXML.Error.Reason.size() == 1;
                                assert myXML.Error.OriginalRequest.size() == 1;
                                assert myXML.Error.ErrorLink.size() == 1;
                                
                                // ErrorCode
                                this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
                                assert myXML.Error.@ErrorID.toString() == errorID;
                
                                // ErrorReason
                                this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
                                assert myXML.Error.Reason.toString() == errorReason;

                                // ErrorLink
                                assert myXML.Error.ErrorLink.toString() == errorLink;
                } 
                
 } 



</script></con:config></con:testStep><con:properties><con:property><con:name>TokenType</con:name><con:value>urn:dece:type:token:UnlockMe</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorRespType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs//RET_concat.pem</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00006_AccountUserCreate_107_UVTC_UserName_RequestorUserFAU_Active_RequesteeSelf_UnlockMe_111_SUCCESS_P0</con:value></con:property><con:property><con:name>sName</con:name><con:value>08.UserValidationTokenCreate</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+o6EP7ur+jUj0zpK5R2hBkE9OAVVPDo0S9OSJeSc9oUm7SAv/4mxSIgejl3hhkm283us7tPnuSMoTiy/DZjkHKSUKXfbaovgWvbDadR0xoAnubYjbrmmeBorlOzTcet24GHVKXPWAZ9yjiivKlahuloRkMzvXuz7jueb1pV17SeVeUBUiZCC5eqoSrLOKLML9I21SylfoIYYT5FMTCfY3/cHlz7wtNHJSa1dbZGWSRMWzPO576u42oAGKIIV3ES62f6js9ZwPwxCSniWQrvOQPWVN/3LhaL6sKuJmmoW4Zh6IanC5+AkfBUbZ2UmyHo02myXncQTSjBKCJvSIIaAJ8lgdKOwiQlfBZ/EdrUTUOG1mCJNWw69FTVPxIU6I6MtAMyZUhjM2SWwUYwhRQoBuXnqN9UT4+b4HrvfYoomyZpzPbWfwcJaA5RModAY2VlJbrjIx5oV+sMsN+nOMoYyWEoaTJHGJhym8KULK8JE+QLmFKMX1ky8SMlywD/zVjO9G2sArp+oDtdEgLj/2dm2/NaR3lAUQatGn186ps36PYquBvBIM8qThZ6P8IVumsWELad16A2435f75N1w633TW+3kHZdWq88/XwkPERXl96yzl9ZrzN7GF/aee/PgIUTeje4rFjPFXvY0ede52nYeV485+Hd4pL0HvRcv5y5Hbd9Ej6NLCfvDiuRM8iy7Naq2Ytpl3rmr99ueP9EH1L+zOzk93lqEfvqAuKrivd6voKbEbFcaDgsX5337t64kz5MTp57I9uxb4Zu3Hn7Z2k+Tn4Mmh81bdewaywlYZxNfgPm5VLSo99VLsS8EP9eXqSFBNq0cPXnUqMYB8rVltwlpcXPhACRwBfDXK8N46LX67W9ese2hdy5PaNmG67nmRdGu17zzFKD1ij2IHYSOiUyl1TZNX++B4hjnwENINXyJMMzYOo3EbuII6VPR+JwJJTBfSJU3JxA0EAxi+Y1Z2KiKDHrzmq1wO6bqgwTfkNv0vaUQ7qr3d6Odo8AkzkBKfCS4UxQnHHRjFeUZzwyqzmqUsjEFZBKFfYtITk6I/E8AglVj5Mgi6A6n82L1uhs/W9pCLPCOurdFyfvy8L2v5U9ED4BkQ5M1nIOYo5w4BIyykK+LNiytgsuw7ezgMgDJhrKU4LXSHY/ffBEEmRDElHRS2f8siHDxv3o7Z936t+A0vf7sUkU5GQrbXmbigtCyEernOYrqr5WszzPivm5UhpTEV43dcPVx4AzoW+r++QPUH0TQj/qetmg3su8se/iy/iMjjniEAu2KcXyiLfFGJh8W/TFOVke+3DZSSn6xmHJD9k6kXiCSMTfvlKwj6WfMN+Kv0WSBh/jOhBrK4+oUzwoOKGhXMmLZPUFKXAiwhKhfEm6HfxQgEPJd42bJm+wcMGmScbh6y+KlLSmijBOMsr7XbUwbMtsgZOv5uB/OH0KU0j5+928ZF/ezb8G12MheDFSN77kv501UtAFgyqfAAWWproUT02RnIZbsv4O8LCyW+53yr5bSeuT+bNlq6f756H1Lw==</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FEEEA96C332017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA96C272017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E85E69ED73884E92E0401F0A0599121A</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>05f29811-9d45-4892-ab42-c44278163a96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Rename_testCase" searchProperties="true" id="3f475dc5-28ac-40a5-8c03-b1461d26924f"><con:settings/><con:testStep type="groovy" name="Rename_TestCase" id="c2f97e71-67f9-4c7e-a46f-5cdb3ef95449"><con:settings/><con:config><script>import java.io.*;

def testCase  = testRunner.getTestCase();
def testSuite = "07.AccountDelete_Backward_Compatability";

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

BufferedReader br = new BufferedReader(new FileReader("C:\\Users\\kalyan.ineni\\Desktop\\TCs.txt"));

def newTestCaseName;

log.info "TCCount:"+TCCount;

for(i = 0; i &lt;= TCCount - 1; i++)
{               
                def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);

                newTestCaseName = br.readLine();
                log.info "Input Test Case Name: "+newTestCaseName;
                
                                targetTestCase.setFailOnError(true);
                                targetTestCase.name = newTestCaseName;    
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove a teststep" id="49b17f8b-638a-4371-ac88-846d3d149f14"><con:settings/><con:config><script>//TestCase
def testCase  = testRunner.getTestCase();

//Get Arguments
def testSuite = "06.AccountUpdate_Backward_Compatability"; 
def stepName  = "Account_Update_DB_Validations";

def TCList  = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

for(i = 0; i &lt;= TCCount - 1; i++)
{                                              
      def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
      testStepList  = targetTestCase.getTestStepList();
      testStepCount = targetTestCase.getTestStepCount();
      if(targetTestCase.isDisabled() == false)
      {
            for(j = 0; j &lt;= testStepCount - 1; j++)
            {
                  try
                  {
                        if (testStepList[j].name == stepName) {
                                   log.info "Removing Step " + testStepList[j].name;
                                   targetTestStep = targetTestCase.getTestStepByName(testStepList[j].name);
                                   targetTestCase.removeTestStep(targetTestStep);
                             }
                             
                             //stepScript = testStepList[j].getScript();
                             //stepScript = stepScript.replace(oldString, newString);
                             //targetTestStep.setScript(stepScript);                  
                  }
                  catch(Throwable e)
                  {
                                  log.info "ERROR:" + e;
                  }              
            }
      }
}                                                                                              
log.info 'Woohoo!'
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>QC_TestPlanDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestLabDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestSet</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="First_User_Create" disabled="true" id="00cffe29-086d-480a-a09a-51d924b23897"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Account_Create_Firsrt_User_Create_STS_Policies" searchProperties="true" id="bf6be7d4-9561-4c60-9314-ec69bcea736d"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="f05e0c99-e0d5-45df-a3a3-69bdd405b626"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tS.getPropertyValue("nodeid"));




</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Create" id="47968bc7-5216-4f2c-9be3-17c619b515e9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("AccountCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for First User Create" id="9bf6d37d-73c4-4631-bc51-cf622759815e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "ugr4_bc_firstuser"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);

tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("MeetsAgeOfMajority",tP.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First User Create" id="1f2dd4ad-5fcc-46ab-a51e-97788f9b9f3a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("FirstUserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS API for First User" id="acdd8aab-c67d-486c-b549-a9b46cf16933">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def callTSname = tS.getPropertyValue("sName");

def callTS = tP.getTestSuiteByName(callTSname);

tS.setPropertyValue("audience",callTS.getPropertyValue("audience"));

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID1",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call Policy Create - TOU" id="6af5dae4-75bc-4779-9efc-a8e42d339cde"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateTOU_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("Policy_Class", "urn:dece:type:policy:TermsOfUse");
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	myTC.setPropertyValue("NODE_USER_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_USER_ID_FULL")));
}
else
{
	myTC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:TermsOfUse", "UTF-8"));
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	myTC.setPropertyValue("NODE_USER_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_USER_ID_FULL"))));
}

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call Policy Create - MUC" id="b6c32e58-5912-4748-9393-a90bbcc22376"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateMUC_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("Policy_Class","urn:dece:type:policy:ManageUserConsent");
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	myTC.setPropertyValue("NODE_USER_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_USER_ID_FULL")));
}
else
{
	myTC.setPropertyValue("Policy_Class",URLEncoder.encode("urn:dece:type:policy:ManageUserConsent"));
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	myTC.setPropertyValue("NODE_USER_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_USER_ID_FULL"))));
}
def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20150205_040820</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>0E55DF4069BB33EDE05307991F0A2BFA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A0E55DF4069BB33EDE05307991F0A2BFA</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>ugr4_bc_firstuser20150205_040822</con:value></con:property><con:property><con:name>SurName</con:name><con:value>ugr4_bc_firstuser20150205_040822</con:value></con:property><con:property><con:name>UserName</con:name><con:value>ugr4_bc_firstuser20150205_040822</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>IE</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>0E55DA062BB0684DE05305991F0AFBF3</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>0E55DA062BB0684DE05305991F0AFBF3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A0E55DA062BB0684DE05305991F0AFBF3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A0E55DA062BB0684DE05305991F0AFBF3</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>06C9F8B2728B771EE05307991F0AFB05</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1996-02-10</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_46e5a43d-12ee-4d90-add0-2a4b5a0d37cf</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_46e5a43d-12ee-4d90-add0-2a4b5a0d37cf</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VyvN4y1g2S4IrUMUamIRAgCQTXlJCbkBgyyDJLPn6kQw4QJbLvU+ubre6Ty866huBA99xy0IAlzRkqU3gM+HG2qIRceaGWFDhMhyAcCVx++X2veukkYsPR4xUq1Y03rJ5yOFsxjNtB8DMegVkYs9DpoOzoxxGXuaKjJWpEBG0mJCYyaLhIDtnIsdEuYGN3EzetfPpguMMjdQzcKF8K5M0MvagNqJoTKVcuJa1Xq/T60w65BPLQci2/rTv+2QKATZKN7uM4kC8tLcnaQ8I+D5JkzCwbqwTmxtPuH06YVhGHPaxvO9iIQsVLGXjCTr5ZSRnwWuxcRiLVcxCRgn26TvW9WmDnIZequxPQk7lNPg2CRtpxyZsiEnsLPtlWKfQLnR0gpALbIoptve+ejAGDoxA6qnXKhq/LutafHTAMRPjkAfiVPxveICtwA8X4JnikNYe2uUOv6hU6QaI22LEjwRdwYMe1gUmIPbdBHK5q1SXw5hu7qlQA7oRGp11DO9M3FWjRicg5P9p0FFzdk6esR9BqbO2l9Hdw2xYbTyPHudwu314eOF1Vuk8FWMAx8axImntTjwbymSIdifqQ9yi2+GrP1jVB0GuQWeV+/bcyt6Nek/D7vXL5GX69NxceAN1253fzUqzwkZOc+l1/ajdmqBOlw6pXFrTBt8UptX1uHC13HpkPX3507l9JnO2yv6zvp3Nx48Qic6k+dITtg3r1/IcrtfNW+hF7caiW7/bOuW5xX8/vrwOutxrRsP646ywsjG3q6wwsu+ecsNyMUnnCP+p7nDn+9FoBkQeRD0GrVqqobqE5c9kpjXUM8exqbvQ5CMkMGmU9CnNHW6k6I56rurhTkb1XK5WRnmnUkH562ytjnIZlCsU7AYqNyqNzIFkdijOIFZDNqY6lqbc3dj8DJAErgDmATdXYaSYThg/eKxhiVMt1lOXIGQCBqGiZ3tG0WZB3t9X48IEB3kYX82RPZ1hI/UQyg7r8PJYAj/l5MwJJ/eA0AUFTdx6roUabCFVLZZ4FUnfTq9wmql+S8w1y7pO9jpnCRosfNBIrSD0Ih/Si+kirowldl/HxETE2l59EN+2b/M6/3cogbLxqDYQOpcKqDbCF48LOiTyfcL544QP7suRR/XFUvWUnJIdktNfH2Oi5yOZEZXRW7X/Zh9wJ+YXH/980voBlHVejySQt6JHYQ9Pt3oEFG2UDt1c4vQyHa1WUdy/K02PXLm3dIUs5Fh9IJEitu0gnAOzEi/WRa9IAvwseKI/hRjJKetLLCFQA5eKxQvWhj4IvTa01E3ZXLqTnIRUpZOwkV/pqr5aeTTiH7ci4hJtp9Rd9VmH3Pvo2Be+juKoPNXWICmbaEm/INtv5oKEyi1V3BfyY+dfOfgq+KkyKXKCRaqBGkUSvv+T0qRWNDAhYcRkq2bEimOijXHK7QLcD6NPbmIuT5Y7+u/bnUnjESCgVkJBY//6jXb1FWCTI7LeB/3E140syhcqlUymvuPrqx1fO5VGOSnKCbrSJ/VnzVGdzme89Bc=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VyvN4y1g2S4IrUMUamIRAgCQTXlJCbkBgyyDJLPn6kQw4QJbLvU+ubre6Ty866huBA99xy0IAlzRkqU3gM+HG2qIRceaGWFDhMhyAcCVx++X2veukkYsPR4xUq1Y03rJ5yOFsxjNtB8DMegVkYs9DpoOzoxxGXuaKjJWpEBG0mJCYyaLhIDtnIsdEuYGN3EzetfPpguMMjdQzcKF8K5M0MvagNqJoTKVcuJa1Xq/T60w65BPLQci2/rTv+2QKATZKN7uM4kC8tLcnaQ8I+D5JkzCwbqwTmxtPuH06YVhGHPaxvO9iIQsVLGXjCTr5ZSRnwWuxcRiLVcxCRgn26TvW9WmDnIZequxPQk7lNPg2CRtpxyZsiEnsLPtlWKfQLnR0gpALbIoptve+ejAGDoxA6qnXKhq/LutafHTAMRPjkAfiVPxveICtwA8X4JnikNYe2uUOv6hU6QaI22LEjwRdwYMe1gUmIPbdBHK5q1SXw5hu7qlQA7oRGp11DO9M3FWjRicg5P9p0FFzdk6esR9BqbO2l9Hdw2xYbTyPHudwu314eOF1Vuk8FWMAx8axImntTjwbymSIdifqQ9yi2+GrP1jVB0GuQWeV+/bcyt6Nek/D7vXL5GX69NxceAN1253fzUqzwkZOc+l1/ajdmqBOlw6pXFrTBt8UptX1uHC13HpkPX3507l9JnO2yv6zvp3Nx48Qic6k+dITtg3r1/IcrtfNW+hF7caiW7/bOuW5xX8/vrwOutxrRsP646ywsjG3q6wwsu+ecsNyMUnnCP+p7nDn+9FoBkQeRD0GrVqqobqE5c9kpjXUM8exqbvQ5CMkMGmU9CnNHW6k6I56rurhTkb1XK5WRnmnUkH562ytjnIZlCsU7AYqNyqNzIFkdijOIFZDNqY6lqbc3dj8DJAErgDmATdXYaSYThg/eKxhiVMt1lOXIGQCBqGiZ3tG0WZB3t9X48IEB3kYX82RPZ1hI/UQyg7r8PJYAj/l5MwJJ/eA0AUFTdx6roUabCFVLZZ4FUnfTq9wmql+S8w1y7pO9jpnCRosfNBIrSD0Ih/Si+kirowldl/HxETE2l59EN+2b/M6/3cogbLxqDYQOpcKqDbCF48LOiTyfcL544QP7suRR/XFUvWUnJIdktNfH2Oi5yOZEZXRW7X/Zh9wJ+YXH/980voBlHVejySQt6JHYQ9Pt3oEFG2UDt1c4vQyHa1WUdy/K02PXLm3dIUs5Fh9IJEitu0gnAOzEi/WRa9IAvwseKI/hRjJKetLLCFQA5eKxQvWhj4IvTa01E3ZXLqTnIRUpZOwkV/pqr5aeTTiH7ci4hJtp9Rd9VmH3Pvo2Be+juKoPNXWICmbaEm/INtv5oKEyi1V3BfyY+dfOfgq+KkyKXKCRaqBGkUSvv+T0qRWNDAhYcRkq2bEimOijXHK7QLcD6NPbmIuT5Y7+u/bnUnjESCgVkJBY//6jXb1FWCTI7LeB/3E140syhcqlUymvuPrqx1fO5VGOSnKCbrSJ/VnzVGdzme89Bc=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>0E55DF4069BB33EDE05307991F0A2BFA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A0E55DF4069BB33EDE05307991F0A2BFA</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:RET_CS_1</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>tName</con:name><con:value>TC_DECE_00021_Account and User Create with IE 111_SecondFullUserCreate_107_SUCCESS_P0</con:value></con:property><con:property><con:name>sName</con:name><con:value>01.UserCreate_Backward_Compatability</con:value></con:property><con:property><con:name>Country</con:name><con:value>IE</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVfZcuq6En3nKyj2I0U8AAZTSapkbMCAATPDyykjywN4wvIEX39kCGzITvbNuU+gVqt79eDW0ivWXIdtAYxRGNm+V5TFt9I/1Z2x46pNpsLp9XqlVq3ylV2TNyqI5njIQq5hQK1UlDGOkezhSPOitxJLM9UKzVcYek5zrTrfqjEvPMdsS8UlCjExTVRe6FIxcx0Pty5u30px6LV8Ddu45Wkuwq0ItmZAGbaIZku7YSq9v15RXhyG71YUBS2Kgi86gshx4Av0XeqVetJ51XFrZpueFsUh+vCp47fSx9k0TV/S6osfmhRL0zRF8xTR0bFt/iq9F26HkS57hn9dtzXP92yoOfZZy0EpKLJ8vQgc0w/tyHK/Mc1QDJ2brqAMViBT836VqN8OLuh+aOkJZIi1CrY05mZsigwUIg+i4mIqv5V+/ayC17PzUPOw4Ycu/rT+b5CQlyDHD5BewbfIbuh+bvGLdL2/ItiSPejE2E7QKG+TQIMIFychMuxsaGPSfDouXspfzPCtwxD8LyV5pR5xEtjUF5kRbRPh6P+p12OtrlaWmhOjd04ZCAfbU/dh2jcbYwuKZnBuyo1OffF2gfCofAV1L/XH+nOj3vvq49A4MHWLbaJqd7VXzzjuiSnf1J14aXnU6dDGXWFprSbChufpbS+pdSh7HVOy16e5pl12OxPT3525xEwGCFAFah/1FlEj2gLUHu/OCVOfHqaTU+fsZv6i6+9Mvxw2Tg05LCfUcLG0rIYv+gdmPDpQS7WmT1ZZfcodzLOaWnphMpa9zbgmzI7hyVdN97jevP2O6TGGPK4BOl2CzP+v6zQvapF2X7TzSWGQzzNC74ost8tiu00gmiCVBWDKwvAMRoJ5OFoHu8untADURQeI4KRMQSqaG3GpqgMp1ZdLZ7uUOx1BmdbSHtiIBbIhStlS3K77tLbaBhu2Q29ngqCvp/6u2g/03iHtWXCkzJV0NJdPyl7KRnOJXl1kZkbWZ2WvMOP5olpY7QVemUqpmF48ilJqjbarabBZ8Ck8S6oCal3ALKS2pfTm7pKB1akF99JQAYeLXLCU9nKpZNIcTAqCOVqS2ObtzjaArh7sXMd6MN4jxud6d3nadZ14e5b2SlvqtmfH7kzeVUVV6oPpZrFbLQ/aqpMUYG8EdjePdt3W1n5qbpupqG76A38rWwkcAVUSBBWQdNFAkbt94HcFoNSAnZ3be4Hz23onpfosLpR5p8utT/ZxjbUu7WhMs8lshitucuREyStvB/FubynWujMuD2Z6suAj/rzBSTnhNJuBWWCoa6kXDTKjp84Ku4mYrWGvrJt9yjnznVBp9EF4PlmOYk6jFTfGp51tGCthPa45DcNRqtPAcIzghMtzXz2ENCegKkttTskgKgBTEQDo7hd7QVWEZp5UXU7VjSJooCNFMTjv2WjALo/9XuLATRX42WA13h8+CqOLqSRQqSqRtpIKTRHoeRF6s4XU2YOFYJqhYEodQYUiUDfyIN2QfC16RPlzHjuXPJqSAKTqFnB8r1Bd0Hw0jma1Gjh5wsLr8JZyzFY659KNI5KGs1FQSxU8Mrztyj8orh0uwni2GAxGw2w3j7uHPZlVBj0bJNVtQUoOAbBHg7l1EH1RmwSbTRSUPRjCSA5cRc7O4y3eN+2dS/fLdUaY0CJssAt3ly66mrQdhOaMGfSm3qTa4As4Nk49t7xvpqvyfMYFDb3tGeLpRG3DJe0Dv8NP60c9Y9mDtUiHXGr0wWGnsaPM4YUTLw22c5hO1cFq5pbrhXoyHLr0eU7VRsE4nXXTmqSq5aouzHtzHIT2Jm6aWTj2dHajRVyypZecHTgHno0P81pQXZouKdYk0YOGMimotTXcumYjgH1qSiVAahhDuXvanbVz4I7hdYB+ng534XV+UI+T5Wn03EjHjHQrgtFtmV9AsljskFtBi/5OYHKJrVeMi2oryFkQjpAXld7zUzl5acWE4th6i1wZ17XE0VVaaHIMXRdolpEkukYzHRrQDZ5nJV66sZwrik8Q275n2LmvnMddb6m/A4RuCyNPR2El8WNoIVz6i8U8X0XZm5Lr1/cwmvuEJ9brosSwHAeabUB3hIbQZGjQEQRQFSW6Dtql4siPxt44BEaEwmeOyD9xxCmCdmCjnEjmtykm1ymOSEqOWhJHDvOSaC8eignVDHO212JrzTqFbTdwUA6Ycn09dtBLYAWXBFH4+stWNIgv0qk0/0eetS83/bchft67ZYPo6HaugPN4BEQqir4gvNVbMN8GzbCPQd/Mg1i38wudpDYKbXhF8rz1u2PyVrm3C4nqBvmu+VnwZJX6HNDdkZ7Y8N7z9+cAYZOEb7zfSnLUXo4vcZLElyI0ci4VEvMUQ9ENaoZgTAjRae4fkEfdTVA/4qJ31J883+XP+OLI8mYR+Z5d0jLFy/IHD5EZwvlDRCYtn/30lfPkkuQtQln0laztkPdKjvivTxrYgrkeEU/IT+qH+u9yfWHrwQ+JMx9gtmfmq5x5nr5pCugTszYZYn74aPwrA185fxbek3zHEpFu2sUR+n6nmE+nt5IGoR97kSyWLoLHiXnBGZ0C1Pqt9IeZC/f7IPMZ/pbMr5XhjMwuVyvdde3/rVyxL+0CETmF7QuWt1JG3qXEuWc+TOgPgH8MaZ4RaIETJEaq3Yd0nefrHMveE/gUyfsf4j8lDzn9/D28/ws=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E603091B0B6BE1E4E0401F0A05995622</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E603091B0B6BE1E4E0401F0A05995622</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E6030B86105B021EE0401F0A07992E9E</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E6030B86105B021EE0401F0A07992E9E</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:RET_CS_1</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="SetupScripts" id="31e328d0-370f-484a-b79f-5c53cc354911"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Setup" searchProperties="true" id="2136e530-ab7d-4a76-b45e-19aeadcb3499"><con:settings/><con:testStep type="groovy" name="Set ENV Properties" id="b2031458-ba1a-4faf-8313-ab4d5409b9da"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

log.info("Set Environment properties!!!");
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def projectPath = groovyUtils.projectPath
log.info("Project Path : '" + projectPath + "'");

def eNV = context.expand( '${#Project#ENV}' )
log.info("Environment: '" + eNV+ "'");

def propertiesPath = null;

if (System.properties['os.name'].toLowerCase().contains('windows')) 
	{
    		log.info "it's Windows OS!!";
    		File temp = new File( projectPath + "\\..\\..\\..\\Properties\\");
    		propertiesPath = temp.getCanonicalPath();
	} 
else 
	{
    		log.info "it's Linux OS!!";
    		File temp = new File(projectPath + "/../../../Properties/");
    		propertiesPath = temp.getCanonicalPath();
	}
	
log.info("Properties File Location : '" + propertiesPath+ "'");


def propMap=[:]
BufferedReader reader = new BufferedReader(new FileReader(propertiesPath + "/" + eNV +"project.properties"));
log.info("Load property file : '" + propertiesPath + "/" + eNV +"project.properties"+ "'");
String line;
while ((line = reader.readLine()) != null)
	{
		if (line.trim().length()==0) continue;
		if (line.charAt(0)=='#') continue;

		int delimPosition = line.indexOf("=");
		String key = line.substring(0, delimPosition-0).trim();
		String value = line.substring(delimPosition+1).trim();
		propMap.put(key, value);
	}

propMap.each{ k, v -> tP.setPropertyValue(k,v)}

</script></con:config></con:testStep><con:testStep type="groovy" name="Set_CoordinatorSchema" id="3c7cb3a0-1f51-4fa1-a2ab-ad23f774e6ed"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

log.info "versionMinor: "+tP.getPropertyValue("versionMinor");

def v2 = context.expand( '${#Project#versionMinor}' )
def schema = tP.getPropertyValue("coordinatorSchema_"+v2);

tP.setPropertyValue("coordinatorSchema",schema);
log.info "Setting the coordinatorSchema value ---- "+schema;
</script></con:config></con:testStep><con:testStep type="datasource" name="Country" id="01e4622d-8f4f-4d19-aa73-37caad293c80"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">US&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">GB&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">CA&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">IE&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">AU&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">NZ&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">AT&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">DE&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">CH&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">FR&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">BE&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">NL&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">LU&lt;/con:entry></row></con:configuration></con:dataSource><con:property>Country</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="groovy" name="TOUSetup" id="ac604432-fb50-4afe-8478-abd7500319d8"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def tP = testSuite.getProject();

def dBHost = context.expand( '${#Project#targetSystem}' )

def country = context.expand( '${Country#Country}' )

def a = new dbUtils.dbUtils(log,dBHost);
String sql = """select consent_version from (select
	            consent_version            
	            from
	            CONSENT
	            where
	            CONSENT_URN = 'urn:dece:type:policy:TermsOfUse'
	            and
	            COUNTRY = '""" + country + """'
	            order by
	            consent_version desc)
	            where rownum &lt; 2""";             
	log.info sql;
        
        results = a.SelectFromDB(sql,dBHost);

//                            a.dbConnClose();
       assert results.length() > 0;
       log.info "results" + results;

       def myXML = new XmlSlurper().parseText(results);   

       log.info myXML.ResultSet.Row.CONSENT_VERSION.text();
                testCase.setPropertyValue("Consent_Version",myXML.ResultSet.Row.CONSENT_VERSION.text());
                

def consent_Version = context.expand( '${#TestCase#Consent_Version}' )

tP.setPropertyValue("TOU_"+country,consent_Version);


</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="15b1f4ff-1474-4296-9a57-c2a7f90b7dbd"><con:settings/><con:config><dataSourceStep>Country</dataSourceStep><targetStep>TOUSetup</targetStep></con:config></con:testStep><con:testStep type="groovy" name="Set TOU Policy Resource" id="ca831e81-1610-4a66-9952-520bd4b2de98"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def policy_TOU = context.expand( '${#Project#Policy_TOU}' )


String country = context.expand( '${#Project#Country}' );
def tOUUrl = context.expand( '${#Project#TOUUrl}' )

def touForCountry = "TOU_"+country
def consent_Version =  tP.getPropertyValue(touForCountry);

tP.setPropertyValue("policy_TOU",'https://'+ tOUUrl + '/Consent/Text/' + country + '/urn:dece:type:policy:TermsOfUse:' + consent_Version + '/html');

log.info "Policy TOU from Project level property " + tP.getPropertyValue("policy_TOU");
</script></con:config></con:testStep><con:testStep type="groovy" name="Prioritize" id="2a1bcd57-4bc2-458b-826d-571c7dc511b0"><con:settings/><con:config><script>import com.eviware.soapui.impl.wsdl.*;
import com.eviware.soapui.impl.wsdl.teststeps.*;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def enablePriorityScript = context.expand( '${#Project#enablePriorityScript}' )
tC.getTestStepByName("DataSource Loop").setDisabled(false);

def executionPriority = context.expand('${#Project#disablePriority}');
def priority = context.expand('${#Project#disablePriority}').split(",");
def coords = context.expand('${#Project#coords}').split(",");//COORD-1000,COORD-2010
//log.info("Inside setUp for project '" + tP.getName() + "'");
def suiteList = tP.getTestSuiteList();
if(enablePriorityScript=='true')
{
log.info '----------------------------------------';

	tP.getTestSuiteList().each
		{	thisSuite->
				if( !thisSuite.isDisabled())
				{
					thisSuite.getTestCaseList().each
					{tCase->
						tCase.setDisabled(false); 		//Enabled everything
						//log.info '@@@@ ENABLING '+ thisSuite.getName() +' :: ' + tCase.getName();
						
							for (def prior : priority)
							{
								if (prior!='' &amp;&amp; tCase.getName().toUpperCase().contains(prior))
								{
									tCase.setDisabled(true); 	//Enable needed Priority
									log.info '!!!! Disabling'+ thisSuite.getName() +' :: ' + tCase.getName();
									break;
								}
							}
							coords.each //coord
							{ 
								if (tCase.getName().toUpperCase().contains(it))
								{
									tCase.setDisabled(true);		//Disable COORD issues
									log.info it+'#### Disabling COORD'+ thisSuite.getName() +' :: ' + tCase.getName();
									return true;
								}
							}
						
					}
				}
		}
	
	log.info "Disabled TCs with below Priorities : " ;
	priority.each{log.info it;}
	log.info "Disabled TCs with below COORDs: " ;
	coords.each{log.info it;}
	log.info '----------------------------------------';
}</script></con:config></con:testStep><con:testStep type="groovy" name="Flaky_Disabler" id="27e3a870-0566-4f35-b102-d813806d339a"><con:settings/><con:config><script>//Project Level Variable name – FLAKYSELECTOR.
//Possible Values – all, only_flaky, without_flaky
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tc_condition  = context.expand( '${#Project#FLAKYSELECTOR}' ).toString();

tP.getTestSuiteList().each
{
      if(!it.getName().toLowerCase().contains("setup") &amp;&amp; !it.isDisabled())
       {
                it.getTestCaseList().each
         {
		   if(tc_condition.toLowerCase()=="all")
			{
                 	it.setDisabled(false);
                }
             else if(tc_condition.toLowerCase()=="only_flaky")
               {
                  if(it.getName().toLowerCase().contains("flaky"))
                 		it.setDisabled(false);  
                  else
                         it.setDisabled(true);
                }
             	else
             	{
                   if(it.getName().toLowerCase().contains("flaky"))
                                           it.setDisabled(true);  
                   else
                         it.setDisabled(false); 
              	}
           }
        }
}

</script></con:config></con:testStep><con:properties><con:property><con:name>Consent_Version</con:name><con:value>20140811</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>48eef7a0-e5f2-4926-99bb-c9ecd11b1888</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c0f3550c-c4aa-4ddc-abb8-3d629c23599f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>176cc3b4-77ea-487a-90d2-1567099599d4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="User_Create_API" disabled="true" id="68e56e56-2658-4c9f-a119-60ad4467fab4"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="User_Create_STS_Policies" searchProperties="true" id="d4a22e7e-29ae-4d26-b76c-def0e45086de"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="27d7ed5d-3471-474a-90b0-bd0d0ce61dc1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("userType",null);
tC.setPropertyValue("Privilege",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("GivenName",null);
tC.setPropertyValue("SurName",null);
tC.setPropertyValue("PrimaryEmail",null);
tC.setPropertyValue("Language1",null);
tC.setPropertyValue("DisplayImageURL",null);
tC.setPropertyValue("AlternateEmail",null);
tC.setPropertyValue("PostalAddress",null);
tC.setPropertyValue("PostalCode",null);
tC.setPropertyValue("Locality",null);
tC.setPropertyValue("StateOrProvince",null);
tC.setPropertyValue("Country",null);
tC.setPropertyValue("TelephoneNumber",null);
tC.setPropertyValue("MobileTelephoneNumber",null);
tC.setPropertyValue("MeetsAgeOfMajority",null);
tC.setPropertyValue("DateOfBirth",null);
tC.setPropertyValue("urnUser",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("QuestionID1",null);
tC.setPropertyValue("QuestionResponse1",null);
tC.setPropertyValue("QuestionID2",null);
tC.setPropertyValue("QuestionResponse2",null);
tC.setPropertyValue("ResourceStatus",null);

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_USER_ID_FULL",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("SAML",null);
tC.setPropertyValue("ResponseType",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="e4457366-ffe3-4c20-9707-5fb5d033e5ab"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tS.getPropertyValue("sName");
def callTCname = tS.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tP.setPropertyValue("Request_XML",tP.getPropertyValue("Request_XML_Buffer"));

tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserCreate"));

tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("userType",callTC.getPropertyValue("userType"));
tC.setPropertyValue("GivenName",callTC.getPropertyValue("GivenName"));
tC.setPropertyValue("SurName",callTC.getPropertyValue("SurName"));
tC.setPropertyValue("PrimaryEmail",callTC.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("Language1",callTC.getPropertyValue("Language1"));
tC.setPropertyValue("DisplayImageURL",callTC.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",callTC.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",callTC.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",callTC.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",callTC.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",callTC.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",callTC.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",callTC.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",callTC.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("urnUser",callTC.getPropertyValue("urnUser"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",callTC.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",callTC.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",callTC.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",callTC.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",callTC.getPropertyValue("ResourceStatus"));
tC.setPropertyValue("LegalGuardian",callTC.getPropertyValue("LegalGuardian"));

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID1", callTC.getPropertyValue("NODE_USER_ID"));

tC.setPropertyValue("SAML",callTC.getPropertyValue("SAML"));
//tC.setPropertyValue("CLG_NODE_USER_ID",callTC.getPropertyValue("CLG_NODE_USER_ID"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	
	tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", URLDecoder.decode(callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL")));
	tC.setPropertyValue("NODE_USER_ID_FULL", URLDecoder.decode(callTC.getPropertyValue("NODE_USER_ID_FULL")));
}
else
{
	
	tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", URLEncoder.encode(URLDecoder.decode(callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))));
	tC.setPropertyValue("NODE_USER_ID_FULL", URLEncoder.encode(URLDecoder.decode(callTC.getPropertyValue("NODE_USER_ID_FULL"))));
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create" id="31d154d8-1dcc-4a42-b48d-0e7731090588"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS API" id="4d61841a-83a5-4cd8-9851-85acb36174b9">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tS.getPropertyValue("sName");

def callTS = tP.getTestSuiteByName(callTSname);

tS.setPropertyValue("audience",callTS.getPropertyValue("audience"));

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

//tC.setPropertyValue("SAML_USER2",context.expand( '${#TestCase#SAML}'));
//tC.setPropertyValue("NODE_ACCOUNT_ID1",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
//tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
//tC.setPropertyValue("NODE_USER_ID2",context.expand( '${#TestCase#NODE_USER_ID}'));
//tC.setPropertyValue("NODE_USER_ID_FULL2",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call Policy Create - TOU" id="a264c3b3-a389-44ed-a35d-2e34f37bbbd3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateTOU_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
//myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("Policy_Class", "urn:dece:type:policy:TermsOfUse");
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	myTC.setPropertyValue("NODE_USER_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_USER_ID_FULL")));
}
else
{
	myTC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:TermsOfUse", "UTF-8"));
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	myTC.setPropertyValue("NODE_USER_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_USER_ID_FULL"))));
}

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call Policy Create - MUC" id="b1faf01d-8958-4490-b6e5-9c6909a700a9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateMUC_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
//myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("Policy_Class","urn:dece:type:policy:ManageUserConsent");
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	myTC.setPropertyValue("NODE_USER_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_USER_ID_FULL")));
}
else
{
	myTC.setPropertyValue("Policy_Class",URLEncoder.encode("urn:dece:type:policy:ManageUserConsent"));
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	myTC.setPropertyValue("NODE_USER_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_USER_ID_FULL"))));
}

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="bb7c5494-54fe-4a20-98b9-082d5d9c9703"><con:settings/><con:config><script>
//TestCase
def testCase  = testRunner.getTestCase();

//Get Arguments
def testSuite = "07.AccountDelete_Backward_Compatability"; 
def stepName  = "Account_Delete_DB_Validations";

def TCList  = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

for(i = 0; i &lt;= TCCount - 1; i++)
{                                              
                def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
                testStepList  = targetTestCase.getTestStepList();
                testStepCount = targetTestCase.getTestStepCount();
                if(targetTestCase.isDisabled() == false)
                {
                                for(j = 0; j &lt;= testStepCount - 1; j++)
                                {
                                                try
                                                {
                                                                if (testStepList[j].name == stepName) {
                                                                                log.info "Removing Step " + testStepList[j].name;
                                                                                targetTestStep = targetTestCase.getTestStepByName(testStepList[j].name);
                                                                                targetTestCase.removeTestStep(targetTestStep);
                                                                }
                                                                
                                                                //stepScript = testStepList[j].getScript();
                                                                //stepScript = stepScript.replace(oldString, newString);
                                                                //targetTestStep.setScript(stepScript);                  
                                                }
                                                catch(Throwable e)
                                                {
                                                                log.info "ERROR:" + e;
                                                }              
                                }
                }
}                                                                                              
log.info 'Woohoo!'
</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_618480be-849b-4fc9-a29c-4ead728528ac</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_618480be-849b-4fc9-a29c-4ead728528ac</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2003-11-17</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E6078B27BD7C72E6E0401F0A059976B6</con:value></con:property><con:property><con:name>Country</con:name><con:value>GB</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1995-11-19</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E5F8A903DB8B8399E0401F0A07992F13:DC7DFFA6"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_070659</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:07C8A26E5C8360E5E05305991F0AAD60</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C8A26EB07060E7E05305991F0A415B</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">00FF06FDFF1976A2E05307991F0A3B17</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C8A26EB07060E7E05305991F0A415B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E5F89A132C6625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E56B6CBBFC218D76E0401F0A07991CCF</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+o6EP4rTM/HM6VpoYAdYQYBleM7oFf94sRkgWiblCblxV9/kgIVULzc+6mz283usy95sscSR6EXNKWERDHBC/Mo5DLItHUrTXggsGQy4DgCGSgS9JtXl4FXRAFeH7EK3XbdegGvTBEtIxt5HrXLPi3ZNR+XbPCpVzmq4DKgsjaVMoUulwpzVbc85JZt17Xd8gC5QckPypVitVJ5tgoPkEjtW5sUkbUCNZd1a6xUHDjObDYrzkpFkYwcDyHXeby67JMxRNhqHC8zygIljZU9KVIgEIakSETkHDtbNsdUBn024lilCaxi0X2xkIOOHG1DJRv9svKzQLt8KDKxhbngjOCQfWBTnytQY0ELzXAkEqbG0d4kXGQc2zAnNnHL/JflbEM70NEWwkRiW46xu/LVgyEkwAkU7nvduvXrsK5lRwcJ5nIokkhui/8ND/AphCIGast1Witohzv8plKNYyBBl5MwlWwK12ZYY0xArroJ5HBXhdsEhmx+yaQe0Lk06JxNeDvishptNgKp/k+DNpqzdPKAwxQa84cq9tjd85kr5J9B3Bs23/7pnZ+fhel7PQOwaZwp8tYuxZ2hzIdoeSKqCIE+3k969/JRXb6JdkKun9uX1+205DuTi7B2UXsYpmGySMSodfIxnU+araOPp8nEEzcXFXQ3HFcXaFJqX87uznuli5Pbq0Vc7XS8qPa6mMB9+RnQSZ8/+n8i3H2m025KPEZrN3Hlro3kuUuuHfFYvenOP5zXmN7Ofk8eBq1aejU4+42e+u9XQ1FZ9J9Zh0/oUz1PZwP/tm595/vp6xsQtRbNGHTbhVPdJax+JjOjYdQeZqZBbMhHKuDKaphThjuCVNMdo4Hu4VJG1Vat6VU6fqt2WkEdv4P8EvKPjtxT1Gy2K2hNMksUOxBbgg+ZiWUodzk2PwMkUSCBU0jsqUg100nrB49trHChy3v6EgguYSA0PbtVRcfJJByq2B/zsBoS5X6gUnVkFa6FuuE3SXOoINnm5PIWJ/eAsJiBIW4z11IPtlS6FhM8TVXoFqe4yCHV1J4Ylg28cs13JIviEAxSJxI0DaEYj+OsMo5cfj0bE5lpe51Bdtv25rX7b10CbUOZMZAmlxPQbYRvHpfSOpH9CVc3E167b6aUmYul66kSRpZItn99jomZj3xGdEYvrf6Lu8admx98/OtJ5wdQzm498kB0yjbCrp9u/Qho2misuznBxUkxnU7TrH9VQ4+Jdq85y/Ud5Dl9IKkmtsVAvAN3ci/OQa9IDnwneK7fhpiqMe8rrCDSA1fIxAPWhj5IszZ09U2ZH7qTbIXUpVMwV9/pWqFeeQziH7ciEhBjp9W3+jMTCf3s2De+NuLoPPXWoBgfGcm8IIs9c0GEdss094lk0/l3Dr4Lvq3Mi5xjUXqgXlMF+/8UDKnVLUyISLnqtq1MsUm0GU61iCH4NPriJuPyfLlj/77d2SwbAQJ6JZQs82/e6MBcAT7aIOtV0D18XfqJr7fRNb6ov2o26rQ7442/</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVdpc6pKE/7ur7A8Hy3D5oaVpGpYVFQ0Ci745RYOA6JsMiDor7+DRo/Jycmb+1ZZhdP0dD+90PPMMzZ9j+0AjFGcuGFQVqSXyj8tdrOxbLZZa9Zpq1aHdb624Sy21m7V603YsK2N3a6UFYxTpAQ4MYPkpcLSDFejefLTmXaHa3Q4/olrsOtKeYFiTEwTlSe6Us59L8Cdi9uXShoHndDELu4Epo9wJ4EdDaijDtHsmDdMldfnK8qLw/h1myRRh6Lgk4Ug8jz4BEOfeqY+6DxbuKO5TmAmaYzefVr4pfK+N8uyp4x7CmOHYmmapmieIjoWdp1fldfSbTOylMAOr2vRDMLAhabnns0ClIqSbWiVgeeEsZts/b+YZiiGLkzXUA5rkKkHvyrUbwcXdD+09AFkjM0a3prMzdgM2ShGAUTl+Ux5qfz6WQWve/XYDLAdxj7+tP5vkFBwRF4YIauGb5Hd0P3c4hfpen1GsKME0Euxe0Tjok0iEyJcfouR7eYjF5Pms3D5Uv5yjm8dhuB/Kckz9YiTwKa+yIzkOggn/0+9Hmt1tbIwvRS9Ag6ON+ugTi9EhTmwSzzp9bZNenYUlZcLhEflK6h7qd/Xnxv13lfvm475xKCrvcHZaPQn8kCLm/1NbsSLbR+FAr1nTBnncQrF+WmS0nCUAGdXHXR7DS2o7jN7xfFyuNH93Kp6G780tTx+bMgwyVqWLslmMGxTjD8MrPF63RdpJs4X/nnmn2Z0Szb6PZTVR4YwXPSXs4bY0AR5vhrlGUttp0MMSv29L7BzBfYNyw0OLX/e3b/8jukxhiKuITpdgiz+rxo0L5mJeV+IxaSwyeeZoFdVUcSqJIoAiQ7IFAE4ijA6g7Hg7A/bvdvjM1oA03kXSOCkzkAmOYa0mE6HcmYtFt56oXS7gjqrZ31gSCXyQpLzhbReDWhzuY4MtkuvNUGwVrNwww0iq7/P+ls4VnU1G+vKSd3J+ViX6eVF5uRkfVZ3KjPR51xpuRN4dSZnUnbxKMnZdrxeziJjzmfwLE9VUO8BZi6LW7Wv+wsGcrMt3MkjFewvcmGriouFmss6eCsJznhBYtPF7jqCvhVtfG/7YLxPjOtWb3Ha9Lx0fZZ3qij3RO3Q05QNJ03lAZgZ881ysTeX3WMJ9sdgc/PoNlxzFWbOup1JU2MwDNfK9gjHYCoLwhSQdNFAVXoDEPYEoNaBm5/FndAMRaubUQMWl6q812uuTu5hhc0e7ZlMu80Yo2Xz7dCU5KC6Hqab3VbdrrqT6lCzjnM+4c8GPlaPTdNlYB7Z05XcT4a53Z9qpc2blK9gv2o5A8o7891YbQ1AfD5tPdWZJcvmBJ82rm0vhdWk7rVsT+Vmke3Z0QlX9XC6j+mmgDiWMk7HYVICjioA0NvNd8JUFdpFUi0lmxqqYIKunKTgvGOTIbs4DPpHDxocCPPhcrLbvxfGkjJZoLKpTNpKLrUlYBVF6GtzubsDc8FxYsGRu8IUSmBqKMPMIPma94ny5zx2L3l0ZAHI3Bo0+X6Jm9N8Mkm0eh2cAmEedPmtesiXVtOnWwckj7RxVM9UPLaD9TLcq74bz+NUmw+H41G+0dPefkdmlU1rwyO3LsnHfQTc8VDf7qVQMt8iw0iiagBjmCiRryr5ebLGu7a78elBtcEIb7QEW+zc32Tznimvh7GjMcP+LHjjWnwJp/ap71d37WxZ1bVm1LLEwJZOJ2odL+gQhF1+1jhYOcvut/Ns1MzsAdhvTHace7xw4uXhWofZbDpcan61UWocRyOfPutUfRxNMq2X1eXptMpZgt7XcRS7Rtp28ngSWKxhJs3jml403cjb82y61+sRt3B8Uqy3oxW11LfStL6Ca99pRXBAzagjkFv2SOmdNmfzHPkTeB2gn6fDXXidH9TjZPkwem6kQyPdimByWxYHkCKVu+RUMJPvCUwhca2afVHtRAULwgkKksprsasgL52UUBzX6pAj47qWG902DxiOFZtNtiG3ZLpOM10a0A2er8tC+8Zyrig+QRTDwHYLXwWPu55S3wOEfgejwEJx7RimcItw5RuLRb7KSjAjx28YYKSHhCdKPC1KDQDqtMixLE8DuS11G3W+LYBWl2aYSnkcJpNgEgM7QfEHjsgyHzjiDEE3clFBJIvTFJPjFCckJQfzmCYe83Q0nwKUEqoZF2yvw9bbDQq7fuShAjDlh1bqoadoG10SROHrk62ZEF+kM1n/R9HEy0n/1xA/v7tlg+hYbqGAi3gERCqKviC87C2Yr4NmaJ2mH4O+mQep5RYHOkltErvwiuTjq98dU7TKvV2KqETtH+aG+67+4+1/7qS+AUV9zsfdkXV0H9zemDsho4SuvN4qejCfDk/p8ZheatgqqFhMzFMMRbcoDcGU8KmTHu5RQN1NUD+isnfUnzzf5R/xpck20BIyDnzSceXL8gf3GA3h4h6jkC8m/+kl6YNLkrcE5clXMtEj150C8bc3ItiBhR4Rv5FHFsbW73J9YevBD4mzmH9u4BSrgrie/tIUMCRmXTIDw/jR+FcGvnL+UXhP8h1LQrppkybo72/KxXB7qZgQhmmQKFLlIngcuBecySlCnd9Kf5i5UMf3u0CO/3oXWKkjjYw+36zcdd3/rVxzL+0CEdmF3QuWl0pOrrXEeeA8DPh3gF/P+Ab33Yz/GMnrH+I/JQ85/fw9vP4L</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVdpc6pKE/7ur7A8H62EzQ0rSdWwqKioCK5fbuEwIMomA4L++jto9JicnLy5b5WlTtPT/fRCzzMv2PQ9tg0wRnHihkFZkV4r/9A1zuabDeup2WjRT7VWvf5k0nSLfDUgzdW4eq1hVsoKxilSApyYQfJaYWmGe6J58jGYVptrtGn2mWly60p5jmJMTBOVZ7pSzn0vwO2L29dKGgft0MQubgemj3A7gW0dqMM20WybN0yVt5cryovD+G2bJFGbouCzhSDyPPgMQ596oT7ovFi4rbtOYCZpjN59Wvi18r43y7LnjHsOY4diaZqmaJ4iOhZ2nV+Vt9JtM7KUwA6va9EMwsCFpueezQKUipJtaJWB54Sxm2z9v5hmKIYuTD+hHD5Bphb8qlC/HVzQ/dDSB5AxNp/w1mRuxqbIRjEKICrPpspr5dfPKnjda8RmgO0w9vGn9X+DhIIj8sIIWU/4FtkN3c8tfpGutxcE20oAvRS7RzQq2iQyIcLlSYxsNx+6mDSfhcuX8pdzfOswBP9LSV6oR5wENvVFZiTXQTj5f+r1WKurlbnppegtlu3tYn+YwAFl9H0jm6pNrAf1rlRrvV4gPCpfQd1L/b7+3Kj3vnrfND2sxWpnwG3S6BCmtjSdg5zrn8edsScljDbyEteaBP0hO9w3++xczE6isbT2kY66rCeHrj4ODkk8GGK/hku1tCmy9r67OPXAqW/ySjo/UItw00tD+tyrG6ZMNTVPCxaTY+CtWSdcm07I9YfKZgyl8VzbBxbjNC3R902xFO4oYSaMFmig1aVdqs849fV3TI8xFHEN0OkSZPF/Wad5yUzM+0IsJoVNXs8EvamKIlYlUQRIdECmCMBRhOEZjARnf9ju3S6f0QLQZh0ggZM6BZnkrKS5pg3kzJrPvfVc6XQEdVrLemAllcgDSc7n0nrZp83FOlqxHXqtC4K1nIYbrh9ZvX3W28KRaqjZyFBO6k7OR4ZMLy4yJyfrs7pTmbEx40qLncCrUzmTsotHSc62o/ViGq1mfAbPsqaCWhcwM1ncqj3DnzOQm27hTh6qYH+RC1tVnM/VXDbApCQ4ozmJzRA76wj6VrTxve2D8R4xbljd+WnT9dL1Wd6potwV9UNXVzacpMl9MF3NNov53lx0jiXYG4HNzaNbd81lmDnrViZpq/4gXCvbIxwBTRYEDZB00UBVun0QdgWg1oCbn8Wd0AhFq5NRfRaXqrzXbSxP7mGJzS7tmUyrxayGi8bk0JDkoLoepJvdVt0uO+PqQLeOMz7hzyt8rB4bpsvAPLK1pdxLBrnd0/TSZiLlS9irWk6f8s58J1abfRCfT1tPdabJojHGp41r2wthOa55TdtTuWlke3Z0wlUj1PYx3RAQx1Kr03GQlICjCgB0d7OdoKlCq0iqpWTaShVM0JGTFJx3bDJg54d+7+jBFQfCfLAY7/bvhbGkTBaoTJNJW8mllgSsogg9fSZ3dmAmOE4sOHJH0KAEtJUyyFYkX7MeUf6cx84lj44sAJlbgwbfK3Ezmk/GiV6rgVMgzIIOv1UP+cJq+HTzgOShPopqmYpHdrBehHvVd+NZTN6YwWA0zDdG2t3vyKyyaX1w5NYl+biPgDsaGNu9FErmJFqtkqgawBgmSuSrSn4er/Gu5W58ul+tM8KElmCTnfmbbNY15fUgdnRm0JsGE67Jl3Bqn3p+ddfKFlVDb0Tk7Q1s6XSi1vGcDkHY4af1g5Wz7H47y4aNzO6D/cZkR7nHCydeHqwNmE21wUL3q/VS/Tgc+vTZoGqjaJzp3awma1qVswSjZ+Aodldpy8njcWCxKzNpHNf0vOFG3p5n071Ri7i545NiTY5W1FQnJa22hGvfaUawT02pI5Cb9lDpnjZn8xz5Y3gdoJ+nw114nR/U42T5MHpupEMn3YpgclsWB5AilTvkVDCT7wlMIXGtJ/ui2o4KFoQTFCSVt2JXQV7aKaE4rtUmR8Z1Ldc7LR4wHCt2Gmxdbsp0jWY6NKDrPF+ThdaN5VxRfIIohoHtFr4KHnc9pb4HCP02RoGF4qdjmMItwpVvLBb5KivBlBy/YYCRERKeKDZaHMM1mkILENQduiXKLC9KbIvmG3QDCJXyKEzGwTgGdoLiDxyRZT5wxCmCbuSigkgWpykmxylOSEoO5jFNPOb5aD4HKCVUMy7YXpsljIbCrh95qABM+aGVeug52kaXBFH4+ss+mRBfpFPZ+EfRxctJ/9cQPz+7ZYPoWG6hgIt4BEQqiv4gvPV2/RbM10EztEHTj0HfzIPUcosDnaQ2iV14RfLx0e+OKVrl3i5FVKL+D3PDfVf/8fY/d1LfgKI+5+PuyDq6D25vzJ2QUUJX3m4VPZjPh+f0eEwvNWwWVCwm5imGopuUjmBK+NTJCPcooO4mqB9R2TvqT57v8o/40mQb6AkZBz7puPJl+YN7jI5wcY9RyBuT//SS9MElyVuC8uQrmeiR606B+NsbEWzDQo+IJ+QnC2Prd7m+sPXgh8RZzD83cIpVQVxPf2kKGBKzLpmBYfxo/CsDXzn/KLwn+Y4lId20SRP09yflYri9VkwIwzRIFKlyETwO3AvO5BSh9m+lP8xcqOP7XSDHf70LLNWhTkafb1buuu7/Vn5yL+0CEdmF3QuW10pOrrXEeeA8DPh3gF/P+Dr33Yz/GMnbH+I/JQ85/fw+vP0L</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieSythdcFKUjUsKioqiuvNWzgMi7LJgKi//h00ekxOcr683xVM09P99ELPMy/YDHy2BTBGSepFYVmVXyv/NGwa1liTfeKEJnziLfJm2gJ8YmybQxyyGa7OVcoqxhlSQ5yaYfpaYWmGe6KbT2zNYBotnm3x/HOz0VxXynOUYGKaqDzTlfIx8EPcurh9rWRJ2IpM7OFWaAYIt1LYmgJt0CKaLfOGqfL2ckV5cZi8uWkatygKPlsIIt+HzzAKqBfqg86LhVtTzwnNNEvQu08Lv1be9+Z5/pxzz1HiUCxN0xQtUETHwp7zq/JWum1Glhra0XUtmWEUetD0vbNZgNJQ6kZWGfhOlHipG3xjmqEYujD9hI7wCTJ8+KtC/XZwQfdDSx9AJth8wq7J3IxNkI0SFEJUnk3U18qvn1XwutdIzBDbURLgT+v/BgmFB+RHMbKe8C2yG7qfW/wiXW8vCLbUEPoZ9g5oWLRJbEKEy+ME2d5x4GHSfBYuX8pfPuJbhyH4X0ryQj3iJLCpLzIjew7C6f9Tr8daXa3MTT9Db3zeW4Ea3wSNfJFAu8+wjD/s84veUHm9QHhUvoK6l/p9/blR7331vulA2VLXGIxnQ2NWX43p1PW5Wb/aDV0RJwfYZIWaZpi7RBlhz1d2Sb4dro6GMQvHlmnwvdFwPmMlEwvd2XheigRKmDrV3paq6zG720oM3XQa48amx279hdDr6ubcDbqLZD5ZLLkTPxnm5mrXHujjtYqYLDS3frJVg2ENjbhSsPf7rKfj3anRtc+0sZ6sXn/H9BhDEVcfnS5BFu/LGi3IZmreF1IxKWzye6boTVNVqSpLEkCSA3JVBI4qDs5gKDq7vbvzOkJOi0CftYEMTtoE5LKzkue63ldyaz7313O13Ra1CZ93wUoukQ+ycpzL62WPNhfreMW26fVUFK3lJNpwvdjq7vKuC4eaoeVDQz1pW+U4NBR6cZE5R7I+a1uNGRkzrrTYioI2UXI5v3iUldwdrheTeDUTcnhWdA3wHcDMFMnVukYwZyA3ceFWGWhgd5GLribN59pRMcC4JDrDOYnNkNrrGAZWvAl898F4lxg3rM78tOn42fqsbDVJ6UjTfWeqbjhZV3pgspptFvOduWgfSrA7BJubR6/mmcsod9bNXNZXvX60Vt0DHAJdEUUdkHTRQFM7PRB1RKDxwDuepa1YjySrnVM9Fpeqgt+pL0/efonNDu2bTLPJrAaL+nhfl5Wwuu5nm62rucv2qNqfWoeZkArnFT5UD3XTY+AxtvWl0k37R7urT0ubsXxcwm7VcnqUfxbaidbogeR8cn3NmaSL+gifNp5tL8TliPcbtq9xk9j27fiEq0ak7xK6LiKOpVanQz8tAUcTAehsZ1tR18RmkVRLzfWVJpqgraQZOG/ZtM/O973uwYcrDkTH/mK03b0XxpJzRaRyXSFtpZSaMrCKInSnM6W9BTPRcRLRUdqiDmWgr9R+viL5mnWJ8uc8ti95dBQRKNwa1IVuiZvRQjpKpzwPTqE4C9uCq+2PC6se0I09UgbTYcznGh7a4XoR7bTAS2ZJNp31+8PBcWNknd2WzCqbnvYP3LqkHHYx8IZ9w93JkWyO49UqjashTGCqxoGmHs+jNd42vU1A96o1RhzTMmyws2CTzzqmsu4nzpTpdyfhmGsIJZzZp25Q3TbzRdWY1uOGJYW2fDpR62RORyBqC5Pa3jqy7M6d5YN6bvfAbmOyw6MviCdB6a8NmE/0/mIaVGul2mEwCOizQfHDeJRPOzmv6HqVs0Sja+A48VZZ0zkmo9BiV2ZaP6zped2L/Z3AZjuDj7m5E5BijQ9W3NDGJZ1fwnXgNGLYoybUASgNe6B2TpuzeY6DEbwO0M/T4S68zg/qcbJ8GD030jEl3YpgelsWB5Aql9vkVDDTvxOYQuJZT/ZFtRUXLAinKEwrb8Wugry0MkJxPKtFjozrWuElwLKgxgCuLXCSqNA8zbRpQDcEgW9wtRvLuaL4BFGKQtsrfBU87npK/R0gDFoYhRZKng5RBl2EK3+xWOSrrIYTcvxGIUZGRHgiD9rtGlcDktJmGwLDcEBmG01JatZrQGnKYqU8jNJROEqAnaLkA0dk6Q8ccYKgF3uoIJLFaYrJcYpTkpK9echSn3k+mM8hygjVTAq212L5Zo3CXhD7qABMBZGV+eg5duNLgih8fRLSA/FFOlGMf9SpdDnpvw3x87dbNoiO5RUKuIhHRKSi6AvCy92C+T5o7jHom3mQWV5xoJPUpokHr0g+fvrdMUWr3NuFRHWDfNf8LPhglfoc0N2RdfDgvefv1wHCJgnfeLuVZG8+75+zwyG7FKFRcKmEmKcYim5QUwQzQohORrRDIXU3Qf2Ii95Rf/J8l3/El6VuOE3J/xyQlilflj+4iEwRLi4iKmn5409vOR9ckryl6Jh+JZN8cl8pEP/1SgNbsNAj4jF55FFi/S7XF7Ye/JA4iwHmhU6xKpjn6ZumgBEx65EhFiWPxr8y8JXzj8J7ku9YUtJNmyxF338pF9PptWJCGGVhqsqVi+BxYl5wpqcYtX4r/WHmwv3eyfwRf0vml9pgSmZXYFbuut7/Vn7yLu0CEdmFvQuW18qR3EuJ89B5mNDvAL8c0kKz9rch/TGStz/Ef0oecvr5f3j7Fw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_070659</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20141114_070659</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>firstuser20130903_114248</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130903_114310</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>seconduser20130902_104922</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>E5F89A132C6725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E56B6CBBFC228D76E0401F0A07991CCF</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>httpConnect</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>27d7ed5d-3471-474a-90b0-bd0d0ce61dc1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e4457366-ffe3-4c20-9707-5fb5d033e5ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>Country</con:name><con:value>GB</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00032_Account and User Create with GB 111_UserDelete SecondFull user 107_SUCCESS_P0</con:value></con:property><con:property><con:name>sName</con:name><con:value>03.UserDelete_Backward_Compatability</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:RET_CS_1</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Child_User_Create_API" disabled="true" id="ad02f89f-b801-4803-abb0-aed991054743"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Child_User_Create_STS_Policies" searchProperties="true" id="d28a0c5d-89e3-4133-8e7a-f724774172a5"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="6317e299-09e9-4b60-8dcb-551cdb09a295"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("userType",null);
tC.setPropertyValue("Privilege",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("GivenName",null);
tC.setPropertyValue("SurName",null);
tC.setPropertyValue("PrimaryEmail",null);
tC.setPropertyValue("Language1",null);
tC.setPropertyValue("DisplayImageURL",null);
tC.setPropertyValue("AlternateEmail",null);
tC.setPropertyValue("PostalAddress",null);
tC.setPropertyValue("PostalCode",null);
tC.setPropertyValue("Locality",null);
tC.setPropertyValue("StateOrProvince",null);
tC.setPropertyValue("Country",null);
tC.setPropertyValue("TelephoneNumber",null);
tC.setPropertyValue("MobileTelephoneNumber",null);
tC.setPropertyValue("MeetsAgeOfMajority",null);
tC.setPropertyValue("DateOfBirth",null);
tC.setPropertyValue("urnUser",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("QuestionID1",null);
tC.setPropertyValue("QuestionResponse1",null);
tC.setPropertyValue("QuestionID2",null);
tC.setPropertyValue("QuestionResponse2",null);
tC.setPropertyValue("ResourceStatus",null);


tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("CLG_NODE_USER_ID",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_USER_ID_FULL",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("SAML",null);
tC.setPropertyValue("ResponseType",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="50d89786-1977-470c-8ab8-4a9812ad4b87"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tS.getPropertyValue("sName");
def callTCname = tS.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tP.setPropertyValue("Request_XML",tP.getPropertyValue("Request_XML_Buffer"));

tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserCreate"));

tC.setPropertyValue("SAML",callTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("CLG_NODE_USER_ID",callTC.getPropertyValue("CLG_NODE_USER_ID"));

tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("userType",callTC.getPropertyValue("userType"));
tC.setPropertyValue("GivenName",callTC.getPropertyValue("GivenName"));
tC.setPropertyValue("SurName",callTC.getPropertyValue("SurName"));
tC.setPropertyValue("PrimaryEmail",callTC.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("Language1",callTC.getPropertyValue("Language1"));
tC.setPropertyValue("DisplayImageURL",callTC.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",callTC.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",callTC.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",callTC.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",callTC.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",callTC.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",callTC.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",callTC.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",callTC.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("urnUser",callTC.getPropertyValue("urnUser"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",callTC.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",callTC.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",callTC.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",callTC.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",callTC.getPropertyValue("ResourceStatus"));
tC.setPropertyValue("LegalGuardian",callTC.getPropertyValue("LegalGuardian"));

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID1", callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL", callTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("SAML",callTC.getPropertyValue("SAML"));
tC.setPropertyValue("CLG_NODE_USER_ID",callTC.getPropertyValue("CLG_NODE_USER_ID"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create" id="bde1c858-ffa3-467d-96dd-89b084e20a98"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Policy Create - CLGAttestation for Child User" id="7de4cc91-44d2-430f-ae9c-861d52c47231"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateCLGAttestation")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("NODE_ACCOUNT_ID", tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("CLG_NODE_USER_ID", tC.getPropertyValue("CLG_NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_CHILD", tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL", tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("NODE_USER_ID_FULL", tC.getPropertyValue("NODE_USER_ID_FULL"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call Policy Create - TOU for Child User" id="0b41ee56-7dc7-4411-8796-f5e7761497bd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateTOU_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("CLG_NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call Policy Create - GeoPrivacyAssent for Child User" id="f5c37869-d601-46d2-a599-9e5b1a64bca7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateGeoPrivacyAssent")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("CLG_NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));



//myTC.setPropertyValue("tName",tC.getName());
//myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call Policy Create - MUC for Child User" id="fd1a1bd0-f2b6-4d6b-8aff-520941b06044"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateMUC_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("CLG_NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS API" id="c5295d99-5448-463a-a7c7-16da5cdfeac0">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tS.getPropertyValue("sName");

def callTS = tP.getTestSuiteByName(callTSname);

tS.setPropertyValue("audience",callTS.getPropertyValue("audience"));


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

//tC.setPropertyValue("SAML_USER2",context.expand( '${#TestCase#SAML}'));
//tC.setPropertyValue("NODE_ACCOUNT_ID1",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
//tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
//tC.setPropertyValue("NODE_USER_ID2",context.expand( '${#TestCase#NODE_USER_ID}'));
//tC.setPropertyValue("NODE_USER_ID_FULL2",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config>
      </con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-22</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_c0d8ee46-25bb-4e0c-a889-7e6569edf7ac</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_c0d8ee46-25bb-4e0c-a889-7e6569edf7ac</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-20</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E8ED5D58A9CCE03DE0401F0A07992691</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2002-10-20</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E5F8A903DB8B8399E0401F0A07992F13:DC7DFFA6"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20131017_052315</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E8ED5D5970202663E0401F0A07992693</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E8ED5D5970202663E0401F0A07992693</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E8ED5D56490C7D79E0401F0A07992695</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E8ED5D56490C7D79E0401F0A07992695</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E5F89A132C6625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E56B6CBBFC218D76E0401F0A07991CCF</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc6JKEH7fX0GxjynkIohQ0SqVmDWrZqMm2ezL1jg0OlmYIcxgzPn1Z8Bg1Jgc9zxR0/Tl68t8PeccJbHldziHTBBGlUHQUn9jI2wC2A3NcuZzzQYDa6jZ9DQXGk7DgzByEVaVAec5DCgXiIqWahlmXTMNzXRnhudbdd90a3Wn/ktV7iDj0rVUqRmqsk5iyv0ybEvNM+ozxAn3KUqA+wL7085o6EtNH1WY1Pb5BmUZMGsvhUh9Xce1EDDEMa5hlujn+p7Oecj9KVlQJPIMXmOGvKW+2j4/P9ee6zWWLXTLMAzd8HSpE3Ky+Kq2v1TGEA5oxDbnHqKMEoxi8g8qQI1ALFmodOIFy4hYJh+4NnXTKFxrsMYaNm36VdXfApToTvS0BzLjSONLZFbOJhBBBhSDcjsZtNSvp3VwYzvLEOURyxJ+cP47SEBXELMUQo1XmVXoTvd4pFztc8D+gOI452QF42JMUoSBKz8yiMh6SLgcvpArZfuVNa8mDPDftORc38UpYetHKhOQBXDxf/q126uNlzsU59BOIm85eqF913Sjb9nt48hMxLc5Gi4avFVC2FXegNq2+vV8OKjbuXo1uvqZj5n+i82vHs662U2n+yO5S73uLBzfPk3s4HFcP7tcXaSuY3TP7s+ezRfnKb5ktjFN/oyMru3Ss7mDHu+HD43U/rKYk8X1ndMLBw/dnpMu0vEweIhEl4weLpfT+54V9ce/wtz9ib01TEwnmH/X726jibXOgsaVODOzLGbx9cT2RpdfHsZs4D3NpzfdbjDEN8bsO2u95bSbw76wooNpPn8ELKpjMRqDQOnLfiHxObUUEhJqUanqpwU/cQFUqO3CqqAVP5fkQ0JfNnNzvmheBE7gNGzP6LmB610YtmH2jY7hep7V8JyKfzYoDiD2GI1IEatg2M38fA4QJz4HGkKmrViOl8DVTzwGSCBlQCfyYjDKYcYkgzuW2zOdpuU1bcNt2H3bcR23b/d6ddOz7L6jKmMmrul11okEZHvsbVp77D0BTFICBcUXc87loHMhS/KEVrmIzdoK1SjkcglkBQ/7lt10dE6SNIYCsJ6wMI+hli7TskA633wtDWFeSicXs/L+fZje4b+qElInJIUCL3LpguwmHFlDRpXIxwk7uwlX7jt5SIprJssqMoI3SPZ/vU1LMSbbUZEZ/e5Nf5sV7q36yebvLfVPQOmH9dgGCldkJ2y1T+WKkCTSrrr5hGpPtXy1ysv+uQVBZtK9buqGq08B55LlXmbsD1B960I/acFsUR9E3sr38eViSacCCUjktCnl8YTXxRR48boYyNuyPvXpshdS1k3AWhyT9WL5CCkQf/pOwT4u9KT4h/w8syx8a9cRXztxZJ7ySSEIXRSnYp28fDAUmEm3RPIfy3adH3NwLPi+cFvkLRYhp2meC/j4j1IQW0tFGLOcikGgloJdsi1xipcU/Deld25KQn/d0Gv+4Yb+ORpOJe0lSN3qkv9W1kg5LhikFScllpa6lo9NGZwudsj9FeARfvdcwzKsRqN+wO/1bQH3Mmm/E7+X7NT08D60/wU=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVdpc6pKE/7ur7A8Hy3D5oaVpGpYVFQ0Ci745RYOA6JsMiDor7+DRo/Jycmb+1ZZhdP0dD+90PPMMzZ9j+0AjFGcuGFQVqSXyj8tdrOxbLZZa9Zpq1aHdb624Sy21m7V603YsK2N3a6UFYxTpAQ4MYPkpcLSDFejefLTmXaHa3Q4/olrsOtKeYFiTEwTlSe6Us59L8Cdi9uXShoHndDELu4Epo9wJ4EdDaijDtHsmDdMldfnK8qLw/h1myRRh6Lgk4Ug8jz4BEOfeqY+6DxbuKO5TmAmaYzefVr4pfK+N8uyp4x7CmOHYmmapmieIjoWdp1fldfSbTOylMAOr2vRDMLAhabnns0ClIqSbWiVgeeEsZts/b+YZiiGLkzXUA5rkKkHvyrUbwcXdD+09AFkjM0a3prMzdgM2ShGAUTl+Ux5qfz6WQWve/XYDLAdxj7+tP5vkFBwRF4YIauGb5Hd0P3c4hfpen1GsKME0Euxe0Tjok0iEyJcfouR7eYjF5Pms3D5Uv5yjm8dhuB/Kckz9YiTwKa+yIzkOggn/0+9Hmt1tbIwvRS9Ag6ON+ugTi9EhTmwSzzp9bZNenYUlZcLhEflK6h7qd/Xnxv13lfvm475xKCrvcHZaPQn8kCLm/1NbsSLbR+FAr1nTBnncQrF+WmS0nCUAGdXHXR7DS2o7jN7xfFyuNH93Kp6G780tTx+bMgwyVqWLslmMGxTjD8MrPF63RdpJs4X/nnmn2Z0Szb6PZTVR4YwXPSXs4bY0AR5vhrlGUttp0MMSv29L7BzBfYNyw0OLX/e3b/8jukxhiKuITpdgiz+rxo0L5mJeV+IxaSwyeeZoFdVUcSqJIoAiQ7IFAE4ijA6g7Hg7A/bvdvjM1oA03kXSOCkzkAmOYa0mE6HcmYtFt56oXS7gjqrZ31gSCXyQpLzhbReDWhzuY4MtkuvNUGwVrNwww0iq7/P+ls4VnU1G+vKSd3J+ViX6eVF5uRkfVZ3KjPR51xpuRN4dSZnUnbxKMnZdrxeziJjzmfwLE9VUO8BZi6LW7Wv+wsGcrMt3MkjFewvcmGriouFmss6eCsJznhBYtPF7jqCvhVtfG/7YLxPjOtWb3Ha9Lx0fZZ3qij3RO3Q05QNJ03lAZgZ881ysTeX3WMJ9sdgc/PoNlxzFWbOup1JU2MwDNfK9gjHYCoLwhSQdNFAVXoDEPYEoNaBm5/FndAMRaubUQMWl6q812uuTu5hhc0e7ZlMu80Yo2Xz7dCU5KC6Hqab3VbdrrqT6lCzjnM+4c8GPlaPTdNlYB7Z05XcT4a53Z9qpc2blK9gv2o5A8o7891YbQ1AfD5tPdWZJcvmBJ82rm0vhdWk7rVsT+Vmke3Z0QlX9XC6j+mmgDiWMk7HYVICjioA0NvNd8JUFdpFUi0lmxqqYIKunKTgvGOTIbs4DPpHDxocCPPhcrLbvxfGkjJZoLKpTNpKLrUlYBVF6GtzubsDc8FxYsGRu8IUSmBqKMPMIPma94ny5zx2L3l0ZAHI3Bo0+X6Jm9N8Mkm0eh2cAmEedPmtesiXVtOnWwckj7RxVM9UPLaD9TLcq74bz+NUmw+H41G+0dPefkdmlU1rwyO3LsnHfQTc8VDf7qVQMt8iw0iiagBjmCiRryr5ebLGu7a78elBtcEIb7QEW+zc32Tznimvh7GjMcP+LHjjWnwJp/ap71d37WxZ1bVm1LLEwJZOJ2odL+gQhF1+1jhYOcvut/Ns1MzsAdhvTHace7xw4uXhWofZbDpcan61UWocRyOfPutUfRxNMq2X1eXptMpZgt7XcRS7Rtp28ngSWKxhJs3jml403cjb82y61+sRt3B8Uqy3oxW11LfStL6Ca99pRXBAzagjkFv2SOmdNmfzHPkTeB2gn6fDXXidH9TjZPkwem6kQyPdimByWxYHkCKVu+RUMJPvCUwhca2afVHtRAULwgkKksprsasgL52UUBzX6pAj47qWG902DxiOFZtNtiG3ZLpOM10a0A2er8tC+8Zyrig+QRTDwHYLXwWPu55S3wOEfgejwEJx7RimcItw5RuLRb7KSjAjx28YYKSHhCdKPC1KDQDqtMixLE8DuS11G3W+LYBWl2aYSnkcJpNgEgM7QfEHjsgyHzjiDEE3clFBJIvTFJPjFCckJQfzmCYe83Q0nwKUEqoZF2yvw9bbDQq7fuShAjDlh1bqoadoG10SROHrk62ZEF+kM1n/R9HEy0n/1xA/v7tlg+hYbqGAi3gERCqKviC87C2Yr4NmaJ2mH4O+mQep5RYHOkltErvwiuTjq98dU7TKvV2KqETtH+aG+67+4+1/7qS+AUV9zsfdkXV0H9zemDsho4SuvN4qejCfDk/p8ZheatgqqFhMzFMMRbcoDcGU8KmTHu5RQN1NUD+isnfUnzzf5R/xpck20BIyDnzSceXL8gf3GA3h4h6jkC8m/+kl6YNLkrcE5clXMtEj150C8bc3ItiBhR4Rv5FHFsbW73J9YevBD4mzmH9u4BSrgrie/tIUMCRmXTIDw/jR+FcGvnL+UXhP8h1LQrppkybo72/KxXB7qZgQhmmQKFLlIngcuBecySlCnd9Kf5i5UMf3u0CO/3oXWKkjjYw+36zcdd3/rVxzL+0CEdmF3QuWl0pOrrXEeeA8DPh3gF/P+Ab33Yz/GMnrH+I/JQ85/fw9vP4L</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVdpc6pKE/7ur7A8H62EzQ0rSdWwqKioCK5fbuEwIMomA4L++jto9JicnLy5b5WlTtPT/fRCzzMv2PQ9tg0wRnHihkFZkV4r/9A1zuabDeup2WjRT7VWvf5k0nSLfDUgzdW4eq1hVsoKxilSApyYQfJaYWmGe6J58jGYVptrtGn2mWly60p5jmJMTBOVZ7pSzn0vwO2L29dKGgft0MQubgemj3A7gW0dqMM20WybN0yVt5cryovD+G2bJFGbouCzhSDyPPgMQ596oT7ovFi4rbtOYCZpjN59Wvi18r43y7LnjHsOY4diaZqmaJ4iOhZ2nV+Vt9JtM7KUwA6va9EMwsCFpueezQKUipJtaJWB54Sxm2z9v5hmKIYuTD+hHD5Bphb8qlC/HVzQ/dDSB5AxNp/w1mRuxqbIRjEKICrPpspr5dfPKnjda8RmgO0w9vGn9X+DhIIj8sIIWU/4FtkN3c8tfpGutxcE20oAvRS7RzQq2iQyIcLlSYxsNx+6mDSfhcuX8pdzfOswBP9LSV6oR5wENvVFZiTXQTj5f+r1WKurlbnppegtlu3tYn+YwAFl9H0jm6pNrAf1rlRrvV4gPCpfQd1L/b7+3Kj3vnrfND2sxWpnwG3S6BCmtjSdg5zrn8edsScljDbyEteaBP0hO9w3++xczE6isbT2kY66rCeHrj4ODkk8GGK/hku1tCmy9r67OPXAqW/ySjo/UItw00tD+tyrG6ZMNTVPCxaTY+CtWSdcm07I9YfKZgyl8VzbBxbjNC3R902xFO4oYSaMFmig1aVdqs849fV3TI8xFHEN0OkSZPF/Wad5yUzM+0IsJoVNXs8EvamKIlYlUQRIdECmCMBRhOEZjARnf9ju3S6f0QLQZh0ggZM6BZnkrKS5pg3kzJrPvfVc6XQEdVrLemAllcgDSc7n0nrZp83FOlqxHXqtC4K1nIYbrh9ZvX3W28KRaqjZyFBO6k7OR4ZMLy4yJyfrs7pTmbEx40qLncCrUzmTsotHSc62o/ViGq1mfAbPsqaCWhcwM1ncqj3DnzOQm27hTh6qYH+RC1tVnM/VXDbApCQ4ozmJzRA76wj6VrTxve2D8R4xbljd+WnT9dL1Wd6potwV9UNXVzacpMl9MF3NNov53lx0jiXYG4HNzaNbd81lmDnrViZpq/4gXCvbIxwBTRYEDZB00UBVun0QdgWg1oCbn8Wd0AhFq5NRfRaXqrzXbSxP7mGJzS7tmUyrxayGi8bk0JDkoLoepJvdVt0uO+PqQLeOMz7hzyt8rB4bpsvAPLK1pdxLBrnd0/TSZiLlS9irWk6f8s58J1abfRCfT1tPdabJojHGp41r2wthOa55TdtTuWlke3Z0wlUj1PYx3RAQx1Kr03GQlICjCgB0d7OdoKlCq0iqpWTaShVM0JGTFJx3bDJg54d+7+jBFQfCfLAY7/bvhbGkTBaoTJNJW8mllgSsogg9fSZ3dmAmOE4sOHJH0KAEtJUyyFYkX7MeUf6cx84lj44sAJlbgwbfK3Ezmk/GiV6rgVMgzIIOv1UP+cJq+HTzgOShPopqmYpHdrBehHvVd+NZTN6YwWA0zDdG2t3vyKyyaX1w5NYl+biPgDsaGNu9FErmJFqtkqgawBgmSuSrSn4er/Gu5W58ul+tM8KElmCTnfmbbNY15fUgdnRm0JsGE67Jl3Bqn3p+ddfKFlVDb0Tk7Q1s6XSi1vGcDkHY4af1g5Wz7H47y4aNzO6D/cZkR7nHCydeHqwNmE21wUL3q/VS/Tgc+vTZoGqjaJzp3awma1qVswSjZ+Aodldpy8njcWCxKzNpHNf0vOFG3p5n071Ri7i545NiTY5W1FQnJa22hGvfaUawT02pI5Cb9lDpnjZn8xz5Y3gdoJ+nw114nR/U42T5MHpupEMn3YpgclsWB5AilTvkVDCT7wlMIXGtJ/ui2o4KFoQTFCSVt2JXQV7aKaE4rtUmR8Z1Ldc7LR4wHCt2Gmxdbsp0jWY6NKDrPF+ThdaN5VxRfIIohoHtFr4KHnc9pb4HCP02RoGF4qdjmMItwpVvLBb5KivBlBy/YYCRERKeKDZaHMM1mkILENQduiXKLC9KbIvmG3QDCJXyKEzGwTgGdoLiDxyRZT5wxCmCbuSigkgWpykmxylOSEoO5jFNPOb5aD4HKCVUMy7YXpsljIbCrh95qABM+aGVeug52kaXBFH4+ss+mRBfpFPZ+EfRxctJ/9cQPz+7ZYPoWG6hgIt4BEQqiv4gvPV2/RbM10EztEHTj0HfzIPUcosDnaQ2iV14RfLx0e+OKVrl3i5FVKL+D3PDfVf/8fY/d1LfgKI+5+PuyDq6D25vzJ2QUUJX3m4VPZjPh+f0eEwvNWwWVCwm5imGopuUjmBK+NTJCPcooO4mqB9R2TvqT57v8o/40mQb6AkZBz7puPJl+YN7jI5wcY9RyBuT//SS9MElyVuC8uQrmeiR606B+NsbEWzDQo+IJ+QnC2Prd7m+sPXgh8RZzD83cIpVQVxPf2kKGBKzLpmBYfxo/CsDXzn/KLwn+Y4lId20SRP09yflYri9VkwIwzRIFKlyETwO3AvO5BSh9m+lP8xcqOP7XSDHf70LLNWhTkafb1buuu7/Vn5yL+0CEdmF3QuW10pOrrXEeeA8DPh3gF/P+Dr33Yz/GMnbH+I/JQ85/fw+vP0L</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieSythdcFKUjUsKioqiuvNWzgMi7LJgKi//h00ekxOcr683xVM09P99ELPMy/YDHy2BTBGSepFYVmVXyv/NGwa1liTfeKEJnziLfJm2gJ8YmybQxyyGa7OVcoqxhlSQ5yaYfpaYWmGe6KbT2zNYBotnm3x/HOz0VxXynOUYGKaqDzTlfIx8EPcurh9rWRJ2IpM7OFWaAYIt1LYmgJt0CKaLfOGqfL2ckV5cZi8uWkatygKPlsIIt+HzzAKqBfqg86LhVtTzwnNNEvQu08Lv1be9+Z5/pxzz1HiUCxN0xQtUETHwp7zq/JWum1Glhra0XUtmWEUetD0vbNZgNJQ6kZWGfhOlHipG3xjmqEYujD9hI7wCTJ8+KtC/XZwQfdDSx9AJth8wq7J3IxNkI0SFEJUnk3U18qvn1XwutdIzBDbURLgT+v/BgmFB+RHMbKe8C2yG7qfW/wiXW8vCLbUEPoZ9g5oWLRJbEKEy+ME2d5x4GHSfBYuX8pfPuJbhyH4X0ryQj3iJLCpLzIjew7C6f9Tr8daXa3MTT9Db3zeW4Ea3wSNfJFAu8+wjD/s84veUHm9QHhUvoK6l/p9/blR7331vulA2VLXGIxnQ2NWX43p1PW5Wb/aDV0RJwfYZIWaZpi7RBlhz1d2Sb4dro6GMQvHlmnwvdFwPmMlEwvd2XheigRKmDrV3paq6zG720oM3XQa48amx279hdDr6ubcDbqLZD5ZLLkTPxnm5mrXHujjtYqYLDS3frJVg2ENjbhSsPf7rKfj3anRtc+0sZ6sXn/H9BhDEVcfnS5BFu/LGi3IZmreF1IxKWzye6boTVNVqSpLEkCSA3JVBI4qDs5gKDq7vbvzOkJOi0CftYEMTtoE5LKzkue63ldyaz7313O13Ra1CZ93wUoukQ+ycpzL62WPNhfreMW26fVUFK3lJNpwvdjq7vKuC4eaoeVDQz1pW+U4NBR6cZE5R7I+a1uNGRkzrrTYioI2UXI5v3iUldwdrheTeDUTcnhWdA3wHcDMFMnVukYwZyA3ceFWGWhgd5GLribN59pRMcC4JDrDOYnNkNrrGAZWvAl898F4lxg3rM78tOn42fqsbDVJ6UjTfWeqbjhZV3pgspptFvOduWgfSrA7BJubR6/mmcsod9bNXNZXvX60Vt0DHAJdEUUdkHTRQFM7PRB1RKDxwDuepa1YjySrnVM9Fpeqgt+pL0/efonNDu2bTLPJrAaL+nhfl5Wwuu5nm62rucv2qNqfWoeZkArnFT5UD3XTY+AxtvWl0k37R7urT0ubsXxcwm7VcnqUfxbaidbogeR8cn3NmaSL+gifNp5tL8TliPcbtq9xk9j27fiEq0ak7xK6LiKOpVanQz8tAUcTAehsZ1tR18RmkVRLzfWVJpqgraQZOG/ZtM/O973uwYcrDkTH/mK03b0XxpJzRaRyXSFtpZSaMrCKInSnM6W9BTPRcRLRUdqiDmWgr9R+viL5mnWJ8uc8ti95dBQRKNwa1IVuiZvRQjpKpzwPTqE4C9uCq+2PC6se0I09UgbTYcznGh7a4XoR7bTAS2ZJNp31+8PBcWNknd2WzCqbnvYP3LqkHHYx8IZ9w93JkWyO49UqjashTGCqxoGmHs+jNd42vU1A96o1RhzTMmyws2CTzzqmsu4nzpTpdyfhmGsIJZzZp25Q3TbzRdWY1uOGJYW2fDpR62RORyBqC5Pa3jqy7M6d5YN6bvfAbmOyw6MviCdB6a8NmE/0/mIaVGul2mEwCOizQfHDeJRPOzmv6HqVs0Sja+A48VZZ0zkmo9BiV2ZaP6zped2L/Z3AZjuDj7m5E5BijQ9W3NDGJZ1fwnXgNGLYoybUASgNe6B2TpuzeY6DEbwO0M/T4S68zg/qcbJ8GD030jEl3YpgelsWB5Aql9vkVDDTvxOYQuJZT/ZFtRUXLAinKEwrb8Wugry0MkJxPKtFjozrWuElwLKgxgCuLXCSqNA8zbRpQDcEgW9wtRvLuaL4BFGKQtsrfBU87npK/R0gDFoYhRZKng5RBl2EK3+xWOSrrIYTcvxGIUZGRHgiD9rtGlcDktJmGwLDcEBmG01JatZrQGnKYqU8jNJROEqAnaLkA0dk6Q8ccYKgF3uoIJLFaYrJcYpTkpK9echSn3k+mM8hygjVTAq212L5Zo3CXhD7qABMBZGV+eg5duNLgih8fRLSA/FFOlGMf9SpdDnpvw3x87dbNoiO5RUKuIhHRKSi6AvCy92C+T5o7jHom3mQWV5xoJPUpokHr0g+fvrdMUWr3NuFRHWDfNf8LPhglfoc0N2RdfDgvefv1wHCJgnfeLuVZG8+75+zwyG7FKFRcKmEmKcYim5QUwQzQohORrRDIXU3Qf2Ii95Rf/J8l3/El6VuOE3J/xyQlilflj+4iEwRLi4iKmn5409vOR9ckryl6Jh+JZN8cl8pEP/1SgNbsNAj4jF55FFi/S7XF7Ye/JA4iwHmhU6xKpjn6ZumgBEx65EhFiWPxr8y8JXzj8J7ku9YUtJNmyxF338pF9PptWJCGGVhqsqVi+BxYl5wpqcYtX4r/WHmwv3eyfwRf0vml9pgSmZXYFbuut7/Vn7yLu0CEdmFvQuW18qR3EuJ89B5mNDvAL8c0kKz9rch/TGStz/Ef0oecvr5f3j7Fw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20131017_052315</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20131017_052315</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>firstuser20130903_114248</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130903_114310</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>seconduser20130902_104922</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E8ED5D56490D7D79E0401F0A07992695</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>E5F89A132C6725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E56B6CBBFC228D76E0401F0A07991CCF</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-21</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>27d7ed5d-3471-474a-90b0-bd0d0ce61dc1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e4457366-ffe3-4c20-9707-5fb5d033e5ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c5295d99-5448-463a-a7c7-16da5cdfeac0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00044_UserGet_FUNC_CHILD_SAU_Get_ADULT_FAU_200_OK_P1</con:value></con:property><con:property><con:name>sName</con:name><con:value>01.User_Get_GeoProfile</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:RET_CS_1</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="01.UserCreate_Backward_Compatability" id="7891bf34-1240-45f4-bc22-28c73fd7e3b2"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00001_AccountCreate_BE_111_FirstUserCreate_with_country_BE_107_201_CREATED_P0" searchProperties="true" id="7da51ba6-aec8-4397-a8b0-ff7c1277e38a"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="c6817cb2-9977-408f-8a46-f12d314f47e5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="0e2f585a-5d7a-4087-b120-6d91d4c12cff"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","BE");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Create" id="875fd730-63b0-4969-acf6-fa6fe753ce42"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("AccountCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="23f6665e-81e0-4467-86b9-2e363498a210"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for First User Create" id="5b7ca5d9-2b56-4545-858e-cb94e771b849"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usergetr4_firstuser"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);

tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("MeetsAgeOfMajority",tP.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First User Create" id="a294dca7-9a4b-4e38-a236-619c0ed3779b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("FirstUserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20141114_06025</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>07C7BEA3F54E4699E05305991F0AD4AE</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:07C7BEA3F54E4699E05305991F0AD4AE</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usergetr4_firstuser20141114_06028</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usergetr4_firstuser20141114_06028</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usergetr4_firstuser20141114_06028</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>BE</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7BED329E34CF3E05307991F0AB294</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7BED329E34CF3E05307991F0AB294</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7BED329E34CF3E05307991F0AB294</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E955244D9A018971E0401F0A07992091</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>06C976EE8BF91B57E05305991F0A11E6</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1995-11-19</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aea062bc-1ecf-4cd4-a860-80ebd627aee0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70e7123c-046a-4dcc-87a3-f10528fa214a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>93b39265-2ac2-4f55-9b8d-7d1606d201c6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00002_AccountCreate_LU_111_FirstUserCreate_with_country_LU_107_202_CREATED_P0" searchProperties="true" id="beac96e5-31a7-463d-b72a-f259e7dc6d54"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="ad7b79db-d509-4c8d-9a14-3cafc40e91a4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="a11a0678-0a41-4e6f-8b97-158596c10844"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","LU");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Create" id="8a648288-14ff-4b00-ae79-3ed9e652d2f6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("AccountCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="38ef650d-2dd5-4c30-ae7c-06bd86b96202"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for First User Create" id="0e5db4ff-0388-4fb8-8fed-d239d6d481dc"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usergetr4_firstuser"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);

tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("MeetsAgeOfMajority",tP.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First User Create" id="50b38b61-4134-4d7f-860a-cec188f0bc71"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("FirstUserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20141114_060213</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>07C7BF1BEE0346A7E05305991F0A3244</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:07C7BF1BEE0346A7E05305991F0A3244</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usergetr4_firstuser20141114_060215</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usergetr4_firstuser20141114_060215</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usergetr4_firstuser20141114_060215</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7BEFD02634CF1E05307991F0A5D71</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7BEFD02634CF1E05307991F0A5D71</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7BEFD02634CF1E05307991F0A5D71</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E955244D9A018971E0401F0A07992091</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>06C9772AA2315E49E05307991F0A4361</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1995-11-19</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aea062bc-1ecf-4cd4-a860-80ebd627aee0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70e7123c-046a-4dcc-87a3-f10528fa214a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>93b39265-2ac2-4f55-9b8d-7d1606d201c6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00003_AccountCreate_NL_111_FirstUserCreate_with_country_NL_107_201_CREATED_P0" searchProperties="true" id="abab09d3-907c-4cc4-bdc8-658f04fe32b9"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="e6c9a848-21d5-4c16-ad46-587e3817b616"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="2ade3855-0de2-4f3e-b2bc-5bce460497f3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","NL");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Create" id="69ca2074-3f7a-44aa-82b0-145963c7eec7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("AccountCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="30cfb801-49c5-4a74-b9e2-c016bdf09054"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for First User Create" id="a48b3a8d-d5d3-44c4-8658-c9c03d3e8ff0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usergetr4_firstuser"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);

tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("MeetsAgeOfMajority",tP.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First User Create" id="537e323c-cba3-4904-a9e4-11fc4b7b340d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("FirstUserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20141114_060217</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>07C7BF5FBF4246A5E05305991F0AB861</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:07C7BF5FBF4246A5E05305991F0AB861</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usergetr4_firstuser20141114_060219</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usergetr4_firstuser20141114_060219</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usergetr4_firstuser20141114_060219</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>NL</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7BEFC1D984CEBE05307991F0A6614</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7BEFC1D984CEBE05307991F0A6614</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7BEFC1D984CEBE05307991F0A6614</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E955244D9A018971E0401F0A07992091</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>06C975A5EE061B61E05305991F0A0F88</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1995-11-19</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aea062bc-1ecf-4cd4-a860-80ebd627aee0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70e7123c-046a-4dcc-87a3-f10528fa214a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>93b39265-2ac2-4f55-9b8d-7d1606d201c6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00004_Account and User Create with BE 111_SecondFullUserCreate_107_201_CREATED_P0" searchProperties="true" id="332f2298-90b9-4f93-afe5-73838f13ad61"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="b3d429c5-bad5-4595-8647-f3a6cf0c7f2a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="899b216f-9492-4d20-800d-2ac1e290954f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","BE");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="82d7c495-c159-4144-9ef7-0be951fc96be"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="69e3b0e3-0385-4faa-9886-ebd33b33cdf4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFullUserCreate" id="f2da24d8-e03f-4b9a-90f9-e2c7bf7146c6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create" id="655e4415-2f9b-48fa-860a-080602085873"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZrU/I6EP4rTN+PTukFCtIRZspFRRTl8nr74oR0odE2wSYt6K8/SYEKiB7O+dTJdrP77O6TJznjKApt1+McYkEYLSyjkHI3s9a1JKYuQ5xwl6IIuCuwO/Jurl27aLpos0UrdNt17WUyqVYrjl3RTWcCevnUBh0hy9ZNyy+fVn1sV6aWdOU8gS7lAlFR12zTKuuWpVvlsWm6JcstmcWSaT1rhXuIuYwtXYqmtga15HUtEGLuGsZisSguSkUWzwzbNC3j8eZ6hAOIkNY4W1WUJYoba39c9AFDGOIiZpFxZuz4nPncHZEZRSKJYZ3L/ymXaZg1Q/r4nMz+aPle8Lt0yrJlC1FGCUYh+USqPzcgAuYXvHDGYiKC6MciLFMF1mGJdWyV6R/N2IV2ZKAdhDFHOg+QtY41hCnEQDEU/g67de3PcVPLto5jRPmUxRHfXf43PEBTCNkcfJ1vylpDOz7ggU41zgC7XYrDhJMU+oqsc4SBr6cJ+PhQhbsYpmR5Tbgk6JIrdMY2vL3lqhttMgMu/s+AtoazCnKPwgQazt/08fzNs4NH6/7yrn/e7txVF7Z52a2Z9QzAtnNmyEe7Wu6RMifRakcHj+g4jXu1Su/ZD5r9/mevTylbPPM0HC96MH5ciofWXXgeRYkXPL1ZzeZs0b6fD2jpejhybmMxoJf9NrrCr0/Pn+PngfcUD8a9SnR6kQwert5nldewM7scM3zf8y5Pk9rgJOFi2X16vogertj84pKPTl7h8ePxZmzQxLl/P/Gnkob9mWMM0iebX986k8lyeBHgel7OFv5d2+bMj5LJK2CxWSoadNuFczklJH4XM2Uhvj7NXN25Eh8ugAqtoXYp7XATKXfEd+UMV2uz2qo2O16zaVWccqXW7JhOyXRqNevc9MqtdmUjMisUexBbjE6JyqUkd0Wb3wHiyOVAfYj1lCVS6bj2S8Q2EqjQpUN5CBjlMGZSnq0FCuGUBkE1MplIFyW/WloiXAWt0Gfilt7G3lRAvKvJpR1NHgImcwJKuBWvuSQ2F7IX7yhNRGgVU1SkIMeMYqWyrl0+dQxOonkICqkRMT8JoTgP5llnDL762jrCPLMOO+PstP1Y1/6/TQukj0+UA1e1NEGOEQ5cLvamkJ8LrmwXvAnvJT5RB0v2U8QEr5Ds/vqiieJHzhFZ0Utr9GJtcOfuR2//vtP4BZSx3488kZ+SrbSbq1teAlI2GptpvqPiezFJ0ySbX1XJYyzDS82yHMO0jRHgRArbx5i9ATXyKMZRt0gOfC95bt+FmIiAjgQSEEnCFbLlEc+GEXD1bOjKk7I89k2yk1K2TsBSHLK1QvnkUYh/fRVhFys/ab6TnwWL/a+JHYi1lUfWKV8NgtCZWqkb5OMHXmAmwxKpfSzeDn4owKHku8a8yTkWIQk1SQT8/KegRK2uIYxZQkW3rWWGbaHNcIqPObhfTt/CZFqeP+7Iv7/udJJRAEvRkv5ZfHVHu+oI0NmWWK+THtDr0rnjeFKva9t63S57nbwpO+ga38zfLVt92ud44x8=</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_060224</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_060242</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_060242</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_060242</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZrU/I6EP4rTN+PTukFCtIRZspFRRTl8nr74oR0odE2wSYt6K8/SYEKiB7O+dTJdrP77O6TJznjKApt1+McYkEYLSyjkHI3s9a1JKYuQ5xwl6IIuCuwO/Jurl27aLpos0UrdNt17WUyqVYrjl3RTWcCevnUBh0hy9ZNyy+fVn1sV6aWdOU8gS7lAlFR12zTKuuWpVvlsWm6JcstmcWSaT1rhXuIuYwtXYqmtga15HUtEGLuGsZisSguSkUWzwzbNC3j8eZ6hAOIkNY4W1WUJYoba39c9AFDGOIiZpFxZuz4nPncHZEZRSKJYZ3L/ymXaZg1Q/r4nMz+aPle8Lt0yrJlC1FGCUYh+USqPzcgAuYXvHDGYiKC6MciLFMF1mGJdWyV6R/N2IV2ZKAdhDFHOg+QtY41hCnEQDEU/g67de3PcVPLto5jRPmUxRHfXf43PEBTCNkcfJ1vylpDOz7ggU41zgC7XYrDhJMU+oqsc4SBr6cJ+PhQhbsYpmR5Tbgk6JIrdMY2vL3lqhttMgMu/s+AtoazCnKPwgQazt/08fzNs4NH6/7yrn/e7txVF7Z52a2Z9QzAtnNmyEe7Wu6RMifRakcHj+g4jXu1Su/ZD5r9/mevTylbPPM0HC96MH5ciofWXXgeRYkXPL1ZzeZs0b6fD2jpejhybmMxoJf9NrrCr0/Pn+PngfcUD8a9SnR6kQwert5nldewM7scM3zf8y5Pk9rgJOFi2X16vogertj84pKPTl7h8ePxZmzQxLl/P/Gnkob9mWMM0iebX986k8lyeBHgel7OFv5d2+bMj5LJK2CxWSoadNuFczklJH4XM2Uhvj7NXN25Eh8ugAqtoXYp7XATKXfEd+UMV2uz2qo2O16zaVWccqXW7JhOyXRqNevc9MqtdmUjMisUexBbjE6JyqUkd0Wb3wHiyOVAfYj1lCVS6bj2S8Q2EqjQpUN5CBjlMGZSnq0FCuGUBkE1MplIFyW/WloiXAWt0Gfilt7G3lRAvKvJpR1NHgImcwJKuBWvuSQ2F7IX7yhNRGgVU1SkIMeMYqWyrl0+dQxOonkICqkRMT8JoTgP5llnDL762jrCPLMOO+PstP1Y1/6/TQukj0+UA1e1NEGOEQ5cLvamkJ8LrmwXvAnvJT5RB0v2U8QEr5Ds/vqiieJHzhFZ0Utr9GJtcOfuR2//vtP4BZSx3488kZ+SrbSbq1teAlI2GptpvqPiezFJ0ySbX1XJYyzDS82yHMO0jRHgRArbx5i9ATXyKMZRt0gOfC95bt+FmIiAjgQSEEnCFbLlEc+GEXD1bOjKk7I89k2yk1K2TsBSHLK1QvnkUYh/fRVhFys/ab6TnwWL/a+JHYi1lUfWKV8NgtCZWqkb5OMHXmAmwxKpfSzeDn4owKHku8a8yTkWIQk1SQT8/KegRK2uIYxZQkW3rWWGbaHNcIqPObhfTt/CZFqeP+7Iv7/udJJRAEvRkv5ZfHVHu+oI0NmWWK+THtDr0rnjeFKva9t63S57nbwpO+ga38zfLVt92ud44x8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BEA3F55A4699E05305991F0AD4AE</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>BE</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7BEA3F55A4699E05305991F0AD4AE</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BEA3F55A4699E05305991F0AD4AE</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7BEABB165469BE05305991F0A4CD6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7BEABB165469BE05305991F0A4CD6</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7BEFD027A4CF1E05307991F0A5D71</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7BEFD027A4CF1E05307991F0A5D71</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-05</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2000-11-05</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1995-11-19</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00005_Account and User Create with LU 111_SecondFullUserCreate_107_201_CREATED_P0" searchProperties="true" id="3eec01fc-51d9-43ed-a5ca-873a085bd492"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="0a3b45d5-0d0b-4b5e-84b0-53e0ac0a7c15"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="552c32f5-3ab6-4ced-92d8-808bbd919a1a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","LU");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="a2639aa5-7735-4782-9488-06d4201bb465"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="5ff27338-b410-4fce-b703-0d95517127a3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFullUserCreate" id="234bc024-dbad-455f-8af1-4e87e106821b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create" id="465f3602-77f8-4cfe-afc9-f46c9e857fa6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VynmcMl4wi12BKkNMLnNJQiDbzUtKkRtQYksgyUDy9SMZcIAsw8yTq9ut7tOLjvpUoDRxg1AI4JIwWlqlCRVBrm0aGacBQ4KIgKIURCBxMAov+oFbtgO0PWKUemdN46nmPNcdr+6bfgU3TM/DVRM5Pph+I7arHvKgUa0oUyEy6FEhEZVNw7Udz3Qc0/FubDuoOEHVKfsN99Eo3QEXyrcyKdvGBtRKNI2plLPAspbLZXlZKTM+sVzbdqyHi/4ITyFFRut0nVEeiLc29rgcA4YkwWXMUuvU2rM5jUUwIhOKZMZhEyv+LpZt2b6lbGJBJidGcRbiHh2zXOwgyijBKCHvSNfnAuSUxaUwmTBO5DT9NgnH1o5NWGETOx49Max9aEc62kPIBTLFFDkbX0MYAweKoXQ77DWNk+O6lh+94YiKMeOp2Bf/Gx6gC0jYDGJTbNPaQDve4ReVap0CDnoUJ5kgC7jUwzpDGMSmm4CPd1UacBiTVZ8INaArodFZu/AOxHU1zsgEhPw/DdppztrJHUoyaL3ya3TlvGeV4dQJq4vhs3j8e9n5i12zqJkD2DXOFUVr1+LBUBZDtD7xfBdli4YVUmvs4t9uu1L507lyovqve2tFbq9jsZoPXvwLL4qjbn8U9bs3VxPr9fb1ff6Gb697z1EU+3bDS2t3zOqMBt0xSVmn0k95HLW75+Hs/H7yeHdJSefXw8Brnyfny8ZqVHsYv74tByvfSeLbIe4tL9JFj3CoZzV8n5KLq/e+3X8d9MM/t3iGLyf3be8RvGaRzg7+fd32zo+y5xfAcivqMeidlbqqS0j+TGZaQ2JznJsGM00+QgKVRkuf0twRZIruSByoHq5lu96pt6Mw8l078mp+N7KrFbvq+07XDsNG192SzBrFAcQOo2OiY2nKXY/NzwBxGgigMXBzwTLFdML4weMZkqjUo0N1CRgVcMMUPS9T4boOf7H9RYLRvIrJHHNojI3SJZNX9IqHYwl8n5Ire5Q8BExmBDRv67EWaq6FVKWYo0UmE6e8QGUKmWJ2rkk2cL1G1RIknSWggVopi7MEyrPpLC+MJdZf10RY5NphdJNftm/TOvy3rYCyiYk2EDqXNqguwhdvi7dN5PuEa7sJb92HWUz0vVLllJzgNZL9Xx9TosejGBGV0VNn9ORscRfmRx//fNL6AZR1WI8iULwgO2G3L7d6AxRrtLbdnKPyvJwtFlnev7pmR67cK8pyqpbtWiPAmeK1txv2CtQqvFhHPSIF8IPghX4fYiandCSRhFQNXCkXj9gaRiD01tBTF2V17EqyF1KVTsJKfqXrJGrj0Yh/XIpwgLWdUg/UZ8l4/NGxL3ztxFF5qqVBEjrRkn5A3r6ZC8yUW6Koj/Fd5185+Cr4vrIocoFFqoF6ziR8/6ekOa1pIIxZRmXvzMgVuzyb45RvMwg+jD65yam82O3Ivy93JslHAIPaCAXJ/esnOtBXgE52uHoT9BNdd512FDkdrxbWd+m64npeUZQ9dK1P6s+anTodznjrHw==</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_060247</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_060259</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_060259</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_060259</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VynmcMl4wi12BKkNMLnNJQiDbzUtKkRtQYksgyUDy9SMZcIAsw8yTq9ut7tOLjvpUoDRxg1AI4JIwWlqlCRVBrm0aGacBQ4KIgKIURCBxMAov+oFbtgO0PWKUemdN46nmPNcdr+6bfgU3TM/DVRM5Pph+I7arHvKgUa0oUyEy6FEhEZVNw7Udz3Qc0/FubDuoOEHVKfsN99Eo3QEXyrcyKdvGBtRKNI2plLPAspbLZXlZKTM+sVzbdqyHi/4ITyFFRut0nVEeiLc29rgcA4YkwWXMUuvU2rM5jUUwIhOKZMZhEyv+LpZt2b6lbGJBJidGcRbiHh2zXOwgyijBKCHvSNfnAuSUxaUwmTBO5DT9NgnH1o5NWGETOx49Max9aEc62kPIBTLFFDkbX0MYAweKoXQ77DWNk+O6lh+94YiKMeOp2Bf/Gx6gC0jYDGJTbNPaQDve4ReVap0CDnoUJ5kgC7jUwzpDGMSmm4CPd1UacBiTVZ8INaArodFZu/AOxHU1zsgEhPw/DdppztrJHUoyaL3ya3TlvGeV4dQJq4vhs3j8e9n5i12zqJkD2DXOFUVr1+LBUBZDtD7xfBdli4YVUmvs4t9uu1L507lyovqve2tFbq9jsZoPXvwLL4qjbn8U9bs3VxPr9fb1ff6Gb697z1EU+3bDS2t3zOqMBt0xSVmn0k95HLW75+Hs/H7yeHdJSefXw8Brnyfny8ZqVHsYv74tByvfSeLbIe4tL9JFj3CoZzV8n5KLq/e+3X8d9MM/t3iGLyf3be8RvGaRzg7+fd32zo+y5xfAcivqMeidlbqqS0j+TGZaQ2JznJsGM00+QgKVRkuf0twRZIruSByoHq5lu96pt6Mw8l078mp+N7KrFbvq+07XDsNG192SzBrFAcQOo2OiY2nKXY/NzwBxGgigMXBzwTLFdML4weMZkqjUo0N1CRgVcMMUPS9T4boOf7H9RYLRvIrJHHNojI3SJZNX9IqHYwl8n5Ire5Q8BExmBDRv67EWaq6FVKWYo0UmE6e8QGUKmWJ2rkk2cL1G1RIknSWggVopi7MEyrPpLC+MJdZf10RY5NphdJNftm/TOvy3rYCyiYk2EDqXNqguwhdvi7dN5PuEa7sJb92HWUz0vVLllJzgNZL9Xx9TosejGBGV0VNn9ORscRfmRx//fNL6AZR1WI8iULwgO2G3L7d6AxRrtLbdnKPyvJwtFlnev7pmR67cK8pyqpbtWiPAmeK1txv2CtQqvFhHPSIF8IPghX4fYiandCSRhFQNXCkXj9gaRiD01tBTF2V17EqyF1KVTsJKfqXrJGrj0Yh/XIpwgLWdUg/UZ8l4/NGxL3ztxFF5qqVBEjrRkn5A3r6ZC8yUW6Koj/Fd5185+Cr4vrIocoFFqoF6ziR8/6ekOa1pIIxZRmXvzMgVuzyb45RvMwg+jD65yam82O3Ivy93JslHAIPaCAXJ/esnOtBXgE52uHoT9BNdd512FDkdrxbWd+m64npeUZQ9dK1P6s+anTodznjrHw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF1BEE1C46A7E05305991F0A3244</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7BF1BEE1C46A7E05305991F0A3244</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF1BEE1C46A7E05305991F0A3244</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7BEAE920E469FE05305991F0AA8F2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7BEAE920E469FE05305991F0AA8F2</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7BEFDF9D8462EE05305991F0A4375</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7BEFDF9D8462EE05305991F0A4375</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-05</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2000-11-05</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1995-11-19</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00006_Account and User Create with NL 111_SecondFullUserCreate_107_201_CREATED_P0" searchProperties="true" id="55c65083-775b-470d-9919-6b1d432b7317"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="2d56bd4f-7400-4770-833c-c78b1951f58b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="c8e65779-7457-4396-952a-72fcf31b19f6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","NL");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="c26060fa-6fa6-4c4f-9657-d08fbba1a98c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="627e2b0a-c15e-4a60-8f66-48c9940b7efa"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFullUserCreate" id="c24d858e-ce3c-492e-82d6-68357e55e4d2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create" id="8dc378a8-c7ba-41df-960e-b6fd103fa6f8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+o6EP4rTP3olLSlFOgIM+XFc6vgUUDv0S9OTANE2wSStKC//iYFKqB4ufdTZ7eb3Wdf8mQvBExixw+EwFwSRkurJKbCz7VNI+XUZ1AQ4VOYYOFL5I+CQd93ypYPt0eMUthtGs9e3fYa8AWZ2PJqphs1kNlooKo5qdbqVsXzLOhBZSpEikMqJKSyaTiW7Zq2bdru2LL8iuNb9bLj1Z6M0gPmQvlWJmXL2IBaiaYxk3LuA7BcLsvLSpnxKXAsywZ/Bv0RmuEEGq2LdUZ5IN7a2KNyhBGOY1RGLAEXYM/mIhL+iEwplCnHm1jRsVgWsBpA2USCTM+M4iyOQjphudiBlFGCYEw+oK7PAMsZi0pBPGWcyFlyNAnb0o5NvEImsl16ZoB9aCc62kPIBTTFDNobX0M8wRxThEv3w7BpnJ3WtfzomEMqJownYl/8b3gwzXDM5jgyxTatDbTTHX5TqdYFRn5IUZwKkuEbPaxziLDYdBOj012VbjmekFWfCDWgK6HRgV14B+K6Gl0yxUL+nwbtNGft5AHGKW5dBRX+svBGbfCSPdUiUGfXYAyW/L0zaOYAdo1zRdHatXgwlMUQrU9ILhZwSLqrsO3eX4/+erPj2+g1c3oBdapDWgkeOvK1747ePoTr0V/RffWXlNn7386wHrLHXp91BXmzZ+61vFnwuyma2Y3wHMqbj7T2ckPP78MZnd5SPA6u0A0IelG66rK78+6fQPBF3KtZ00c3e+hHnbfeU9KvPQ3vB71G1h0/KoCVwewSAuxePXbunqr0vlmks4N/X7e986P05RUjuRX1GITd0qXqEpQ/k5nWkMic5Kb+XJOPkJhKo6VPae7wU0V3JPJVD9eyVevU2pd2u9dzA9cLaj2rWrGqjYZ9aQUVx3W3JLNGcQCxw+iE6Fiactdj8zNAlPgC0whzM2OpYjph/OCxCyUshXSoLgGjAo+Zome74cgUETK3aUPaU48lEyG96vKjbpRumPxNf/NgIjHfJ+XKHikPMSJzgjVz68EWarKFVMVYwCyVsV3OYJniVHE71zTrO269CgRJ5jHWUEHCojTG5flsnpcGiPXXMSESuXbYG+fX7Whih/+2NVA2EdEGQufSxqqP+MvrYvvVbSLHE/Z2E966D9KI6JulCio5QWsk+78+50QPSDEkKqPnzujZ3uIuzE8+/vUk+AEUOKxHESjKyE7Y7dutXgHFG61tNxewvCinWZbm/atpfuTKvSItuwosB4wwShWzvY/ZG6ag8AJOekYK4AfBC/0+xFTO6EhCiRM1cKVcPGFvGGGh94ZQXZXVqUvJXkhVOolX8jtdJ1Y7j0b841qEfKTtlPpWfZaMR58d+8bXThyVp1obJKFTLekn5P3IXCCm3BJFfozvOv/OwXfB95VFkQssUg3USyrx8T8lzWpNAyLEUirDrpErdpk2xynf59j/NPriJifzYrsj/77emSQfAYTVTihI7l8/0r6+AnS6w9aboIeE3bHb3XqvG1Q9t5MTdm1N2L2K1SmKsoeu9UX9VbNTp8MZb/0D</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_06034</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_060317</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_060317</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_060317</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+o6EP4rTP3olLSlFOgIM+XFc6vgUUDv0S9OTANE2wSStKC//iYFKqB4ufdTZ7eb3Wdf8mQvBExixw+EwFwSRkurJKbCz7VNI+XUZ1AQ4VOYYOFL5I+CQd93ypYPt0eMUthtGs9e3fYa8AWZ2PJqphs1kNlooKo5qdbqVsXzLOhBZSpEikMqJKSyaTiW7Zq2bdru2LL8iuNb9bLj1Z6M0gPmQvlWJmXL2IBaiaYxk3LuA7BcLsvLSpnxKXAsywZ/Bv0RmuEEGq2LdUZ5IN7a2KNyhBGOY1RGLAEXYM/mIhL+iEwplCnHm1jRsVgWsBpA2USCTM+M4iyOQjphudiBlFGCYEw+oK7PAMsZi0pBPGWcyFlyNAnb0o5NvEImsl16ZoB9aCc62kPIBTTFDNobX0M8wRxThEv3w7BpnJ3WtfzomEMqJownYl/8b3gwzXDM5jgyxTatDbTTHX5TqdYFRn5IUZwKkuEbPaxziLDYdBOj012VbjmekFWfCDWgK6HRgV14B+K6Gl0yxUL+nwbtNGft5AHGKW5dBRX+svBGbfCSPdUiUGfXYAyW/L0zaOYAdo1zRdHatXgwlMUQrU9ILhZwSLqrsO3eX4/+erPj2+g1c3oBdapDWgkeOvK1747ePoTr0V/RffWXlNn7386wHrLHXp91BXmzZ+61vFnwuyma2Y3wHMqbj7T2ckPP78MZnd5SPA6u0A0IelG66rK78+6fQPBF3KtZ00c3e+hHnbfeU9KvPQ3vB71G1h0/KoCVwewSAuxePXbunqr0vlmks4N/X7e986P05RUjuRX1GITd0qXqEpQ/k5nWkMic5Kb+XJOPkJhKo6VPae7wU0V3JPJVD9eyVevU2pd2u9dzA9cLaj2rWrGqjYZ9aQUVx3W3JLNGcQCxw+iE6Fiactdj8zNAlPgC0whzM2OpYjph/OCxCyUshXSoLgGjAo+Zome74cgUETK3aUPaU48lEyG96vKjbpRumPxNf/NgIjHfJ+XKHikPMSJzgjVz68EWarKFVMVYwCyVsV3OYJniVHE71zTrO269CgRJ5jHWUEHCojTG5flsnpcGiPXXMSESuXbYG+fX7Whih/+2NVA2EdEGQufSxqqP+MvrYvvVbSLHE/Z2E966D9KI6JulCio5QWsk+78+50QPSDEkKqPnzujZ3uIuzE8+/vUk+AEUOKxHESjKyE7Y7dutXgHFG61tNxewvCinWZbm/atpfuTKvSItuwosB4wwShWzvY/ZG6ag8AJOekYK4AfBC/0+xFTO6EhCiRM1cKVcPGFvGGGh94ZQXZXVqUvJXkhVOolX8jtdJ1Y7j0b841qEfKTtlPpWfZaMR58d+8bXThyVp1obJKFTLekn5P3IXCCm3BJFfozvOv/OwXfB95VFkQssUg3USyrx8T8lzWpNAyLEUirDrpErdpk2xynf59j/NPriJifzYrsj/77emSQfAYTVTihI7l8/0r6+AnS6w9aboIeE3bHb3XqvG1Q9t5MTdm1N2L2K1SmKsoeu9UX9VbNTp8MZb/0D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C1BD8EDA564CE05307991F0AE30C</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>NL</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7C1BD8EDA564CE05307991F0AE30C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C1BD8EDA564CE05307991F0AE30C</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7BF1BEE4A46A7E05305991F0A3244</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7BF1BEE4A46A7E05305991F0A3244</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7C2F1FE3B4CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7C2F1FE3B4CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-05</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2000-11-05</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1995-11-19</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00007_Account and User Create with AT 111_SecondFullUserCreate_107_SUCCESS_P0" searchProperties="true" id="a8241a8c-3632-4cce-8a6b-79fe1a4767ea"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="30f5361d-cce1-4c33-a139-ff7642cfdfa0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="5260bc24-f853-4d0c-96fb-09a3a2cd6d8a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AT");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="a778d0e8-7f53-4f10-ad2a-2b55233ab126"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="5e1fa3b3-6ac3-46b7-bdbc-25aef19d9361"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFullUserCreate" id="dd957fa6-a0b0-4d9d-b3c3-ed216445cac1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create" id="a8e1d69c-f155-47d2-a60a-17d3f0f2a87a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc6o6FP4rDvuxgwTwylRnLOreWHuV2p6+dGIIEoVESVDbX78TrFTt5XjOE5PFyre+dcmXnHOYxJbT4RyngjBa2iQx5U5ubWlZSh0GOeEOhQnmjkDOqHM1dKwycOBui1byui3tBQUQVhuNiW5NrFCvTOxQh80K0JE9wY0mQKAyAdKV8wx7lAtIRUuzgFnRTVM3Kz4Ajm05Vq1cBc1nrTTGKZfY0qUsd21JbXhLi4RYOIaxXq/La7vM0qlhAWAaT1fDEYpwArX2+TajPFDafvdH5QAjHMeojFhinBsHPucBd0ZkSqHIUvweK/guFjBA05A+ASfTX1qxFwceDVm+dCFllCAYkzeo6nOFRcSCUieespSIKPk2CRMoYB1vkI7MCv2lGYfUTgQ6YJhyqPMImu9Y9zjEKaYIlx7uvZb267Su5Vv9FFIesjThh8v/xgfTFY7ZAgc636X1Tu10wC8q1T7HyPEoijNOVvhaDesCIszfu4nR6VCl2xSHZDMkXA7ohit2xj69o+W2Gl0yxVz8nwbtNWcLMoZxhts2dhtXf86qzVn1ko6thTkxO8D2Bv6F18oJ7DvnhqK12+XRUBZDtN1xvexu4PNy1a9dBI1L31sM3Cjzp+OaOwS0Yzfxn8Hkzn+u/v49Zk8JE9VBY5WMayPjutvvna37M38FCQrc1H983PB/vCgDnSe2vHkcjuO318acmgN/GI3S+SW4dNfXd3EU2GL+ZifDaCyevNnseXJXh8bt/OwuDCPyOueXfjYfTG5/D2i/74V/Xn3vvv4wuI0eWkU6e/wPbbszP8omM4zEbqnGwOuW+rJLUPwsZspCAj3MXZ2FEh8uMBVaW+1S2uFkUu5I4Mgebteg7tZd86Lb6PW61VrF7YGqDerNptkHnZ4N3J3IbFkcUXQZDYmKpSR3OzY/E0SJwzENcKqvWCaVjms/IHahgCWP3stDwCjHPpPybIZvyN4kjRmok9lmwvjaXkYWqWKtdM3EDb1JO6HA6aEm2weafI8RWRCshFvNNZeDzYWsxRKuMhGb5RUsU5xJaU+VyjpWpVE1OEkWMVZMjYQFWYzLi2iRV8bg26+lQ8Rz633Pz0/bt3kd/9uVQPoERDlwlcsFlm3EX1wu5i6R7xOu7Se8g+9kAVEHS9ZTpARtmRz++hgTNR/FjMiMXtzRi7njXbifvP3zTuMHUsZxPYpAwYrshd1d3fISkLLR3nVzCcvLcrZaZXn/6koeUwkvNcusGsAyRhhlUthefTbH1ChQjJNukYL4UfDCfkgxExEdCShwIgeulC9PeDaMMFfPBk+elM2pb5KDkLJ0Am/EVzY3lk8exfjHVxFykPKT5lv5WbM0+OjYF1h7cWSe8tUgCJ2qlbpBXr+ZC8QkLJHax9J98K8Avgp+aCyKXHARcqAmmcDf/ykpUWtpECGWUeF1tdywL7Q5T/G6wM6H0yeYXMuLxx3599edTvIRQFK0pH+Or+5oRx0BOt0T6/egx3p90Tcver1avVLr1HO9rm712rYqlaIoB+zan8yfLXt1Op7x9l8=</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_060321</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_060335</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_060335</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_060335</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc6o6FP4rDvuxgwTwylRnLOreWHuV2p6+dGIIEoVESVDbX78TrFTt5XjOE5PFyre+dcmXnHOYxJbT4RyngjBa2iQx5U5ubWlZSh0GOeEOhQnmjkDOqHM1dKwycOBui1byui3tBQUQVhuNiW5NrFCvTOxQh80K0JE9wY0mQKAyAdKV8wx7lAtIRUuzgFnRTVM3Kz4Ajm05Vq1cBc1nrTTGKZfY0qUsd21JbXhLi4RYOIaxXq/La7vM0qlhAWAaT1fDEYpwArX2+TajPFDafvdH5QAjHMeojFhinBsHPucBd0ZkSqHIUvweK/guFjBA05A+ASfTX1qxFwceDVm+dCFllCAYkzeo6nOFRcSCUieespSIKPk2CRMoYB1vkI7MCv2lGYfUTgQ6YJhyqPMImu9Y9zjEKaYIlx7uvZb267Su5Vv9FFIesjThh8v/xgfTFY7ZAgc636X1Tu10wC8q1T7HyPEoijNOVvhaDesCIszfu4nR6VCl2xSHZDMkXA7ohit2xj69o+W2Gl0yxVz8nwbtNWcLMoZxhts2dhtXf86qzVn1ko6thTkxO8D2Bv6F18oJ7DvnhqK12+XRUBZDtN1xvexu4PNy1a9dBI1L31sM3Cjzp+OaOwS0Yzfxn8Hkzn+u/v49Zk8JE9VBY5WMayPjutvvna37M38FCQrc1H983PB/vCgDnSe2vHkcjuO318acmgN/GI3S+SW4dNfXd3EU2GL+ZifDaCyevNnseXJXh8bt/OwuDCPyOueXfjYfTG5/D2i/74V/Xn3vvv4wuI0eWkU6e/wPbbszP8omM4zEbqnGwOuW+rJLUPwsZspCAj3MXZ2FEh8uMBVaW+1S2uFkUu5I4Mgebteg7tZd86Lb6PW61VrF7YGqDerNptkHnZ4N3J3IbFkcUXQZDYmKpSR3OzY/E0SJwzENcKqvWCaVjms/IHahgCWP3stDwCjHPpPybIZvyN4kjRmok9lmwvjaXkYWqWKtdM3EDb1JO6HA6aEm2weafI8RWRCshFvNNZeDzYWsxRKuMhGb5RUsU5xJaU+VyjpWpVE1OEkWMVZMjYQFWYzLi2iRV8bg26+lQ8Rz633Pz0/bt3kd/9uVQPoERDlwlcsFlm3EX1wu5i6R7xOu7Se8g+9kAVEHS9ZTpARtmRz++hgTNR/FjMiMXtzRi7njXbifvP3zTuMHUsZxPYpAwYrshd1d3fISkLLR3nVzCcvLcrZaZXn/6koeUwkvNcusGsAyRhhlUthefTbH1ChQjJNukYL4UfDCfkgxExEdCShwIgeulC9PeDaMMFfPBk+elM2pb5KDkLJ0Am/EVzY3lk8exfjHVxFykPKT5lv5WbM0+OjYF1h7cWSe8tUgCJ2qlbpBXr+ZC8QkLJHax9J98K8Avgp+aCyKXHARcqAmmcDf/ykpUWtpECGWUeF1tdywL7Q5T/G6wM6H0yeYXMuLxx3599edTvIRQFK0pH+Or+5oRx0BOt0T6/egx3p90Tcver1avVLr1HO9rm712rYqlaIoB+zan8yfLXt1Op7x9l8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF1BEE6746A7E05305991F0A3244</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>AT</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7BF1BEE6746A7E05305991F0A3244</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF1BEE6746A7E05305991F0A3244</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7C1BD8EED564CE05307991F0AE30C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7C1BD8EED564CE05307991F0AE30C</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7BF445BAF4CEFE05307991F0A6D1E</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7BF445BAF4CEFE05307991F0A6D1E</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-05</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2000-11-05</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1995-11-19</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00008_Account and User Create with AT 111_StandardYouthUserCreate_107_SUCCESS_P0" searchProperties="true" id="2928b8e1-f66b-473c-b858-cc7952fa28e9"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="7e589b83-0e10-4f18-b550-56edab1e6bcc"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="b48399de-cd4a-4440-ab28-149545357f13"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AT");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="f4c2d80c-9653-4f3a-b702-2f4a0aa628e7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="f1576253-7789-4354-b34f-7feca1a721c4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUserCreate" id="6e29c9aa-35dc-41f0-86de-6ae8ab11b414"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StandardYouthUserCreate" id="f279181b-44ca-4ca7-b91d-642fadc8ba4c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZZc+I4EP4rlOdxyvjAxuAKVBGOWk8RkgA7OV6mFLkBgS0ZSzYkv34lAw6QY9l9cnW71f31oU99xVEc2X6Hc0gFYbSyjSPK/ULb0rKU+gxxwn2KYuC+wP6kczP07arpo8MRrRL0Wtofq2a6zotd15t1q6k7MwfpyDEbuolss44QspBnSVPOMwgoF4iKlmablqNblm45U9P0a7bvOFXP8561ym9IufQtTaqmtge15S1tIUTiG8Zms6lualWWzg3bNC3j8WY4wQuIkda+2mVUBErbe3tcDQFDFOEqZrFxZZzYXIXcn5A5RSJLYR8r/CqWaZhNQ9qEnMx/aOVZCAM6Y4XYRZRRglFE3pCqzw2IBQsrnWjOUiIW8ZdJWKZyrMMW69hy6A/NOIV2oaMThClHOl8ga+9rDDNIgWKo/D0OWtqPy7pWHJ2miPIZS2N+Kv43PEBziFgCoc4Pae2hXe7wk0q1rwD7AcVRxkkOIzWsCcLA990EfLmryl0KM7IdEi4HdMsVOuMY3pm4q0aPzIGL/9Ogo+bsnPxGUQbth7/u6XL6tn4YbrJoztPwdrNePTyNr/OgVQA4Ni4UZWt34tlQlkO0O3HbM0ZD/Jyb7gbnk8gOntz+ij2PvBrwX/DYmILp/MzNl81bTvu/Bjfwaxw8hctkdeN1l493WXM2WrkWFW9jjzhO5I1+b2/5NKFdFxIedO6644e75uDOyO6f3Lj/c5g+LGF40/em4+d6GrKndWw+PLpN3GdbgRude7Fcju/rq9H169M6GSbNOlvCC71NA2veKtM5wn+qO9z5SfayBCwOohqDoFcZyC4h8T2ZKQ0J9Vlh6ieKfLgAKrS2OqW4w88k3ZHQlz3cyabX9bq263rNruv0B4O+6cq71GxaA7PjSM2BZHYoziB2GZ0RFUtR7m5svgeIY58DDSHVc5ZJpuPaNx57SKBKQMfyEjDKYcoUPeNkU3/1VqtGHDnWYuaEizT0Qsd+0SojJm5lsTszAekpKddOSHkMmCQEFHOrweZysrmQxVijPBORVc1RlUImuT1VNOvbTsM1OImTCBRUI2ZhFkE1WSRFaQy++9o6wrzQjvvT4rp9mdj5v0MNpE1IlAFXuVyD7CN88rrUDol8nXD9OOGD+04WEnWzZEFFSvAOyemv9zlRA1IOiczoT3fyxzrgLs0vPv7xpPENKOO8HmWgMCdHYQ9vt3wFJG+0D91co+q6muV5VvTPU/yYSveStCzXMG1jAjiTzPY6ZSugRunFuOgZKYGfBS/1pxAzsaATgQTEcuAqhXjB3jABrvaGQF6V7aVLyUlIWToBW/GZrhvJnUch/nYtwj5WdlJ9Jz8blobvHfvE11EcmadcGwShcyWpJ+T1i7nATLolkvxYeuz8MwefBT9VlkUusQg5UC+ZgK//VBSrtTSEMcuoCHpaoThm2gKneE3Afzf64KYg83K7I/++3umkGAEMcifkpPCvHmlfXQE6P2LrfdAPhG1d9xoDq+HWnW5B2N6OsPs1s1sW5QRd+4P6o+aoTucz3v4H</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_060340</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_060352</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_060352</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_060352</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZZc+I4EP4rlOdxyvjAxuAKVBGOWk8RkgA7OV6mFLkBgS0ZSzYkv34lAw6QY9l9cnW71f31oU99xVEc2X6Hc0gFYbSyjSPK/ULb0rKU+gxxwn2KYuC+wP6kczP07arpo8MRrRL0Wtofq2a6zotd15t1q6k7MwfpyDEbuolss44QspBnSVPOMwgoF4iKlmablqNblm45U9P0a7bvOFXP8561ym9IufQtTaqmtge15S1tIUTiG8Zms6lualWWzg3bNC3j8WY4wQuIkda+2mVUBErbe3tcDQFDFOEqZrFxZZzYXIXcn5A5RSJLYR8r/CqWaZhNQ9qEnMx/aOVZCAM6Y4XYRZRRglFE3pCqzw2IBQsrnWjOUiIW8ZdJWKZyrMMW69hy6A/NOIV2oaMThClHOl8ga+9rDDNIgWKo/D0OWtqPy7pWHJ2miPIZS2N+Kv43PEBziFgCoc4Pae2hXe7wk0q1rwD7AcVRxkkOIzWsCcLA990EfLmryl0KM7IdEi4HdMsVOuMY3pm4q0aPzIGL/9Ogo+bsnPxGUQbth7/u6XL6tn4YbrJoztPwdrNePTyNr/OgVQA4Ni4UZWt34tlQlkO0O3HbM0ZD/Jyb7gbnk8gOntz+ij2PvBrwX/DYmILp/MzNl81bTvu/Bjfwaxw8hctkdeN1l493WXM2WrkWFW9jjzhO5I1+b2/5NKFdFxIedO6644e75uDOyO6f3Lj/c5g+LGF40/em4+d6GrKndWw+PLpN3GdbgRude7Fcju/rq9H169M6GSbNOlvCC71NA2veKtM5wn+qO9z5SfayBCwOohqDoFcZyC4h8T2ZKQ0J9Vlh6ieKfLgAKrS2OqW4w88k3ZHQlz3cyabX9bq263rNruv0B4O+6cq71GxaA7PjSM2BZHYoziB2GZ0RFUtR7m5svgeIY58DDSHVc5ZJpuPaNx57SKBKQMfyEjDKYcoUPeNkU3/1VqtGHDnWYuaEizT0Qsd+0SojJm5lsTszAekpKddOSHkMmCQEFHOrweZysrmQxVijPBORVc1RlUImuT1VNOvbTsM1OImTCBRUI2ZhFkE1WSRFaQy++9o6wrzQjvvT4rp9mdj5v0MNpE1IlAFXuVyD7CN88rrUDol8nXD9OOGD+04WEnWzZEFFSvAOyemv9zlRA1IOiczoT3fyxzrgLs0vPv7xpPENKOO8HmWgMCdHYQ9vt3wFJG+0D91co+q6muV5VvTPU/yYSveStCzXMG1jAjiTzPY6ZSugRunFuOgZKYGfBS/1pxAzsaATgQTEcuAqhXjB3jABrvaGQF6V7aVLyUlIWToBW/GZrhvJnUch/nYtwj5WdlJ9Jz8blobvHfvE11EcmadcGwShcyWpJ+T1i7nATLolkvxYeuz8MwefBT9VlkUusQg5UC+ZgK//VBSrtTSEMcuoCHpaoThm2gKneE3Afzf64KYg83K7I/++3umkGAEMcifkpPCvHmlfXQE6P2LrfdAPhG1d9xoDq+HWnW5B2N6OsPs1s1sW5QRd+4P6o+aoTucz3v4H</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C1BD8F18564CE05307991F0AE30C</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>AT</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7C1BD8F18564CE05307991F0AE30C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C1BD8F18564CE05307991F0AE30C</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7C25579C54EFFE05305991F0A454E</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7C25579C54EFFE05305991F0A454E</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7C50BEF855C9CE05307991F0ACA34</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7C50BEF855C9CE05307991F0ACA34</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2000-11-05</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-11-18</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00009_Account and User Create with AT 111_BasicChildUserCreate_107_SUCCESS_P0" searchProperties="true" id="79e6b593-93b8-41c1-b7e6-e799733f31d3"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="2c76510d-3c4a-425a-a25f-461e7827efaf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="04048da9-8f00-455b-97c7-ee2a77818e77"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AT");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="e7ad6a39-7e51-4561-8812-841bb205e172"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="5a6d474e-f74f-49e2-8ad4-f616d143a61b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for BasicChildUserCreate" id="6a542925-f4d4-4969-8f7e-13e6f9126993"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("CHILD_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian",tC.getPropertyValue("LegalGuardian"));

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call BasicChildUserCreate" id="60943a6f-3e82-45d9-b0ac-139433a5b49d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o6EP4rjPuYMZZtHGJPYIYCybjNrZCmaV86irQGNbZkLJlLfv2RDLhALodznjy7Xu1+e9GnPZc4S72oJyUUigneWGYpl1Gl7VhlwSOBJZMRxxnISJFo3Lu+irwmivD2iNWIBx3rdxIEIYTtMxtjP7BbbTexnyg6sxM/SNApJGGIE20qZQkxlwpz1bE85LZs17Xd1j1Cke9HyGueuq1fVuMBCql9a5MmsjaglrJjTZXKI8dZLBbNhd8UxcTxEHKdx+urMZlChq3u+TqjKlDR3diTJgUCaUqaRGTOubNnc05lNGYTjlVZwCYWfS8WclDoaBsq2eSTVZ8FGvNEVGIfc8EZwSl7waY+16CmgjZ66UQUTE2zd5NwkXFsw5LYxG3xT5azD+1IR3sIC4ltOcXuxtcIEiiAE2h8H8Ud69NxXauO3heYy0QUmdwX/xse4HNIRQ7Ultu0NtCOd/hGpbrnQKKYk7SUbA43ZlhzTEBuugnkeFeNuwIStrxiUg/oUhp0zi68A3FdjQGbgFT/p0E7zVk7ecBpCd3Bs/vj+qJf3tP86sVZoGJF8y+jn9dX4menArBrXCnq1q7Fg6Gsh2h9YugHGdKzyftKzGbJd3dCUpT05pf55OvLc5D1+oNVW9yNTh/Joxv43qKPvp2czhH0LujsMjzhNzm0y5uHJ8/j7evbGWkVd4vPYvX9z49vsh8v50Pnrjj5FT8sg/BzEmMqY0RY+jhld4xffrmc02yQSj4hyP0zeZit6NOtjMvyyp2sKB2fLJ/E15Mw7j+GPzfpHuDf123v/Lh8+gNEbUUzBvGgcaG7hNXHZGY0jNpJZRrlhnykAq6srjlluCMqNd0xGukermXU7rf7XuAPQ3/QGl4MhijwURCG7gXq+YHb2pLMGsUBxL7gCTOxDOWux+ZjgCSLJHAKhT0XpWY6aX3gcYAVbsR8pC+B4BLuhabnzJ0uw+Js4S/owm23ZfAybZHl4tmzGjdC3fLbopcoKPY52d/j5BEQljMwxG3mWurBlkrXYobnpUrd5hw3OZSa2gvDspHXOgscybI8BYPUyQQtU2jm07yqjCPXX8/GRFba0fC+um3v5nX4b1sCbUOZMZAml8+g2wivHhcvCraJvJ/w6W7CW/e9kjJzsXQ9VcHIGsn+r79jYuajnhGd0e/++Le7xV2bH3389UnnA1DOYT3qQHTOdsJun279CGja6G67OcPNWbOcz8uqf21Dj4V2rznLDRzkOWMgpSa21b14Bu7UXpyjXpEa+EHwWr8PsVRTPlZYQaYHrlGJR6wNY5BmbYj1TVkeu5PshdSlU7BUb+n6qV55DOIPtyISEWOn1Xf6sxAF/duxN3ztxNF56q1BMT4xknlBVu/MBRHaLdPcJ4pd5285eCv4vrIuco1F6YF6KhW8/6dhSK1jYUJEyVU8sCrFLtFWONUqh+iv0Ss3FZfXyx379+3OZtUIENAroWSVf/NGR+YK8MkOWW+CvsHXQTscGL6+2OXrVtAa1kXZQ9d9pX6t2anT4Yx3/wE=</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_060357</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_060410</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_060410</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_060410</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc9o6EP4rjPuYMZZtHGJPYIYCybjNrZCmaV86irQGNbZkLJlLfv2RDLhALodznjy7Xu1+e9GnPZc4S72oJyUUigneWGYpl1Gl7VhlwSOBJZMRxxnISJFo3Lu+irwmivD2iNWIBx3rdxIEIYTtMxtjP7BbbTexnyg6sxM/SNApJGGIE20qZQkxlwpz1bE85LZs17Xd1j1Cke9HyGueuq1fVuMBCql9a5MmsjaglrJjTZXKI8dZLBbNhd8UxcTxEHKdx+urMZlChq3u+TqjKlDR3diTJgUCaUqaRGTOubNnc05lNGYTjlVZwCYWfS8WclDoaBsq2eSTVZ8FGvNEVGIfc8EZwSl7waY+16CmgjZ66UQUTE2zd5NwkXFsw5LYxG3xT5azD+1IR3sIC4ltOcXuxtcIEiiAE2h8H8Ud69NxXauO3heYy0QUmdwX/xse4HNIRQ7Ultu0NtCOd/hGpbrnQKKYk7SUbA43ZlhzTEBuugnkeFeNuwIStrxiUg/oUhp0zi68A3FdjQGbgFT/p0E7zVk7ecBpCd3Bs/vj+qJf3tP86sVZoGJF8y+jn9dX4menArBrXCnq1q7Fg6Gsh2h9YugHGdKzyftKzGbJd3dCUpT05pf55OvLc5D1+oNVW9yNTh/Joxv43qKPvp2czhH0LujsMjzhNzm0y5uHJ8/j7evbGWkVd4vPYvX9z49vsh8v50Pnrjj5FT8sg/BzEmMqY0RY+jhld4xffrmc02yQSj4hyP0zeZit6NOtjMvyyp2sKB2fLJ/E15Mw7j+GPzfpHuDf123v/Lh8+gNEbUUzBvGgcaG7hNXHZGY0jNpJZRrlhnykAq6srjlluCMqNd0xGukermXU7rf7XuAPQ3/QGl4MhijwURCG7gXq+YHb2pLMGsUBxL7gCTOxDOWux+ZjgCSLJHAKhT0XpWY6aX3gcYAVbsR8pC+B4BLuhabnzJ0uw+Js4S/owm23ZfAybZHl4tmzGjdC3fLbopcoKPY52d/j5BEQljMwxG3mWurBlkrXYobnpUrd5hw3OZSa2gvDspHXOgscybI8BYPUyQQtU2jm07yqjCPXX8/GRFba0fC+um3v5nX4b1sCbUOZMZAml8+g2wivHhcvCraJvJ/w6W7CW/e9kjJzsXQ9VcHIGsn+r79jYuajnhGd0e/++Le7xV2bH3389UnnA1DOYT3qQHTOdsJun279CGja6G67OcPNWbOcz8uqf21Dj4V2rznLDRzkOWMgpSa21b14Bu7UXpyjXpEa+EHwWr8PsVRTPlZYQaYHrlGJR6wNY5BmbYj1TVkeu5PshdSlU7BUb+n6qV55DOIPtyISEWOn1Xf6sxAF/duxN3ztxNF56q1BMT4xknlBVu/MBRHaLdPcJ4pd5285eCv4vrIuco1F6YF6KhW8/6dhSK1jYUJEyVU8sCrFLtFWONUqh+iv0Ss3FZfXyx379+3OZtUIENAroWSVf/NGR+YK8MkOWW+CvsHXQTscGL6+2OXrVtAa1kXZQ9d9pX6t2anT4Yx3/wE=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C25579DD4EFFE05305991F0A454E</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>AT</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7C25579DD4EFFE05305991F0A454E</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C25579DD4EFFE05305991F0A454E</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7C253E93D4EFDE05305991F0A3514</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7C253E93D4EFDE05305991F0A3514</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7BF887833462CE05305991F0A740C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7BF887833462CE05305991F0A740C</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2002-11-17</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>07C7C253E93D4EFDE05305991F0A3514</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00010_Account and User Create with DE 111_SecondFullUserCreate_107_SUCCESS_P0" searchProperties="true" id="7ecadf26-a862-408f-91fc-c5b511c3c144"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="e5fb93dd-a990-452e-a634-b15f35f169e6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="eb4487a3-21fa-4ccc-ae3f-eba3e85d03c6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","DE");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="ee7a5846-642d-4601-a792-e9f15aec0cf8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="fe7e577a-c0a9-45e3-8759-03998908a7ea"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFullUserCreate" id="29b2a479-0c2d-44be-9d81-85ec0caeaacf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create" id="573901b7-ef4f-4732-a020-f83e2930403d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMr5DcAWqCJCEBBIGGCaZl5SQG6PBlhxLBpKvX8mAA+Sy7D65ut3qPn3RUV9wFEe23+QcUkEYLa3jiHI/19a1LKU+Q5xwn6IYuC+wP2r2e75dNn20O6KVuu269jyrVJAX2Lbu2ZWq7nrBVJ96TqCfmzWYmjaq1GaBNOU8gy7lAlFR12zTcnXL0i13bJq+4/hWrWx55h+tNIGUS9/SpGxqW1BrXtfmQiS+YaxWq/LKKbM0NGzTtIzHfm+E5xAjrXGxySgPlDa29rgcAIYowmXMYuPCOLC5CLg/IiFFIkthGyv4KpZpmDVD2gSchD+04iwEXTpjudhClFGCUUTekKpPH8ScBaVmFLKUiHn8ZRKWqRzrsMY6tlz6QzMOoZ3o6ABhypHO58ja+hrCDFKgGEq/ht269uO0ruVHxymifMbSmB+K/w0P0CVELIFA57u0ttBOd/hJpRoXgP0uxVHGyRLu1bAmCAPfdhPw6a5KgxRmZN0jXA7omit0xj68I3FTjTYJgYv/06C95mycTFCUQQM/Zm831U5t2nQGj0+GN2C1oB8Y1+Nrs54D2DfOFUVrN+LRUBZDtDnxuIpuF9bZfNkT69sny3y6z/54dw93yVP62FtErdfbwWKxCM9eMzMGqJyjxU016mZiMmn+DjvDs79zq3n94HpTsorGv0VlOUhaZ6Nu1umb7sj6WZ3ia8bunH4ocDxx55Ne69yx79BPWl0RbLTm1fuWaGfr89GArUJqitvwJobgbHZni+GvSrfdySajXjJ1wtlTvUhnD/+hbnfnR9n0L2CxE9UYdNulK9klJL4nM6UhgT7LTf1EkQ8XQIXWUKcUd/iZpDsS+LKHG9mstqot2/Oqtau227m66pieY3q1mnVlNl3P7exIZoPiCGKL0RlRsRTlbsbme4A49jnQAFJ9yTLJdFz7xmMbCVTq0qG8BIxyGDNJz1ZQeXNiuuBOzYmteJpMCU5wlTivWumeiQf6kDZnAtJDUnYOSHkImCQEFHOrweZysrmQxXhBy0xEVnmJyhQyye2polnfds89g5M4iUBBNWIWZBGUk3mSl8bgm6+tI8xz7bAzzq/bl4kd/9vVQNoERBlwlcslyD7CJ6+LuUvk64Qr+wnv3DezgKibJQsqUoI3SA5/vc+JGpBiSGRGz63Rs7XDXZiffPzjSeMbUMZxPYpAwZLshd293fIVkLzR2HXzBZVfytlymeX9qyp+TKV7SVqWZ5i2MQKcSWZ7HbMFUKPwYpz0jBTAj4IX+kOImZjTkUACYjlwpVw8YW8YAVd7Q1delfWpS8lBSFk6AWvxma4VyZ1HIf52LcI+VnZSPZCfFUvfE//M114cmadcGwShoZLUE/L6xVxgJt0SSX4s3Xf+mYPPgh8qiyIXWIQcqGkm4Os/JcVqdQ1hzDIqum0tV+wzbY5TvCbgvxt9cJOTebHdkX9f73SSjwAGuRNykvtXj7SvrgAN99h6G/SYsC+vrMtOp3npVprVfcJ2bNctinKArvFB/VGzV6fjGW/8Aw==</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_060415</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_060426</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_060426</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_060426</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMr5DcAWqCJCEBBIGGCaZl5SQG6PBlhxLBpKvX8mAA+Sy7D65ut3qPn3RUV9wFEe23+QcUkEYLa3jiHI/19a1LKU+Q5xwn6IYuC+wP2r2e75dNn20O6KVuu269jyrVJAX2Lbu2ZWq7nrBVJ96TqCfmzWYmjaq1GaBNOU8gy7lAlFR12zTcnXL0i13bJq+4/hWrWx55h+tNIGUS9/SpGxqW1BrXtfmQiS+YaxWq/LKKbM0NGzTtIzHfm+E5xAjrXGxySgPlDa29rgcAIYowmXMYuPCOLC5CLg/IiFFIkthGyv4KpZpmDVD2gSchD+04iwEXTpjudhClFGCUUTekKpPH8ScBaVmFLKUiHn8ZRKWqRzrsMY6tlz6QzMOoZ3o6ABhypHO58ja+hrCDFKgGEq/ht269uO0ruVHxymifMbSmB+K/w0P0CVELIFA57u0ttBOd/hJpRoXgP0uxVHGyRLu1bAmCAPfdhPw6a5KgxRmZN0jXA7omit0xj68I3FTjTYJgYv/06C95mycTFCUQQM/Zm831U5t2nQGj0+GN2C1oB8Y1+Nrs54D2DfOFUVrN+LRUBZDtDnxuIpuF9bZfNkT69sny3y6z/54dw93yVP62FtErdfbwWKxCM9eMzMGqJyjxU016mZiMmn+DjvDs79zq3n94HpTsorGv0VlOUhaZ6Nu1umb7sj6WZ3ia8bunH4ocDxx55Ne69yx79BPWl0RbLTm1fuWaGfr89GArUJqitvwJobgbHZni+GvSrfdySajXjJ1wtlTvUhnD/+hbnfnR9n0L2CxE9UYdNulK9klJL4nM6UhgT7LTf1EkQ8XQIXWUKcUd/iZpDsS+LKHG9mstqot2/Oqtau227m66pieY3q1mnVlNl3P7exIZoPiCGKL0RlRsRTlbsbme4A49jnQAFJ9yTLJdFz7xmMbCVTq0qG8BIxyGDNJz1ZQeXNiuuBOzYmteJpMCU5wlTivWumeiQf6kDZnAtJDUnYOSHkImCQEFHOrweZysrmQxXhBy0xEVnmJyhQyye2polnfds89g5M4iUBBNWIWZBGUk3mSl8bgm6+tI8xz7bAzzq/bl4kd/9vVQNoERBlwlcslyD7CJ6+LuUvk64Qr+wnv3DezgKibJQsqUoI3SA5/vc+JGpBiSGRGz63Rs7XDXZiffPzjSeMbUMZxPYpAwZLshd293fIVkLzR2HXzBZVfytlymeX9qyp+TKV7SVqWZ5i2MQKcSWZ7HbMFUKPwYpz0jBTAj4IX+kOImZjTkUACYjlwpVw8YW8YAVd7Q1delfWpS8lBSFk6AWvxma4VyZ1HIf52LcI+VnZSPZCfFUvfE//M114cmadcGwShoZLUE/L6xVxgJt0SSX4s3Xf+mYPPgh8qiyIXWIQcqGkm4Os/JcVqdQ1hzDIqum0tV+wzbY5TvCbgvxt9cJOTebHdkX9f73SSjwAGuRNykvtXj7SvrgAN99h6G/SYsC+vrMtOp3npVprVfcJ2bNctinKArvFB/VGzV6fjGW/8Aw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF1BEEAB46A7E05305991F0A3244</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>DE</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7BF1BEEAB46A7E05305991F0A3244</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF1BEEAB46A7E05305991F0A3244</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7C25579FD4EFFE05305991F0A454E</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7C25579FD4EFFE05305991F0A454E</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7BF445BC64CEFE05307991F0A6D1E</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7BF445BC64CEFE05307991F0A6D1E</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1995-11-19</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00011_Account and User Create with DE 111_StandardYouthUserCreate_107_SUCCESS_P0" searchProperties="true" id="cc1fe3ea-8f1b-4f6c-a24a-a14a09ad02bc"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="a1cca096-78bf-4faa-93f8-b6d5d4c3822b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="1d79c3ad-378b-43f5-a881-493b800793b2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","DE");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="47aa3ab9-fed3-4a4e-8944-f3c345996465"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="0a9b7914-2132-4ed5-999a-fdec32f7b7a3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUserCreate" id="c7e22bb7-38d7-40d0-be4c-abe0a105b2ab"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StandardYouthUserCreate" id="12d6e7ef-8b05-4dc1-9140-0d7b9e3daf12"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VyvOY8s7qClQBzgIVMgkQMslLSpEbrIwtgyWxff2VzBIgwOXeJ5fardOnFx3pmqE4crw6Y5ByktDcPI4o8zJrVRMp9RLECPMoioF5HHu9eufBcwzLQ5stWq7lV7UPyCPLRqioDxGAnq+UK/pnIXB1x7ICOyhVCiWUl66MCWhRxhHlVc2x7Lxu27qd71uW57qeWzTylvOu5QaQMoktXQxLW5Oas6oWcj72THM2mxkz10jSkSnxbfNP56GHQ4iRVrteZZQFSmtrf2wEgCGKsIGT2Lw293yuA+b1yIgiLlJYxwpOxbJMq2JKn4CR0S9tuxeCFh0m2bKJaEIJRhFZIlWfDvAwCXL1aJSkhIfxySRsSwHrMMc6tvP0l2buU7sQaI9hypDOQmSvsbowhBQohtxLt1XVfl3WtWxrP0WUDZM0ZvvL/8YH6BSiZAyBzjZpraldDnikUrVrwF6L4kgwMoVHNaxjhIGtuwn4cqjcUwpDMn8gTA7onCl25i69g+WqGj4ZAeP/p0E7zVmBDFAkoJa25/0wEIPF+D0cTJ1xqXKPu29vd3fwt5oR2HXODNvWrpYHQ7kdotWOZmfSeXVK5Oo9XOL2zfJZcMi/v6D7ReVKPMENE05I4ydUbqN6h9HiVbN4NTHDSRAs69M+lHuLFMeiDvOvttMatcuNz+RrhmxecnzeGL7flnuO+xgUwnJlCA+vgrZmz+2lfwf24P6PG/n3T0TQ56/G4+vLcgxvpa/+p+PmKw0n5oOJ1X6c+S1/RtJe3qTrdA/479s2Z74nPr8A881SjUHLz93KLiF+XsyUhQT6MHP1xkp8GAfKtZrapbTDE1LuSODJHq7WVqlZajpWqdxsFgvFYvHGKrhWqVKxb626a/v+RmRWLA4oNhM6JCqWktzV2JwniGOPAQ0g1aeJkErHtDOIPuIo16JdeQgSyqCfSHlmSXmC47IbLIiD3DQsLcpzHIihlntM+G/6O60POaT7kuzuSXIXMBkTULqtxprJuWZclmKCpoJHtjFFBgUhlT1VIus5+XLBZCQeR6CImnESiAiMcTjOCmOy1dfREWaZtXvTzw7bybQO/20qIH0CohyYyqUBsotw5G5xNomcTri4m/AGvi4Cos6VLCdPCV4x2f/1PSVqPLYjIjP6aPY+7A3vrfvF23/uNM+QMg/rsQ0UTMlO2M3NLe8AqRq1TTcnyJgYYjoVWf9KSh1TCS8lyy6YlmP2AAupa4t+8heouUUxL7pEtsQPgm/t+xQFD2mPIw6xHLhctrzg1dADpl4NLXlQ5pc+SfZCytJxmPNjtmYkXzyK8dlHEfaw8pPmJ/mZJWnw3bEjWDtxZJ7y0cAJHamVukAWJ+YCJxKWSOlL0l3wYwDHgu8bt0XecuFyoD7lfXD6T05pWlVDGCeC8pavZYZdnc148sUYvG+nHzCZlG/fduTfH3c6yUYAg3wRMpLhqyvaU0eAjna0eh30uFw36ufkep9d7Yf5p2WnToczXvsH</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_060431</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_060443</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_060443</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_060443</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VyvOY8s7qClQBzgIVMgkQMslLSpEbrIwtgyWxff2VzBIgwOXeJ5fardOnFx3pmqE4crw6Y5ByktDcPI4o8zJrVRMp9RLECPMoioF5HHu9eufBcwzLQ5stWq7lV7UPyCPLRqioDxGAnq+UK/pnIXB1x7ICOyhVCiWUl66MCWhRxhHlVc2x7Lxu27qd71uW57qeWzTylvOu5QaQMoktXQxLW5Oas6oWcj72THM2mxkz10jSkSnxbfNP56GHQ4iRVrteZZQFSmtrf2wEgCGKsIGT2Lw293yuA+b1yIgiLlJYxwpOxbJMq2JKn4CR0S9tuxeCFh0m2bKJaEIJRhFZIlWfDvAwCXL1aJSkhIfxySRsSwHrMMc6tvP0l2buU7sQaI9hypDOQmSvsbowhBQohtxLt1XVfl3WtWxrP0WUDZM0ZvvL/8YH6BSiZAyBzjZpraldDnikUrVrwF6L4kgwMoVHNaxjhIGtuwn4cqjcUwpDMn8gTA7onCl25i69g+WqGj4ZAeP/p0E7zVmBDFAkoJa25/0wEIPF+D0cTJ1xqXKPu29vd3fwt5oR2HXODNvWrpYHQ7kdotWOZmfSeXVK5Oo9XOL2zfJZcMi/v6D7ReVKPMENE05I4ydUbqN6h9HiVbN4NTHDSRAs69M+lHuLFMeiDvOvttMatcuNz+RrhmxecnzeGL7flnuO+xgUwnJlCA+vgrZmz+2lfwf24P6PG/n3T0TQ56/G4+vLcgxvpa/+p+PmKw0n5oOJ1X6c+S1/RtJe3qTrdA/479s2Z74nPr8A881SjUHLz93KLiF+XsyUhQT6MHP1xkp8GAfKtZrapbTDE1LuSODJHq7WVqlZajpWqdxsFgvFYvHGKrhWqVKxb626a/v+RmRWLA4oNhM6JCqWktzV2JwniGOPAQ0g1aeJkErHtDOIPuIo16JdeQgSyqCfSHlmSXmC47IbLIiD3DQsLcpzHIihlntM+G/6O60POaT7kuzuSXIXMBkTULqtxprJuWZclmKCpoJHtjFFBgUhlT1VIus5+XLBZCQeR6CImnESiAiMcTjOCmOy1dfREWaZtXvTzw7bybQO/20qIH0CohyYyqUBsotw5G5xNomcTri4m/AGvi4Cos6VLCdPCV4x2f/1PSVqPLYjIjP6aPY+7A3vrfvF23/uNM+QMg/rsQ0UTMlO2M3NLe8AqRq1TTcnyJgYYjoVWf9KSh1TCS8lyy6YlmP2AAupa4t+8heouUUxL7pEtsQPgm/t+xQFD2mPIw6xHLhctrzg1dADpl4NLXlQ5pc+SfZCytJxmPNjtmYkXzyK8dlHEfaw8pPmJ/mZJWnw3bEjWDtxZJ7y0cAJHamVukAWJ+YCJxKWSOlL0l3wYwDHgu8bt0XecuFyoD7lfXD6T05pWlVDGCeC8pavZYZdnc148sUYvG+nHzCZlG/fduTfH3c6yUYAg3wRMpLhqyvaU0eAjna0eh30uFw36ufkep9d7Yf5p2WnToczXvsH</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C2078CBA5666E05307991F0A31DD</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>DE</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7C2078CBA5666E05307991F0A31DD</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C2078CBA5666E05307991F0A31DD</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7C2078CC65666E05307991F0A31DD</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7C2078CC65666E05307991F0A31DD</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7BF88784A462CE05305991F0A740C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7BF88784A462CE05305991F0A740C</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-11-18</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00012_Account and User Create with DE 111_BasicChildUserCreate_107_SUCCESS_P0" searchProperties="true" id="12fb9801-5001-4568-852b-752aecef2697"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="b276edd9-f52f-4291-9336-f92dc57cd02e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="8118e19f-0070-47c6-8147-93b4b1f1db51"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","DE");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="ae56cb23-3cc8-4593-8c98-4189bf455f40"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="e1534c79-34a0-42c1-88af-215ab61c4ab7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for BasicChildUserCreate" id="dc195700-2165-4ff0-bdd9-d723de185a3d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("CHILD_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian",tC.getPropertyValue("LegalGuardian"));

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call BasicChildUserCreate" id="b09d2298-3823-4b03-a819-ad111dd4a0e6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZZc+I4EP4rlOdxyvjA5nAFqjgn7JJMEmemJvMypchtUMaWQJJt4NevZMAD5Fh2n6Dbre6vD33qK4HSxA36QgCXhNHaOk2oCEpt18g4DRgSRAQUpSACiYOwfzML3LodoMMRozYddY1fCDo+6vi+6cQQm17UiMw2ADbtBvZR5EcudrAyFSKDKRUSUdk1XNvxTMcxHe/RtoNGI/CderPt/jRq34EL5VuZ1G1jD2otusZCymVgWUVR1ItGnfG55dq2Y/24mYV4ASkyele7jMpAvLe3x/UIMCQJrmOWWlfWic1VJIKQzCmSGYd9rOi9WLZldyxlEwky/2RUZyGa0piV4hBRRglGCdkiXZ8bkAsW1frJnHEiF+m7STi2dmzCGpvY8egnwzqFdqGjE4RcIFMskLP39QAxcKAYat8epl3j02VdK48+ckRFzHgqTsX/hgdoDglbQmSKQ1p7aJc7fKNSvSvAwZTiJBMkh1s9rEuEQey7CfhyV7U7DjFZz4hQA7oWGp11DO9M3FVjROYg5P9p0FFzdk6+oySD3tMomrU2+RfPcv3Ot8/ZdTIcep/DqP9kd0sAx8alomrtTjwbymqIdifuRDopXiYI3ebzL+PbJ78NncHE+tspXhAXo/vGcpvfwFhcT7fZNYr46iUFPL6epR4sOuwWP6Zo6xQOn1hxGo9EfuPw4q/meLz9bv1M0vA3mv582qzyNXu+j0PxlG77A5Gw308L626DnsMiHmbq//OoyMntjPLPMFuGtgtb6k1+pItF+77lPTzfrwt3uk/3DP+p7nDnw+z5BbA8iHoMpqPaRHUJyY/JTGtIZMalabDU5CMkUGn09CnNHUGm6I5EgerhTrZbw9bQGYzak+bAb3rDse037Fan40zs/rhhDw8ks0NxBnHIaEx0LE25u7H5GCBOAwE0Am7mLFNMJ4wPPI6QRLUpfVCXgFEBj0zRs0OjdgEuXjF44fCyJTEWm9WquTZqt0x+pV95P5bATzm5ccLJD4DJkoAmbj3XQg22kKoWK5RnMnHqOapTyBS1c82ygeu1fUuQdJmARmqlLMoSqC8Xy7Iyltj9uibCotQ+jB/L2/ZuXuffDiVQNhHRBkLnMgDVRnjjcfEOibyfcPM44YP7fhYRfbFUPSUneIfk9NOfMdHzUc2IyujXMPzlHHBX5hcff33S+gCUdV6PKlCUk6Owh6dbPQKKNnqHbq5QfVXP8jwr+9fS9MiVe8VZjm/ZrhUCzhSxbR7Zb6BW5cW66BWpgJ8Fr/SnEDO5oKFEElI1cLVSvGBtCEHotWGqbsr60p3kJKQqnYS1fEs3TNTKoxF/uBXhAGs7pb5TPwXj0Z+OveHrKI7KU20NktC5lvQLsnlnLjBTboniPsaPnb/l4K3gp8qqyBUWqQbqOZPw/peaJrWugTBmGZXTkVEqjom2xCk3Swj+GL1yU3J5tdyRf9/uTFKOAAa1EgpS+tdvdKCvAJ0fkfU+6DlfDybOYDwedbxmv1Xytb/j64breVVRTtD1Xqlfa47qdD7jvX8A</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_060448</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_060459</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_060459</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_060459</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZZc+I4EP4rlOdxyvjA5nAFqjgn7JJMEmemJvMypchtUMaWQJJt4NevZMAD5Fh2n6Dbre6vD33qK4HSxA36QgCXhNHaOk2oCEpt18g4DRgSRAQUpSACiYOwfzML3LodoMMRozYddY1fCDo+6vi+6cQQm17UiMw2ADbtBvZR5EcudrAyFSKDKRUSUdk1XNvxTMcxHe/RtoNGI/CderPt/jRq34EL5VuZ1G1jD2otusZCymVgWUVR1ItGnfG55dq2Y/24mYV4ASkyele7jMpAvLe3x/UIMCQJrmOWWlfWic1VJIKQzCmSGYd9rOi9WLZldyxlEwky/2RUZyGa0piV4hBRRglGCdkiXZ8bkAsW1frJnHEiF+m7STi2dmzCGpvY8egnwzqFdqGjE4RcIFMskLP39QAxcKAYat8epl3j02VdK48+ckRFzHgqTsX/hgdoDglbQmSKQ1p7aJc7fKNSvSvAwZTiJBMkh1s9rEuEQey7CfhyV7U7DjFZz4hQA7oWGp11DO9M3FVjROYg5P9p0FFzdk6+oySD3tMomrU2+RfPcv3Ot8/ZdTIcep/DqP9kd0sAx8alomrtTjwbymqIdifuRDopXiYI3ebzL+PbJ78NncHE+tspXhAXo/vGcpvfwFhcT7fZNYr46iUFPL6epR4sOuwWP6Zo6xQOn1hxGo9EfuPw4q/meLz9bv1M0vA3mv582qzyNXu+j0PxlG77A5Gw308L626DnsMiHmbq//OoyMntjPLPMFuGtgtb6k1+pItF+77lPTzfrwt3uk/3DP+p7nDnw+z5BbA8iHoMpqPaRHUJyY/JTGtIZMalabDU5CMkUGn09CnNHUGm6I5EgerhTrZbw9bQGYzak+bAb3rDse037Fan40zs/rhhDw8ks0NxBnHIaEx0LE25u7H5GCBOAwE0Am7mLFNMJ4wPPI6QRLUpfVCXgFEBj0zRs0OjdgEuXjF44fCyJTEWm9WquTZqt0x+pV95P5bATzm5ccLJD4DJkoAmbj3XQg22kKoWK5RnMnHqOapTyBS1c82ygeu1fUuQdJmARmqlLMoSqC8Xy7Iyltj9uibCotQ+jB/L2/ZuXuffDiVQNhHRBkLnMgDVRnjjcfEOibyfcPM44YP7fhYRfbFUPSUneIfk9NOfMdHzUc2IyujXMPzlHHBX5hcff33S+gCUdV6PKlCUk6Owh6dbPQKKNnqHbq5QfVXP8jwr+9fS9MiVe8VZjm/ZrhUCzhSxbR7Zb6BW5cW66BWpgJ8Fr/SnEDO5oKFEElI1cLVSvGBtCEHotWGqbsr60p3kJKQqnYS1fEs3TNTKoxF/uBXhAGs7pb5TPwXj0Z+OveHrKI7KU20NktC5lvQLsnlnLjBTboniPsaPnb/l4K3gp8qqyBUWqQbqOZPw/peaJrWugTBmGZXTkVEqjom2xCk3Swj+GL1yU3J5tdyRf9/uTFKOAAa1EgpS+tdvdKCvAJ0fkfU+6DlfDybOYDwedbxmv1Xytb/j64breVVRTtD1Xqlfa47qdD7jvX8A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF1BEED946A7E05305991F0A3244</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>DE</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7BF1BEED946A7E05305991F0A3244</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF1BEED946A7E05305991F0A3244</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7C1BD8F6B564CE05307991F0AE30C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7C1BD8F6B564CE05307991F0AE30C</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7BF445BDD4CEFE05307991F0A6D1E</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7BF445BDD4CEFE05307991F0A6D1E</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2002-11-17</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>07C7C1BD8F6B564CE05307991F0AE30C</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00013_Account and User Create with CH 111_SecondFullUserCreate_107_SUCCESS_P0" searchProperties="true" id="202ce42e-fc81-4275-b24d-4b80285bdbba"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="b9ba31ba-8633-4636-85ad-be2ae67dc6de"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="5c8ca086-eaad-4503-945a-eb8a738f4a1c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CH");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="db925f67-c4d9-4487-b1f7-77c2649d27c7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="504ca72c-3e90-47cc-9d18-857a55616236"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFullUserCreate" id="867ccbb1-88d1-4f76-ab14-4ab02f134edd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create" id="6fac13bf-7d13-41ae-83a6-bd4988b0aedd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynmcMr6CgytQBSTZmIRcMJlk52VKyG3QxJZBksHJ169kwAFyWXafXN1udZ++6KjPOEoT2+9yDkyQjNaKNKHcL7VtLWfUzxAn3KcoBe4L7Ifd4Y1v100fbY9oteC8rf2O4knk2GiiY8cydbdp2vqk6bo6xC3ktCIAQJ405TyHgHKBqGhrtmm5umXpljs2Td9xfdOru5bzS6v9BMalb2lSN7UNqIK3tZkQc98wVqtVfeXUMzY1bNO0jOfhTYhnkCKtc7bOqAzEOht7XI8AQ5LgOs5S48zYszmLuB+SKUUiZ7CJFX0VyzTMliFtIk6mJ1p1FqKAxlkp9hHNKMEoIW9I1WcIYpZFtW4yzRgRs/TLJCxTOdahwDq2XHqiGfvQjnS0h5BxpPMZsja+RhADA4qh9jgK2trJcV0rj44ZojzOWMr3xf+GB+gSkmwOkc63aW2gHe/wk0p1zgD7AcVJzskSbtWwzhEGvukm4ONd1e4ZxKS4IVwOaMEVOmMX3oG4rsY5mQIX/6dBO81ZO/mJkhw618bp08vFs1i8WK/kwcvSrPf2tCJW0+m2SwC7xqWiau1aPBjKaojWJ54nz4+Pl3ySdPGP01PW+DVm7ClM0uDtPv7beMzR4twumsHEaYnwr/6q+4AW5uCNhYPhZPxnTPL4ijw15+MksN6uvasXezYwbwcPd5Pb6YXhuU/c7UUNO+4OpsbAZj/CO3joudlV/+eolyS/gjSNBys6DGnxJx2RopEE0VscxMNh4cVm/9rJhv3+S5dGye3900O7SmcH/75ue+fDfPIHsNiKagyC89ql7BIS35OZ0pBIj0tTf67IhwugQuuoU4o7/FzSHYl82cO1bHp9r3dp9S4uLc9tdr0Ls+GYjVbLujS7ju26W5JZoziA2M9oTFQsRbnrsfkeIE59DjQCpi+zXDId177xeI4EqgV0JC9BRjmMM0nPS2K6rtdsLVrUa3Gz8DxWsLSwtNptJu7oHevGAtg+JTt7lDwCTOYEFG+rseZyrrmQpVigZS4Sq75EdQq5ZHamSNa33dOGwUk6T0ABNdIsyhOoz2fzsjAGX39tHWFeakcX4/KyfZnW4b9tBaRNRJQBV7n0QHYRPrwtjt/YJvJ1ws3dhLfuu3lE1L2S5RSM4DWS/V/vU6LGoxoRmdHvfvjb2uKuzI8+/vGk8Q0o47AeVaBoSXbCbl9u+QZI1uhsu7lA9UU9Xy7zsn+eYkcm3UvKshqGaRsh4Fzy2us4ewFqVF6Mox6RCvhB8Eq/DzEXMxoKJCCVA1crxSO2hhC42hoCeVGKY1eSvZCydAIK8Zmun8iNRyH+dinCPlZ2Un0vP6uMRe8d+8TXThyZp1waBKFTJakH5PWLucCZdEsk9WVs1/lnDj4Lvq+silxhEXKgJrmAr//UFKe1NYRxllMRnGulYpdnS5zidQ7+u9EHNyWVV7sd+fflTiflCGCQGyEnpX/1RPvqCtDpDldvgn5O12bvO7reR9f5oP6o2anT4Yx3/gE=</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_06053</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_060514</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_060514</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_060514</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynmcMr6CgytQBSTZmIRcMJlk52VKyG3QxJZBksHJ169kwAFyWXafXN1udZ++6KjPOEoT2+9yDkyQjNaKNKHcL7VtLWfUzxAn3KcoBe4L7Ifd4Y1v100fbY9oteC8rf2O4knk2GiiY8cydbdp2vqk6bo6xC3ktCIAQJ405TyHgHKBqGhrtmm5umXpljs2Td9xfdOru5bzS6v9BMalb2lSN7UNqIK3tZkQc98wVqtVfeXUMzY1bNO0jOfhTYhnkCKtc7bOqAzEOht7XI8AQ5LgOs5S48zYszmLuB+SKUUiZ7CJFX0VyzTMliFtIk6mJ1p1FqKAxlkp9hHNKMEoIW9I1WcIYpZFtW4yzRgRs/TLJCxTOdahwDq2XHqiGfvQjnS0h5BxpPMZsja+RhADA4qh9jgK2trJcV0rj44ZojzOWMr3xf+GB+gSkmwOkc63aW2gHe/wk0p1zgD7AcVJzskSbtWwzhEGvukm4ONd1e4ZxKS4IVwOaMEVOmMX3oG4rsY5mQIX/6dBO81ZO/mJkhw618bp08vFs1i8WK/kwcvSrPf2tCJW0+m2SwC7xqWiau1aPBjKaojWJ54nz4+Pl3ySdPGP01PW+DVm7ClM0uDtPv7beMzR4twumsHEaYnwr/6q+4AW5uCNhYPhZPxnTPL4ijw15+MksN6uvasXezYwbwcPd5Pb6YXhuU/c7UUNO+4OpsbAZj/CO3joudlV/+eolyS/gjSNBys6DGnxJx2RopEE0VscxMNh4cVm/9rJhv3+S5dGye3900O7SmcH/75ue+fDfPIHsNiKagyC89ql7BIS35OZ0pBIj0tTf67IhwugQuuoU4o7/FzSHYl82cO1bHp9r3dp9S4uLc9tdr0Ls+GYjVbLujS7ju26W5JZoziA2M9oTFQsRbnrsfkeIE59DjQCpi+zXDId177xeI4EqgV0JC9BRjmMM0nPS2K6rtdsLVrUa3Gz8DxWsLSwtNptJu7oHevGAtg+JTt7lDwCTOYEFG+rseZyrrmQpVigZS4Sq75EdQq5ZHamSNa33dOGwUk6T0ABNdIsyhOoz2fzsjAGX39tHWFeakcX4/KyfZnW4b9tBaRNRJQBV7n0QHYRPrwtjt/YJvJ1ws3dhLfuu3lE1L2S5RSM4DWS/V/vU6LGoxoRmdHvfvjb2uKuzI8+/vGk8Q0o47AeVaBoSXbCbl9u+QZI1uhsu7lA9UU9Xy7zsn+eYkcm3UvKshqGaRsh4Fzy2us4ewFqVF6Mox6RCvhB8Eq/DzEXMxoKJCCVA1crxSO2hhC42hoCeVGKY1eSvZCydAIK8Zmun8iNRyH+dinCPlZ2Un0vP6uMRe8d+8TXThyZp1waBKFTJakH5PWLucCZdEsk9WVs1/lnDj4Lvq+silxhEXKgJrmAr//UFKe1NYRxllMRnGulYpdnS5zidQ7+u9EHNyWVV7sd+fflTiflCGCQGyEnpX/1RPvqCtDpDldvgn5O12bvO7reR9f5oP6o2anT4Yx3/gE=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF1BEF0B46A7E05305991F0A3244</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>CH</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7BF1BEF0B46A7E05305991F0A3244</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF1BEF0B46A7E05305991F0A3244</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7BF1BEF1746A7E05305991F0A3244</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7BF1BEF1746A7E05305991F0A3244</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7BF445BF34CEFE05307991F0A6D1E</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7BF445BF34CEFE05307991F0A6D1E</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1995-11-19</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00014_Account and User Create with CH 111_StandardYouthUserCreate_107_SUCCESS_P0" searchProperties="true" id="d00a17bf-ab0a-473a-9be5-3769c257be8b"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="7fb7406b-da07-4705-b548-2ac6c410a1fd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="7206274a-f768-40de-a08b-189fe7e7e3e9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CH");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="5543c931-c664-4fec-9de1-7d4e3957bbb3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="c378a524-ae31-4499-b6af-eef2fe4f399b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUserCreate" id="a50b1889-10e4-489e-b075-2c2965e3baea"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StandardYouthUserCreate" id="ef8247ef-608a-4d35-b469-8244a8f2f3d7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZrU/I6EP4rTP34Tml64dYRZpCK9hzvqKhfnJhuIdKm2KSl+utPUqACXg7nfOrsdrP77CVP9pDjOLLcPueQCpqwWhFHjLultqtlKXMTzCl3GY6Bu4K4o/75mWvVkYvXR7Sa73W1544JjU7T6egIA9KdwGnqHYIs3bERWGG747QCLE05z8BnXGAmupqFTEc3Td10bhFybce1rLrTdp602j2kXPqWJnWkrUAVvKtNhZi7hrFYLOoLu56kE8NCyDQezs9GZAox1nqHy4zKQGlvZU/qARCIIlInSWwcGls2hwF3R3TCsMhSWMUKfoqFDNQxpE3A6eRAq85C4LMwKcUBZgmjBEf0A6v6nIOYJkGtH02SlIpp/GMSJlKOdSiITkyHHWjGNrQ9HW0hTDnW+RSbK183EEIKjEDt7sbvagf7da08eptixsMkjfm2+N/wAMshSuYQ6Hyd1gra/g6/qVTvEIjrMxJlnOZwoYZ1jgnwVTeB7O+qdpVCSIszyuWAFlyhMzbh7YjLanh0Alz8nwZtNGfp5B5HGfQGKR3eXIni7Lj/98fwoYXH18bokhyNx+1uCWDTuFRUrV2KO0NZDdHyBDst7k+OjfYDt968/uWo+ZDPxy8fyZHzyPzp9fv7Kzn6sKPMfMxOh8V4fOo3RCO8bUavT5O/wkHTZvmkPyPRn8bbpe/MzGlxGQ9wv43G5x/tFn3Ip+Q05Z6AKffORWt2x73j8Hp44onWxYkfPo7zj1HjhJ78uejfPZrO9WM0c+ZJnp8PJta1s3CKl072xLGfnTx2q3Q28G/r1nd+lL28AhFrUY2B79WGsktY/E5mSkMDPSxN3bkiHy6ACa2nTinucDNJdzRwZQ+XMmoNWgMLtdqejRrNZvMYNWzU6nTMIerbpuetSWaJYgfiIGEhVbEU5S7H5neAJHY5sABSPU8yyXRc+8WjhwWu+exGXoKEcbhNJD2baUgKi9lpWMwWL2ZgBi+z+K2ZJ1rtIhGX7DLthwLSbU62tzj5BgidU1DEreaay8HmQtbiDeeZiMx6jusMMkntqWJZ13LaDYPTeB6BQmrESZBFUJ9P52VlDL78WjomvNTeHN+Wt+3HvHb/rUsgbQKqDLjK5QhkG+Gbx8VcJ/Jzws3NhNfu+1lA1cWS9RQpJUsk278+x0TNRzUjMqPnwejZXOOuzPc+/vWk8QsoY7ceVaAgpxth10+3fAQkbfTW3XzD9bd6ludZ2b+WosdUupecZTYMZBkjIJkktvfbZAbMqLwYe70iFfCd4JV+G2ImpmwksIBYDlytFPdYG0bA1drgy5tS7LuTbIWUpRNQiO90g0iuPArxr1sRcYmyk+or+VkkafDZsW98bcSRecqtQVA2UZJ6Qd5/mAuSSLdUcl+Sbjr/zsF3wbeVVZErLEIO1Esm4Oc/NUVqXQ0TkmRM+J5WKjaJtsQp3ufgfhp9cVNyebXc0X/f7nRajgABuRJyWvpXb7SrrgCbbJD1KuhXvm40B8huO0Nkl3zdWPI1si2rKsoWut4X9VfNRp12Z7z3Dw==</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_060518</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_060530</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_060530</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_060530</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZrU/I6EP4rTP34Tml64dYRZpCK9hzvqKhfnJhuIdKm2KSl+utPUqACXg7nfOrsdrP77CVP9pDjOLLcPueQCpqwWhFHjLultqtlKXMTzCl3GY6Bu4K4o/75mWvVkYvXR7Sa73W1544JjU7T6egIA9KdwGnqHYIs3bERWGG747QCLE05z8BnXGAmupqFTEc3Td10bhFybce1rLrTdp602j2kXPqWJnWkrUAVvKtNhZi7hrFYLOoLu56kE8NCyDQezs9GZAox1nqHy4zKQGlvZU/qARCIIlInSWwcGls2hwF3R3TCsMhSWMUKfoqFDNQxpE3A6eRAq85C4LMwKcUBZgmjBEf0A6v6nIOYJkGtH02SlIpp/GMSJlKOdSiITkyHHWjGNrQ9HW0hTDnW+RSbK183EEIKjEDt7sbvagf7da08eptixsMkjfm2+N/wAMshSuYQ6Hyd1gra/g6/qVTvEIjrMxJlnOZwoYZ1jgnwVTeB7O+qdpVCSIszyuWAFlyhMzbh7YjLanh0Alz8nwZtNGfp5B5HGfQGKR3eXIni7Lj/98fwoYXH18bokhyNx+1uCWDTuFRUrV2KO0NZDdHyBDst7k+OjfYDt968/uWo+ZDPxy8fyZHzyPzp9fv7Kzn6sKPMfMxOh8V4fOo3RCO8bUavT5O/wkHTZvmkPyPRn8bbpe/MzGlxGQ9wv43G5x/tFn3Ip+Q05Z6AKffORWt2x73j8Hp44onWxYkfPo7zj1HjhJ78uejfPZrO9WM0c+ZJnp8PJta1s3CKl072xLGfnTx2q3Q28G/r1nd+lL28AhFrUY2B79WGsktY/E5mSkMDPSxN3bkiHy6ACa2nTinucDNJdzRwZQ+XMmoNWgMLtdqejRrNZvMYNWzU6nTMIerbpuetSWaJYgfiIGEhVbEU5S7H5neAJHY5sABSPU8yyXRc+8WjhwWu+exGXoKEcbhNJD2baUgKi9lpWMwWL2ZgBi+z+K2ZJ1rtIhGX7DLthwLSbU62tzj5BgidU1DEreaay8HmQtbiDeeZiMx6jusMMkntqWJZ13LaDYPTeB6BQmrESZBFUJ9P52VlDL78WjomvNTeHN+Wt+3HvHb/rUsgbQKqDLjK5QhkG+Gbx8VcJ/Jzws3NhNfu+1lA1cWS9RQpJUsk278+x0TNRzUjMqPnwejZXOOuzPc+/vWk8QsoY7ceVaAgpxth10+3fAQkbfTW3XzD9bd6ludZ2b+WosdUupecZTYMZBkjIJkktvfbZAbMqLwYe70iFfCd4JV+G2ImpmwksIBYDlytFPdYG0bA1drgy5tS7LuTbIWUpRNQiO90g0iuPArxr1sRcYmyk+or+VkkafDZsW98bcSRecqtQVA2UZJ6Qd5/mAuSSLdUcl+Sbjr/zsF3wbeVVZErLEIO1Esm4Oc/NUVqXQ0TkmRM+J5WKjaJtsQp3ufgfhp9cVNyebXc0X/f7nRajgABuRJyWvpXb7SrrgCbbJD1KuhXvm40B8huO0Nkl3zdWPI1si2rKsoWut4X9VfNRp12Z7z3Dw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C256C0384F03E05305991F0A0322</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>CH</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7C256C0384F03E05305991F0A0322</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C256C0384F03E05305991F0A0322</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7C2078D305666E05307991F0A31DD</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7C2078D305666E05307991F0A31DD</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7BF445C094CEFE05307991F0A6D1E</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7BF445C094CEFE05307991F0A6D1E</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1997-11-18</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00015_Account and User Create with CH 111_BasicChildUserCreate_107_SUCCESS_P0" searchProperties="true" id="cd3ff854-36ff-4960-b0ab-bd7680537670"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="6c411cbf-7ac2-40d4-95e1-0ff5b9ac5b2f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="79ebac8f-8ad8-4b55-8ffe-a6ab3901d69a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CH");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="0c973e7a-4135-4876-a522-da9b025bdb8a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="cc63de10-95d3-4404-9ba2-b19de40f4061"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for BasicChildUserCreate" id="da04cdc5-e8e2-42c4-b2c7-d077fab81e9e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("CHILD_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian",tC.getPropertyValue("LegalGuardian"));

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call BasicChildUserCreate" id="7686d9d0-dbed-4da0-bbe9-9dbbfe353361"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMpYv3FyBKgK5MIFJCkMmyUtKyA0o2DKxZAP5+pUMOEAgy+6Tq9ut7tMXHfUlx2FguU3OIRY0YoVlGDDuZtq6lsTMjTCn3GU4BO4K4nrNXte1isjF2yNaodOua29jUrZ827Z14vgj3QFc1bFlmzrYFeI4NiEYlaQp5wl0GBeYibpmIdPRTVM3nQFCru24dq1YRdarVniCmEvf0qSItA2oJa9rUyHmrmEsFoviwi5G8cSwEDKN517XI1MIsda4XGeUBYobG3tS9IFAEJAiiULj0tizufS569EJwyKJYRPLPxULGahmSBuf08kvLT8LfoeNo0xsYRYxSnBAP7GqTw/ENPILzWASxVRMw5NJmEg51mFJdGI67Jdm7EM709EewphjnU+xufHVhzHEwAgUhv1OXft1Xteyo4MYMz6O4pDvi/8ND7AUgmgOvs63aW2gne/wSKUal0DcDiNBwmkKf9SwzjEBvukmkPNdFR5jGNNll3I5oEuu0Bm78A7EdTXadAJc/J8G7TRn7eQJBwk0FqPf8bg3rRIx98ukfT3zRoLFt/F1E9UzALvGmSJv7Vo8GMp8iNYnYGWBaVYNZ/noObR3OxgPrbBm3HUvnpLmBZpwe+WPK9Va5cny3vsv9C7B5db7w6Tz8vmSPAx7ZPYOxLuTFRtejZ7R5ytMaxcfHorg6jci7Sve57fLzsvT8PWefVbT59moT1g66t3xm9pd1+KvtTQtL2rv5Xene8/+EqeTzodsuXp4vg//kpI1Tsq3vdv7C9Hm9TydHfz7uu2d95KRhCW2ohqDTrtwI7uExc9kpjTU18eZqTtX5MMFMKE11CnFHW4i6Y76ruzhWkaVVqVloUq1XUGlcrl8jUo2qtRq5g1q2ma7vSWZNYoDiK2IjamKpSh3PTY/AyShy4H5EOtplEim49oPHttY4EKH9eUliBiHQSTpeRHWZiu6gBmeLack9dEkQAFgrhX+ROKBPcTNsYB4n5LtPUruA6FzCoq31VhzOddcyFJ84DQRgVlMcZFBIpk9ViTrWk61ZHAazgNQQI0w8pMAivPpPCuMwddfS8eEZ9r+9SC7bCfTOvy3rYC08aky4CqXK5BdhCNvi7VN5HTC5d2Et+6biU/VvZLlFDElayT7v76mRI1HPiIyo7eW92ZucefmZx//ftL4AZRxWI88kJ/SnbDbl1u+AZI1GttufuDiRzFJ0yTrX0WxYyzdS8oySwayDA9IInltNYhmwIzci3HWI5IDPwie6/chJmLKPIEFhHLgCpl4xtbgAVdbQ0delOW5K8leSFk6AUtxTNcK5MajEP+4FBGXKDupfpSfRRT7Xx074msnjsxTLg2CsomS1AOyOjEXJJJuqaS+KN51fszBseD7yrzIORYhB2qUCDj9p6A4ra5hQqKEiU5byxS7PJvhFKs5uF9G39xkVJ7vdvTflzudZiNAQG6EnGb+1RPtqivAJjtcvQl6nK7Lzk90vY+u8U39XbNTp8MZb/wD</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_060536</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_060548</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_060548</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_060548</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMpYv3FyBKgK5MIFJCkMmyUtKyA0o2DKxZAP5+pUMOEAgy+6Tq9ut7tMXHfUlx2FguU3OIRY0YoVlGDDuZtq6lsTMjTCn3GU4BO4K4nrNXte1isjF2yNaodOua29jUrZ827Z14vgj3QFc1bFlmzrYFeI4NiEYlaQp5wl0GBeYibpmIdPRTVM3nQFCru24dq1YRdarVniCmEvf0qSItA2oJa9rUyHmrmEsFoviwi5G8cSwEDKN517XI1MIsda4XGeUBYobG3tS9IFAEJAiiULj0tizufS569EJwyKJYRPLPxULGahmSBuf08kvLT8LfoeNo0xsYRYxSnBAP7GqTw/ENPILzWASxVRMw5NJmEg51mFJdGI67Jdm7EM709EewphjnU+xufHVhzHEwAgUhv1OXft1Xteyo4MYMz6O4pDvi/8ND7AUgmgOvs63aW2gne/wSKUal0DcDiNBwmkKf9SwzjEBvukmkPNdFR5jGNNll3I5oEuu0Bm78A7EdTXadAJc/J8G7TRn7eQJBwk0FqPf8bg3rRIx98ukfT3zRoLFt/F1E9UzALvGmSJv7Vo8GMp8iNYnYGWBaVYNZ/noObR3OxgPrbBm3HUvnpLmBZpwe+WPK9Va5cny3vsv9C7B5db7w6Tz8vmSPAx7ZPYOxLuTFRtejZ7R5ytMaxcfHorg6jci7Sve57fLzsvT8PWefVbT59moT1g66t3xm9pd1+KvtTQtL2rv5Xene8/+EqeTzodsuXp4vg//kpI1Tsq3vdv7C9Hm9TydHfz7uu2d95KRhCW2ohqDTrtwI7uExc9kpjTU18eZqTtX5MMFMKE11CnFHW4i6Y76ruzhWkaVVqVloUq1XUGlcrl8jUo2qtRq5g1q2ma7vSWZNYoDiK2IjamKpSh3PTY/AyShy4H5EOtplEim49oPHttY4EKH9eUliBiHQSTpeRHWZiu6gBmeLack9dEkQAFgrhX+ROKBPcTNsYB4n5LtPUruA6FzCoq31VhzOddcyFJ84DQRgVlMcZFBIpk9ViTrWk61ZHAazgNQQI0w8pMAivPpPCuMwddfS8eEZ9r+9SC7bCfTOvy3rYC08aky4CqXK5BdhCNvi7VN5HTC5d2Et+6biU/VvZLlFDElayT7v76mRI1HPiIyo7eW92ZucefmZx//ftL4AZRxWI88kJ/SnbDbl1u+AZI1GttufuDiRzFJ0yTrX0WxYyzdS8oySwayDA9IInltNYhmwIzci3HWI5IDPwie6/chJmLKPIEFhHLgCpl4xtbgAVdbQ0delOW5K8leSFk6AUtxTNcK5MajEP+4FBGXKDupfpSfRRT7Xx074msnjsxTLg2CsomS1AOyOjEXJJJuqaS+KN51fszBseD7yrzIORYhB2qUCDj9p6A4ra5hQqKEiU5byxS7PJvhFKs5uF9G39xkVJ7vdvTflzudZiNAQG6EnGb+1RPtqivAJjtcvQl6nK7Lzk90vY+u8U39XbNTp8MZb/wD</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C2078D645666E05307991F0A31DD</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>CH</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7C2078D645666E05307991F0A31DD</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C2078D645666E05307991F0A31DD</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7C2078D705666E05307991F0A31DD</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7C2078D705666E05307991F0A31DD</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7BF445C1F4CEFE05307991F0A6D1E</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7BF445C1F4CEFE05307991F0A6D1E</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>07C7C2078D705666E05307991F0A31DD</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00016_Account and User Create with FR 111_SecondFullUserCreate_107_SUCCESS_P0" searchProperties="true" id="31469cd3-c91d-4299-9d41-b86a873e7ce1"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="2fa2a4fa-2bde-4782-8f0d-7ce426c25440"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="bbc868db-9743-444a-9f27-270e7ec89c23"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","FR");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="0ed43a8f-7ed5-476d-b730-4ee0ea7d6f82"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="d36e895a-8bf3-42d1-aa71-dd6560c7e6fb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFullUserCreate" id="89145b9e-ee08-40f8-af98-a36d2de54215"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create" id="df60dc3d-22c2-4329-ac7c-c6e240b3df63"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZZc+I4EP4rlOdxyvjG4ApUsSbZdY4hgYTJ5mVKyA1WYiQiyRz59SsZ8AA5lt0nV7db3V8f+tRnAs1yN+oKAVwSRmurWU5FVGrbRsFpxJAgIqJoBiKSOBp2b64jt25HaHfEqCW9tvErcCZNzw4DsxGAY/pOa2Ii5I7N0HZdv4UBXBeUqRAFJFRIRGXbcG3HNx3HdPx72448PwoaddsJn4zaCLhQvpVJ3Ta2oFaibWRSziPLWi6X9aVXZ3xqubbtWI8310OcwQwZnbNNRmUg3tna43oKGPIc1zGbWWfWgc1ZKqIhmVIkCw7bWOlnsWzLblnKJhVk+s2ozkKa0AkrxRhRRglGOXlDuj43IDOW1rr5lHEis9mnSTi2dmzCCpvY8ek3wzqEdqKjA4RcIFNkyNn6GsAEOFAMtYdB0ja+nda18ug9R1RMGJ+JQ/G/4QG6gJzNITXFLq0ttNMdflCpzhngKKE4LwRZwA89rHOEQWy7Cfh0V7VbDhOyuiZCDehKaHTWPrwjcVONHpmCkP+nQXvN2TgZobyATib6N69PMM1uHi79YDCA/PEWO81i7jfbJYB941JRtXYjHg1lNUSbEynxUM96i6nNVm85oXwcjNbsMom99K+r0ZWXJbh/dz2aWf2s0TpnV41bX4rZqjHP4/gxnDafHp65NeryxkN/+ef43vub2Bc/x/TOe+lnnmcNYHDxhM7Xl4OH3g9gSR5K5i7j0WP27AVj/+dbxgdJ88p1H0TiDx/9m94lt6/H8Utsf6fB99swXDvpXfaSvTbu2lU6e/gPdbs7PyzGz4DlTtRjkPRqF6pLSH5NZlpDUnNSmkZzTT5CApVGR5/S3BEViu5IGqkebmQ7jMPY9bsNzwn9c793bgeeHbRazoXd/aPleDuS2aA4ghgzOiE6lqbczdh8DRDPIgE0BW4uWKGYThhfeOwhiWoJHahLwKiAe6bo2XkOl364XNvTxXLuBNmYywkPXLKYGLUfTPZpn3cnEvghKXsHpDwATOYENHPrwRZqsoVUxXhFi0LmTn2B6hQKxe1c02zk+s3AEmQ2z0FDtWYsLXKoz7N5WRpLbL6uibAotYPz+/K6fZrY8b9dDZRNSrSB0Ln8AaqP8MHr4u8S+Tzhxn7CO/fdIiX6ZqmCSk7wBsnhr99zogekGhKV0a94+MvZ4a7MTz7+/qT1BSjruB5VoHRB9sLu3m71Cije6Oy6+Yrqr/VisSjK/oWaH7lyr0jLCSzbtYaAC8Vs63v2AtSqvFgnPSMV8KPglf4QYiEzOpRIwkwNXK0UT9gbhiD03pCoq7I6dSk5CKlKJ2ElP9LFudp5NOIv1yIcYW2n1Lfqs2Q8/d2xD3ztxVF5qrVBEjrVkn5C1p/MBWbKLVHkx/i+848cfBT8UFkVucIi1UCNCwmf/6lpVmsbCGNWUJn0jFKxz7QlTrmeQ/Tb6J2bksyr7Y78+3pnknIEsNoklX3pXz/Skb4CdLrH1tug7wnbDpu9rhc0Go2SsMMNYXtOr1cV5QBd5536vWavTscz3vkH</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_060552</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_06063</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_06063</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_06063</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZZc+I4EP4rlOdxyvjG4ApUsSbZdY4hgYTJ5mVKyA1WYiQiyRz59SsZ8AA5lt0nV7db3V8f+tRnAs1yN+oKAVwSRmurWU5FVGrbRsFpxJAgIqJoBiKSOBp2b64jt25HaHfEqCW9tvErcCZNzw4DsxGAY/pOa2Ii5I7N0HZdv4UBXBeUqRAFJFRIRGXbcG3HNx3HdPx72448PwoaddsJn4zaCLhQvpVJ3Ta2oFaibWRSziPLWi6X9aVXZ3xqubbtWI8310OcwQwZnbNNRmUg3tna43oKGPIc1zGbWWfWgc1ZKqIhmVIkCw7bWOlnsWzLblnKJhVk+s2ozkKa0AkrxRhRRglGOXlDuj43IDOW1rr5lHEis9mnSTi2dmzCCpvY8ek3wzqEdqKjA4RcIFNkyNn6GsAEOFAMtYdB0ja+nda18ug9R1RMGJ+JQ/G/4QG6gJzNITXFLq0ttNMdflCpzhngKKE4LwRZwA89rHOEQWy7Cfh0V7VbDhOyuiZCDehKaHTWPrwjcVONHpmCkP+nQXvN2TgZobyATib6N69PMM1uHi79YDCA/PEWO81i7jfbJYB941JRtXYjHg1lNUSbEynxUM96i6nNVm85oXwcjNbsMom99K+r0ZWXJbh/dz2aWf2s0TpnV41bX4rZqjHP4/gxnDafHp65NeryxkN/+ef43vub2Bc/x/TOe+lnnmcNYHDxhM7Xl4OH3g9gSR5K5i7j0WP27AVj/+dbxgdJ88p1H0TiDx/9m94lt6/H8Utsf6fB99swXDvpXfaSvTbu2lU6e/gPdbs7PyzGz4DlTtRjkPRqF6pLSH5NZlpDUnNSmkZzTT5CApVGR5/S3BEViu5IGqkebmQ7jMPY9bsNzwn9c793bgeeHbRazoXd/aPleDuS2aA4ghgzOiE6lqbczdh8DRDPIgE0BW4uWKGYThhfeOwhiWoJHahLwKiAe6bo2XkOl364XNvTxXLuBNmYywkPXLKYGLUfTPZpn3cnEvghKXsHpDwATOYENHPrwRZqsoVUxXhFi0LmTn2B6hQKxe1c02zk+s3AEmQ2z0FDtWYsLXKoz7N5WRpLbL6uibAotYPz+/K6fZrY8b9dDZRNSrSB0Ln8AaqP8MHr4u8S+Tzhxn7CO/fdIiX6ZqmCSk7wBsnhr99zogekGhKV0a94+MvZ4a7MTz7+/qT1BSjruB5VoHRB9sLu3m71Cije6Oy6+Yrqr/VisSjK/oWaH7lyr0jLCSzbtYaAC8Vs63v2AtSqvFgnPSMV8KPglf4QYiEzOpRIwkwNXK0UT9gbhiD03pCoq7I6dSk5CKlKJ2ElP9LFudp5NOIv1yIcYW2n1Lfqs2Q8/d2xD3ztxVF5qrVBEjrVkn5C1p/MBWbKLVHkx/i+848cfBT8UFkVucIi1UCNCwmf/6lpVmsbCGNWUJn0jFKxz7QlTrmeQ/Tb6J2bksyr7Y78+3pnknIEsNoklX3pXz/Skb4CdLrH1tug7wnbDpu9rhc0Go2SsMMNYXtOr1cV5QBd5536vWavTscz3vkH</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C2078DA35666E05307991F0A31DD</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>FR</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7C2078DA35666E05307991F0A31DD</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C2078DA35666E05307991F0A31DD</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7C24A63174E4DE05305991F0AB913</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7C24A63174E4DE05305991F0AB913</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7BF445C354CEFE05307991F0A6D1E</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7BF445C354CEFE05307991F0A6D1E</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1995-11-19</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00017_Account and User Create with FR 111_BasicChildUserCreate_107_SUCCESS_P0" searchProperties="true" id="06e4b91e-e86a-4797-8e0e-0325a47a966f"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="e6b7ed01-677f-49dd-bfa7-ddd72968f32f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="7c6a3d2c-9906-4d6f-8b12-63821139f383"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","FR");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="6d2d911a-e923-4ea0-912e-9c475dbab40a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="94f6b6bc-afd8-491b-be6e-b81a98582e87"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for BasicChildUserCreate" id="24f8e0fd-0826-46ce-9baa-7ce8f9b8c0d6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("CHILD_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian",tC.getPropertyValue("LegalGuardian"));

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call BasicChildUserCreate" id="9d748f41-25c4-4329-ba85-82d18f47fe7b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VyvfxlndWV6CKJSRUIAlLAslLSshtUGJkYslm+fqRDDhAgGHmydXtVvfpRUd9w9DMt5wqYxByEtDMcuZT5iTashKF1AkQI8yhaAbM4djpVzttx9IMB+2OKJlWo6x82ACQR9m8CjnPVLMoX1BR1rNUu5jPjYsusq2xK0wZi6BFGUeUlxXLMLOqaapmdmAYjp1zTFMzC/l3JfMKIRO+hYlmKFtQS1ZWppzPHV1fLBbawtaCcKJbhmHqo067j6cwQ0rlZpNREiisbO2x5gIG38caDmb6jX5gc+Myp08mFPEohG0s91wsQzdKurBxGZn8UdKz4LaoFyRiHdGAEox8skayPh3g08DNVP1JEBI+nZ1NwjSkYxWWWMVmlv5R9ENoVzo6QBgypLIpMre+euBBCBRD5qXXKit/rutacnQQIsq8IJyxQ/G/4QEagx/MwVXZLq0ttOsdnqhU5Qaw06LYjxiJ4VEO6xxhYNtuAr7eVeY5BI8s24SJAV0yiU7fh3ckbqrRIBNg/P80aK85GyevyI+g8jeyO41pze6/uIGOx9XCqPr3yWPYi4vlBMC+caJIW7sRj4YyHaLNierr9GHR6S5rjzWX2rVaNMy2u94361nxPacvwwKJgqcvCJvru2xvVrofrYxarrtcPZPew6S76A7fKA5qwy+yrj58vse50dvX0O2smqZ+35825yUy9Jr1+M5ur+kr7Q7G1Xt/GNv3bzV3NEefrQfzwe91SmPXbtefO8u7Dnt9buTx43ox1IvDkdF6z31/PpVaw9pnt5yms4f/ULe78/1o/AmY70Q5Bq1Gpim6hPhlMpMa4qpeYurMJfkwDpQrFXlKcocTCbojriN6uJGNQr1Qt4xCsVG7zeXz+VsjZxuFUslsGlXbbDR2JLNBcQSxHlCPyFiScjdjcxkgnjkMqAuhGgeRYDqmXPDYQBxlWrQnLkFAGQwCQc9mvjgZT9dTDrmvFVCLheGC28xkSuYx4E/0Kax6HMJDTrYPOLkHmMwJSOKWc83EYDMuavGN4oj7phYjjUIkqD2ULOtY2WJOZ2Q290Ei1WeBG/mgzafzpDI623wtFWGWaHu3g+S2nc3r+N+uBMLGJdKAyVxqINoIJx4XY5fI+YTz+wnv3Fcjl8iLJerJQ4I3SA5//YyJnI90RkRGH/X+h7nDnZpfffz3Sf0CKP24HmkgNyZ7YXdPt3gEBG1Udt38Rtq3FsVxlPSvIOkxFO4FZ5k53bD0PuBIENtqEHwB1VMv+lWvSAr8KHiqP4QY8Sntc8RhJgYuk4hXrA19YHJtaImbsrx2JzkIKUrHYclP6eq+WHkk4otbEXawtBPqZ/FZBOFP4qd87cUReYqtgRM6kZJ8QVZn5gIHwi0R3BeE+85POTgV/FCZFjnFwsVAjSMO5/9kJKmVFYRxEFHeaiiJYp9oE5x8NQfnx+iXm4TL0+WO/Pt2p5JkBDCIlZCRxL98ox15Behkj6y3Qc/wtXWJrw/RVX6pf2v26nQ845V/AA==</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_06067</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_060618</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_060618</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_060618</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VyvfxlndWV6CKJSRUIAlLAslLSshtUGJkYslm+fqRDDhAgGHmydXtVvfpRUd9w9DMt5wqYxByEtDMcuZT5iTashKF1AkQI8yhaAbM4djpVzttx9IMB+2OKJlWo6x82ACQR9m8CjnPVLMoX1BR1rNUu5jPjYsusq2xK0wZi6BFGUeUlxXLMLOqaapmdmAYjp1zTFMzC/l3JfMKIRO+hYlmKFtQS1ZWppzPHV1fLBbawtaCcKJbhmHqo067j6cwQ0rlZpNREiisbO2x5gIG38caDmb6jX5gc+Myp08mFPEohG0s91wsQzdKurBxGZn8UdKz4LaoFyRiHdGAEox8skayPh3g08DNVP1JEBI+nZ1NwjSkYxWWWMVmlv5R9ENoVzo6QBgypLIpMre+euBBCBRD5qXXKit/rutacnQQIsq8IJyxQ/G/4QEagx/MwVXZLq0ttOsdnqhU5Qaw06LYjxiJ4VEO6xxhYNtuAr7eVeY5BI8s24SJAV0yiU7fh3ckbqrRIBNg/P80aK85GyevyI+g8jeyO41pze6/uIGOx9XCqPr3yWPYi4vlBMC+caJIW7sRj4YyHaLNierr9GHR6S5rjzWX2rVaNMy2u94361nxPacvwwKJgqcvCJvru2xvVrofrYxarrtcPZPew6S76A7fKA5qwy+yrj58vse50dvX0O2smqZ+35825yUy9Jr1+M5ur+kr7Q7G1Xt/GNv3bzV3NEefrQfzwe91SmPXbtefO8u7Dnt9buTx43ox1IvDkdF6z31/PpVaw9pnt5yms4f/ULe78/1o/AmY70Q5Bq1Gpim6hPhlMpMa4qpeYurMJfkwDpQrFXlKcocTCbojriN6uJGNQr1Qt4xCsVG7zeXz+VsjZxuFUslsGlXbbDR2JLNBcQSxHlCPyFiScjdjcxkgnjkMqAuhGgeRYDqmXPDYQBxlWrQnLkFAGQwCQc9mvjgZT9dTDrmvFVCLheGC28xkSuYx4E/0Kax6HMJDTrYPOLkHmMwJSOKWc83EYDMuavGN4oj7phYjjUIkqD2ULOtY2WJOZ2Q290Ei1WeBG/mgzafzpDI623wtFWGWaHu3g+S2nc3r+N+uBMLGJdKAyVxqINoIJx4XY5fI+YTz+wnv3Fcjl8iLJerJQ4I3SA5//YyJnI90RkRGH/X+h7nDnZpfffz3Sf0CKP24HmkgNyZ7YXdPt3gEBG1Udt38Rtq3FsVxlPSvIOkxFO4FZ5k53bD0PuBIENtqEHwB1VMv+lWvSAr8KHiqP4QY8Sntc8RhJgYuk4hXrA19YHJtaImbsrx2JzkIKUrHYclP6eq+WHkk4otbEXawtBPqZ/FZBOFP4qd87cUReYqtgRM6kZJ8QVZn5gIHwi0R3BeE+85POTgV/FCZFjnFwsVAjSMO5/9kJKmVFYRxEFHeaiiJYp9oE5x8NQfnx+iXm4TL0+WO/Pt2p5JkBDCIlZCRxL98ox15Behkj6y3Qc/wtXWJrw/RVX6pf2v26nQ845V/AA==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C2078DB25666E05307991F0A31DD</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>FR</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7C2078DB25666E05307991F0A31DD</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C2078DB25666E05307991F0A31DD</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7C2078DBE5666E05307991F0A31DD</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7C2078DBE5666E05307991F0A31DD</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7CDBE510466CFE05305991F0A5692</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7CDBE510466CFE05305991F0A5692</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>1998-11-18</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1998-11-18</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>07C7C2078DBE5666E05307991F0A31DD</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00018_Account and User Create with NZ 111_SecondFullUserCreate_107_SUCCESS_P0" searchProperties="true" id="2e4c5b2b-4e11-4f89-80d1-228eb2d900b5"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="aa558db8-d844-49a7-af3b-31c0d37630a3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="bb2d20dc-a6ce-4e7b-a290-1af7548fa9d6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","NZ");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="c3b8c68a-d3f2-4d5d-84cb-ce0eba062b4b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="beb0d7b1-f0ca-4402-906d-b031fab78ba5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFullUserCreate" id="5b4ce958-304a-4b39-9ea7-87bc007da4f2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create" id="459a9a89-d448-4a2c-9c3b-13ec6677ddff"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU+o6FP4rTPejU3qllY4wA0XcKF6OsL29OCENEG2TmqRQ+PU7KVAB0cM5T52srnzrW5d8yRkHSWwHLc4RE5iSSp7EhAeFtaFljAQUcMwDAhLEAwGDQeu6H9hVMwCbLVql12lorx4yI8eBkR75jqm7PvR1ULdN3ffGp/7YjupoZElXzjPUI1wAIhqabVqublm65Q5NM3Bqge1V67b/olUeEOMSW7pUTW1NKucNbSpEGhjGfD6vzp0qZRPDNk3LeLruD+AUJUBrnq0yKgKx5tofViMEURzDKqSJcWbs+JxFPBjgCQEiY2gdK/oulmmYdUP6RBxPfmnlXhT1yJgWyxAQSjAEMV4CVZ9rJKY0qrTiCWVYTJNvk7BMBayjHOrQcskvzdildiTQDkPGgc6nwFpj3aMxYohAVPlz32tov47rWrF1yADhY8oSvrv8b3wQmaGYpijS+SatNbXjAQ9UqnmGYNAjMM44nqEbNawpgIivu4ng8VCVO4bGOO9jLgc054qdsU1vb7mqRgdPEBf/p0FbzVmBPIA4Q83n9vPp7+UJzR17MOmcj+M8fnuixOYebRQEtp0LQ9na1XJvKMshWu0A7svA97qdN+dlNFwuqTt6ym5fTmYj4MKx2X9IJ4urR3b1FifQJZcfF1572K1ZzyxcMPuf7GJ+E5J8CVLk5dfXect/CMHkrfs79Pp3rQfLebsnV+Ki9XwSsff+XY9kj8uEXk/9y5jc9Rbh48hM55ft/M+JM594xDRqgwuazmZTv/9MvFYrAbfw/dKBg8vso/feKNPZ4r9r25z5QTZ6Q1BslmoMep1KV3YJiJ/FTFlwpI8L1yBV4sMFIkJrql1KO4JMyh2OAtnD1dr0Qz+02p266Vo1zw3PzZpj+vW61TVb544ZbkRmxWKPYkjJGKtYSnJXY/MzQZgEHJEIMX1GM6l0XPsBsQMEqPTIvTwElHA0pFKec5EsXEFHtFZbxiMzj6IJm48g0io3VNySW9YaC8R2JdnZkeR7BHGKkdJtNdZczjUXshQfYJaJ2KrOQJWgTCo7UyIb2O5pzeA4SWOkiBoJjbIYVdNpWhTG4KuvrQPIC+v9+bA4bN+mtf9vUwHpE2HlwFUubSS7iA7cLdYmke8T9rYT3sC3sgircyXLKRiGKya7vz6nRI1HOSIyo9dw8GpteJfuR2//utP4gZSxX48yUDTDW2E3N7e8A6RqNDfd/ADVj2o2m2VF/3yljkzCS8myaoZpGwMEM6lriyF9R8QoUYyjLpGS+F7w0r5LMRNTMhBAoEQOXKVYHvFqGCCuXg09eVDyY58kOyFl6QTKxSFbGMsXj2L846MIBlD5SfOd/Mwpiz47dgBrK47MUz4aBCYTtVIXyOKbuYBUwmIpfZRtgx8COBR811gWueQi5ECNMoG+/1NRmtbQAIQ0I6LX0QrDts4WPMUiRcGn0xeYQsrLtx3+98edjosRUKIl/Qt8dUUH6giQyZZWr4Puy3W7a7XPu6Hnei2/kOvaSq4d23XLouywa34xf7Vs1Wl/xpt/AQ==</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_060623</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_060633</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_060633</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_060633</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbU+o6FP4rTPejU3qllY4wA0XcKF6OsL29OCENEG2TmqRQ+PU7KVAB0cM5T52srnzrW5d8yRkHSWwHLc4RE5iSSp7EhAeFtaFljAQUcMwDAhLEAwGDQeu6H9hVMwCbLVql12lorx4yI8eBkR75jqm7PvR1ULdN3ffGp/7YjupoZElXzjPUI1wAIhqabVqublm65Q5NM3Bqge1V67b/olUeEOMSW7pUTW1NKucNbSpEGhjGfD6vzp0qZRPDNk3LeLruD+AUJUBrnq0yKgKx5tofViMEURzDKqSJcWbs+JxFPBjgCQEiY2gdK/oulmmYdUP6RBxPfmnlXhT1yJgWyxAQSjAEMV4CVZ9rJKY0qrTiCWVYTJNvk7BMBayjHOrQcskvzdildiTQDkPGgc6nwFpj3aMxYohAVPlz32tov47rWrF1yADhY8oSvrv8b3wQmaGYpijS+SatNbXjAQ9UqnmGYNAjMM44nqEbNawpgIivu4ng8VCVO4bGOO9jLgc054qdsU1vb7mqRgdPEBf/p0FbzVmBPIA4Q83n9vPp7+UJzR17MOmcj+M8fnuixOYebRQEtp0LQ9na1XJvKMshWu0A7svA97qdN+dlNFwuqTt6ym5fTmYj4MKx2X9IJ4urR3b1FifQJZcfF1572K1ZzyxcMPuf7GJ+E5J8CVLk5dfXect/CMHkrfs79Pp3rQfLebsnV+Ki9XwSsff+XY9kj8uEXk/9y5jc9Rbh48hM55ft/M+JM594xDRqgwuazmZTv/9MvFYrAbfw/dKBg8vso/feKNPZ4r9r25z5QTZ6Q1BslmoMep1KV3YJiJ/FTFlwpI8L1yBV4sMFIkJrql1KO4JMyh2OAtnD1dr0Qz+02p266Vo1zw3PzZpj+vW61TVb544ZbkRmxWKPYkjJGKtYSnJXY/MzQZgEHJEIMX1GM6l0XPsBsQMEqPTIvTwElHA0pFKec5EsXEFHtFZbxiMzj6IJm48g0io3VNySW9YaC8R2JdnZkeR7BHGKkdJtNdZczjUXshQfYJaJ2KrOQJWgTCo7UyIb2O5pzeA4SWOkiBoJjbIYVdNpWhTG4KuvrQPIC+v9+bA4bN+mtf9vUwHpE2HlwFUubSS7iA7cLdYmke8T9rYT3sC3sgircyXLKRiGKya7vz6nRI1HOSIyo9dw8GpteJfuR2//utP4gZSxX48yUDTDW2E3N7e8A6RqNDfd/ADVj2o2m2VF/3yljkzCS8myaoZpGwMEM6lriyF9R8QoUYyjLpGS+F7w0r5LMRNTMhBAoEQOXKVYHvFqGCCuXg09eVDyY58kOyFl6QTKxSFbGMsXj2L846MIBlD5SfOd/Mwpiz47dgBrK47MUz4aBCYTtVIXyOKbuYBUwmIpfZRtgx8COBR811gWueQi5ECNMoG+/1NRmtbQAIQ0I6LX0QrDts4WPMUiRcGn0xeYQsrLtx3+98edjosRUKIl/Qt8dUUH6giQyZZWr4Puy3W7a7XPu6Hnei2/kOvaSq4d23XLouywa34xf7Vs1Wl/xpt/AQ==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF1BEFC646A7E05305991F0A3244</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>NZ</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7BF1BEFC646A7E05305991F0A3244</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF1BEFC646A7E05305991F0A3244</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7C1BD9041564CE05307991F0AE30C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7C1BD9041564CE05307991F0AE30C</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7C2F1FE604CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7C2F1FE604CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>1998-11-18</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1995-11-19</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00019_Account and User Create with NZ 111_StandardYouthUserCreate_107_SUCCESS_P0" searchProperties="true" id="2d6855e2-397c-43ac-93f8-cabec82f1f9e"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="493080b6-7286-462c-8d51-8815d9638d5d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="77efa6e3-b4e2-4a0f-99c6-519d884471ae"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","NZ");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="5a0e55ae-d3c0-4863-84e6-43c0f8fcb87e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="22376e92-d1e1-4f99-b16d-78b9dc673723"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUserCreate" id="330da1f9-8374-4501-bc62-0efbda711f38"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StandardYouthUserCreate" id="dbcbdb88-af83-41b1-9031-6c4f44eb3e71"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMr5gcHAFqhgIs84kJAGWmZ2XKUVugxJbciTZEL5+JAMOkMuy++Tqdqv79EVHfSFQmrhBTwjgkjBaW6UJFUGp7Rg5pwFDgoiAohREIHEw6d1cB27dDtDuiFELBx3jN/jgYbvVMKOoDab3gCPzvIUc02k2W3Gr8RA7gJWpEDmEVEhEZcdwbcczHWXjTW07aDQDz617XvuXUZsBF8q3MqnbxhbUSnSMhZRZYFnL5bK+bNQZn1uubTvWz5vrCV5AiozuxSajMhDvbu1xPQIMSYLrmKXWhXVgcxGJYELmFMmcwzZW9FEs27LblrKJBJl/MaqzEIU0ZqXYR5RRglFC1kjX5wbkgkW1XjJnnMhF+mESjq0dm7DCJnY8+sWwDqGd6OgAIRfIFAvkbH2NIQYOFEPt73HYMb6c1rXy6JQjKmLGU3Eo/jc8QAtIWAaRKXZpbaGd7vCdSnUvAAchxUkuSAEjPawZwiC23QR8uqvaHYeYrK6JUAO6EhqdtQ/vSNxUY0DmIOT/adBeczZOZijJodtPH2/59ZP785YR34oWy/ObJC2iIaCwUwLYNy4VVWs34tFQVkO0ORHF4TcB4Rpa49k363aU9P4JZcSHs0krPO9/vw97fZKu2tP186zJ1jd8HN3ittO3r+6oN2JXJGVn8Vkys742f5w59ouM3L/cQT9Hi1nrm58UZ9l08JRe3T9LZ/1rTR7adDG7GiwupVvcZ4+PqytvxId+8mPcbrh5MWreXceLLIwzeBjci2L0k1+OrmPKf5Dv6/tOlc4e/kPd7s5P8odHwHIn6jEIB7Wh6hKSn5OZ1pDIjEvTINPkIyRQaXT1Kc0dQa7ojkSB6uFGtv2+/3XoDPq273mttn9pNxt2s912hnbPHjbcHclsUBxB7DMaEx1LU+5mbD4HiNNAAI2AmwXLFdMJ4xOPAyRRLaRjdQkYFTBlip6d88x3MBP2y+MKQxu158vIeXp+EkZtxOQtveW9WAI/5OTGASePAZOMgCZuPddCDbaQqhbPqMhl4tQLVKeQK2rnmmUD1ztvWoKkWQIaqZWyKE+gni2ysjKW2HxdE2FRaseX0/K2fZjX8b9dCZRNRLSB0Ll8BdVGeOdxaewS+Tjh1n7CO/e9PCL6Yql6Sk7wBsnhr9cx0fNRzYjK6Hd/8tvZ4a7MTz7+9qT1CSjruB5VoKgge2F3T7d6BBRtdHfdfEb153peFHnZP1/TI1fuFWc5Tct2rQngXBHby5Q9AbUqL9ZJr0gF/Ch4pT+EmMsFnUgkIVUDVyvFE9aGCQi9NoTqpqxO3UkOQqrSSVjJ93T9RK08GvGnWxEOsLZT6jv1WTIevXbsHV97cVSeamuQhM61pF+Qlw/mAjPllijuY3zf+XsO3gt+qKyKXGGRaqAecgkf/6lpUusYCGOWUxkOjFKxT7QlTvmSQfBq9MZNyeXVckf+fbszSTkCGNRKKEjpX7/Rgb4CdL5H1tugx3zdd23//NLxm61Wq+Rrf8PXDWcwqIpygK77Rv1Ws1en4xnv/gE=</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_060638</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_060650</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_060650</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_060650</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMr5gcHAFqhgIs84kJAGWmZ2XKUVugxJbciTZEL5+JAMOkMuy++Tqdqv79EVHfSFQmrhBTwjgkjBaW6UJFUGp7Rg5pwFDgoiAohREIHEw6d1cB27dDtDuiFELBx3jN/jgYbvVMKOoDab3gCPzvIUc02k2W3Gr8RA7gJWpEDmEVEhEZcdwbcczHWXjTW07aDQDz617XvuXUZsBF8q3MqnbxhbUSnSMhZRZYFnL5bK+bNQZn1uubTvWz5vrCV5AiozuxSajMhDvbu1xPQIMSYLrmKXWhXVgcxGJYELmFMmcwzZW9FEs27LblrKJBJl/MaqzEIU0ZqXYR5RRglFC1kjX5wbkgkW1XjJnnMhF+mESjq0dm7DCJnY8+sWwDqGd6OgAIRfIFAvkbH2NIQYOFEPt73HYMb6c1rXy6JQjKmLGU3Eo/jc8QAtIWAaRKXZpbaGd7vCdSnUvAAchxUkuSAEjPawZwiC23QR8uqvaHYeYrK6JUAO6EhqdtQ/vSNxUY0DmIOT/adBeczZOZijJodtPH2/59ZP785YR34oWy/ObJC2iIaCwUwLYNy4VVWs34tFQVkO0ORHF4TcB4Rpa49k363aU9P4JZcSHs0krPO9/vw97fZKu2tP186zJ1jd8HN3ittO3r+6oN2JXJGVn8Vkys742f5w59ouM3L/cQT9Hi1nrm58UZ9l08JRe3T9LZ/1rTR7adDG7GiwupVvcZ4+PqytvxId+8mPcbrh5MWreXceLLIwzeBjci2L0k1+OrmPKf5Dv6/tOlc4e/kPd7s5P8odHwHIn6jEIB7Wh6hKSn5OZ1pDIjEvTINPkIyRQaXT1Kc0dQa7ojkSB6uFGtv2+/3XoDPq273mttn9pNxt2s912hnbPHjbcHclsUBxB7DMaEx1LU+5mbD4HiNNAAI2AmwXLFdMJ4xOPAyRRLaRjdQkYFTBlip6d88x3MBP2y+MKQxu158vIeXp+EkZtxOQtveW9WAI/5OTGASePAZOMgCZuPddCDbaQqhbPqMhl4tQLVKeQK2rnmmUD1ztvWoKkWQIaqZWyKE+gni2ysjKW2HxdE2FRaseX0/K2fZjX8b9dCZRNRLSB0Ll8BdVGeOdxaewS+Tjh1n7CO/e9PCL6Yql6Sk7wBsnhr9cx0fNRzYjK6Hd/8tvZ4a7MTz7+9qT1CSjruB5VoKgge2F3T7d6BBRtdHfdfEb153peFHnZP1/TI1fuFWc5Tct2rQngXBHby5Q9AbUqL9ZJr0gF/Ch4pT+EmMsFnUgkIVUDVyvFE9aGCQi9NoTqpqxO3UkOQqrSSVjJ93T9RK08GvGnWxEOsLZT6jv1WTIevXbsHV97cVSeamuQhM61pF+Qlw/mAjPllijuY3zf+XsO3gt+qKyKXGGRaqAecgkf/6lpUusYCGOWUxkOjFKxT7QlTvmSQfBq9MZNyeXVckf+fbszSTkCGNRKKEjpX7/Rgb4CdL5H1tugx3zdd23//NLxm61Wq+Rrf8PXDWcwqIpygK77Rv1Ws1en4xnv/gE=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C2078E175666E05307991F0A31DD</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>NZ</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7C2078E175666E05307991F0A31DD</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C2078E175666E05307991F0A31DD</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7BF1DC0744697E05305991F0A0F32</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7BF1DC0744697E05305991F0A0F32</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7C2F1FE764CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7C2F1FE764CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>1998-11-18</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1997-11-18</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00020_Account and User Create with NZ 111_BasicChildUserCreate_107_SUCCESS_P0" searchProperties="true" id="d39fbb7b-43ec-4072-830d-4bf7bdb44e74"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="f03261c6-c123-461b-a3fb-0e1fc8408a2f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="bdac1842-64be-4223-878c-80f84291ba1a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","NZ");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="25e2a51b-2953-4b18-8c76-e1c2ea298d5b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="442d2974-f93b-414d-86c7-7f1d2212c22a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for BasicChildUserCreate" id="3ee8731f-8b85-4a26-b702-9891fdc41d3e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("CHILD_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian",tC.getPropertyValue("LegalGuardian"));

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call BasicChildUserCreate" id="971405fe-83fc-4636-a42e-eb48dca31ba0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMrbMzbgCVYTLDjMJJJikJnmZUuQ2KLElx5LBma8fyYAD5LLsPrm63eo+fdFRnwscR47XEwJSSTmr5HHEhFdoO0aWMo9jQYXHcAzCk8Tze1eXnlO1Pbw7YlTGg47xO3zE7TBoNczHAB7Net12TbfmNk3kEIRqgOot21GmQmQwZkJiJjuGY6O6iZCJ6nPb9moNr+FW6033wajcQSqUb2VStY0tqFx0jKWUiWdZ6/W6uq5VebqwHNtG1q+rS58sIcZG93yTUREo7W7tSTUAAlFEqoTH1rl1YHMeCM+nC4ZllsI2VvBZLNuy25ayCQRdfDPKsxCMWcgLsY8ZZ5TgiP7Buj5XIJc8qPSiBU+pXMafJoFs7diEnJgE1dk3wzqEdqKjA4SpwKZYYrT1NYMQUmAEKrezccf4dlrXiqPzFDMR8jQWh+J/wwNsBRFPIDDFLq0ttNMdflCp7jkQb8xIlAm6goke1gQTENtuAjndVeU6hZDml1SoAc2FRmftwzsSN9UY0AUI+X8atNecjZM7HGXQ9X85a2jFLRT3HPkwtu+iEPHQ8QcXi04BYN+4UJSt3YhHQ1kO0ebEclXLRrfIvWTPz7PFBPJ+NJqEAxC3rTpC3/F0eo+sp7P86vtlfn9TA8e6uwlbNz+fsmniJz+m/vKhNwPZHL007rN7HwavE+7gef5P+Pq9sTr703z8E0rfnvbXs4vZaCLZZN6+fr4aXP/80XwIF6Oef/dy23+YrZ/Sn7lIxvhsEtRWSLo3rj9MXba4G9/eP48uOXvulOns4T/U7e68nz0+AZE7UY/BeFAZqS5h+TWZaQ0NzLAw9RJNPkICk0ZXn9Lc4WWK7mjgqR5uZLvVb10Me8O2UxvWm+3R0G7U7Ea7jUZ2r+eOnB3JbFAcQexzFlIdS1PuZmy+BkhiTwALIDVXPFNMJ4wvPA6wxJUxm6lLwJmAOVf0zJ2XPHFZsiDBOuDJKookBA5qGZUJl1M2TXuhhPSQkmsHlDwDQhMKmrf1WAs110KqUrzgVSYjVF3hKoNMMXuqSdZz6m7DEjROItBArZgHWQTVZJkUhbHE5uuYmIhCOxvOi8v2aVrH/3YVUDYB1QZC53IBqovwwdtS3yXyecLN/YR37ntZQPW9UuWUKSUbJIe/3qZEj0c5Iiqj333/N9rhLs1PPv7+pPUFKOu4HmWgYEX3wu5ebvUGKNbo7rr5gqsv1Wy1yor+tTQ7psq9oizUsGzH8oFkitde5/wZmFV6sU56RErgR8FL/SHETC6ZL7GEWA1cpRBP2Bp8EHprGKuLkp+6khyEVKWTkMuPdP1IbTwa8ZdLEfGItlPqa/VZ8zR469gHvvbiqDzV0iApW2hJPyCvn8wF4cotVdTH033nHzn4KPihsixyiUWqgXrMJHz+p6I5rWNgQnjG5HhgFIp9ni1wytcEvDejd24KKi93O/rvy51JixEgoDZCQQv/+on29BVgiz2u3gY9puu+Y7fcoXPRaDabBV23NnRdQ4NBWZQDdN136veavTodz3j3Lw==</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_060654</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_06075</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_06075</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_06075</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMrbMzbgCVYTLDjMJJJikJnmZUuQ2KLElx5LBma8fyYAD5LLsPrm63eo+fdFRnwscR47XEwJSSTmr5HHEhFdoO0aWMo9jQYXHcAzCk8Tze1eXnlO1Pbw7YlTGg47xO3zE7TBoNczHAB7Net12TbfmNk3kEIRqgOot21GmQmQwZkJiJjuGY6O6iZCJ6nPb9moNr+FW6033wajcQSqUb2VStY0tqFx0jKWUiWdZ6/W6uq5VebqwHNtG1q+rS58sIcZG93yTUREo7W7tSTUAAlFEqoTH1rl1YHMeCM+nC4ZllsI2VvBZLNuy25ayCQRdfDPKsxCMWcgLsY8ZZ5TgiP7Buj5XIJc8qPSiBU+pXMafJoFs7diEnJgE1dk3wzqEdqKjA4SpwKZYYrT1NYMQUmAEKrezccf4dlrXiqPzFDMR8jQWh+J/wwNsBRFPIDDFLq0ttNMdflCp7jkQb8xIlAm6goke1gQTENtuAjndVeU6hZDml1SoAc2FRmftwzsSN9UY0AUI+X8atNecjZM7HGXQ9X85a2jFLRT3HPkwtu+iEPHQ8QcXi04BYN+4UJSt3YhHQ1kO0ebEclXLRrfIvWTPz7PFBPJ+NJqEAxC3rTpC3/F0eo+sp7P86vtlfn9TA8e6uwlbNz+fsmniJz+m/vKhNwPZHL007rN7HwavE+7gef5P+Pq9sTr703z8E0rfnvbXs4vZaCLZZN6+fr4aXP/80XwIF6Oef/dy23+YrZ/Sn7lIxvhsEtRWSLo3rj9MXba4G9/eP48uOXvulOns4T/U7e68nz0+AZE7UY/BeFAZqS5h+TWZaQ0NzLAw9RJNPkICk0ZXn9Lc4WWK7mjgqR5uZLvVb10Me8O2UxvWm+3R0G7U7Ea7jUZ2r+eOnB3JbFAcQexzFlIdS1PuZmy+BkhiTwALIDVXPFNMJ4wvPA6wxJUxm6lLwJmAOVf0zJ2XPHFZsiDBOuDJKookBA5qGZUJl1M2TXuhhPSQkmsHlDwDQhMKmrf1WAs110KqUrzgVSYjVF3hKoNMMXuqSdZz6m7DEjROItBArZgHWQTVZJkUhbHE5uuYmIhCOxvOi8v2aVrH/3YVUDYB1QZC53IBqovwwdtS3yXyecLN/YR37ntZQPW9UuWUKSUbJIe/3qZEj0c5Iiqj333/N9rhLs1PPv7+pPUFKOu4HmWgYEX3wu5ebvUGKNbo7rr5gqsv1Wy1yor+tTQ7psq9oizUsGzH8oFkitde5/wZmFV6sU56RErgR8FL/SHETC6ZL7GEWA1cpRBP2Bp8EHprGKuLkp+6khyEVKWTkMuPdP1IbTwa8ZdLEfGItlPqa/VZ8zR469gHvvbiqDzV0iApW2hJPyCvn8wF4cotVdTH033nHzn4KPihsixyiUWqgXrMJHz+p6I5rWNgQnjG5HhgFIp9ni1wytcEvDejd24KKi93O/rvy51JixEgoDZCQQv/+on29BVgiz2u3gY9puu+Y7fcoXPRaDabBV23NnRdQ4NBWZQDdN136veavTodz3j3Lw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C2078E2B5666E05307991F0A31DD</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>NZ</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7C2078E2B5666E05307991F0A31DD</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C2078E2B5666E05307991F0A31DD</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7BEAE923E469FE05305991F0AA8F2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7BEAE923E469FE05305991F0AA8F2</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7C2F1FE8C4CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7C2F1FE8C4CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>07C7BEAE923E469FE05305991F0AA8F2</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00021_Account and User Create with IE 111_SecondFullUserCreate_107_SUCCESS_P0" searchProperties="true" id="82ae64bd-b504-437c-b0bb-a2e009f72688"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="c0252cad-94f2-4f2d-a5f6-16db42fafd9e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="4fe88d23-6ba7-4441-a07b-648bcfe36a9b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","IE");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="c94b49e3-a52a-4edf-8835-af4ba998dafd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="5c10f68d-f2f0-4e23-a568-a1a86bcafd86"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFullUserCreate" id="87170a78-5483-4eca-8101-72a316a6934b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create" id="f964038f-90e6-4def-b7df-2e7f677d04ba"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VyvN4y1g2S4IrUMUamIRAgCQTXlJCbkBgyyDJLPn6kQw4QJbLvU+ubre6Ty866huBA99xy0IAlzRkqU3gM+HG2qIRceaGWFDhMhyAcCVx++X2veukkYsPR4xUq1Y03rJ5yOFsxjNtB8DMegVkYs9DpoOzoxxGXuaKjJWpEBG0mJCYyaLhIDtnIsdEuYGN3EzetfPpguMMjdQzcKF8K5M0MvagNqJoTKVcuJa1Xq/T60w65BPLQci2/rTv+2QKATZKN7uM4kC8tLcnaQ8I+D5JkzCwbqwTmxtPuH06YVhGHPaxvO9iIQsVLGXjCTr5ZSRnwWuxcRiLVcxCRgn26TvW9WmDnIZequxPQk7lNPg2CRtpxyZsiEnsLPtlWKfQLnR0gpALbIoptve+ejAGDoxA6qnXKhq/LutafHTAMRPjkAfiVPxveICtwA8X4JnikNYe2uUOv6hU6QaI22LEjwRdwYMe1gUmIPbdBHK5q1SXw5hu7qlQA7oRGp11DO9M3FWjRicg5P9p0FFzdk6esR9BqbO2l9Hdw2xYbTyPHudwu314eOF1Vuk8FWMAx8axImntTjwbymSIdifqQ9yi2+GrP1jVB0GuQWeV+/bcyt6Nek/D7vXL5GX69NxceAN1253fzUqzwkZOc+l1/ajdmqBOlw6pXFrTBt8UptX1uHC13HpkPX3507l9JnO2yv6zvp3Nx48Qic6k+dITtg3r1/IcrtfNW+hF7caiW7/bOuW5xX8/vrwOutxrRsP646ywsjG3q6wwsu+ecsNyMUnnCP+p7nDn+9FoBkQeRD0GrVqqobqE5c9kpjXUM8exqbvQ5CMkMGmU9CnNHW6k6I56rurhTkb1XK5WRnmnUkH562ytjnIZlCsU7AYqNyqNzIFkdijOIFZDNqY6lqbc3dj8DJAErgDmATdXYaSYThg/eKxhiVMt1lOXIGQCBqGiZ3tG0WZB3t9X48IEB3kYX82RPZ1hI/UQyg7r8PJYAj/l5MwJJ/eA0AUFTdx6roUabCFVLZZ4FUnfTq9wmql+S8w1y7pO9jpnCRosfNBIrSD0Ih/Si+kirowldl/HxETE2l59EN+2b/M6/3cogbLxqDYQOpcKqDbCF48LOiTyfcL544QP7suRR/XFUvWUnJIdktNfH2Oi5yOZEZXRW7X/Zh9wJ+YXH/980voBlHVejySQt6JHYQ9Pt3oEFG2UDt1c4vQyHa1WUdy/K02PXLm3dIUs5Fh9IJEitu0gnAOzEi/WRa9IAvwseKI/hRjJKetLLCFQA5eKxQvWhj4IvTa01E3ZXLqTnIRUpZOwkV/pqr5aeTTiH7ci4hJtp9Rd9VmH3Pvo2Be+juKoPNXWICmbaEm/INtv5oKEyi1V3BfyY+dfOfgq+KkyKXKCRaqBGkUSvv+T0qRWNDAhYcRkq2bEimOijXHK7QLcD6NPbmIuT5Y7+u/bnUnjESCgVkJBY//6jXb1FWCTI7LeB/3E140syhcqlUymvuPrqx1fO5VGOSnKCbrSJ/VnzVGdzme89Bc=</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20150205_040822</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20150205_040839</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20150205_040839</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20150205_040839</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VyvN4y1g2S4IrUMUamIRAgCQTXlJCbkBgyyDJLPn6kQw4QJbLvU+ubre6Ty866huBA99xy0IAlzRkqU3gM+HG2qIRceaGWFDhMhyAcCVx++X2veukkYsPR4xUq1Y03rJ5yOFsxjNtB8DMegVkYs9DpoOzoxxGXuaKjJWpEBG0mJCYyaLhIDtnIsdEuYGN3EzetfPpguMMjdQzcKF8K5M0MvagNqJoTKVcuJa1Xq/T60w65BPLQci2/rTv+2QKATZKN7uM4kC8tLcnaQ8I+D5JkzCwbqwTmxtPuH06YVhGHPaxvO9iIQsVLGXjCTr5ZSRnwWuxcRiLVcxCRgn26TvW9WmDnIZequxPQk7lNPg2CRtpxyZsiEnsLPtlWKfQLnR0gpALbIoptve+ejAGDoxA6qnXKhq/LutafHTAMRPjkAfiVPxveICtwA8X4JnikNYe2uUOv6hU6QaI22LEjwRdwYMe1gUmIPbdBHK5q1SXw5hu7qlQA7oRGp11DO9M3FWjRicg5P9p0FFzdk6esR9BqbO2l9Hdw2xYbTyPHudwu314eOF1Vuk8FWMAx8axImntTjwbymSIdifqQ9yi2+GrP1jVB0GuQWeV+/bcyt6Nek/D7vXL5GX69NxceAN1253fzUqzwkZOc+l1/ajdmqBOlw6pXFrTBt8UptX1uHC13HpkPX3507l9JnO2yv6zvp3Nx48Qic6k+dITtg3r1/IcrtfNW+hF7caiW7/bOuW5xX8/vrwOutxrRsP646ywsjG3q6wwsu+ecsNyMUnnCP+p7nDn+9FoBkQeRD0GrVqqobqE5c9kpjXUM8exqbvQ5CMkMGmU9CnNHW6k6I56rurhTkb1XK5WRnmnUkH562ytjnIZlCsU7AYqNyqNzIFkdijOIFZDNqY6lqbc3dj8DJAErgDmATdXYaSYThg/eKxhiVMt1lOXIGQCBqGiZ3tG0WZB3t9X48IEB3kYX82RPZ1hI/UQyg7r8PJYAj/l5MwJJ/eA0AUFTdx6roUabCFVLZZ4FUnfTq9wmql+S8w1y7pO9jpnCRosfNBIrSD0Ih/Si+kirowldl/HxETE2l59EN+2b/M6/3cogbLxqDYQOpcKqDbCF48LOiTyfcL544QP7suRR/XFUvWUnJIdktNfH2Oi5yOZEZXRW7X/Zh9wJ+YXH/980voBlHVejySQt6JHYQ9Pt3oEFG2UDt1c4vQyHa1WUdy/K02PXLm3dIUs5Fh9IJEitu0gnAOzEi/WRa9IAvwseKI/hRjJKetLLCFQA5eKxQvWhj4IvTa01E3ZXLqTnIRUpZOwkV/pqr5aeTTiH7ci4hJtp9Rd9VmH3Pvo2Be+juKoPNXWICmbaEm/INtv5oKEyi1V3BfyY+dfOfgq+KkyKXKCRaqBGkUSvv+T0qRWNDAhYcRkq2bEimOijXHK7QLcD6NPbmIuT5Y7+u/bnUnjESCgVkJBY//6jXb1FWCTI7LeB/3E140syhcqlUymvuPrqx1fO5VGOSnKCbrSJ/VnzVGdzme89Bc=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A0E55DF4069BB33EDE05307991F0A2BFA</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>IE</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>0E55DF4069BB33EDE05307991F0A2BFA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A0E55DF4069BB33EDE05307991F0A2BFA</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>0E55DA062BB0684DE05305991F0AFBF3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A0E55DA062BB0684DE05305991F0AFBF3</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0E55B52024FE36C5E05307991F0AFD81</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0E55B52024FE36C5E05307991F0AFD81</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1996-02-10</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2003-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1996-02-10</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00022_Account and User Create with IE 111_StandardYouthUserCreate_107_SUCCESS_P0" searchProperties="true" id="c7048e34-6996-4098-ba49-9af4f719acc7"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="11f82a6d-a5f7-4202-8028-845656277b31"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="c031a36c-6996-4491-b23c-d20528e284ed"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","IE");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="085832b9-b600-4a6e-8c74-9c3aa06a0190"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="946b40ef-b3ae-4684-a7e2-864366d8a6f8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUserCreate" id="6c332d25-826e-453b-8ebc-ccc7e754ac91"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StandardYouthUserCreate" id="4ed16c94-6347-4064-82c6-e2dbc788c88d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VyvM4ZSwbg8EVqCImTpgJWTBZZl5SQhagxEjEkpfw9Vcy4GCyXO59cnW71X160VGfcLiMLLfPOY4FYbSWLyPK3ULb1ZKYugxywl0Kl5i7ArlBf3TpWnXgwt0RrTYcdLUn1GpjE0BTt6ZWQ7c7yNZhC9q67cBpx8J2s+U40pTzBA8pF5CKrmYB09ZNUzftCQBuo+VanXrHMv9qtXscc+lbmtSBtgWV8662EGLlGkaWZfWsUWfx3LAAMI3H0WWAFngJtd7JJqMiUNzb2qN6iBGOIlRHbGmcGBWbk5C7AZlTKJIYb2OFX8UCBugY0ibkZP5DK8/icEhnrBA9SBklCEZkDVV9RlgsWFjrR3MWE7FYfpmECZRjHedIR6ZNf2hGFdqRjioIYw51voDm1tcYz3CMKcK1u/Gwq/04rmvF0UkMKZ+xeMmr4n/Dg2mKI7bCoc53aW2hHe/wk0r1TjByhxRFCScpvlLDuoII8203MTreVe0mxjOSXxIuBzTnCp2xD+9A3FRjQOaYi//ToL3mbJzcwyjBvfzXemSNeTTMjIvgzWuH/jWEj7OraP7SLQDsGxeKsrUb8WAoyyHanLjO/D9z63FE4K/zK47w5ehPOomNxrn30vJeLy6cILRJ5geLYTAXsJ/7z+0puI2t9no9Dh3vYoxAet94CPxhgjKfRz/HDmj+XWeALdYDkzmI/s4fFs7l+aRz57Hp7GWes9t4esonoO/8PP8tziYD3zHOvClu+6Nbkj/c3tDRwJyBh8e7hcEYGCV8fpvxl7Numc4e/qpud+eDZPqMkdiJagyGg5ovuwTF92SmNCTUZ4Wpu1LkwwWmQuupU4o73ETSHQld2cONDBzPOfXNgQe8jt3qOGeg2QDNTsf0QR/4DWtHMhsUBxA9RmdExVKUuxmb7wGipcsxDXGspyyRTMe1bzwOoIC1IR3LS8AoxxMm6Tld550scsALfUvNJFnZ2XMyW6evC612xcQ1vY77M4HjKic3Kpw8xoisCFbEreaay8HmQtbiFaaJiMx6CusUJ5LaY8WyrmW3mwYny1WEFVJjycIkwvXVYlVUxuCbr6VDxAvt+GxS3LYv8zr8tyuBtAmJMuAql1Ms24g/eVzMXSJfJ9zaT3jnvp+ERF0sWU8RE7RBUv31PiZqPsoZkRk9ecGTucNdmh99/ONJ4xtQxmE9ykBhSvbC7p5u+QhI2ujtuvkK66/1JE2Ton+OosdYupecZTYNYBkBRokktrcJe8HUKL0YR70iJfCD4KW+CjERCxoIKPBSDlytEI9YGwLM1dowlDclP3YnqYSUpRM4F5/pvEiuPArxt1sRcpGyk+ob+clYHL537BNfe3FknnJrEITOlaRekLcv5gIx6ZZI7mPxvvPPHHwWvKosi1xiEXKgponAX/+pKVLrahAhllAxHGiFYp9oC5zibYXdd6MPbgouL5c78u/bnU6KEUBYroScFP7VG+2qK0Dne2S9DXrI157VbHmg1bR90KjwdcMq+bqKrvdB/VGzV6fDGe/9Aw==</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_060725</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_060737</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_060737</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_060737</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VyvM4ZSwbg8EVqCImTpgJWTBZZl5SQhagxEjEkpfw9Vcy4GCyXO59cnW71X160VGfcLiMLLfPOY4FYbSWLyPK3ULb1ZKYugxywl0Kl5i7ArlBf3TpWnXgwt0RrTYcdLUn1GpjE0BTt6ZWQ7c7yNZhC9q67cBpx8J2s+U40pTzBA8pF5CKrmYB09ZNUzftCQBuo+VanXrHMv9qtXscc+lbmtSBtgWV8662EGLlGkaWZfWsUWfx3LAAMI3H0WWAFngJtd7JJqMiUNzb2qN6iBGOIlRHbGmcGBWbk5C7AZlTKJIYb2OFX8UCBugY0ibkZP5DK8/icEhnrBA9SBklCEZkDVV9RlgsWFjrR3MWE7FYfpmECZRjHedIR6ZNf2hGFdqRjioIYw51voDm1tcYz3CMKcK1u/Gwq/04rmvF0UkMKZ+xeMmr4n/Dg2mKI7bCoc53aW2hHe/wk0r1TjByhxRFCScpvlLDuoII8203MTreVe0mxjOSXxIuBzTnCp2xD+9A3FRjQOaYi//ToL3mbJzcwyjBvfzXemSNeTTMjIvgzWuH/jWEj7OraP7SLQDsGxeKsrUb8WAoyyHanLjO/D9z63FE4K/zK47w5ehPOomNxrn30vJeLy6cILRJ5geLYTAXsJ/7z+0puI2t9no9Dh3vYoxAet94CPxhgjKfRz/HDmj+XWeALdYDkzmI/s4fFs7l+aRz57Hp7GWes9t4esonoO/8PP8tziYD3zHOvClu+6Nbkj/c3tDRwJyBh8e7hcEYGCV8fpvxl7Numc4e/qpud+eDZPqMkdiJagyGg5ovuwTF92SmNCTUZ4Wpu1LkwwWmQuupU4o73ETSHQld2cONDBzPOfXNgQe8jt3qOGeg2QDNTsf0QR/4DWtHMhsUBxA9RmdExVKUuxmb7wGipcsxDXGspyyRTMe1bzwOoIC1IR3LS8AoxxMm6Tld550scsALfUvNJFnZ2XMyW6evC612xcQ1vY77M4HjKic3Kpw8xoisCFbEreaay8HmQtbiFaaJiMx6CusUJ5LaY8WyrmW3mwYny1WEFVJjycIkwvXVYlVUxuCbr6VDxAvt+GxS3LYv8zr8tyuBtAmJMuAql1Ms24g/eVzMXSJfJ9zaT3jnvp+ERF0sWU8RE7RBUv31PiZqPsoZkRk9ecGTucNdmh99/ONJ4xtQxmE9ykBhSvbC7p5u+QhI2ujtuvkK66/1JE2Ton+OosdYupecZTYNYBkBRokktrcJe8HUKL0YR70iJfCD4KW+CjERCxoIKPBSDlytEI9YGwLM1dowlDclP3YnqYSUpRM4F5/pvEiuPArxt1sRcpGyk+ob+clYHL537BNfe3FknnJrEITOlaRekLcv5gIx6ZZI7mPxvvPPHHwWvKosi1xiEXKgponAX/+pKVLrahAhllAxHGiFYp9oC5zibYXdd6MPbgouL5c78u/bnU6KEUBYroScFP7VG+2qK0Dne2S9DXrI157VbHmg1bR90KjwdcMq+bqKrvdB/VGzV6fDGe/9Aw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C256C0654F03E05305991F0A0322</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>IE</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7C256C0654F03E05305991F0A0322</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C256C0654F03E05305991F0A0322</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7BF1DC0C94697E05305991F0A0F32</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7BF1DC0C94697E05305991F0A0F32</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7BF01E2DA5078E05307991F0AFF96</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7BF01E2DA5078E05307991F0AFF96</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1997-11-18</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00023_Account and User Create with IE 111_BasicChildUserCreate_107_SUCCESS_P0" searchProperties="true" id="f072727b-36b4-4b39-83c1-4e4bee389578"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="44914c46-b4db-4272-9c03-7e3acbd5b9d7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="7fb9a2c1-41d9-4ea4-be35-aadee526f486"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","IE");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="96a5c17c-be6e-4c34-a427-adddac896c10"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="74ce8199-0e87-4418-9f08-a92cd3214482"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for BasicChildUserCreate" id="1eaa0cd3-aa41-474e-b981-881ba2f3efc3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("CHILD_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian",tC.getPropertyValue("LegalGuardian"));

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call BasicChildUserCreate" id="a9afcfd4-f2de-486d-a524-f6a83014a916"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynlMGdnGhOAKVHGdYXIHkiG8pITUgBJbBks2kK9fyYADhGTZLR4otVunT190pCuBA9/xakJAJFnIc8vA58JLrRUjjrgXYsGEx3EAwpPE69Vubzwnb3l4u8XIdZoV47VUAvUbW2bhAqjplkeuianrmOOydUnK9iWlo5FyFSKGDhcSc1kxHMt2Tds2bbdvWV7hwnOL+UvXHhq5Z4iEwlYuecvYkFqKijGVcuYhtFgs8otCPowmyLEsGw1ub3pkCgE2qlfrjNJAUXXjT/IUCPg+yZMwQFdoz+eKCq/HJhzLOIJNLPpdLAtZZaR8qGCTMyPbC7TDx2G6bGAeckawzz6wrs8tyGlIczV/EkZMToNvk7AtDWzCkpjEdvmZgfapnQi0xzAS2BRTbG+wujCGCDiB3FO3UzHOTutaurUfYS7GYRSI/eV/4wM8AT+cqVhim9aG2umARypVvQLidTjxY8ESuNPDOsMExKabQE6Hyj1EMGbLGybUgC6FZod26R0s19VosgkI+X8atNOcNcgz9mOo/h24A9alz8OEKqhnEZGiiAd3gOlTJSWw65wastaulwdDmQ3Resdw1R6VBoNx7+LmjYbW9HKxXNYIovJ6GN0mD/Y8efx4ntrOQ301urVm9rU1f+87aDVvWqN+sdUvx/d3b6P3/t1g/NdyyX3y51fsPpKAPrUm0dvL0/A9kCVouS/NDmn9Pqd19DJpDM8fG63SbLQaThePiL3d29do/uel1jivvz8+/Co/1KHdHBLMxje/O4M/Iumip6RTydLZ4b9v2575Xjx6AyK3Sz0GnWaurbqE5c9ipi2MmuPU1Ztp8RESuDSqepfWDi9Wcseop3q4XlulRqnetpsNq1V3L8qlllUsWMVy2W5bNatdcLYis2ZxQLER8jHTsbTkrsfmZ4Ik8ARwCpGZhLFSOmH8gNjEEuc6vKsOQcgF9EMlz7ZfxsWP4O3DKTnYHjl+kcxn1nsQJkbuLpT3/D6qjSVE+6Jc2BPlLhA2Y6CVWw+2UJMtpCrGHCex9O18gvMcYqXtkZZZz3Evi0iwYOaDpoqCkMY+5GfTWVoaJNb/jomJSK3dVj89bt8mdvhtWwPlQ5l2EDqXOqg+wpHbpbBN5PuEL3YT3sLXYsr0yVIFlREjayb7nz7nRA9INiQqo9dG79Xe8s7cT97+dSf6gRQ6rEcWiCZsJ+z27la3gNKN6rabc5yf5+MkidP+lbQ+RgpeiZZdRJaDekBiJUerfvgOHGUo6KRrJCN+EDyz71OM5ZT3JJYQqIHLpcsT3g09EPrd0FFHZXnqo2QvpCqdhKU8Zmv46s2jGf/4LCIe0X7K/KD+FmFEPzt2BGsnjspTPRsk4xO90lfI6pu5IKGCZUr8wmgX/BjAseD7xqzIGRepBmoUS/j+S06rWsXAhIQxl52mkRp2lTblKVcz8D6dvsCkYp697ti/P+9Mlo4AAfUmFCzF15e0p48An+yo9SboccFutn8S7H121S/mr5adOh3OePUf</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_060742</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_060752</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_060752</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_060752</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynlMGdnGhOAKVHGdYXIHkiG8pITUgBJbBks2kK9fyYADhGTZLR4otVunT190pCuBA9/xakJAJFnIc8vA58JLrRUjjrgXYsGEx3EAwpPE69Vubzwnb3l4u8XIdZoV47VUAvUbW2bhAqjplkeuianrmOOydUnK9iWlo5FyFSKGDhcSc1kxHMt2Tds2bbdvWV7hwnOL+UvXHhq5Z4iEwlYuecvYkFqKijGVcuYhtFgs8otCPowmyLEsGw1ub3pkCgE2qlfrjNJAUXXjT/IUCPg+yZMwQFdoz+eKCq/HJhzLOIJNLPpdLAtZZaR8qGCTMyPbC7TDx2G6bGAeckawzz6wrs8tyGlIczV/EkZMToNvk7AtDWzCkpjEdvmZgfapnQi0xzAS2BRTbG+wujCGCDiB3FO3UzHOTutaurUfYS7GYRSI/eV/4wM8AT+cqVhim9aG2umARypVvQLidTjxY8ESuNPDOsMExKabQE6Hyj1EMGbLGybUgC6FZod26R0s19VosgkI+X8atNOcNcgz9mOo/h24A9alz8OEKqhnEZGiiAd3gOlTJSWw65wastaulwdDmQ3Resdw1R6VBoNx7+LmjYbW9HKxXNYIovJ6GN0mD/Y8efx4ntrOQ301urVm9rU1f+87aDVvWqN+sdUvx/d3b6P3/t1g/NdyyX3y51fsPpKAPrUm0dvL0/A9kCVouS/NDmn9Pqd19DJpDM8fG63SbLQaThePiL3d29do/uel1jivvz8+/Co/1KHdHBLMxje/O4M/Iumip6RTydLZ4b9v2575Xjx6AyK3Sz0GnWaurbqE5c9ipi2MmuPU1Ztp8RESuDSqepfWDi9Wcseop3q4XlulRqnetpsNq1V3L8qlllUsWMVy2W5bNatdcLYis2ZxQLER8jHTsbTkrsfmZ4Ik8ARwCpGZhLFSOmH8gNjEEuc6vKsOQcgF9EMlz7ZfxsWP4O3DKTnYHjl+kcxn1nsQJkbuLpT3/D6qjSVE+6Jc2BPlLhA2Y6CVWw+2UJMtpCrGHCex9O18gvMcYqXtkZZZz3Evi0iwYOaDpoqCkMY+5GfTWVoaJNb/jomJSK3dVj89bt8mdvhtWwPlQ5l2EDqXOqg+wpHbpbBN5PuEL3YT3sLXYsr0yVIFlREjayb7nz7nRA9INiQqo9dG79Xe8s7cT97+dSf6gRQ6rEcWiCZsJ+z27la3gNKN6rabc5yf5+MkidP+lbQ+RgpeiZZdRJaDekBiJUerfvgOHGUo6KRrJCN+EDyz71OM5ZT3JJYQqIHLpcsT3g09EPrd0FFHZXnqo2QvpCqdhKU8Zmv46s2jGf/4LCIe0X7K/KD+FmFEPzt2BGsnjspTPRsk4xO90lfI6pu5IKGCZUr8wmgX/BjAseD7xqzIGRepBmoUS/j+S06rWsXAhIQxl52mkRp2lTblKVcz8D6dvsCkYp697ti/P+9Mlo4AAfUmFCzF15e0p48An+yo9SboccFutn8S7H121S/mr5adOh3OePUf</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF1DC0DF4697E05305991F0A0F32</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>IE</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7BF1DC0DF4697E05305991F0A0F32</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF1DC0DF4697E05305991F0A0F32</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7BF1DC0EB4697E05305991F0A0F32</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7BF1DC0EB4697E05305991F0A0F32</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7D35E78ED7C84E05307991F0A7A61</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7D35E78ED7C84E05307991F0A7A61</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>07C7BF1DC0EB4697E05305991F0A0F32</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00024_Account and User Create with AU 111_SecondFullUserCreate_107_SUCCESS_P0" searchProperties="true" id="7ffc4859-0aec-48f6-bfd1-b5205d8ac051"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="c570d992-6789-4f7e-911f-db9227f7722d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="6d276c23-0d8d-4e5e-9c39-3370bfb72895"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AU");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="8ad1d710-abcc-4ab4-afe1-4fde6a472e54"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="b2981482-bb75-4153-a958-615d8777acb7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFullUserCreate" id="30118548-e495-4092-aef0-8f45851dccee"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create" id="0ff6b4df-8d7e-48f2-a45f-de4cf55d0bff"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VynlMGdvYZnEFqghLYiZbQZa5eUkJucFKbAkkmUC+fiQDDpBlmHlydbvVfXrRUZ8JlCaVoC0EcEkYLS3ThIog1zaNjNOAIUFEQFEKIpA4GLWvr4JK2Q7Q9ohRCrtN46Vaa9gRuFVzPHFd04uqVbM+rtfMBnYnDq7Va76PlakQGYRUSERl06jYjmc6jul497YduLXArpQdz342So/AhfKtTMq2sQG1FE0jlnIWWNb7+3v53S0zPrUqtu1Yf19fjXAMKTJaZ+uM8kC8tbHH5QgwJAkuY5ZaZ9aezVkkghGZUiQzDptY0U+xbMtuWMomEmR6YhRnIQrphOViB1FGCUYJ+UC6PtcgYxaV2smUcSLj9MckHFs7NmGJTex49MSw9qEd6WgPIRfIFDFyNr6GMAEOFEPpYRg2jZPjupYfveeIignjqdgX/xseoAtI2AwiU2zT2kA73uE3lWqdAQ5CipNMkAXc6GGdIQxi003Ax7sq3XGYkOUVEWpAl0Kjs3bhHYjranTJFIT8Pw3aac7aySNKMmh5r/0VTfr87m1wdz6uXt5OOu7Tx8OoSr1mDmDXOFcUrV2LB0NZDNH6xCyaXPsf51evrnBZPPdOa+O0+zQ8HQziLnqutD2n/XiJ+twTq9dwSl7/+giHEQ/Jo5tU8WBx8Xjrtv+42eD14oM9OQlBs3r8Z1C/7qAHSPvRZHl1Hno3vVPeXyTW6P40vrwZ3J2OxotV6vS9uRNdzRv2/H28QuwGBu5FjJlvpxdDMjod8puHp1Ub0LTX88Lnt2aRzg7+fd32zo+y8StguRX1GITdUl91CcnfyUxrSGROctNgpslHSKDSaOlTmjuCTNEdiQLVw7Vs1zq1TsV3e41z1+v1uz3bd22/0XD6dtv1HW9LMmsUBxA7jE6IjqUpdz02vwPEaSCARsDNBcsU0wnjF49dJFEppEN1CRgVcM8UPSPH94moZ94cv32sxlE9XnrqfntG6YbJW3rL2xMJfJ+S3T1KHgImMwKat/VYCzXXQqpSzNEik4lTXqAyhUwxO9ckG1S8um8Jks4S0ECtlEVZAuVZPMsLY4n1t2IiLHLtsHefX7Yf0zr8t62AsomINhA6l3NQXYQvb0s18LeJ/JxwdTfhrft2FhF9r1Q5JSd4jWT/1+eU6PEoRkRl9NIZvThb3IX50ce/nrR+AWUd1qMIFC3ITtjty63eAMUarW0356g8L2eLRZb3r6bZkSv3irIc37Ir1ghwpnhtdc/egFqFF+uoR6QAfhC80O9DzGRMRxJJSNXAlXLxiK1hBEJvDaG6KMtjV5K9kKp0EpbyO10nURuPRvzrUoQDrO2U+k593hmPPjv2ja+dOCpPtTRIQqda0g/I6oe5wEy5JYr6GN91/p2D74LvK4siF1ikGqhxJuHnPyXNaU0DYcwyKsOukSt2eTbHKVczCD6NvrjJqbzY7ci/L3cmyUcAg9oIBcn96yc60FeATne4ehP0kK67rtvtOt1Ord+v5nRdW9N1o907L4qyh671Rf1Vs1Onwxlv/QM=</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_060757</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_06089</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_06089</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_06089</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VynlMGdvYZnEFqghLYiZbQZa5eUkJucFKbAkkmUC+fiQDDpBlmHlydbvVfXrRUZ8JlCaVoC0EcEkYLS3ThIog1zaNjNOAIUFEQFEKIpA4GLWvr4JK2Q7Q9ohRCrtN46Vaa9gRuFVzPHFd04uqVbM+rtfMBnYnDq7Va76PlakQGYRUSERl06jYjmc6jul497YduLXArpQdz342So/AhfKtTMq2sQG1FE0jlnIWWNb7+3v53S0zPrUqtu1Yf19fjXAMKTJaZ+uM8kC8tbHH5QgwJAkuY5ZaZ9aezVkkghGZUiQzDptY0U+xbMtuWMomEmR6YhRnIQrphOViB1FGCUYJ+UC6PtcgYxaV2smUcSLj9MckHFs7NmGJTex49MSw9qEd6WgPIRfIFDFyNr6GMAEOFEPpYRg2jZPjupYfveeIignjqdgX/xseoAtI2AwiU2zT2kA73uE3lWqdAQ5CipNMkAXc6GGdIQxi003Ax7sq3XGYkOUVEWpAl0Kjs3bhHYjranTJFIT8Pw3aac7aySNKMmh5r/0VTfr87m1wdz6uXt5OOu7Tx8OoSr1mDmDXOFcUrV2LB0NZDNH6xCyaXPsf51evrnBZPPdOa+O0+zQ8HQziLnqutD2n/XiJ+twTq9dwSl7/+giHEQ/Jo5tU8WBx8Xjrtv+42eD14oM9OQlBs3r8Z1C/7qAHSPvRZHl1Hno3vVPeXyTW6P40vrwZ3J2OxotV6vS9uRNdzRv2/H28QuwGBu5FjJlvpxdDMjod8puHp1Ub0LTX88Lnt2aRzg7+fd32zo+y8StguRX1GITdUl91CcnfyUxrSGROctNgpslHSKDSaOlTmjuCTNEdiQLVw7Vs1zq1TsV3e41z1+v1uz3bd22/0XD6dtv1HW9LMmsUBxA7jE6IjqUpdz02vwPEaSCARsDNBcsU0wnjF49dJFEppEN1CRgVcM8UPSPH94moZ94cv32sxlE9XnrqfntG6YbJW3rL2xMJfJ+S3T1KHgImMwKat/VYCzXXQqpSzNEik4lTXqAyhUwxO9ckG1S8um8Jks4S0ECtlEVZAuVZPMsLY4n1t2IiLHLtsHefX7Yf0zr8t62AsomINhA6l3NQXYQvb0s18LeJ/JxwdTfhrft2FhF9r1Q5JSd4jWT/1+eU6PEoRkRl9NIZvThb3IX50ce/nrR+AWUd1qMIFC3ITtjty63eAMUarW0356g8L2eLRZb3r6bZkSv3irIc37Ir1ghwpnhtdc/egFqFF+uoR6QAfhC80O9DzGRMRxJJSNXAlXLxiK1hBEJvDaG6KMtjV5K9kKp0EpbyO10nURuPRvzrUoQDrO2U+k593hmPPjv2ja+dOCpPtTRIQqda0g/I6oe5wEy5JYr6GN91/p2D74LvK4siF1ikGqhxJuHnPyXNaU0DYcwyKsOukSt2eTbHKVczCD6NvrjJqbzY7ci/L3cmyUcAg9oIBcn96yc60FeATne4ehP0kK67rtvtOt1Ord+v5nRdW9N1o907L4qyh671Rf1Vs1Onwxlv/QM=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7D33DD1DC7FF6E05307991F0A9AEB</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>AU</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7D33DD1DC7FF6E05307991F0A9AEB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7D33DD1DC7FF6E05307991F0A9AEB</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7C253E9B34EFDE05305991F0A3514</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7C253E9B34EFDE05305991F0A3514</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7BF43F8BB4CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7BF43F8BB4CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1995-11-19</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00025_Account and User Create with AU 111_StandardYouthUserCreate_107_SUCCESS_P0" searchProperties="true" id="4747a29c-f8e1-426e-adc7-fba6338d5350"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="c07a5b28-fc3f-455d-8165-2872beb08d49"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="82c41d2d-25ca-4fb5-9199-f63787f7e196"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AU");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="dd9798d5-da08-44bc-9404-9ccd2b6824c7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="aac4ee36-addc-423f-8c78-d5a39dd3dcbd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUserCreate" id="b69df3a0-1f2a-4ea5-a53b-d85c823e8c64"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StandardYouthUserCreate" id="17e081ef-3fd8-4ccb-8119-23bc6b62f8e2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvO4ZXzHwRWocnAYmNwmQDKpvEwJuQ0KtgSWDCRfP5IBD5DLsvvk6nar+/RFR33OUZbaQcg55IIwWltnKeVBqW1pRU4DhjjhAUUZ8EDgYBjeXAd23QzQ7ohW60ct7Te4jXEydhy9Yfmx7nrOWD9LsKtbVuJA4kLTtFxpynkBfcoFoqKl2VInDXTLHZlm4PiB1azbnvms1R4h59K3NKmb2hbUmre0qRDzwDBWq1V95dRZPjFs07SMp5vrIZ5ChrT2+SajMlDe3trjegwY0hTXMcuMc+PA5jzmwZBMKBJFDttY8WexTMNsGtIm5mTyTavOQtynCSvFDqKMEoxS8oZUfW5ATFlcC9MJy4mYZp8mYZnKsQ5rrGPLpd804xDaiY4OEOYc6XyKrK2vASSQA8VQexj0W9q307pWHh3liPKE5Rk/FP8bHqBLSNkcYp3v0tpCO93hB5VqnwMO+hSnBSdLuFXDOkcY+LabgE93VfuZQ0LW14TLAV1zhc7Yh3ckbqoRkQlw8X8atNecjZNHlBbQpj59WeBo8NC7mpo+c1ap595nZN0jk1YJYN+4VFSt3YhHQ1kN0ebEHUw73qjx+NSx5u74qvOavpCQ/XP1xGb3LxcxDIbGuItGjevb0dvASl/vG7+ub6bhSz4hPRsNG+OHeLVAnpWjh6vh44L1fr1ZyeqeQhTe+dHSm4UDd0Yu77PeVb78ng6M3g/TFfOnRr7wBjF+LpyU/xLfXz0LPT5nj4WdJZ1wPFs0xhEzn3vc6591fojb8Y9Z2KrS2cN/qNvd+WExfgEsdqIag35U68ouIfE1mSkNifWkNA3miny4ACq0tjqluCMoJN2ROJA93Mim3/Ejx4kiqxv53W7j0vQc0282ra4ZNsPLix3JbFAcQewwmhAVS1HuZmy+BoizgAONIdeXrJBMx7UvPEZIoFqfDuQlYJTDiEl6pg5dL62Yun4hisxmb76YiSYjWu2WiTt6l4eJgPyQkp0DSh4AJnMCirfVWHM511zIUizQshCpVV+iOoVCMnuuSDaw3TPP4CSbp6CAGhmLixTq8+m8LIzBN19bR5iX2sHlqLxsn6Z1/G9XAWkTE2XAVS4XILsIH7wt5i6RzxNu7Ce8cx8WMVH3SpZT5ARvkBz++jslajyqEZEZ/e4Mf1s73JX5ycffnzS+AGUc16MKFC/JXtjdyy3fAMka7V03F6i+qBfLZVH2z1fsmEv3krIszzBtYwi4kLz2OmIzoEblxTjpEamAHwWv9IcQCzGlQ4EEZHLgaqV4wtYwBK62hr68KOtTV5KDkLJ0AtbiI10nlRuPQvzlUoQDrOyk+qf8rFge/+3YB7724sg85dIgCJ0oST0gr5/MBWbSLZHUx/J95x85+Cj4obIqcoVFyIEaFwI+/1NTnNbSEMasoKIfaaVin2dLnOJ1DsFfo3duSiqvdjvy78udTsoRwCA3Qk5K/+qJDtQVoJM9rt4GPabri64VdSy76TaafknX3oauza5jV0U5QNd+p36v2avT8Yy3/wA=</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_060814</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_060829</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_060829</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_060829</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvO4ZXzHwRWocnAYmNwmQDKpvEwJuQ0KtgSWDCRfP5IBD5DLsvvk6nar+/RFR33OUZbaQcg55IIwWltnKeVBqW1pRU4DhjjhAUUZ8EDgYBjeXAd23QzQ7ohW60ct7Te4jXEydhy9Yfmx7nrOWD9LsKtbVuJA4kLTtFxpynkBfcoFoqKl2VInDXTLHZlm4PiB1azbnvms1R4h59K3NKmb2hbUmre0qRDzwDBWq1V95dRZPjFs07SMp5vrIZ5ChrT2+SajMlDe3trjegwY0hTXMcuMc+PA5jzmwZBMKBJFDttY8WexTMNsGtIm5mTyTavOQtynCSvFDqKMEoxS8oZUfW5ATFlcC9MJy4mYZp8mYZnKsQ5rrGPLpd804xDaiY4OEOYc6XyKrK2vASSQA8VQexj0W9q307pWHh3liPKE5Rk/FP8bHqBLSNkcYp3v0tpCO93hB5VqnwMO+hSnBSdLuFXDOkcY+LabgE93VfuZQ0LW14TLAV1zhc7Yh3ckbqoRkQlw8X8atNecjZNHlBbQpj59WeBo8NC7mpo+c1ap595nZN0jk1YJYN+4VFSt3YhHQ1kN0ebEHUw73qjx+NSx5u74qvOavpCQ/XP1xGb3LxcxDIbGuItGjevb0dvASl/vG7+ub6bhSz4hPRsNG+OHeLVAnpWjh6vh44L1fr1ZyeqeQhTe+dHSm4UDd0Yu77PeVb78ng6M3g/TFfOnRr7wBjF+LpyU/xLfXz0LPT5nj4WdJZ1wPFs0xhEzn3vc6591fojb8Y9Z2KrS2cN/qNvd+WExfgEsdqIag35U68ouIfE1mSkNifWkNA3miny4ACq0tjqluCMoJN2ROJA93Mim3/Ejx4kiqxv53W7j0vQc0282ra4ZNsPLix3JbFAcQewwmhAVS1HuZmy+BoizgAONIdeXrJBMx7UvPEZIoFqfDuQlYJTDiEl6pg5dL62Yun4hisxmb76YiSYjWu2WiTt6l4eJgPyQkp0DSh4AJnMCirfVWHM511zIUizQshCpVV+iOoVCMnuuSDaw3TPP4CSbp6CAGhmLixTq8+m8LIzBN19bR5iX2sHlqLxsn6Z1/G9XAWkTE2XAVS4XILsIH7wt5i6RzxNu7Ce8cx8WMVH3SpZT5ARvkBz++jslajyqEZEZ/e4Mf1s73JX5ycffnzS+AGUc16MKFC/JXtjdyy3fAMka7V03F6i+qBfLZVH2z1fsmEv3krIszzBtYwi4kLz2OmIzoEblxTjpEamAHwWv9IcQCzGlQ4EEZHLgaqV4wtYwBK62hr68KOtTV5KDkLJ0AtbiI10nlRuPQvzlUoQDrOyk+qf8rFge/+3YB7724sg85dIgCJ0oST0gr5/MBWbSLZHUx/J95x85+Cj4obIqcoVFyIEaFwI+/1NTnNbSEMasoKIfaaVin2dLnOJ1DsFfo3duSiqvdjvy78udTsoRwCA3Qk5K/+qJDtQVoJM9rt4GPabri64VdSy76TaafknX3oauza5jV0U5QNd+p36v2avT8Yy3/wA=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF1DC1294697E05305991F0A0F32</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>AU</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7BF1DC1294697E05305991F0A0F32</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF1DC1294697E05305991F0A0F32</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7D33DD1FD7FF6E05307991F0A9AEB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7D33DD1FD7FF6E05307991F0A9AEB</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7C2F1FEB84CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7C2F1FEB84CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1997-11-18</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00026_Account and User Create with AU 111_BasicChildUserCreate_107_SUCCESS_P0" searchProperties="true" id="16d70d09-3447-4cf3-8160-0beff899a5a0"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="1c9eaa73-fb62-4544-9730-f6c5f6f6050d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="565c88e9-7bed-44d1-a587-f2b97c1e7d3d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AU");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="be7a89a4-8923-4f8b-ab4b-1685ce4fc84d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="44dbac3e-d727-48d4-9705-a9d7d46fbf1b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for BasicChildUserCreate" id="e7f99f32-039a-45f1-9e16-079f387c4b06"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("CHILD_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian",tC.getPropertyValue("LegalGuardian"));

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call BasicChildUserCreate" id="60408c4d-a556-42f1-a327-0f89d43f6805"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU+pIEP4rVHzcCrkRkJRQxUUOHEU8guj6Yg2TDowkMzEzAfTX70yACAguu0+p7vR0f32Zb/qKoyi0vQbnkAjCaGEVhZR7mbampQn1GOKEexRFwD2BvWGjf+vZRdND2yNaodeuaa8BWLhyaZu6WQocveRbFf1y4pR1pzyxIJi4OMCBNOU8hR7lAlFR02zTKumWpVulkWl6TsVzLouuY75ohTEkXPqWJkVT24Ba8Zo2EyL2DGO5XBaXTpElU8M2Tct47t8O8QwipNWv1hllgZL6xh4XfcAQhriIWWRcGXs2Vz73hmRKkUgT2MTyT8UyDbNqSBufk+mFlp8Fv0cDloktRBklGIXkE6n69EHMmF9ohFOWEDGLTiZhmcqxDiusY6tELzRjH9qZjvYQJhzpfIasja8HCCABiqHw+NCraRfndS07OkoQ5QFLIr4v/jc8QBcQshh8nW/T2kA73+GRStWvAHs9isOUkwXcqWGNEQa+6Sbg810V7hMIyOqWcDmgK67QGbvwDsR1NdpkClz8nwbtNGftZIzCFOqw7H/+zZ/Hy9HH20v7zm6mH2HPffnrcdCvZQB2jTNF3tq1eDCU+RCtT+CEEZGW7Js+vTV+31A27hsfqAQ3pc95zxXdMW9OK056M50knbvwudy1n5oRbjjmfOj8qZq9Bnsa+DGJV+PHt0G/ezPr/zKa8T00X9xHdjOuDD7v5s5iVF5N44FhvSWtRfk+eoDur6D77LuzxJy544Uoj2ZP/ahrPhtj+y798/jZbLeqVejilW+F7On2adL5zWt5Ojv493XbOz9MJ2+AxVZUY9BrFzqyS0j8TGZKQ3w9yEy9WJEPF0CFVlenFHd4qaQ74nuyh2vZrLQqbcdpt23LrXQ65WtTMlelWrU6ZqPauG5uSWaN4gBii9GAqFiKctdj8zNAHHkcqA+JvmCpZDqu/eCxjQQq9OiDvASMchgxSc+WNS3PJyscu9PUCd8mC5sn8/d5paoV7pgY0EHSCAQk+5zs7HHyA2ASE1DEreaay8HmQtbiHS1SEVrFBSpSSCW1J4plPbt06RqcRHEICqkRMT8NoRjP4qwyBl9/bR1hnmkfrkfZbTuZ1+G/bQmkjU+UAVe5NEG2EY48LvY2kdMJl3cT3rpvpD5RF0vWUyQEr5Hs//oaEzUf+YzIjF5bw1drizs3P/v495PGD6CMw3rkgfwF2Qm7fbrlIyBpo77t5jsqvhfTxSLN+ldR9JhI95KzLNcwbWMIOJXE9jFic6BG7sU46xXJgR8Ez/X7EFMxo0OBBERy4AqZeMbaMASu1oaevCmrc3eSvZCydAJW4piuFcqVRyH+cSvCHlZ2Un0vP0uW+F8dO+JrJ47MU24NgtCpktQL8nFiLjCTbonkPpbsOj/m4FjwfWVe5ByLkAM1SQWc/lNQpFbTEMYspaLX1jLFLtFmOMVHDN6X0Tc3GZfnyx359+1OJ9kIYJArISeZf/VGe+oK0OkOWW+CHvJ187rRapmOWSpX2xlfu2u+du1OJy/KHrr6N/V3zU6dDme8/g8=</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_060834</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_060847</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_060847</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_060847</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbU+pIEP4rVHzcCrkRkJRQxUUOHEU8guj6Yg2TDowkMzEzAfTX70yACAguu0+p7vR0f32Zb/qKoyi0vQbnkAjCaGEVhZR7mbampQn1GOKEexRFwD2BvWGjf+vZRdND2yNaodeuaa8BWLhyaZu6WQocveRbFf1y4pR1pzyxIJi4OMCBNOU8hR7lAlFR02zTKumWpVulkWl6TsVzLouuY75ohTEkXPqWJkVT24Ba8Zo2EyL2DGO5XBaXTpElU8M2Tct47t8O8QwipNWv1hllgZL6xh4XfcAQhriIWWRcGXs2Vz73hmRKkUgT2MTyT8UyDbNqSBufk+mFlp8Fv0cDloktRBklGIXkE6n69EHMmF9ohFOWEDGLTiZhmcqxDiusY6tELzRjH9qZjvYQJhzpfIasja8HCCABiqHw+NCraRfndS07OkoQ5QFLIr4v/jc8QBcQshh8nW/T2kA73+GRStWvAHs9isOUkwXcqWGNEQa+6Sbg810V7hMIyOqWcDmgK67QGbvwDsR1NdpkClz8nwbtNGftZIzCFOqw7H/+zZ/Hy9HH20v7zm6mH2HPffnrcdCvZQB2jTNF3tq1eDCU+RCtT+CEEZGW7Js+vTV+31A27hsfqAQ3pc95zxXdMW9OK056M50knbvwudy1n5oRbjjmfOj8qZq9Bnsa+DGJV+PHt0G/ezPr/zKa8T00X9xHdjOuDD7v5s5iVF5N44FhvSWtRfk+eoDur6D77LuzxJy544Uoj2ZP/ahrPhtj+y798/jZbLeqVejilW+F7On2adL5zWt5Ojv493XbOz9MJ2+AxVZUY9BrFzqyS0j8TGZKQ3w9yEy9WJEPF0CFVlenFHd4qaQ74nuyh2vZrLQqbcdpt23LrXQ65WtTMlelWrU6ZqPauG5uSWaN4gBii9GAqFiKctdj8zNAHHkcqA+JvmCpZDqu/eCxjQQq9OiDvASMchgxSc+WNS3PJyscu9PUCd8mC5sn8/d5paoV7pgY0EHSCAQk+5zs7HHyA2ASE1DEreaay8HmQtbiHS1SEVrFBSpSSCW1J4plPbt06RqcRHEICqkRMT8NoRjP4qwyBl9/bR1hnmkfrkfZbTuZ1+G/bQmkjU+UAVe5NEG2EY48LvY2kdMJl3cT3rpvpD5RF0vWUyQEr5Hs//oaEzUf+YzIjF5bw1drizs3P/v495PGD6CMw3rkgfwF2Qm7fbrlIyBpo77t5jsqvhfTxSLN+ldR9JhI95KzLNcwbWMIOJXE9jFic6BG7sU46xXJgR8Ez/X7EFMxo0OBBERy4AqZeMbaMASu1oaevCmrc3eSvZCydAJW4piuFcqVRyH+cSvCHlZ2Un0vP0uW+F8dO+JrJ47MU24NgtCpktQL8nFiLjCTbonkPpbsOj/m4FjwfWVe5ByLkAM1SQWc/lNQpFbTEMYspaLX1jLFLtFmOMVHDN6X0Tc3GZfnyx359+1OJ9kIYJArISeZf/VGe+oK0OkOWW+CHvJ187rRapmOWSpX2xlfu2u+du1OJy/KHrr6N/V3zU6dDme8/g8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BEACC030469DE05305991F0A52FF</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>AU</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7BEACC030469DE05305991F0A52FF</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BEACC030469DE05305991F0A52FF</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7D33DD2157FF6E05307991F0A9AEB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7D33DD2157FF6E05307991F0A9AEB</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7BF43F8D14CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7BF43F8D14CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>07C7D33DD2157FF6E05307991F0A9AEB</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00027_Account and User Create with CA  111_SecondFullUserCreate_107_SUCCESS_P0" searchProperties="true" id="b9b34eff-9de1-47bf-b2c4-7c291392133e"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="9244cf34-06f0-425b-b4d6-cfcc2f941026"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="fcec5bad-fc0d-470c-8c33-b25377ab79c4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CA");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="433d3ad7-e722-475f-8d3b-d3e0fe82e38e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="6b5a5dca-001d-4a7d-acdc-2af2e2c67685"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFullUserCreate" id="c8b6922f-04e2-4bf7-8096-908026c47998"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create" id="a3dbbb51-e510-45cd-b3ae-d39a367c8491"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VyvOYMl6wcXAFqogJMyRkgyQzycuUkNugjC0RSWb7+isZ8ABZLvc+ubrd6j696KjPBMpSN2wLAVwSRiuLLKUiLLRNI+c0ZEgQEVKUgQglDoft637oVu0QbY8YlV6nafz2Gx6MMKqZfoxHppecYhO5yDVP7XoCjYaHbbeuTIXIoUeFRFQ2Ddd2PNNxTMd7sO2wFoR+vWrXnBej8gRcKN/KpGobG1AL0TQmUk5Dy5rP59V5rcr42HJt27F+XfeHeAIZMlpn64yKQLy1scfVGDCkKa5illln1p7NWSzCIRlTJHMOm1jxZ7Fsy25YyiYWZPzNKM9C3KMJK8QIUUYJRilZIV2fa5ATFlfa6ZhxIifZp0k4tnZswgKb2PHoN8Pah3akoz2EXCBTTJCz8TWABDhQDJXHQa9pfDuua8XRB46oSBjPxL743/AAnUHKphCbYpvWBtrxDj+oVOsMcNijOM0FmcGNHtYpwiA23QR8vKvKHYeELPpEqAFdCI3O2oV3IK6r0SFjEPL/NGinOWsnTyjNodUYzlPrnvdHq+z+V/LMX8ePj/7l1feXzG4WAHaNC0XZ2rV4MJTlEK1PvD7VThK5mvuT9lV0GTz7Q/Zqv0TWOGHR1O5c8hMyJed8kiWji5d+PT5xk9dglT/wt9Oe871+urruJMmisRyM4sV06fFlih7BvXmRNz6/vgoyP+U/5OA+o08nsKpd5v3hyW0U9S/u3Ksf93h6P5r1Z9mzN5vVh4ieP/8MrutPk0fv1huseherqyzI0l93kfh5/8KaZTo7+Pd12zs/zEevgOVW1GPQ61S6qktIfk1mWkNiMylMw6kmHyGBSqOlT2nuCHNFdyQOVQ/Xsh1EQeT6ftA+9b2LbvfC9mu232g4XbvtKc2WZNYoDiBGjCZEx9KUux6brwHiLBRAY+DmjOWK6YTxhccOkqjSowN1CRgV8MAUPTtssXjNfcFWtcZyOW+MVn8yN8twYFRumLylt7ydSOD7nFzb4+QBYDUVoIlbz7VQgy2kqsUbmuUydaozVKWQK2rnmmVD1zv1LUGyaQoaqZWxOE+hOp1Mi8pYYv11TYRFoR1cPBS37dO8Dv9tS6BsYqINhM7lHFQb4YPHxdsm8nnC9d2Et+7beUz0xVL1lJzgNZL9X3/HRM9HOSMqo9/R8LezxV2aH338/UnrC1DWYT3KQPGM7ITdPt3qEVC00dp28w1V36r5bJYX/Qs0PXLlXnGW41u2aw0B54rYlg/sD1Cr9GId9YqUwA+Cl/p9iLmc0KFEEjI1cJVCPGJtGILQa0NP3ZTFsTvJXkhVOgkL+ZEuStXKoxF/uRXhEGs7pb5Tnznj8d+OfeBrJ47KU20NktCxlvQLsvxkLjBTboniPsZ3nX/k4KPg+8qyyCUWqQZqlEv4/E9Fk1rTQBiznMpexygUu0Rb4JTLKYR/jd65Kbi8XO7Iv293JilGAINaCQUp/Os3OtRXgI53yHoT9JCvO7Xaebvebgfdbq3g62DN11G73i2Lsoeu9U79XrNTp8MZb/0D</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_060851</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_06093</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_06093</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_06093</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VyvOYMl6wcXAFqogJMyRkgyQzycuUkNugjC0RSWb7+isZ8ABZLvc+ubrd6j696KjPBMpSN2wLAVwSRiuLLKUiLLRNI+c0ZEgQEVKUgQglDoft637oVu0QbY8YlV6nafz2Gx6MMKqZfoxHppecYhO5yDVP7XoCjYaHbbeuTIXIoUeFRFQ2Ddd2PNNxTMd7sO2wFoR+vWrXnBej8gRcKN/KpGobG1AL0TQmUk5Dy5rP59V5rcr42HJt27F+XfeHeAIZMlpn64yKQLy1scfVGDCkKa5illln1p7NWSzCIRlTJHMOm1jxZ7Fsy25YyiYWZPzNKM9C3KMJK8QIUUYJRilZIV2fa5ATFlfa6ZhxIifZp0k4tnZswgKb2PHoN8Pah3akoz2EXCBTTJCz8TWABDhQDJXHQa9pfDuua8XRB46oSBjPxL743/AAnUHKphCbYpvWBtrxDj+oVOsMcNijOM0FmcGNHtYpwiA23QR8vKvKHYeELPpEqAFdCI3O2oV3IK6r0SFjEPL/NGinOWsnTyjNodUYzlPrnvdHq+z+V/LMX8ePj/7l1feXzG4WAHaNC0XZ2rV4MJTlEK1PvD7VThK5mvuT9lV0GTz7Q/Zqv0TWOGHR1O5c8hMyJed8kiWji5d+PT5xk9dglT/wt9Oe871+urruJMmisRyM4sV06fFlih7BvXmRNz6/vgoyP+U/5OA+o08nsKpd5v3hyW0U9S/u3Ksf93h6P5r1Z9mzN5vVh4ieP/8MrutPk0fv1huseherqyzI0l93kfh5/8KaZTo7+Pd12zs/zEevgOVW1GPQ61S6qktIfk1mWkNiMylMw6kmHyGBSqOlT2nuCHNFdyQOVQ/Xsh1EQeT6ftA+9b2LbvfC9mu232g4XbvtKc2WZNYoDiBGjCZEx9KUux6brwHiLBRAY+DmjOWK6YTxhccOkqjSowN1CRgV8MAUPTtssXjNfcFWtcZyOW+MVn8yN8twYFRumLylt7ydSOD7nFzb4+QBYDUVoIlbz7VQgy2kqsUbmuUydaozVKWQK2rnmmVD1zv1LUGyaQoaqZWxOE+hOp1Mi8pYYv11TYRFoR1cPBS37dO8Dv9tS6BsYqINhM7lHFQb4YPHxdsm8nnC9d2Et+7beUz0xVL1lJzgNZL9X3/HRM9HOSMqo9/R8LezxV2aH338/UnrC1DWYT3KQPGM7ITdPt3qEVC00dp28w1V36r5bJYX/Qs0PXLlXnGW41u2aw0B54rYlg/sD1Cr9GId9YqUwA+Cl/p9iLmc0KFEEjI1cJVCPGJtGILQa0NP3ZTFsTvJXkhVOgkL+ZEuStXKoxF/uRXhEGs7pb5Tnznj8d+OfeBrJ47KU20NktCxlvQLsvxkLjBTboniPsZ3nX/k4KPg+8qyyCUWqQZqlEv4/E9Fk1rTQBiznMpexygUu0Rb4JTLKYR/jd65Kbi8XO7Iv293JilGAINaCQUp/Os3OtRXgI53yHoT9JCvO7Xaebvebgfdbq3g62DN11G73i2Lsoeu9U79XrNTp8MZb/0D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7D33BA6AA7FF3E05307991F0ACA6F</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>CA</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7D33BA6AA7FF3E05307991F0ACA6F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7D33BA6AA7FF3E05307991F0ACA6F</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7C2557A854EFFE05305991F0A454E</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7C2557A854EFFE05305991F0A454E</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7C2F1FECE4CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7C2F1FECE4CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1995-11-19</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00028_Account and User Create with CA 111_StandardYouthUserCreate_107_SUCCESS_P0" searchProperties="true" id="8ddc4266-a6c5-4b7e-88be-5c4b0d98ed2c"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="082bcfc2-0de0-49c3-b44d-3ae1ecbeb5d4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="421e4ae2-ce38-4499-9b40-ef7730e96f0c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CA");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="506a7cef-6337-444c-ad0b-d2b644842a3c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="f3b15830-2731-484b-93bc-20a18deaf7d2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUserCreate" id="7941e6ad-3111-4e24-9bb8-52b3b61209e9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StandardYouthUserCreate" id="e59531d1-08a2-41cf-94ab-a25563e6d608"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU/JIEP0rVHy0Qi4EE1JCVSTq4gIqoH76Yo2TDowkE8hMIPjrdyZABLwsu0+p7vR0n77MmT5nKI5M12MMUk4SWsnjiDK30DaVLKVughhhLkUxMJdjd+j1uq5Z1V20PaJUOn5TebVs7IRG3VDrNd1UrbezM9Ux9DfVcUJs2PpZqJtImDKWQYcyjihvKqZuWKphqIY10nW35rhGrWoa9otSeYSUCd/CpKorG1A5ayoTzmeupi2Xy+qyVk3SsWbquqH96XWHeAIxUlrn64yKQGlrY4+rAWCIIlzFSayda3s25wFzh2RMEc9S2MQKfoqla3pDEzYBI+MTpTwLQYeGSSG2EU0owSgiH0jWpwd8kgQVLxonKeGT+MckDF06ViHHKjYseqJo+9COdLSHMGVIZRNkbHwNIIQUKIbKw6DTVE6O61pxdJQiysIkjdm++N/wAF1AlMwgUNk2rQ204x1+U6nWOWC3Q3GUMbKAvhzWGcLANt0EfLyryl0KIcm7hIkBzZlEp+3COxDX1fDJGBj/Pw3aac7aySOKMmjhZ/2pXZ8vbruLe+sjTlia6cGgfvY+9poFgF3jQlG2di0eDGU5ROsT7dPH/tPydN4Or7qrYLqa+7V84dzc84/ec++B9tsYedO+ZlpXN7cjdL30XxpWssT8/eXv08HFO7fvTpHmzZ+0GD3kKYzs6w749pMddk+p7nhzw/EsgKmPVlmAuvNebD3/Re5zln/M8sV03DBDf7l6iPv4ftC3p/jmxcmve7f4qnE/1blWm/4ZZN3xaf3djJJmmc4O/n3d9s4Ps7d3wHwryjHo+JUr0SXEfyczqSGBGham7kySD+NAudKSpyR3uJmgOxK4oodrWbfbdtu0vLOa41iXln+piytUbzSMK927aBi1LcmsURxAbCc0JDKWpNz12PwOEMcuAxpAqi6STDAdU37x6COOKh06EJcgoQxGiaDnut2AOkY5mjuzmvlOPoLIXk3jiVLpJ/yW3qZeyCHdp+TaHiUPAJMZAcnbcqyZmGvGRSnmaJHxyKguUJVCJpg9lSTrmpZT1xiJZxFIoFqcBFkE1dlkVhRGY+uvqSLMCu3gclRcth/TOvy3rYCwCYg0YDKXCxBdhG/eFn2byM8Jn+0mvHXvZQGR90qUk6cEr5Hs//qcEjke5YiIjF7bw1dji7s0P/r415PaL6C0w3qUgYIF2Qm7fbnFGyBYo7Xt5hxV59VssciK/tmSHVPhXlCWUdd0UxsCzgSvrUbJFKhWetGOekRK4AfBS/0+xIxP6JAjDrEYuEohHrE1DIHJraEjLkp+7EqyF1KUjkPOv9O1I7HxSMS/LkXYxdJOqO/EZ5mkwWfHvvG1E0fkKZYGTuhYSvIBWf0wFzgRbomgviTddf6dg++C7yvLIpdYuBiot4zDz38qktOaCsI4ySjv+Eqh2OXZAidfzcD9NPripqDycrcj/77cqaQYAQxiI2Sk8C+faFdeATre4epN0C90bdQs3/DadUNf07W9pmuj7V+VRdlD1/qi/qrZqdPhjLf+AQ==</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_06098</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_060922</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_060922</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_060922</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbU/JIEP0rVHy0Qi4EE1JCVSTq4gIqoH76Yo2TDowkE8hMIPjrdyZABLwsu0+p7vR0n77MmT5nKI5M12MMUk4SWsnjiDK30DaVLKVughhhLkUxMJdjd+j1uq5Z1V20PaJUOn5TebVs7IRG3VDrNd1UrbezM9Ux9DfVcUJs2PpZqJtImDKWQYcyjihvKqZuWKphqIY10nW35rhGrWoa9otSeYSUCd/CpKorG1A5ayoTzmeupi2Xy+qyVk3SsWbquqH96XWHeAIxUlrn64yKQGlrY4+rAWCIIlzFSayda3s25wFzh2RMEc9S2MQKfoqla3pDEzYBI+MTpTwLQYeGSSG2EU0owSgiH0jWpwd8kgQVLxonKeGT+MckDF06ViHHKjYseqJo+9COdLSHMGVIZRNkbHwNIIQUKIbKw6DTVE6O61pxdJQiysIkjdm++N/wAF1AlMwgUNk2rQ204x1+U6nWOWC3Q3GUMbKAvhzWGcLANt0EfLyryl0KIcm7hIkBzZlEp+3COxDX1fDJGBj/Pw3aac7aySOKMmjhZ/2pXZ8vbruLe+sjTlia6cGgfvY+9poFgF3jQlG2di0eDGU5ROsT7dPH/tPydN4Or7qrYLqa+7V84dzc84/ec++B9tsYedO+ZlpXN7cjdL30XxpWssT8/eXv08HFO7fvTpHmzZ+0GD3kKYzs6w749pMddk+p7nhzw/EsgKmPVlmAuvNebD3/Re5zln/M8sV03DBDf7l6iPv4ftC3p/jmxcmve7f4qnE/1blWm/4ZZN3xaf3djJJmmc4O/n3d9s4Ps7d3wHwryjHo+JUr0SXEfyczqSGBGham7kySD+NAudKSpyR3uJmgOxK4oodrWbfbdtu0vLOa41iXln+piytUbzSMK927aBi1LcmsURxAbCc0JDKWpNz12PwOEMcuAxpAqi6STDAdU37x6COOKh06EJcgoQxGiaDnut2AOkY5mjuzmvlOPoLIXk3jiVLpJ/yW3qZeyCHdp+TaHiUPAJMZAcnbcqyZmGvGRSnmaJHxyKguUJVCJpg9lSTrmpZT1xiJZxFIoFqcBFkE1dlkVhRGY+uvqSLMCu3gclRcth/TOvy3rYCwCYg0YDKXCxBdhG/eFn2byM8Jn+0mvHXvZQGR90qUk6cEr5Hs//qcEjke5YiIjF7bw1dji7s0P/r415PaL6C0w3qUgYIF2Qm7fbnFGyBYo7Xt5hxV59VssciK/tmSHVPhXlCWUdd0UxsCzgSvrUbJFKhWetGOekRK4AfBS/0+xIxP6JAjDrEYuEohHrE1DIHJraEjLkp+7EqyF1KUjkPOv9O1I7HxSMS/LkXYxdJOqO/EZ5mkwWfHvvG1E0fkKZYGTuhYSvIBWf0wFzgRbomgviTddf6dg++C7yvLIpdYuBiot4zDz38qktOaCsI4ySjv+Eqh2OXZAidfzcD9NPripqDycrcj/77cqaQYAQxiI2Sk8C+faFdeATre4epN0C90bdQs3/DadUNf07W9pmuj7V+VRdlD1/qi/qrZqdPhjLf+AQ==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C134D1AC510DE05307991F0A1CDF</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>CA</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7C134D1AC510DE05307991F0A1CDF</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C134D1AC510DE05307991F0A1CDF</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7C24A63884E4DE05305991F0AB913</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7C24A63884E4DE05305991F0AB913</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7D8B39C927B61E05305991F0AA4E4</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7D8B39C927B61E05305991F0AA4E4</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2000-11-17</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00029_Account and User Create with CA 111_BasicChildUserCreate_107_SUCCESS_P0" searchProperties="true" id="538b0b49-20da-4f41-a580-c5623c6454b3"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="ef2d4351-c2d1-4d08-9577-2ee9fd1c193e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="581fd0b4-7752-4f87-9174-3c62a2edbad1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CA");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="a4a6b77f-44a4-4ba6-9ff7-4df555d7c63b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="c41182b7-8cd2-4d6e-af7b-4dc7fc0568b9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for BasicChildUserCreate" id="6f2290a0-d05e-44dc-b42a-7cd0d8e00980"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("CHILD_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian",tC.getPropertyValue("LegalGuardian"));

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call BasicChildUserCreate" id="de0bc07d-6c42-42f6-91b7-f368f3bf39f0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o6EP4rjPvYMZZtMMETmCEYGhpICE7aNC8dIS+g1pYdSQaSX38kAw6Qy+GcJ8+uV7vfXvRpzwVOYsfvCAFc0pRV1knMhF9oW0bOmZ9iQYXPcALCl8QPO6Oh71SRj3dHjMogaBm/ybSBnOnMMWsI1cxaBE3zDHnEdO0Z9hoectwzV5kKkcOACYmZbBkOsmumbZt27Q4h3z3zXafatN1Ho/IDuFC+lUkVGVtQa9EyFlJmvmWtVqvqyq2mfG45CNnWw2gYkgUk2GifbzIqAvH21p5UIyAQx6RK0sQ6tw5sziPhh3TOsMw5bGNFH8VCFmpayiYSdP7FKM9CNGCztBC7mKWMEhzTF6zrMwK5SKNKJ56nnMpF8mESNtKOTVgTk9g19sWwDqGd6OgAIRfYFAtsb31NYAYcGIHK/WTQMr6c1rXi6B3HTMxSnohD8b/hAbaEOM0gMsUurS200x2+U6n2ORB/wEicC7qEaz2sGSYgtt0EcrqrypjDjK6HVKgBXQuNztqHdyRuqhHQOQj5fxq015yNkx84zqEd9KngTxeDGk4eJ3fD/qg/XV9ficXZ6L5VANg3LhRlazfi0VCWQ7Q5cdlF30dr7365vnp+IVN8+e3xWd7UFpMwuM2mT3JOp/e388FymKHHP54DwOjlz+5obWU/p/nwMWG18df6y8heeb8Wlu2hwa/x1/H66nH8a3E1tN2w94DcYdLsZ0Han/JbxnvR/PIywn/+frMvp0GwdBGivYcruxPWvdtGIK2raPW93+2Fq6ATX8sny7LC8arXWM5bZTp7+A91uzsf5tM/QORO1GMwCCp91SUsPyczraGROStM/UyTj5DApNHWpzR3+LmiOxr5qocbGTW6jYtep9tFjVrNawY9VHdRvdm0+6hTd/r9HclsUBxB7KZsRnUsTbmbsfkcIEl8ASwCbi7TXDGdMD7xGGCJKwM2UZcgZQLuUkXPAuyMu7YdNzMn4ivXq+d2nOFno3Kdyht2wzszCfyQkt0DSp4AoRkFzdt6rIWaayFVKZ7wMpexXV3iKoNcMTvXJOs7tbO6JWiSxaCBWkka5TFUs0VWFMYSm69jYiIK7aR3V1y2D9M6/rergLKJqDYQOpcLUF2Ed94WZ5fIxwl7+wnv3HfyiOp7pcopOSUbJIe/XqdEj0c5Iiqj393wt73DXZqffPztSesTUNZxPcpA0ZLuhd293OoNUKzR3nXzCVefqvlymRf9a2h25Mq9oiy7biHHCoHkitee79K/wKzSi3XSI1ICPwpe6g8h5nLBQoklJGrgKoV4wtYQgtBbw0BdlPWpK8lBSFU6CWv5nq4bq41HI/50KSI+0XZKPVafVcqj146942svjspTLQ2SsrmW9APy/MFckFS5pYr6Ur7v/D0H7wU/VJZFLrFINVDTXMLHfyqa01oGJiTNmRwERqHY59kCp3zOwH81euOmoPJyt6P/vtyZtBgBAmojFLTwr59oX18BNt/j6m3QY7oOXPei4wVeo993C7pubOi62/FKuj5E136jfqvZq9PxjLf/AQ==</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_060928</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_060940</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_060940</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_060940</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc9o6EP4rjPvYMZZtMMETmCEYGhpICE7aNC8dIS+g1pYdSQaSX38kAw6Qy+GcJ8+uV7vfXvRpzwVOYsfvCAFc0pRV1knMhF9oW0bOmZ9iQYXPcALCl8QPO6Oh71SRj3dHjMogaBm/ybSBnOnMMWsI1cxaBE3zDHnEdO0Z9hoectwzV5kKkcOACYmZbBkOsmumbZt27Q4h3z3zXafatN1Ho/IDuFC+lUkVGVtQa9EyFlJmvmWtVqvqyq2mfG45CNnWw2gYkgUk2GifbzIqAvH21p5UIyAQx6RK0sQ6tw5sziPhh3TOsMw5bGNFH8VCFmpayiYSdP7FKM9CNGCztBC7mKWMEhzTF6zrMwK5SKNKJ56nnMpF8mESNtKOTVgTk9g19sWwDqGd6OgAIRfYFAtsb31NYAYcGIHK/WTQMr6c1rXi6B3HTMxSnohD8b/hAbaEOM0gMsUurS200x2+U6n2ORB/wEicC7qEaz2sGSYgtt0EcrqrypjDjK6HVKgBXQuNztqHdyRuqhHQOQj5fxq015yNkx84zqEd9KngTxeDGk4eJ3fD/qg/XV9ficXZ6L5VANg3LhRlazfi0VCWQ7Q5cdlF30dr7365vnp+IVN8+e3xWd7UFpMwuM2mT3JOp/e388FymKHHP54DwOjlz+5obWU/p/nwMWG18df6y8heeb8Wlu2hwa/x1/H66nH8a3E1tN2w94DcYdLsZ0Han/JbxnvR/PIywn/+frMvp0GwdBGivYcruxPWvdtGIK2raPW93+2Fq6ATX8sny7LC8arXWM5bZTp7+A91uzsf5tM/QORO1GMwCCp91SUsPyczraGROStM/UyTj5DApNHWpzR3+LmiOxr5qocbGTW6jYtep9tFjVrNawY9VHdRvdm0+6hTd/r9HclsUBxB7KZsRnUsTbmbsfkcIEl8ASwCbi7TXDGdMD7xGGCJKwM2UZcgZQLuUkXPAuyMu7YdNzMn4ivXq+d2nOFno3Kdyht2wzszCfyQkt0DSp4AoRkFzdt6rIWaayFVKZ7wMpexXV3iKoNcMTvXJOs7tbO6JWiSxaCBWkka5TFUs0VWFMYSm69jYiIK7aR3V1y2D9M6/rergLKJqDYQOpcLUF2Ed94WZ5fIxwl7+wnv3HfyiOp7pcopOSUbJIe/XqdEj0c5Iiqj393wt73DXZqffPztSesTUNZxPcpA0ZLuhd293OoNUKzR3nXzCVefqvlymRf9a2h25Mq9oiy7biHHCoHkitee79K/wKzSi3XSI1ICPwpe6g8h5nLBQoklJGrgKoV4wtYQgtBbw0BdlPWpK8lBSFU6CWv5nq4bq41HI/50KSI+0XZKPVafVcqj146942svjspTLQ2SsrmW9APy/MFckFS5pYr6Ur7v/D0H7wU/VJZFLrFINVDTXMLHfyqa01oGJiTNmRwERqHY59kCp3zOwH81euOmoPJyt6P/vtyZtBgBAmojFLTwr59oX18BNt/j6m3QY7oOXPei4wVeo993C7pubOi62/FKuj5E136jfqvZq9PxjLf/AQ==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7D33BA6D67FF3E05307991F0ACA6F</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>CA</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7D33BA6D67FF3E05307991F0ACA6F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7D33BA6D67FF3E05307991F0ACA6F</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7BEACC074469DE05305991F0A52FF</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7BEACC074469DE05305991F0A52FF</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7BF43F8E74CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7BF43F8E74CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2003-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2003-11-17</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>07C7BEACC074469DE05305991F0A52FF</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00030_Account and User Create with GB  111_SecondFullUserCreate_107_SUCCESS_P0" searchProperties="true" id="e4fe853d-f34d-40a8-bcba-3d40ea80b5fa"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="d3e246f5-7987-455e-8f71-7fe278c62d38"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="ece5a0a0-3b27-4ae1-95e3-c7f58d9c1521"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","GB");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="a7cacf14-7889-4874-9237-7c861043e1f6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="5b795471-6f9d-48ca-b1b9-76c19df1080b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFullUserCreate" id="f32457b6-6c29-4233-93fa-46768f768e07"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create" id="5f4f972d-dde5-4b1c-bed6-64f0ed417992"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZrU/I6EP4rTP34TumFS6EjzFQuTl9RERDQL05IA0TbpCQpoL/+JAUqIHg451Nnt5vdZy95stccRKHtepwjJjAluXUUEu6m2pqWMOJSwDF3CYgQdwV0+959x7Xzpgt2R7Sc36xpb+akUiyXS6aOJmVLL05ASa8WzaluA9O0raBSKk4dacp5gnzCBSCiptmmVdQtS7eKA9N0CxW3WMlXndKrlhsixqVvaZI3tS2oNa9pcyFi1zBWq1V+VchTNjNs07SM8X2nD+coAlr9epNRGojVt/YwHyCIwhDmIY2Ma+PA5jrgbh/PCBAJQ9tYwblYpmFWDWkTcDy70rKzKPDJlKZiAxBKMAQh/gKqPvdIzGmQ88IZZVjMo7NJWKZyrKM11KFVJFeacQjtQkcHCBkHOp8Da+urh6aIIQJR7rnn17Sry7qWHh0wQPiUsogfiv8NDyJLFNIYBTrfpbWFdrnDE5WqXyPo+gSGCcdL9KCGNQYQ8W03EbzcVa7L0BSvO5jLAV1zhc7Yh3ckbqrRxDPExf9p0F5zNk6GIExQvdxb3z8FXmnUf1r5T50KiB4jjG9v5x6tpQD2jVNF1tqNeDSU2RBtTsTv8XPVsT96y/KCVRIr7JgtxysXugz24j+v1dm4ORuFRjLovnyN2jDw14PmYjSi1jsdLfumAYLBjMVJi7fu+ZItVvFf4azuXtq3gUPhsFh5fbBxiQ5HTw0vImP/pWLcvHYa7bkPFsCL78TLkP7tWmTSLgxex6Ovxnh4+ydsNqrec3dl3C1Y9ePlYbyqNp+7sJals4f/ULe78/1k8o6g2IlqDPxmri27BMTvZKY0ONCnqakbK/LhAhGh1dUpxR1uIukOB67s4UY2nYbTLFScQsPznHbba5mlgulUq1bb9MqNhrkjmQ2KI4gNSqZYxVKUuxmb3wHCyOWIBIjpS5pIpuPaLx6bQICcT3ryElDC0YBKeo6cCFbe7RKjBdMKv9aBE3I44eRTyz1Q8UgemTcViB1ycuGAk3sI4hgjRdxqrrkcbC5kLRZgmYjQyi9BnqBEUjtTLOvaxUrJ4DiKQ6SQGhENkhDl43mcVsbgm6+tA8hTba81SG/b2byO/+1KIG0CrAy4yuUGyTaiE49LYZfI+YTL+wnv3HtJgNXFkvUUDMMNksNf32Oi5iObEZnRW6P/Zu1wZ+YXH/950vgFlHFcjyxQsMR7YXdPt3wEJG3Ud91cgPwinyyXSdo/R9Ejk+4lZ1klw7SNPoKJJLbPAf1AxMi8GBe9Ihnwo+CZ/hBiIuakL4BAkRy4XCpesDb0EVdrgy9vyvrSneQgpCydQGtxStcI5cqjEP+6FUEXKjup7srPirLgu2MnfO3FkXnKrUFgMlOSekE+z8wFpNItltxH2b7zUw5OBT9UZkXOsAg5UJNEoPN/corUahqAkCZE+E0tVewTbYpTfMbI/Tb64Sbl8my5w/++3ek4HQGI5ErIcepfvdGuugJktkfW26DHfH3T8iQzV4vFcrWZ8nVpw9clu93OinKArv5D/VOzV6fjGa//Aw==</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_060944</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_060957</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_060957</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_060957</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZrU/I6EP4rTP34TumFS6EjzFQuTl9RERDQL05IA0TbpCQpoL/+JAUqIHg451Nnt5vdZy95stccRKHtepwjJjAluXUUEu6m2pqWMOJSwDF3CYgQdwV0+959x7Xzpgt2R7Sc36xpb+akUiyXS6aOJmVLL05ASa8WzaluA9O0raBSKk4dacp5gnzCBSCiptmmVdQtS7eKA9N0CxW3WMlXndKrlhsixqVvaZI3tS2oNa9pcyFi1zBWq1V+VchTNjNs07SM8X2nD+coAlr9epNRGojVt/YwHyCIwhDmIY2Ma+PA5jrgbh/PCBAJQ9tYwblYpmFWDWkTcDy70rKzKPDJlKZiAxBKMAQh/gKqPvdIzGmQ88IZZVjMo7NJWKZyrKM11KFVJFeacQjtQkcHCBkHOp8Da+urh6aIIQJR7rnn17Sry7qWHh0wQPiUsogfiv8NDyJLFNIYBTrfpbWFdrnDE5WqXyPo+gSGCcdL9KCGNQYQ8W03EbzcVa7L0BSvO5jLAV1zhc7Yh3ckbqrRxDPExf9p0F5zNk6GIExQvdxb3z8FXmnUf1r5T50KiB4jjG9v5x6tpQD2jVNF1tqNeDSU2RBtTsTv8XPVsT96y/KCVRIr7JgtxysXugz24j+v1dm4ORuFRjLovnyN2jDw14PmYjSi1jsdLfumAYLBjMVJi7fu+ZItVvFf4azuXtq3gUPhsFh5fbBxiQ5HTw0vImP/pWLcvHYa7bkPFsCL78TLkP7tWmTSLgxex6Ovxnh4+ydsNqrec3dl3C1Y9ePlYbyqNp+7sJals4f/ULe78/1k8o6g2IlqDPxmri27BMTvZKY0ONCnqakbK/LhAhGh1dUpxR1uIukOB67s4UY2nYbTLFScQsPznHbba5mlgulUq1bb9MqNhrkjmQ2KI4gNSqZYxVKUuxmb3wHCyOWIBIjpS5pIpuPaLx6bQICcT3ryElDC0YBKeo6cCFbe7RKjBdMKv9aBE3I44eRTyz1Q8UgemTcViB1ycuGAk3sI4hgjRdxqrrkcbC5kLRZgmYjQyi9BnqBEUjtTLOvaxUrJ4DiKQ6SQGhENkhDl43mcVsbgm6+tA8hTba81SG/b2byO/+1KIG0CrAy4yuUGyTaiE49LYZfI+YTL+wnv3HtJgNXFkvUUDMMNksNf32Oi5iObEZnRW6P/Zu1wZ+YXH/950vgFlHFcjyxQsMR7YXdPt3wEJG3Ud91cgPwinyyXSdo/R9Ejk+4lZ1klw7SNPoKJJLbPAf1AxMi8GBe9Ihnwo+CZ/hBiIuakL4BAkRy4XCpesDb0EVdrgy9vyvrSneQgpCydQGtxStcI5cqjEP+6FUEXKjup7srPirLgu2MnfO3FkXnKrUFgMlOSekE+z8wFpNItltxH2b7zUw5OBT9UZkXOsAg5UJNEoPN/corUahqAkCZE+E0tVewTbYpTfMbI/Tb64Sbl8my5w/++3ek4HQGI5ErIcepfvdGuugJktkfW26DHfH3T8iQzV4vFcrWZ8nVpw9clu93OinKArv5D/VOzV6fjGa//Aw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BEACC094469DE05305991F0A52FF</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>GB</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7BEACC094469DE05305991F0A52FF</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BEACC094469DE05305991F0A52FF</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7D3873CAA7FFAE05307991F0A6CC0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7D3873CAA7FFAE05307991F0A6CC0</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7D8B39CA87B61E05305991F0AA4E4</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7D8B39CA87B61E05305991F0AA4E4</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2003-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1995-11-19</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00031_Account and User Create with GB 111_StandardYouthUserCreate_107_SUCCESS_P0" searchProperties="true" id="333edc28-29d8-466a-b515-956b3dd642e0"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="ba93db88-81b1-45e2-978b-5ec66f93ba68"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="95f0e99e-0f1f-4d2e-b0d2-860a1f7cdeaf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","GB");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="611dd34a-7ff6-46f5-bf46-b2df846f7bc7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="21118fea-cfa7-439e-85fb-0907e3206fa9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUserCreate" id="5ee8ac3f-c000-40d5-8b4a-cdc24c494679"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StandardYouthUserCreate" id="4fa21002-5b99-46ff-ae40-8d686021c49b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc+o4DP4rTM5zyBUCmcJMgNJyFtpCaLenLx3XEeA2sWnsBNpfv3aAFOhl2X2BkSJLny7+rDOOktj2A84hFYTRyjqJKfcLbUvLUuozxAn3KUqA+wL7YTAa+nbV9NHuiFYZ9Fra41Ot6Zq44enIkz9uvWHqjRnU9JrlzDw3shr2zJWmnGcwoFwgKlqabVqublm65U5N03eavulVpeGDVrmDlEvf0qRqaltQa97SFkIsfcNYrVbVlVNl6dywTdMy7kfDEC8gQVr7bJNREShtb+1xNQIMcYyrmCXGmXFgcxZxPyRzikSWwjZW9F0s0zCbhrSJOJn/0sqzEA3ojBViF1FGCUYxeUeqPiMQCxZVgnjOUiIWybdJWKZyrMMa69hy6S/NOIR2oqMDhClHOl8ga+trAjNIgWKo3E4GLe3XaV0rjk5TRPmMpQk/FP8bHqA5xGwJkc53aW2hne7wi0q1zwD7A4rjjJMcrtSwLhEGvu0m4NNdVW5SmJH1kHA5oGuu0Bn78I7ETTV6ZA5c/J8G7TVn4+QOxRm03eby7jm8HKKHxLlKxtPximQXq8bvzPjTKgDsGxeKsrUb8WgoyyHanBBdw0Ld8TnuXFjOTSewMLGuMsjXnXzeGKKrZERqzT7CnvDy/jubpmPBzifTcfCX6E8W8zxYTIfDlDihuKhFzu3l28u0Xgd38VCvN5+u09unh/HVtX3z3s3N59q9eTckweuI3Yvk0o7/ONOhyb3Qum7cvv8m0S0bWs9h3Ou6L8Zo+v4gr/KYDv4Ob6+dMJm9tMp09vAf6nZ3PsyengGLnajGYNCr9GWXkPiZzJSGRPqsMPWXiny4ACq0tjqluMPPJN2RyJc93Mim1/V6jtMJPNPx+n3n3Kw5ptdsWn0z6Ab1/o5kNiiOIHYZnREVS1HuZmx+BogTnwONINVzlkmm49oPHntIoMqATuQlYJTDlEl6dp9f0wjN6/bb28JuOILKQfTWsa1Vrpi4ptdpMBOQHlKyc0DJE8BkSUDxthprLueaC1mKV5RnIraqOapSyCSzp4pkfdtt1AxOkmUMCqiRsCiLobpcLIvCGHzzb+sI80I7OZ8Wl+3btI6/7SogbSKiDLjKpQOyi/DpbWn4tV0i3ydc30945z7IIqLulSynSAneIDn89DElajzKEZEZPXbDR2uHuzQ/+fjnk8YPoIzjepSBopzshd293PINkKzR3nXzFVVfq1meZ0X/PMWOqXQvKcuqGaZthIAzyWtvU/YC1Ci9GCc9IiXwo+Cl/hBiJhY0FEhAIgeuUognbA0hcLU1DORFWZ+6khyElKUTsBZf6bqx3HgU4h+XIuxjZSfVN/JvxdLoo2Nf+NqLI/OUS4MgdK4k9YC8fTMXmEm3RFIfS/edf+Xgq+CHyrLIJRYhB+opE/D9l4ritJaGMGYZFYOeVij2ebbAKd6W4H8YfXJTUHm525F/X+50UowABrkRclL4V0+0r64Ane9x9TboMV13zoNu1+w4br3ZK+i6tqHrmt0v6foQXfuT+rNmr07HM97+Bw==</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_06102</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_061015</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_061015</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_061015</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc+o4DP4rTM5zyBUCmcJMgNJyFtpCaLenLx3XEeA2sWnsBNpfv3aAFOhl2X2BkSJLny7+rDOOktj2A84hFYTRyjqJKfcLbUvLUuozxAn3KUqA+wL7YTAa+nbV9NHuiFYZ9Fra41Ot6Zq44enIkz9uvWHqjRnU9JrlzDw3shr2zJWmnGcwoFwgKlqabVqublm65U5N03eavulVpeGDVrmDlEvf0qRqaltQa97SFkIsfcNYrVbVlVNl6dywTdMy7kfDEC8gQVr7bJNREShtb+1xNQIMcYyrmCXGmXFgcxZxPyRzikSWwjZW9F0s0zCbhrSJOJn/0sqzEA3ojBViF1FGCUYxeUeqPiMQCxZVgnjOUiIWybdJWKZyrMMa69hy6S/NOIR2oqMDhClHOl8ga+trAjNIgWKo3E4GLe3XaV0rjk5TRPmMpQk/FP8bHqA5xGwJkc53aW2hne7wi0q1zwD7A4rjjJMcrtSwLhEGvu0m4NNdVW5SmJH1kHA5oGuu0Bn78I7ETTV6ZA5c/J8G7TVn4+QOxRm03eby7jm8HKKHxLlKxtPximQXq8bvzPjTKgDsGxeKsrUb8WgoyyHanBBdw0Ld8TnuXFjOTSewMLGuMsjXnXzeGKKrZERqzT7CnvDy/jubpmPBzifTcfCX6E8W8zxYTIfDlDihuKhFzu3l28u0Xgd38VCvN5+u09unh/HVtX3z3s3N59q9eTckweuI3Yvk0o7/ONOhyb3Qum7cvv8m0S0bWs9h3Ou6L8Zo+v4gr/KYDv4Ob6+dMJm9tMp09vAf6nZ3PsyengGLnajGYNCr9GWXkPiZzJSGRPqsMPWXiny4ACq0tjqluMPPJN2RyJc93Mim1/V6jtMJPNPx+n3n3Kw5ptdsWn0z6Ab1/o5kNiiOIHYZnREVS1HuZmx+BogTnwONINVzlkmm49oPHntIoMqATuQlYJTDlEl6dp9f0wjN6/bb28JuOILKQfTWsa1Vrpi4ptdpMBOQHlKyc0DJE8BkSUDxthprLueaC1mKV5RnIraqOapSyCSzp4pkfdtt1AxOkmUMCqiRsCiLobpcLIvCGHzzb+sI80I7OZ8Wl+3btI6/7SogbSKiDLjKpQOyi/DpbWn4tV0i3ydc30945z7IIqLulSynSAneIDn89DElajzKEZEZPXbDR2uHuzQ/+fjnk8YPoIzjepSBopzshd293PINkKzR3nXzFVVfq1meZ0X/PMWOqXQvKcuqGaZthIAzyWtvU/YC1Ci9GCc9IiXwo+Cl/hBiJhY0FEhAIgeuUognbA0hcLU1DORFWZ+6khyElKUTsBZf6bqx3HgU4h+XIuxjZSfVN/JvxdLoo2Nf+NqLI/OUS4MgdK4k9YC8fTMXmEm3RFIfS/edf+Xgq+CHyrLIJRYhB+opE/D9l4ritJaGMGYZFYOeVij2ebbAKd6W4H8YfXJTUHm525F/X+50UowABrkRclL4V0+0r64Ane9x9TboMV13zoNu1+w4br3ZK+i6tqHrmt0v6foQXfuT+rNmr07HM97+Bw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BEACC0B3469DE05305991F0A52FF</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>GB</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7BEACC0B3469DE05305991F0A52FF</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BEACC0B3469DE05305991F0A52FF</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7D33BA7037FF3E05307991F0ACA6F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7D33BA7037FF3E05307991F0ACA6F</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7C2F1FEE44CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7C2F1FEE44CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2003-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1997-11-18</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00032_Account and User Create with GB 111_BasicChildUserCreate_107_SUCCESS_P0" searchProperties="true" id="f14b4541-1b23-403d-ad39-a5c11a6e6ccd"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="c1edd7ab-aa9d-40b9-b7b4-581bf1b44c58"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="f1c03433-0a91-42ec-8d87-314ddb4a0419"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","GB");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="677c3fd5-8281-4657-a9db-e2868aa117b7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="ce126983-dca4-40d7-adfe-e472407b3fe2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for BasicChildUserCreate" id="9730eded-ca78-48cb-a6b5-d4d6c714ebe8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("CHILD_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian",tC.getPropertyValue("LegalGuardian"));

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call BasicChildUserCreate" id="8cf1cb29-474d-44d8-a2e1-06f9e8b33ed4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VyvOYMt4wiytQBSYkzjaZQJbJS0pIDWjGlowlE8jXX8kEB8hyuffJpXYvpxcd9bFASewGXSEgk5SzyjKJmQgKadvIMxZwJKgIGEpABBIHw+7VZeBW7QBtTIxK1G8bzy7yW36TYLNBkGvW/LFvoonfMkmz5bVQq4EbTVupCpFDxIRETLYN13ZqpuOYTm1k24HXCtxa1faaT0blHjKhfCuVqrJag1qKtjGTMg0s6+XlpfriVXk2tVzbdqzHq8shnkGCjM7xOqMiUNZ508dVAhjiGFcxT6xja0fnmIhgSKcMyTyDt1jkq1i2ZbcspUMEnf4wSlsgEZvw4hgixhnFKKavSNfnCuSMk0o3nvKMylnyZRKOrR2bsMQmdmrsh2HtQjvQ0Q7CTCBTzJDz5usWJpABw1C5u43axo/DulaYjjLExIRnidg9/jc8wBYQ8xSIKTZpvUE73OEnleocAw4ihuNc0AVc62FNEQbx1k3Ah7uq3GQwoctLKtSALoVGZ23D2zuuq9GnUxDy/zRoqzlrJ/cozqHzep6d3vHHs9T7NUrqyQPc8wd7+HqWjE7aBYBt5UJQtnZ93BvKcojWFiR/XNURnTeJddQL69FDdnE0ToDNyeRsOg7j0er0Korc3+ezfoYIuYzm95P8N5mJBnWPVuPwzyD7O0xewf31MH8Kp6cXpxdqauDpZHTkX4/u0odHNk/gPPKfGkd9gm/E0Eb5OZtetHKMbG5fNk+QdZ334vPw9Z7Tp/pVXHtdottwQa5ny/jmxL/uTUIiVnd37TKdLfy7ss2dH+bjP4Dl5qjHIOpXBqpLSH5PZlpCiTkpVINUk4+QwKTR0VaaO4Jc0R0lgerh+mw3wkZv4PRDp9er1VuNE9v3bL/VcgZ21x547oZk1ij2IIacTaiOpSl3PTbfA8RJIIARyMwFzxXTCeMbj30kUSVit+oScCZgxBU9N1tixedpuiLxYoy8eMUV9+HENyrXXP5kP7PuREK2S8neDiXfAqYpBc3beqyFmmshVSnmaJHL2KkuUJVBrpg90ySr7Jq+JWiSxqCBWgkneQzVdJYWhbHE+uuaCItCensyKi7bl2nt/9tUQOkQqhWEzqUHqovwydvibBL5OuH6dsIb992cUH2vVDllRvEaye6v9ynR41GOiMroORw+OxvcpfrB5h8trW9AWfv1KAORBd0Ku3m51RugWKOz6eYcVefVfLHIi/41NDtmyr2iLMe3bNcaAs4Vr61G/C8wq/RiHfSIlMD3gpfyXYi5nLGhRBIUKclKcTxgaxiC0FtDpC7K8tCVZCekKp2EpfxMFsZq49GIv12KcIC1nhLfqM8Lz8h7xz7xtRVH5amWBknZVJ/0A7L6Yi4wV26poj6ebTv/zMFnwXeFZZFLLFIN1DiX8PWfiua0toEw5jmTUd8oBNs8W+CUqxSCd6UPbgoqL3c7+u/LnUmLEcCgNkJBC//6iQ70FWDTLa5+C7pP133P63UbrtcYDLyCrhtrug679UFZlB10nQ/ij5KtOu3PeOcf</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_061019</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_061032</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_061032</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_061032</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VyvOYMt4wiytQBSYkzjaZQJbJS0pIDWjGlowlE8jXX8kEB8hyuffJpXYvpxcd9bFASewGXSEgk5SzyjKJmQgKadvIMxZwJKgIGEpABBIHw+7VZeBW7QBtTIxK1G8bzy7yW36TYLNBkGvW/LFvoonfMkmz5bVQq4EbTVupCpFDxIRETLYN13ZqpuOYTm1k24HXCtxa1faaT0blHjKhfCuVqrJag1qKtjGTMg0s6+XlpfriVXk2tVzbdqzHq8shnkGCjM7xOqMiUNZ508dVAhjiGFcxT6xja0fnmIhgSKcMyTyDt1jkq1i2ZbcspUMEnf4wSlsgEZvw4hgixhnFKKavSNfnCuSMk0o3nvKMylnyZRKOrR2bsMQmdmrsh2HtQjvQ0Q7CTCBTzJDz5usWJpABw1C5u43axo/DulaYjjLExIRnidg9/jc8wBYQ8xSIKTZpvUE73OEnleocAw4ihuNc0AVc62FNEQbx1k3Ah7uq3GQwoctLKtSALoVGZ23D2zuuq9GnUxDy/zRoqzlrJ/cozqHzep6d3vHHs9T7NUrqyQPc8wd7+HqWjE7aBYBt5UJQtnZ93BvKcojWFiR/XNURnTeJddQL69FDdnE0ToDNyeRsOg7j0er0Korc3+ezfoYIuYzm95P8N5mJBnWPVuPwzyD7O0xewf31MH8Kp6cXpxdqauDpZHTkX4/u0odHNk/gPPKfGkd9gm/E0Eb5OZtetHKMbG5fNk+QdZ334vPw9Z7Tp/pVXHtdottwQa5ny/jmxL/uTUIiVnd37TKdLfy7ss2dH+bjP4Dl5qjHIOpXBqpLSH5PZlpCiTkpVINUk4+QwKTR0VaaO4Jc0R0lgerh+mw3wkZv4PRDp9er1VuNE9v3bL/VcgZ21x547oZk1ij2IIacTaiOpSl3PTbfA8RJIIARyMwFzxXTCeMbj30kUSVit+oScCZgxBU9N1tixedpuiLxYoy8eMUV9+HENyrXXP5kP7PuREK2S8neDiXfAqYpBc3beqyFmmshVSnmaJHL2KkuUJVBrpg90ySr7Jq+JWiSxqCBWgkneQzVdJYWhbHE+uuaCItCensyKi7bl2nt/9tUQOkQqhWEzqUHqovwydvibBL5OuH6dsIb992cUH2vVDllRvEaye6v9ynR41GOiMroORw+OxvcpfrB5h8trW9AWfv1KAORBd0Ku3m51RugWKOz6eYcVefVfLHIi/41NDtmyr2iLMe3bNcaAs4Vr61G/C8wq/RiHfSIlMD3gpfyXYi5nLGhRBIUKclKcTxgaxiC0FtDpC7K8tCVZCekKp2EpfxMFsZq49GIv12KcIC1nhLfqM8Lz8h7xz7xtRVH5amWBknZVJ/0A7L6Yi4wV26poj6ebTv/zMFnwXeFZZFLLFIN1DiX8PWfiua0toEw5jmTUd8oBNs8W+CUqxSCd6UPbgoqL3c7+u/LnUmLEcCgNkJBC//6iQ70FWDTLa5+C7pP133P63UbrtcYDLyCrhtrug679UFZlB10nQ/ij5KtOu3PeOcf</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7D33BA7237FF3E05307991F0ACA6F</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>GB</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7D33BA7237FF3E05307991F0ACA6F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7D33BA7237FF3E05307991F0ACA6F</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7BF1DC1BB4697E05305991F0A0F32</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7BF1DC1BB4697E05305991F0A0F32</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7BF43F8FD4CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7BF43F8FD4CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>07C7BF1DC1BB4697E05305991F0A0F32</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00033_Account and User Create with US  111_SecondFullUserCreate_107_SUCCESS_P0" searchProperties="true" id="3b80f4fb-6510-4aa5-a64d-14e407e4922b"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="248e2f6a-4457-42e4-b306-4e9f84073321"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="6e9e1abe-76ce-4109-97fe-eac9c6988faa"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","US");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="51a8c68f-ff95-46de-82bb-1b289555f8c4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="549a9232-a2c3-4ea4-b0c9-23880d5f9473"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFullUserCreate" id="9cab16a4-9f4a-4008-9324-e68b2d203714"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create" id="e0a112ab-fbf9-4cce-a3cc-321da6fa709c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU/JIEP0rVHy0Qq6ASQlVEXCNymUB+dQXa5x0YDRMIDPh4q/fmQAREFx2n1Ld6ek+fZkzfc3QJDJdjzFIOIlpYTmJKHMzbVVJE+rGiBHmUjQB5nLs9r3Wo2sWdRdtjygFv1FV3pz3UgXMSkkNTWSptlEGFVUMWw2R8x4ajo6NUiBMGUvBp4wjyquKqQsDw1ANe6DrruW4tlm8cuxXpTCEhAnfwqSoKxtQS1ZVxpxPXU1bLBbFhVWMk5Fm6rqhPbce+3gME6TUrtcZZYGS2sYeFwPAEEW4iOOJdq3t2VwHzO2TEUU8TWATKzgVS9d0RxM2ASOjCyU/C4FPwzgT64jGlGAUkS8k69MCPo6DgheN4oTw8eRkEoYuHauwxCo2bHqhaPvQznS0hzBhSGVjZGx89SCEBCiGwlPPryoX53UtOzpIEGVhnEzYvvjf8ACdQxRPIVDZNq0NtPMdHqlU7Rqw61McpYzMoS2HdYowsE03AZ/vqtBNICTLR8LEgC6ZRKftwjsQ19VokBEw/n8atNOctZMhilKo3b6+fH1MUbv82V8uvE5wb/jTv5rdp/rYrmYAdo0zRd7atXgwlPkQrU9MnxxiIO318s9qmDidh3YCD3d38NRbDBdXMIl6jb65+oPbDT7uXHrvvdbK/7R6S6fccoYdNLwPfevyvt0m5dkzGRjRQzd8aNbxZ/SSeqOFfcdeYT4Moo7Rxe0lj8wvjEe8oc26/ZLzMSCdZNHumpXP9JXe3D82ydVNyYlCOq7Yz3fo75v653335YE2LdKKuV/N09nBv6/b3vl++v4BmG9FOQZ+o3AruoT472QmNSRQw8zUnUryYRwoV2rylOQONxV0RwJX9HAt65V6pW7aXtnyynbTbjT1kqWXHMe41b0bx7C2JLNGcQCxHtOQyFiSctdj8ztAPHEZ0AASdR6ngumY8ovHBuKo4NOeuAQxZTCIBT0bs7j0voJwtsIRMxJ7PioZ1tdi9mEphXbMO7STeCGHZJ+UrT1S7gEmUwKSueVgMzHZjItizNA85ZFRnKMihVRweyJp1jXtq5LGyGQagYSqTeIgjaA4HU+z0mhs/TVVhFmm7TUH2XU7mdjhv20NhE1ApAGTudyA6CMceV2sbSKnEy7vJrx176UBkTdLFJQnBK+R7P/6nhM5IPmQiIze6v03Y4s7Nz/7+M+T2i+gtMN65IGCOdkJu327xSsgeKO27eYMFWfFdD5Ps/5VJD8mwr0gLaOk6abWB5wKZlsN4k+gWu5FO+sZyYEfBM/1+xBTPqZ9jjhMxMAVMvGMvaEPTO4Nvrgqy3OXkr2QonQclvyYrh6JnUci/nUtwi6WdkLdFZ9FnHwnfszXThyRp1gbOKEjKcknZHViLnAs3BJBfnGy6/yYg2PB95V5kXMsXAzUe8rh9J+CZLWqgjCOU8r9hpIpdpk2w8lXU3C/jX64ycg83+7Iv693KslGAIPYCRnJ/MtH2pVXgI522HoT9JCwG9ZVxarfepXbWy8j7MqasMv1up4XZQ9d7Yf6p2anToczXvsH</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_061038</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_061051</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_061051</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_061051</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbU/JIEP0rVHy0Qq6ASQlVEXCNymUB+dQXa5x0YDRMIDPh4q/fmQAREFx2n1Ld6ek+fZkzfc3QJDJdjzFIOIlpYTmJKHMzbVVJE+rGiBHmUjQB5nLs9r3Wo2sWdRdtjygFv1FV3pz3UgXMSkkNTWSptlEGFVUMWw2R8x4ajo6NUiBMGUvBp4wjyquKqQsDw1ANe6DrruW4tlm8cuxXpTCEhAnfwqSoKxtQS1ZVxpxPXU1bLBbFhVWMk5Fm6rqhPbce+3gME6TUrtcZZYGS2sYeFwPAEEW4iOOJdq3t2VwHzO2TEUU8TWATKzgVS9d0RxM2ASOjCyU/C4FPwzgT64jGlGAUkS8k69MCPo6DgheN4oTw8eRkEoYuHauwxCo2bHqhaPvQznS0hzBhSGVjZGx89SCEBCiGwlPPryoX53UtOzpIEGVhnEzYvvjf8ACdQxRPIVDZNq0NtPMdHqlU7Rqw61McpYzMoS2HdYowsE03AZ/vqtBNICTLR8LEgC6ZRKftwjsQ19VokBEw/n8atNOctZMhilKo3b6+fH1MUbv82V8uvE5wb/jTv5rdp/rYrmYAdo0zRd7atXgwlPkQrU9MnxxiIO318s9qmDidh3YCD3d38NRbDBdXMIl6jb65+oPbDT7uXHrvvdbK/7R6S6fccoYdNLwPfevyvt0m5dkzGRjRQzd8aNbxZ/SSeqOFfcdeYT4Moo7Rxe0lj8wvjEe8oc26/ZLzMSCdZNHumpXP9JXe3D82ydVNyYlCOq7Yz3fo75v653335YE2LdKKuV/N09nBv6/b3vl++v4BmG9FOQZ+o3AruoT472QmNSRQw8zUnUryYRwoV2rylOQONxV0RwJX9HAt65V6pW7aXtnyynbTbjT1kqWXHMe41b0bx7C2JLNGcQCxHtOQyFiSctdj8ztAPHEZ0AASdR6ngumY8ovHBuKo4NOeuAQxZTCIBT0bs7j0voJwtsIRMxJ7PioZ1tdi9mEphXbMO7STeCGHZJ+UrT1S7gEmUwKSueVgMzHZjItizNA85ZFRnKMihVRweyJp1jXtq5LGyGQagYSqTeIgjaA4HU+z0mhs/TVVhFmm7TUH2XU7mdjhv20NhE1ApAGTudyA6CMceV2sbSKnEy7vJrx176UBkTdLFJQnBK+R7P/6nhM5IPmQiIze6v03Y4s7Nz/7+M+T2i+gtMN65IGCOdkJu327xSsgeKO27eYMFWfFdD5Ps/5VJD8mwr0gLaOk6abWB5wKZlsN4k+gWu5FO+sZyYEfBM/1+xBTPqZ9jjhMxMAVMvGMvaEPTO4Nvrgqy3OXkr2QonQclvyYrh6JnUci/nUtwi6WdkLdFZ9FnHwnfszXThyRp1gbOKEjKcknZHViLnAs3BJBfnGy6/yYg2PB95V5kXMsXAzUe8rh9J+CZLWqgjCOU8r9hpIpdpk2w8lXU3C/jX64ycg83+7Iv693KslGAIPYCRnJ/MtH2pVXgI522HoT9JCwG9ZVxarfepXbWy8j7MqasMv1up4XZQ9d7Yf6p2anToczXvsH</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7D3873CFA7FFAE05307991F0A6CC0</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7D3873CFA7FFAE05307991F0A6CC0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7D3873CFA7FFAE05307991F0A6CC0</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7C24A63A64E4DE05305991F0AB913</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7C24A63A64E4DE05305991F0AB913</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7C2F1FEFA4CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7C2F1FEFA4CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1995-11-19</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00034_Account and User Create with US 111_StandardYouthUserCreate_107_SUCCESS_P0" searchProperties="true" id="4fa8dc4b-f9cc-4dd6-89fd-9396312e2c60"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="81df1336-12b4-4515-af29-dbb51b4ce83c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="4066e8b5-b7ed-49ab-b337-660ec995b29a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","US");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="e05c083a-dfa6-48c3-bb0e-0d608ca8bc36"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="3dac06d6-c362-4e1e-8135-a88d0786142a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUserCreate" id="9f3638a9-d371-49d0-80ec-dd947ad33fdb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StandardYouthUserCreate" id="afe60ca4-7677-4a0f-ac9c-9875a9cbfaec"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo6EP0VlP1YhdyAQFSQKJQjVGgLofTyUhlnCIbEobYDtF+/7QAp0MvhnKdoJuOZNRcvzyVHcWR7Tc6BCZLQwiaOKPcybV1LGfUSxAn3KIqBewJ7frPf8+yi6aH9Ea3Qbde112oZSrWJVdJrjlnRS6Y71WvVSkV3yuBOILCRXXakKecpdCkXiIq6ZpvS3rJ0qzQyTc+peeVa0bbLL1phDIxL39KkaGo7UBte12ZCLD3DWK/XxbVTTFho2KZpGU/9no9nECOtcbnNKAvEGjt7XAwAQxThIk5i49I4srkMuOeTkCKRMtjFCn6KZRpmzZA2ASfhHy0/C0GXTpNMbCGaUIJRRD6Qqk8fxCwJCs0oTBgRs/jHJCxTOdZhg3VslegfzTiGdqajI4SMI53PkLXzNYQpMKAYCg/Dbl37c17XsqMjhiifJizmx+J/wwN0BVGyhEDn+7R20M53+E2lGpeAvS7FUcrJCm7VsC4RBr7rJuDzXRXuGUzJpke4HNANV+iMQ3gn4rYabRICF/+nQQfN2ToZoyiFhj1eD+23TaXfZtWrZRoPjJFRnvesqNesZwAOjTNF3tqteDKU+RBtT7QvntBb0Ku0/Chc2NVVe0BK0F8++6N3Iu6j5xYZQNQbPE1JdX7Xf1it/3mC2nRR9WfzYX/c4x9zSpy+27t5+IhfGF+vo/b4yn1EF8SOAQZNyhfVjV1qDV8Eb5UGN+On2S3r++EjiccdVK0goxxHndnCaY4n65fVGl+8T5i5uPa7N/dWOHiehzMnve6JyeO6nqdzgP9Yt7/zfjqZAxZ7UY1Bt13oyC4h8TuZKQ0J9Glm6i0V+XABVGgNdUpxh5dKuiOBJ3u4lU235badquu0rWu302lem2XHdGs1q2M2K62WuSeZLYoTiK2ETomKpSh3Oza/A8Sxx4EGwPRVkkqm49ovHttIoEKXDuUlSCiHUSLp2So5mMX03XIXYS2q2C4LF+48CZlWuE3EHb1jzakAdszJzhEnDwGTJQFF3GquuRxsLmQt3tAqFZFVXKEihVRSO1Ms69mlatngJF5GoJAacRKkERSXs2VWGYNvv7aOMM+0w+tRdtt+zOv0374E0iYgyoCrXK5AthG+eVxK+0R+TrhymPDefTMNiLpYsp6CEbxFcvzrc0zUfOQzIjN6bfmv1h53bn728a8njV9AGaf1yAMFK3IQdv90y0dA0kZj3803VHwrpqtVmvXPVfTIpHvJWVbZMG3DB5xKYnsfJQugRu7FOOsVyYGfBM/1xxBTMaO+QAJiOXCFTDxjbfCBq7WhK2/K5tyd5CikLJ2AjfhO14rkyqMQ/7oVYQ8rO6m+l591woLPjn3j6yCOzFNuDYLQUEnqBXn/YS5wIt0SyX0JO3T+nYPvgh8r8yLnWIQcqEkq4Oc/BUVqdQ1hnKRUdNtapjgk2gyneF+C92n0xU3G5flyR/59u9NJNgIY5ErISeZfvdGeugI0PCDrXdBTvr7qWO2Wdd0pVWpuxtflLV+bHcfOi3KErvFF/VVzUKfTGW/8BQ==</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_061055</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_06116</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_06116</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_06116</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuo6EP0VlP1YhdyAQFSQKJQjVGgLofTyUhlnCIbEobYDtF+/7QAp0MvhnKdoJuOZNRcvzyVHcWR7Tc6BCZLQwiaOKPcybV1LGfUSxAn3KIqBewJ7frPf8+yi6aH9Ea3Qbde112oZSrWJVdJrjlnRS6Y71WvVSkV3yuBOILCRXXakKecpdCkXiIq6ZpvS3rJ0qzQyTc+peeVa0bbLL1phDIxL39KkaGo7UBte12ZCLD3DWK/XxbVTTFho2KZpGU/9no9nECOtcbnNKAvEGjt7XAwAQxThIk5i49I4srkMuOeTkCKRMtjFCn6KZRpmzZA2ASfhHy0/C0GXTpNMbCGaUIJRRD6Qqk8fxCwJCs0oTBgRs/jHJCxTOdZhg3VslegfzTiGdqajI4SMI53PkLXzNYQpMKAYCg/Dbl37c17XsqMjhiifJizmx+J/wwN0BVGyhEDn+7R20M53+E2lGpeAvS7FUcrJCm7VsC4RBr7rJuDzXRXuGUzJpke4HNANV+iMQ3gn4rYabRICF/+nQQfN2ToZoyiFhj1eD+23TaXfZtWrZRoPjJFRnvesqNesZwAOjTNF3tqteDKU+RBtT7QvntBb0Ku0/Chc2NVVe0BK0F8++6N3Iu6j5xYZQNQbPE1JdX7Xf1it/3mC2nRR9WfzYX/c4x9zSpy+27t5+IhfGF+vo/b4yn1EF8SOAQZNyhfVjV1qDV8Eb5UGN+On2S3r++EjiccdVK0goxxHndnCaY4n65fVGl+8T5i5uPa7N/dWOHiehzMnve6JyeO6nqdzgP9Yt7/zfjqZAxZ7UY1Bt13oyC4h8TuZKQ0J9Glm6i0V+XABVGgNdUpxh5dKuiOBJ3u4lU235badquu0rWu302lem2XHdGs1q2M2K62WuSeZLYoTiK2ETomKpSh3Oza/A8Sxx4EGwPRVkkqm49ovHttIoEKXDuUlSCiHUSLp2So5mMX03XIXYS2q2C4LF+48CZlWuE3EHb1jzakAdszJzhEnDwGTJQFF3GquuRxsLmQt3tAqFZFVXKEihVRSO1Ms69mlatngJF5GoJAacRKkERSXs2VWGYNvv7aOMM+0w+tRdtt+zOv0374E0iYgyoCrXK5AthG+eVxK+0R+TrhymPDefTMNiLpYsp6CEbxFcvzrc0zUfOQzIjN6bfmv1h53bn728a8njV9AGaf1yAMFK3IQdv90y0dA0kZj3803VHwrpqtVmvXPVfTIpHvJWVbZMG3DB5xKYnsfJQugRu7FOOsVyYGfBM/1xxBTMaO+QAJiOXCFTDxjbfCBq7WhK2/K5tyd5CikLJ2AjfhO14rkyqMQ/7oVYQ8rO6m+l591woLPjn3j6yCOzFNuDYLQUEnqBXn/YS5wIt0SyX0JO3T+nYPvgh8r8yLnWIQcqEkq4Oc/BUVqdQ1hnKRUdNtapjgk2gyneF+C92n0xU3G5flyR/59u9NJNgIY5ErISeZfvdGeugI0PCDrXdBTvr7qWO2Wdd0pVWpuxtflLV+bHcfOi3KErvFF/VVzUKfTGW/8BQ==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF1DC1EF4697E05305991F0A0F32</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7BF1DC1EF4697E05305991F0A0F32</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF1DC1EF4697E05305991F0A0F32</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7D3873D1E7FFAE05307991F0A6CC0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7D3873D1E7FFAE05307991F0A6CC0</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7BF43F9134CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7BF43F9134CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2000-11-17</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00035_Account and User Create with US 111_BasicChildUserCreate_107_SUCCESS_P0" searchProperties="true" id="d8bb0051-c356-476d-8f93-3914fdd67a0e"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="ae1bda17-3ae0-4ff8-b113-3dc979296e2a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="99d6357a-04e5-4172-9329-1752bcc7bd26"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","US");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="cfeadb41-8b5d-4fd2-b6fb-ebecfb70dca0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="1902bcad-9c20-4e90-9750-d0c1dec94afb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for BasicChildUserCreate" id="7731d547-40b9-4d17-9128-03be8633fc35"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("CHILD_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian",tC.getPropertyValue("LegalGuardian"));

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call BasicChildUserCreate" id="befe13b2-4930-4a7c-9983-7c0d15114833"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZZc+I4EP4rlOdxy1g25nIFqhyOLCkICUd2wktKyA2IGMmxZI759SMZ8AA5lt0nV7db3V8f+tQ3Aq9Cx/OFgFhSznLbVciEl2prRhIzj2NBhcfwCoQniTf0e13PySMPH48YuU6zZrxi2w0KAaqa1WkZme5s5phT4hTMom0Td4rtKXIrylSIBDpMSMxkzXCQ7Zq2bdruCCHPRZ7t5kvImRi5Z4iF8q1M8sg4gNqKmrGQMvIsa7PZ5DeFPI/nloOQbf3sdYdkASts1G/2GaWB4vrBnuQDIBCGJE/4yrqxzmxuAuEN6ZxhmcRwiBV8FQtZqGopm0DQ+Q8jOwtBh814KjYw44wSHNJfWNenB3LBg5wfznlM5WL1ZRI20o5N2BKT2C77YVjn0K50dIYwFtgUC2wffA1gBjEwArnxoFMzflzXtfToKMZMzHi8Eufif8MDbA0hjyAwxTGtA7TrHX5SqfoNEK/DSJgIuoYHPawRJiAO3QRyvavcYwwzuu1SoQZ0KzQ66xTehbivRpPOQcj/06CT5uydPOMwgTq8TJZd6N09jjdvm+pfLboNf1Hr16b10KulAE6NU0XW2r14MZTZEO1PxL0hXw4r/I0+d4nfj2xReinf7+62nWbzfjSoJmHv71nUfWbFymZTgs3SCvov/4zunp/a0x4S3Wl7uiuWe27bmePbl3CMmr3GfVAlbPQ0Xo/7w5JzWx7/bI2W5aeG9OPK5C0kd2u//7bu4+ip1eyQYFCWUQ/YrFEgS6vgy25XxpNHdzK3+OMk8ZeT27fxnDx2alk6J/jPdcc7P0ymSyDyKOox6DRzbdUlLL8nM62hgTlLTb1Ik4+QwKRR16c0d3iJojsaeKqHexmVG+VmoVIuNF2n3G77LVQsoHK1areRX2o00JFk9iguIDY4m1EdS1Pufmy+B0hWngAWQGyueaKYThjfeGxiiXMdNlCXgDMBI67omVV4Zbbd7ZZJCez3QqG4iELkxNuCkXvgss/6sT+TEJ9zcuGMkwdAaERBE7eea6EGW0hVi3e8TmRo59c4zyBR1B5rlvUct1K0BF1FIWik1ooHSQj5aBGllbHE/uuYmIhUO2iN0tv2ZV6X/44lUDYB1QZC53ILqo3wyeOCjol8nXDpNOGjez8JqL5Yqp4ypmSP5PzXnzHR85HNiMrotTF8tY+4M/Orj388aX0DyrqsRxYoWNOTsMenWz0Cijbqx26+4/x7Plmvk7R/ZU2PsXKvOMsuWsixhkASRWy7EX8DZmVerKtekQz4RfBMfw4xkQs2lFjCSg1cLhWvWBuGIPTa0FE3ZXvtTnIWUpVOwlZ+pmuEauXRiL/diohHtJ1SP6rPhsfBn4594uskjspTbQ2SsrmW9Auy+2IuCFduqeI+Hp86/8zBZ8HPlVmRMyxSDdQ0kfD1n5wmtZqBCeEJk52mkSpOiTbFKXcReH+MPrhJuTxb7ui/b3cmTUeAgFoJBU396zfa01eAzU/I+hD0kq9vW36jYSPfLVWbKV8X93xddNrtrChn6Oof1B81J3W6nPH6bw==</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_061110</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_061121</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_061121</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_061121</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZZc+I4EP4rlOdxy1g25nIFqhyOLCkICUd2wktKyA2IGMmxZI759SMZ8AA5lt0nV7db3V8f+tQ3Aq9Cx/OFgFhSznLbVciEl2prRhIzj2NBhcfwCoQniTf0e13PySMPH48YuU6zZrxi2w0KAaqa1WkZme5s5phT4hTMom0Td4rtKXIrylSIBDpMSMxkzXCQ7Zq2bdruCCHPRZ7t5kvImRi5Z4iF8q1M8sg4gNqKmrGQMvIsa7PZ5DeFPI/nloOQbf3sdYdkASts1G/2GaWB4vrBnuQDIBCGJE/4yrqxzmxuAuEN6ZxhmcRwiBV8FQtZqGopm0DQ+Q8jOwtBh814KjYw44wSHNJfWNenB3LBg5wfznlM5WL1ZRI20o5N2BKT2C77YVjn0K50dIYwFtgUC2wffA1gBjEwArnxoFMzflzXtfToKMZMzHi8Eufif8MDbA0hjyAwxTGtA7TrHX5SqfoNEK/DSJgIuoYHPawRJiAO3QRyvavcYwwzuu1SoQZ0KzQ66xTehbivRpPOQcj/06CT5uydPOMwgTq8TJZd6N09jjdvm+pfLboNf1Hr16b10KulAE6NU0XW2r14MZTZEO1PxL0hXw4r/I0+d4nfj2xReinf7+62nWbzfjSoJmHv71nUfWbFymZTgs3SCvov/4zunp/a0x4S3Wl7uiuWe27bmePbl3CMmr3GfVAlbPQ0Xo/7w5JzWx7/bI2W5aeG9OPK5C0kd2u//7bu4+ip1eyQYFCWUQ/YrFEgS6vgy25XxpNHdzK3+OMk8ZeT27fxnDx2alk6J/jPdcc7P0ymSyDyKOox6DRzbdUlLL8nM62hgTlLTb1Ik4+QwKRR16c0d3iJojsaeKqHexmVG+VmoVIuNF2n3G77LVQsoHK1areRX2o00JFk9iguIDY4m1EdS1Pufmy+B0hWngAWQGyueaKYThjfeGxiiXMdNlCXgDMBI67omVV4Zbbd7ZZJCez3QqG4iELkxNuCkXvgss/6sT+TEJ9zcuGMkwdAaERBE7eea6EGW0hVi3e8TmRo59c4zyBR1B5rlvUct1K0BF1FIWik1ooHSQj5aBGllbHE/uuYmIhUO2iN0tv2ZV6X/44lUDYB1QZC53ILqo3wyeOCjol8nXDpNOGjez8JqL5Yqp4ypmSP5PzXnzHR85HNiMrotTF8tY+4M/Orj388aX0DyrqsRxYoWNOTsMenWz0Cijbqx26+4/x7Plmvk7R/ZU2PsXKvOMsuWsixhkASRWy7EX8DZmVerKtekQz4RfBMfw4xkQs2lFjCSg1cLhWvWBuGIPTa0FE3ZXvtTnIWUpVOwlZ+pmuEauXRiL/diohHtJ1SP6rPhsfBn4594uskjspTbQ2SsrmW9Auy+2IuCFduqeI+Hp86/8zBZ8HPlVmRMyxSDdQ0kfD1n5wmtZqBCeEJk52mkSpOiTbFKXcReH+MPrhJuTxb7ui/b3cmTUeAgFoJBU396zfa01eAzU/I+hD0kq9vW36jYSPfLVWbKV8X93xddNrtrChn6Oof1B81J3W6nPH6bw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BEACC10A469DE05305991F0A52FF</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7BEACC10A469DE05305991F0A52FF</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BEACC10A469DE05305991F0A52FF</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7D3873D427FFAE05307991F0A6CC0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7D3873D427FFAE05307991F0A6CC0</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7C2F1FF104CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7C2F1FF104CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2003-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2003-11-17</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>07C7D3873D427FFAE05307991F0A6CC0</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00036_Account and User Create with AT 107_SecondFullUserCreate_111_SUCCESS_P0" searchProperties="true" id="df317826-6002-44d6-83ca-11ec5b2526a8"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="3ea35392-7c26-4bed-953c-2155a31860ed"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="2ae69b8d-1936-44dd-a438-6fb4deb7b139"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AT");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="7cfb8933-4535-4554-9349-28c6e61c05c7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="b0db0f3b-13bc-4f60-bef7-988ada12f5d6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFullUserCreate" id="6d1a9a18-9920-4b72-bfee-01fdabfdccf5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create" id="7cbb9cce-b791-498c-ae99-f790192940f7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZWwZE8AVqAIcdqASQoAhk7ykFLkNCrZkLJmQ+fqRDHiAXJbdJ5fardOnLzrSpcBx5HhtISCVlLPSJo6Y8HJr08hS5nEsqPAYjkF4kniT9s2155RtD++3GKW+3zSeKiSoo7Bim3BhI9NtNLD5jAgxSTWAalizkWtXlasQGfSZkJjJpuEoq4mQidypbXuu7TmNcsNBj0ZpBqlQ2MqlbBs7UhvRNBZSJp5lvb6+ll8rZZ7OLce2kfXr5npCFhBjo3W5zSgPlLZ2/qQcAIEoImXCY+vSOvK5DIQ3oXOGZZbCLlbwWSzbshuW8gkEnX8zir0Q9FnI82UXM84owRH9jXV9bkAueFBqR3OeUrmIP00C2RrYhI0qGnLZN8M6pnYm0BHDVGBTLDDaYY0hhBQYgdLPcb9pfDuva/nWaYqZCHkai+Plf+MDbA0RTyAwxT6tHbXzAT+oVOsSiNdnJMoEXcNQD2uCCYhdN4GcD1UapRDSzTUVakA3QrOzDumdLLfV8OkchPw/DTpozhZkhqMMWj9mV0O/9lKpkd6q9tK5Q5Edjyauj4E3cwKHzrmhaO12eTKUxRDt4P+558+TaH1jrwaDyXBWvchGi8Fm8WM6+zHknWky/g7utTufrR6oPahOVv0HWnWGwXoID2Tw/Nu3MjvB4aNbS5dc3t4PKWsMvlf9n8P49rFzfbusrUboojfg8Sy5nYpfd4PbuzR+a4+morNeWA8vN9HbFb/rN8Klf79ZVsb3KB0MQ0QX+MYdjNyZHGTIX2M5J80inQP+x7b9mZ9kzy9A5H6px6Dvl3qqS1h+LWbaQgMzzF29RIuPkMCk0dK7tHZ4mZI7Gniqh9u1XevWuk4P9XpO3e1e+Vd2tWLXGg3Us9u9jn+xF5ktixOKXc5CqmNpyd2OzdcESewJYAGk5ppnSumE8QWijyUu9dlYHQLOBEy5kucY23WB4kVGoyVPQvKSLJ3fQWVplIaqgew2bYcS0mNJrhxJ8hgITSho3dZjLdRcC6lKscLrTEaovMZlBplS9lSLrOe49aolaJxEoIlaMQ+yCMrJIskLY4nt1zExEbl1fDXND9unaZ3+21dA+QRUOwidSwdUF+GDuwXtE/k84YvDhPfw7Syg+lypcsqUki2T419/p0SPRzEiKqOn7uQJ7XkX7mdvf7/T+oKUdVqPIlCwpgdh9ze3ugOUarT23Vzh8qqcrddZ3r+aVsdUwVtKJJE1AZIpUXub8iUwq4CwzrpBCtYnkQv7Mb9MLthEYgmxmrZSvjzjyTABoZ8MfXVKNue+R45CqrpJ2MiPbN1IPXc04y9fRMQj2k+ZR+rzytPgb7s+wDqIo/JULwZJ2Vyv9O3x9slQEK5gqdI9nh6CfwTwUfBjY1HkgotU0/ScSfj8T0kLWtPAhPCMyb5v5IZDkc15yrcEvL9O72ByHS8edvTfX3YmzUeAgHoOCprj6/vZ0/PP5gdCvQt6qtWdXr1eq9eRe+F0c62ubrW65trdoihH7FrvzO8tB3U6nfHWHw==</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_061126</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_061140</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_061140</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_061140</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZWwZE8AVqAIcdqASQoAhk7ykFLkNCrZkLJmQ+fqRDHiAXJbdJ5fardOnLzrSpcBx5HhtISCVlLPSJo6Y8HJr08hS5nEsqPAYjkF4kniT9s2155RtD++3GKW+3zSeKiSoo7Bim3BhI9NtNLD5jAgxSTWAalizkWtXlasQGfSZkJjJpuEoq4mQidypbXuu7TmNcsNBj0ZpBqlQ2MqlbBs7UhvRNBZSJp5lvb6+ll8rZZ7OLce2kfXr5npCFhBjo3W5zSgPlLZ2/qQcAIEoImXCY+vSOvK5DIQ3oXOGZZbCLlbwWSzbshuW8gkEnX8zir0Q9FnI82UXM84owRH9jXV9bkAueFBqR3OeUrmIP00C2RrYhI0qGnLZN8M6pnYm0BHDVGBTLDDaYY0hhBQYgdLPcb9pfDuva/nWaYqZCHkai+Plf+MDbA0RTyAwxT6tHbXzAT+oVOsSiNdnJMoEXcNQD2uCCYhdN4GcD1UapRDSzTUVakA3QrOzDumdLLfV8OkchPw/DTpozhZkhqMMWj9mV0O/9lKpkd6q9tK5Q5Edjyauj4E3cwKHzrmhaO12eTKUxRDt4P+558+TaH1jrwaDyXBWvchGi8Fm8WM6+zHknWky/g7utTufrR6oPahOVv0HWnWGwXoID2Tw/Nu3MjvB4aNbS5dc3t4PKWsMvlf9n8P49rFzfbusrUboojfg8Sy5nYpfd4PbuzR+a4+morNeWA8vN9HbFb/rN8Klf79ZVsb3KB0MQ0QX+MYdjNyZHGTIX2M5J80inQP+x7b9mZ9kzy9A5H6px6Dvl3qqS1h+LWbaQgMzzF29RIuPkMCk0dK7tHZ4mZI7Gniqh9u1XevWuk4P9XpO3e1e+Vd2tWLXGg3Us9u9jn+xF5ktixOKXc5CqmNpyd2OzdcESewJYAGk5ppnSumE8QWijyUu9dlYHQLOBEy5kucY23WB4kVGoyVPQvKSLJ3fQWVplIaqgew2bYcS0mNJrhxJ8hgITSho3dZjLdRcC6lKscLrTEaovMZlBplS9lSLrOe49aolaJxEoIlaMQ+yCMrJIskLY4nt1zExEbl1fDXND9unaZ3+21dA+QRUOwidSwdUF+GDuwXtE/k84YvDhPfw7Syg+lypcsqUki2T419/p0SPRzEiKqOn7uQJ7XkX7mdvf7/T+oKUdVqPIlCwpgdh9ze3ugOUarT23Vzh8qqcrddZ3r+aVsdUwVtKJJE1AZIpUXub8iUwq4CwzrpBCtYnkQv7Mb9MLthEYgmxmrZSvjzjyTABoZ8MfXVKNue+R45CqrpJ2MiPbN1IPXc04y9fRMQj2k+ZR+rzytPgb7s+wDqIo/JULwZJ2Vyv9O3x9slQEK5gqdI9nh6CfwTwUfBjY1HkgotU0/ScSfj8T0kLWtPAhPCMyb5v5IZDkc15yrcEvL9O72ByHS8edvTfX3YmzUeAgHoOCprj6/vZ0/PP5gdCvQt6qtWdXr1eq9eRe+F0c62ubrW65trdoihH7FrvzO8tB3U6nfHWHw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF887881462CE05305991F0A740C</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>AT</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7BF887881462CE05305991F0A740C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF887881462CE05305991F0A740C</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7C2F1FF284CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7C2F1FF284CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7BF1DC22D4697E05305991F0A0F32</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7BF1DC22D4697E05305991F0A0F32</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2003-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1995-11-19</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b0db0f3b-13bc-4f60-bef7-988ada12f5d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3ea35392-7c26-4bed-953c-2155a31860ed</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00037_Account and User Create with AT 107_StandardYouthUserCreate_111_SUCCESS_P0" searchProperties="true" id="c5f826c8-ee09-4079-ab97-bd81954fa770"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="b2ca4d41-2a9d-49d5-b5d3-ca4e04f2c286"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="05783ce3-c535-48d9-adf1-0b4a59d84867"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AT");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="7a339b61-284e-415b-a244-be89508dfd77"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="55d0a6f8-52ef-4e53-be70-a739cfb9f815"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUserCreate" id="27a83b9f-de86-4044-a631-0fc72e776141"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StandardYouthUserCreate" id="707f80eb-1e7b-45c7-a61f-4a0aa7f3b71f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU+o6FP4rTH0uvVBp6QgzXMRdBdmCenS/OCFdQLRNIEkB/fU7KVIBL4dzZphhsrou37rkyzoTKE3csCkEcEkYLa3ThIowl9aNjNOQIUFESFEKIpQ4HDX7vdAt2yHamhilqFM3nipeEFQD7JqOB47pBWPbHCuJiWMfBzXXB9+3laoQGURUSERl3XBtxzMdR5nc2nboqV+t7Ff8P0bpHrhQvpVKWVltQK1F3ZhJOQ8ta7ValVeVMuNTy7Vtx3ro90Z4BikyGmebjPJAvPGuj8sxYEgSXMYstc6sPZ2zWIQjMqVIZhzeY8XfxbItu2YpnViQ6YlR2EIc0QnLj21EGSUYJeQN6fr0Qc5YXGomU8aJnKXfJuHY2rEJa2xix6MnhrUP7UhHewi5QKaYIefd1xAmwIFiKN0No7pxclzXctNbjqiYMJ6K/eN/wwN0CQmbQ2yKbVrv0I53+EWlGmeAw4jiJBNkCdd6WOcIg3jvJuDjXZV+c5iQdY8INaBrodFZu/AOjptqdMgUhPw/DdppzsbJPUoyaMwuzqf3r62YXY/f3O7VedRqPi46fGAnXj0HsKucC4rWbo4HQ1kM0cYCkyD7J3jutTKnXR3YzexqEFewlXFn9avX51XSfvSuqy/WsP/4a3Z5cdoSzmQ0emP4pp3eeevmzeXpSzzrV84dmUVWu+9UY38VrJY3wStZDBLLdy/7E+KOHtzHP9b14PKiFz100rdF5SK9Op1E0RrxjN+1gmcuZ/Hd9du450J3OCTtKB0/97y7VrfLeTrw7oasXqSzg39ftr3zo2z8DFhuj3oMok6pq7qE5M9kpiUkNie5ajjX5CMkUGk0tJXmjjBTdEfiUPVwc7b9tn/uVOyW2wkcu9I8t08r9mmt5nTtput53pZkNigOILYZnRAdS1PuZmx+BojTUACNgZtLlimmE8YPHjtIolJEh+oSMCrglil6pouZx2zG529kPRdiCXT6AouqYu9rJgd0wJsTCXyfkit7lDwETOYENG/rsRZqroVUpVigZSYTp7xEZQqZYnauSTZ0veDUEiSdJ6CBWimLswTK89k8L4wlNv+uibDIpcPz2/yyfZvW4bdtBZROTLSC0Lm0QHURvnhbKttEvk+4upvw1n0zi4m+V6qckhO8QbL/6WNK9HgUI6IyemqPnpwt7kL9aPPPltYPoKzDehSB4iXZCbt9udUboFijse3mApUX5Wy5zPL++ZoduXJvKZJ0rBHgTJHa6y17AWoVLqyjXpAC9UHkQr6PL5MzOpJIQqqmrZQfj1gZRiD0yhCpW7I+dh/ZC6nqJmEtv5K1E7XuaMQ/bkQ4xFpPiX+rvxXj8Ue7vvC1E0flqTYGSehUn/Tr8frNUGCm3BLFe4zvOv/KwVfB94VFkQssUk3TOJPw/ZeSJrS6gTBmGZVRx8gFuySb45Svcwg/lD65yXm8WOzIv292JslHAINaBwXJ/ev3OdTzT6c7RP0e9JCrW90g8INa16u67V2u9j27XRRlD13jk/izZKdOhzPe+As=</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_061145</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_061158</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_061158</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_061158</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbU+o6FP4rTH0uvVBp6QgzXMRdBdmCenS/OCFdQLRNIEkB/fU7KVIBL4dzZphhsrou37rkyzoTKE3csCkEcEkYLa3ThIowl9aNjNOQIUFESFEKIpQ4HDX7vdAt2yHamhilqFM3nipeEFQD7JqOB47pBWPbHCuJiWMfBzXXB9+3laoQGURUSERl3XBtxzMdR5nc2nboqV+t7Ff8P0bpHrhQvpVKWVltQK1F3ZhJOQ8ta7ValVeVMuNTy7Vtx3ro90Z4BikyGmebjPJAvPGuj8sxYEgSXMYstc6sPZ2zWIQjMqVIZhzeY8XfxbItu2YpnViQ6YlR2EIc0QnLj21EGSUYJeQN6fr0Qc5YXGomU8aJnKXfJuHY2rEJa2xix6MnhrUP7UhHewi5QKaYIefd1xAmwIFiKN0No7pxclzXctNbjqiYMJ6K/eN/wwN0CQmbQ2yKbVrv0I53+EWlGmeAw4jiJBNkCdd6WOcIg3jvJuDjXZV+c5iQdY8INaBrodFZu/AOjptqdMgUhPw/DdppzsbJPUoyaMwuzqf3r62YXY/f3O7VedRqPi46fGAnXj0HsKucC4rWbo4HQ1kM0cYCkyD7J3jutTKnXR3YzexqEFewlXFn9avX51XSfvSuqy/WsP/4a3Z5cdoSzmQ0emP4pp3eeevmzeXpSzzrV84dmUVWu+9UY38VrJY3wStZDBLLdy/7E+KOHtzHP9b14PKiFz100rdF5SK9Op1E0RrxjN+1gmcuZ/Hd9du450J3OCTtKB0/97y7VrfLeTrw7oasXqSzg39ftr3zo2z8DFhuj3oMok6pq7qE5M9kpiUkNie5ajjX5CMkUGk0tJXmjjBTdEfiUPVwc7b9tn/uVOyW2wkcu9I8t08r9mmt5nTtput53pZkNigOILYZnRAdS1PuZmx+BojTUACNgZtLlimmE8YPHjtIolJEh+oSMCrglil6pouZx2zG529kPRdiCXT6AouqYu9rJgd0wJsTCXyfkit7lDwETOYENG/rsRZqroVUpVigZSYTp7xEZQqZYnauSTZ0veDUEiSdJ6CBWimLswTK89k8L4wlNv+uibDIpcPz2/yyfZvW4bdtBZROTLSC0Lm0QHURvnhbKttEvk+4upvw1n0zi4m+V6qckhO8QbL/6WNK9HgUI6IyemqPnpwt7kL9aPPPltYPoKzDehSB4iXZCbt9udUboFijse3mApUX5Wy5zPL++ZoduXJvKZJ0rBHgTJHa6y17AWoVLqyjXpAC9UHkQr6PL5MzOpJIQqqmrZQfj1gZRiD0yhCpW7I+dh/ZC6nqJmEtv5K1E7XuaMQ/bkQ4xFpPiX+rvxXj8Ue7vvC1E0flqTYGSehUn/Tr8frNUGCm3BLFe4zvOv/KwVfB94VFkQssUk3TOJPw/ZeSJrS6gTBmGZVRx8gFuySb45Svcwg/lD65yXm8WOzIv292JslHAINaBwXJ/ev3OdTzT6c7RP0e9JCrW90g8INa16u67V2u9j27XRRlD13jk/izZKdOhzPe+As=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF88789F462CE05305991F0A740C</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>AT</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7BF88789F462CE05305991F0A740C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF88789F462CE05305991F0A740C</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7E130B2D8103AE05305991F0A2444</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7E130B2D8103AE05305991F0A2444</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7C134D1D0510DE05307991F0A1CDF</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7C134D1D0510DE05307991F0A1CDF</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2003-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-11-18</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>55d0a6f8-52ef-4e53-be70-a739cfb9f815</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b2ca4d41-2a9d-49d5-b5d3-ca4e04f2c286</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00038_Account and User Create with AT 107_BasicChildUserCreate_111_SUCCESS_P0" searchProperties="true" id="6ab4289e-8373-465f-9790-20bc5938e1ef"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="aed94ee9-90b0-49fc-99cb-64b647ef163d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="449a5b32-3765-4417-9876-7b486272bed6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AT");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="dd88b449-657f-4249-8f7b-6275b36f8b5f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="41d9250c-a460-46c5-961b-26890cb14e9a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for BasicChildUserCreate" id="20523bfd-0d1e-40e8-a7d0-88cb350c00c9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("CHILD_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian",tC.getPropertyValue("LegalGuardian"));

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call BasicChildUserCreate" id="875884bc-240d-4885-928d-27d0e32a91df"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynlMGV8wGFyBKrDDxrO5TIDMJHlJKXJjxNgySDIQvn4lAw6Qy7L75Op2q/v0RUd9wVGa2F6Xc2CCZLSyShPKvULb1nJGvQxxwj2KUuCewN6we3Pt2VXTQ7sjWiUM2tpLveWYNdO29TFg0B0X1fRmVMc6bjpR5LRs9NrA0pTzHELKBaKirdmm5eiWpVvOyDQ9x/JMt9qo289a5RcwLn1Lk6qpbUGteFubCDHzDGO5XFaXtWrGYsM2Tct4vLke4gmkSOtcbDIqArHO1h5XI4kqSXAVZ6lxYRzYXETcG5KYIpEz2MaKvoplGmbLkDYRJ/GZVp6FKKTjrBB9RDNKMErIGqn63ICYZFGlm8QZI2KSfpmEZSrHOqxk0SyHnmnGIbQTHR0gZBzpfIKsra8BjIEBxVB5GIRt7ey0rhVHRwxRPs5Yyg/F/4YH6AKSbAaRzndpbaGd7vCTSnUuAHshxUnOyQJu1bDOEAa+7Sbg011VfjIYk9U14XJAV1yhM/bhHYmbagQkBi7+T4P2mrNx8gslOXSuc84Snz727lJh/gjX562/fz/34knLeGoXAPaNC0XZ2o14NJTlEG1OrAfudNG/HNw3uv45t8bPf8KHeXcauucJz7p9DHE6bKS4dxVcOjXW5cPHxVN8/3D/8HoF6yvXvXt1roY1hA1m+zdWLXqa5Dfs92Pv9i1pBCllSRyu2DKdGoE/cppWEDfP59Ph7eN8DpMfAeejHzU3MKHWNyZ/Pdcf/Bl/MqarJ7cfMttp3g7cu3uxXq4Chp12mc4e/kPd7s4P89cpYLET1RiEQaUvu4TE92SmNCTSx4WpN1PkwwVQoXXUKcUdXi7pjkSe7OFGNl3f7fWbTbfZDZyG7V+a9ZpZb7Wsvtl1HdPfkcwGxRFEP6NjomIpyt2MzfcAcepxoBEwfZHlkum49o3HAAlUCelAXoKMchhlkp4FWTg8Xa/M8Sy2EkhEEq+Ws8k61iq3mbijd6w7FsAOObl2wMkDwGRGQBG3mmsuB5sLWYs5WuQisaoLVKWQS2pnimU92ci6wUk6S0AhNdIsyhOoziazojIG33xtHWFeaAeXo+K2fZnX8b9dCaRNRJQBV7n0QLYRPjwuplffJfJ1wo39hHfuu3lE1MWS9RSM4A2Sw1/vY6Lmo5wRmdGLP3yxdrhL85OPfzxpfAPKOK5HGShakL2wu6dbPgKSNjq7bs5RdV7NF4u86J+r6JFJ94ZkScsYAs4lq72Nsj9AjdKFcdITUqI+ilzqD/HlYkKHAglI5bRVCvGEnWEIXO0Mobwmq1MXkoOQsm4CVuIznZ/IfUch/nYlwh5WdlL9U36WGYve2/WJr704Mk+5MghCYyWp5+Pti6HAmXRLJPFlbN/5Zw4+C36oLItcYhFyml5zAV//qShGa2sI4yynIgy0QrHPsgVO8TYD793og5uCyMvNjvz7aqeTYgQwyH2Qk8K/eqA9Nf803mPqbdAPZO3Lptv1hmP1G/tk3WoE9bIoB+g6H9QfNXt1Op7xzj8=</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_06123</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_061215</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_061215</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_061215</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynlMGV8wGFyBKrDDxrO5TIDMJHlJKXJjxNgySDIQvn4lAw6Qy7L75Op2q/v0RUd9wVGa2F6Xc2CCZLSyShPKvULb1nJGvQxxwj2KUuCewN6we3Pt2VXTQ7sjWiUM2tpLveWYNdO29TFg0B0X1fRmVMc6bjpR5LRs9NrA0pTzHELKBaKirdmm5eiWpVvOyDQ9x/JMt9qo289a5RcwLn1Lk6qpbUGteFubCDHzDGO5XFaXtWrGYsM2Tct4vLke4gmkSOtcbDIqArHO1h5XI4kqSXAVZ6lxYRzYXETcG5KYIpEz2MaKvoplGmbLkDYRJ/GZVp6FKKTjrBB9RDNKMErIGqn63ICYZFGlm8QZI2KSfpmEZSrHOqxk0SyHnmnGIbQTHR0gZBzpfIKsra8BjIEBxVB5GIRt7ey0rhVHRwxRPs5Yyg/F/4YH6AKSbAaRzndpbaGd7vCTSnUuAHshxUnOyQJu1bDOEAa+7Sbg011VfjIYk9U14XJAV1yhM/bhHYmbagQkBi7+T4P2mrNx8gslOXSuc84Snz727lJh/gjX562/fz/34knLeGoXAPaNC0XZ2o14NJTlEG1OrAfudNG/HNw3uv45t8bPf8KHeXcauucJz7p9DHE6bKS4dxVcOjXW5cPHxVN8/3D/8HoF6yvXvXt1roY1hA1m+zdWLXqa5Dfs92Pv9i1pBCllSRyu2DKdGoE/cppWEDfP59Ph7eN8DpMfAeejHzU3MKHWNyZ/Pdcf/Bl/MqarJ7cfMttp3g7cu3uxXq4Chp12mc4e/kPd7s4P89cpYLET1RiEQaUvu4TE92SmNCTSx4WpN1PkwwVQoXXUKcUdXi7pjkSe7OFGNl3f7fWbTbfZDZyG7V+a9ZpZb7Wsvtl1HdPfkcwGxRFEP6NjomIpyt2MzfcAcepxoBEwfZHlkum49o3HAAlUCelAXoKMchhlkp4FWTg8Xa/M8Sy2EkhEEq+Ws8k61iq3mbijd6w7FsAOObl2wMkDwGRGQBG3mmsuB5sLWYs5WuQisaoLVKWQS2pnimU92ci6wUk6S0AhNdIsyhOoziazojIG33xtHWFeaAeXo+K2fZnX8b9dCaRNRJQBV7n0QLYRPjwuplffJfJ1wo39hHfuu3lE1MWS9RSM4A2Sw1/vY6Lmo5wRmdGLP3yxdrhL85OPfzxpfAPKOK5HGShakL2wu6dbPgKSNjq7bs5RdV7NF4u86J+r6JFJ94ZkScsYAs4lq72Nsj9AjdKFcdITUqI+ilzqD/HlYkKHAglI5bRVCvGEnWEIXO0Mobwmq1MXkoOQsm4CVuIznZ/IfUch/nYlwh5WdlL9U36WGYve2/WJr704Mk+5MghCYyWp5+Pti6HAmXRLJPFlbN/5Zw4+C36oLItcYhFyml5zAV//qShGa2sI4yynIgy0QrHPsgVO8TYD793og5uCyMvNjvz7aqeTYgQwyH2Qk8K/eqA9Nf803mPqbdAPZO3Lptv1hmP1G/tk3WoE9bIoB+g6H9QfNXt1Op7xzj8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BC49225641F6E05305991F0A96D5</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>AT</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7BC49225641F6E05305991F0A96D5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BC49225641F6E05305991F0A96D5</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7BF8878AD462CE05305991F0A740C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7BF8878AD462CE05305991F0A740C</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7BF1DC2434697E05305991F0A0F32</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7BF1DC2434697E05305991F0A0F32</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2002-11-17</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>07C7BF8878AD462CE05305991F0A740C</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>41d9250c-a460-46c5-961b-26890cb14e9a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aed94ee9-90b0-49fc-99cb-64b647ef163d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00039_Account and User Create with DE 107_SecondFullUserCreate_111_SUCCESS_P0" searchProperties="true" id="7ca6fdaf-595e-4517-9175-0ae6f2960054"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="717b77aa-cd41-41e0-8207-35f5d85bf7bd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="6e6096d8-7618-4e38-9e39-9d1bc2e70edf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","DE");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="5dbe6b96-5625-41a6-87cb-7312ff9ff4f7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="f3a0e1df-4610-4788-8ad5-8963cb191b21"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFullUserCreate" id="24918124-4b29-42c4-812b-89446b21578d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create" id="626fdb1d-ad5f-446a-bb23-b0d3a8a09293"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZZc+I4EP4rlOdxyvjAiYMrUAU2ZDybYziSyfKSEnIDSmzJWLIh+fUrGfAAOZbdJ1e3W91fH/rUlxwlse11OIdMEEZr6ySm3Cu1LS3PqMcQJ9yjKAHuCeyNOjfXnl03PbQ7otXCoKU9NVzkRk1o6jZ2QXcs19GnDcfVTTMyLauJHNsBacp5DiHlAlHR0mzTcnTL0i1nbJqeY3m2Uz93nYlWe4CMS9/SpG5qW1Br3tIWQqSeYaxWq/qqUWfZ3LBN0zIeb65HeAEJ0tqXm4zKQFl7a4/rEWCIY1zHLDEujQOby4h7IzKnSOQZbGNFn8UyDbNpSJuIk/k3rToLUUhnrBR9RBklGMXkDan63IBYsKjWiecsI2KRfJqEZSrHOqyxji2HftOMQ2gnOjpAmHGk8wWytr6GMIMMKIba/TBsad9O61p5dJwhymcsS/ih+N/wAC0gZilEOt+ltYV2usMPKtW+BOyFFMc5JwXcqmFNEQa+7Sbg013VfmUwI+trwuWArrlCZ+zDOxI31QjIHLj4Pw3aa87GyQOKc2gzNn3EjeH6IXgO7Pjt9fsgw2EyXjrGvFUC2DcuFVVrN+LRUFZDtDkRLu2f3SEh9pU5ePb94fyh9zo/660fU3R3fTcp8kE08Z+Xv/86HyWj1a+rxyKb3eNldP9Cxs+FdTWcrIY3kOLhevZm96IkXnaCv1lhDsa9orucdM/HVz/6vp++3mf3t53JHP1OrC6zRjRYDB7tn/bdNOwGDnfeIgwBevie/Vg9hE00g7Rx3ZwMzIG5BHHjd1arbbpH+A91uzs/yqfPgMVOVGMQBrW+7BISX5OZ0pBIn5WmXqrIhwugQmurU4o7vFzSHYk82cONbLq+2+1fXLgXge+c237PPGuYZ82m1Tc7rmP6O5LZoDiC6DM6IyqWotzN2HwNECceBxpBphcsl0zHtS88BkigWkiH8hIwymHMJD3H2WIqoumLM0svmEArvHh+ewN+ptVumbijd1lnJiA7pOTGASUPAZOUgOJtNdZczjUXshRLVOQituoFqlPIJbNnimTluYszg5MkjUEBNRIW5THU00VaFsbgm6+tI8xL7bA3Li/bp2kd/9tVQNpERBlwlUsXZBfhg7fF2iXyecLn+wnv3HfyiKh7JcspMoI3SA5//ZkSNR7ViMiMnvzRk7XDXZmffPz9SeMLUMZxPapAUUH2wu5ebvkGSNZo77q5RPVlPS+KvOyfq9gxk+4NSZKWMQKcS1J7HbMXoEblwjjpBalQH0Wu9If4crGgI4EEJHLaaqV4wsowAq5WhlDekvWp+8hBSFk3AWvxkc6P5bqjEH+5EWEPKzup/iU/K5ZFf9r1ga+9ODJPuTEIQudKUq/H6ydDgZl0SyTvsWzf+UcOPgp+qKyKXGERcpqmuYDP/9QUobU0hDHLqQgDrVTsk2yJU7ym4P0xeuem5PFqsSP/vtnppBwBLJdIaV/6V++zp+afzveIehv0mKt9u2/1+27X8XtBydXuhqv73eC8KsoBuvY79XvNXp2OZ7z9Dw==</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_061220</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_061232</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_061232</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_061232</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZZc+I4EP4rlOdxyvjAiYMrUAU2ZDybYziSyfKSEnIDSmzJWLIh+fUrGfAAOZbdJ1e3W91fH/rUlxwlse11OIdMEEZr6ySm3Cu1LS3PqMcQJ9yjKAHuCeyNOjfXnl03PbQ7otXCoKU9NVzkRk1o6jZ2QXcs19GnDcfVTTMyLauJHNsBacp5DiHlAlHR0mzTcnTL0i1nbJqeY3m2Uz93nYlWe4CMS9/SpG5qW1Br3tIWQqSeYaxWq/qqUWfZ3LBN0zIeb65HeAEJ0tqXm4zKQFl7a4/rEWCIY1zHLDEujQOby4h7IzKnSOQZbGNFn8UyDbNpSJuIk/k3rToLUUhnrBR9RBklGMXkDan63IBYsKjWiecsI2KRfJqEZSrHOqyxji2HftOMQ2gnOjpAmHGk8wWytr6GMIMMKIba/TBsad9O61p5dJwhymcsS/ih+N/wAC0gZilEOt+ltYV2usMPKtW+BOyFFMc5JwXcqmFNEQa+7Sbg013VfmUwI+trwuWArrlCZ+zDOxI31QjIHLj4Pw3aa87GyQOKc2gzNn3EjeH6IXgO7Pjt9fsgw2EyXjrGvFUC2DcuFVVrN+LRUFZDtDkRLu2f3SEh9pU5ePb94fyh9zo/660fU3R3fTcp8kE08Z+Xv/86HyWj1a+rxyKb3eNldP9Cxs+FdTWcrIY3kOLhevZm96IkXnaCv1lhDsa9orucdM/HVz/6vp++3mf3t53JHP1OrC6zRjRYDB7tn/bdNOwGDnfeIgwBevie/Vg9hE00g7Rx3ZwMzIG5BHHjd1arbbpH+A91uzs/yqfPgMVOVGMQBrW+7BISX5OZ0pBIn5WmXqrIhwugQmurU4o7vFzSHYk82cONbLq+2+1fXLgXge+c237PPGuYZ82m1Tc7rmP6O5LZoDiC6DM6IyqWotzN2HwNECceBxpBphcsl0zHtS88BkigWkiH8hIwymHMJD3H2WIqoumLM0svmEArvHh+ewN+ptVumbijd1lnJiA7pOTGASUPAZOUgOJtNdZczjUXshRLVOQituoFqlPIJbNnimTluYszg5MkjUEBNRIW5THU00VaFsbgm6+tI8xL7bA3Li/bp2kd/9tVQNpERBlwlUsXZBfhg7fF2iXyecLn+wnv3HfyiKh7JcspMoI3SA5//ZkSNR7ViMiMnvzRk7XDXZmffPz9SeMLUMZxPapAUUH2wu5ebvkGSNZo77q5RPVlPS+KvOyfq9gxk+4NSZKWMQKcS1J7HbMXoEblwjjpBalQH0Wu9If4crGgI4EEJHLaaqV4wsowAq5WhlDekvWp+8hBSFk3AWvxkc6P5bqjEH+5EWEPKzup/iU/K5ZFf9r1ga+9ODJPuTEIQudKUq/H6ydDgZl0SyTvsWzf+UcOPgp+qKyKXGERcpqmuYDP/9QUobU0hDHLqQgDrVTsk2yJU7ym4P0xeuem5PFqsSP/vtnppBwBLJdIaV/6V++zp+afzveIehv0mKt9u2/1+27X8XtBydXuhqv73eC8KsoBuvY79XvNXp2OZ7z9Dw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C2F1FF7B4CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>DE</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7C2F1FF7B4CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C2F1FF7B4CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7BF8878DC462CE05305991F0A740C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7BF8878DC462CE05305991F0A740C</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7BF1DC2594697E05305991F0A0F32</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7BF1DC2594697E05305991F0A0F32</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1995-11-19</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b0db0f3b-13bc-4f60-bef7-988ada12f5d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3ea35392-7c26-4bed-953c-2155a31860ed</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00040_Account and User Create with DE 107_StandardYouthUserCreate_111_SUCCESS_P0" searchProperties="true" id="23198440-a1d4-4a78-b1d0-4931e5056f3d"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="c6455638-4906-438c-87d1-b19740483584"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="b4eb606c-5397-48cd-981a-c8a6edeebb02"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","DE");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="f3659355-9e51-49cb-a23f-e73f71ad5490"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="4ad08bc9-1414-46c6-a1b9-b33ab1d3b67c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUserCreate" id="83fb2aae-8eaf-422a-b225-69f2a5fcce32"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StandardYouthUserCreate" id="16d18280-fca0-4b6c-bf54-d8c10847b3c4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZZc+I4EP4rlPO4ZXxgDrsCVRwhYTYMFNck85ISctsoY8tgyYbw61cy4ACBLLtPrm63ur8+9KnvGQoD02kyBjEnES1swoAyJ9PWlSSmToQYYQ5FITCHY2fc7D87ZlF30OGIUuh16sobMiwLm2ZZhQp4qjW3PXVeKxsq2CVU02vWvGR6wpSxBHqUcUR5XTF1w1INQzWsia47luFYerGm27+VwgxiJnwLk6Ku7EFtWF1ZcL50NG29XhfXpWIU+5qp64b20n8e4wWESGnc7zLKAsWNvT0uuoAhCHARR6F2r53Y3LvMGROfIp7EsI/lXoula7qtCRuXEf9Oyc+C26NelIltRCNKMArIFsn69IEvIrfQDPwoJnwRXk3C0KVjFTZYxYZF7xTtFNqNjk4QxgypbIGMva8ReBADxVCYjnp15e62rmVHJzGizIvikJ2K/w0P0BSCaAmuyg5p7aHd7vBCpRr3gJ0exUHCSAo/5bAuEQa27ybg210VhjF4ZPNMmBjQDZPotGN4Z+KuGh3iA+P/p0FHzdk5maEggcZ0XX4Onxa/Ur9VYZa3Tl476V+1cbVn9+sZgGPjTJG3dieeDWU+RLsTE61nm+nEHsxwWPm781QJmrjsdjfzOdX95WO6qQ4MzJ+CyHicGz/cBKZ+2x3XzHmcVrebp7ZdWaF3jZC0v3h6ovjXYFhtTcNH68Ff/RnGL+VKpRP219wdpNPpYEKbrxO3bM3ft7NtCzOtWvE/pq2J/+PR23rNMLHWL9XZFunN3200ZK8P77NoObRHL6PXydSq5+kc4T/VHe78OJm/A+YHUY5Br1Poii4h/j2ZSQ1xVS8zdZaSfBgHypWGPCW5w0kE3RHXET3cyXq1XW2bXaPbtTtW+6HzoJdLetW2ja7e7LY6lQPJ7FCcQWxH1CMylqTc3dh8DxCHDgPqQqymUSKYjinfeOwgjgo9OhKXIKIMJpGg51Ksg6t73nvsBz778Nimtl3RzUIp/Iz4gA7ipschPqXk0gkljwCTJQHJ23KsmZhrxkUpVihNeGAUU1SkkAhmjyXJOqZVK2uMhMsAJFAtjNwkgOJyscwKo7Hd11QRZpl29DDJLtvVtM7/HSogbFwiDZjMpQWii3DhbSkdErmecOU44YP7ZuISea9EOXlM8A7J6a/PKZHjkY+IyOitPX4zDrhz85uPfz2pfQNKO69HHshNyVHYw8st3gDBGo1DN1eouComaZpk/atKdoyFe02QpKGNASeC1D4m0R+gWu5Cu+kFyVGfRc71p/gSvqBjjjiEYtoKmXjDyjAGJleGnrglm1v3kZOQom4cNvySrh2IdUci/nYjwg6WdkI9FJ91FLuf7brg6yiOyFNsDJxQX0ry9fi4MhQ4Em6J4L0oPnZ+ycGl4KfKvMg5Fi6maZ5wuP6nIAmtriCMo4TyXkfJFMckm+HkH0twPo2+uMl4PF/syL9vdirJRgCDWAcZyfzL99mR80/9I6LeBz3n6la3VqvaumVVzHbG1eUdV1ctvZ0X5QRd44v6q+aoTucz3vgH</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_061237</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_061247</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_061247</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_061247</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZZc+I4EP4rlPO4ZXxgDrsCVRwhYTYMFNck85ISctsoY8tgyYbw61cy4ACBLLtPrm63ur8+9KnvGQoD02kyBjEnES1swoAyJ9PWlSSmToQYYQ5FITCHY2fc7D87ZlF30OGIUuh16sobMiwLm2ZZhQp4qjW3PXVeKxsq2CVU02vWvGR6wpSxBHqUcUR5XTF1w1INQzWsia47luFYerGm27+VwgxiJnwLk6Ku7EFtWF1ZcL50NG29XhfXpWIU+5qp64b20n8e4wWESGnc7zLKAsWNvT0uuoAhCHARR6F2r53Y3LvMGROfIp7EsI/lXoula7qtCRuXEf9Oyc+C26NelIltRCNKMArIFsn69IEvIrfQDPwoJnwRXk3C0KVjFTZYxYZF7xTtFNqNjk4QxgypbIGMva8ReBADxVCYjnp15e62rmVHJzGizIvikJ2K/w0P0BSCaAmuyg5p7aHd7vBCpRr3gJ0exUHCSAo/5bAuEQa27ybg210VhjF4ZPNMmBjQDZPotGN4Z+KuGh3iA+P/p0FHzdk5maEggcZ0XX4Onxa/Ur9VYZa3Tl476V+1cbVn9+sZgGPjTJG3dieeDWU+RLsTE61nm+nEHsxwWPm781QJmrjsdjfzOdX95WO6qQ4MzJ+CyHicGz/cBKZ+2x3XzHmcVrebp7ZdWaF3jZC0v3h6ovjXYFhtTcNH68Ff/RnGL+VKpRP219wdpNPpYEKbrxO3bM3ft7NtCzOtWvE/pq2J/+PR23rNMLHWL9XZFunN3200ZK8P77NoObRHL6PXydSq5+kc4T/VHe78OJm/A+YHUY5Br1Poii4h/j2ZSQ1xVS8zdZaSfBgHypWGPCW5w0kE3RHXET3cyXq1XW2bXaPbtTtW+6HzoJdLetW2ja7e7LY6lQPJ7FCcQWxH1CMylqTc3dh8DxCHDgPqQqymUSKYjinfeOwgjgo9OhKXIKIMJpGg51Ksg6t73nvsBz778Nimtl3RzUIp/Iz4gA7ipschPqXk0gkljwCTJQHJ23KsmZhrxkUpVihNeGAUU1SkkAhmjyXJOqZVK2uMhMsAJFAtjNwkgOJyscwKo7Hd11QRZpl29DDJLtvVtM7/HSogbFwiDZjMpQWii3DhbSkdErmecOU44YP7ZuISea9EOXlM8A7J6a/PKZHjkY+IyOitPX4zDrhz85uPfz2pfQNKO69HHshNyVHYw8st3gDBGo1DN1eouComaZpk/atKdoyFe02QpKGNASeC1D4m0R+gWu5Cu+kFyVGfRc71p/gSvqBjjjiEYtoKmXjDyjAGJleGnrglm1v3kZOQom4cNvySrh2IdUci/nYjwg6WdkI9FJ91FLuf7brg6yiOyFNsDJxQX0ry9fi4MhQ4Em6J4L0oPnZ+ycGl4KfKvMg5Fi6maZ5wuP6nIAmtriCMo4TyXkfJFMckm+HkH0twPo2+uMl4PF/syL9vdirJRgCDWAcZyfzL99mR80/9I6LeBz3n6la3VqvaumVVzHbG1eUdV1ctvZ0X5QRd44v6q+aoTucz3vgH</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF887904462CE05305991F0A740C</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>DE</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7BF887904462CE05305991F0A740C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF887904462CE05305991F0A740C</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7C2F1FF9D4CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7C2F1FF9D4CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7BF1DC26F4697E05305991F0A0F32</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7BF1DC26F4697E05305991F0A0F32</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-11-18</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>55d0a6f8-52ef-4e53-be70-a739cfb9f815</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b2ca4d41-2a9d-49d5-b5d3-ca4e04f2c286</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00041_Account and User Create with DE 107_BasicChildUserCreate_111_SUCCESS_P0" searchProperties="true" id="405a6180-dd73-4baf-b226-890c6c840a19"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="adb596f4-19fd-42e3-8915-ec54f6dadd14"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="adabfcac-444c-4fdf-a7c5-17fa08149ea2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","DE");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="ca700691-db43-4379-92d2-ce292e9c4397"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="e11b663c-a42e-4dce-bbcf-b7713f5217fa"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for BasicChildUserCreate" id="aa2b489d-551a-4399-b306-7bc26224fe0f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("CHILD_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian",tC.getPropertyValue("LegalGuardian"));

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call BasicChildUserCreate" id="e2b20a85-6c90-4e72-b0be-7b83d7ad7c71"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbUupKEP0VKj5aIRfCJSmhCgMoZyMioFt9scZJJ4wkE8hMuOyv3zMBIqB4OOcp1Z2e7tWXWdNXDEWh6TQZg4STmBZWUUiZk2nrSppQJ0aMMIeiCJjDsTNq3vUcs6g7aHdEKXRbdeXN87AFZV9XzfdSWbUqVkmt6aav6jaUKraBDM83hCljKXQp44jyumLqhqUahmpYY113LMMpV4p6ufSqFJ4gYcK3MCnqyhbUitWVCeczR9OWy2VxWSrGSaCZum5oz3e9EZ5AhJTG1SajLFDS2NrjogcYwhAXcRxpV9qBzZXHnBEJKOJpAttY3qlYuqbbmrDxGAkulPwseF3qx5noIhpTglFI/iBZnzvgk9grNMMgTgifRCeTMHTpWIUVVrFh0QtFO4R2pqMDhAlDKpsgY+trCD4kQDEUHofdunJxXteyo+MEUebHScQOxf+GB+gCwngGnsp2aW2hne/wm0o1rgA7XYrDlJEF9OWwzhAGtu0m4PNdFQYJ+GTVI0wM6IpJdNo+vCNxU40WCYDx/9OgveZsnDyhMIVG+vBqN5ldtenv7hq9tINaOniYaZXKOKhnAPaNM0Xe2o14NJT5EG1OPJUt97afRs8EXvHzMr55fLTAYJoO5G4a62531Pnnad2Py2G7ffd7eAmPT9FjZRr2nxG/D317YU+oObhdjx6G/Unt/rJcjT5KfXdFbzrv2uXH3fsIVwN9NhwPaCnRH6yk9espjXT7ZuA276dm1bJuB5XLeW/pfbSjjg1B0Ku9dOHmwfVX/Ne993Lda3WQO7leT+t5Onv4D3W7Oz9K3z8A850ox6DbKnRElxD/mcykhniqn5k6M0k+jAPlSkOektzhpILuiOeIHm5kvepWr13LNk3XsIxOpS2ISy/bttHRm3alVd6RzAbFEUQ3pj6RsSTlbsbmZ4A4chhQDxJ1EaeC6Zjyg8cW4qjQpUNxCWLKYBwLev7DjEnK5rVkyi2juqp9RLPJnAS+qRT6Mb+n90nT55AccnLpgJOHgMmMgCRuOddMDDbjohZztEh5aBQXqEghFdSeSJZ1TKtW1hiJZiFIpFoUe2kIxdlkllVGY5uvqSLMMu2wPc5u28m8jv/tSiBsPCINmMzlGkQb4ZvHxdolcjrhyn7CO/fN1CPyYol68oTgDZLDX59jIucjnxGR0Zs7ejN2uHPzs49/Pan9AEo7rkceyFuQvbC7p1s8AoI2GrtuzlFxXkwXizTrX1XSYyLca4IlDW0EOBWsth7HU6Ba7kI76wnJUR9FzvWH+FI+oSOOOERi2gqZeMbOMAImd4auuCarcxeSg5CibhxW/DudG4p9RyL+cSXCDpZ2Qj0Qn2WceJ/t+sbXXhyRp1gZOKGBlOTzsT4xFDgWbokgvjjZd/6dg++CHyrzIudYuJim95TD6T8FyWh1BWEcp5R3W0qm2GfZDCdfz8D5NPriJiPyfLMj/77aqSQbAQxiH2Qk8y8faEfOPw32mHob9JisXbNjdDquePnarYysqxuy7ly3KnlRDtA1vqi/avbqdDzjjb8=</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_061252</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_06133</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_06133</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_06133</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbUupKEP0VKj5aIRfCJSmhCgMoZyMioFt9scZJJ4wkE8hMuOyv3zMBIqB4OOcp1Z2e7tWXWdNXDEWh6TQZg4STmBZWUUiZk2nrSppQJ0aMMIeiCJjDsTNq3vUcs6g7aHdEKXRbdeXN87AFZV9XzfdSWbUqVkmt6aav6jaUKraBDM83hCljKXQp44jyumLqhqUahmpYY113LMMpV4p6ufSqFJ4gYcK3MCnqyhbUitWVCeczR9OWy2VxWSrGSaCZum5oz3e9EZ5AhJTG1SajLFDS2NrjogcYwhAXcRxpV9qBzZXHnBEJKOJpAttY3qlYuqbbmrDxGAkulPwseF3qx5noIhpTglFI/iBZnzvgk9grNMMgTgifRCeTMHTpWIUVVrFh0QtFO4R2pqMDhAlDKpsgY+trCD4kQDEUHofdunJxXteyo+MEUebHScQOxf+GB+gCwngGnsp2aW2hne/wm0o1rgA7XYrDlJEF9OWwzhAGtu0m4PNdFQYJ+GTVI0wM6IpJdNo+vCNxU40WCYDx/9OgveZsnDyhMIVG+vBqN5ldtenv7hq9tINaOniYaZXKOKhnAPaNM0Xe2o14NJT5EG1OPJUt97afRs8EXvHzMr55fLTAYJoO5G4a62531Pnnad2Py2G7ffd7eAmPT9FjZRr2nxG/D317YU+oObhdjx6G/Unt/rJcjT5KfXdFbzrv2uXH3fsIVwN9NhwPaCnRH6yk9espjXT7ZuA276dm1bJuB5XLeW/pfbSjjg1B0Ku9dOHmwfVX/Ne993Lda3WQO7leT+t5Onv4D3W7Oz9K3z8A850ox6DbKnRElxD/mcykhniqn5k6M0k+jAPlSkOektzhpILuiOeIHm5kvepWr13LNk3XsIxOpS2ISy/bttHRm3alVd6RzAbFEUQ3pj6RsSTlbsbmZ4A4chhQDxJ1EaeC6Zjyg8cW4qjQpUNxCWLKYBwLev7DjEnK5rVkyi2juqp9RLPJnAS+qRT6Mb+n90nT55AccnLpgJOHgMmMgCRuOddMDDbjohZztEh5aBQXqEghFdSeSJZ1TKtW1hiJZiFIpFoUe2kIxdlkllVGY5uvqSLMMu2wPc5u28m8jv/tSiBsPCINmMzlGkQb4ZvHxdolcjrhyn7CO/fN1CPyYol68oTgDZLDX59jIucjnxGR0Zs7ejN2uHPzs49/Pan9AEo7rkceyFuQvbC7p1s8AoI2GrtuzlFxXkwXizTrX1XSYyLca4IlDW0EOBWsth7HU6Ba7kI76wnJUR9FzvWH+FI+oSOOOERi2gqZeMbOMAImd4auuCarcxeSg5CibhxW/DudG4p9RyL+cSXCDpZ2Qj0Qn2WceJ/t+sbXXhyRp1gZOKGBlOTzsT4xFDgWbokgvjjZd/6dg++CHyrzIudYuJim95TD6T8FyWh1BWEcp5R3W0qm2GfZDCdfz8D5NPriJiPyfLMj/77aqSQbAQxiH2Qk8y8faEfOPw32mHob9JisXbNjdDquePnarYysqxuy7ly3KnlRDtA1vqi/avbqdDzjjb8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C2F1FFC54CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>DE</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7C2F1FFC54CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C2F1FFC54CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7BC4922C141F6E05305991F0A96D5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7BC4922C141F6E05305991F0A96D5</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7BF1DC2854697E05305991F0A0F32</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7BF1DC2854697E05305991F0A0F32</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2002-11-17</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>07C7BC4922C141F6E05305991F0A96D5</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>41d9250c-a460-46c5-961b-26890cb14e9a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aed94ee9-90b0-49fc-99cb-64b647ef163d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00042_Account and User Create with CH 107_SecondFullUserCreate_111_SUCCESS_P0" searchProperties="true" id="d1028f9f-705b-4c0a-862d-c4834ce2153c"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="6b534fb1-5452-42bb-81a4-e5aaf1b420ce"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="5a83904d-dc28-49c7-bf8e-ffc78680ca1f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CH");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="7f31421d-de4b-4703-ab2b-43a72d2dbc4f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="2b64472c-9b5e-4f00-8efa-56813fec4e8b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFullUserCreate" id="eb5620b6-8798-4fe3-8153-98d2c72f95a9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create" id="18205557-d398-471b-91f0-efbebd380dc9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynncMvKNmytQRSAEJgnJcJlk8pISUgPasWWwZEP4+pUMOEAuy+6TS+1W9+nuoyNdChwGjt8UAmLJIl5YhwEXfmatG0nM/QgLJnyOQxC+JP6weX/nO0XLx/stRqHXrhuv4NKJ5VapWXKnE9MrTWpmFSiYnutNJxOr7Hq2rVyFSKDHhcRc1g3Hsj3Ttk3bG1mW7zm+bRdrJe/FKPyCWKjYyqVoGTtQa1E35lIufIRWq1Vx5RajeIYcy7LR8/3dkMwhxEbjcltRlihu7PxJkQKBICBFEoXoEh35XFLhD9mMY5nEsMtFv8plIauGlA8VbHZh5HuB9vg0ypYtzCPOCA7YBuv+3IOcR7TQDGZRzOQ8/LII29KBTVgTk9gevzDQMbQzAx0hjAU2xRzbu1gDmEIMnEBhPOjVjYvzppZtHcWYi2kUh+J4+d/wAE8hiBZATbEvawft/ICfdKpxCcTvcRIkgqXQ12RdYAJiN00g54cqPMYwZes7JhRB10KjQ4fwTpbbbrTZDIT8PwM6GM42yC8cJNCw+rR5tUlffncnG9ziL7RXrd5setc/luN6BuDQOTPko90uT0iZk2i7Y5K6C7fbRKPK82aWLJOlO+6O2wI9pL8n5dgtv0CzFNDB0+2PybxT3rw99hfVlfXQiuLl7aA6blur1Uzx4yVKURp66zRw5tcQtTrXDzcUoafw52y86MOG4L68eXiujmj/r848cLro+caudS15+9ZZDYL06WlAXVfQm95Ptzt1uo/Wi5C2fT8UNedm5IyH62W1npdzgP/Ytj/zw2TyNxC5X2oa9NqFjpoSlt+LmbYwak4zV3+hxUdI4NJo6F1aO/xEyR2jvprhdm1VWpWrTrVaqXkdr+y0rq2Sa5VqNbtjNSue1dqLzBbFCcRWxKdM59KSu6XN9wBJ6AvgFGIzjRKldML4JmIbS1zo8YE6BBEXMIqUPC9hheMKjsXyz8bDSTJlb9VpUDEK/Ug+8Ie4OZUQHyuye6TIAyBswUDLtma1ULQWUnViidNEBnYxxUUOiRL2WGus73jVEhIsXASgcaIwokkAxcV8kfUFie3XMTERmXVwPcrO2pdVnf7bN0D5UKYdhK7lCtQQ4ZOrxdoX8nXB5cOC9+GbCWX6WKluypiRLZLjX+8k0ezIGaIqem0NX+097tz97O0fd6JvQKHTfuSJaMoO0u4vbnUFKNFo7Ke5xMVlMUnTJJtfRYtjrMIjpZE2GgJJlKa9jaI/wFEeAp11geSoTzLn9mN8iZzzocQSQsW2QrY848UwBKFfDD11SNbnPkeOUqq+SVjLz2ytQL12NOJvH0TEJ9pPmR/VZxXF9H1cn8Q6yKPqVA8GyfhMr/Tl8fYFKUikwjIle1F8GPyzAJ8lPzbmTc6xSMWmSSLh6z8FrWd1AxMSJVz22kZmONTYDKd8W4D/7vQhTCbj+buO/fvDzmQZBQio16BgWXx9Pfua/3x2oNO7pB+kuuXVHOe67Nmd8qFU18rtUt6UI3SND+aPloM+nXK88Q8=</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_06138</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_061322</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_061322</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_061322</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynncMvKNmytQRSAEJgnJcJlk8pISUgPasWWwZEP4+pUMOEAuy+6TS+1W9+nuoyNdChwGjt8UAmLJIl5YhwEXfmatG0nM/QgLJnyOQxC+JP6weX/nO0XLx/stRqHXrhuv4NKJ5VapWXKnE9MrTWpmFSiYnutNJxOr7Hq2rVyFSKDHhcRc1g3Hsj3Ttk3bG1mW7zm+bRdrJe/FKPyCWKjYyqVoGTtQa1E35lIufIRWq1Vx5RajeIYcy7LR8/3dkMwhxEbjcltRlihu7PxJkQKBICBFEoXoEh35XFLhD9mMY5nEsMtFv8plIauGlA8VbHZh5HuB9vg0ypYtzCPOCA7YBuv+3IOcR7TQDGZRzOQ8/LII29KBTVgTk9gevzDQMbQzAx0hjAU2xRzbu1gDmEIMnEBhPOjVjYvzppZtHcWYi2kUh+J4+d/wAE8hiBZATbEvawft/ICfdKpxCcTvcRIkgqXQ12RdYAJiN00g54cqPMYwZes7JhRB10KjQ4fwTpbbbrTZDIT8PwM6GM42yC8cJNCw+rR5tUlffncnG9ziL7RXrd5setc/luN6BuDQOTPko90uT0iZk2i7Y5K6C7fbRKPK82aWLJOlO+6O2wI9pL8n5dgtv0CzFNDB0+2PybxT3rw99hfVlfXQiuLl7aA6blur1Uzx4yVKURp66zRw5tcQtTrXDzcUoafw52y86MOG4L68eXiujmj/r848cLro+caudS15+9ZZDYL06WlAXVfQm95Ptzt1uo/Wi5C2fT8UNedm5IyH62W1npdzgP/Ytj/zw2TyNxC5X2oa9NqFjpoSlt+LmbYwak4zV3+hxUdI4NJo6F1aO/xEyR2jvprhdm1VWpWrTrVaqXkdr+y0rq2Sa5VqNbtjNSue1dqLzBbFCcRWxKdM59KSu6XN9wBJ6AvgFGIzjRKldML4JmIbS1zo8YE6BBEXMIqUPC9hheMKjsXyz8bDSTJlb9VpUDEK/Ug+8Ie4OZUQHyuye6TIAyBswUDLtma1ULQWUnViidNEBnYxxUUOiRL2WGus73jVEhIsXASgcaIwokkAxcV8kfUFie3XMTERmXVwPcrO2pdVnf7bN0D5UKYdhK7lCtQQ4ZOrxdoX8nXB5cOC9+GbCWX6WKluypiRLZLjX+8k0ezIGaIqem0NX+097tz97O0fd6JvQKHTfuSJaMoO0u4vbnUFKNFo7Ke5xMVlMUnTJJtfRYtjrMIjpZE2GgJJlKa9jaI/wFEeAp11geSoTzLn9mN8iZzzocQSQsW2QrY848UwBKFfDD11SNbnPkeOUqq+SVjLz2ytQL12NOJvH0TEJ9pPmR/VZxXF9H1cn8Q6yKPqVA8GyfhMr/Tl8fYFKUikwjIle1F8GPyzAJ8lPzbmTc6xSMWmSSLh6z8FrWd1AxMSJVz22kZmONTYDKd8W4D/7vQhTCbj+buO/fvDzmQZBQio16BgWXx9Pfua/3x2oNO7pB+kuuXVHOe67Nmd8qFU18rtUt6UI3SND+aPloM+nXK88Q8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BC4922E641F6E05305991F0A96D5</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>CH</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7BC4922E641F6E05305991F0A96D5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BC4922E641F6E05305991F0A96D5</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7BF88794F462CE05305991F0A740C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7BF88794F462CE05305991F0A740C</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7E6FBD7B61CD0E05305991F0A22A4</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7E6FBD7B61CD0E05305991F0A22A4</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1995-11-19</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b0db0f3b-13bc-4f60-bef7-988ada12f5d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3ea35392-7c26-4bed-953c-2155a31860ed</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00043_Account and User Create with CH 107_StandardYouthUserCreate_111_SUCCESS_P0" searchProperties="true" id="b098eb9b-e14e-44a2-9881-e88c2cdc5ca6"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="c7072967-2838-449f-bd47-d1d8334f96e9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="fd834a44-1d2d-4dfb-b7c0-a5713753f1e2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CH");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="88e63ce5-e70d-4d43-9d3a-4d61bed05aba"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="f9298f30-dbb8-47a9-b4e7-df1092f7eb97"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUserCreate" id="53319074-98b8-401d-989c-75488be65415"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StandardYouthUserCreate" id="8cfe2cd0-f436-469c-aa8d-07e4580ba351"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtV+I6EP4rnPpxT+kLhUKPcI6CenFZdQFd3S+emA4l2iYlSQv46zcp0AVEL/fyhTPTycwzL3kypwIlsRucCQFcEkYriySmIii0bSPjNGBIEBFQlIAIJA5GZz8GgVu1A7Q5YlT6vbbxPPEb9ZdGaJt2WK+ZnlfzzKYP2PSakxA1ATlNDMpUiAz6VEhEZdtwbcczHcd0vLFtB54b1Oyq57i/jcoDcKF8K5OqbaxBLUTbmEqZBpY1n8+r81qV8chybduxHn8MRngKCTI6p6uMikC8s7bH1RAwxDGuYpZYp9aOzWkoghGJKJIZh3Ws8LNYtmW3LGUTChKdGOVZCPt0wgqxiyijBKOYvCNdnx8gpyysnMUR40ROk0+TcGzt2IQFNrHj0RPD2oV2pKMdhFwgU0yRs/Y1hAlwoBgq98N+2zg5rmvF0TFHVEwYT8Su+N/wAM0hZimEptiktYZ2vMMDleqcAg76FMeZIDnc6GFNEQax7ibg411V7jhMyGJAhBrQhdDorG14e+KqGj0SgZD/p0FbzVk5eUBxBp3bRvfq1/D8G7wLcjdutfhl5P5K06Ffw+0CwLZxoShbuxL3hrIcotWJEV38vFK/8VXzsfs4Hj6+RMtGJhrLvnBrMH+rz/6ZXl2n7vUwn73md9C7QLPLCzG8v7//nTWWFudTlllJjyS+31KVovlAsCjKxvc/rxvZOxKM9Z33q3SRvP3ym8PvD4gvBuip9vA6Ce23yfXV0OVwS88HYpZezOnMsiNXXmbfv7n0Rr7f3L8+5U+DKaT9p5/tMp0t/Lu6zZ0fZS+vgOVG1GPQ71UuVZeQ/JrMtIaE5qQwDVJNPkIClUZHn9LcEWSK7kgYqB6uZNvv+ueXzabf8ltew+1e2PWaXW+1nEv7zPfs7oZkVij2IHYZnRAdS1Puamy+BoiTQAANgZs5yxTTCeMLjz0kUaVPh+oSMCpgzBQ9h8tJ8vYmWiySucMiN0t41OI+9o3KDZO39JafTSTwXU6u7XDyEDBJCWji1nMt1GALqWoxQ3kmY6eaoyqFTFE71ywbuF6zbgmSpDFopFbCwiyGajpNi8pYYvXvmgiLQju8GBe37dO89r9tSqBsQqINhM7lHFQb4cDj4m4S+TzhxnbCG/dnWUj0xVL1lJzgFZLdT3/HRM9HOSMqo+fu6NnZ4C7Njz7+8aT1BShrvx5loDAnW2E3T7d6BBRtdDbdnKHqrJrleVb0z9f0yJV7S7GkY40AZ4rVlmP2BtQqXVhHPSEl6r3IpX4XXyandCSRhERNW6UQj9gZRiD0ztBX12Rx7EKyE1LVTcJCHtJ1Y7XvaMRfrkQ4wNpOqe/U35zx8G+7DvjaiqPyVCuDJDTSkn4+lp8MBWbKLVHEx/i280MODgXfVZZFLrFINU0vmYTPv1Q0o7UNhDHLqOz3jEKxzbIFTrlMIfhr9MFNQeTlZkf+fbUzSTECeotU9oV//UAHev5ptMXU66D7ZH1R77otz2m4TbdekLW/Imu75tTKouyg63xQf9Rs1Wl/xjt/AA==</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_061326</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_061338</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_061338</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_061338</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtV+I6EP4rnPpxT+kLhUKPcI6CenFZdQFd3S+emA4l2iYlSQv46zcp0AVEL/fyhTPTycwzL3kypwIlsRucCQFcEkYriySmIii0bSPjNGBIEBFQlIAIJA5GZz8GgVu1A7Q5YlT6vbbxPPEb9ZdGaJt2WK+ZnlfzzKYP2PSakxA1ATlNDMpUiAz6VEhEZdtwbcczHcd0vLFtB54b1Oyq57i/jcoDcKF8K5OqbaxBLUTbmEqZBpY1n8+r81qV8chybduxHn8MRngKCTI6p6uMikC8s7bH1RAwxDGuYpZYp9aOzWkoghGJKJIZh3Ws8LNYtmW3LGUTChKdGOVZCPt0wgqxiyijBKOYvCNdnx8gpyysnMUR40ROk0+TcGzt2IQFNrHj0RPD2oV2pKMdhFwgU0yRs/Y1hAlwoBgq98N+2zg5rmvF0TFHVEwYT8Su+N/wAM0hZimEptiktYZ2vMMDleqcAg76FMeZIDnc6GFNEQax7ibg411V7jhMyGJAhBrQhdDorG14e+KqGj0SgZD/p0FbzVk5eUBxBp3bRvfq1/D8G7wLcjdutfhl5P5K06Ffw+0CwLZxoShbuxL3hrIcotWJEV38vFK/8VXzsfs4Hj6+RMtGJhrLvnBrMH+rz/6ZXl2n7vUwn73md9C7QLPLCzG8v7//nTWWFudTlllJjyS+31KVovlAsCjKxvc/rxvZOxKM9Z33q3SRvP3ym8PvD4gvBuip9vA6Ce23yfXV0OVwS88HYpZezOnMsiNXXmbfv7n0Rr7f3L8+5U+DKaT9p5/tMp0t/Lu6zZ0fZS+vgOVG1GPQ71UuVZeQ/JrMtIaE5qQwDVJNPkIClUZHn9LcEWSK7kgYqB6uZNvv+ueXzabf8ltew+1e2PWaXW+1nEv7zPfs7oZkVij2IHYZnRAdS1Puamy+BoiTQAANgZs5yxTTCeMLjz0kUaVPh+oSMCpgzBQ9h8tJ8vYmWiySucMiN0t41OI+9o3KDZO39JafTSTwXU6u7XDyEDBJCWji1nMt1GALqWoxQ3kmY6eaoyqFTFE71ywbuF6zbgmSpDFopFbCwiyGajpNi8pYYvXvmgiLQju8GBe37dO89r9tSqBsQqINhM7lHFQb4cDj4m4S+TzhxnbCG/dnWUj0xVL1lJzgFZLdT3/HRM9HOSMqo+fu6NnZ4C7Njz7+8aT1BShrvx5loDAnW2E3T7d6BBRtdDbdnKHqrJrleVb0z9f0yJV7S7GkY40AZ4rVlmP2BtQqXVhHPSEl6r3IpX4XXyandCSRhERNW6UQj9gZRiD0ztBX12Rx7EKyE1LVTcJCHtJ1Y7XvaMRfrkQ4wNpOqe/U35zx8G+7DvjaiqPyVCuDJDTSkn4+lp8MBWbKLVHEx/i280MODgXfVZZFLrFINU0vmYTPv1Q0o7UNhDHLqOz3jEKxzbIFTrlMIfhr9MFNQeTlZkf+fbUzSTECeotU9oV//UAHev5ptMXU66D7ZH1R77otz2m4TbdekLW/Imu75tTKouyg63xQf9Rs1Wl/xjt/AA==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7E5C294162825E05307991F0A0313</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>CH</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7E5C294162825E05307991F0A0313</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7E5C294162825E05307991F0A0313</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7BF887979462CE05305991F0A740C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7BF887979462CE05305991F0A740C</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7E7070C891CD4E05305991F0A2C13</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7E7070C891CD4E05305991F0A2C13</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1997-11-18</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>55d0a6f8-52ef-4e53-be70-a739cfb9f815</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b2ca4d41-2a9d-49d5-b5d3-ca4e04f2c286</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00044_Account and User Create with CH 107_BasicChildUserCreate_111_SUCCESS_P0" searchProperties="true" id="e5bcaaeb-0142-4874-96f1-3e8daf7b4fe5"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="f72e1330-33b1-4f4b-92a9-b24a394c919c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="3bddada1-0e99-43cc-b244-bdf1609e1943"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CH");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="0d189388-e92b-467c-a142-524b77d5fe75"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="22b4b2c9-cab0-4878-8909-0f1a5fcac07b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for BasicChildUserCreate" id="538751d8-e5db-496c-b0a6-20e972bc842e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("CHILD_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian",tC.getPropertyValue("LegalGuardian"));

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call BasicChildUserCreate" id="b956211a-4647-4d5c-bdf4-50003e500d37"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU+pIEP4rVHzcCrkQbimhCoMo58BRAV3wxRomHRhNJnFmAuiv35kAERBcdp9S3enp/voy3/QlR1Fouy3OgQkS08IqCil3M21DSxl1Y8QJdymKgLsCu8NWv+faRdNF2yNaodtuaC91CLBVKZu6VXcs3bGdsl6vO6A7QTCdBiWzJAVpynkKXcoFoqKh2abl6JalW87INF3Hdp1q0Slbz1rhCRiXvqVJ0dQ2oFa8oc2FSFzDWC6XxWWpGLOZYZumZYz7vSGeQ4S05uU6oywQa27scdEHDGGIiziOjEtjz+bS5+6QzCgSKYNNLP9ULNMw64a08TmZXWj5WfC7NIgz0UM0pgSjkHwiVZ8+iHnsF1rhLGZEzKOTSVimcqzDCuvYcuiFZuxDO9PRHkLGkc7nyNr4GkAADCiGwuOg29AuzutadnTEEOVBzCK+L/43PEAXEMYJ+DrfprWBdr7DI5VqXgJ2uxSHKScL+KOGNUEY+KabgM93VbhnEJBVj3A5oCuu0Bm78A7EdTXaZAZc/J8G7TRn7eQJhSk0P+e9tyt/mrzfwrA6G0zqldFnya54bdtpZAB2jTNF3tq1eDCU+RCtT9D+XT8ctQPn9rP2/Nf42qt02KL1azJ22C3+Dc8W4rNE0Hrp6WP8sQAfbo3peGpOBtX2w+/JJBj5I3mPXklnXO4bD8+9VsV/qJkTG8y3ylvlrtdhBuvHj+OVf2PTFqq8l+vzJ2d8X22zqHo/eaz1bu5+paOgPZlPUtN7WhoPA898qkWlmE3v00rQuor6N30x/LvfyNPZwb+v2975YTp9BSy2ohqDbrvQkV1C4mcyUxri60Fm6iaKfLgAKrSmOqW4w00l3RHflT1cy2bVq3p2R/bTthzvun1tlktmtV63Omarc9WubElmjeIAohfTgKhYinLXY/MzQBy5HKgPTF/EqWQ6rv3gsY0EKnTpQF6CmHIYxZKey87rKp77H1Zg+5ak3aj+SuxklSZa4U8s7ugdawUC2D4nl/Y4eQCYJAQUcau55nKwuZC1eEeLVIRWcYGKFFJJ7UyxrGs7tbLBSZSEoJAaUeynIRSTeZJVxuDrr60jzDPt4HqU3baTeR3+25ZA2vhEGXCVyxXINsKRx6W0TeR0wpXdhLfuW6lP1MWS9RSM4DWS/V9fY6LmI58RmdGLN3yxtrhz87OPfz9p/ADKOKxHHshfkJ2w26dbPgKSNprbbr6j4nsxXSzSrH9VRY9MujckS1rGEHAqWe1jFL8BNXIXxllPSI76IHKu38eXijkdCiQgktNWyMQzdoYhcLUzdOU1WZ27kOyFlHUTsBLHdF4o9x2F+MeVCLtY2Un1vfwsY+Z/teuIr504Mk+5MghCZ0pSz8fHiaHAsXRLJPHFbNf5MQfHgu8r8yLnWIScpmkq4PSfgmK0hoYwjlMqum0tU+yybIZTfCTgfhl9c5MReb7ZkX9f7XSSjQCWW6S0z/yrB9pV809nO0y9CXpI1ledWq1ab1lOxfYysi6vybrqmF5elD10zW/q75qdOh3OePMf</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_061343</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_061354</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_061354</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_061354</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbU+pIEP4rVHzcCrkQbimhCoMo58BRAV3wxRomHRhNJnFmAuiv35kAERBcdp9S3enp/voy3/QlR1Fouy3OgQkS08IqCil3M21DSxl1Y8QJdymKgLsCu8NWv+faRdNF2yNaodtuaC91CLBVKZu6VXcs3bGdsl6vO6A7QTCdBiWzJAVpynkKXcoFoqKh2abl6JalW87INF3Hdp1q0Slbz1rhCRiXvqVJ0dQ2oFa8oc2FSFzDWC6XxWWpGLOZYZumZYz7vSGeQ4S05uU6oywQa27scdEHDGGIiziOjEtjz+bS5+6QzCgSKYNNLP9ULNMw64a08TmZXWj5WfC7NIgz0UM0pgSjkHwiVZ8+iHnsF1rhLGZEzKOTSVimcqzDCuvYcuiFZuxDO9PRHkLGkc7nyNr4GkAADCiGwuOg29AuzutadnTEEOVBzCK+L/43PEAXEMYJ+DrfprWBdr7DI5VqXgJ2uxSHKScL+KOGNUEY+KabgM93VbhnEJBVj3A5oCuu0Bm78A7EdTXaZAZc/J8G7TRn7eQJhSk0P+e9tyt/mrzfwrA6G0zqldFnya54bdtpZAB2jTNF3tq1eDCU+RCtT9D+XT8ctQPn9rP2/Nf42qt02KL1azJ22C3+Dc8W4rNE0Hrp6WP8sQAfbo3peGpOBtX2w+/JJBj5I3mPXklnXO4bD8+9VsV/qJkTG8y3ylvlrtdhBuvHj+OVf2PTFqq8l+vzJ2d8X22zqHo/eaz1bu5+paOgPZlPUtN7WhoPA898qkWlmE3v00rQuor6N30x/LvfyNPZwb+v2975YTp9BSy2ohqDbrvQkV1C4mcyUxri60Fm6iaKfLgAKrSmOqW4w00l3RHflT1cy2bVq3p2R/bTthzvun1tlktmtV63Omarc9WubElmjeIAohfTgKhYinLXY/MzQBy5HKgPTF/EqWQ6rv3gsY0EKnTpQF6CmHIYxZKey87rKp77H1Zg+5ak3aj+SuxklSZa4U8s7ugdawUC2D4nl/Y4eQCYJAQUcau55nKwuZC1eEeLVIRWcYGKFFJJ7UyxrGs7tbLBSZSEoJAaUeynIRSTeZJVxuDrr60jzDPt4HqU3baTeR3+25ZA2vhEGXCVyxXINsKRx6W0TeR0wpXdhLfuW6lP1MWS9RSM4DWS/V9fY6LmI58RmdGLN3yxtrhz87OPfz9p/ADKOKxHHshfkJ2w26dbPgKSNprbbr6j4nsxXSzSrH9VRY9MujckS1rGEHAqWe1jFL8BNXIXxllPSI76IHKu38eXijkdCiQgktNWyMQzdoYhcLUzdOU1WZ27kOyFlHUTsBLHdF4o9x2F+MeVCLtY2Un1vfwsY+Z/teuIr504Mk+5MghCZ0pSz8fHiaHAsXRLJPHFbNf5MQfHgu8r8yLnWIScpmkq4PSfgmK0hoYwjlMqum0tU+yybIZTfCTgfhl9c5MReb7ZkX9f7XSSjQCWW6S0z/yrB9pV809nO0y9CXpI1ledWq1ab1lOxfYysi6vybrqmF5elD10zW/q75qdOh3OePMf</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF8879A1462CE05305991F0A740C</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>CH</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7BF8879A1462CE05305991F0A740C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF8879A1462CE05305991F0A740C</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7C2F200214CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7C2F200214CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7E8EEAE8430A3E05307991F0AA162</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7E8EEAE8430A3E05307991F0AA162</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>07C7C2F200214CEDE05307991F0AFBD6</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>41d9250c-a460-46c5-961b-26890cb14e9a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aed94ee9-90b0-49fc-99cb-64b647ef163d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00045_Account and User Create with FR 107_SecondFullUserCreate_111_SUCCESS_P0" searchProperties="true" id="1bcf144a-9ab7-496a-936c-d53a12a7c6f4"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="0ba531c7-cac6-4bbd-9868-d68708d5fedb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="35b2b466-7fa0-43f1-ab88-6ac15a5d0da2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","FR");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="d42ee2dc-79f5-43be-8224-c4878bdfea00"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="70729185-e8bb-4868-91c5-f801781265d4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFullUserCreate" id="932b3c5a-9d99-4458-b756-6c7ffdb24f93"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create" id="f1b6b14c-3ff1-461e-a4d9-35bc5988682c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdc9o6EP0rjPuYMbINNtgTmOEjZNxLk0xMU9qXjpAXUGNL1JLB9NdXMuAA+bjc++TRerV7dvfoSNcCp4kT9ISATFLOakWaMBGU1o6RZyzgWFARMJyCCCQJot6XceDUrQAfthi1cNgxfjacmdWYt3yzYTmx2XSJa878uGVaMyC+P/PmMxeUqxA5hExIzGTHcCy7adq2aTcnlhU0G4Hl1Nu2+8OoPUEmVGzlUreMPahCdIyllKsAoc1mU9806jxbIMeybDT9Mo7IElJsdK93FZWJsu7en9RjIJAkpE54iq7Ric91LIKILhiWeQb7XPF7uSxk+Uj5xIIuPhnVXohDNuflcoAZZ5TghP7Buj9fQC55XOslC55RuUzfLcK2dGATCmISu8k+GegU2oWBThBmAptiie19rEeYQwaMQO3rY9gxPl02tXLrJMNMzHmWitPlf8MDbA0JX0FsikNZe2iXB3yjU91rIEHISJILuoY7TdYVJiD20wRyeajaQwZzWoypUAQthEaHjuGdLXfdGNIFCPl/BnQ0nF2QJ5zk0A2nmUip3fPu52NG06dwFhYo/zG9KjadEsCxc2moRrtbnpGyItFux6L9+Wt/EU8+3z4/t6JZOBx+//bAh9Rni2UbDTLnq9OKenbTESTF7lhspunq7nPy/Ov5u6J0iLxmOhjePMR9T15Nk1672G7bHuFTES1vh8nQmn9DA/rUeNrehdv7Iqfs6jb97vKhHE+een4D3T60I8TdyOdWIgbtydgD758CsOtsp/1vxcj1Ht38V6wqCjtVOUf4T22HMx/ls19A5GGpaRAOayM1JSw/FjNtobE5L12DlRYfIYFJo6t3ae0IciV3NA7UDHdrqzVo9Uftdsvv95qeM7ix3Ibl+r49snqtpjU4iMwOxRnEAWdzqnNpyd3R5mOAJA0EsBgyc81zpXTC+CDiEEtcC9mjOgScCZhwJc9b5vjgrRj7Y7dsK/NmpFjPn//4nlG74/Ke3We9uYTsVJMbJ5r8CISuKGjh1rwWithCql78xutcJnZ9jesMciXtmVbZwGm2XSRoukpAI0Upj/ME6qvlquwMEruvY2IiSuvjzaQ8be/Wdf7v0ALlE1PtIHQtfVBjhFeXixO4h0LeL9g7LvgQvpfHVB8s1U+ZUbJDcvrrhSaaHxVHVEU/B9FP+4C7cr94++ud6ANQ6LwfVaJ4TY/SHq5udQko2egepvkb13/X8/U6L+fX0vKYqfBIqaSNIiC5UrXthD8DQ1UIdNEVUqE+y1zZT/HlcskiiSWkim21cnnBmyECod8MoTomxaUPkpOUqm8SCvmWbZCo945G/OGTiARE+ynzg/pseBa/jOuNWEd5VJ3qySApW+iVvj6275CCcBWWKuHj2XHwtwK8lfzUWDW5wiIVm2a5hPf/1LSidQxMCM+ZDIdGaThW2RKn3K4geHF6FaYU8uplR//9aWfSkgJEvSKVfxlfX9CB5j9bHCn1PulrsW42Rv5NuzkY9Uuxbu3EeuS1RlVTTtB1X5lfW476dM7x7l8=</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_061359</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_06149</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_06149</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_06149</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdc9o6EP0rjPuYMbINNtgTmOEjZNxLk0xMU9qXjpAXUGNL1JLB9NdXMuAA+bjc++TRerV7dvfoSNcCp4kT9ISATFLOakWaMBGU1o6RZyzgWFARMJyCCCQJot6XceDUrQAfthi1cNgxfjacmdWYt3yzYTmx2XSJa878uGVaMyC+P/PmMxeUqxA5hExIzGTHcCy7adq2aTcnlhU0G4Hl1Nu2+8OoPUEmVGzlUreMPahCdIyllKsAoc1mU9806jxbIMeybDT9Mo7IElJsdK93FZWJsu7en9RjIJAkpE54iq7Ric91LIKILhiWeQb7XPF7uSxk+Uj5xIIuPhnVXohDNuflcoAZZ5TghP7Buj9fQC55XOslC55RuUzfLcK2dGATCmISu8k+GegU2oWBThBmAptiie19rEeYQwaMQO3rY9gxPl02tXLrJMNMzHmWitPlf8MDbA0JX0FsikNZe2iXB3yjU91rIEHISJILuoY7TdYVJiD20wRyeajaQwZzWoypUAQthEaHjuGdLXfdGNIFCPl/BnQ0nF2QJ5zk0A2nmUip3fPu52NG06dwFhYo/zG9KjadEsCxc2moRrtbnpGyItFux6L9+Wt/EU8+3z4/t6JZOBx+//bAh9Rni2UbDTLnq9OKenbTESTF7lhspunq7nPy/Ov5u6J0iLxmOhjePMR9T15Nk1672G7bHuFTES1vh8nQmn9DA/rUeNrehdv7Iqfs6jb97vKhHE+een4D3T60I8TdyOdWIgbtydgD758CsOtsp/1vxcj1Ht38V6wqCjtVOUf4T22HMx/ls19A5GGpaRAOayM1JSw/FjNtobE5L12DlRYfIYFJo6t3ae0IciV3NA7UDHdrqzVo9Uftdsvv95qeM7ix3Ibl+r49snqtpjU4iMwOxRnEAWdzqnNpyd3R5mOAJA0EsBgyc81zpXTC+CDiEEtcC9mjOgScCZhwJc9b5vjgrRj7Y7dsK/NmpFjPn//4nlG74/Ke3We9uYTsVJMbJ5r8CISuKGjh1rwWithCql78xutcJnZ9jesMciXtmVbZwGm2XSRoukpAI0Upj/ME6qvlquwMEruvY2IiSuvjzaQ8be/Wdf7v0ALlE1PtIHQtfVBjhFeXixO4h0LeL9g7LvgQvpfHVB8s1U+ZUbJDcvrrhSaaHxVHVEU/B9FP+4C7cr94++ud6ANQ6LwfVaJ4TY/SHq5udQko2egepvkb13/X8/U6L+fX0vKYqfBIqaSNIiC5UrXthD8DQ1UIdNEVUqE+y1zZT/HlcskiiSWkim21cnnBmyECod8MoTomxaUPkpOUqm8SCvmWbZCo945G/OGTiARE+ynzg/pseBa/jOuNWEd5VJ3qySApW+iVvj6275CCcBWWKuHj2XHwtwK8lfzUWDW5wiIVm2a5hPf/1LSidQxMCM+ZDIdGaThW2RKn3K4geHF6FaYU8uplR//9aWfSkgJEvSKVfxlfX9CB5j9bHCn1PulrsW42Rv5NuzkY9Uuxbu3EeuS1RlVTTtB1X5lfW476dM7x7l8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF43F9E84CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>FR</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7BF43F9E84CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF43F9E84CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7BF8879BA462CE05305991F0A740C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7BF8879BA462CE05305991F0A740C</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7E8F5991930A5E05307991F0A5ACE</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7E8F5991930A5E05307991F0A5ACE</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1995-11-19</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b0db0f3b-13bc-4f60-bef7-988ada12f5d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3ea35392-7c26-4bed-953c-2155a31860ed</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00046_Account and User Create with FR 107_BasicChildUserCreate_111_SUCCESS_P0" searchProperties="true" id="a2459211-8e49-4a8f-8fc6-8a25038548fc"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="f6e1a6fa-93df-4dca-bb90-917a5c4fe5c7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="7507d00f-1dd9-4dce-a27c-e0e88271e0c8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","FR");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="7d297771-3479-4b84-a8be-b33012537629"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="022b1b79-6209-4fe6-9a81-43072bf0a93f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for BasicChildUserCreate" id="46d7b547-3d0a-4a54-9071-89f47fee8154"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("CHILD_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian",tC.getPropertyValue("LegalGuardian"));

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call BasicChildUserCreate" id="6937ae9f-9ec3-418a-a7bd-9115dd168f59"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMpaNweAKVBEIGWbDZYBlkrxMCbkxmrFlYsk28PUrGfAAuSy7T65ut7pPX3TUtxyHgeW2OYdY0IiVNmHAuJtrm1oSMzfCnHKX4RC4K4g7bQ8eXauMXHw8opX63ab2s+GAZVkLrBPTrOl2pVHTcRVhfYmRXV1UKo5XW0pTzhPoMy4wE03NQqatm6Zu2jOEXLvimvWyiewXrTSHmEvf0qSMtAOoDW9qKyHWrmFkWVbOKuUo9g0LIdN4GjxOyQpCrLVu9xnlgeLWwZ6UPSAQBKRMotC4Nc5sbj3uTqnPsEhiOMTyPoqFDNQwpI3Hqf9FK86C12fLKBc7mEWMEhzQHVb1GYBYRV6pHfhRTMUq/DAJEynHOmyIrKHNvmjGObQrHZ0hjDnW+QqbB18TWEIMjEDp70m/qX25rmv50VmMGV9GccjPxf+GB1gKQbQGT+fHtA7Qrnf4TqVat0DcPiNBwmkKQzWsa0yAH7oJ5HpXpXEMS7p5pFwO6IYrdMYpvAtxX40u9YGL/9Ogk+bsncxxkEBrY9jPVtuJdo0f6WzQM/wX0sVOWqn2B80cwKlxrihauxcvhrIYov2Jp7uhH2Qwq4TJXdTY9V8WMFpZv+Evh33t1rZ3D1sUJoMfAr2EQ994Ddr8uTOejMb1yT3zR9+2q6SxRdZ8EqDUmT+NFrv2sI7HN+HuqefA04+d/zxAu+7XbDgj3zZZ8nAzFzCb37zQ+cN4uvsa972b3nCza2T32bMYbUfx71/ZY+f7Q4An897MNl9ncX1Bxt+NZ79ZpHOC/1x3vPPTZPELiDiKagz63VJPdgmLz8lMaainL3NTd63IhwtgQmupU4o73ETSHfVc2cO9jJyO07F6sp/Vtt25796jagU5jYbZQ+3eXbd2JJk9iguInYgtqYqlKHc/Np8DJKHLgXkQ62mUSKbj2iceu1jgUp9N5CWIGIdZJOnZzFKWmiirch8FJgqRk8achIilWmkYiREbxe2lgPiclCtnpDwBQtcUFHOrweZysrmQxXjFaSICs5ziMoNEcnusaNa17HrV4DRcB6CgGmHkJQGU16t1XhqD77+WjgnPtZP7WX7dPkzs8t+xBtLGo8qAq1zuQPYR3nld0DGRjxOunSZ8dN9OPKpuliyoiCnZIzn/9WdO1IAUQyIz+tmZ/jSPuAvzq4+/PWl8Asq4rEcRyEvpSdjj2y1fAckbrWM3X3H5tZykaZL3z1H8GEv3hqRJ05gCSSStbWfRb2BG4cK46g0pUF9ELvTn+BKxYlOBBYRy2kq5eMXSMAWuloa+vCebazeSs5CybgI24j1dJ5ALj0L86U5EXKLspHosP1kUe3/a9Y6vkzgyT7kzCMp8Jan3Y/vBUJBIuqWS+aL41Pl7Dt4Lfq4silxgEXKaFomAj/+UFKU1NUxIlDDR72q54pRmc5xiuwb3j9EbNzmTF6sd/ffdTqf5CBCQCyGnuX/1Qrtq/pl/QtWHoJdsfder153GvWXXrE7O1tU9Wzs26hRFOUPXeqN+qzmp0+WMt/4B</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_061414</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_061426</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_061426</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_061426</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMpaNweAKVBEIGWbDZYBlkrxMCbkxmrFlYsk28PUrGfAAuSy7T65ut7pPX3TUtxyHgeW2OYdY0IiVNmHAuJtrm1oSMzfCnHKX4RC4K4g7bQ8eXauMXHw8opX63ab2s+GAZVkLrBPTrOl2pVHTcRVhfYmRXV1UKo5XW0pTzhPoMy4wE03NQqatm6Zu2jOEXLvimvWyiewXrTSHmEvf0qSMtAOoDW9qKyHWrmFkWVbOKuUo9g0LIdN4GjxOyQpCrLVu9xnlgeLWwZ6UPSAQBKRMotC4Nc5sbj3uTqnPsEhiOMTyPoqFDNQwpI3Hqf9FK86C12fLKBc7mEWMEhzQHVb1GYBYRV6pHfhRTMUq/DAJEynHOmyIrKHNvmjGObQrHZ0hjDnW+QqbB18TWEIMjEDp70m/qX25rmv50VmMGV9GccjPxf+GB1gKQbQGT+fHtA7Qrnf4TqVat0DcPiNBwmkKQzWsa0yAH7oJ5HpXpXEMS7p5pFwO6IYrdMYpvAtxX40u9YGL/9Ogk+bsncxxkEBrY9jPVtuJdo0f6WzQM/wX0sVOWqn2B80cwKlxrihauxcvhrIYov2Jp7uhH2Qwq4TJXdTY9V8WMFpZv+Evh33t1rZ3D1sUJoMfAr2EQ994Ddr8uTOejMb1yT3zR9+2q6SxRdZ8EqDUmT+NFrv2sI7HN+HuqefA04+d/zxAu+7XbDgj3zZZ8nAzFzCb37zQ+cN4uvsa972b3nCza2T32bMYbUfx71/ZY+f7Q4An897MNl9ncX1Bxt+NZ79ZpHOC/1x3vPPTZPELiDiKagz63VJPdgmLz8lMaainL3NTd63IhwtgQmupU4o73ETSHfVc2cO9jJyO07F6sp/Vtt25796jagU5jYbZQ+3eXbd2JJk9iguInYgtqYqlKHc/Np8DJKHLgXkQ62mUSKbj2iceu1jgUp9N5CWIGIdZJOnZzFKWmiirch8FJgqRk8achIilWmkYiREbxe2lgPiclCtnpDwBQtcUFHOrweZysrmQxXjFaSICs5ziMoNEcnusaNa17HrV4DRcB6CgGmHkJQGU16t1XhqD77+WjgnPtZP7WX7dPkzs8t+xBtLGo8qAq1zuQPYR3nld0DGRjxOunSZ8dN9OPKpuliyoiCnZIzn/9WdO1IAUQyIz+tmZ/jSPuAvzq4+/PWl8Asq4rEcRyEvpSdjj2y1fAckbrWM3X3H5tZykaZL3z1H8GEv3hqRJ05gCSSStbWfRb2BG4cK46g0pUF9ELvTn+BKxYlOBBYRy2kq5eMXSMAWuloa+vCebazeSs5CybgI24j1dJ5ALj0L86U5EXKLspHosP1kUe3/a9Y6vkzgyT7kzCMp8Jan3Y/vBUJBIuqWS+aL41Pl7Dt4Lfq4silxgEXKaFomAj/+UFKU1NUxIlDDR72q54pRmc5xiuwb3j9EbNzmTF6sd/ffdTqf5CBCQCyGnuX/1Qrtq/pl/QtWHoJdsfder153GvWXXrE7O1tU9Wzs26hRFOUPXeqN+qzmp0+WMt/4B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF8879E2462CE05305991F0A740C</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>FR</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7BF8879E2462CE05305991F0A740C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF8879E2462CE05305991F0A740C</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7C2F2005A4CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7C2F2005A4CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7EAD60F2C253AE05305991F0A9F7D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7EAD60F2C253AE05305991F0A9F7D</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>1998-11-18</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1998-11-18</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>07C7C2F2005A4CEDE05307991F0AFBD6</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>41d9250c-a460-46c5-961b-26890cb14e9a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aed94ee9-90b0-49fc-99cb-64b647ef163d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00047_Account and User Create with NZ 107_SecondFullUserCreate_111_SUCCESS_P0" searchProperties="true" id="74a44ea0-5545-4d85-a079-f866f6339bcf"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="7b51ddb9-f989-407c-8326-6fa7e76612f4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="7eb37fb5-8832-4997-a597-89c174ff3086"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","NZ");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="0ec1bd23-180e-4eb3-a673-81f8f7a22837"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="f0233623-e857-494b-b6b5-6a4484a8732b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFullUserCreate" id="39c5a584-7edf-431e-95e6-5199030934fd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create" id="733794a9-ecfa-4178-a83e-f5b8c292d58c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU/JIEP0rVHy0Qq4QTAlV3ORjRVFw0eLFGiYdGE0mmJkE8NfvTIAYUFx2n1Ld6ek+fZkzfc1QGJhukzGIOYloaR0GlLmZtq4kMXUjxAhzKQqBuRy74+bdwDXLuov2R5RSv1NXXqs10/bBwSrGUFFtf+aoNcc2VcNBM6ly8KwmTBlLoE8ZR5TXFVM3bNUwVMN+0nXXtlzLKRuOMVVKE4iZ8C1MyrqyA7VmdWXB+dLVtNVqVV5Z5Siea6auG9rL3WCMFxAipXG9zSgLFDd29rjsAYYgwGUchdq1dmBz7TF3TOYU8SSGXSzvVCxd0680YeMxMr9Q8rPg9akfZWIb0YgSjALyiWR97oAvIq/UDOZRTPgiPJmEoUvHKqxFDQ2bXijaIbQzHR0gjBlS2QIZO18j8CEGiqH096hfVy7O61p29ClGlPlRHLJD8b/hAZpCEC3BU9k+rR208x3+UKnGNWC3T3GQMJLCvRzWJcLAdt0EfL6r0kMMPlkPCBMDumYSnVaEdyRuq9Ehc2D8/zSo0JytkwkKEmik6crv8U+rx0YdZxjdz/kKp5cf1Anm9QxA0ThT5K3dikdDmQ/R9sTt7Toa3D8Y3Q72jRc9feD+cLDpvl/NWrjVCt8eB3jO/mC/v5o2h7NLXpvh9WrqPz86ldbkjQ2DRY9Pe4F/+4fO/go/7R7u6pcPVc17W73fPw9W+O3m1hxV6f3m3UKjaos+hrfhw8Lup9bkqjbQ/Us66cUv6aRJP1GvP20H4/nz8HGKtPnn5dCaaGnHaPfsy41v1/N0CvgPdfs7P05mb4D5XpRj0O+UbkSXEP+dzKSGeKqfmbpLST6MA+VKQ56S3OEmgu6I54oebmXdaTtt80b002nZ7W6nq1cs3bm6Mm705k2rU92TzBbFEcR2RH0iY0nK3Y7N7wBx6DKgHsRqGiWC6Zjyi8cO4qjUpyNxCSLK4CkS9Fxb2O9vVdsLwVkawYfxsaHJ+yKuRErpPuJDOoybPof4kJOtA04eASZLApK45VwzMdiMi1p8oDThgVFOUZlCIqg9lizrmnatojESLgOQSLUw8pIAysvFMquMxrZfU0WYZdpR9ym7bSfzOv63L4Gw8Yg0YDKXFog2wg+Pi7lP5HTC1WLCe/fNxCPyYol68pjgLZLDX19jIucjnxGR0Wt7/GrscefmZx//flL7BZR2XI88kJeSQtj90y0eAUEbjX03P1D5o5ykaZL1z5H0GAv3mmBJQxsDTgSrbZ6id6Ba7kI76wnJUR9FzvWH+BK+oGOOOIRi2kqZeMbOMAYmd4a+uCbrcxeSg5CibhzW/CddOxD7jkT860qEXSzthPpBfFZR7H216wdfhTgiT7EycELnUpLPx+bEUOBIuCWC+KK46PwnBz8FP1TmRc6xcDFNs4TD6T8lyWh1BWEcJZT3O0qmKLJshpNvluB+GX1zkxF5vtmRf1/tVJKNAAaxDzKS+ZcPtCvnn84LTL0LekzW3UrbvLIty6yZlSJZ65Zh5UU5QNf4pv6uKdTpeMYb/wA=</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_061432</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_061444</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_061444</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_061444</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbU/JIEP0rVHy0Qq4QTAlV3ORjRVFw0eLFGiYdGE0mmJkE8NfvTIAYUFx2n1Ld6ek+fZkzfc1QGJhukzGIOYloaR0GlLmZtq4kMXUjxAhzKQqBuRy74+bdwDXLuov2R5RSv1NXXqs10/bBwSrGUFFtf+aoNcc2VcNBM6ly8KwmTBlLoE8ZR5TXFVM3bNUwVMN+0nXXtlzLKRuOMVVKE4iZ8C1MyrqyA7VmdWXB+dLVtNVqVV5Z5Siea6auG9rL3WCMFxAipXG9zSgLFDd29rjsAYYgwGUchdq1dmBz7TF3TOYU8SSGXSzvVCxd0680YeMxMr9Q8rPg9akfZWIb0YgSjALyiWR97oAvIq/UDOZRTPgiPJmEoUvHKqxFDQ2bXijaIbQzHR0gjBlS2QIZO18j8CEGiqH096hfVy7O61p29ClGlPlRHLJD8b/hAZpCEC3BU9k+rR208x3+UKnGNWC3T3GQMJLCvRzWJcLAdt0EfL6r0kMMPlkPCBMDumYSnVaEdyRuq9Ehc2D8/zSo0JytkwkKEmik6crv8U+rx0YdZxjdz/kKp5cf1Anm9QxA0ThT5K3dikdDmQ/R9sTt7Toa3D8Y3Q72jRc9feD+cLDpvl/NWrjVCt8eB3jO/mC/v5o2h7NLXpvh9WrqPz86ldbkjQ2DRY9Pe4F/+4fO/go/7R7u6pcPVc17W73fPw9W+O3m1hxV6f3m3UKjaos+hrfhw8Lup9bkqjbQ/Us66cUv6aRJP1GvP20H4/nz8HGKtPnn5dCaaGnHaPfsy41v1/N0CvgPdfs7P05mb4D5XpRj0O+UbkSXEP+dzKSGeKqfmbpLST6MA+VKQ56S3OEmgu6I54oebmXdaTtt80b002nZ7W6nq1cs3bm6Mm705k2rU92TzBbFEcR2RH0iY0nK3Y7N7wBx6DKgHsRqGiWC6Zjyi8cO4qjUpyNxCSLK4CkS9Fxb2O9vVdsLwVkawYfxsaHJ+yKuRErpPuJDOoybPof4kJOtA04eASZLApK45VwzMdiMi1p8oDThgVFOUZlCIqg9lizrmnatojESLgOQSLUw8pIAysvFMquMxrZfU0WYZdpR9ym7bSfzOv63L4Gw8Yg0YDKXFog2wg+Pi7lP5HTC1WLCe/fNxCPyYol68pjgLZLDX19jIucjnxGR0Wt7/GrscefmZx//flL7BZR2XI88kJeSQtj90y0eAUEbjX03P1D5o5ykaZL1z5H0GAv3mmBJQxsDTgSrbZ6id6Ba7kI76wnJUR9FzvWH+BK+oGOOOIRi2kqZeMbOMAYmd4a+uCbrcxeSg5CibhzW/CddOxD7jkT860qEXSzthPpBfFZR7H216wdfhTgiT7EycELnUpLPx+bEUOBIuCWC+KK46PwnBz8FP1TmRc6xcDFNs4TD6T8lyWh1BWEcJZT3O0qmKLJshpNvluB+GX1zkxF5vtmRf1/tVJKNAAaxDzKS+ZcPtCvnn84LTL0LekzW3UrbvLIty6yZlSJZ65Zh5UU5QNf4pv6uKdTpeMYb/wA=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7E5C294332825E05307991F0A0313</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>NZ</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7E5C294332825E05307991F0A0313</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7E5C294332825E05307991F0A0313</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7C2F2007B4CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7C2F2007B4CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7EBEA4F0E2B5DE05305991F0A09CA</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7EBEA4F0E2B5DE05305991F0A09CA</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>1998-11-18</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1995-11-19</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b0db0f3b-13bc-4f60-bef7-988ada12f5d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3ea35392-7c26-4bed-953c-2155a31860ed</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00048_Account and User Create with NZ 107_StandardYouthUserCreate_111_SUCCESS_P0" searchProperties="true" id="14ec278c-138d-421f-bc2f-e0e441bfaf4f"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="3db7bdc5-0f6b-4a1d-a259-71feff4dd0b6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="404f5acb-65c3-4f19-b74b-a252ddf7ce06"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","NZ");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="36226ce4-90f4-4fe3-8fd2-92487d3184c4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="a168991e-ad29-45fc-a2cb-3c1a094620d4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUserCreate" id="6421439e-8b86-447b-b4fb-01f93b3350fe"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StandardYouthUserCreate" id="ddb73b21-6579-4656-9683-e4ac2d00f4b7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZXwFgytQRSDssksSBieZ3bxMCbkBJbZsdDEwX7+SAQ+Qy7L75Op2q/v0RUd9xVGauGGPc2CCZLS2SRPKw1LbMSSjYYY44SFFKfBQ4DDq3Y5Dt26H6HDEqI0GHePHvNHGTsOxTWy7genPZq45s4OmOQsc1/dmCDV9UKacSxhRLhAVHcO1Hd90HNPxH2w79L2w4dXdVvBs1J6AceVbmdRtYw9qwzvGUog8tKz1el1fe/WMLSzXth3rr9txhJeQIqN7tcuoDMS6e3tcjwFDkuA6zlLryjqxuYp5GJEFRUIy2MeKP4plW3bbUjYxJ4svRnUW4hGdZ6XYRzSjBKOE/ES6Prcglllc6yWLjBGxTD9MwrG1YxM22MSOT78Y1im0Cx2dIGQcmXyJnL2vKcyBAcVQe5yOOsaXy7pWHn1giPJ5xlJ+Kv43PEALSLIcYpMf0tpDu9zhO5XqXgEORxQnkpMC7vSw5ggD33cT8OWuahMGc7IZE64GdMM1OusY3pm4q8aALICL/9Ogo+bsnDyhREJ3NZ4W1tefHmt+E/5rpOxJO5s3V2z82ikBHBuXiqq1O/FsKKsh2p34+/Elvx7mwpU3z7PfJt//iB+5/HrXeN2MadJAj1705Njblj/wkmfW/tak08Cdij8b6+ieLVjBYzbw/NfB9cATOPj7hY1t6+mmdfvz9vGbA/nijpLNBNoDt5lnGzlbfG3Gzopsab99Le3nFUnaoyLaCDcYuaPV/TbFL/ZzEEm07kEe/D4pvGbxnT1Ovm8nYp/uGf5T3eHOR3L2AlgcRD0Go0FtqLqExOdkpjUkNuelaZhr8uECqDC6+pTmjlAquiNxqHq4k+2gH1wPfW/Y8zy/P7y+sRueHbTbztDuDZvB8EAyOxRnEPsZnRMdS1Pubmw+B4jTkAONgZlFJhXTceMTjwMkUG1Ep+oSZJTDQ6boWabSTWSzHayzlrP0WrjRSvBrsWwbtbtM3NN71psLYKec7J1w8hQwyQlo4tZzzdVgc6FqsUKFFIlTL1CdglTUzjTLhq7falicpHkCGqmVZrFMoJ4v87IyFt99XRNhXmqnNw/lbfswr/N/hxIom5hoA65zuQbVRnjncfEPiXyccPM44YP7noyJvliqnoIRvENy+uvXmOj5qGZEZfSjH/1wDrgr84uPvz1pfQLKOq9HFSguyFHYw9OtHgFFG91DN1eovqrLopBl/wJNj0y5txRLOlYEWCpW2z5kr0CtyoV10RNSoT6LXOlP8UmxpJFAAlI1bbVSvGBniIDrnWGkrsnm0oXkJKSqm4CNeE/XT9S+oxF/uhLhEGs7pZ6ozzpj8a92vePrKI7KU60MgtCFlvTzsf1gKHCm3BJFfBk7dv6eg/eCnyqrIldYhJqmmRTw8Z+aZrSOgTDOJBWjgVEqjlm2xCm2OYS/jN64KYm82uzIv692JilHAKstUtmX/vUDHer5p4sjpt4HPSfrm0a/aQ9uHLfl2sdk3Wq5vaooJ+i6b9RvNUd1Op/x7j8=</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_061449</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_06150</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_06150</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_06150</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZXwFgytQRSDssksSBieZ3bxMCbkBJbZsdDEwX7+SAQ+Qy7L75Op2q/v0RUd9xVGauGGPc2CCZLS2SRPKw1LbMSSjYYY44SFFKfBQ4DDq3Y5Dt26H6HDEqI0GHePHvNHGTsOxTWy7genPZq45s4OmOQsc1/dmCDV9UKacSxhRLhAVHcO1Hd90HNPxH2w79L2w4dXdVvBs1J6AceVbmdRtYw9qwzvGUog8tKz1el1fe/WMLSzXth3rr9txhJeQIqN7tcuoDMS6e3tcjwFDkuA6zlLryjqxuYp5GJEFRUIy2MeKP4plW3bbUjYxJ4svRnUW4hGdZ6XYRzSjBKOE/ES6Prcglllc6yWLjBGxTD9MwrG1YxM22MSOT78Y1im0Cx2dIGQcmXyJnL2vKcyBAcVQe5yOOsaXy7pWHn1giPJ5xlJ+Kv43PEALSLIcYpMf0tpDu9zhO5XqXgEORxQnkpMC7vSw5ggD33cT8OWuahMGc7IZE64GdMM1OusY3pm4q8aALICL/9Ogo+bsnDyhREJ3NZ4W1tefHmt+E/5rpOxJO5s3V2z82ikBHBuXiqq1O/FsKKsh2p34+/Elvx7mwpU3z7PfJt//iB+5/HrXeN2MadJAj1705Njblj/wkmfW/tak08Cdij8b6+ieLVjBYzbw/NfB9cATOPj7hY1t6+mmdfvz9vGbA/nijpLNBNoDt5lnGzlbfG3Gzopsab99Le3nFUnaoyLaCDcYuaPV/TbFL/ZzEEm07kEe/D4pvGbxnT1Ovm8nYp/uGf5T3eHOR3L2AlgcRD0Go0FtqLqExOdkpjUkNuelaZhr8uECqDC6+pTmjlAquiNxqHq4k+2gH1wPfW/Y8zy/P7y+sRueHbTbztDuDZvB8EAyOxRnEPsZnRMdS1Pubmw+B4jTkAONgZlFJhXTceMTjwMkUG1Ep+oSZJTDQ6boWabSTWSzHayzlrP0WrjRSvBrsWwbtbtM3NN71psLYKec7J1w8hQwyQlo4tZzzdVgc6FqsUKFFIlTL1CdglTUzjTLhq7falicpHkCGqmVZrFMoJ4v87IyFt99XRNhXmqnNw/lbfswr/N/hxIom5hoA65zuQbVRnjncfEPiXyccPM44YP7noyJvliqnoIRvENy+uvXmOj5qGZEZfSjH/1wDrgr84uPvz1pfQLKOq9HFSguyFHYw9OtHgFFG91DN1eovqrLopBl/wJNj0y5txRLOlYEWCpW2z5kr0CtyoV10RNSoT6LXOlP8UmxpJFAAlI1bbVSvGBniIDrnWGkrsnm0oXkJKSqm4CNeE/XT9S+oxF/uhLhEGs7pZ6ozzpj8a92vePrKI7KU60MgtCFlvTzsf1gKHCm3BJFfBk7dv6eg/eCnyqrIldYhJqmmRTw8Z+aZrSOgTDOJBWjgVEqjlm2xCm2OYS/jN64KYm82uzIv692JilHAKstUtmX/vUDHer5p4sjpt4HPSfrm0a/aQ9uHLfl2sdk3Wq5vaooJ+i6b9RvNUd1Op/x7j8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7E5C60DE12820E05307991F0A882A</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>NZ</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7E5C60DE12820E05307991F0A882A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7E5C60DE12820E05307991F0A882A</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7BF43FA334CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7BF43FA334CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7EBF280062B8FE05305991F0A1FE0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7EBF280062B8FE05305991F0A1FE0</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>1998-11-18</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1997-11-18</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>55d0a6f8-52ef-4e53-be70-a739cfb9f815</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b2ca4d41-2a9d-49d5-b5d3-ca4e04f2c286</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00049_Account and User Create with NZ 107_BasicChildUserCreate_111_SUCCESS_P0" searchProperties="true" id="8a4a06a6-0150-4054-bf0d-b2ad08f577b8"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="2ac4a87a-8b0a-4842-99b4-0cdcfdb91825"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="14874753-bc7a-489a-97a8-27414db29984"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","NZ");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="17ea2ce3-09ce-401a-aeaf-4997de0198a9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="1dc1530c-f713-4a2e-ac81-5afaee211330"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for BasicChildUserCreate" id="76ea63a5-4c5b-44bf-8b55-538b695f7976"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("CHILD_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian",tC.getPropertyValue("LegalGuardian"));

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call BasicChildUserCreate" id="adc5dd9c-c8f4-4e06-8215-ffddc25e251e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o6EP4rjPvYMb5gcOwJzHAJLQkkFEPa9KUj5AXU2JKxZEPy649kggPkcjjnybPr1e63F33aS47iyPbbnEMqCKOVbRxR7hfappal1GeIE+5TFAP3BfaD9mjo21XTR/sjWmXQa2p/5rWwVkc26KiBbd3BDU9HtTnSLxphPTSh4dTrpjTlPIMB5QJR0dRs03J0y9ItZ2qavuP4ple1bfu3VrmHlEvf0qQqT+1AbXlTWwmR+Iax2Wyqm1qVpUvDNk3L+DUaBngFMdJal7uMikBp68UeV0PAEEW4illsXBpHNpch9wOypEhkKbzECj+KZRqmZ0ibkJPlF608C+GALlghdhFllGAUkWek6jMCsWJhpR0tWUrEKv4wCctUjnXYYh1bDv2iGcfQznR0hDDlSOcrZL34msACUqAYKrPJoKl9Oa9rxdFpiihfsDTmx+J/wwM0h4glEOp8n9YLtPMdvlOp1iVgf0BxlHGSw60a1gRh4C/dBHy+q8o4hQXZDgmXA7rlCp1xCO9E3FWjR5bAxf9p0EFzdk7uUZRBq3t3bbmrjntzP85gFHbvHp4fv4YD6Ld/NAsAh8aFomztTjwZynKIdidWjrewGBH5cx+uOXm8WHu/oriDh/TXTXSz7fO/wbP59ScJr726iaZrtk5GcX9k2tfLp1mAvqUbe9KZWt/n7PH7hLgzcZ3PROz2HuppZ9a2QjrHW5duH35iJ/rRuV2vkn42nIlvV7/vlh6y8tvgPgg727F3s0rG7HqYj73RcDyPn4MrwWZ30d/1cJk3fs9qTw/NMp0D/Me6/Z0PsvlfwGIvqjEY9Cp92SUkPiczpSGhvihM/USRDxdAhdZSpxR3+JmkOxL6soc72XS7bqfv1Prthu10+50rs14zXc+z+ma733D7e5LZoTiB2GV0QVQsRbm7sfkcII59DjSEVM9ZJpmOa5947CGBKgM6kZeAUQ5TJumZ2MKxvceU1uZPlpvwmGwWkY08pFVumbijd2l7ISA95uTaESdPAJOEgCJuNddcDjYXshZrlGcisqo5qlLIJLWnimV927moG5zESQQKqRGzMIugmqySojIG331tHWFeaCdX0+K2fZjX6b99CaRNSJQBV7l0QLYR3jwuNb++T+TjhBuHCe/dt7OQqIsl6ylSgndIjn+9jomaj3JGZEZ/usEfa4+7ND/7+NuTxiegjNN6lIHCnByE3T/d8hGQtNHad3ONqutqludZ0T9X0WMq3RuSJS0jAJxJVnuaskegRunCOOsJKVGfRC71x/gysaKBQAJiOW2VQjxjZwiAq51hIK/J9tyF5CikrJuArXhP143kvqMQf7oSYR8rO6key8+GpeFru97xdRBH5ilXBkHoUknq+Xj6YCgwk26JJD6WHjp/z8F7wY+VZZFLLEJO0zwT8PGfimK0poYwZhkVg55WKA5ZtsApnhLwX43euCmIvNzsyL+vdjopRgCD3Ac5KfyrB9pX80+XB0z9EvQtWV9cuG275zTsbkHW9R1Zu47ZLYtyhK71Rv1Wc1Cn0xlv/QM=</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_06155</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_061517</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_061517</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_061517</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc9o6EP4rjPvYMb5gcOwJzHAJLQkkFEPa9KUj5AXU2JKxZEPy649kggPkcjjnybPr1e63F33aS47iyPbbnEMqCKOVbRxR7hfappal1GeIE+5TFAP3BfaD9mjo21XTR/sjWmXQa2p/5rWwVkc26KiBbd3BDU9HtTnSLxphPTSh4dTrpjTlPIMB5QJR0dRs03J0y9ItZ2qavuP4ple1bfu3VrmHlEvf0qQqT+1AbXlTWwmR+Iax2Wyqm1qVpUvDNk3L+DUaBngFMdJal7uMikBp68UeV0PAEEW4illsXBpHNpch9wOypEhkKbzECj+KZRqmZ0ibkJPlF608C+GALlghdhFllGAUkWek6jMCsWJhpR0tWUrEKv4wCctUjnXYYh1bDv2iGcfQznR0hDDlSOcrZL34msACUqAYKrPJoKl9Oa9rxdFpiihfsDTmx+J/wwM0h4glEOp8n9YLtPMdvlOp1iVgf0BxlHGSw60a1gRh4C/dBHy+q8o4hQXZDgmXA7rlCp1xCO9E3FWjR5bAxf9p0EFzdk7uUZRBq3t3bbmrjntzP85gFHbvHp4fv4YD6Ld/NAsAh8aFomztTjwZynKIdidWjrewGBH5cx+uOXm8WHu/oriDh/TXTXSz7fO/wbP59ScJr726iaZrtk5GcX9k2tfLp1mAvqUbe9KZWt/n7PH7hLgzcZ3PROz2HuppZ9a2QjrHW5duH35iJ/rRuV2vkn42nIlvV7/vlh6y8tvgPgg727F3s0rG7HqYj73RcDyPn4MrwWZ30d/1cJk3fs9qTw/NMp0D/Me6/Z0PsvlfwGIvqjEY9Cp92SUkPiczpSGhvihM/USRDxdAhdZSpxR3+JmkOxL6soc72XS7bqfv1Prthu10+50rs14zXc+z+ma733D7e5LZoTiB2GV0QVQsRbm7sfkcII59DjSEVM9ZJpmOa5947CGBKgM6kZeAUQ5TJumZ2MKxvceU1uZPlpvwmGwWkY08pFVumbijd2l7ISA95uTaESdPAJOEgCJuNddcDjYXshZrlGcisqo5qlLIJLWnimV927moG5zESQQKqRGzMIugmqySojIG331tHWFeaCdX0+K2fZjX6b99CaRNSJQBV7l0QLYR3jwuNb++T+TjhBuHCe/dt7OQqIsl6ylSgndIjn+9jomaj3JGZEZ/usEfa4+7ND/7+NuTxiegjNN6lIHCnByE3T/d8hGQtNHad3ONqutqludZ0T9X0WMq3RuSJS0jAJxJVnuaskegRunCOOsJKVGfRC71x/gysaKBQAJiOW2VQjxjZwiAq51hIK/J9tyF5CikrJuArXhP143kvqMQf7oSYR8rO6key8+GpeFru97xdRBH5ilXBkHoUknq+Xj6YCgwk26JJD6WHjp/z8F7wY+VZZFLLEJO0zwT8PGfimK0poYwZhkVg55WKA5ZtsApnhLwX43euCmIvNzsyL+vdjopRgCD3Ac5KfyrB9pX80+XB0z9EvQtWV9cuG275zTsbkHW9R1Zu47ZLYtyhK71Rv1Wc1Cn0xlv/QM=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF887A2D462CE05305991F0A740C</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>NZ</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7BF887A2D462CE05305991F0A740C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF887A2D462CE05305991F0A740C</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7BF43FA624CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7BF43FA624CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7EBEA4F292B5DE05305991F0A09CA</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7EBEA4F292B5DE05305991F0A09CA</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>07C7BF43FA624CFBE05307991F0AF67F</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>41d9250c-a460-46c5-961b-26890cb14e9a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aed94ee9-90b0-49fc-99cb-64b647ef163d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00050_Account and User Create with IE 107_SecondFullUserCreate_111_SUCCESS_P0" searchProperties="true" id="5ef23c4a-2654-48c2-a3b9-8abbc5a44c7a"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="e294301f-cc14-4b4c-839f-601f17e0a192"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="b0ea9a03-67a9-425b-9350-cb5779409cc7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","IE");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="7336940a-4afd-4b71-ae73-670fe0432366"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="f50a0a7e-a72f-47b0-8c3e-8d615188296e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFullUserCreate" id="911873c4-2f81-491c-9031-b424832dfd8f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create" id="d97b0f4e-db08-40a4-850e-e4c00b05df3b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynmcMrbBYHAFqgiEWXZCLpjJkLykhNSAwJaNJQPJ169kwMEEsuw+ubrd6j590VFfcxT4JbfFOcSChqywCXzG3VTb0JKYuSHilLsMBcBdgV2v1b9zS0XTRfsjWqHXaWhvZgmVCbGQbldsotsE23q9UnP0ulWzxjWz6qByTZpynkCPcYGYaGgl07J1y9Ite2iarm27pUrRLpdetcIzxFz6liZFU9uB2vCGNhMicg1jvV4X1+ViGE+Nkmlaxqh/5+EZBEhrXm8zSgPFzZ09LhLA4Pu4iMPAuDZyNteEux6dMiSSGHaxyLlYpmHWDWlDOJ1eadlZID02CVOxjVjIKEY+/UCqPn0Qs5AUWv40jKmYBWeTsEzlWIcN1rFlsyvNyEO70FEOYcyRzmfI2vkawARiYBgKvwe9hnZ1WdfSo8MYMT4J44Dnxf+GB9gK/DACovN9Wjtolzs8UanmNWC3x7CfcLqCezWsEcLAd90EfLmrwmMME7q5o1wO6IYrdMYhvCNxW40OnQIX/6dBB83ZOnlGfgLNx6RujciIW375dtlZEDH2SnavItAtb6QADo1TRdbarXg0lNkQbU/0nS5BDsXPLWjf++P2yIHHynSz8rjX/f1k4EWZeTC9w/O2GUfWGhK29Dfd2gP8mft/5uF8XWk94qfbv19/vr7Qh6Bd8p7787bBX82/UJ0S51lEq4q1Zvcj8OevL7+qHzdiWNus/I+eN5glRhVmi9fBU2dVndU6T84I2TwyFz+fRH929/Jj0R/1pz/EcN3qVO1Gls4B/rxuf+e9ZDwHLPaiGoNep9CVXULiezJTGkr0SWrqRop8uAAmtKY6pbjDTSTdUeLKHm5l02k7N227XirfdGyrW701K2WzUq9bXbNVr3Yqe5LZojiC2A7ZhKpYinK3Y/M9QBy4HBiBWF+FiWQ6rn3jsYMEKvTYQF6CkHEYhpKeN8jEwuG8tpyH1qQ+fjfnwXhBKNUK96F4YA9xayIgznNyOcfJA8A0oqCIW801l4PNhazFEq0S4VvFFSoySCS1x4pl3ZJdqxicBpEPCqkRhCTxoRjNorQyBt9+SzrCPNUObofpbTub1/G/fQmkDaHKgKtcbkC2EU48LtY+kfMJVw8T3rtvJYSqiyXrKWKKt0jyvz7HRM1HNiMyo7e292btcWfmFx//etL4BpRxXI8sEFnRg7D7p1s+ApI2mvtuLlFxWUxWqyTtn6PoMZbuDcmSluEBTiSrvQ/DBTAjc2Fc9IRkqI8iZ/o8vkTMmCeQgEBOWyEVL9gZPOBqZ+jJa7K5dCHJhZR1E7ARp3RtX+47CvG3KxF2sbKT6kf5WYcx+WzXCV8HcWSecmUQlE2VpJ6P9zNDgUPplkriC+ND56ccnAqeV2ZFzrAIOU3jRMD5PwXFaA0NYRwmTPQ6Wqo4ZNkUp3iPwP00+uImJfJss6P/vtrpNB0BDHIf5DT1rx5oV80/mx4w9S7oF7Lu2uVuq9ay292blKydLVl3q043K0oOXfOL+qvmoE7HM978Bw==</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_061521</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_061532</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_061532</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_061532</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynmcMrbBYHAFqgiEWXZCLpjJkLykhNSAwJaNJQPJ169kwMEEsuw+ubrd6j590VFfcxT4JbfFOcSChqywCXzG3VTb0JKYuSHilLsMBcBdgV2v1b9zS0XTRfsjWqHXaWhvZgmVCbGQbldsotsE23q9UnP0ulWzxjWz6qByTZpynkCPcYGYaGgl07J1y9Ite2iarm27pUrRLpdetcIzxFz6liZFU9uB2vCGNhMicg1jvV4X1+ViGE+Nkmlaxqh/5+EZBEhrXm8zSgPFzZ09LhLA4Pu4iMPAuDZyNteEux6dMiSSGHaxyLlYpmHWDWlDOJ1eadlZID02CVOxjVjIKEY+/UCqPn0Qs5AUWv40jKmYBWeTsEzlWIcN1rFlsyvNyEO70FEOYcyRzmfI2vkawARiYBgKvwe9hnZ1WdfSo8MYMT4J44Dnxf+GB9gK/DACovN9Wjtolzs8UanmNWC3x7CfcLqCezWsEcLAd90EfLmrwmMME7q5o1wO6IYrdMYhvCNxW40OnQIX/6dBB83ZOnlGfgLNx6RujciIW375dtlZEDH2SnavItAtb6QADo1TRdbarXg0lNkQbU/0nS5BDsXPLWjf++P2yIHHynSz8rjX/f1k4EWZeTC9w/O2GUfWGhK29Dfd2gP8mft/5uF8XWk94qfbv19/vr7Qh6Bd8p7787bBX82/UJ0S51lEq4q1Zvcj8OevL7+qHzdiWNus/I+eN5glRhVmi9fBU2dVndU6T84I2TwyFz+fRH929/Jj0R/1pz/EcN3qVO1Gls4B/rxuf+e9ZDwHLPaiGoNep9CVXULiezJTGkr0SWrqRop8uAAmtKY6pbjDTSTdUeLKHm5l02k7N227XirfdGyrW701K2WzUq9bXbNVr3Yqe5LZojiC2A7ZhKpYinK3Y/M9QBy4HBiBWF+FiWQ6rn3jsYMEKvTYQF6CkHEYhpKeN8jEwuG8tpyH1qQ+fjfnwXhBKNUK96F4YA9xayIgznNyOcfJA8A0oqCIW801l4PNhazFEq0S4VvFFSoySCS1x4pl3ZJdqxicBpEPCqkRhCTxoRjNorQyBt9+SzrCPNUObofpbTub1/G/fQmkDaHKgKtcbkC2EU48LtY+kfMJVw8T3rtvJYSqiyXrKWKKt0jyvz7HRM1HNiMyo7e292btcWfmFx//etL4BpRxXI8sEFnRg7D7p1s+ApI2mvtuLlFxWUxWqyTtn6PoMZbuDcmSluEBTiSrvQ/DBTAjc2Fc9IRkqI8iZ/o8vkTMmCeQgEBOWyEVL9gZPOBqZ+jJa7K5dCHJhZR1E7ARp3RtX+47CvG3KxF2sbKT6kf5WYcx+WzXCV8HcWSecmUQlE2VpJ6P9zNDgUPplkriC+ND56ccnAqeV2ZFzrAIOU3jRMD5PwXFaA0NYRwmTPQ6Wqo4ZNkUp3iPwP00+uImJfJss6P/vtrpNB0BDHIf5DT1rx5oV80/mx4w9S7oF7Lu2uVuq9ay292blKydLVl3q043K0oOXfOL+qvmoE7HM978Bw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF43FA8A4CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>IE</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7BF43FA8A4CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF43FA8A4CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7BC4923BD41F6E05305991F0A96D5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7BC4923BD41F6E05305991F0A96D5</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7EBF280212B8FE05305991F0A1FE0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7EBF280212B8FE05305991F0A1FE0</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1995-11-19</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b0db0f3b-13bc-4f60-bef7-988ada12f5d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3ea35392-7c26-4bed-953c-2155a31860ed</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00051_Account and User Create with IE 107_StandardYouthUserCreate_111_SUCCESS_P0" searchProperties="true" id="3763854a-8c3c-40d1-b260-db34a6e67360"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="8e9f9067-ee2d-4b63-b3ec-ea2604a5d074"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="10bee606-64d2-4daa-a123-bc0c5881e27f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","IE");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="6b273036-0a92-4850-9e7e-3b601a38511d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="8785ade0-1545-41e5-bca2-88d8d7f5c8a7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUserCreate" id="df66d9cc-55bf-4d09-a919-9a4c910de162"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StandardYouthUserCreate" id="e70715d9-f48c-4ce7-acd8-93efbe60c431"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvNIGV8wN1egikBISEgyA4RM8jKlyG2sxJYcSQaSr1/JgAfIZdl9gep2q/v0RUd9IlASu35XCOCSMFpaJTEVfq5tGxmnPkOCCJ+iBIQvsT/pXo98t2L7aHvEKA37beNP6DUCr/7UNG23ZpseBsds2qhmIlythaEdql+kTIXIYEiFRFS2Ddd2PNNxTMeb2rbveb7nVJr11qNRmgEXyrcyqdjGBtRKtI1IytS3rOVyWVlWK4zPLde2Hev39WiCI0iQ0TlZZ5QH4p2NPa4EgCGOcQWzxDqx9mxOAuFPyJwimXHYxAq+imVbdstSNoEg8x9GcRaCIQ1ZLvYQZZRgFJN3pOtzDTJiQakbzxknMkq+TMKxtWMTVtjEjkd/GNY+tCMd7SHkApkiQs7G1xhC4EAxlO7Gw7bx47iu5UenHFERMp6IffG/4QG6gJilEJhim9YG2vEOP6lU5wSwP6Q4zgRZwI0e1hRhEJtuAj7eVeknh5CsRkSoAV0Jjc7ahXcgrqvRJ3MQ8v80aKc5ayczFGfQuR89JG9B49Zdev3ZxVV9/lg/7Z/O5o0Za+cAdo1zRdHatXgwlMUQrU8o6LNT9CsKpvXz897rr8V1+XIevCJxffdA3xf2ZQj98I7/VgGS22l6Xq2X2f016rL0avTwHK2ict16uJzFVVzutx5/D26dIc9aZRiMnSBAzJuMRunSaS4vqUTZWzO0xoFE7125QnyZ1mYZjZoX1s+Y8LB7cTOwz+/K5erl1T2TzjJ0R/zynoaPMzLMQC7bRTo7+Pd12zs/yZ6eAcutqMdg2C8NVJeQ/J7MtIYEZpib+qkmHyGBSqOjT2nu8DNFdyTwVQ/Xst3oNc5qPdezTz23WbXP7FrVbrRazsDuDgZn3S3JrFEcQOwxGhIdS1Puemy+B4gTXwANgJsLlimmE8Y3HvtIotKQjtUlYFTAlCl6duJk1aw9Rc8ye31zXlDEpc2eX9L5k1G6YfKW3vJuKIHvk3J1j5THgElKQDO3HmyhJltIVYxXtMhk7FQWqEIhU9zONc36rtesWYIkaQwaqpWwIIuhkkZpXhpLrP9dRTYi147Ppvl1+zKxw2/bGiibgGgDoXM5BdVH+OR1qW4T+Trh+m7CW/fdLCD6ZqmCSk7wGsn+p79zogekGBKV0Z/e5I+zxV2YH33840nrG1DWYT2KQMGC7ITdvt3qFVC80dl28xVVXivZYpHl/WtofuTKvaVo0rEmgDNFa29T9gLUKlxYR70hBeqDyIV+H18mIzqRSEKipq2Ui0csDRMQemkYqnuyOnYj2Qup6iZhJT/T9WK18GjE3+5E2MfaTql/qr8l48Hfdn3iayeOylPtDJLQuZb0+/H2xVBgptwSxXyM7zr/zMFnwfeVRZELLFJN01Mm4esvJU1pbQNhzDIqh30jV+zSbI5TvqXg/zX64CZn8mK1I/++25kkHwEMaiEUJPevX2hfzz+d71D1JughW5/2vJZbPXM9Z1DP2bq2ZutWvV8rirKHrvNB/VGzU6fDGe/8Aw==</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_061537</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_061551</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_061551</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_061551</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvNIGV8wN1egikBISEgyA4RM8jKlyG2sxJYcSQaSr1/JgAfIZdl9gep2q/v0RUd9IlASu35XCOCSMFpaJTEVfq5tGxmnPkOCCJ+iBIQvsT/pXo98t2L7aHvEKA37beNP6DUCr/7UNG23ZpseBsds2qhmIlythaEdql+kTIXIYEiFRFS2Ddd2PNNxTMeb2rbveb7nVJr11qNRmgEXyrcyqdjGBtRKtI1IytS3rOVyWVlWK4zPLde2Hev39WiCI0iQ0TlZZ5QH4p2NPa4EgCGOcQWzxDqx9mxOAuFPyJwimXHYxAq+imVbdstSNoEg8x9GcRaCIQ1ZLvYQZZRgFJN3pOtzDTJiQakbzxknMkq+TMKxtWMTVtjEjkd/GNY+tCMd7SHkApkiQs7G1xhC4EAxlO7Gw7bx47iu5UenHFERMp6IffG/4QG6gJilEJhim9YG2vEOP6lU5wSwP6Q4zgRZwI0e1hRhEJtuAj7eVeknh5CsRkSoAV0Jjc7ahXcgrqvRJ3MQ8v80aKc5ayczFGfQuR89JG9B49Zdev3ZxVV9/lg/7Z/O5o0Za+cAdo1zRdHatXgwlMUQrU8o6LNT9CsKpvXz897rr8V1+XIevCJxffdA3xf2ZQj98I7/VgGS22l6Xq2X2f016rL0avTwHK2ict16uJzFVVzutx5/D26dIc9aZRiMnSBAzJuMRunSaS4vqUTZWzO0xoFE7125QnyZ1mYZjZoX1s+Y8LB7cTOwz+/K5erl1T2TzjJ0R/zynoaPMzLMQC7bRTo7+Pd12zs/yZ6eAcutqMdg2C8NVJeQ/J7MtIYEZpib+qkmHyGBSqOjT2nu8DNFdyTwVQ/Xst3oNc5qPdezTz23WbXP7FrVbrRazsDuDgZn3S3JrFEcQOwxGhIdS1Puemy+B4gTXwANgJsLlimmE8Y3HvtIotKQjtUlYFTAlCl6duJk1aw9Rc8ye31zXlDEpc2eX9L5k1G6YfKW3vJuKIHvk3J1j5THgElKQDO3HmyhJltIVYxXtMhk7FQWqEIhU9zONc36rtesWYIkaQwaqpWwIIuhkkZpXhpLrP9dRTYi147Ppvl1+zKxw2/bGiibgGgDoXM5BdVH+OR1qW4T+Trh+m7CW/fdLCD6ZqmCSk7wGsn+p79zogekGBKV0Z/e5I+zxV2YH33840nrG1DWYT2KQMGC7ITdvt3qFVC80dl28xVVXivZYpHl/WtofuTKvaVo0rEmgDNFa29T9gLUKlxYR70hBeqDyIV+H18mIzqRSEKipq2Ui0csDRMQemkYqnuyOnYj2Qup6iZhJT/T9WK18GjE3+5E2MfaTql/qr8l48Hfdn3iayeOylPtDJLQuZb0+/H2xVBgptwSxXyM7zr/zMFnwfeVRZELLFJN01Mm4esvJU1pbQNhzDIqh30jV+zSbI5TvqXg/zX64CZn8mK1I/++25kkHwEMaiEUJPevX2hfzz+d71D1JughW5/2vJZbPXM9Z1DP2bq2ZutWvV8rirKHrvNB/VGzU6fDGe/8Aw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BC4923E241F6E05305991F0A96D5</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>IE</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7BC4923E241F6E05305991F0A96D5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BC4923E241F6E05305991F0A96D5</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7E5C240B42830E05307991F0AFFEA</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7E5C240B42830E05307991F0AFFEA</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7EFE127473D3BE05307991F0A218C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7EFE127473D3BE05307991F0A218C</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1997-11-18</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>55d0a6f8-52ef-4e53-be70-a739cfb9f815</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b2ca4d41-2a9d-49d5-b5d3-ca4e04f2c286</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00052_Account and User Create with IE 107_BasicChildUserCreate_111_SUCCESS_P0" searchProperties="true" id="56847741-dc72-4a2e-a432-f037c85b438e"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="3ca2c062-f36a-4a30-9975-eea16f88dcf9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="98f01735-cc9d-41e5-a4bf-0150d738ea96"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","IE");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="12317343-039e-4929-8c62-0a3517b09407"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="5bdda60c-aa92-4a0a-b01f-b69f889cd20b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for BasicChildUserCreate" id="50976d8a-1921-4fe6-99ae-8dcf21c3bd3b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("CHILD_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian",tC.getPropertyValue("LegalGuardian"));

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call BasicChildUserCreate" id="d6405ae1-8f9d-42fa-b08e-4548c3f8a099"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMr5gQ3AFqgiExBkyJECuLykhN1gZWwZJNpCvX8mAA+Sy7D651G6dPn3Rkc44iiPba3EOTJCElpZxRLmXWxtayqiXIE64R1EM3BPYG7Zuep5dNj203aKV/E5DezUxHrs4sHSnbpm642JHP50Eth5UqxBUx7aNUE26cp6CT7lAVDQ027Qc3bJ0yxmZpuc4nlsv163TF630AIxLbOlSNrUNqSVvaKEQM88wFotFeVEpJ2xq2KZpGU83vSEOIUZa82ydUR6INTf+uBwAhijCZZzExpmx53MWcG9IphSJlMEmVvBdLNMw64b0CTiZ/tKKvRD4dJLkyzaiCSUYReQdqfrcgAiToNSKpgkjIoy/TcIyFbAOS6xjy6G/NGOf2pFAewwZRzoPkbXBGsAEGFAMpfuB39B+Hde1fOuIIconCYv5/vK/8QGaQZTMIND5Nq0NteMBv6hU8wyw51McpZxk8EcN6wxh4JtuAj4eqnTLYEKWPcLlgC65Ymfs0jtYrqvRIVPg4v80aKc5a5AHFKXQfLx8YaLLL0N8eZpOVo+90QT+zitDUl00cgK7zrmhaO16eTCUxRCtd/Tr72Hn6nw+XOJ2n6zequ/PFx1+78fDcctPXXrfJ/XlZTZ+7j6Gse0Y9stNb/U0sJ9YtVPp2ksmVteD65e+xU/eJv5sejqm45Owxnn7Yno+JnfLk5vqqEL94PHt+arXP3Gt4CHs/s64HYSX7pMdopj4oh8sxfUDZvPeZdaP7zJcMdlt7Wa6cmp37tU5jYOH+026B/z3bdszP0zHb4DFdqnGwO+UurJLSPwsZspCAn2Su3ozJT5cABVaU+1S2uGlUu5I4MkertdmrV07bzt1u9I1HatbvTDdiunW61bXbNWrHXcrMmsWBxTbCZ0QFUtJ7npsfiaIY48DDYDpWZJKpePaD4gdJFDJpwN5CBLKYZRIeX5zYRrV5u7q/X1B2SzDMy59T6V6/0lEn/ZZayKA7UtyZU+SB4DJjIDSbTXWXM41F7IUc5SlIrLKGSpTSKWyMyWynu2cugYn8SwCRdSIkyCNoDwLZ3lhDL7+2jrCPLcOLkb5Yfs2rcN/2wpIn4AoB65yOQfZRfjibnG2iXyfcHU34S18Kw2IOleynIIRvGay/+tjStR4FCMiM3ptD1+tLe/C/ejtn3caP5AyDutRBAoyshN2e3PLO0CqRnPbzTkqz8tplqV5/2pKHZmEN6RIWsYQcCpFbTVK/gI1CgjjqBukYH0QubDv80tFSIcCCYjltJXy5RFPhiFw9WTw5SlZHvse2Qsp6yZgKb6ytSP53FGMf3wRYQ8rP2m+lZ9FwoKPdn2BtRNH5ilfDILQqVqp22P1zVDgRMISqXsJ2wX/CuCr4PvGosgFFyGnaZwK+P5PSQlaQ0MYJykVfkfLDbsim/MUqxl4H06fYHIdLx525N9fdjrJRwCDfA5ykuOr+9lT80+nO0K9CXqo1W27KwG7ttO+6ORaXVtrdfe8Uy2Ksseu+cn82bJTp8MZb/4D</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_061555</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_06167</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_06167</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_06167</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMr5gQ3AFqgiExBkyJECuLykhN1gZWwZJNpCvX8mAA+Sy7D651G6dPn3Rkc44iiPba3EOTJCElpZxRLmXWxtayqiXIE64R1EM3BPYG7Zuep5dNj203aKV/E5DezUxHrs4sHSnbpm642JHP50Eth5UqxBUx7aNUE26cp6CT7lAVDQ027Qc3bJ0yxmZpuc4nlsv163TF630AIxLbOlSNrUNqSVvaKEQM88wFotFeVEpJ2xq2KZpGU83vSEOIUZa82ydUR6INTf+uBwAhijCZZzExpmx53MWcG9IphSJlMEmVvBdLNMw64b0CTiZ/tKKvRD4dJLkyzaiCSUYReQdqfrcgAiToNSKpgkjIoy/TcIyFbAOS6xjy6G/NGOf2pFAewwZRzoPkbXBGsAEGFAMpfuB39B+Hde1fOuIIconCYv5/vK/8QGaQZTMIND5Nq0NteMBv6hU8wyw51McpZxk8EcN6wxh4JtuAj4eqnTLYEKWPcLlgC65Ymfs0jtYrqvRIVPg4v80aKc5a5AHFKXQfLx8YaLLL0N8eZpOVo+90QT+zitDUl00cgK7zrmhaO16eTCUxRCtd/Tr72Hn6nw+XOJ2n6zequ/PFx1+78fDcctPXXrfJ/XlZTZ+7j6Gse0Y9stNb/U0sJ9YtVPp2ksmVteD65e+xU/eJv5sejqm45Owxnn7Yno+JnfLk5vqqEL94PHt+arXP3Gt4CHs/s64HYSX7pMdopj4oh8sxfUDZvPeZdaP7zJcMdlt7Wa6cmp37tU5jYOH+026B/z3bdszP0zHb4DFdqnGwO+UurJLSPwsZspCAn2Su3ozJT5cABVaU+1S2uGlUu5I4MkertdmrV07bzt1u9I1HatbvTDdiunW61bXbNWrHXcrMmsWBxTbCZ0QFUtJ7npsfiaIY48DDYDpWZJKpePaD4gdJFDJpwN5CBLKYZRIeX5zYRrV5u7q/X1B2SzDMy59T6V6/0lEn/ZZayKA7UtyZU+SB4DJjIDSbTXWXM41F7IUc5SlIrLKGSpTSKWyMyWynu2cugYn8SwCRdSIkyCNoDwLZ3lhDL7+2jrCPLcOLkb5Yfs2rcN/2wpIn4AoB65yOQfZRfjibnG2iXyfcHU34S18Kw2IOleynIIRvGay/+tjStR4FCMiM3ptD1+tLe/C/ejtn3caP5AyDutRBAoyshN2e3PLO0CqRnPbzTkqz8tplqV5/2pKHZmEN6RIWsYQcCpFbTVK/gI1CgjjqBukYH0QubDv80tFSIcCCYjltJXy5RFPhiFw9WTw5SlZHvse2Qsp6yZgKb6ytSP53FGMf3wRYQ8rP2m+lZ9FwoKPdn2BtRNH5ilfDILQqVqp22P1zVDgRMISqXsJ2wX/CuCr4PvGosgFFyGnaZwK+P5PSQlaQ0MYJykVfkfLDbsim/MUqxl4H06fYHIdLx525N9fdjrJRwCDfA5ykuOr+9lT80+nO0K9CXqo1W27KwG7ttO+6ORaXVtrdfe8Uy2Ksseu+cn82bJTp8MZb/4D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C2F200F24CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>IE</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7C2F200F24CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C2F200F24CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7BC4923F041F6E05305991F0A96D5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7BC4923F041F6E05305991F0A96D5</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7EBEA4F442B5DE05305991F0A09CA</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7EBEA4F442B5DE05305991F0A09CA</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>07C7BC4923F041F6E05305991F0A96D5</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>41d9250c-a460-46c5-961b-26890cb14e9a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aed94ee9-90b0-49fc-99cb-64b647ef163d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00053_Account and User Create with AU 107_SecondFullUserCreate_111_SUCCESS_P0" searchProperties="true" id="e30e4cd6-f770-4d70-9e9a-5a2123374f16"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="3a40615f-f3ef-49cc-a3aa-7ebafa1efda0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="acd0c1e0-353e-446a-83b7-fbd2c6bc5881"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AU");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="f193c06c-5576-4dfa-99d6-8d9928b579d4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="422fa132-af65-47fd-a4ea-7e2ae4180366"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFullUserCreate" id="1ea05f89-6279-4e17-a301-3a99d362f18f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create" id="74b96c8f-84d3-4e4b-b69b-3013c6c42ad6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvO4ZXzB5uIKVBEuFbIkEEgymbykhNwGJbYMlmwcvn4lAw4mkGX3yaV2q/t099GRrhgKfNNpMwYRJyEtpYFPmZNZm0ocUSdEjDCHogCYw7Ezbd8NHbOsO2i/RSkNuk3lzTAqXsPSTdWb1aqqVWl4ah3XTRVBAzy9Yui2MROujMUwoIwjypuKqRuWahiqYT3qumPZjmGXLcN6VUrPEDERW7iUdWUHKmVNZcH50tG09XpdXlfKYTTXTF03tJe74RQvIEBK62pbUZYoau38cdkFDL6PyzgMtCut4HPlMmdK5hTxOIJdLvdcLl3TG5rwcRmZ/1LyveAOqBdmyw6iISUY+WSDZH/ugC9Ct9T252FE+CI4W4Shy8AqpFjFhkV/KVoR2oWBCggjhlS2QMYu1gQ8iIBiKD1NBk3l12VTy7Y+RogyL4wCVlz+NzxAE/DDJbgq25e1g3Z5wBOdal0BdgYU+zEjCdxLsi4RBrabJuDLQ5XGEXgkHRImCJoyiU47hHe03HajS+bA+P8Z0MFwtkGekR9Dq2293j9Mhq+3o/d52h+bRuI/6pXbwVPQa2YADp0zQz7a7fKIlDmJtjuS0PJ1u7Yx0xSbdDoi9RvjT2ATXP0gej164hOPPE0sL4n/Xj5Vqa+j+e/r22QRd3vjcHw/7HixUZ9hr/H6TExv5I3tyt2wH9/cvBgQjezrB/ZsWeZslk4qw2tzZU+th8TvDV5e+nX+4A3S0ROvzzebdX8z+6jyyIfGn9f75V/o9/y9unLTZ7uG+5NZe31beWjm5RzgL9r2Z34az94B8/1S0mDQLfXFlBD/Wcykhbiql7k6Syk+jAPlSkvuktrhxELuiOuIGW7Xeq1T69kd09K7XbNe0Xu6XdFrjYbR19v9fq+9F5ktiiOInZB6ROaSkrulzc8AceAwoC5EahLGQumY8kPELuKoNKATcQhCyuAxFPIMlZWNP1fVhHmb+mK+ZJtqxD4WK6V0H/IRHUVtj0NUlORKQZIngMmSgNRtSWsmeM24aMUKJTH3jXKCyhRioeyRFFnHtOq2xkiw9EEC1YLQjX0oLxfLrDEa236F1GCWWSe9x+ywnS3r+N++A8LHJdKByVquQUwRTtwt+r6Q8wVXDwveh2/HLpHnSrSTRwRvkRR/fbFE0iOniKjorTN9M/a4c/eLt3/fqf0ASjvuR57ITchB2v3NLe4AoRqt/TRXqLwqx0kSZ/OrSXWMRHhNiKShTQHHQtQ+H8MPoFoeQrvoBslRH2XO7UV8MV/QKUccAsG2Ura84MkwBSafDANxStJL3yOFlKJvHFJ+ytbxxXNHIv7xRYQdLP2EeSw+6zByv8Z1ItZBHlGneDFwQudyJW+PzzOkwKEIS4TuhdFh8FMBTiUvGvMm51i4YNMs5nD+T0kKWlNBGIcx5YOukhkORTbDyT+X4Hw5fQuT6Xj+sCP//rJTSUYBDOI5yEgWX97PjuQ/nR8I9S7psVZ3zL7gjmFbnV63oNXX3WrelAK61jfzd8tBn4453voH</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_061611</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_061623</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_061623</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_061623</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvO4ZXzB5uIKVBEuFbIkEEgymbykhNwGJbYMlmwcvn4lAw4mkGX3yaV2q/t099GRrhgKfNNpMwYRJyEtpYFPmZNZm0ocUSdEjDCHogCYw7Ezbd8NHbOsO2i/RSkNuk3lzTAqXsPSTdWb1aqqVWl4ah3XTRVBAzy9Yui2MROujMUwoIwjypuKqRuWahiqYT3qumPZjmGXLcN6VUrPEDERW7iUdWUHKmVNZcH50tG09XpdXlfKYTTXTF03tJe74RQvIEBK62pbUZYoau38cdkFDL6PyzgMtCut4HPlMmdK5hTxOIJdLvdcLl3TG5rwcRmZ/1LyveAOqBdmyw6iISUY+WSDZH/ugC9Ct9T252FE+CI4W4Shy8AqpFjFhkV/KVoR2oWBCggjhlS2QMYu1gQ8iIBiKD1NBk3l12VTy7Y+RogyL4wCVlz+NzxAE/DDJbgq25e1g3Z5wBOdal0BdgYU+zEjCdxLsi4RBrabJuDLQ5XGEXgkHRImCJoyiU47hHe03HajS+bA+P8Z0MFwtkGekR9Dq2293j9Mhq+3o/d52h+bRuI/6pXbwVPQa2YADp0zQz7a7fKIlDmJtjuS0PJ1u7Yx0xSbdDoi9RvjT2ATXP0gej164hOPPE0sL4n/Xj5Vqa+j+e/r22QRd3vjcHw/7HixUZ9hr/H6TExv5I3tyt2wH9/cvBgQjezrB/ZsWeZslk4qw2tzZU+th8TvDV5e+nX+4A3S0ROvzzebdX8z+6jyyIfGn9f75V/o9/y9unLTZ7uG+5NZe31beWjm5RzgL9r2Z34az94B8/1S0mDQLfXFlBD/Wcykhbiql7k6Syk+jAPlSkvuktrhxELuiOuIGW7Xeq1T69kd09K7XbNe0Xu6XdFrjYbR19v9fq+9F5ktiiOInZB6ROaSkrulzc8AceAwoC5EahLGQumY8kPELuKoNKATcQhCyuAxFPIMlZWNP1fVhHmb+mK+ZJtqxD4WK6V0H/IRHUVtj0NUlORKQZIngMmSgNRtSWsmeM24aMUKJTH3jXKCyhRioeyRFFnHtOq2xkiw9EEC1YLQjX0oLxfLrDEa236F1GCWWSe9x+ywnS3r+N++A8LHJdKByVquQUwRTtwt+r6Q8wVXDwveh2/HLpHnSrSTRwRvkRR/fbFE0iOniKjorTN9M/a4c/eLt3/fqf0ASjvuR57ITchB2v3NLe4AoRqt/TRXqLwqx0kSZ/OrSXWMRHhNiKShTQHHQtQ+H8MPoFoeQrvoBslRH2XO7UV8MV/QKUccAsG2Ura84MkwBSafDANxStJL3yOFlKJvHFJ+ytbxxXNHIv7xRYQdLP2EeSw+6zByv8Z1ItZBHlGneDFwQudyJW+PzzOkwKEIS4TuhdFh8FMBTiUvGvMm51i4YNMs5nD+T0kKWlNBGIcx5YOukhkORTbDyT+X4Hw5fQuT6Xj+sCP//rJTSUYBDOI5yEgWX97PjuQ/nR8I9S7psVZ3zL7gjmFbnV63oNXX3WrelAK61jfzd8tBn4453voH</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C2F201154CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>AU</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7C2F201154CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C2F201154CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7E5C240DD2830E05307991F0AFFEA</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7E5C240DD2830E05307991F0AFFEA</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7EBF2803C2B8FE05305991F0A1FE0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7EBF2803C2B8FE05305991F0A1FE0</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1995-11-19</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b0db0f3b-13bc-4f60-bef7-988ada12f5d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3ea35392-7c26-4bed-953c-2155a31860ed</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00054_Account and User Create with AU 107_StandardYouthUserCreate_111_SUCCESS_P0" searchProperties="true" id="b72e0310-974d-440d-8c21-3a6891da6bc4"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="d2fc4f7c-a08a-4720-931e-f1901bdda66a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="8d5aeaa8-ccea-4c6f-a684-2d113b113113"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AU");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="ea0759b4-85a0-46d8-bdae-930502c25588"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="fc2db133-5f4e-48fb-b6f3-3fa565233ce8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUserCreate" id="db2d0127-d14e-433a-a341-ff6f586e9c5f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StandardYouthUserCreate" id="61ce4b2a-5d53-412e-b33c-7d2683a15a49"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VyvM4ZbxgwLgCVQRCwgxZCrJM8pISchuUsSXHkljy9Vcy4ACBXO59cnW71X160VGfcZTEbtDmHDJBGC0tkpjyINc2DZnRgCFOeEBRAjwQOBi1rweBW7YDtDlilPrdpvHqQK3mjutVs4Hrken5tdD0x1XPRPbYcXBjPPYiR5lyLqFPuUBUNA3XdjzTcUzHu7ftwKsGFadccSovRukRMq58K5OybaxBLXjTmAqRBpY1n8/L80qZZRPLtW3H+nM9GOEpJMhona0yygNlrbU9LoeAIY5xGbPEOrN2bM5CHozIhCIhM1jHCo/Fsi27YSmbkJPJD6M4C2GfRiwXO4gySjCKyQfS9bkGMWVhqR1PWEbENDmahGNrxyYssIkdj/4wrF1oJzraQZhxZPIpcta+hhBBBhRD6WHYbxo/TutafvQ+Q5RHLEv4rvjf8ACdQcxSCE2+SWsN7XSHByrVOgMc9CmOJSczuNHDmiIMfN1NwKe7Kt1lEJHFgHA1oAuu0Vnb8PbEVTW6ZAJc/J8GbTVn5eQRxRJajw4ZVLzzj9vOMh7zSTxwr57fB0ue/PabOYBt41xRtHYl7g1lMUSrE2j69Pf58dcweoroTxnfDX/K8eWNH8c3c5u+WZNkdFV1p1de/DF88SeyTvwbO6UPvLHMqpH/Szyz2fTp+VnWp17ljyeHNR5fZuHj3XjRhrkg0muQkHYv3iqXMrRJ6kO73r0R+LYnX9JIXM0v3+a96vj5/a7/u++mbTr7iFL8kNYd7zxq8zeosqu3dOF+3NkXzSKdLfy7us2dH8nxG2CxEfUY9LulnuoSEt+TmdaQ0Ixy0yDV5MMFUGG09CnNHYFUdEfCQPVwJdv1Tv2851V67Z7ndXrnF3a1YtcbDadnt3u1em9DMisUexA7jEZEx9KUuxqb7wHiJOBAQ8jMGZOK6bjxjccuEqjUp0N1CRjlcM80PctptJhQrzZuiKoDS0fKRcxE1WdG6YaJW3qbtSMB2S4pV3ZIeQiYpAQ0c+vB5mqyuVDFeEczKWKnPENlClJxe6ZpNnA9v2pxkqQxaKhWwkIZQzmdpnlpLL76uibCPNcOL+7z63Y0sf1/mxoom5BoA65zOQfVRzjwuribRI4nXNtOeOO+LUOib5YqqMgIXiHZ/fU5J3pAiiFRGb12Rq/OBndhfvLxryetb0BZ+/UoAoUzshV283arV0DxRmvTzXdUfi/L2Uzm/atrfsyUe0vRpGONAEtFa8t79heoVbiwTnpDCtR7kQv9Lj4ppnQkkIBETVspF09YGkbA9dLQV/dkcepGshNS1U3AQhzSdWK18GjE3+5EOMDaTqnv1GfOsvCzXQd8bcVReaqdQRA60ZJ+P5ZHhgIz5ZYo5mPZtvNDDg4F31UWRS6wCDVNYyng+J+SprSmgTBmkop+18gV2zSb4xTLFIJPoy9uciYvVjvy77udSfIRwKAWQk5y//qFDvT808kWVa+D7rP1RbVTsy/snuu79jZb+77bLoqyg671Rf1Vs1Wn/Rlv/QM=</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_061627</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_061639</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_061639</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_061639</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VyvM4ZbxgwLgCVQRCwgxZCrJM8pISchuUsSXHkljy9Vcy4ACBXO59cnW71X160VGfcZTEbtDmHDJBGC0tkpjyINc2DZnRgCFOeEBRAjwQOBi1rweBW7YDtDlilPrdpvHqQK3mjutVs4Hrken5tdD0x1XPRPbYcXBjPPYiR5lyLqFPuUBUNA3XdjzTcUzHu7ftwKsGFadccSovRukRMq58K5OybaxBLXjTmAqRBpY1n8/L80qZZRPLtW3H+nM9GOEpJMhona0yygNlrbU9LoeAIY5xGbPEOrN2bM5CHozIhCIhM1jHCo/Fsi27YSmbkJPJD6M4C2GfRiwXO4gySjCKyQfS9bkGMWVhqR1PWEbENDmahGNrxyYssIkdj/4wrF1oJzraQZhxZPIpcta+hhBBBhRD6WHYbxo/TutafvQ+Q5RHLEv4rvjf8ACdQcxSCE2+SWsN7XSHByrVOgMc9CmOJSczuNHDmiIMfN1NwKe7Kt1lEJHFgHA1oAuu0Vnb8PbEVTW6ZAJc/J8GbTVn5eQRxRJajw4ZVLzzj9vOMh7zSTxwr57fB0ue/PabOYBt41xRtHYl7g1lMUSrE2j69Pf58dcweoroTxnfDX/K8eWNH8c3c5u+WZNkdFV1p1de/DF88SeyTvwbO6UPvLHMqpH/Szyz2fTp+VnWp17ljyeHNR5fZuHj3XjRhrkg0muQkHYv3iqXMrRJ6kO73r0R+LYnX9JIXM0v3+a96vj5/a7/u++mbTr7iFL8kNYd7zxq8zeosqu3dOF+3NkXzSKdLfy7us2dH8nxG2CxEfUY9LulnuoSEt+TmdaQ0Ixy0yDV5MMFUGG09CnNHYFUdEfCQPVwJdv1Tv2851V67Z7ndXrnF3a1YtcbDadnt3u1em9DMisUexA7jEZEx9KUuxqb7wHiJOBAQ8jMGZOK6bjxjccuEqjUp0N1CRjlcM80PctptJhQrzZuiKoDS0fKRcxE1WdG6YaJW3qbtSMB2S4pV3ZIeQiYpAQ0c+vB5mqyuVDFeEczKWKnPENlClJxe6ZpNnA9v2pxkqQxaKhWwkIZQzmdpnlpLL76uibCPNcOL+7z63Y0sf1/mxoom5BoA65zOQfVRzjwuribRI4nXNtOeOO+LUOib5YqqMgIXiHZ/fU5J3pAiiFRGb12Rq/OBndhfvLxryetb0BZ+/UoAoUzshV283arV0DxRmvTzXdUfi/L2Uzm/atrfsyUe0vRpGONAEtFa8t79heoVbiwTnpDCtR7kQv9Lj4ppnQkkIBETVspF09YGkbA9dLQV/dkcepGshNS1U3AQhzSdWK18GjE3+5EOMDaTqnv1GfOsvCzXQd8bcVReaqdQRA60ZJ+P5ZHhgIz5ZYo5mPZtvNDDg4F31UWRS6wCDVNYyng+J+SprSmgTBmkop+18gV2zSb4xTLFIJPoy9uciYvVjvy77udSfIRwKAWQk5y//qFDvT808kWVa+D7rP1RbVTsy/snuu79jZb+77bLoqyg671Rf1Vs1Wn/Rlv/QM=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7E5C60E0F2820E05307991F0A882A</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>AU</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7E5C60E0F2820E05307991F0A882A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7E5C60E0F2820E05307991F0A882A</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7BF43FAF44CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7BF43FAF44CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7EBEA4F5F2B5DE05305991F0A09CA</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7EBEA4F5F2B5DE05305991F0A09CA</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1997-11-18</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>55d0a6f8-52ef-4e53-be70-a739cfb9f815</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b2ca4d41-2a9d-49d5-b5d3-ca4e04f2c286</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00055_Account and User Create with AU 107_BasicChildUserCreate_111_SUCCESS_P0" searchProperties="true" id="3381c42d-30e2-4c33-8422-8d67f752f104"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="54a94184-23c7-4442-9550-f052b6952030"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="78a8c520-f48d-4736-a835-6c5d21f0afaf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AU");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="dbf545db-26e4-4ded-b8ac-7604c876a69a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="d06ceff2-9039-44c0-97ee-675ec5f2b429"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for BasicChildUserCreate" id="c5a9984b-46ec-4dc6-9a9d-b0578284d2bd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("CHILD_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian",tC.getPropertyValue("LegalGuardian"));

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call BasicChildUserCreate" id="21feed83-278d-4dee-bd6e-e24746401dd0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynlMGV+wIbgCVYTLABMIAyST5CUl5AYrGNlYMhi+fiUDDpDLsvsCpXar+3T30ZFuGVr4plNjDCJOAppLFj5lTmqtKHFEnQAxwhyKFsAcjp1RrXfvmHndQYctSq7TqChvVkmHsm0WVGtqGeKnNFVvABvqTblUnOgT3S0aU+HKWAwdyjiivKKYumGphqEa1ljXHct2rHK+oJuvSu4JIiZiC5e8ruxBJayieJyHjqat1+v8upAPoplm6rqhPffuR9iDBVKqt7uK0kRRde+P8y5g8H2cx8FCu9VOfG5d5ozIjCIeR7DP5X6XS9f0siZ8XEZmV0q2F9wOnQbpso5oQAlGPtki2Z8ecC9wczV/FkSEe4tvizB0GViFBKvYsOiVop1CuzDQCcKIIZV5yNjHGsIUIqAYco/DTkW5umxq6dZxhCibBtGCnS7/Gx6gK/CDEFyVHcraQ7s84Bedqt4CdjoU+zEjK+hLsoYIA9tPE/DloXKDCKYkuSdMEDRhEp12DO9suetGg8yA8f8zoKPh7II8IT+Gahz+JvadXmyVXswkWFsG7Q9a7+3JOOxVUgDHzqkhG+1ueUbKjES7HX81hJvl69WotjbaPaPrs97jsofuy2atNZvP6Yv++ui+PMfzdjJ+mm4n9qw4aIONi53i66q7Scb1+KHmtl66/U5/FEJhHsz07mZ17eHi82C9mZdWyXa+xL1kO+je/bIeW/Tv45/Y/DNavs7aRr/c7TzVfo1utuvxsLZ5uLtvWdfN+Z2WbPtjo2e+vjfrWnk2aD91n9aVrJwj/Ke2w5kfxZN3wPywlDToNHItMSXEfxYzaSGuOk1dnVCKD+NAuVKVu6R2OLGQO+I6Yoa7tV6ql5p23Sxbtm3emHZTtwt6qVw2WnpNLxiFg8jsUJxBrAd0SmQuKbk72vwMEC8cBtSFSF0FsVA6pvwQsYE4ynXoUByCgDIYB0KevW3R83TP9mBTNnzb3rKALzE2kZLrB/yBPkS1KYfoVJMLJ5o8BExCAlK4Ja+ZIDbjohdLtIq5b+RXKE8hFtIeSZV1TOvG1hhZhD5IpNoicGMf8qEXpp3R2O7fVBFmqXXYHKen7du6zr8dWiB8XCIdmKzlDsQY4YvLpXAo5PuCi8cFH8LXYpfIgyX6ySOCd0hOP33QRPIj44io6K0+ejMOuDP3i7d/3qn9AEo770eWyF2Ro7SHq1tcAkI2qodpLlF+mY9XqzidX0nKYyTCa0IlDW0EOBaqthkHc6BaFkK76ArJUJ9lzuyn+GLu0RFHHBaCbbl0ecGbYQRMvhk64pgklz5ITlKKvnFI+Fe2ui/eOxLxj08i7GDpJ8wD8bcOIvdjXF/EOsoj6hRPBk7oTK7k9bH5hhQ4EGGJEL4gOg7+VYCvkp8asyZnWLhg0yTm8P2XnFS0ioIwDmLKOw0lNRyrbIqTb0JwPpw+hUmFPHvZkX9/2qkkpQAG8R5kJI0vL2hH8p/OjpR6n/RcrOtmS3KnaNWbjWOxbt01illTTtBVP5k/W476dM7x6j8=</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_061644</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_061656</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_061656</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_061656</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynlMGV+wIbgCVYTLABMIAyST5CUl5AYrGNlYMhi+fiUDDpDLsvsCpXar+3T30ZFuGVr4plNjDCJOAppLFj5lTmqtKHFEnQAxwhyKFsAcjp1RrXfvmHndQYctSq7TqChvVkmHsm0WVGtqGeKnNFVvABvqTblUnOgT3S0aU+HKWAwdyjiivKKYumGphqEa1ljXHct2rHK+oJuvSu4JIiZiC5e8ruxBJayieJyHjqat1+v8upAPoplm6rqhPffuR9iDBVKqt7uK0kRRde+P8y5g8H2cx8FCu9VOfG5d5ozIjCIeR7DP5X6XS9f0siZ8XEZmV0q2F9wOnQbpso5oQAlGPtki2Z8ecC9wczV/FkSEe4tvizB0GViFBKvYsOiVop1CuzDQCcKIIZV5yNjHGsIUIqAYco/DTkW5umxq6dZxhCibBtGCnS7/Gx6gK/CDEFyVHcraQ7s84Bedqt4CdjoU+zEjK+hLsoYIA9tPE/DloXKDCKYkuSdMEDRhEp12DO9suetGg8yA8f8zoKPh7II8IT+Gahz+JvadXmyVXswkWFsG7Q9a7+3JOOxVUgDHzqkhG+1ueUbKjES7HX81hJvl69WotjbaPaPrs97jsofuy2atNZvP6Yv++ui+PMfzdjJ+mm4n9qw4aIONi53i66q7Scb1+KHmtl66/U5/FEJhHsz07mZ17eHi82C9mZdWyXa+xL1kO+je/bIeW/Tv45/Y/DNavs7aRr/c7TzVfo1utuvxsLZ5uLtvWdfN+Z2WbPtjo2e+vjfrWnk2aD91n9aVrJwj/Ke2w5kfxZN3wPywlDToNHItMSXEfxYzaSGuOk1dnVCKD+NAuVKVu6R2OLGQO+I6Yoa7tV6ql5p23Sxbtm3emHZTtwt6qVw2WnpNLxiFg8jsUJxBrAd0SmQuKbk72vwMEC8cBtSFSF0FsVA6pvwQsYE4ynXoUByCgDIYB0KevW3R83TP9mBTNnzb3rKALzE2kZLrB/yBPkS1KYfoVJMLJ5o8BExCAlK4Ja+ZIDbjohdLtIq5b+RXKE8hFtIeSZV1TOvG1hhZhD5IpNoicGMf8qEXpp3R2O7fVBFmqXXYHKen7du6zr8dWiB8XCIdmKzlDsQY4YvLpXAo5PuCi8cFH8LXYpfIgyX6ySOCd0hOP33QRPIj44io6K0+ejMOuDP3i7d/3qn9AEo770eWyF2Ro7SHq1tcAkI2qodpLlF+mY9XqzidX0nKYyTCa0IlDW0EOBaqthkHc6BaFkK76ArJUJ9lzuyn+GLu0RFHHBaCbbl0ecGbYQRMvhk64pgklz5ITlKKvnFI+Fe2ui/eOxLxj08i7GDpJ8wD8bcOIvdjXF/EOsoj6hRPBk7oTK7k9bH5hhQ4EGGJEL4gOg7+VYCvkp8asyZnWLhg0yTm8P2XnFS0ioIwDmLKOw0lNRyrbIqTb0JwPpw+hUmFPHvZkX9/2qkkpQAG8R5kJI0vL2hH8p/OjpR6n/RcrOtmS3KnaNWbjWOxbt01illTTtBVP5k/W476dM7x6j8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C2F201464CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>AU</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7C2F201464CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C2F201464CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7E5C294552825E05307991F0A0313</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7E5C294552825E05307991F0A0313</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7EBF280572B8FE05305991F0A1FE0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7EBF280572B8FE05305991F0A1FE0</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>07C7E5C294552825E05307991F0A0313</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>41d9250c-a460-46c5-961b-26890cb14e9a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aed94ee9-90b0-49fc-99cb-64b647ef163d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00056_Account and User Create with CA 107_SecondFullUserCreate_111_SUCCESS_P0" searchProperties="true" id="7a800f0f-c115-4dc6-975b-ee722d7178f5"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="9944e32c-1aa2-4ca5-9a3b-4c68a70cec02"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="904b306e-8497-40ea-9591-f5e305d35492"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CA");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="a7efdce5-fead-488f-b098-fd8794761e25"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="4b775d83-2a36-42bc-992a-55f653fcb0fa"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFullUserCreate" id="af941623-37e3-458d-88fd-65851ea5fee7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create" id="990cfecb-db5a-4efb-bdc7-082cb5b4c503"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynlMGV8wF7sCVYRLhgwkGSDZJC8pITdGiS0bSQYyXz+SAQ8ml2X3yaV2q/t099GRLjiKQttrcw5MkJiWNlFIuZdZm1rKqBcjTrhHUQTcE9ibtEdDzy6bHtpv0UqDblN7gZpb9yvI133bd3XHcl191rAbuum6GLA9M9HMla6cpzCgXCAqmpptWo5uWbrlTE3Tc2qe6ZSrpvWslR6AcRlbupRNbQdqw5vaQojEM4z1el1eV8oxCwzbNC3jcTSc4AVESGtdbCvKErHWzh+XfcAQhriM48i4MAo+Fz73JiSgSKQMdrn8r3KZhuka0sfnJDjT8r3gD+g8zpYdRGNKMArJb6T6MwKxiP1SOwxiRsQi+rIIy1SBddhgHVsOPdOMIrQTAxUQMo50vkDWLtYY5sCAYijdjwdN7ey0qWVbpwxRPo9ZxIvL/4YH6ArCOAFf5/uydtBOD/hJp1oXgL0BxWHKyQpuFFkThIHvpgn49FClOwZzshkSLgm64QqdcQjvaLntRpcEwMX/GdDBcLZBHlCYQuvBcPnAHpG4/T6b3vUe+z9ZXOt1n6Jp3MwAHDpnhny02+URKXMSbXfcg4ECcZ+MXh/IyG/E9Vm9K9p8Bq/dxe+3yjmpX3HXvR4Hr86wj87HS3gW89GwE7XPrwa313dPveCGTp75KiD/BOh57geXvZ/Dqw3bXDtJbI+W3Up9+IQHP+zHGQlu1reVybTxtBpWzichPE7vnyc/fr0HYslm0+l1ZTm9mr7fucmvW8fsWe7QZnMe0v4NI6xhNvNyDvAXbfszP0lnr4DFfqloMOiW+nJKSHwvZspCfH2euXqJEh8ugAqtpXYp7fBSKXfE9+QMt2uz3qlf9p1K/9KxnE7/smdWK2bdda2+2e7X6v29yGxRHEHsxHROVC4luVvafA8QRx4H6gPTV3EqlY5r30TsIoFKAzqWhyCmHCRltJd1IlAtMuE3gkZatRldvGGn+ppopZtY3NJb1p4LYEVJrhQkeQyYJASUbitac8lrLmQrlmiVitAqr1CZQiqVnSmR9WynUTU4iZIQFFAjiv00hHKySLLGGHz7tXWEeWYd96bZYfuyrON/+w5IH58oB65quQQ5Rfhwt1S96r6QrwuuHRa8D99OfaLOlWynYARvkRR//WWJokdOEVnRS2fyYu1x5+4nb/+40/gGlHHcjzyRvyIHafc3t7wDpGq09tNcovKynK5WaTa/ulJHJsMbUiQtYwI4laL2Po3fgBp5COOkGyRHfZQ5txfxpWJBJwIJiCTbStnyhCfDBLh6MgzkKdmc+h4ppJR9E7ARn9k6oXzuKMTfvoiwh5WfNN/Jzzpm/t9xfRLrII+sU74YBKGBWqnb4/0LUuBYhiVS92J2GPyzAJ8lLxrzJudYhGTTLBXw9Z+SErSmhjCOUyoGXS0zHIpshlO8J+D9dfoQJtPx/GFH/v1lp5OMAhjkc5CTLL66nz3FfxocCPUu6bFWd+y+5E5NanWvW9Dqy24tb0oBXeuD+aPloE/HHG/9AQ==</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_06170</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_061711</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_061711</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_061711</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynlMGV8wF7sCVYRLhgwkGSDZJC8pITdGiS0bSQYyXz+SAQ8ml2X3yaV2q/t099GRLjiKQttrcw5MkJiWNlFIuZdZm1rKqBcjTrhHUQTcE9ibtEdDzy6bHtpv0UqDblN7gZpb9yvI133bd3XHcl191rAbuum6GLA9M9HMla6cpzCgXCAqmpptWo5uWbrlTE3Tc2qe6ZSrpvWslR6AcRlbupRNbQdqw5vaQojEM4z1el1eV8oxCwzbNC3jcTSc4AVESGtdbCvKErHWzh+XfcAQhriM48i4MAo+Fz73JiSgSKQMdrn8r3KZhuka0sfnJDjT8r3gD+g8zpYdRGNKMArJb6T6MwKxiP1SOwxiRsQi+rIIy1SBddhgHVsOPdOMIrQTAxUQMo50vkDWLtYY5sCAYijdjwdN7ey0qWVbpwxRPo9ZxIvL/4YH6ArCOAFf5/uydtBOD/hJp1oXgL0BxWHKyQpuFFkThIHvpgn49FClOwZzshkSLgm64QqdcQjvaLntRpcEwMX/GdDBcLZBHlCYQuvBcPnAHpG4/T6b3vUe+z9ZXOt1n6Jp3MwAHDpnhny02+URKXMSbXfcg4ECcZ+MXh/IyG/E9Vm9K9p8Bq/dxe+3yjmpX3HXvR4Hr86wj87HS3gW89GwE7XPrwa313dPveCGTp75KiD/BOh57geXvZ/Dqw3bXDtJbI+W3Up9+IQHP+zHGQlu1reVybTxtBpWzichPE7vnyc/fr0HYslm0+l1ZTm9mr7fucmvW8fsWe7QZnMe0v4NI6xhNvNyDvAXbfszP0lnr4DFfqloMOiW+nJKSHwvZspCfH2euXqJEh8ugAqtpXYp7fBSKXfE9+QMt2uz3qlf9p1K/9KxnE7/smdWK2bdda2+2e7X6v29yGxRHEHsxHROVC4luVvafA8QRx4H6gPTV3EqlY5r30TsIoFKAzqWhyCmHCRltJd1IlAtMuE3gkZatRldvGGn+ppopZtY3NJb1p4LYEVJrhQkeQyYJASUbitac8lrLmQrlmiVitAqr1CZQiqVnSmR9WynUTU4iZIQFFAjiv00hHKySLLGGHz7tXWEeWYd96bZYfuyrON/+w5IH58oB65quQQ5Rfhwt1S96r6QrwuuHRa8D99OfaLOlWynYARvkRR//WWJokdOEVnRS2fyYu1x5+4nb/+40/gGlHHcjzyRvyIHafc3t7wDpGq09tNcovKynK5WaTa/ulJHJsMbUiQtYwI4laL2Po3fgBp5COOkGyRHfZQ5txfxpWJBJwIJiCTbStnyhCfDBLh6MgzkKdmc+h4ppJR9E7ARn9k6oXzuKMTfvoiwh5WfNN/Jzzpm/t9xfRLrII+sU74YBKGBWqnb4/0LUuBYhiVS92J2GPyzAJ8lLxrzJudYhGTTLBXw9Z+SErSmhjCOUyoGXS0zHIpshlO8J+D9dfoQJtPx/GFH/v1lp5OMAhjkc5CTLL66nz3FfxocCPUu6bFWd+y+5E5NanWvW9Dqy24tb0oBXeuD+aPloE/HHG/9AQ==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C2F201614CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>CA</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7C2F201614CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C2F201614CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7BF43FB414CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7BF43FB414CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7EBEA4F7A2B5DE05305991F0A09CA</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7EBEA4F7A2B5DE05305991F0A09CA</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1995-11-19</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b0db0f3b-13bc-4f60-bef7-988ada12f5d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3ea35392-7c26-4bed-953c-2155a31860ed</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00057_Account and User Create with CA 107_StandardYouthUserCreate_111_SUCCESS_P0" searchProperties="true" id="d0b21620-7e9d-454f-9f69-61cd7e9c7b25"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="6861adde-d879-499b-a9b8-2c043e2a781f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="56b98a4b-3edc-4f66-aef3-a7dae5468948"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CA");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="59cac735-f2d5-40c6-9aca-73859998c256"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="079e29e9-dac9-4c67-8b0d-98f62e9eccc0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUserCreate" id="51187b5f-41fe-42fa-b681-a5109e16c832"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StandardYouthUserCreate" id="94060bf4-7faf-4701-be4e-d582de0c2d5b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZSwbc7ErUEUAZzy5DpBMkpcpITcgYiSwZEPy9SsZ8AC5LLtPrm63uk9fdNRnAs9jx28LAYmknJXW85gJP9c2jTRhPseCCp/hOQhfEn/Qvr7ynTLy8e6IUQq7TeOP16iPUMVzzTGOwHQr2DNHXq1uuh5BI7tSrUBlrEyFSCFkQmImm4aDbNe0bdN2hwj5bs23vXK15jwbpQdIhPKtTMrI2IJai6YxlXLhW9ZqtSqvKmWeTCwHIdt6vL4akCnMsdE622SUB0paW3tSjoBAHJMy4XPrzDqwOYuEP6AThmWawDZW9FksZCHPUjaRoJNvRnEWopCNeS52MOOMEhzTN6zrcw1yyqNSO57whMrp/NMkbKQdm7AmJrFd9s2wDqGd6OgAYSKwKabY3vrqwxgSYARK9/2waXw7rWv50WGCmRjzZC4Oxf+GB1gGMV9AZIpdWltopzv8oFKtMyB+yEicCprBjR7WBSYgtt0Ecrqr0l0CY7q+okIN6FpodNY+vCNxU40unYCQ/6dBe83ZOHnAcQqtl8n96LLXXb90L74vb6/46jnoWDW4e6ldN3MA+8a5omjtRjwaymKINidC9HbVGJBw9rTIuNv/+dheXvS8yvCmgsLVjx+XT5Ob4OfLszcPMtTGXXLRWPai2ZA/B+du6N721g/sUi5/ZLMJ/333vf/Wbbjs+fLXoB+cd1/tl5B3Rheo/fhYb6TVy0kHo+XwF47Pw8WvwXn49Hsmn6ooTmbX943vq0lovXne6G6In8Ps5/04YDWUPTzNAodHVafXLNLZw3+o2935QTqaAZE7UY9B2C0FqktYfk1mWkMjc5yb+gtNPkICk0ZLn9Lc4aeK7mjkqx5uZFTv1M+DRqPeDmy35nR6qFpBVc+zA9Suu6izI5kNiiOIHc7GVMfSlLsZm68BkrkvgEWQmBlPFdMJ4wuPXSxxKWR9dQk4EzDkip7t2atYOTYeE2BgJw5azO3IsWdTaZRuuLxlt0l7LCE5JOXKASn3gdAFBc3cerCFmmwhVTGWOEtlbJczXGaQKm5PNM36jtuoWoLOFzFoqNacR2kM5cV0kZfGEpuvY2Iicm2/N8yv26eJHf/b1UDZRFQbCJ3LOag+wgevC9ol8nnCtf2Ed+7baUT1zVIFlQklGySHv/7OiR6QYkhURn86gz/2DndhfvLx9yetL0BZx/UoAkUZ3Qu7e7vVK6B4o7Xr5hKXl+U0y9K8f3XNj4lybymatK0BkFTR2uuQvwCzChfWSW9IgfoocqE/xJfKKRtILGGupq2UiycsDQMQemkI1T1Zn7qRHIRUdZOwlh/pOrFaeDTiL3ci4hNtp9R36rPiSfS3XR/42ouj8lQ7g6RsoiX9frx+MhSEK7dUMR9P9p1/5OCj4IfKosgFFqmmaZRK+PxPSVNa08CE8JTJsGvkin2azXHK1wX4f43eucmZvFjt6L/vdibNR4CAWggFzf3rF9rX888me1S9DXrM1r1qx3FR0HYaFZSzdX3D1kHQaxdFOUDXeqd+r9mr0/GMt/4B</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_061715</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_061726</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_061726</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_061726</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZSwbc7ErUEUAZzy5DpBMkpcpITcgYiSwZEPy9SsZ8AC5LLtPrm63uk9fdNRnAs9jx28LAYmknJXW85gJP9c2jTRhPseCCp/hOQhfEn/Qvr7ynTLy8e6IUQq7TeOP16iPUMVzzTGOwHQr2DNHXq1uuh5BI7tSrUBlrEyFSCFkQmImm4aDbNe0bdN2hwj5bs23vXK15jwbpQdIhPKtTMrI2IJai6YxlXLhW9ZqtSqvKmWeTCwHIdt6vL4akCnMsdE622SUB0paW3tSjoBAHJMy4XPrzDqwOYuEP6AThmWawDZW9FksZCHPUjaRoJNvRnEWopCNeS52MOOMEhzTN6zrcw1yyqNSO57whMrp/NMkbKQdm7AmJrFd9s2wDqGd6OgAYSKwKabY3vrqwxgSYARK9/2waXw7rWv50WGCmRjzZC4Oxf+GB1gGMV9AZIpdWltopzv8oFKtMyB+yEicCprBjR7WBSYgtt0Ecrqr0l0CY7q+okIN6FpodNY+vCNxU40unYCQ/6dBe83ZOHnAcQqtl8n96LLXXb90L74vb6/46jnoWDW4e6ldN3MA+8a5omjtRjwaymKINidC9HbVGJBw9rTIuNv/+dheXvS8yvCmgsLVjx+XT5Ob4OfLszcPMtTGXXLRWPai2ZA/B+du6N721g/sUi5/ZLMJ/333vf/Wbbjs+fLXoB+cd1/tl5B3Rheo/fhYb6TVy0kHo+XwF47Pw8WvwXn49Hsmn6ooTmbX943vq0lovXne6G6In8Ps5/04YDWUPTzNAodHVafXLNLZw3+o2935QTqaAZE7UY9B2C0FqktYfk1mWkMjc5yb+gtNPkICk0ZLn9Lc4aeK7mjkqx5uZFTv1M+DRqPeDmy35nR6qFpBVc+zA9Suu6izI5kNiiOIHc7GVMfSlLsZm68BkrkvgEWQmBlPFdMJ4wuPXSxxKWR9dQk4EzDkip7t2atYOTYeE2BgJw5azO3IsWdTaZRuuLxlt0l7LCE5JOXKASn3gdAFBc3cerCFmmwhVTGWOEtlbJczXGaQKm5PNM36jtuoWoLOFzFoqNacR2kM5cV0kZfGEpuvY2Iicm2/N8yv26eJHf/b1UDZRFQbCJ3LOag+wgevC9ol8nnCtf2Ed+7baUT1zVIFlQklGySHv/7OiR6QYkhURn86gz/2DndhfvLx9yetL0BZx/UoAkUZ3Qu7e7vVK6B4o7Xr5hKXl+U0y9K8f3XNj4lybymatK0BkFTR2uuQvwCzChfWSW9IgfoocqE/xJfKKRtILGGupq2UiycsDQMQemkI1T1Zn7qRHIRUdZOwlh/pOrFaeDTiL3ci4hNtp9R36rPiSfS3XR/42ouj8lQ7g6RsoiX9frx+MhSEK7dUMR9P9p1/5OCj4IfKosgFFqmmaZRK+PxPSVNa08CE8JTJsGvkin2azXHK1wX4f43eucmZvFjt6L/vdibNR4CAWggFzf3rF9rX888me1S9DXrM1r1qx3FR0HYaFZSzdX3D1kHQaxdFOUDXeqd+r9mr0/GMt/4B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7E5C240FA2830E05307991F0AFFEA</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>CA</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7E5C240FA2830E05307991F0AFFEA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7E5C240FA2830E05307991F0AFFEA</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7BF887AF1462CE05305991F0A740C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7BF887AF1462CE05305991F0A740C</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7EBF280722B8FE05305991F0A1FE0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7EBF280722B8FE05305991F0A1FE0</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2000-11-17</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>55d0a6f8-52ef-4e53-be70-a739cfb9f815</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b2ca4d41-2a9d-49d5-b5d3-ca4e04f2c286</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00058_Account and User Create with CA 107_BasicChildUserCreate_111_SUCCESS_P0" searchProperties="true" id="1a3ae2ae-131f-451f-8c9c-a647f070adf8"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="4b9758a1-dd25-4319-9581-0da865bcafd3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="0759816f-7758-498a-be76-13abefc91566"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CA");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="67328c40-e7af-4aa9-8f74-d3307146f3e5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="d47fb6f3-c5d2-4e4b-bcc6-9849acda156c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for BasicChildUserCreate" id="f57806ee-d0d1-4c50-a4db-1665c2befd93"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("CHILD_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian",tC.getPropertyValue("LegalGuardian"));

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call BasicChildUserCreate" id="b94e2e51-f233-4741-a9c0-cb07f751450f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZrU/I6EP4rTP3olF4oFDrCDBdxUFAG8PL6xYnpAnlpE2gSQH/9SQpUQPRwzqfObje7z17yZK84iiM3qHMOiSCM5tZxRHmQaquGTGjAECc8oCgGHggcDOu9buDm7QDtjhi5TqtqvBU9FBZc5JvY82zTA4xNBFAxw4pbcN2iA0W3rEw5l9ChXCAqqoZrO57pOKbjjWw78EpBwcuXPe/VyD1BwpVvZZK3jS2oNa8aUyHmgWWtVqv8qpBnycRybduxXnrdIZ5CjIza1SajNFBS29rjfAgYogjnMYutK+vA5irkwZBMKBIygW2s8KdYtmVXLGUTcjK5MLKzEHbomKViE1FGCUYR+US6Pj0QUxbm6tGEJURM4x+TcGzt2IQ1NrHj0QvDOoR2pqMDhAlHJp8iZ+trAGNIgGLIPQ46VePivK6lR0cJonzMkpgfiv8ND9AlRGwOocl3aW2hne/wRKVqV4CDDsWR5GQJ93pY5wgD33YT8Pmucv0ExmTdJVwN6JprdNY+vCNxU40WmQAX/6dBe83ZOHlCkYQaeii0Bk37Neo/I+K3ZvLeXU1umnH3HVdTAPvGqSJr7UY8GspsiDYn6kso9fBCFgeLFUFe/bY/6ePm3WeX9wbjS7Lm4mP8PIthOrpl4nZo3T6x2WX0/D6KpLNudlmxP72nfuHxubxcTWZ346H70n+Rz+wGx9eXy+fobvzYv40nZd7lczmbXVd6owar3PjJql2O5PK6G7aKyO/d9R7nonIn71alp/JLo33/UvrTiD8rr4ty/10OkX3z+qeapbOH/1C3u/ND+f4XsNiJegw6rVxbdQmJ38lMa0hojlPTYK7JhwugwqjpU5o7AqnojoSB6uFGtv2m32h7hXaj3PKa7ca1XSzYfqXitO16u+S3dySzQXEEscnomOhYmnI3Y/M7QBwHHGgIiblkUjEdN37x2EIC5Tp0oC4BoxxGTNGzM62UJHKZv5BeGaOCwGI8K/qLv0bunokH+pDUxwKSQ04uHHDyADCZE9DEreeaq8HmQtVigZZSRE5+ifIUpKL2RLNs4HrlosVJPI9AI7ViFsoI8vPpPK2MxTdf10SYp9rB9Si9bT/mdfxvVwJlExJtwHUuDVBthBOPi7tL5OeES/sJ79zXZUj0xVL1FAnBGySHv77GRM9HNiMqo7fm8M3Z4c7Mzz7+/aT1CyjruB5ZoHBJ9sLunm71CCjaqO26uUD5RV4ulzLtn6/pMVHuLcWSjjUELBWrfYzYDKiVubDOekIy1EeRM/0hPimmdCiQgFhNWy4Vz9gZhsD1ztBR12R97kJyEFLVTcBanNI1I7XvaMS/rkQ4wNpOqfvqs2JJ+NWuE7724qg81cogCJ1oST8fHz8MBWbKLVHEx5J956ccnAp+qMyKnGERaprepYCf/+Q0o1UNhDGTVHRaRqrYZ9kUp/iYQ/Bl9M1NSuTZZkf+fbUzSToCGNQ+yEnqXz/QgZ5/Otlj6m3Q72RdLvsNp+SV3GZK1sUNWfue3cyKcoCu9k39XbNXp+MZr/0D</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_061731</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_061742</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_061742</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_061742</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZrU/I6EP4rTP3olF4oFDrCDBdxUFAG8PL6xYnpAnlpE2gSQH/9SQpUQPRwzqfObje7z17yZK84iiM3qHMOiSCM5tZxRHmQaquGTGjAECc8oCgGHggcDOu9buDm7QDtjhi5TqtqvBU9FBZc5JvY82zTA4xNBFAxw4pbcN2iA0W3rEw5l9ChXCAqqoZrO57pOKbjjWw78EpBwcuXPe/VyD1BwpVvZZK3jS2oNa8aUyHmgWWtVqv8qpBnycRybduxXnrdIZ5CjIza1SajNFBS29rjfAgYogjnMYutK+vA5irkwZBMKBIygW2s8KdYtmVXLGUTcjK5MLKzEHbomKViE1FGCUYR+US6Pj0QUxbm6tGEJURM4x+TcGzt2IQ1NrHj0QvDOoR2pqMDhAlHJp8iZ+trAGNIgGLIPQ46VePivK6lR0cJonzMkpgfiv8ND9AlRGwOocl3aW2hne/wRKVqV4CDDsWR5GQJ93pY5wgD33YT8Pmucv0ExmTdJVwN6JprdNY+vCNxU40WmQAX/6dBe83ZOHlCkYQaeii0Bk37Neo/I+K3ZvLeXU1umnH3HVdTAPvGqSJr7UY8GspsiDYn6kso9fBCFgeLFUFe/bY/6ePm3WeX9wbjS7Lm4mP8PIthOrpl4nZo3T6x2WX0/D6KpLNudlmxP72nfuHxubxcTWZ346H70n+Rz+wGx9eXy+fobvzYv40nZd7lczmbXVd6owar3PjJql2O5PK6G7aKyO/d9R7nonIn71alp/JLo33/UvrTiD8rr4ty/10OkX3z+qeapbOH/1C3u/ND+f4XsNiJegw6rVxbdQmJ38lMa0hojlPTYK7JhwugwqjpU5o7AqnojoSB6uFGtv2m32h7hXaj3PKa7ca1XSzYfqXitO16u+S3dySzQXEEscnomOhYmnI3Y/M7QBwHHGgIiblkUjEdN37x2EIC5Tp0oC4BoxxGTNGzM62UJHKZv5BeGaOCwGI8K/qLv0bunokH+pDUxwKSQ04uHHDyADCZE9DEreeaq8HmQtVigZZSRE5+ifIUpKL2RLNs4HrlosVJPI9AI7ViFsoI8vPpPK2MxTdf10SYp9rB9Si9bT/mdfxvVwJlExJtwHUuDVBthBOPi7tL5OeES/sJ79zXZUj0xVL1FAnBGySHv77GRM9HNiMqo7fm8M3Z4c7Mzz7+/aT1CyjruB5ZoHBJ9sLunm71CCjaqO26uUD5RV4ulzLtn6/pMVHuLcWSjjUELBWrfYzYDKiVubDOekIy1EeRM/0hPimmdCiQgFhNWy4Vz9gZhsD1ztBR12R97kJyEFLVTcBanNI1I7XvaMS/rkQ4wNpOqfvqs2JJ+NWuE7724qg81cogCJ1oST8fHz8MBWbKLVHEx5J956ccnAp+qMyKnGERaprepYCf/+Q0o1UNhDGTVHRaRqrYZ9kUp/iYQ/Bl9M1NSuTZZkf+fbUzSToCGNQ+yEnqXz/QgZ5/Otlj6m3Q72RdLvsNp+SV3GZK1sUNWfue3cyKcoCu9k39XbNXp+MZr/0D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF887B16462CE05305991F0A740C</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>CA</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7BF887B16462CE05305991F0A740C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7BF887B16462CE05305991F0A740C</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7BF43FB8D4CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7BF43FB8D4CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7F67C03844B3DE05307991F0A74E5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7F67C03844B3DE05307991F0A74E5</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2003-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2003-11-17</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>07C7BF43FB8D4CFBE05307991F0AF67F</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>41d9250c-a460-46c5-961b-26890cb14e9a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aed94ee9-90b0-49fc-99cb-64b647ef163d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00059_Account and User Create with GB 107_SecondFullUserCreate_111_SUCCESS_P0" searchProperties="true" id="d3ee68b8-92c5-4204-a757-4ba010876ee1"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="191320a4-830a-4463-a679-d5edc606fedb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="c005453d-7713-4cd1-8a19-2007f0241404"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","GB");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="dbe52e81-178b-41ee-951e-36cacf879b6b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="3a3121a9-eb01-4ddb-946a-84d0736a0682"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFullUserCreate" id="0e8368a1-255e-464d-8b8a-ba655bf1fa33"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create" id="0a1a3708-8b5d-4c0d-8d16-6aa32f2ea9d3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o6EP4rjPvYMZa5uXgCM1wT59K0QHKSvnSEvLYVjORYMpD8+koGXEwuh3OePFqvdr/d/fRJZwIv45rbEwJSSTmrbJYxE25u7RhZylyOBRUuw0sQriTutHdz7daqyMX7LUbFG3aM3wFqoW8NPzDbvuOYjWbgmG2MkInnTb9l2zUnQES5CpGBx4TETHaMGrIbpm2bdmOGkNtouU1UbbXrv4zKPaRCxVYuVWTsQG1Ex4ikTFzLWq/X1XW9ytPQqiFkWw8311MSwRIb3bNtRXmitLvzJ1UfCMQxqRK+tM6sks+ZL9wpDRmWWQq7XP5HuZCF2pby8QUNvxjFXvA9FvB8OcCMM0pwTF+x7s8NyIj7lV4c8pTKaPlhETbSgU3YEJPYDfbFsMrQTgxUQpgKbIoI27tYEwggBUagcjfxOsaX06aWb52lmImAp0tRXv43PMBWEPMEfFPsy9pBOz3gO53qngFxPUbiTNAVfNdkTTABsZsmkNNDVX6kENDNNRWKoBuh0VmH8I6W224MaQhC/p8BHQxnG+Qexxl0f0bW/fjXP4Hz4L8IRh6C7xNnAfP+/eKmkwM4dM4NxWi3yyNSFiTa7iBeuHq4C4kd46RpNW8a7VuwL5O7TdTmMMow2zz1Jqge1s8vHmEif44W6FvvdVK/+HpJwvDpKtos0O3jfPW1nVrRE+2PRj+dx8XIHvW984vrIPj1Qr/StdOKB1HS3lySO5QFtavBfLa58nDy3IsfRq+v4czBP17POVzeYRuv7mdwX7t7Ti+YsPj51HsAjLz6Y6co5wB/2bY/89Ns/gRE7peaBt6wMlZTwvJzMdMW6ptB7uomWnyEBCaNrt6ltcPNlNxR31Uz3K6RM3D640Z93O8PGoNxf4SadeS02/YY9cYtZ7wXmS2KI4gDzgKqc2nJ3dLmc4Bk6QpgPqTmimdK6YTxScQhlrjisYk6BJwJmHElz35dNmQELbyst7PntMXXGV0t5nWj8p3LW3ab9gIJaVmS6yVJngChCQWt25rWQvFaSNWKZ7zKZGxXV7jKIFPKnmqRdWuNb01L0GUSgwZqLbmfxVBNoiRvjCW235qJicitk9EsP2wflnX8b98B5eNT7SB0LX1QU4R37pbGvpCPC24dFrwP38t8qs+VaqdMKdkiKf/6yxJNj4IiqqLfg+lve4+7cD95+9ud1iegrON+FIn8FT1Iu7+51R2gVKO7n+Yzrj5Xs9Uqy+fnaHVMVXhLiaRtTYFkStReZnwBzCpCWCfdIAXqo8yFvYwvkxGbSixhqdhWyZcnPBmmIPSTwVOnZHPqe6SUUvVNwka+ZxvE6rmjEX/6IiIu0X7K/EN91jz1/47rnVgHeVSd6sUgKQv1St8eLx+QgnAVlird4+lh8PcCvJe8bCyaXGCRik3zTMLHfypa0DoGJoRnTHpDIzccimyOU74k4P51ehMm1/HiYUf//WVn0pwCBNRzUNA8vr6fXc1/Fh4I9S7psVYPamPFHaXYg9GwpNX9YatoSgld9435reWgT8cc7/4B</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_061746</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_061757</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_061757</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_061757</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc9o6EP4rjPvYMZa5uXgCM1wT59K0QHKSvnSEvLYVjORYMpD8+koGXEwuh3OePFqvdr/d/fRJZwIv45rbEwJSSTmrbJYxE25u7RhZylyOBRUuw0sQriTutHdz7daqyMX7LUbFG3aM3wFqoW8NPzDbvuOYjWbgmG2MkInnTb9l2zUnQES5CpGBx4TETHaMGrIbpm2bdmOGkNtouU1UbbXrv4zKPaRCxVYuVWTsQG1Ex4ikTFzLWq/X1XW9ytPQqiFkWw8311MSwRIb3bNtRXmitLvzJ1UfCMQxqRK+tM6sks+ZL9wpDRmWWQq7XP5HuZCF2pby8QUNvxjFXvA9FvB8OcCMM0pwTF+x7s8NyIj7lV4c8pTKaPlhETbSgU3YEJPYDfbFsMrQTgxUQpgKbIoI27tYEwggBUagcjfxOsaX06aWb52lmImAp0tRXv43PMBWEPMEfFPsy9pBOz3gO53qngFxPUbiTNAVfNdkTTABsZsmkNNDVX6kENDNNRWKoBuh0VmH8I6W224MaQhC/p8BHQxnG+Qexxl0f0bW/fjXP4Hz4L8IRh6C7xNnAfP+/eKmkwM4dM4NxWi3yyNSFiTa7iBeuHq4C4kd46RpNW8a7VuwL5O7TdTmMMow2zz1Jqge1s8vHmEif44W6FvvdVK/+HpJwvDpKtos0O3jfPW1nVrRE+2PRj+dx8XIHvW984vrIPj1Qr/StdOKB1HS3lySO5QFtavBfLa58nDy3IsfRq+v4czBP17POVzeYRuv7mdwX7t7Ti+YsPj51HsAjLz6Y6co5wB/2bY/89Ns/gRE7peaBt6wMlZTwvJzMdMW6ptB7uomWnyEBCaNrt6ltcPNlNxR31Uz3K6RM3D640Z93O8PGoNxf4SadeS02/YY9cYtZ7wXmS2KI4gDzgKqc2nJ3dLmc4Bk6QpgPqTmimdK6YTxScQhlrjisYk6BJwJmHElz35dNmQELbyst7PntMXXGV0t5nWj8p3LW3ab9gIJaVmS6yVJngChCQWt25rWQvFaSNWKZ7zKZGxXV7jKIFPKnmqRdWuNb01L0GUSgwZqLbmfxVBNoiRvjCW235qJicitk9EsP2wflnX8b98B5eNT7SB0LX1QU4R37pbGvpCPC24dFrwP38t8qs+VaqdMKdkiKf/6yxJNj4IiqqLfg+lve4+7cD95+9ud1iegrON+FIn8FT1Iu7+51R2gVKO7n+Yzrj5Xs9Uqy+fnaHVMVXhLiaRtTYFkStReZnwBzCpCWCfdIAXqo8yFvYwvkxGbSixhqdhWyZcnPBmmIPSTwVOnZHPqe6SUUvVNwka+ZxvE6rmjEX/6IiIu0X7K/EN91jz1/47rnVgHeVSd6sUgKQv1St8eLx+QgnAVlird4+lh8PcCvJe8bCyaXGCRik3zTMLHfypa0DoGJoRnTHpDIzccimyOU74k4P51ehMm1/HiYUf//WVn0pwCBNRzUNA8vr6fXc1/Fh4I9S7psVYPamPFHaXYg9GwpNX9YatoSgld9435reWgT8cc7/4B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C2F201BF4CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>GB</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7C2F201BF4CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C2F201BF4CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7BF43FBBC4CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7BF43FBBC4CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7EBEA4F952B5DE05305991F0A09CA</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7EBEA4F952B5DE05305991F0A09CA</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2003-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1995-11-19</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b0db0f3b-13bc-4f60-bef7-988ada12f5d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3ea35392-7c26-4bed-953c-2155a31860ed</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00060_Account and User Create with GB 107_StandardYouthUserCreate_111_SUCCESS_P0" searchProperties="true" id="9eee2a03-3e86-4755-9ea1-81c2ebcf8815"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="d9ea5603-96d2-4aa4-851e-f8296de0dd18"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="c444656f-5dc4-47f2-ac5d-da852ec60b20"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","GB");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="0f520aab-c96c-497c-badc-37d629b355d7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="a69f239e-aef2-4db2-b93f-a48d9456a3df"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUserCreate" id="2bc9a89c-9a26-4d8e-91ae-004418face26"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StandardYouthUserCreate" id="4392057a-3738-4082-8d6d-e06fd765ac77"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdU/I6EP4rTN9Lp7SF8tGOMIN8KI6AUuCoN05IFxptU2jSAv76NylQAcXDOTcw2W52n9198iTXDAV+wW4wBhEnIc2tA58yO7XWlDiidogYYTZFATCbY9tp9B7sQl630X6Lkuu2aspb1S2ZleK0ooKBQDWxVVUtXCmoRhGMYkWfYd0qClfGYuhSxhHlNaWgG6ZqGKphjnTdNiu2Xs4buvGq5CYQMRFbuOR1ZQdqzWqKx/nC1rTVapVfFfNhNNcKum5oz70HB3sQIKV+va0oTRTVd/447wIG38d5HAbatXbkc+0y2yFzingcwS6Xey6XrumWJnxcRuZ/lGwvuF06C9NlE9GQEox88olkf3rAvdDNNfx5GBHuBWeLMHQZWIU1VrFh0j+KdgztwkBHCCOGVOYhYxdrCDOIgGLIjYfdmvLnsqmlW0cRomwWRgE7Xv43PEAT8MMFuCrbl7WDdnnAHzpVvwZsdyn2Y0YS6EuyLhAGtpsm4MtD5R4jmJH1A2GCoGsm0WmH8E6W2260yBwY/z8DOhjONsgE+THU9bi51OjHFRuOwn+ezSn3+tqyrS9evG4tBXDonBqy0W6XJ6TMSLTd8dFwlvT+IUDT+OG23S9OC/rrPDZe7qfBfcdphQNzeldZ9YP3u14QbFqj5H2w6cZzFk87j+vgftSueBPma+3h620wtri+7n3OGptkuRxPblfopjoYVYseGjrjfqlw9Ypu0TP05s7krtx+HfcsKD9t2NPCvR3dPDlG0jUnneXHTF+jF298temPqk5UnX28D+4pDMNaVs4B/mPb/sw78fQdMN8vJQ26rVxHTAnx38VMWoirzlJXeyHFh3GgXKnLXVI77FjIHXFtMcPtWq80Kzcds9i5aZtmU/zqpaJesSyjozc65UpnLzJbFCcQmyGdEZlLSu6WNr8DxIHNgLoQqUkYC6Vjyi8RW4ijXJcOxSEIKYNRKOTZIJZhCVer9P4ZlX0r+SwVRc0eV3L9kA/oIGrMOETHmlw80uQhYLIgIIVb8poJYjMuerFEScx9I5+gPIVYSHskVdYumNWSxkiw8EEi1YLQjX3IL7xF2hmNbf8LKsIstQ7bo/S0na3r9Nu+BcLHJdKByVpuQIwRvl0uZbu0L+R8weXDgvfhG7FL5MES/eQRwVskx5++aCL5kXFEVPTWdN6MPe7M/eLt33dqv4DSTvuRJXITcpB2f3WLS0DIRn0/zSXKL/NxksTp/CpSHiMRXhMqaWgO4Fio2mYUfgDVshDaRVdIhvokc2Y/xhdzjzoccQgE23Lp8oI3gwNMvhm64pisL32QHKUUfeOw5j/Zmr5470jEvz6JsI2lnzA/ir9VGLlf4/oh1kEeUad4MnBC53Ilr4/NGVLgUIQlQvjC6DD4TwF+Sn5szJqcYeGCTdOYw/kvOaloNQVhHMaUd1tKajhU2RQn3yzA/nL6FiYV8uxlR/79aaeSlAIYxHuQkTS+vKBtyX86P1DqXdJTsW6XmgVLMKJQLZQOxVovGl/8PEJX/2b+bjno0ynH638B</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_06182</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_061813</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_061813</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_061813</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdU/I6EP4rTN9Lp7SF8tGOMIN8KI6AUuCoN05IFxptU2jSAv76NylQAcXDOTcw2W52n9198iTXDAV+wW4wBhEnIc2tA58yO7XWlDiidogYYTZFATCbY9tp9B7sQl630X6Lkuu2aspb1S2ZleK0ooKBQDWxVVUtXCmoRhGMYkWfYd0qClfGYuhSxhHlNaWgG6ZqGKphjnTdNiu2Xs4buvGq5CYQMRFbuOR1ZQdqzWqKx/nC1rTVapVfFfNhNNcKum5oz70HB3sQIKV+va0oTRTVd/447wIG38d5HAbatXbkc+0y2yFzingcwS6Xey6XrumWJnxcRuZ/lGwvuF06C9NlE9GQEox88olkf3rAvdDNNfx5GBHuBWeLMHQZWIU1VrFh0j+KdgztwkBHCCOGVOYhYxdrCDOIgGLIjYfdmvLnsqmlW0cRomwWRgE7Xv43PEAT8MMFuCrbl7WDdnnAHzpVvwZsdyn2Y0YS6EuyLhAGtpsm4MtD5R4jmJH1A2GCoGsm0WmH8E6W2260yBwY/z8DOhjONsgE+THU9bi51OjHFRuOwn+ezSn3+tqyrS9evG4tBXDonBqy0W6XJ6TMSLTd8dFwlvT+IUDT+OG23S9OC/rrPDZe7qfBfcdphQNzeldZ9YP3u14QbFqj5H2w6cZzFk87j+vgftSueBPma+3h620wtri+7n3OGptkuRxPblfopjoYVYseGjrjfqlw9Ypu0TP05s7krtx+HfcsKD9t2NPCvR3dPDlG0jUnneXHTF+jF298temPqk5UnX28D+4pDMNaVs4B/mPb/sw78fQdMN8vJQ26rVxHTAnx38VMWoirzlJXeyHFh3GgXKnLXVI77FjIHXFtMcPtWq80Kzcds9i5aZtmU/zqpaJesSyjozc65UpnLzJbFCcQmyGdEZlLSu6WNr8DxIHNgLoQqUkYC6Vjyi8RW4ijXJcOxSEIKYNRKOTZIJZhCVer9P4ZlX0r+SwVRc0eV3L9kA/oIGrMOETHmlw80uQhYLIgIIVb8poJYjMuerFEScx9I5+gPIVYSHskVdYumNWSxkiw8EEi1YLQjX3IL7xF2hmNbf8LKsIstQ7bo/S0na3r9Nu+BcLHJdKByVpuQIwRvl0uZbu0L+R8weXDgvfhG7FL5MES/eQRwVskx5++aCL5kXFEVPTWdN6MPe7M/eLt33dqv4DSTvuRJXITcpB2f3WLS0DIRn0/zSXKL/NxksTp/CpSHiMRXhMqaWgO4Fio2mYUfgDVshDaRVdIhvokc2Y/xhdzjzoccQgE23Lp8oI3gwNMvhm64pisL32QHKUUfeOw5j/Zmr5470jEvz6JsI2lnzA/ir9VGLlf4/oh1kEeUad4MnBC53Ilr4/NGVLgUIQlQvjC6DD4TwF+Sn5szJqcYeGCTdOYw/kvOaloNQVhHMaUd1tKajhU2RQn3yzA/nL6FiYV8uxlR/79aaeSlAIYxHuQkTS+vKBtyX86P1DqXdJTsW6XmgVLMKJQLZQOxVovGl/8PEJX/2b+bjno0ynH638B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7E5C294732825E05307991F0A0313</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>GB</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7E5C294732825E05307991F0A0313</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7E5C294732825E05307991F0A0313</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7BF43FBE44CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7BF43FBE44CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7EBF2808D2B8FE05305991F0A1FE0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7EBF2808D2B8FE05305991F0A1FE0</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2003-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1997-11-18</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>55d0a6f8-52ef-4e53-be70-a739cfb9f815</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b2ca4d41-2a9d-49d5-b5d3-ca4e04f2c286</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00061_Account and User Create with GB 107_BasicChildUserCreate_111_SUCCESS_P0" searchProperties="true" id="b4f4ad29-f19d-436f-8938-abc9ecac1cda"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="5c26b2c2-0381-446b-8ce3-06bf658a0efd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="ec2b7da9-08fa-439a-8f9c-6fa11405d664"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","GB");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="f904dca4-928e-4823-bd5a-8dc6d7971730"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="88cebb4e-e34b-4df2-8a31-7173c2035c60"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for BasicChildUserCreate" id="fc996337-adc9-4f30-9bfa-06b83348a128"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("CHILD_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian",tC.getPropertyValue("LegalGuardian"));

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call BasicChildUserCreate" id="872b619d-d01c-4b6d-8736-e26636d331c5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc+o4DP4rTM7jTsiFQCBTmKGhtJxTWgq0sH3puI4A08QJscPt168dICWUdtl9ykiRpU8Xf9YVQ4FvOk3GIOYkpIV14FPmpNq6ksTUCREjzKEoAOZw7Aya3XvHLOoOOhxRCp1WXXmrgGeWajVQQQesWhMwVeRNbLVm2zqq6e+Tim4JU8YS6FDGEeV1xdQNSzUM1bCGuu5YtmMaxVqt/KoUXiBmwrcwKerKHtSa1ZUZ55GjaavVqrgqFcN4qpm6bmjj7v0AzyBASuNql1EaKG7s7XHRAwy+j4s4DLQrLWdz5TFnQKYU8SSGfSzvu1i6ptc0YeMxMv2lZGfB69BJmIouoiElGPlki2R9usBnoVdo+tMwJnwWfJuEoUvHKqyxig2L/lK0PLQLHeUQxgypbIaMva8+TCAGiqHw3O/UlV+XdS09OowRZZMwDlhe/G94gC7BDyPwVHZIaw/tcodnKtW4Aux0KPYTRpbwIIc1QhjYvpuAL3dV6MUwIet7wsSArplEpx3DOxF31WiRKTD+fxp01JydkxfkJ9Doz0t3qPw0rIzXTdsfde11Et8tqsFj+aOeAjg2ThVZa3fiyVBmQ7Q7MS8Nyrb/93g0ArPi8h4qN0t3w/ZmvTVYdOvGk+a19fEUUG8xeHhpmV61PLhbbV63D/GcRaw53j73un3X/R10LNhEN6E/fpz+CTneJsPaCC8r2nyBn915ifkQ9aC8ndgPzd64ffteGWnYsvgAJa2nYcc3qf+8GtovnYrR+8uwq0HvtzF7vZ1226M/qxqrbubVepbOEf687nDnB8n7HDA/iHIMOq1CW3QJ8Z/JTGqIp05SUyeS5MM4UK405CnJHU4i6I54jujhTtZt175uW6W2q7uW276+0csl3a7VjLbebFfs9oFkdihOILohnRAZS1Lubmx+BogDhwH1IFaXYSKYjik/eGwhjgod2heXIKQMhqGgZ4MHG5FQKaogPQhQVV8tSstkvU2UwkPIH+lj3JxwiPOcXMpxch8wiQhI4pZzzcRgMy5qsUDLhPtGcYmKFBJB7bFkWce0qmWNkSDyQSLVgtBLfChGsyitjMZ2X0E4mKXa/s0wvW3f5nX671ACYeMRacBkLtcg2ghnHhfjkMj3CVeOEz64byYekRdL1JPHBO+Q5H99jomcj2xGREZv7uDNOODOzC8+/vWk9gMo7bQeWSBvSY7CHp5u8QgI2mgcurlAxUUxWS6TtH+2pMdYuNcESxraAHAiWG0zDD+AapkL7aInJEN9EjnT5/ElfEYHHHEIxLQVUvGCnWEATO4MHXFN1pcuJLmQom4c1vyczvXFviMR/7gSYQdLO6Huic8qjL3Pdp3xdRRH5ClWBk7oVEry+dh8MxQ4FG6JIL4wPnZ+zsG54HllVuQMCxfT9J5w+P5PQTJaXUEYhwnlnZaSKo5ZNsXJNxE4n0Zf3KREnm125N9XO5WkI4BB7IOMpP7lA+3I+afTI6beBz0l65uya1qG3jKrJT1H1u2bZlaUHLrGF/VXzVGdTme88Q8=</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_061818</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_061830</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_061830</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_061830</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc+o4DP4rTM7jTsiFQCBTmKGhtJxTWgq0sH3puI4A08QJscPt168dICWUdtl9ykiRpU8Xf9YVQ4FvOk3GIOYkpIV14FPmpNq6ksTUCREjzKEoAOZw7Aya3XvHLOoOOhxRCp1WXXmrgGeWajVQQQesWhMwVeRNbLVm2zqq6e+Tim4JU8YS6FDGEeV1xdQNSzUM1bCGuu5YtmMaxVqt/KoUXiBmwrcwKerKHtSa1ZUZ55GjaavVqrgqFcN4qpm6bmjj7v0AzyBASuNql1EaKG7s7XHRAwy+j4s4DLQrLWdz5TFnQKYU8SSGfSzvu1i6ptc0YeMxMv2lZGfB69BJmIouoiElGPlki2R9usBnoVdo+tMwJnwWfJuEoUvHKqyxig2L/lK0PLQLHeUQxgypbIaMva8+TCAGiqHw3O/UlV+XdS09OowRZZMwDlhe/G94gC7BDyPwVHZIaw/tcodnKtW4Aux0KPYTRpbwIIc1QhjYvpuAL3dV6MUwIet7wsSArplEpx3DOxF31WiRKTD+fxp01JydkxfkJ9Doz0t3qPw0rIzXTdsfde11Et8tqsFj+aOeAjg2ThVZa3fiyVBmQ7Q7MS8Nyrb/93g0ArPi8h4qN0t3w/ZmvTVYdOvGk+a19fEUUG8xeHhpmV61PLhbbV63D/GcRaw53j73un3X/R10LNhEN6E/fpz+CTneJsPaCC8r2nyBn915ifkQ9aC8ndgPzd64ffteGWnYsvgAJa2nYcc3qf+8GtovnYrR+8uwq0HvtzF7vZ1226M/qxqrbubVepbOEf687nDnB8n7HDA/iHIMOq1CW3QJ8Z/JTGqIp05SUyeS5MM4UK405CnJHU4i6I54jujhTtZt175uW6W2q7uW276+0csl3a7VjLbebFfs9oFkdihOILohnRAZS1Lubmx+BogDhwH1IFaXYSKYjik/eGwhjgod2heXIKQMhqGgZ4MHG5FQKaogPQhQVV8tSstkvU2UwkPIH+lj3JxwiPOcXMpxch8wiQhI4pZzzcRgMy5qsUDLhPtGcYmKFBJB7bFkWce0qmWNkSDyQSLVgtBLfChGsyitjMZ2X0E4mKXa/s0wvW3f5nX671ACYeMRacBkLtcg2ghnHhfjkMj3CVeOEz64byYekRdL1JPHBO+Q5H99jomcj2xGREZv7uDNOODOzC8+/vWk9gMo7bQeWSBvSY7CHp5u8QgI2mgcurlAxUUxWS6TtH+2pMdYuNcESxraAHAiWG0zDD+AapkL7aInJEN9EjnT5/ElfEYHHHEIxLQVUvGCnWEATO4MHXFN1pcuJLmQom4c1vyczvXFviMR/7gSYQdLO6Huic8qjL3Pdp3xdRRH5ClWBk7oVEry+dh8MxQ4FG6JIL4wPnZ+zsG54HllVuQMCxfT9J5w+P5PQTJaXUEYhwnlnZaSKo5ZNsXJNxE4n0Zf3KREnm125N9XO5WkI4BB7IOMpP7lA+3I+afTI6beBz0l65uya1qG3jKrJT1H1u2bZlaUHLrGF/VXzVGdTme88Q8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7E5C2410D2830E05307991F0AFFEA</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>GB</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7E5C2410D2830E05307991F0AFFEA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7E5C2410D2830E05307991F0AFFEA</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7BF43FC0C4CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7BF43FC0C4CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7EBEA4FB02B5DE05305991F0A09CA</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7EBEA4FB02B5DE05305991F0A09CA</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>07C7BF43FC0C4CFBE05307991F0AF67F</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>41d9250c-a460-46c5-961b-26890cb14e9a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aed94ee9-90b0-49fc-99cb-64b647ef163d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00062_Account and User Create with US 107_SecondFullUserCreate_111_SUCCESS_P0" searchProperties="true" id="c85e0821-ac7c-4c29-97fc-260b91ee034a"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="5cce97d3-b1e5-4bfb-9f31-163234e72f45"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="49f5b672-9008-4888-9bd7-6ae9c247d70e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","US");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="1fede830-ea90-487d-ad69-f009eedc9fcc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="d821e81f-b131-46ad-aa3d-9d753737dee5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFullUserCreate" id="0270b309-4640-4806-8fe2-3b8cca413968"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create" id="4aa99d45-86ff-400f-960b-0d1905ea7f92"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtk6I4EP4rFvvxCgFFFGq0Spnxxludc8V52y9bmdBAZiFBEtTZX38Jjqw6L+fdJ6qbTvfTL3nSFxxlacsbcg6FIIw2tllKuVdp+1pZUI8hTrhHUQbcE9gLhrOp12qaHtof0RqTy772o+dg3DNtpD+1bVO3oePoyIl6uovDbs8JoQ22KU05L2FCuUBU9LWWadm6ZemWvTRNz+56bbdpu+53rXEHBZe+pUlTntqB2vK+lgiRe4ax2Wyam3aTFbHRMk3LeJhNA5xAhrTBxS6jKlAxeLXHzRAwpCluYpYZF8aRzUXIvYDEFImygNdY4UexTMN0DWkTchJ/0eqzEE5oxCrRR5RRglFKfiFVnxmIhIWNYRqzgogk+zAJy1SOddhiHVs2/aIZx9DOdHSEsOBI5wmyXn0tIIICKIbG7WLS176c17Xq6LJAlEesyPix+N/wAF1DynIIdb5P6xXa+Q7fqdTgArA3oTgtOVnDjRrWHGHgr90EfL6rxryAiGynhMsB3XKFzjiEdyLuqnFJYuDi/zTooDk7J3coLWEQ394/3l+TFE394QTF41Xy1XmIsvnWZ/0KwKFxpahbuxNPhrIeot2JYSA6fIwn+eQaBzhzXHd288L95Zjc+50n4azSgG2h8McPHJPnb3kS05E1X2yN6WNy91fn4fZb+2vLGbFRh47vHn/dGaM/o3yWviQRXG/mI3Z3E/6Bl9+KxdPjfNqZxY7zPS9XMb8ahu6v7/Ra+EFx7zv+0kqeSjfw5+twePO1Pcxny9719L5zLzbmg4i6tz9n/TqdA/zHuv2dD8qnZ8BiL6oxmFw2xrJLSHxOZkpDQj2qTL1ckQ8XQIU2UKcUd3ilpDsSerKHO9ns+t3R2G6P/bZt++PRldlpm13XtcbmcOx0x3uS2aE4gegzGhEVS1Hubmw+B4gzjwMNodDXrJRMx7VPPF4igRoTupCXgFEOSybp2WW8GyUYWZ3t86b3bK3FuhevfnKtccPE3/TvYhgJKI4puX1EyQvAJCegeFuNNZdzzYUsxQqtS5FazTVqUiglsxeKZL2W3esYnGR5CgqokbGwTKGZJ3lVGIPvvi0dYV5pF1fL6rJ9mNbpv30FpE1IlAFXuYxAdhHeeVta+0Q+Ttg5THjvfliGRN0rWU5RELxDcvzr95So8ahHRGb0ww9+WHvctfnZx9+eND4BZZzWow4UrslB2P3LLd8AyRqDfTdXqLlqlut1WfWvq9ixkO4NSZKWEQAuJam9LNlPoEbtwjjrBalRn0Su9cf4SpHQQCABmZy2RiWesTIEwNXKMJG3ZHvuPnIUUtZNwFa8p/NTue4oxJ9uRNjDyk6q5/KzYUX4u13v+DqII/OUG4MgNFaSej1ePhgKzKRbInmPFYfO33PwXvBjZV3kGouQ0/RUCvj4T0MRWl9DGLOSismlVikOSbbCKV5y8H4bvXFT8Xi92JF/3+x0Uo0ABrkOclL5V++zp+afxgdE/Rr0lKuvOr456nXcVq/lHnK10x36dVGO0A3eqN9qDup0OuODfwA=</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_061834</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_061848</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_061848</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_061848</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtk6I4EP4rFvvxCgFFFGq0Spnxxludc8V52y9bmdBAZiFBEtTZX38Jjqw6L+fdJ6qbTvfTL3nSFxxlacsbcg6FIIw2tllKuVdp+1pZUI8hTrhHUQbcE9gLhrOp12qaHtof0RqTy772o+dg3DNtpD+1bVO3oePoyIl6uovDbs8JoQ22KU05L2FCuUBU9LWWadm6ZemWvTRNz+56bbdpu+53rXEHBZe+pUlTntqB2vK+lgiRe4ax2Wyam3aTFbHRMk3LeJhNA5xAhrTBxS6jKlAxeLXHzRAwpCluYpYZF8aRzUXIvYDEFImygNdY4UexTMN0DWkTchJ/0eqzEE5oxCrRR5RRglFKfiFVnxmIhIWNYRqzgogk+zAJy1SOddhiHVs2/aIZx9DOdHSEsOBI5wmyXn0tIIICKIbG7WLS176c17Xq6LJAlEesyPix+N/wAF1DynIIdb5P6xXa+Q7fqdTgArA3oTgtOVnDjRrWHGHgr90EfL6rxryAiGynhMsB3XKFzjiEdyLuqnFJYuDi/zTooDk7J3coLWEQ394/3l+TFE394QTF41Xy1XmIsvnWZ/0KwKFxpahbuxNPhrIeot2JYSA6fIwn+eQaBzhzXHd288L95Zjc+50n4azSgG2h8McPHJPnb3kS05E1X2yN6WNy91fn4fZb+2vLGbFRh47vHn/dGaM/o3yWviQRXG/mI3Z3E/6Bl9+KxdPjfNqZxY7zPS9XMb8ahu6v7/Ra+EFx7zv+0kqeSjfw5+twePO1Pcxny9719L5zLzbmg4i6tz9n/TqdA/zHuv2dD8qnZ8BiL6oxmFw2xrJLSHxOZkpDQj2qTL1ckQ8XQIU2UKcUd3ilpDsSerKHO9ns+t3R2G6P/bZt++PRldlpm13XtcbmcOx0x3uS2aE4gegzGhEVS1Hubmw+B4gzjwMNodDXrJRMx7VPPF4igRoTupCXgFEOSybp2WW8GyUYWZ3t86b3bK3FuhevfnKtccPE3/TvYhgJKI4puX1EyQvAJCegeFuNNZdzzYUsxQqtS5FazTVqUiglsxeKZL2W3esYnGR5CgqokbGwTKGZJ3lVGIPvvi0dYV5pF1fL6rJ9mNbpv30FpE1IlAFXuYxAdhHeeVta+0Q+Ttg5THjvfliGRN0rWU5RELxDcvzr95So8ahHRGb0ww9+WHvctfnZx9+eND4BZZzWow4UrslB2P3LLd8AyRqDfTdXqLlqlut1WfWvq9ixkO4NSZKWEQAuJam9LNlPoEbtwjjrBalRn0Su9cf4SpHQQCABmZy2RiWesTIEwNXKMJG3ZHvuPnIUUtZNwFa8p/NTue4oxJ9uRNjDyk6q5/KzYUX4u13v+DqII/OUG4MgNFaSej1ePhgKzKRbInmPFYfO33PwXvBjZV3kGouQ0/RUCvj4T0MRWl9DGLOSismlVikOSbbCKV5y8H4bvXFT8Xi92JF/3+x0Uo0ABrkOclL5V++zp+afxgdE/Rr0lKuvOr456nXcVq/lHnK10x36dVGO0A3eqN9qDup0OuODfwA=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7E5C0B8592829E05307991F0A67AC</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7E5C0B8592829E05307991F0A67AC</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7E5C0B8592829E05307991F0A67AC</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7BF43FC344CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7BF43FC344CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7EBF280A82B8FE05305991F0A1FE0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7EBF280A82B8FE05305991F0A1FE0</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1997-11-18</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1995-11-19</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b0db0f3b-13bc-4f60-bef7-988ada12f5d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3ea35392-7c26-4bed-953c-2155a31860ed</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00063_Account and User Create with US 107_StandardYouthUserCreate_111_SUCCESS_P0" searchProperties="true" id="ad397c6a-6269-4f28-bfbe-7a9645bfa692"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="ee10721d-28b3-45a9-9d17-00eee9209b85"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="d353efa8-217f-4e8b-86be-1ec1d9688985"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","US");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="58f1a9c2-b792-4c4a-8088-18548d8767da"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="4d1769f8-e96f-4a06-928c-b000f49df6dc"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUserCreate" id="a40a2a7c-9378-4c39-aa43-b33f1ec1c355"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StandardYouthUserCreate" id="646ded1c-eab7-46d8-9eb6-8002d6a7de70"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvO4ZXyJwcEVqCIQZ5gBwgYy2eQlJeQ2aMaWHEkmMF8/kgEHk8uyWzxQ3W51n77oqC8EShM36AoBXBJGa+s0oSIotG0j5zRgSBARUJSCCCQOpt3RMHDrdoD2R4zaoN82nnDcinyMkYlc2zU9FHvmuZLN2HVsmDea89hpKVMhchhQIRGVbcO1Hc90HNPxZrYdeH7QaNYbtv9o1H4AF8q3Mqnbxg7UWrSNpZRZYFkvLy/1l7M64wvLtW3H+mc0nOIlpMjoXGwzKgLxzs4e1yPAkCS4jllqXVgVm4tIBFOyoEjmHHaxoo9i2ZbdspRNJMjii1GehWhAY1aIPUQZJRgl5DfS9RmBXLKo1k0WjBO5TD9MwrG1YxPW2MSOR78YVhXaiY4qCLlAplgiZ+frFmLgQDHU7m4HbePLaV0rjs44oiJmPBVV8b/hAbqChGUQmWKf1g7a6Q7fqVTnAnAwoDjJBVnBWA9rhjCIXTcBn+6qNuEQk/WQCDWga6HRWYfwjsRtNfpkAUL+nwYdNGfr5AdKcuj4sR+i2Z1sfPPodfb9/Pvlt+vN7wmE33+1CwCHxoWibO1WPBrKcoi2J9hitpz5f89njWGffr11xII2Rs2/JpNr+9Hp2+qSXFvd8eiqO717WY0e3LGdddMWjrAYN++Tzc2Q8+7NvZxNevQxF+NesnBGX1McbhrOah19nZzfDMUD/ja/Hz9gdh3Hd4/nMUF2a8XTJLP7izRs+gMXJ+vG77D1QPtjvhi6vW7YTJLhvcwfRrCe/7QnMPDtdpnOAf6qbn/np/n8J2C5F/UYDPq1UHUJyc/JTGtIZMaFaZBp8hESqDQ6+pTmjiBXdEeiQPVwK9t+z78MvbOw56lfeHllN85sv9VyQlvl4Yd7ktmiOILYYzQmOpam3O3YfA4Qp4EAGgE3VyxXTCeMTzz2kUS1Ab1Vl4BRATOm6Nm1lxlyzlmrkXrOstFiG8fNnvnPM6M2ZvKG3vBuLIFXOfmswsm3gElGQBO3nmuhBltIVYtntMpl4tRXqE4hV9TONcsGrnfesARJswQ0UitlUZ5APVtmRWUssf13TYRFob29mhW37cO8jr/tS6BsIqINhM7lElQb4Z3Hxdsn8nHCzcOE9+67eUT0xVL1lJzgLZLqp9cx0fNRzojK6Kk3fXL2uEvzk4+/PWl9Aso6rkcZKFqRg7D7p1s9Aoo2OvtuPqP6cz1frfKif76mR67cW4olHWsKOFestpmxX0Ct0oV10hNSoj6KXOqr+HK5pFOJJKRq2mqFeMLOMAWhd4aBuibrUxeSSkhVNwlr+Z6ul6h9RyP+dCXCAdZ2Sj1Rfy+MR6/tesfXQRyVp1oZJKELLennY/PBUGCm3BJFfIwfOn/PwXvBq8qyyCUWqaZpnkv4+EtNM1rbQBiznMpB3ygUhyxb4JSbDIJXozduCiIvNzvy76udSYoRwKD2QUEK//qBDvT808UBU++CHpN1zw3VIDhNr3fVr5D1Zb9ZFqWCrvNG/VZzUKfjGe/8AQ==</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_061852</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_06194</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_06194</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_06194</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvO4ZXyJwcEVqCIQZ5gBwgYy2eQlJeQ2aMaWHEkmMF8/kgEHk8uyWzxQ3W51n77oqC8EShM36AoBXBJGa+s0oSIotG0j5zRgSBARUJSCCCQOpt3RMHDrdoD2R4zaoN82nnDcinyMkYlc2zU9FHvmuZLN2HVsmDea89hpKVMhchhQIRGVbcO1Hc90HNPxZrYdeH7QaNYbtv9o1H4AF8q3Mqnbxg7UWrSNpZRZYFkvLy/1l7M64wvLtW3H+mc0nOIlpMjoXGwzKgLxzs4e1yPAkCS4jllqXVgVm4tIBFOyoEjmHHaxoo9i2ZbdspRNJMjii1GehWhAY1aIPUQZJRgl5DfS9RmBXLKo1k0WjBO5TD9MwrG1YxPW2MSOR78YVhXaiY4qCLlAplgiZ+frFmLgQDHU7m4HbePLaV0rjs44oiJmPBVV8b/hAbqChGUQmWKf1g7a6Q7fqVTnAnAwoDjJBVnBWA9rhjCIXTcBn+6qNuEQk/WQCDWga6HRWYfwjsRtNfpkAUL+nwYdNGfr5AdKcuj4sR+i2Z1sfPPodfb9/Pvlt+vN7wmE33+1CwCHxoWibO1WPBrKcoi2J9hitpz5f89njWGffr11xII2Rs2/JpNr+9Hp2+qSXFvd8eiqO717WY0e3LGdddMWjrAYN++Tzc2Q8+7NvZxNevQxF+NesnBGX1McbhrOah19nZzfDMUD/ja/Hz9gdh3Hd4/nMUF2a8XTJLP7izRs+gMXJ+vG77D1QPtjvhi6vW7YTJLhvcwfRrCe/7QnMPDtdpnOAf6qbn/np/n8J2C5F/UYDPq1UHUJyc/JTGtIZMaFaZBp8hESqDQ6+pTmjiBXdEeiQPVwK9t+z78MvbOw56lfeHllN85sv9VyQlvl4Yd7ktmiOILYYzQmOpam3O3YfA4Qp4EAGgE3VyxXTCeMTzz2kUS1Ab1Vl4BRATOm6Nm1lxlyzlmrkXrOstFiG8fNnvnPM6M2ZvKG3vBuLIFXOfmswsm3gElGQBO3nmuhBltIVYtntMpl4tRXqE4hV9TONcsGrnfesARJswQ0UitlUZ5APVtmRWUssf13TYRFob29mhW37cO8jr/tS6BsIqINhM7lElQb4Z3Hxdsn8nHCzcOE9+67eUT0xVL1lJzgLZLqp9cx0fNRzojK6Kk3fXL2uEvzk4+/PWl9Aso6rkcZKFqRg7D7p1s9Aoo2OvtuPqP6cz1frfKif76mR67cW4olHWsKOFestpmxX0Ct0oV10hNSoj6KXOqr+HK5pFOJJKRq2mqFeMLOMAWhd4aBuibrUxeSSkhVNwlr+Z6ul6h9RyP+dCXCAdZ2Sj1Rfy+MR6/tesfXQRyVp1oZJKELLennY/PBUGCm3BJFfIwfOn/PwXvBq8qyyCUWqaZpnkv4+EtNM1rbQBiznMpB3ygUhyxb4JSbDIJXozduCiIvNzvy76udSYoRwKD2QUEK//qBDvT808UBU++CHpN1zw3VIDhNr3fVr5D1Zb9ZFqWCrvNG/VZzUKfjGe/8AQ==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C2F202164CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7C2F202164CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7C2F202164CEDE05307991F0AFBD6</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7BF43FC4C4CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7BF43FC4C4CFBE05307991F0AF67F</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7EBEA4FCB2B5DE05305991F0A09CA</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7EBEA4FCB2B5DE05305991F0A09CA</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2000-11-17</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>55d0a6f8-52ef-4e53-be70-a739cfb9f815</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b2ca4d41-2a9d-49d5-b5d3-ca4e04f2c286</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00064_Account and User Create with US 107_BasicChildUserCreate_111_SUCCESS_P0" searchProperties="true" id="5bda5bd2-2fa3-494e-806f-ac7050c98832"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="8958dd2e-53a2-4a59-aa3d-7eadc19619a8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="e23f7857-96be-4882-b862-5b427a48dd76"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","US");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="2418dc9e-35cd-4d08-88d9-44e8969d9b39"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="0f77f455-a221-41c3-ba65-b6e6ee1d0fdb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for BasicChildUserCreate" id="3b14e21d-ea8c-44f6-873b-a71d34fcc308"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("CHILD_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian",tC.getPropertyValue("LegalGuardian"));

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call BasicChildUserCreate" id="80bbea41-af51-49a1-aa1c-0a09aad65161"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VyvOYMl4wtnEFqliSCdnIQCbJnZcpITdYGVtyLNkBvn4kAw6Q5XLvk6vbre7Ti476lKMktoMu55AJwmhtkcSUB6W2reUZDRjihAcUJcADgYNJ9+Y6sOtmgLZHtNpw0NZ+zzwf274POnYAdMecuXoLbNBD18We67vTRgtLU85zGFIuEBVtzTYtR7cs3XLuTTNw/MCy6i3T/aXVHiDj0rc0qZvaBtSCt7VIiDQwjNfX1/pro86yuWGbpmU83VxPcAQJ0jqn64zKQFlnY4/rIWCIY1zHLDFOjT2b05AHEzKnSOQZbGKFn8UyDbNlSJuQk/k3rToL4ZDOWCn2EWWUYBSTFVL1uQERsbDWjecsIyJKPk3CMpVjHRZYx5ZDv2nGPrQjHe0hzDjSeYSsja8xzCADiqH2czxsa9+O61p59D5DlM9YlvB98b/hAVpAzFIIdb5NawPteIcfVKpzCjgYUhznnBRwq4Y1RRj4ppuAj3dVu8tgRhbXhMsBXXCFztiFdyCuqzEgc+Di/zRopzlrJw8ozqHTZb+o74/wzdPkEtsvkXvrT58uSI8sb9olgF3jUlG1di0eDGU1ROsTj88Is6X1/M/1NW0lvcFV0Ugf8bg7viO9UXJ98jizzsfL6Hww+tEUr03nhjUzfHEXPdBx0X/273qXzcnl2cJZ9FehSPrj2/uTqZGurCTsehdXg1nsGj+n5GzpRU933384LBqlxUMc/prHZ435JL6ML1YPq+9JiNPHxsSOTopViqaLeTr0vsPzVVisRs5q7LjuOQzbVTo7+Pd12zs/yafPgMVWVGMwHNTOZZeQ+JrMlIaE+qw0DVJFPlwAFVpHnVLcEeSS7kgYyB6uZdPre71z3/d6Pcdx7f6Z2WyYzVbLOje7nmP2tySzRnEAsc/ojKhYinLXY/M1QJwEHGgImV6wXDId177wOEAC1YZ0LC8BoxzumaRnKwzjP9ThorF68awEmOcRlxPblKR8y8SIjrLuTEC2T8qNPVIeAyYpAcXcarC5nGwuZDFeUJGL2KoXqE4hl9yeKZoNbMdvGpwkaQwKqpGwMI+hnkZpWRqDr7+2jjAvteOz+/K6fZrY4b9tDaRNSJQBV7n0QPYRPnhdzG0inyfs7ia8dd/NQ6JuliyoyAheI9n/9TYnakCqIZEZ/e5Pfltb3JX50cffnzS+AGUc1qMKFBZkJ+z27ZavgOSNzrabL6j+Us+LIi/75yl+zKR7Q9KkZUwA55LWlvfsD1CjcmEc9YZUqA8iV/p9fLmI6EQgAYmctlopHrE0TICrpWEo78ni2I1kL6Ssm4CF+EjXj+XCoxB/uRPhACs7qb6Tn1eWhW/t+sDXThyZp9wZBKFzJan3Y/nJUGAm3RLJfCzbdf6Rg4+C7yurIldYhJymaS7g8z81RWltDWHMciqGA61U7NJsiVMsUwjejN65KZm8Wu3Iv+92OilHAINcCDkp/asXOlDzT+c7VL0JesjWZ82+2fO9ge3brZKtvTVbu163Yut9dJ136veanTodznjnLw==</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_06198</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_061919</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_061919</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_061919</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VyvOYMl4wtnEFqliSCdnIQCbJnZcpITdYGVtyLNkBvn4kAw6Q5XLvk6vbre7Ti476lKMktoMu55AJwmhtkcSUB6W2reUZDRjihAcUJcADgYNJ9+Y6sOtmgLZHtNpw0NZ+zzwf274POnYAdMecuXoLbNBD18We67vTRgtLU85zGFIuEBVtzTYtR7cs3XLuTTNw/MCy6i3T/aXVHiDj0rc0qZvaBtSCt7VIiDQwjNfX1/pro86yuWGbpmU83VxPcAQJ0jqn64zKQFlnY4/rIWCIY1zHLDFOjT2b05AHEzKnSOQZbGKFn8UyDbNlSJuQk/k3rToL4ZDOWCn2EWWUYBSTFVL1uQERsbDWjecsIyJKPk3CMpVjHRZYx5ZDv2nGPrQjHe0hzDjSeYSsja8xzCADiqH2czxsa9+O61p59D5DlM9YlvB98b/hAVpAzFIIdb5NawPteIcfVKpzCjgYUhznnBRwq4Y1RRj4ppuAj3dVu8tgRhbXhMsBXXCFztiFdyCuqzEgc+Di/zRopzlrJw8ozqHTZb+o74/wzdPkEtsvkXvrT58uSI8sb9olgF3jUlG1di0eDGU1ROsTj88Is6X1/M/1NW0lvcFV0Ugf8bg7viO9UXJ98jizzsfL6Hww+tEUr03nhjUzfHEXPdBx0X/273qXzcnl2cJZ9FehSPrj2/uTqZGurCTsehdXg1nsGj+n5GzpRU933384LBqlxUMc/prHZ435JL6ML1YPq+9JiNPHxsSOTopViqaLeTr0vsPzVVisRs5q7LjuOQzbVTo7+Pd12zs/yafPgMVWVGMwHNTOZZeQ+JrMlIaE+qw0DVJFPlwAFVpHnVLcEeSS7kgYyB6uZdPre71z3/d6Pcdx7f6Z2WyYzVbLOje7nmP2tySzRnEAsc/ojKhYinLXY/M1QJwEHGgImV6wXDId177wOEAC1YZ0LC8BoxzumaRnKwzjP9ThorF68awEmOcRlxPblKR8y8SIjrLuTEC2T8qNPVIeAyYpAcXcarC5nGwuZDFeUJGL2KoXqE4hl9yeKZoNbMdvGpwkaQwKqpGwMI+hnkZpWRqDr7+2jjAvteOz+/K6fZrY4b9tDaRNSJQBV7n0QPYRPnhdzG0inyfs7ia8dd/NQ6JuliyoyAheI9n/9TYnakCqIZEZ/e5Pfltb3JX50cffnzS+AGUc1qMKFBZkJ+z27ZavgOSNzrabL6j+Us+LIi/75yl+zKR7Q9KkZUwA55LWlvfsD1CjcmEc9YZUqA8iV/p9fLmI6EQgAYmctlopHrE0TICrpWEo78ni2I1kL6Ssm4CF+EjXj+XCoxB/uRPhACs7qb6Tn1eWhW/t+sDXThyZp9wZBKFzJan3Y/nJUGAm3RLJfCzbdf6Rg4+C7yurIldYhJymaS7g8z81RWltDWHMciqGA61U7NJsiVMsUwjejN65KZm8Wu3Iv+92OilHAINcCDkp/asXOlDzT+c7VL0JesjWZ82+2fO9ge3brZKtvTVbu163Yut9dJ136veanTodznjnLw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7E5C0B87D2829E05307991F0A67AC</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C7E5C0B87D2829E05307991F0A67AC</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C7E5C0B87D2829E05307991F0A67AC</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C7BF887BB4462CE05305991F0A740C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C7BF887BB4462CE05305991F0A740C</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZRc6o6EH4/v4Khj3cwBBGFUWeo2DN2rPWq9bZ96cQQMRWDkqC2v/4mWKxa2+u5T0yWze63u1++pM7RIrY8n3OSCpowrRM09JcatpxwYroGdCbQsJ3qxEC45hquO62aE9txcG2qax3OM9JhXCAmGrplwrIBTcMqj0zHM22vYpeqTu1Z18Yk5TK0dCmZurZdxIx7edqGnqXMSxCn3GNoQbgnsDf077qe9PRQgUlv1nco84RpcybE0gMAl0KCSRzjEk4WoA6OfOoh94Y0YkhkKfnIGfKG/rF3s9mUNuVSkkbAMk0TmC6QPiGn0ZXe/FVsJmGHTZPduoVYwihGMX1HCtQdEbMk1Pw4SlIqZotvQkMATRXaIFtsYGizKx18JsjRXRjpCGTKkcFnCBbBBmRKUsIw0R4GnYZ+ddkEd3tHKWJ8mqQLfrL+M0iErUmcLElo8KKyAt3lEc+0q1kn2OswHGecrklP0WSJMOFaPyVTuu1SLskXci0fv7blBcMI/pOR1MEhTgkbnOlMQCPCxf+Z1+GsdlHGKM5Ic77t9qPr7urtBtXc59+bVsXp+/5jvxxsGjmEQ+cdqP2oP9anRN3z6mPTfY/3ROqX4V0FO+Nu73G9HU7jxI7+7pVfJ/h13U6tcfiwvB0JCdLNHua9EIPHynvnutV3nu2nbMBvh4HtPy+CX2XhADQxxRxkKGs5PUbWj+71Ko3mt+N5dVQe2z6IWPttOZ8G9+Kv6LVbRcmd/+jObQofLDFw3k3fKv+Onsrw1yijCL2CWpKN+sv20+0/q4fGZ02HNRwbCzkYZpNXgkWxVNToBNqNnBcSP0uLstDQmOau3lLpExeECb2pdilZ8TIpPjT05DB367brlG3XvzFvqq2g5rfbpm3CG9M3q65r2TAo9GeH4gRiK2FTqnIphd3x52eAeOFxwkKSGuskwzPC9R8iBkggrcMG8mAkjJNRIhW8DWH7+toNoFWrVNrtMmy1axXoVOENlFQwoa71EnHP7lN/Kkh6rN7ukXoPCKZLSpTEK55zSXQuZEtWaJ2JGJbWqMRIJi+BVOmwZ9m1CuB0sYyJAgwWSZjFpLScLfMGAb77WlKOeG4dtEf5+fu2vNN/RSekT0iVA1e1XBM5TXLmGrKLQr4tGFqHBRfh/Syk6pjJtoqU4h2S41+fbFE02VNFVvTSGr7AAvfe/eLtX3eCH0CB037sE4VrepC2uE/lFSFFpFlMc4VKq1K2Xmf5/KpKIFMZHkBgVsGQ4Eyq3NsomRMG9iHARRfMHvVJ5r39GF8mZmwokCALyTYtX17wuhgSrl4XHXlatpc+XY5Syr4JshXnbK1YPkIU4h/fKdjDyk+a+/KzSdLwc1xnYh3kkXXKJ4WgLFIrdZ28fUMKnMiwVOpfkh4GPxfgXPJj477JeyxCsmmSCfL9H00JW0NHGCcZE51Azw2HYpvjFG9L4n06fQmTC/rHDb3l397Qj3fdoZS9BdL3vvS/nQ2a0wUTuYvTHEtD38rHpkzOogNx/wB4Xt+d4Cd9P66k+cX81XLQ09Pz0PwX</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C7EBF280C32B8FE05305991F0A1FE0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:07C7EBF280C32B8FE05305991F0A1FE0</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>2000-11-17</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2003-11-17</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2003-11-17</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>07C7BF887BB4462CE05305991F0A740C</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c1753e2-8f9d-4882-82ce-367e4575c87c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9d40fcf-2244-43aa-a4ab-bc1d41c13d09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b7a1372-c0cc-4a85-bfe5-c58e0b71c986</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d54f850-ab4c-4793-95da-59d06b8738f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71efd56c-117a-4f87-a51e-f623e2324e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>41d9250c-a460-46c5-961b-26890cb14e9a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aed94ee9-90b0-49fc-99cb-64b647ef163d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>role</con:name><con:value>nodeIdRTL</con:value></con:property><con:property><con:name>Country</con:name><con:value>IE</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:RET_CS_1</con:value></con:property></con:properties><con:tearDownScript>if(context.expand( '${#Project#runTeardown}' )=='true')
	{
	log.info("Executing TearDown for Suite '" + testSuite.getName() + "'");
	
	for ( testCaseResult in runner.results )
	{
	   currentTestCaseName = testCaseResult.getTestCase().name;  
	   currentTestCase = testCaseResult.getTestCase(); 
	   log.info("Current TestCase : '"+ currentTestCaseName + "'");
	   log.info("Current TestCase Status : '" + testCaseResult.getStatus().toString() + "'");
	   
	   if ( testCaseResult.getStatus().toString() == 'FAILED' )
	   {
	      log.info("Re-executing failed TC");
	      def currentRunnerTC = currentTestCase.run(null, false);
	      log.info("Status on re-execution : '" + currentRunnerTC.status + "'");
	   }
	}
	log.info("Execution of TearDown for Suite '" + testSuite.getName() + "' Completed" );
}</con:tearDownScript><con:reportParameters/></con:testSuite><con:testSuite name="02.UserGet_Backward_Compatability" id="72698ff4-2e3b-4092-be02-3cb721960f75"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00001_Account and User Create with BE 111_UserGet Full user 107_SUCCESS_P0" searchProperties="true" id="b642470d-88b4-46ea-bc54-65902b515658"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="f48fb471-51d0-4073-a062-b9e0d9b3587b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="baa1d547-33ba-42e8-a73a-0e8a9dcff531"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","BE");
tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="3106ac38-52b9-4231-8f31-fe201669aafb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="7bbb21ca-540d-478f-8e7a-706734605867"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="89a014b5-5808-443b-bc07-3b32a9f5a823"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZrU/I6EP4rTP3olF5ogXaEGYRXrQIioL7jFyemC0TbFJK0oL/+JAUq4OVwzqfObje7z17yZM84iiPbb3EOTJCEllZxRLmfaxtayqifIE64T1EM3BfYH7V6Xd8umz7aHtFKQaehPYOHoD6BUHdeEOhOFbk6enFd3faqVqVm2RUrrEhTzlMIKBeIioZmm5ajW5ZuOWPT9F3Hr9TL0vhJKz0A49K3NCmb2gbUije0mRBz3zCWy2V5WSknbGrYpmkZf3vdEZ5BjLTm2TqjPBBrbuxxOQQMUYTLOImNM2PP5izk/ohMKRIpg02s8KdYpmF6hrQJOZmeaMVZCAM6SXKxjWhCCUYR+UCqPj0QsyQstaJpwoiYxT8mYZnKsQ4rrGPLoSeasQ/tSEd7CBlHOp8ha+NrCBNgQDGU7odBQzs5rmv50TFDlE8SFvN98b/hAZpBlMxlQL5NawPteIffVKp5BtgPKI5STjLoq2GdIwx8003Ax7sqDRhMyKpLuBzQFVfojF14B+K6Gh0yBS7+T4N2mrN28oCiFJpPfGYw3n9rUa93e3NdmT4E9hUbjGf9XiMHsGucK4rWrsWDoSyGaH3i9elxfHPfrwSXg0t4vB/xduTe9++X5GJixPR1mL7bvfqqc2pf8EW2uhpfXt3Y8cXkeuFEl70g7VzV7pyEP7ycLsjwI6NR+86xx7cP3UH3Do/Op6T17pHa4OGc2LUbHP2lbYJQMq5ZHx5zO9Xrj7fFctnNsuXYG/aXLMguXrvocXgzvmSus8DOR7gYnXLj7nqeLhtFOjv493XbOz9KX14Bi62oxiDolC5kl5D4ncyUhoT6JDf154p8uAAqtKY6pbjDTyXdkdCXPVzLZq1dt2zPce1q3ex4tT+mWzFrnmddmC23U3e2JLNGcQCxndAJUbEU5a7H5neAOPY50BCYniWpZDqu/eKxgwQqBXQoL0FCOYwTSc9TJ6Oibi08d+Iy27b41DTD+DXTSv1E3NJb1poIYPuUXNmj5CFgMiegeFuNNZdzzYUsxQJlqYiscobKFFLJ7EyRrG87ddfgJJ5HoIAacRKmEZTns3leGIOvv7aOMM+1wz/j/LL9mNbhv20FpE1IlAFXuZyD7CJ887bY20R+Tri6m/DWfSsNibpXspyCEbxGsv/rc0rUeBQjIjN6bo+erS3uwvzo419PGr+AMg7rUQQKM7ITdvtyyzdAskZz280FKi/KaZalef9qih2ZdC8py3IN0zZGgFPJa+/j5A2oUXgxjnpECuAHwQv9PsRUzOhIIAGxHLhSLh6xNYyAq60hkBdldexKshdSlk7ASnyna0dy41GIf12KsI+VnVQP5GeZsPCzY9/42okj85RLgyB0qiT1gLz/MBc4kW6JpL6E7Tr/zsF3wfeVRZELLEIO1Esq4Oc/JcVpDQ1hnKRUBB0tV+zybI5TvM/B/zT64ian8mK3I/++3OkkHwEMciPkJPevnmhfXQE63eHqTdCvdF2tV6sVr9Zp13O6dtd07Tj2eVGUPXTNL+qvmp06Hc548x8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C8126866397DC8E05305991F0A442B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C8126866397DC8E05305991F0A442B</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C8129452680D97E05307991F0A5D84</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C8129452680D97E05307991F0A5D84</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_062533</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"07C8126866467DC8E05305991F0A442B:5DF48133"</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5cc09d72-cca4-4fbf-8b37-ddc11ccccc0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca20ddeb-ee1d-4946-b59f-de46f111d75f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00002_Account and User Create with LU 111_UserGet Full user 107_SUCCESS_P0" searchProperties="true" id="114bb5e4-918e-4ae8-a97a-f4d42c34477a"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="ea71902a-3d9c-4e42-8c27-a6555b8659cc"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="513a286d-316a-4415-9c36-b3082e21f4ea"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","LU");
tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="20f7a49b-4b28-4fe4-af98-37ebc0cf6dfc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="405abeb4-2227-485a-b9d7-014d5401bccb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="928fab4b-e292-4e3f-ae8d-2015907f3f67"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMr6AAbsCVSyExOQyWczATl6mhNwGJbZsLBlMvn4kAx4gJMvuk6vbre7TFx31NUNRaDpdxiDlJKaVPAopcwptW8lS6sSIEeZQFAFzOHa87uODY1Z1B+2PKBW331Z+mWDZtmUEqmHbplqv2zO11cAN1ai37ADPmo2GVRemjGXgUsYR5W3F1I26ahjCZqzrjlV3LKtaNxsvSmUCKRO+hUlVV3agctZWFpwnjqat1+vqulaN07lm6rqh/fP44OEFREjpXG8zKgKlnZ09rvqAIQxxFceRdq0d2Vz7zPHInCKepbCL5X8WS9d0WxM2PiPzb0p5FnyXBnEh9hCNKcEoJO9I1ucR+CL2K91wHqeEL6JPkzB06ViFHKvYqNNvinYM7UJHRwhThlS2QMbO1wgCSIFiqPwYuW3l22VdK46OU0RZEKcROxb/Gx6gKwjjBHyV7dPaQbvc4ZlKda4BOy7FYcbICp7ksCYIA9t1E/DlrirPKQQkfyBMDGjOJDrtEN6JuK1Gn8yB8f/ToIPmbJ1MUJhBp/m0BvL9tcGbM/8l9PS77u3d1YgOvde3dgHg0LhQlK3diidDWQ7R9sQ6evvhNfRB7f42fOq74YsLw83Uep41n3/eeHSKWY0Mm5NhnAfWXTLp2db9usX/Xiy7k4Ux62mr/DUbv6PHTQu8ehPHuT/Bj3dw88zTxLsdR96LOYwfNg16e6cR74oPF54fL2+aQf7DmP60N4/9aUN3B1eLfPPu3l9N88k8WS+H0yyZ1Z5fekF/dBdc6RrtTeftMp0D/Me6/Z33stkrYL4X5Ri4/cpAdAnxr8lMaoivBoWpk0jyYRwoVzrylOQOJxN0R3xH9HAr681eyzDt1sDSLb1v1250q6Y3bdsY6N3Bjdnfk8wWxQnEXkwDImNJyt2OzdcAceQwoD6k6irOBNMx5QuPfcRRxaUjcQliymAcC3p+ezf199DIVqyJMiswmstZ65XntlJ5ivl3+j3tBhzSY0quHVHyCDBJCEjelmPNxFwzLkqxRKuMh0Z1haoUMsHsqSRZx6y3LI2RKAlBAtWi2M9CqCaLpCiMxrZfU0WYFdrRzbi4bJ+mdfpvXwFh4xNpwGQuf4HoIpx5W+r7RD5PuHGY8N59N/OJvFeinDwleIvk+NefKZHjUY6IyOhXz/tl7HGX5hcf/3hS+wKUdlqPMpC/Igdh9y+3eAMEa3T23Vyi6rKarVZZ0b+mZMdUuBeUZViabmoe4Ezw2mYcvwHVSi/aRY9ICfwkeKk/hpjxBfU44hCJgasU4gVbgwdMbg2uuCj5pSvJUUhROg45P6frhWLjkYi/XIqwg6WdUD+LzzpO/T8dO+PrII7IUywNnNC5lOQDsvlkLnAs3BJBfXF66Pycg3PBj5VlkUssXAzULOPw+Z+K5LS2gjCOM8rdvlIoDnm2wMk3CTh/jD64Kai83O3Ivy93KilGAIPYCBkp/Msn2pFXgM4PuHoX9Cxd1wf2V3R9jK7zQf1Rc1Cn0xnv/AY=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C81298F4F90D93E05307991F0AFE2D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C81298F4F90D93E05307991F0AFE2D</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C81298F5050D93E05307991F0AFE2D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C81298F5050D93E05307991F0AFE2D</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_062551</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"07C812994DEC0D95E05307991F0A54D9:39D56747"</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5cc09d72-cca4-4fbf-8b37-ddc11ccccc0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca20ddeb-ee1d-4946-b59f-de46f111d75f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00003_Account and User Create with NL 111_UserGet Full user 107_SUCCESS_P0" searchProperties="true" id="39ae015a-f3dc-4161-89a3-51133028cd0b"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="9df7af35-fcc6-44c0-885c-3e669942558f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="e7ae17aa-cb6f-4260-9cc7-b6920f61759f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","NL");
tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="d08d1083-4d44-4266-a0aa-872917d719ff"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="122b5921-fcf9-4fc3-b71b-93e264ba23c8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="3d2a3f05-7cb5-40c1-9537-c655c950fcf1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMr5gY+wKVDFAEmchZIFJMnlJCbkBEVsmlsQlX7+SAQ+Qy7L75Op2q/v0RUd9yVAS20GTMcg4SWlpncSUBbm2romMBilihAUUJcACjoNhs9cN7LIZoP0RrRS269oL+FXHcieRDrUIdMd3I31sVaq647meXUXIrYxtacqYgJAyjiiva7ZpObpl6ZYzMs3AdQOrUvZs71krPUDGpG9pUja1Hag1q2szzheBYaxWq/KqUk6zqWGbpmU89bpDPIMEaY3LbUZ5oKyxs8flCDDEMS7jNDEujSOby4gFQzKliIsMdrGir2KZhukb0iZiZPpDK85CFNJJmostRFNKMIrJO1L16QGfpVGpGU/TjPBZ8mUSlqkc67DGOrYc+kMzjqGd6egIYcaQzmbI2vkawAQyoBhKvwZhXftxXtfyo6MMUTZJs4Qdi/8ND9AlxOkCIp3t09pBO9/hJ5VqXAIOQopjwcgS7tSwLhAGtusm4PNdle4zmJB1lzA5oGum0BmH8E7EbTXaZAqM/58GHTRn6+QBxQIa/rLrtf7utFa3qT+eX78t7n45STRYeitczwEcGueKorVb8WQoiyHanujA231/NVojMvB6o4Xf7ww3wv3LeDKaV6HPLX+zvvn9MOm+v3c278/rOXQmj5WoYzysLtqDsaha1dYGv47RTW++6S1p/HqbPC3Nuwh1Htv+5Fd8059scNqD165XuXlrG+R9bszckf08u0Xdi2ujOx8J8zkc3lz/bt8MnKcR+3nPPFJjtYuw9ngbP/TYpt8Xj+H4d71I5wD/sW5/54diPAfM96Iag7BdupJdQvx7MlMaEumT3DRYKPJhHCjXGuqU4o5ASLojUSB7uJVNr1WzbM9zWmbHa7eqHdOtmK7vW1dms1n76e1JZoviBGIrpROiYinK3Y7N9wBxEjCgEWT6MhWS6Zj2jcc24qgU0oG8BCllMEolPdsL7CAQjvs6E7Hw3z1/Jio1Z66V7lLep/2sOeGQHVNy5YiSB4DJgoDibTXWTM4147IUb2gpeGyVl6hMQUhmzxTJBrZTcw1GkkUMCqiRpJGIobyYLfLCGGz7tXWEWa4ddEb5ZfsyrdN/+wpIm4goA6Zy+Qmyi/DJ22LuE/k64ephwnv3TRERda9kOXlG8BbJ8a8/U6LGoxgRmdFLa/hi7XEX5mcf/3jS+AaUcVqPIlC0JAdh9y+3fAMkazT23XxD5beyWC5F3j9PsWMm3UvKslzDtI0hYCF5bTNKX4EahRfjrEekAH4SvNAfQxR8RocccUjkwJVy8YytYQhMbQ2hvCjrc1eSo5CydBzW/DNdK5Ybj0L87VKEA6zspPpeflZpFv3p2Ce+DuLIPOXSwAmdKkk9IJsv5gKn0i2R1Jdmh84/c/BZ8GNlUeQCC5cDNRYcvv5TUpxW1xDGqaA8bGu54pBnc5x8s4Dgj9EHNzmVF7sd+fflTif5CGCQGyEjuX/1RAfqCtDpAVfvgn6ka7925dq+2fYrOV17W7q+6tjtoihH6Bof1B81B3U6nfHGPw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C81298F5290D93E05307991F0AFE2D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C81298F5290D93E05307991F0AFE2D</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C812774C0E7DC6E05305991F0AA8B7</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C812774C0E7DC6E05305991F0AA8B7</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_06269</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"07C812774C297DC6E05305991F0AA8B7:726463CE"</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5cc09d72-cca4-4fbf-8b37-ddc11ccccc0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca20ddeb-ee1d-4946-b59f-de46f111d75f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00004_Account and User Create with AT 111_UserGet Full user 107_SUCCESS_P0" searchProperties="true" id="71813aca-45e3-47d0-a3be-a0b5f9d52d51"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="1e1b7fcc-5587-4344-bd9b-f080fe602a28"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="418b5892-e28e-4c30-96f6-5ddc582f812b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AT");
tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="7bab796d-025d-4ba4-95dd-2d384c45dd6f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="1c0c91e8-66cc-437e-ac40-efe31a993dfd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="ded2def3-3477-458d-a8cc-5029bc1217a7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VyvNIeQWzuAJVDCQTErIBySTzkhJyY5TYsrEklvn6KxlwgACXe59cardOn150pAuGotDxWoxByklMC4sopMzLrA1NpNSLESPMoygC5nHsDVp3Pc8xLA9ttmiFbqehvbsWxiMouTpCNV8v1wDpyHexXoE6dkrVuoOrtnRlTECXMo4ob2iOZZd129bt8tCyPNf1nLrhOtU/WuEFUiaxpYthaWtSC9bQJpwnnmnO53NjXjLiNDAdy7LN17veAE8gQlrzYpVRFihtrv2x4QOGMMQGjiPzwtzxufCZNyABRVyksI7lH4tlmVbdlD4+I8EPLd8LfpeO42zZRjSmBKOQ/EWqPnfAJ7FfaIVBnBI+iY4mYVsKWIcF1rFdpj80c5famUA7DFOGdDZB9hqrD2NIgWIoPPe7De3HeV3Ltg5TRNk4TiO2u/xvfIDOIIwT8HW2SWtN7XzAA5VqXgD2uhSHgpEZ3KthTRAGtu4m4POhCo8pjMmiR5gc0AVT7MxtenvLVTU6JADG/0+DtpqzAnlBoYBm27yDpL+MwLruvCT0171lF2sk6Lm9z0ZGYNs5M+StXS33hjIfotUO8rEs+v1rxMZuMemS384nf5tX5pXOY01w/DQdDC7F3ZNdGdvcqpTG92/o5mbxt8jvXyYVCTktLsLQ+rXsODU2rCxvP9rFek1Mhy3RLf9J3liR/n59vnXceeUV1YuiRMKnIuu93nZJUE+4O7rpxzfT+UPARj/fAnR9JZ4rRQRPowV2rOINRxVuO/PP6HlsveFGns4W/13b5swPxOgDMN8s1Rh0O4Ur2SXET4uZshBfH2euXqLEh3GgXGuqXUo7PCHljvie7OFqbVXbNdupVi7rJavaabcuLbdkufW6fWW15D97IzIrFnsU2zEdExVLSe5qbE4TxJHHgPqQ6rNYSKVj2gnEDuKo0KV9eQhiymAYS3m2J9N4RKv+uJy6xK7PQ6hOg4+ZqAVa4T7mD/QhbY05pLuiXNoR5T5gkhBQyq0Gm8nJZlwWY4pmgoe2MUMGBSG1PVUy6znlmmsyEiUhKKpmFPsiBCOZJFlpTLb6OjrCLLP2L4fZcTua2P6/TQ2kj0+UA1O5/ATZRzhwu9ibRI4nXNlOeAPfEj5RJ0sWlKcEr5js/vqaEzUg+ZDIjN7bg/d8GHL3s7d/32meIGXu1yMP5M/IVtjN3S1vAakbzU03p8iYGmI2E1n/qkofUwkvRct2TcsxB4CFVLblMP4EauYo5lnXSE58L3hu36Uo+IQOOOIQyYErZMsz3g0DYOrd0JVHZXHuo2QnpCwdhwU/ZGuH8s2jGJ98FmEPKz9pfpSfeZz6Xx07gLUVR+Ypnw2c0ECt1BWyPDIXOJawRIpfnG6DHwI4FHzXmBc558LlQI0Eh+N/CkrVGhrCOBaUdztaZthW2ownXybgfTl9g8nEPH/dkX9/3ukkGwEM8k3ISIavLmlPHQEabKn1OuhhwXbKpwR7l13zm/m7ZatO+zPe/Ac=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C81276E9247DCAE05305991F0A07C1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C81276E9247DCAE05305991F0A07C1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C81276E9307DCAE05305991F0A07C1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C81276E9307DCAE05305991F0A07C1</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_062625</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"07C8129452BE0D97E05307991F0A5D84:860E1FAF"</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5cc09d72-cca4-4fbf-8b37-ddc11ccccc0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca20ddeb-ee1d-4946-b59f-de46f111d75f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00005_Account and User Create with DE 111_UserGet Full user 107_SUCCESS_P0" searchProperties="true" id="570e2134-308a-4734-98ae-5128c0f4fa9f"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="0442d045-bba5-4bea-b756-c3f3ffdec809"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="21ea35a6-ddc1-44f9-97c5-5bdca6860ee5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","DE");
tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="10b2fd9d-6f31-45fb-b696-92c1998402f3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="28431623-a7c5-4d2d-aeca-a524f38c3772"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="5c1a043a-1409-42fe-90f1-448909b4bcf9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMrLB5uIKVBEgAzNkJgOEzO5LSpHbWMGWHEvmMl+/kgEHCMmy++Tqdqv79EVHfS1wHFW8jhCQSspZaR1HTHi5tmVkKfM4FlR4DMcgPEm8Sedu5FXKlof3R4zSsNcynhzfajZdv2GSSq1qOs2GZTagAqZbtx1iNR0/qGJlKkQGQyYkZrJlVCzbMW3btJ2pZXmu6zlu2XYrfxulGaRC+VYmZcvYgVqLlhFKmXgIrVar8qpa5ukcVSzLRr/vRhMSQoyN9vU2ozxQ2t7Zk7IPBKKIlAmP0TU6srn2hTehc4ZllsIulv9RLAtZTaRsfEHnX4ziLPhDFvBc7GLGGSU4on+wrs8dyJD7pU405ymVYfxhEralHZuwJiaxHfbFQMfQLnR0hDAV2BQhtne+xhBACoxA6WE8bBlfLutafnSaYiYCnsbiWPxveIAtIeIJ+KbYp7WDdrnDM5VqXwPxhoxEmaBL+KGHNcEExK6bQC53VbpPIaDrERVqQNdCo0OH8E7EbTV6dA5C/p8GHTRn62SGowzafMGD5ymaDbv+Kv52A4+hM+rBCl7YQysHcGicK4rWbsWToSyGaHtiSl87vqy61c3413KR1Ac+CtdxzCF4HdW71iwLXp5XTefxNp6gwWxz9dfVLJyFd33WZwv0pxd+rQTkhtOk8TpbjditsL4OFv2H6vz3yA7XA/t78O1xOpg7kvps1u8tF99JrZYMev1en3Rm1O6vNw+1WtNt2r/u+2TztYvXqGPXH+3nq5dudrVAzVs+ICi5G4+GrSKdA/zHuv2dn2TPL0DkXtRjMOyVblWXsPyczLSG+maQm3qJJh8hgUmjrU9p7vAyRXfU91QPt7JV7zbsSr3udF2n3uvW+pZbtdxm0761Op3GTX1PMlsUJxC7nAVUx9KUux2bzwGS2BPAfEjNJc8U0wnjE489LHFpyMbqEnAmYMoVPdt1P2wGUXVZg/WGpJt17GdZIBqJUfrB5U/2M+0EEtJjTq4ecfIYCE0oaOLWcy3UYAupavGKl5mM7PISlxlkitpTzbJexWm4SNA4iUAjRTH3swjKSZjklUFi+62YmIhcO+5P89v2YV6n//YlUDY+1QZC53IDqo1w5nGp7hP5OOHaYcJ7953Mp/piqXrKlJItkuNfb2Oi56OYEZXRU3fyZO9xF+YXH39/En0CCp3WowjkL+lB2P3TrR4BRRvtfTdfcfm1nC2XWd6/uqbHVLlXnGW7yKqgCZBMEdtmyhfAUOEFXfSKFMBPghf6Y4iZDNlEYgmxGrhSLl6wNkxA6LVhqG7K+tKd5CikKp2EtTyn60Zq5dGIP92KiEe0nVLfq8+Kp/5bx874Ooij8lRbg6RsriX9gmw+mAvClVuquI+nh87POTgX/FhZFLnAItVAPWcSPv5T0qTWMjAhPGNy2DNyxSHR5jjlJgHvzeidm5zLi+WO/vt2Z9J8BAiolVDQ3L9+oz19Bdj8gKx3Qc/ztdP4jK+P0bXfqd9rDup0OuPtfwA=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C812774C487DC6E05305991F0AA8B7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C812774C487DC6E05305991F0AA8B7</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C812774C547DC6E05305991F0AA8B7</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C812774C547DC6E05305991F0AA8B7</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_062641</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"07C8129452C60D97E05307991F0A5D84:BEBB4A6F"</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5cc09d72-cca4-4fbf-8b37-ddc11ccccc0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca20ddeb-ee1d-4946-b59f-de46f111d75f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00006_Account and User Create with CH 111_UserGet Full user 107_SUCCESS_P0" searchProperties="true" id="092b0ed4-4001-4367-9ff1-f7f129112cb7"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="98d3b7f4-7eaf-4be9-a56a-2487238e1c6d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="284228f1-c0f4-4e06-ac34-deb07b1aa1b0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CH");
tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="a6a5d134-6099-4c3b-b58c-14d0c5a21f9b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="91337d79-50b7-4f4f-b7f4-4dffe72b5592"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="892320fd-d1e5-4f85-adef-b0ae318ad5d7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc6o6FP4rDvuxgwEEBaY6Y7Vap9qL2Fr3SycNUVIhKAlo++tPgkrV1h7PeXCcLNblW5d8WZcMRqHhNhnDCScxLa2jkDI3l9aVNKFuDBlhLoURZi5Hrtcc9F2jrLlwZ6KUeu268mrYvqabEKumqWmqaWtvqmNVNdWovFX1av5DQpWxFPco45DyumIIC1XXVd0caZprVV1NKxu2/VcpPeOECd9CpawpW1BrVlcCzhcuAKvVqryqlONkBgxN08HLoO+hAEdQaVxuMsoDJY2tPir7GOEwRGUUR+ASHOhc+sz1yIxCniZ4G8s/FUsDmgOEjs/I7I9S2GK/R6dxfmxBGlOCYEg+oazPAPMg9kvNcBYnhAfRySR0TTpW8RqpSDfpHwUcQjvT0QHChEGVBVDf+hriKU4wRbj0NOzVlT/ndS03HSWQsmmcROzw+N/wYJrhMF5gX2W7tLbQznf4Q6Ualxi5PYrClJEM38lhXUCE2babGJ3vqvSQ4ClZ9wkTA7pmEh3Yh3d03FSjTWaY8f/ToL3mbJw8wzDFDd3MnqudobeqxMtx1mX6IALVmxni07ieA9hXzgVFazfHo6EshmhjMWfB6NaezFAw6Ywn08n473xhdsf2BZ0Zk3f94fPeebRuPu3Ksn/hdK+iqBN5iH7UWp7zdA8Cmy67k0F19XmfhDeR/eBoK9t5Yxfvt30AsvsRmYzgFQC3Y++hsuiu4pdn4k1sftdMJ3dmt99/aek2qoLnAXWslzDCznj4+NYLgqsn8/3lGiwfq2wwu+uweTJk9SKdPfyHst2d99K3d4z47ijHoNcudUSXIP+dzKSE+Oo0V3UXknwYx5QrDWklucNNBd0R3xU93Jy1WsvWzetKpXJtaOa1fa1ZFc1yHL2jNc2O3tqRzAbFEcRWTKdExpKUuxmb3wGiyGWY+jhRszgVTMeUXzy2IYelHh2KSxBThkexoGc9+qRBpZalRnXOaytKLIvMqvN3Wyndxfye3ifNKcfJISdXDjh5iBFZECyJW841E4PNuKjFEmYpD/VyBssUp4LaE8myrmHaFmAkWoRYIgVR7KchLi+CRV4ZwDb/hgoRy6XD61F+207mdfxtVwKh4xOpwGQuV1i0EX97XCzX2iVyOuHqfsI7983UJ/JiiXryhKANksNPX2Mi56OYEZHRa8t71Xe4C/Wzzb9bgl9AgeN6FIH8jOyF3T3d4hEQtNHYdXMJy8tymmVp3r+apMdEuBecpVtAM4CHUSqI7WMUzzEFhRdw1itSAD8KXsgPIaY8oB6HHEdi4Er58Yy1wcNMrg09cVPW5+4kByFF6The859krVCsPBLxr1sRcpHUE+IH8beKE/+rYz/42osj8hRbAyd0Jk/yBfk4MRcoFm6J4L442Xf+k4Ofgh8KiyIXWLgYqLeU49NfSpLU6gpEKE4p77WVXLBPtDlO/rHA7pfSNzc5lxfLHfn37U4l+QggLFZCRnL/8o125RWgsz2y3gb9xteGY1pGq6m1nVrO17UNX1tt2yyKcoCu8U38XbJXp+MZb/wD</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C8129452CA0D97E05307991F0A5D84</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C8129452CA0D97E05307991F0A5D84</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C814E333E204E8E05305991F0A4F1C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C814E333E204E8E05305991F0A4F1C</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_062656</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"07C8126866A47DC8E05305991F0A442B:F01DEB17"</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5cc09d72-cca4-4fbf-8b37-ddc11ccccc0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca20ddeb-ee1d-4946-b59f-de46f111d75f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00007_Account and User Create with FR 111_UserGet Full user 107_SUCCESS_P0" searchProperties="true" id="60d5752a-01e2-4b37-b917-541e90b1d113"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="48d62d75-cd4d-4c00-9c43-c56f1a9c5124"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="116eea1c-61f8-4086-a52e-79db56f9533f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","FR");
tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="6626a406-cdc0-48fb-9f69-d3eacbfdd5b9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="7701d132-5438-4064-b329-9fc6f1382aa6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="7ec95048-2b9a-4a13-9f30-b1a320f36115"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtc6o6EP4rDudjB3kRFZnqjJW21zlqrS+nnX7pxLBgLAQlQam//iRYqdra672fmF02u8++5MleMxSFptNmDBJOYlrKopAyJ9c2lTShTowYYQ5FETCHY2fc7vccs6w7aH9EKXXdpvLqzXw888BX/WpDVy2/NlPtWg2rs3rVqiPP9i1PF6aMpdCljCPKm4qpG5ZqGKphTXTdqdYco1qumJUXpfQHEiZ8C5OyOLUDlbGmMud86WjaZrMpbyrlOAk0U9cN7bnfG+M5REhpXe8yygMlrQ97XPYAQxjiMo4j7Vo7srn2mDMmAUU8TeAjlnculq7pDU3YeIwEv5TiLHhd6se52EE0pgSjkGyRrE8f+Dz2Su0wiBPC59HZJAxdOlYhwyo2LPpL0Y6hXejoCGHCkMrmyPjwNQIfEqAYStNRt6n8uqxr+dFJgijz4yRix+J/wwN0DWG8BE9l+7Q+oF3u8JtKta4BO12Kw5SRNQzksC4RBvbRTcCXuyoNE/BJ1iNMDGjGJDrtEN6JuKuGSwJg/P806KA5Oyd/UJhCi/5+38wX/Xnwm0yu+GZR6Yy2KOvfrx67zRzAoXGuKFq7E0+Gshii3YkVWPcVfnMTaIO0bpvcfblfDafROHt2zenmwVu693HkBxlq3KbP00UUw3Y98Z6e0mHb3Q7Z1eIqcceD9bMd2Hf/uFv+dv+u6Vbn8WlZt8Bc9Ib9Qacb4nVU3S6MIXr0x/jhyUTtmT+Hzmo79K560/Dde6GDbB7Y98ab8dynyI/ITVbv9c0pbyfBqD9/sZ83zSKdA/zHuv2dH6ezBWC+F+UYdN3SnegS4j+TmdQQT/VzU2cpyYdxoFxpyVOSO5xU0B3xHNHDnazXO7Zh3dbalaqlWzd3t3q1olcbDeNObzc6rr0nmR2KE4idmPpExpKUuxubnwHiyGFAPUjUdZwKpmPKDx5dxFGpS0fiEsSUwSQW9BwslrNYp2Zt7YNJtkTnC7zNsppSGsT8gT4kbZ9DckzJlSNKHgEmSwKSt+VYMzHXjItSrNA65aFRXqMyhVQweyJJ1jEtu6oxEi1DkEC1KPbSEMrL+TIvjMZ2X1NFmOXa0e0kv2xn0zr9t6+AsPGINGAylxsQXYRv3hZ9n8j5hGuHCe/dt1OPyHslyskTgndIjn99Tokcj2JEREavnfGrscddmF98/OtJ7QdQ2mk9ikDemhyE3b/c4g0QrNHad3OFyqtyul6nef/qkh0T4V5QllHVdFMbA04Fr71P4jegWuFFu+gRKYCfBC/0xxBTPqdjjjhEYuBKuXjB1jAGJreGrrgo2aUryVFIUToOGf9O1wnFxiMR/7gUYQdLO6Eeis8mTrzPjn3j6yCOyFMsDZzQQEryAXk/Mxc4Fm6JoL44OXT+nYPvgh8riyIXWLgYqFnK4fyfkuS0poIwjlPKu66SKw55NsfJ35fgfBp9cZNTebHbkX9f7lSSjwAGsREykvuXT7QjrwANDrj6I+gXujYbVtW8tXW3Uc/pur6j66prW0VRjtC1vqi/ag7qdDrjrb8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C8129452E80D97E05307991F0A5D84</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C8129452E80D97E05307991F0A5D84</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C814E6A35404BFE05305991F0A9CD8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C814E6A35404BFE05305991F0A9CD8</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_062711</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"07C814E6A37E04BFE05305991F0A9CD8:BDDAA794"</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5cc09d72-cca4-4fbf-8b37-ddc11ccccc0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca20ddeb-ee1d-4946-b59f-de46f111d75f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00008_Account and User Create with NZ 111_UserGet Full user 107_SUCCESS_P0" searchProperties="true" id="20bedc49-8ec1-4d35-b2a8-7c6fd9125774"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="7f1875d8-48e4-45d0-95b7-6be9882f371e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="b5afa81d-597c-46ef-b380-f28d8643c00f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","NZ");
tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="9fb053fe-9ba4-44df-992d-98c80c9e2d1d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="37276160-10ea-47ea-90a6-b559484feb48"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="00b20cef-a2df-4b7e-b483-3278c4de074f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZUus4EP2VlHmkHC+xs7hIqrIAYy4BJgvbCyXktiOwpWDJWfj6kZzEJCEwmXlydbvVfXrRUZ9xlMS21+YcUkEYLS2SmHIv1za1LKUeQ5xwj6IEuCewN2z3rz27bHpoc0Qr+b2m9mLZgR3Uq1UdVV5D3XHtht6oVrEehg23btarNbsC0pTzDHzKBaKiqdmm5eiWpVvOyDQ9t+rZjbJbd5+10j2kXPqWJmVTW4Na8KY2EWLqGcZ8Pi/PK2WWRoZtmpbx2L8e4gkkSGudrTLKA6WttT0uB4AhjnEZs8Q4M3ZszgLuDUlEkchSWMcKfoplGmbDkDYBJ9GJVpyFwKchy8UuoowSjGLyiVR9+iAmLCi144ilREySH5OwTOVYhwXWseXQE83YhXakox2EKUc6nyBr7WsAIaRAMZTGA7+pnRzXtfzoKEWUhyxN+K743/AAnUHMphDofJPWGtrxDg9UqnUG2PMpjjNOZnCjhnWKMPB1NwEf76p0l0JIFteEywFdcIXO2Ia3J66q0SMRcPF/GrTVnJWTexRn0Kpa5zd+Jrr06d012yy+bmSjycN4uXDbzRzAtnGuKFq7EveGshii1YnLv90Rfag+LKdv/di2au8P/WV7sbjCpLv4RLPHB/81ehyZ1+arVYG7WtsdgDW4qV71K/Hp6bP1TO75W3SRLMUlpuNOwixExKXjZ3+N/e6T06lMjIRwmtjd+Ttn98I1T1k24Y15/Yp8vr9VxtHHeVR5G9/yN/tqNAlf4Wn5Jxo/SXXwZ1brWKMxucjgyrm49JtFOlv4d3WbOz/MXt8Ai42oxsDvlS5kl5D4ncyUhgR6mJt6U0U+XAAVWkudUtzhZZLuSODJHq5ks9atW855tV2pO6bTuTg33YrpNhrWhdludHv1DcmsUOxB7DIaEhVLUe5qbH4HiBOPAw0g1Wcsk0zHtV889pBAJZ8O5CVglMOISXqOUGp+1kQoHLNi1UmSNqw6xeFnrJVumLilt2k7FJDucnJlh5MHgMmUgCJuNddcDjYXshYfaJaJ2CrPUJlCJqk9VSzr2U7dNThJpjEopEbCgiyG8nQyzStj8NXX1hHmuXZwPspv24957f/blEDaBEQZcJVLB2Qb4cDjYm0S+Tnh6nbCG/ftLCDqYsl6ipTgFZLdX19jouajmBGZ0Ut3+GJtcBfmRx//ftL4BZSxX48iUDAjW2E3T7d8BCRttDbd/EDlj3I2m2V5/2qKHlPpXnKW5RqmbQwBZ5LYliP2DtQovBhHvSIF8L3ghX4XYiYmdCiQgEQOXCkXj1gbhsDV2uDLm7I4difZCSlLJ2AhDum6sVx5FOJftyLsYWUn1XfyM2dp8NWxA7624sg85dYgCI2UpF6Q5Q9zgZl0SyT3sXTb+SEHh4LvKosiF1iEHKjXTMDPf0qK1JoawphlVPg9LVdsE22OUyyn4H0ZfXOTc3mx3JF/3+50ko8AlouktM/9qzfaU1eARltkvQ76ja/tqpyGdqPW69a3+dpx7E5RlB10rW/q75qtOu3PeOsf</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C8126866A97DC8E05305991F0A442B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C8126866A97DC8E05305991F0A442B</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C814E6A38404BFE05305991F0A9CD8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C814E6A38404BFE05305991F0A9CD8</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_062726</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"07C814E6A3B304BFE05305991F0A9CD8:3CBE0C8F"</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5cc09d72-cca4-4fbf-8b37-ddc11ccccc0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca20ddeb-ee1d-4946-b59f-de46f111d75f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00009_Account and User Create with IE 111_UserGet Full user 107_SUCCESS_P0" searchProperties="true" id="a08b7660-4b5c-4005-8e98-7115d99cc1de"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="879b0b32-577a-4162-8cf3-68f1c8fbc1f0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="489f0c06-f2e5-4504-a702-4927ae62322c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","IE");
tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="7496afeb-2336-4cda-a56f-5fb3a8d3eb0c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="2dc81b78-c181-4c6c-922e-50269587f44a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="d372cf18-39eb-4a9b-a09f-ae940428250c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdc6JKEP0rFnlMIaCoSEWrjJqsm8S4oia7L6lxaHVcHJQZEP31dwaVoNFc732iuunpPv0xZ/qOoYVXsBuMQcCJT3PxwqPMTrQ1JQyo7SNGmE3RApjNse00Xp7tQl630eGIkuu0aspHAZeRVcKg6giPVRMsSx1P9IlaQnq5gFy9UjWwMGUshA5lHFFeUwq6YaqGoRrmQNftUtk2zXypav5RciMImPAtTPK6sgcVs5oy43xpa9p6vc6vi3k/mGoFXTe095dnB89ggZT63S6jJFBQ39vjvAsYPA/nsb/Q7rQjmzuX2Q6ZUsTDAPax3EuxdE2vasLGZWR6o6Rnwe3QiZ+ITUR9SjDyyBbJ+rwAn/luruFN/YDw2eJiEoYuHasQYxUbJr1RtGNoVzo6QhgwpLIZMva++jCBACiG3LDfqSk313UtOToIEGUTP1iwY/G/4QEagecvwVXZIa09tOsdnqlU/Q6w3aHYCxmJoCuHdYkwsH03AV/vKtcLYELiZ8LEgMZMotOy8E7EXTVaZAqM/58GZZqzczJCXgh1dzVy6fNaj4ZT62kyiF6D+e3o9VZr9Ia1BEDWOFGkrd2JJ0OZDtHuxFN5g41Ra45bw8H2xRxt8E/+09tY3V6vvXl8/Pn03hy2Zk/Rj+1mhe4r78Nbr+uOn+Jedfg43G766Ffcmo8aThxP/SJ6LI82fSv2A3O7eV391hwSOfqwuUKrQd8dTVvh6I/vuO9vb9v54K0ZlfuDyWz2POz8CFed+1/d2+r93DK0YL6YVX/Pu6PqeBxiXh2si39NzmppOhn8x7rDnXfC8RwwP4hyDDqt3IPoEuLfk5nUEFedJKb2UpIP40C5UpenJHfYoaA74tqihztZrzQto1Apt6vWfaXVbLT1UlEvVavGg94Q/4wDyexQnEBs+nRCZCxJubux+R4gXtgMqAuBGvmhYDqmfOOxhTjKdWhfXAKfMhj4gp4DD+ZVr2CureXYmGxiYzvdmqUxnym5rs9f6WvQmHAIjjm5eMTJfcBkSUASt5xrJgabcVGLFYpC7hn5COUphILaA8mydsG0Shoji6UHEqm28N3Qg/xytkwqo7Hdt6AizBJtvz1IbtvFvE7/HUogbFwiDZjM5R5EG+HM41I8JHI54XI24YP7RugSebFEPXlA8A7J8a/PMZHzkc6IyOij6Xyks5CaX33860ntG1DaaT3SQG5EMmEPT7d4BARt1A/dXKH8Kh9GUZj0ryLpMRDuBWcZJU0vaA7gUBDbZuD/BaqlXrSrXpEU+EnwVH8MMeQz6nDEYSEGLpeIV6wNDjC5NnTETYmv3UmOQorScYj5OV3TEyuPRPztVoRtLO2Euic+az9wPzt2xlcmjshTbA2c0KmU5AuyuTAX2BduieA+P8g6P+fgXPBjZVrkFAsXAzUOOVz+k5OkVlMQxn5IeaelJIos0SY4+WYJ9qfRFzcJl6fLHfn37U4lyQhgECshI4l/+Ubb8grQaYas90G/8LXZLhZN09LNtpXla/PBaKZFOUJX/6L+qsnU6XTG6/8A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C814E3344804E8E05305991F0A4F1C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C814E3344804E8E05305991F0A4F1C</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C81276E98B7DCAE05305991F0A07C1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C81276E98B7DCAE05305991F0A07C1</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_062741</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"07C812774CA77DC6E05305991F0AA8B7:AEACF7C1"</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>e111b425-cc6c-4fb8-a01a-0f5e1af94b8f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>04b66d6c-e8f3-4948-af58-b918b73c97ee</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00010_Account and User Create with AU 111_UserGet Full user 107_SUCCESS_P0" searchProperties="true" id="b4fa089d-90d2-4963-9eb8-bbdc6a74f03c"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="e476e66e-5471-434b-8cb7-b3c856f8840c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="a16dc1e5-ffd3-475e-9df5-2e103da6d132"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AU");
tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="b9eb2c86-d7f2-4dbf-bda6-2a6d0adb383e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="d878dff6-d14a-41a9-959f-8823f9fdf379"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="39d6eb34-8447-4a25-8fa7-a4d7667a9152"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VyvOYMl6wWVyBKsAwAwlJBrIw8zIl5DYIbBkkGch8/ZUMOECWy71Prm63uk8vOuprjuLI9pqcAxMkoYVtHFHuZdq6ljLqJYgT7lEUA/cE9kbNwa1nF00PHY5ohZ5f1/5Y5Ylp1kJXD52arTuTAPRJyXX1kl1zbLsc4hoqSVPOU+hRLhAVdc02LUe3LN1yHk3Tc8ueWy1WbOe3VngGxqVvaVI0tT2oLa9rMyGWnmFsNpviplRM2NSwTdMyxoPbEZ5BjLTG9S6jLBBr7O1xMQAMUYSLOImNa+PE5jrg3ohMKRIpg32s4LNYpmHWDGkTcDL9puVnIejRMMnENqIJJRhF5C9S9RmAmCVBoRlNE0bELP40CctUjnXYYh1bDv2mGafQLnR0gpBxpPMZsva+hhACA4qh8DTs1bVvl3UtO/rIEOVhwmJ+Kv43PEDXECVLCHR+SGsP7XKHH1SqcQ3Y61EcpZys4U4N6xJh4PtuAr7cVeGBQUi2t4TLAd1yhc44hncm7qrhkylw8X8adNScnZNnFKXQmJd74/vv66fxYLEkA/Y8HTqkxb7/8sfVegbg2DhT5K3diWdDmQ/R7kRc6jxuKqsIu53Ivw8r/Nd8xFx/8wN3+0O0MRYT0TR/p0H79YmbzXal319O6JjU5r37aAWL1mDm/LqZzvu3z2srfhmTh277inc3eNyfDCpdGv/oP6yC6s+HTeRfrUaVdHEb2pyvn2jnpkb8xaBm3XVeYjvkpdYsvHqa42dKvvd/z1mrXN6+lMo/HxwalcIhu3mq5+kc4T/VHe78KJ3MAYuDqMag5xe6sktIfE1mSkMCPcxMvaUiHy6ACq2hTinu8FJJdyTwZA93sllpVy2nU3WtVst0Kt2O6ZZMt1azumbTbvm1A8nsUJxBbCc0JCqWotzd2HwNEMceBxoA09dJKpmOa1949JFAhR4dykuQUA6PiaJnGq/d1FkuyCrB8GonU5ksTle2VrhLxD29Z81QADvl5NIJJw8BkyUBRdxqrrkcbC5kLVZonYrIKq5RkUIqqZ0plvVsp+oanMTLCBRSI06CNILicrbMKmPw3dfWEeaZdth5zG7bp3md/zuUQNoERBlwlUsLZGbwwePiHBL5POHyccIH9800IOpiyXoKRvAOyemvtzFR85HPiMzoT3v0xzrgzs0vPv7+pPEFKOO8HnmgYE2Owh6ebvkISNpoHLq5QsVVMV2v06x/FUWPTLqXnGW5hmkbI8CpJLbXx2QB1Mi9GBe9Ijnws+C5/hRiKmZ0JJCAWA5cIRMvWBtGwNXa0JM3ZXvpTnISUpZOwFZ8pGtHcuVRiL/cirCHlZ1UP8jPJmHBW8c+8HUUR+YptwZB6FRJ6gV5/WQucCLdEsl9CTt2/pGDj4KfKvMi51iEHKhJKuDzPwVFanUNYZykVPR8LVMcE22GU7wuwXszeucm4/J8uSP/vt3pJBsBDHIl5CTzr95oT10BOj0i633Qd3xtl6vlsl+u+O3qMV87jt3Ki3KCrvFO/V5zVKfzGW/8Aw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C8126866D67DC8E05305991F0A442B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C8126866D67DC8E05305991F0A442B</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C814E851BB047FE05305991F0A2BD9</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C814E851BB047FE05305991F0A2BD9</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_062755</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"07C814E851EB047FE05305991F0A2BD9:126A0D7"</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>e584b8a7-a183-47b3-ac26-c5ce759297af</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d79c4d5f-8149-4ee2-8779-a5f784228cfd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00011_Account and User Create with CA 111_UserGet Full user 107_SUCCESS_P0" searchProperties="true" id="a32e7758-c867-41d4-bd4c-78c767b789f3"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="04f16de8-69b4-4947-87d1-5efc49b0d5d9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="4f600204-e75c-475b-8ccf-2142374dfa24"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CA");
tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="50f5434d-e40a-4a61-9504-587799aaa825"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="35c3247e-3109-4efb-b973-72981594d19f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="432a6cbd-58d7-4038-875e-2efeafbbb4e1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdc9o6EP0rjPOYMbKMAdsTmCE2aUhJQuOUpHnpqLIAJbYMkmxIf/2VDDhAPi73Pnm0Xu2e3T060plAaWL7PSEIlzRjtVWaMOGX1o6Rc+ZnSFDhM5QS4UvsR73roW/XLR9ttxi1QdgxfjvxpAVRo2F66mM60EWm58auCZ3JH89tttoOcZWrEDkZMCERkx3DtqBjQqh87i3Lb7Z92Kg3neaTURsTLlRs5VK3jA2olegYMynnPgDL5bK+bNQzPgW2ZUHweD2M8IykyOierSsqE/Huxh/XY4JJkuA6zlJwBvZ8zmLhR3TKkMw52eSKP8tlAcsDyicWdHpiVHtJPGCTrFwGiGWMYpTQv0j355rIWRbXesk041TO0k+LgJYObJIVNjF02IkB9qEdGWgPIRfIFDMEN7HuyIRwwjCp/bwbdIyT46ZWbr3niIlJxlOxv/xveAgrSJLNSWyKbVkbaMcH/KBT3TOC/QHDSS5oQW40WecIE7GZJsHHh6qNOJnQ1ZAKRdCV0OjALryD5bobIZ0SIf/PgHaGsw4yRklOuoB4OIijee6OXsEVSL9Ja8xy78H+NeiUAHadS0M12vXygJQVidY7gqUYO/bD8BELOH7mPQmg3T8Nf/abg8UyGgU399Hw++R6/PKzH4wkuPzRK5ajq9Nz9n3+sDofeHmIXRw2vnl9MAvhwhk9pQ/W7Apak+BHFDxOC+gOwcsYhs8XV1fnz8+Nu0s6HZ1ms/HFY/+pPeFkaqNfreLSk03nx+VTK0mv/p72ov64gMFtcrtCQfh6CrnD3U5Vzg7+fdv2zEf5n2eC5XapaTAIaxdqSkh+LWbaQmNzUrr6cy0+QhImja7epbXDz5Xc0dhXM1yvrXbgQrvd6nuB1w6DXt9qNqym58ELq6f+wa3IrFEcQAwyNqE6l5bcNW2+BohTXxAWE24WWa6UThhfRAyRRLUBu1OHIGOC3GdKnqGdssR12cwVCw4dVCylxM2YL7BRu8nkLbvlvYkkfF+UG3uifEcwnVOilVsTWyhmC6masUBFLhNYL1CdkVxpO9cy69uO2wSCpvOEaKggzeI8IfX5bF62Boj11zYRFqX1rn9fHrdPCzv8t+2B8ompdhC6lnOi5kg+uF2sbSGfF9zaLXgbvpfHVJ8s1VDJKV4j2f/1xhNNkIokqqLfQfS7IkPlfvT29zvBF6DAYT+qRHFBd9Ju7251Cyjd6G6nuUD1RT0virycX1vrI1fhlWjBJrBsEBGcK2V7vc9eCANVFHDUNVIBP0he2fch5nLGIokkSRXhauXyiHdDRIR+NwzUUVkd+yjZS6laJ8lKfmQLEvXm0Yi/fBZhH2s/ZR6pzzLj8dvEPoi1k0fVqZ4NkrKpXukr5PUTXuBMhaVK/DK+G/yjAB8l3zdWTa6wSEWoP7kkn/+paVXrGAjjLGdyEBqlYVdpS5zydU78N6d3YUoxr1539N+fdyYtKYCJehMKWsbXl7SvjwCb7qj1Juk7wXb6rV6j37ac84tdwfaC8I2fe+i678zvLTt9OuR49x8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C814E6A3E704BFE05305991F0A9CD8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C814E6A3E704BFE05305991F0A9CD8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C81276E9C97DCAE05305991F0A07C1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C81276E9C97DCAE05305991F0A07C1</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_062810</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"07C814E3348504E8E05305991F0A4F1C:7BFD1200"</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9ecabda9-234b-4147-ad4c-6c70cc6a01a6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3fea29b-c9db-4c9d-9b6c-50a45c33b666</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00012_Account and User Create with GB 111_UserGet Full user 107_SUCCESS_P0" searchProperties="true" id="5568e04b-f152-4b17-bee8-208127e701f3"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="8cdb5e0b-a95b-4289-b2f0-62345cd18171"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="5059eb59-d972-406d-967a-8be6c7ad6aa6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","GB");
tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="0954c6f8-a69b-4f92-86ce-cc1635a47a27"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="f3241a3e-6b81-4be4-9dbe-89e5b2071aa2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="b33b1d3b-7ce9-4fed-923a-22ec29ab2914"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbJcsI4EP0VyjmmjOUNsCtQxRISyA7ZLylFFqDElsCSWPL1IxlwgJAMMydXt1vdrxc99QmHSeyEdc5xKgijhXkSUx5m2qohUxoyyAkPKUwwDwUK+/Wry9ApghCujxiFTqtqvDm2Y2PPrZiRWxqYnudGZgW4gYlAuQycyA2iwFWmnEvcoVxAKqqGA2zPtG3T9u4BCP1y6JSL5ZLzahQeccqVb2VSBMYK1JxXjZEQ49CyZrNZceYWWTq0HABs6/nqso9GOIFG7WSZURYora3sUTHCCMcxKiKWWCfWls1JxMM+GVIoZIpXsaLfYgELBJayiTgZHhn5WRx16IBlYhNSRgmCMfmCuj5XWIxYVKjHQ5YSMUp+TcIG2rGJ58hEtkePDGsb2oGOthCmHJp8BO2Vrx4e4BRThAsPvU7VODqsa9nR+xRSPmBpwrfF/4YH0ymO2RhHJl+ntYJ2uMM9laqdYBR2KIolJ1N8rYd1DBHmq25idLirwm2KB2R+Sbga0DnX6KxNeDvishotMsRc/J8GbTRn6eQRxhLXbKsB6yMRPF1En40YSC8tHZ8PHr/iO1DNAGwaZ4q8tUtxZyjzIVqeGN/I6Wf8chkfJ0nT5/S8N7nuV55954Yt/IrbQFevvVPQW5x3JS1dRsIaso9H8BJ0e++T+evsI5WTWevs1pokwRNyO1cvsluOHy7PRgOnPYq+SLdMXsCV/3hDexdf7gMuBVJ8Nvyz+f3dSCYtK/WOn+7sRhkP4xlsHVsX3c+my+R5c/7Q+vgsf713jxfBc3f8zDrVPJ0N/Nu69Z3vy/cPjMRa1GPQaRXaqktQ/E1mWkMic5CZhmNNPlxgKoyaPqW5I5SK7kgUqh4uZVBuVmzv1HW9Sgt4p5VT4LvADwK7Depe226uSWaJYgdik9EB0bE05S7H5m+AKAk5phFOzSmTium48YfHFhSw0KE9dQkY5fieKXq257PEnrOFm/gM2ADO5EQG5MN3P4zCNRM39CatDwROt0nZ3SLlHkZkTLBmbj3YXE02F6oYEziVIraLU1ikWCpuTzXNho5X8S1OknGMNVQrYZGMcXE8Gmelsfjy65gQ8UzbO73Prtuvie3+W9dA2UREG3CdSwOrPuI9r4u9TuT3hEubCa/d12VE9M1SBRUpQUsk27++50QPSD4kKqO3Zv/NXuPOzQ8+/vOk9Qcoa7ceeaBoSjbCrt9u9Qoo3qituzmBxUlRTqcy619Z82Oq3CvSsn0LOFYfI6mYbXHPPjG1ci/WQc9IDnwneK7fhijFiPYFFDhRA1fIxAP2hj7mem/oqKsyP3Qp2QqpSifwXOzTNWO182jEf65FKETaTqlv1WfG0ui7Y3t8bcRReaq1QRA61JJ+Qha/zAViyi1R5MfSTef7HOwLvq3Mi5xjEWqg3qXAv/8paFarGhAhJqnotIxMscm0GU6xGOPw2+iHm4zM8+2O/Pt6Z5JsBBBWOyEnmX/9SIf6CtDhBluvgu4h7IpvtxvAK7c3CdtptIK8KFvoaj/UPzUbddqd8do/</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C814E851FB047FE05305991F0A2BD9</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C814E851FB047FE05305991F0A2BD9</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C814E3348D04E8E05305991F0A4F1C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C814E3348D04E8E05305991F0A4F1C</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_062824</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"07C814E6A42A04BFE05305991F0A9CD8:B1365BA7"</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00013_Account and User Create with US 111_UserGet Full user 107_SUCCESS_P0" searchProperties="true" id="2060bc00-039a-4506-a447-db8359232277"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="ff185264-8422-4262-a5ed-4d0fc2a8acae"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="a77a0e08-5b4b-4cc8-b02e-e26be4968f1b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","US");
tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="63aa9d43-c7ad-4eb7-b2c0-35528b762798"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="2f93f5fc-9c77-41a0-9db2-dc3c5830b207"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="06e9917b-1118-401f-8854-16ebeec02a22"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZXzB3FyBKm5hSULCAElIXlJCbkCJLRFLxpCvH8mAAwRYdp9c3W51n77oqK84CnzbrXEOoSCMZpaBT7mbaCtaFFKXIU64S1EA3BXYHdS6d66dNV20PaJlOs2K9lYu4IkHDuiF4niiOx4q6KWy7ek5hAqeY6MSBiRNOY+gQ7lAVFQ027Qc3bJ0yxmappsvuo6TtUznVcs8Qcilb2mSNbUNqCWvaDMh5q5hxHGcjXNZFk4N2zQtY9S9G+AZBEirXq0zSgKF1Y09znqAwfdxFrPAuDL2bK487g7IlCIRhbCJ5Z2KZRpm2ZA2HifTX1p6FrwOnbBEbCDKKMHIJ19I1acLYsa8TM2fspCIWXAyCctUjnVYYh1bDv2lGfvQLnS0hzDkSOczZG189WECIVAMmcd+p6L9uqxrydFhiCifsDDg++J/wwN0AT6bg6fzbVobaJc7PFKp6hVgt0OxH3GygHs1rHOEgW+6CfhyV5leCBOyvCNcDuiSK3TGLrwDcV2NJpkCF/+nQTvNWTt5Qn4E1XHnn0njod57mTVqZvkejYIyHT1f160/rUoCYNc4UaStXYsHQ5kO0frESHyhZcMoRJZwZsaq9vTavDXIGPP+662R68YvU+vj/sse34a/71b1VrMxfGGr0f17/mXwcocHnVG/WDDtUatw3Tfsth//MZu308bNiDUtHDxQFrfb76jJ0Ed36VhdZhfC1kPtK56NSwP/9TGIo1Xcuqm3e/Xu8/zZeXB697h7026XvCgqzEa/ec8mrUfaK9InXknT2cG/r9ve+UE0fgcstqIag04zcy27hMR5MlMa4umTxNSdK/LhAqjQquqU4g43knRHPFf2cC2bxUbJclqlvJ2zTad43TLzOTNfLlvXZs2uN8tbklmjOIDYYHRCVCxFueuxOQ8QBy4H6kGoL1gkmY5rZzw2kUCZDu3LS8AohyGT9GytLJvZi1XZZo5lxZ9LiidLe2zHtpa5Z+KBPoS1iYBwn5Rze6TcB0zmBBRzq8HmcrK5kMX4RItI+FZ2gbIUIsntoaJZ13ZKeYOTYO6DgmoEzIt8yM5n86Q0Bl9/bR1hnmj7rWFy3U4mdvhvWwNp4xFlwFUudZB9hCOvS26byOmEC7sJb93XIo+omyULKkKC10j2f33PiRqQdEhkRm+NwZu1xZ2aX3z850njDCjjsB5pIG9BdsJu3275CkjeqG67+Ymyn9losYiS/hUVP4bSvSQtK2+YtjEAHElmWw3ZB1Aj9WJc9IykwA+Cp/p9iJGY0YFAAgI5cJlEvGBvGABXe0NHXpXlpUvJXkhZOgFLcUzX8OXOoxCfXYuwi5WdVPfkJ2ah992xI7524sg85dogCJ0qST0hqxNzgZl0SyT5sXDX+TEHx4LvK9Mip1iEHKhxJOD0n4xitYqGMGYRFZ2mlih2mTbBKVZzcL+NfrhJyDzd7si/r3c6SUYAg9wJOUn8q0faVVeATnfYehP0OGHbhXOEvY+u+kP9U7NTp8MZr/4F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C814E85226047FE05305991F0A2BD9</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C814E85226047FE05305991F0A2BD9</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C814E85232047FE05305991F0A2BD9</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C814E85232047FE05305991F0A2BD9</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_062840</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"07C814E334D004E8E05305991F0A4F1C:49504C8F"</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9b4b7964-a482-4ebf-97ea-033a73f8ebe5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cedacd36-a11e-41fd-b7d6-197132c9a14c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00014_Account and User Create with AT 107_UserGet Full user 111_SUCCESS_P0" searchProperties="true" id="408b35bc-7154-4f04-bcb5-308c97d40574"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="318ae848-2a94-4eb4-a9e5-8b9719a8d2bf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="bfd7e1f8-6f89-441d-a8fc-74453464a909"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AT");
tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="ddd74596-bade-446f-b654-1cfd6eb3a9cb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="cf034ab0-f67d-4886-b70f-dbd0028bee21"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="48b261e4-4850-4571-960c-fedbdc588e8e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtc6o6EP4rDufjHSRYLchUZ2jVHnr6qtae0y+dGBZNC4klgdL++pOgUrUv13s/Mbtsdp99yZM9EjiJG54vBKSSclYrkpgJr9R2jCxlHseCCo/hBIQniTfyL869Rh15eH3EqAW9jvEA7Var6SLHdJvTltm0D8CcRsg1iUsc0myHURsOlakQGQRMSMxkx2ggu2natmk3xwh5LddDqN5y0L1Rm0AqlG9lUkfGClQhOsZcyoVnWS8vL/WXgzpPZ1YDIdv6fXE+InNIsNE9WmZUBkq7K3tSD4FAHJM64Yl1ZG3ZHIXCG9EZwzJLYRUr/CoWslDbUjahoLMfRnUWwoBFvBRPMOOMEhzTN6zrcwFyzsOaH894SuU8+TIJG2nHJhTEJHaT/TCsbWh7OtpCmApsijm2V76GEEEKjEDtdhh0jB/7da08Ok4xExFPE7Et/jc8wHKI+QJCU6zTWkHb3+EnleoeAfECRuJM0Bwu9bAuMAGx6iaQ/V3VrlOIaHFOhRrQQmh01ia8HXFZjR6dgZD/p0EbzVk6meA4g+7h3dl1nh7zhOYkcm1fDH3njNwQZgedEsCmcamoWrsUd4ayGqLlCfEPwcFkPpz2e7kz+Hnu/zo7D+4H8IfLpJA2UtW79vlM3ETzxT0U9+iNg3tILn9ZxRMMxm/8voB+aufkj/V4VzjPQxtSNJxD34KboXBe+w6eTK5eT4NRdJrLwW3/4jBZWD8Ri96Cu4m4PmhkyL/wr04TzpKJJZxe0hpfnfZlZE0frwk6vXHP4fTs6Xdy26nS2cC/rVvf+VE2fQQi16Ieg6BXG6guYfk9mWkNDc2oNPUWmnyEBCaNrj6lucPLFN3R0FM9XMrIOXHtvjtoNY+Pbb/v9lHrADnttj1AfvPk2FmTzBLFDsQTziKqY2nKXY7N9wBJ4glgIaRmzjPFdML4xmMPS1wL2FBdAs4EjLmiZxvR9tQtEqdBeMOey0Whbvzb49Pbq1G75PKKXaV+JCHdJuWDLVIeAqELCpq59WALNdlCqmI84zyTsV3PcZ1Bprg91TTrNZpuyxI0WcSgoVoJD7MY6ov5oiyNJZbfhomJKLXD/ri8bl8mtvtvXQNlE1JtIHQux6D6CB9eF8drrRP5OuHDzYTX7v0spPpmqYLKlJIlku1f73OiB6QaEpXRw8nowV7jrsz3Pv7xpPUNKGu3HlWgMKcbYddvt3oFFG901918xvXnepbnWdk/R/NjqtxbiiZtawQkU7T2OuZPwKzKhbXXG1Kh3olc6bfxZXLORhJLSNS01Upxj6VhBEIvDYG6J8W+G8lWSFU3CYX8THcSq4VHI/52JyIe0XZKfa0+LzwN39v1ia+NOCpPtTNIymZa0u/H6xdDQbhySxXz8XTT+WcOPgu+rayKXGGRapqmmYSv/9Q0pXUMTAjPmAx6RqnYpNkSp3xdgPdu9MFNyeTVakf/fbczaTkCBNRCKGjpX7/Qnp5/Ntug6lXQz9naH3zH1tvouh/UHzUbddqd8e5f</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C81E8F54AF1AE8E05307991F0A4CB7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C81E8F54AF1AE8E05307991F0A4CB7</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C81E8F54BB1AE8E05307991F0A4CB7</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C81E8F54BB1AE8E05307991F0A4CB7</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_062856</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07C81F1EDC6D1783E05305991F0A7677:A8B42C8F"</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00015_Account and User Create with DE 107_UserGet Full user 111_SUCCESS_P0" searchProperties="true" id="1f954b61-82fc-4e33-8a13-ee1b49870bea"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="179811b7-ce5f-4138-9e30-750318b99e6a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="87e2cb5e-3356-46fc-aceb-c6e96e40ab68"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","DE");
tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="5311db5c-828c-4dec-acd0-ce1b90fe580d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="bc48530e-a923-41be-8569-1241224d19b7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="46b30d98-addf-4398-afcf-7595cea3cf53"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtc6o6EP4rDv14BgFfqjLVGUWdcsaqVft2vnRiEjWnEDAJSPvrb4JKxarXez8xu2x2n33Jk73jwPdKdptzzAQJaCHxPcrtVNvUIkbtAHDCbQp8zG0B7Wn7YWCXiqYN9ke0gtttau8LUC2VrduGbs5RXa+Ack2fWxDp8zpCjTIu4dtSXZpyHmGXcgGoaGol06rolqVblZlp2tW6bd0WyyXrj1Z4xoxL39KkaGo7UAlvaishQtswNptNcVMuBmxplEzTMl4fBlO4wj7QWnfbjNJArLWzh0WEIfY8WISBb9wZOZs7xO0pWVIgIoZ3sdC5WKZhNgxpgzhZ3mjZWYxcughS0QE0oAQCj3wBVZ8HLFYBKrS9ZcCIWPlnk7BM5VjHCdShVaE3mpGHdqWjHELGgc5XwNr5muAFZphCXHiauE3t5rqupUdnDFC+CJjP8+J/w4NpjL0gxEjn+7R20K53eKJSrTsMbZdCL+IkxkM1rCGAmO+6ieH1rgpjhhckGRAuBzThCp1xCO9I3FajS5aYi//ToIPmbJ08Ay/CrXrPcZMo5ozF3Vn0h/a/eptHgegSuc0UwKFxqshauxWPhjIbou2JITVmr8+rVXX8FnbEJHllw8XQh3Fl/XvprGQx5tX7F8YfRx8o9B9HjQFZr3s+8MwJv39pLxfi/qnMfqHq3KnUPmpBGHfC+nKAvp6WL9ZT9b77W/Ri9nf0se6/DGht+FAZ1wKXbH51wjfi9nsfg77zNhad55H3Uo37D+NFOH4KnC+HPs5Z1O8u4qn1yZLXNyuBzSydA/x53f7OT6P5XwzFXlRj4HYLfdklIC6TmdIQpC9SUztU5MMFpkJrqVOKO+xI0h1BtuzhVjZrTt3q1fvVSr9mtXv1nlktm7VGw+qb7YrTqe1JZoviCKIT0AVRsRTlbsfmMkDo2xxThJkeB5FkOq5d8NgFAhRcOpGXIKAczwJJz7G5Ma2kXKnHUVVecLi+ZSX0BTeeVhgGYkRHrL0QmOU5uZzj5AmGJCRYEbeaay4HmwtZizWII+FZxRgUKY4ktTPFsnapUq8anPihhxVSww9Q5OFiuArTyhh8+y3pAPJUO+nN0tt2Nq/jf/sSSBtElAFXuXSwbCM+8biY+0TOJ3x7mPDefTtCRF0sWU/BCNwiyf/6HhM1H9mMyIzenem7tcedmV99/OdJ4wIo47geWSAUk4Ow+6dbPgKSNlr7bq5BcV2M4jhK+1dT9Mike0OypGVMMYwkq33Ogg9MjcyFcdUTkqE+ipzp8/gisaJTAQT25bQVUvGKnWGKudoZXHlNkmsXklxIWTeBE3FK53hy31GIL65E0IbKTqrH8rMJGPpu1wlfB3FknnJlEIQulaSej88zQwED6ZZI4gvYofNTDk4FzyuzImdYhJymeSTw+T8FxWhNDUAYRFS4XS1VHLJsilN8htj+NvrhJiXybLMj/77a6SQdAYjlPshJ6l890Laaf7o8YOpd0NNk3etcIus8utYP9U/NQZ2OZ7z1Dw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C81E8F54EB1AE8E05307991F0A4CB7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C81E8F54EB1AE8E05307991F0A4CB7</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C81E8F54F71AE8E05307991F0A4CB7</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C81E8F54F71AE8E05307991F0A4CB7</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_062912</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07C81E8F551F1AE8E05307991F0A4CB7:64CE16E8"</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00016_Account and User Create with CH 107_UserGet Full user 111_SUCCESS_P0" searchProperties="true" id="7a55e3ad-ac7c-41e2-9d90-033eddc00c49"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="a8173662-65dc-4476-a07f-e05a64bbc275"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="db710d1b-7ceb-46a7-8650-bb4a41777405"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CH");
tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="2da8097b-6686-4939-8f27-fe9039176bc9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="12757e1f-4b12-4b4a-9700-2f5ccd56e73b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="354396b7-f154-47ec-a13b-24e00d5faa41"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VynmcMl4wmytQxZYbkpDkAklIXlJCboMGIxlLNnC/fiQDDhDIMPPk6nar+/Sio77maB7YboNziARhNLeaB5S7qbamxRF1GeKEuxTNgbsCu4NG78G186aLdke0XLdd0z5hXK7igmPqvln2dKc0xjoyTdDReOx7PsLgeAVpynkMXcoFoqKm2abl6JalW87QNN1ixS1YeadU+NByrxBx6Vua5E1tC2rFa9pUiNA1jOVymV8W8iyaGLZpWsao9zDAU5gjrX69ySgNFNW39jjvAYYgwHnM5sa1cWBz7XF3QCYUiTiCbSzvXCzTMKuGtPE4mVxp2VnwutRnqdhClFGCUUD+IFWfHogp83KNYMIiIqbzs0lYpnKswwrr2HLolWYcQrvQ0QHCiCOdT5G19dUHHyKgGHIv/W5Nu7qsa+nRYYQo91k054fif8MDNIGAheDpfJfWFtrlDk9Uqn4N2O1SHMScJPCohjWU4Pm2m4Avd5V7jsAnqwfC5YCuuEJn7MM7EjfVaJMJcPF/GrTXnI2TVxTEUHd6FT/BYzF+xb5Rmb7fjwNWcZze3eyllgLYN04VWWs34tFQZkO0OcFXt4ZRGjbWwboBzlPFLz6+v1V/r6zusBxbzzaalYS16PXuVoi9thujxL5fjcK30dtH533ULf+aVbyk27H9qDRDf5nk7vbWHzQb406RrYrD5KOEhq+/uTm6ac2oHVVnw/4CPVrl9vT2jXmlZMCX66Yd2usWenkvrWP7ifVacFOBXumN/AqbEJpsNCR/JvcV472WpbOH/1C3u/ODePw3YLET1Rh027kb2SUkfiYzpSGe7qembqjIhwugQqurU4o73FjSHfFc2cONbJZbFatTNZutlmM1Os2OWSyY5WrVujEbzaJT3pHMBsURxBajPlGxFOVuxuZngHjucqAeRHrCYsl0XPvBYxsJlOvSvrwEjHIYMknPFqV0nRTj5WQZ28nCCuKlP6bLqKzlHpl4ok9RwxcQHXJy4YCT+4BJSEARt5prLgebC1mLBUpiEVj5BOUpxJLaI8Wyru1UigYn8zAAhdSYMy8OIB9Ow7QyBt98bR1hnmr7nWF6287mdfxvVwJp4xFlwFUuTZBthBOPi71L5HzCpf2Ed+4bsUfUxZL1FBHBGySHv77GRM1HNiMyo8/W4NPa4c7MLz7+/aTxAyjjuB5ZIC8he2F3T7d8BCRt1HfdXKD8Ih8nSZz2r6zoMZLuDcmSljEAHEtWWw/ZDKiRuTAuekIy1EeRM/0hvlhM6UAgAXM5bblUvGBnGABXO0NXXpPVpQvJQUhZNwErcUrXCuS+oxD/uBJhFys7qX6WnyWLvK92nfC1F0fmKVcGQehESer5WJ8ZCsykWyKJj0X7zk85OBX8UJkVOcMi5DSNYwHn/+QUo9U0hDGLqei2tVSxz7IpTrEOwf0y+uYmJfJssyP/vtrpJB0BDHIf5CT1rx5oV80/newx9TboabJuVn4i60N09W/q75q9Oh3PeP0f</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C81E90BCB81AEBE05307991F0AB547</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C81E90BCB81AEBE05307991F0AB547</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C81E90BCC41AEBE05307991F0AB547</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C81E90BCC41AEBE05307991F0AB547</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_062927</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07C81F22E8F8177FE05305991F0A8352:34AF5D8F"</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00017_Account and User Create with FR 107_UserGet Full user 111_SUCCESS_P0" searchProperties="true" id="517ea6f7-5fde-4ea7-99d6-b69065272d5c"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="598bf47d-2e15-4189-a842-df984a96afb5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="81bd1b19-4b1c-433c-b59b-d4da818f39ea"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","FR");
tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="ee69ddc8-a8d5-4984-9e56-67984bc30411"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="957c657a-25b9-4f42-8a13-aa50cd2ddd54"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="6aeb41cc-6b51-4eb1-93cc-86b4682fb6de"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynlMGV8wBlyBKkJChgzkBiGTeUkJuW002LKRZCDz9SsZcICQLLtPrm63uk9fdNQXHMWR7bU5ByZIQkurOKLcy7VNLWPUSxAn3KMoBu4J7A3bg75nl00PbY9opd5VU3tDTh0jy6/rQRA4uuO4dX1iWpbuBJOJ26i5FSdwpSnnGfQoF4iKpmablqNLG8sZmaZXrXtOreza9d9aaQyMS9/SpGxqG1Ar3tSmQqSeYSyXy/KyUk5YaNimaRm/Bv0hnkKMtNbFOqM8EGtt7HHZBwxRhMs4iY0LY8/mwufekIQUiYzBJpb/VSzTMBuGtPE5Cc+04iz4PRokudhBNKEEo4j8Rao+AxDTxC+1ozBhREzjL5OwTOVYhxXWseXQM83Yh3aioz2EjCOdT5G18fUEATCgGErPT72mdnZa1/KjI4YoDxIW833xv+EBuoAoScHX+TatDbTTHR6pVOsCsNejOMo4WcCdGtYUYeCbbgI+3VXpgUFAVn3C5YCuuEJn7MI7ENfVuCIhcPF/GrTTnLWTMYoyaCX9Pn2dGXbIkPEYDbrd9qgnCPkz7uNmDmDXOFcUrV2LB0NZDNH6xGp+91Izl9hxb6aXGY3MIG3Mhjev3VElcFK3ysb8Prw10l8d3PXHt3T5QOb3yXw0toz26OXc7fTfSffJ/JEatgW98xCf0/FwshxVHgcNfhuubsNao3fjVkJrAWFlZf94jn6/3gXZdfBzMOjQmWu+hOx8VjPtxmvlMeqw+2d8e23dzaqP/Rn87Qz6U/zzdgErt94s0tnBv6/b3vlhNvkDWGxFNQa9q1JXdgmJ78lMaYivB7mplyry4QKo0FrqlOIOL5N0R3xP9nAtm7VO3bqud6tVp2K1r+vXZrVi1hoNq2u2nc5lbUsyaxQHEDsJDYiKpSh3PTbfA8Sxx4H6wPRFkkmm49o3Hq+QQKUefZKXIKEcRomkZzdeRphZ88ZsaVvYdezAD+MlmhKtdJeIe3rP2oEAts/JlT1OfgJMUgKKuNVccznYXMhazNEiE5FVXqAyhUxSO1Ms69lOvWpwEqcRKKRGnPhZBOV0muaVMfj6a+sI81z7dD3Kb9uXeR3+25ZA2vhEGXCVyyXINsKRx6WyTeTrhN3dhLfu25lP1MWS9RSM4DWS/V8fY6Lmo5gRmdFbZ/hmbXEX5icf/3zS+AaUcViPIpC/IDtht0+3fAQkbbS23Zyj8rycLRZZ3r+aokcm3RuSJS1jCDiTrPY+SmZAjcKFcdITUqA+iFzo9/FlYkqHAgmI5bSVcvGEnWEIXO0MPXlNVqcuJHshZd0ErMQxXSeS+45C/O1KhD2s7KT6QX6WCfM/2nXE104cmadcGQShoZLU8/H+xVDgRLolkvgStuv8mINjwfeVRZELLEJO0yQT8PWfkmK0poYwTjIqeldarthl2RyneE/B+zD65CYn8mKzI/++2ukkHwEMch/kJPevHmhPzT8Nd5h6E/QTWXdtW/J1x6rVujlZV9dkXa9U7aIoe+han9SfNTt1Opzx1j8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C81F22E8FC177FE05305991F0A8352</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C81F22E8FC177FE05305991F0A8352</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C81E8F55431AE8E05307991F0A4CB7</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C81E8F55431AE8E05307991F0A4CB7</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_062943</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07C81F2225EC276AE05307991F0AFE92:DF03CDAC"</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00018_Account and User Create with NZ 107_UserGet Full user 111_SUCCESS_P0" searchProperties="true" id="b7c69920-3701-4005-aa5e-fd8b053c7b05"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="6851af7b-573e-46f6-88db-3e0512a6ee65"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="88f54874-4ce9-4357-8e50-f3288f05cfc5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","NZ");
tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="a1af26c6-9a49-405f-8fe1-3710634bedab"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="d7051129-0e0b-49d1-bf8e-f028d61ff2d7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="69b087ea-039f-4986-a931-f7d9f986fce2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvM4ZXzhalegigSSOJOQBMiEyktKyA0W2LKxZC75+pUMOJgAy+6TS+1W9+nuoyNdMRT4pt1iDGJOQlpYBT5ldmptKElM7RAxwmyKAmA2x3a/9fRom0XdRrstSsFpN5RPdwSGW6mOVOyOTbWMTEtFFtZVY1TSYWTUa8hAwpWxBBzKOKK8oZi6UVYNQzXKA123K5atl4rVsvWhFP5CzERs4VLUlS2oFWsoHueRrWnL5bK4LBXDeKKZum5ow6fHPvYgQErzalNRmihubv1x0QUMvo+LOAy0Ky3nc+Uyu08mFPEkhm0u91QuXdMtTfi4jEx+KdlecB06DtPlDaIhJRj55AvJ/jwB90K30PInYUy4F5wswtBlYBVWWMVGmf5StDy0CwPlEMYMqcxDxjZWD8YQA8VQeOs5DeXXZVNLtw5iRNk4jAOWX/43PEAX4IcRuCrblbWFdnnAI51qXgG2HYr9hJEFdCVZI4SBbacJ+PJQhZcYxmT1SJgg6IpJdNo+vIPlphttMgHG/8+A9oazCfIX+Qk06+xVNyZBsP7qml/teZtVqxW8Hn59OU+NFMC+c2rIRrtZHpAyI9FmB3q7i9fONe0O7h+I9nD3Ed5P6+/uG7c88641nC2HtZpnOS3v+vfcv/XvvcD76Ax/DwfP48Vt9/naLNcfHvXuNXl7qXV69ObZmvosSUoB9i3Wfg1KH521FTmvVuu9CtOp9viHxhyC/t34PsYf17Py++xljBCPNTZNOEFo+RT6o6FzZ1RMPK7QcvejkyRfo2dv1sjK2cOft+3OfD8ZTQHz3VLSwGkXbsWUED8vZtJCXHWcutqRFB/GgXKlKXdJ7bATIXfEtcUMN2u9dlM3OpbeKdV0o9WpdvRKSa9ZlnGrt9pmq70TmQ2KA4g3IR0TmUtK7oY25wHiwGZAXYjVRZgIpWPKmYhtxFHBoT1xCELKYBAKeTZnnlerROWpO7MMq1YtV1A0D2EeKYVuyJ/pc9wac4jzmlzKaXIPMIkISOGWvGaC2IyLXszRIuG+UVygIoVESHssVdYWHKlojASRDxKpFoRu4kMx8qK0MxrbfE0VYZZae51BetpO1nX4b9cC4eMS6cBkLdcgxgg/Lpe6XdkVcrrg6n7Bu/CtxCXyYIl+8pjgDZL8r2+aSH5kHBEVfd70P40d7sz94u0/d2pnQGmH/cgSuQuyl3Z3dYtLQMhGczfNOSrOi8likaTzq0l5jEV4TaikofUBJ0LV1oNwBlTLQmgXXSEZ6oPMmT2PL+Ee7XMkFEOwrZAuL3gz9IHJN4Mjjsnq0gdJLqXoG4cVP2a78cV7RyI++yTCNpZ+wvwiPsswdr/HdSTWXh5Rp3gycEInciWvj/UJUuBQhCVC+MJ4P/ixAMeS541ZkzMsXLBplHA4/acgFa2hIIzDhHKnraSGfZVNcfJ1BPa3048wqZBnLzvy7087laQUwCDeg4yk8eUFbUv+08meUm+THhfravmcWOfRNX+Yf1r2+nTI8eY/</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C81E90E3641AE6E05307991F0AD2AD</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C81E90E3641AE6E05307991F0AD2AD</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C81E90E3701AE6E05307991F0AD2AD</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C81E90E3701AE6E05307991F0AD2AD</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_062959</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07C81E90E39A1AE6E05307991F0AD2AD:C6632D0F"</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00019_Account and User Create with IE 107_UserGet Full user 111_SUCCESS_P0" searchProperties="true" id="066b95c3-1028-4ff5-b79c-d8b6a7012d73"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="fabfd851-861e-488c-a393-9a16b0c2afa1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="19110c70-61cb-4475-b1c1-5f03694c1cd6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","IE");
tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="e375f17b-86db-448f-a937-2637e77753ef"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="9d6d0a98-ad7f-473f-99fd-75172124b2c2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="0322ca71-ea28-45c4-a326-db679f87b4fd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcsI2EP0VxnnMGNuAMfYEZrilpSE3IIHykhHyAkpsiVgyt6+vZMABApT2ybPr1e7Zi472jqMwyHlVziEShNHMMgwo9xJtWYsj6jHECfcoCoF7Anvd6mPby2VND+2OaJlWo6x94GLJQUWzqI+dgqsXkF3QSwUzr4+cAlhWsThy8yNpynkMLcoFoqKs5UyroFuWbhV6punZrmc5WdctDbXMO0Rc+pYmWVPbglrysjYVYuYZxmKxyC7yWRZNjJxpWsbgsd3FUwiRVrnbZJQEiipbe5z1AUMQ4CxmoXFnHNjc+dzrkglFIo5gG8s/F8s0TNeQNj4nkxstPQt+i45ZItYRZZRgFJA1UvV5BDFlfqYaTFhExDQ8m4RlKsc6LLGOrQK90YxDaFc6OkAYcaTzKbK2vjowhggohsxbp1XWbq7rWnK0FyHKxywK+aH43/AAnUPAZuDrfJfWFtr1Dk9UqnIH2GtRHMSczOFJDesMYeDbbgK+3lXmJYIxWbYJlwO65AqdsQ/vSNxUo0EmwMX/adBeczZO3lEQQ4UM2OiPSc1e8zc/qhNaxO5XyeL472GznADYN04UaWs34tFQpkO0OcF8Fr268XT5+rUu3vffa8NB2BmEvdtZf9F/EBFqMPcvdzKAYf3htgHs4XmyasxfRd+FxiIO6yE2q/11x6ktoZ63h0H1GxXr2BeTt+ZzfvpVyrkrFnd6n+0Xnq/eRtgaWO+j+Mtut40l6ZlLnndvR3m7A/1c0A/+XDuF+27t/oW9FJ7cafhoOY+dVfA+DOL1Nt0j/Ie63Z3vxqNPwGInqjFoNTL3sktIXCYzpSG+Pk5MvZkiHy6ACq2iTinu8GJJd8T3ZA83sunUS1azdG/bbsOqNktN086bjuta92a1UK85O5LZoDiCWGd0TFQsRbmbsbkMEIceB+pDpM9ZLJmOaxc8NpBAmRbtyEvAKIcek/RsCbvofBanwSf+tsMFc4p4jHyrtNQyT0w80+eoOhYQHXJy/oCTO4DJjIAibjXXXA42F7IW32gei8DKzlGWQiypPVIs6+UKJdvgJJwFoJAaIfPjALKz6SypjME335yOME+0nWYvuW1n8zr+tyuBtPGJMuAqlxrINsKJx8XcJXI+4eJ+wjv31dgn6mLJeoqI4A2Sw18/Y6LmI50RmdFHvfth7XCn5lcf/33SuADKOK5HGsifk72wu6dbPgKSNiq7bn6j7Hc2ns/jpH+OosdIujckS1pGF3AsWW3VY19AjdSFcdUTkqI+ipzqD/HFYkq7AgkI5bRlEvGKnaELXO0MLXlNltcuJAchZd0ELMUpXT2Q+45CfHElwh5WdlL9Ij8LFvk/7Trhay+OzFOuDILQiZLU87E6MxSYSbdEEh+L9p2fcnAq+KEyLXKKRchpGsUCzv/JKEYrawhjFlPRamiJYp9lE5xiNQPvx+iXm4TI082O/Ptqp5NkBDDIfZCTxL96oD01/3Syx9TboGfI2rpE1ofoKr/UvzV7dTqe8co/</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C81E8F55911AE8E05307991F0A4CB7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C81E8F55911AE8E05307991F0A4CB7</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C81E8F559D1AE8E05307991F0A4CB7</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C81E8F559D1AE8E05307991F0A4CB7</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_063014</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07C81E8F55C71AE8E05307991F0A4CB7:217E6A27"</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00020_Account and User Create with AU 107_UserGet Full user 111_SUCCESS_P0" searchProperties="true" id="df5cd446-9486-4ee3-8697-5a3d66009da3"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="adc90048-5fff-41dc-b47f-ea1469c6831c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="62c22dd9-999f-4d42-94c8-0d7439aa6135"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AU");
tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="29f39211-4a4c-414d-83d4-83baea49376b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="060596fb-9135-466e-825f-de48d7581aab"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="1d17248e-73e3-4b1b-9c66-9d3cc5988274"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o6EP4rjPvYMbIM5uIJzFCgDeTWAGmTvnQUeQERW3Is2XH6649kwAVCcjjnybPr1e63F33aM0mi0PV7UkKimOCVPAq59Attx0oT7gsimfQ5iUD6ivrT3tWl71Ydn2yPWJXRoGP9njtuixLctGmDNO06PILdbjVbNm7UahQHDc9zG9pUyhRGXCrCVcdyHVy3MbZxfeY4vtf2a2612ca/rMoPSKT2rU2qjrUBlcuOtVQq9hF6eXmpvtSqIlkg13Ewur+6nNIlRMTqnq0zKgIl3Y09rQZAIQxplYoInaE9m7NA+lO24ESlCWxiBe/FcpDTRtomkGzxySrPQjDic1GIfcIFZ5SE7A8x9bkCtRRBpRcuRMLUMno3CewYxzbk1Ka4zj9ZaB/aiY72ECaS2HJJ8MbXBOaQAKdQuZuMOtan07pWHJ0lhMu5SCK5L/43PMAzCEUMgS23aW2gne7wSKW6Z0D9EadhKlkG12ZYY0JBbroJ9HRXle8JzFl+yaQe0FwadGgX3oG4rsaALUCq/9OgneasnfwgYQrdvnio8eV93+uP79o3D+Of/cFdPmDuUPY6BYBd40JRtnYtHgxlOUTrEyoaimk8daVc4eW4jbw2OR+Q9K7n/Zigiz9efB+MbzM8biXf5iN0e7vqXaRSiqfh9xl8OX+Mzu8FuXKHqP15ISdfxyJP8zx6qkeXTu1h1FzFF3fL0L0ZyiEfOzKfZekviW7Jz1Y+O7/59S29FPPUlehlEK1QALMGS7LP5xdRowZP4TXzwsbnrH75MLqOL8RDp0xnB/++bnvnp+njCqjaimYMRoPKV90loj4mM6NhgT0vTP3YkI9UwJXVNacMd/ippjsW+LqHa9lp9lt42HaGtQHGvWFj6Hg1p9lu469Ob+D2BluSWaM4gNgXfM5MLEO567H5GCCNfAk8gMTORKqZTlofeBwQRSojPtGXQHAJM6Hp+ZV7uNZqed6KhXiB2SrNRN3FNLMq10Ld8JukN1eQ7HNybY+TJ0BZzMAQt5lrqQdbKl2LZ5KlKsTVjFQ5pJraE8OyvltveUiyKA7BIEWRCNIQqvEyLiqD5Prr2oTKQjsZzorb9m5eh/+2JdA2ATMG0uTyBXQb4cjj4m4TeT/hxm7CW/e9NGDmYul6qoTRNZL9X3/HxMxHOSM6o9/96W+8xV2an3z87Un0ASh0WI8yUJCxnbDbp1s/Apo2uttuPpPqczXNsrToX9PQY6LdI82SGE2BpprVXmfiCTgqXaCTnpAS9UHkUr+PL1VLPlVEQaSnrVKIJ+wMU5BmZxjpa5KfupDshdR1U5CrY7p+qPcdg/jDlYj61Nhp9Xf9eRFJ8LddR3ztxNF56pVBMb4wknk+Xt8ZCiq0W6aJTyS7zo85OBZ8X1kWucSi9DQ9pgre/1MxjNaxCKUi5Wo0sArFLssWONVrDP5fozduCiIvNzv276udzYoRoKD3QckK/+aB9s3888UOU2+CHifrvvcRWe+j675Rv9Xs1Olwxrv/AA==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C81E90E3C51AE6E05307991F0AD2AD</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C81E90E3C51AE6E05307991F0AD2AD</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C81E90E3D11AE6E05307991F0AD2AD</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C81E90E3D11AE6E05307991F0AD2AD</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_063028</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07C81E90E3EA1AE6E05307991F0AD2AD:150C8E8F"</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00021_Account and User Create with CA 107_UserGet Full user 111_SUCCESS_P0" searchProperties="true" id="c5ad1aeb-d21a-4a1c-aea7-aea0e4235d14"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="2578cf92-3029-41c5-b5f7-043f70359adb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="fd90aaef-9199-4d52-9d21-442793fa2b87"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CA");
tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="9e5c8028-a07e-41c9-a085-52b1ab2f8372"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="34805976-a11d-4f30-9921-9f49625679e7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="428d8e08-9421-4ea8-8a72-3afdbb08346a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc6o6FP4rDvuxg4CiVKY6463W02qtdveyXzohLDAVApLgpb9+J6hUre3xnCcmi5VvfeuSL7liKAxKdpMxSDiJaGEVBpTZmbWupAm1I8QIsykKgdkc25Pm4M4uFXUb7bYohX6nrrzhWqlmlTykei7yVNNwQEVguKpVwVZJ1x0LeUi4MpZCnzKOKK8rJd0wVcNQDfNR1+1KzTYvi3rV+KMUniBhAlu4FHVlS2rF6sqU89jWtOVyWVyWi1HiawLb0F4GdxM8hRApjatNRlmgpLH1x0UXMAQBLuIo1K60A58rl9kT4lPE0wS2sdzvYumaXtOEj8uI/0vJ94Lbp16ULduIRpRgFJAPJOszAD6N3EIz8KOE8Gn4bRKGLoFVWGEVGyb9pWiH1M4EOmCYMKSyKTK2WGPwIAGKofB73K8rv87rWrb1MUGUeVESssPlf+MDdAFBFIOrsl1aW2rnA56oVOMKsN2nOEgZWcBQDmuMMLBtNwGfD1UYJeCR1R1hYkBXTLLT9ukdLTfV6BAfGP8/DdprzgbkCQUpNGpOMKtqD3GclhNYzUrLa/+l582mT+/9ekZg3zkz5K3dLI+GMh+izY6g6697d/0WjJ7dl9uX5fP8xXg1/zGfutG9OyoNew/jXpWP5r3B79baGc089z207lel8mN7/NEOlhevtwOfre5vnHHnfTKq8mekrdavw5dIu3nWUOU2WLgXuHJ7XV07YdwjOL38cFrN7vCh48ZWp72eh5PZqx+67YXV/HMxa8+h2yJ6t+vz+8GHN+xOr+HhohXcPJn1PJ09/oe23ZmfpM47YL5byjHodwrXokuI/yxm0kJc1ctc7ViKD+NAudKQu6R22KmQO+LaooebtW61L41uTW91LnWj2W119UpZt2o141pvtiqmtROZDYsjiu2IekTGkpK7GZufCeLQZkBdSNRFlAqlY8oPiB3EUaFPx+IQRJTBYyTk2SjXDGw6RuI7ztpwlisLTGaaKHKUwjDi9/Q+aXockkNRLh+I8hgwiQlI5ZaDzcRkMy6KMUeLlAdGcYGKFFKh7YmUWbtkXlY0RsI4AElVCyM3DaAYT+OsNBrbfEsqwiyzjruP2XH7NrHjf7saCB+XSAcmc2mB6COcuF3Ku0S+T7i6n/AOvpm6RJ4sUVCeELxhcvjrc07kgORDIjJ6a0/ejB3v3P3s7V93aj+Q0o7rkQdyF2Qv7O7uFreA0I3GrptzVJwX08UizfpnSX1MBLwmZNLQJoBTIWvrx2gGVMshtLPukJz1UeTcfsgv5VM64YhDKKatkC3PeDRMgMlHQ1+ck9W5L5KDkKJuHFb8lK0diAePZPzjmwjbWPoJ80h8llHifrbrBNZeHJGneDNwQn25kvfH+puhwJGAJUL5omQf/BTAqeCHxrzIORcupslJOXz/pyAlra4gjKOU8n5HyQz7Mpvx5OsY7E+nLzCZkudPO/LvbzuVZCOAQTwIGcnw5Q1ty/mn/p5Ub4OeVmvL/EmtD9k1vpi/WvbqdDzjjb8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C81E90BD741AEBE05307991F0AB547</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C81E90BD741AEBE05307991F0AB547</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C81E90BD801AEBE05307991F0AB547</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C81E90BD801AEBE05307991F0AB547</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_063044</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07C81E90E40E1AE6E05307991F0AD2AD:F4F42C8F"</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00022_Account and User Create with GB 107_UserGet Full user 111_SUCCESS_P0" searchProperties="true" id="3fcafcfb-a12e-4297-a0f5-ec7e214762db"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="107bbbc4-236b-47d5-892a-ec5b305b16d8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="f0c0c7a4-6ed9-4127-a944-4453624c2fe6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","GB");
tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="e50c7089-2913-4dac-b8c3-5a90b75b821e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="b2efb724-46d3-465b-87c2-b6d668949b53"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="0d407883-ede7-4023-8058-fb52675b5eb0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZrc7I6EP4rDv3YwQDemeqMt/a1r62tWnv50okhYloINAmi/fUnQaVi1eM5n5hdNrvPXvJkrzj0Pctuco6ZIAHNLX2PcjvR1rWIUTuAnHCbQh9zWyB71Lzr21besOH2iJbrderae3VaKjim4ehVE2K9aM4sfYqnRd0qm6VSFU6hAx1pynmEe5QLSEVdswyzqJumbhbHhmkbhm1Y+aJRftNyE8y49C1N8oa2AbXkdW0uRGgDEMdxPi7kA+YCyzBM8HLXH6E59qHWuFpnlARijY09yjsYYc9DeRT44ApkbK4cbo+IS6GIGN7Eco7FMoBRA9LG4cS90NKz2OnRWZCIbUgDShD0yDdU9bnDYh44uabnBoyIuX80CdNQjnW8RDoyi/RCA1loZzrKIGQc6nwOzY2vIZ5hhinCuadhr65dnNe15OiYQcpnAfN5VvxveDBdYC8IsaPzbVobaOc7PFCpxhVGdo8iL+Jkge/VsIYQYb7pJkbnu8o9MDwjyz7hckCXXKEDu/D2xHU1OsTFXPyfBu00Z+1kAr0IN+Yf/UtKW9/GPR28vj4PBiYZv7BHi5BePQGwa5wo0tauxb2hTIdofSKqALfGH8B1yPp/rKZ4+fQnL5bbnZStm6/nVVwmj8j6GpiuW3j8W/i2wJ/w43k+ni3dQqvGhmMwHtw+PQ7vypx63PPeSC28firFg+uHmL7MnmnZaA/vb6aTOXei5eUTuG1609LltNgu+P2gGJcIu2l9XxY+UReuCk1emww+u7VnMRFOFLx2zPDBWVTjt+9bB7j1NJ0d/Fnd9s6PoukHRmIrqjHodXLXsktQnCYzpSGOPktM7VCRDxeYCq2hTinusCNJd8SxZQ/XslFpV81uzWh1WlWz2W11jVLBqNRq5rXRbJWKlS3JrFHsQWwHdEZULEW567E5DRD5NsfUwUxfBJFkOq6d8NiBAuZ6dCgvQUA5HgeSnitW4FeKq3kcusSM4k9W8F2HLV1Ly90HYkAHrDkTmGU5uZjh5CFGJCRYEbeaay4HmwtZiy+4iIRn5hcwT3EkqZ0plrWtYrUEOPFDDyukwA+cyMP5cB4mlQF8/bV0iHiiHXbHyW07mtf+v20JpI1DlAFXubSwbCPOJmLYpZpd2iZyPOHKbsJb983IIepiyXoKRtAaSfbXz5io+UhnRGb03h69m1vcqfnZx3+fBCdAgf16pIGcBdkJu3265SMgaaOx7eYXzH/lo8UiSvpXUfTIpHsgWdIEI4wiyWqrcfCJKUhdgLOekBT1XuRUn8UXiTkdCSiwL6ctl4hn7AwjzNXO0JPXZHnuQpIJKesm8FIc0rU9ue8oxCdXImQjZSfVD/ITB+wn8UO+duLIPOXKIAh1laSej9WRoUCBdEsk8QVs1/khB4eCZ5VpkVMsQk7TNBL4+J+cYrS6BhEKIip6HS1R7LJsglOsQmz/GP1ykxB5utmRf1/tdJKMAMJyH+Qk8a8eaFvNP3V3mHoT9DBZN9unyDqLrvFL/VuzU6f9GW/8Aw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C81E90BDAC1AEBE05307991F0AB547</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C81E90BDAC1AEBE05307991F0AB547</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C81E90BDB81AEBE05307991F0AB547</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C81E90BDB81AEBE05307991F0AB547</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_063058</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07C81E90BDE21AEBE05307991F0AB547:D058C148"</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>6cbdacbc-92be-4382-b534-3f6d4b477239</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9503ea1b-4435-45ce-bda9-62a41bc7945d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00023_Account and User Create with US 107_UserGet Full user 111_SUCCESS_P0" searchProperties="true" id="93f5ae34-b214-4bee-a51f-5675b06eeb17"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="cc01097e-3707-4d47-91c8-e6fe99de6113"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="3651706a-1913-4acd-aff5-3e07ed2f8ae4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","US");
tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="e4b93aa5-e6ab-4a15-9294-e5e2d2523d35"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="2e845966-091a-4a63-9977-aad353db7345"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="a53c05d7-011a-4ffc-97ee-b0252d479a3c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VyvfxlvHO4gpU+bIkZMgG2V9Sitw2YowElsySrx/JgAMkZJh5cnW71X160VGfcTRJbD/gHFJBGC0tJwnlfq5taFlKfYY44T5FE+C+wP4wuOr7dtn00faIVuq1G9pbGNY9E4ehDpEV6S4K63odu6Dj96gSVes1J/Kq0pTzDHqUC0RFQ7NNy9UtS7fce9PyTdN3zXKt6r1qpUdIufQtTcqmtgG15A1tJMTUN4zFYlFeOGWWxoZtmpbxfNUf4hFMkNY8W2eUB0qbG3tcDgFDkuAyZhPjzNizOQu5PyQxRSJLYRMrPBbLNMy6IW1CTuJfWnEWwh6NWC62EGWUYJSQD6TqcwVixMJSkMQsJWI0OZqEZSrHOiyxji2X/tKMfWgnOtpDmHKk8xGyNr4GEEEKFEPpYdBraL9O61p+9D5FlEcsnfB98b/hATqHhE0h1Pk2rQ200x1+U6nmGWC/R3GScTKHazWsU4SBb7oJ+HRXpdsUIrLsEy4HdMkVOmMX3oG4rkabxMDF/2nQTnPWTh5RkkHzw4LXu+vR9V3ndtp6mHH39moYLt87tcVLIwewa5writauxYOhLIZofSK+Pn+per0Pr3KLQ1uMh+77tBV59R5jnYuF9YLt8d3znXiIA1hU7Oe7FX1yPrIrx3p8eiIVd+TNWtF5f3WXecFjbcZb1nLo0fDmJSYXv4NOdyZW1cWDbTzUHD52cLX6+pp1r9Nk1R9cmZeXZGX3xHN7fNkfB8wZO9FfF7xC+PxpfG7HXjxkqzr7bcej+84Au40inR38+7rtnR9m72PAYiuqMei1S13ZJSR+JjOlIaEe5ab+VJEPF0CF1lSnFHf4maQ7Evqyh2vZrLZqds2yg8Cpulbwp2N6jlmt162uGdhOt70lmTWKA4gtRiOiYinKXY/NzwDxxOdAQ0j1Ocsk03HtB49tJFCpRwfyEjDK4Z5Jeia2qOFl6NYW0czyIlqZjZarupvUtNI1Ezf0Jg0iAek+J7t7nDwATKYEFHGrueZysLmQtZiheSYSqzxHZQqZpPZUsaxvuzXP4GQyTUAhNSYszBIoT0fTvDIGX39tHWGeawed+/y2Hc3r8N+2BNImJMqAq1z+gGwjfPO4ONtEjidc3U146z7IQqIulqynSAleI9n/9Tkmaj6KGZEZvbWGb9YWd2F+8vGvJ40fQBmH9SgChXOyE3b7dMtHQNJGc9vNGSrPytl8nuX9qyp6TKV7Q7KkZQwBZ5LVVvfsb6BG4cI46QkpUB9ELvT7+DIxokOBBEzktJVy8YSdYQhc7Qw9eU2Wpy4keyFl3QQsxXe6ViL3HYX4x5UI+1jZSfWt/CxYGn626xtfO3FknnJlEITGSlLPx+rIUGAm3RJJfCzddf6dg++C7yuLIhdYhJym90zA8T8lxWgNDWHMMip6bS1X7LJsjlOspuB/Gn1xkxN5sdmRf1/tdJKPAAa5D3KS+1cPtK/mn8Y7TL0J+pWszaBud7uSrJ1dsnbaXlAUZQ9d84v6q2anTocz3vwH</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C8280A92FF41A3E05307991F0A3D5A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C8280A92FF41A3E05307991F0A3D5A</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C82812AA3741ABE05307991F0A23FD</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C82812AA3741ABE05307991F0A23FD</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_063136</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07C81E8F56471AE8E05307991F0A4CB7:FB4B0340"</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties><con:property><con:name>role</con:name><con:value>nodeIdRTL</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:RET_CS_1</con:value></con:property></con:properties><con:tearDownScript>if(context.expand( '${#Project#runTeardown}' )=='true')
	{
	log.info("Executing TearDown for Suite '" + testSuite.getName() + "'");
	
	for ( testCaseResult in runner.results )
	{
	   currentTestCaseName = testCaseResult.getTestCase().name;  
	   currentTestCase = testCaseResult.getTestCase(); 
	   log.info("Current TestCase : '"+ currentTestCaseName + "'");
	   log.info("Current TestCase Status : '" + testCaseResult.getStatus().toString() + "'");
	   
	   if ( testCaseResult.getStatus().toString() == 'FAILED' )
	   {
	      log.info("Re-executing failed TC");
	      def currentRunnerTC = currentTestCase.run(null, false);
	      log.info("Status on re-execution : '" + currentRunnerTC.status + "'");
	   }
	}
	log.info("Execution of TearDown for Suite '" + testSuite.getName() + "' Completed" );
}</con:tearDownScript><con:reportParameters/></con:testSuite><con:testSuite name="03.UserDelete_Backward_Compatability" id="7ce9a3cf-1dda-4a16-a86c-31f62d860697"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00001_Account and User Create with BE 111_UserDelete SecondFull user 107_200_OK_P0" searchProperties="true" id="b18f5a37-f6af-424c-9781-94607599a74f"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="133eb120-ce3a-42c7-af22-e324e6bc8d85"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="e2176d03-2209-4c5a-945c-4831c7126e08"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","BE");

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="07fdc8e1-dbf0-405b-b67d-aa304f44d7a8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFULL" id="5a142eb4-d317-43ec-9ac2-f207c668fa60"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - AdultFULL" id="5c1d1f6d-a963-4592-a2c8-849eaab97062"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="4c0e6b72-23f3-4a23-ba0b-dbcd06a94904"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="ce02036a-3938-46de-99f0-fec282df10c8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="4b7581b5-a904-442f-9d01-7a6cb3cff189"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o6EP4rjPvYMZbBYOMJzFAuLU1om0DSNi8dWV6DElsylkwcfv2RDLhALodznjy7Xu1+e9GnvRA4iRt+XwjIJOWsViQxE36p7Rp5xnyOBRU+wwkIXxJ/1p9e+Y068vH+iFGbDLvGH7cFQeS2QhN1PNd0kBuYQScKzY6HA9RsRY7bbCtTIXKYMCExk12jgWzHtG3TdubI9m3kO269iZx7o3YHmVC+lUkdGTtQhegaSylT37Kenp7qT806zxZWAyHb+jW9mpElJNjoXWwzKgNlvZ09qYdAII5JnfDEurCObC5C4c/ogmGZZ7CLFb4VC1moYymbUNDFB6M6C+GERbwUB5hxRgmO6Qbr+kxBLnlY68cLnlG5TN5MwkbasQkFMYntsA+GdQztTEdHCDOBTbHE9s7XDUSQASNQu72ZdI0P53WtPDrPMBMRzxJxLP43PMDWEPMUQlPs09pBO9/hK5XqXQDxJ4zEuaBr+KaHNcUExK6bQM53VfuRQUSLKyrUgBZCo7MO4Z2I22oM6QKE/D8NOmjO1skdjnPoXc/wAm+8y7lzixICk3QWXPM2ns5WvFsCODQuFVVrt+LJUFZDtD2RgD27nUXe95vPrcJ1HtJgOm45HzfLzeD+qRk/pHP76+f+dfFj0w48WTS9ZT9B7vMGFuzLivzqf7OH7n02Hc+j4mc6lj9jp309Gv9ePf7eUIs3gnaQyCtxNyZfHOkUyJJ38SRbXHpfbycRHd2vr1aXfdn6PP6FxnfwKMKH/pd0+Pjx49SaZtMILt3C4su75Pmh43WrdA7wH+v2d36WBw9A5F7UYzAZ1saqS1i+T2ZaQ0MzKk39VJOPkMCk0dOnNHf4uaI7Gvqqh1sZuQPPGTRGw09tdW1Gzgi1mqjV6dhj1B94I29PMlsUJxAHnEVUx9KUux2b9wGSxBfAQsjMNc8V0wnjHY9DLHFtwm7UJeBMwJwrerZbq8fWmrfXEOLg0Q2wFwpnmWHFyd+4/M6+Z/1IQnbMyc4RJ98AoSkFTdx6roUabCFVLVZ4ncvYrq9xnUGuqD3TLOs3HK9lCZqkMWikVsLDPIZ6ukzLylhi+22YmIhSezOal7ftzbxO/+1LoGxCqg2EzuUTqDbCK49Lc5/I2wm7hwnv3ffzkOqLpeopM0q2SI5//R0TPR/VjKiM/gxmf+w97sr87OMvT1rvgLJO61EFCtf0IOz+6VaPgKKN3r6bK1xf1fP1Oi/752p6zJR7xVl2y0INawYkV8T2POePwKzKi3XWK1IBPwle6Y8h5nLJZhJLSNTA1UrxjLVhBkKvDRN1U4pzd5KjkKp0Egr5mm4Qq5VHI353KyI+0XZK/UN9nngW/u3YK74O4qg81dYgKVtoSb8gz2/MBeHKLVXcx7ND5685eC34sbIqcoVFqoEKcglv/6lpUusamBCeMzkZGqXikGhLnPI5Bf+v0Qs3JZdXyx399+3OpOUIEFAroaClf/1G+/oKsMUBWe+CvuDrZsMdNNrI7dt2ydfulq8/oQ6qinKErvdC/VJzUKfTGe/9Aw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C84327C2607A11E05307991F0AB090</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C84327C2607A11E05307991F0AB090</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C84C2EDB6407E4E05305991F0AC8E8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C84CEFEE962C20E05307991F0ABACB</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_064139</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZrU/I6EP4rTP3olKalWOkIMwioeNDXI3jBL05ItxBtU0hSBH79SQpUipfDOZ86u93sPnvJkz0TOI4cvykEcEkTVlrEERN+pq0bKWd+ggUVPsMxCF8Sv9+86flOGfl4e8Qoddt147XmVIMQEDGDU881Xc/BJq7WsBk4nhtCCKcoxMpUiBS6TEjMZN1wkO2atm3a7gDZvm37yC5XK5UXo/QIXCjfyqSMjA2ohagbEymnvmV9fHyUPyrlhI8tByHber7p9ckEYmw0ztYZZYF4Y2NPygEQiCJSJklsnVkFm7NA+H06ZlimHDaxgp9iIQvVLGUTCDo+MvKzEHRZmGRiC7OEUYIjusK6PjcgJ0lQakbjhFM5iX9MwkbasQkLYhLbZUeGVYR2oKMCQi6wKSbY3vi6V43gwAiUHu67dePosK5lRwccMxEmPBZF8b/hATaHKJlCYIptWhtohzv8plKNMyB+l5EoFXQOt3pYp5iA2HQTyOGuSnccQrroUaEGdCE0OmsX3p64rkabjkHI/9OgneasnTziKIUGXly+cxqNLpIrt5Yu3yw2CMRpj1wOx/UMwK5xpshbuxb3hjIfovWJN4GendsaP45X1x66ZoPaNAk7vUnr6eqNuac2Gj6tnm/O+cMiOo7i1qgVTJqXHqs8dJzB48X52+j97zmsrh/gqjKiQ3rcWfLjysr9a/TSPW4PX16eb5Pr48vVZNXj4Xg2C9Mbz42fr0JwTk5YEDxeTd7R3fv4rafq0WxfruZVGMZyydLRcOU8sJVLnq7GF+77AA/reTo7+Iu67Z3vp6M3IHIr6jHotksXqktY/k5mWkMDM8xM/akmHyGBSaOhT2nu8FNFdzTwVQ/XMvJap26rc9Hp1E6cloM6qFpBXq1mX6DmebN1viWZNYo9iK2EhVTH0pS7HpvfAZLYF8AC4OY8SRXTCeMXj20scanL7tUlSJiAQaLo2Z4FK2FLx0upV52vROzUgmAeJ0ujdJvIP+wPb4YSeJGT3QIn3wOhUwqauPVcCzXYQqpazPA8lZFdnuMyg1RRO9cs6zvuadUSNJ5GoJFacRKkEZSnk2lWGUusv46Jici0951Bdtt+zGv/37YEyiag2kDoXM5BtRG+PC7Ir24T+TlhbzfhrftmGlB9sVQ9JadkjaT463NM9HzkM6Iyem31X+0t7tz84ONfT1q/gLL265EHCuZ0J+z26VaPgKKNxrabM1yeldP5PM3652l65Mq9uqN21UKO1QeSKmJbDpJ3YFbuxTroFcmB7wXP9UWIqZywvsQSYjVwpUw8YG3og9BrQ1fdlMWhO0khpCqdhIX8TteK1MqjEf+6FRGfaDulvlOfj4QHnx37xtdOHJWn2hokZWMt6Rdk+cNckES5pYr7Er7r/DsH3wUvKvMi51ikGqhRKuHnPyVNanUDE5KkTHbbRqbYJdoMp1xOwf80+uIm4/J8uaP/vt2ZNBsBAmolFDTzr99oX18BNt4h603QL3xdcbyWc4K8pm0X+BrVUF6UArrGF/VXzU6d9me88Q8=</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07C84C0F609810C0E05307991F0AEAA8:BB093032"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>07C84C2EDB6407E4E05305991F0AC8E8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C84CEFEE962C20E05307991F0ABACB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C84327C2607A11E05307991F0AB090</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_064157</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_064157</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_064157</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>BE</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>07C84CEFEE962C20E05307991F0ABACB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C84CEFEE962C20E05307991F0ABACB</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZrU/I6EP4rTP3olKalWOkIMwioeNDXI3jBL05ItxBtU0hSBH79SQpUipfDOZ86u93sPnvJkz0TOI4cvykEcEkTVlrEERN+pq0bKWd+ggUVPsMxCF8Sv9+86flOGfl4e8Qoddt147XmVIMQEDGDU881Xc/BJq7WsBk4nhtCCKcoxMpUiBS6TEjMZN1wkO2atm3a7gDZvm37yC5XK5UXo/QIXCjfyqSMjA2ohagbEymnvmV9fHyUPyrlhI8tByHber7p9ckEYmw0ztYZZYF4Y2NPygEQiCJSJklsnVkFm7NA+H06ZlimHDaxgp9iIQvVLGUTCDo+MvKzEHRZmGRiC7OEUYIjusK6PjcgJ0lQakbjhFM5iX9MwkbasQkLYhLbZUeGVYR2oKMCQi6wKSbY3vi6V43gwAiUHu67dePosK5lRwccMxEmPBZF8b/hATaHKJlCYIptWhtohzv8plKNMyB+l5EoFXQOt3pYp5iA2HQTyOGuSnccQrroUaEGdCE0OmsX3p64rkabjkHI/9OgneasnTziKIUGXly+cxqNLpIrt5Yu3yw2CMRpj1wOx/UMwK5xpshbuxb3hjIfovWJN4GendsaP45X1x66ZoPaNAk7vUnr6eqNuac2Gj6tnm/O+cMiOo7i1qgVTJqXHqs8dJzB48X52+j97zmsrh/gqjKiQ3rcWfLjysr9a/TSPW4PX16eb5Pr48vVZNXj4Xg2C9Mbz42fr0JwTk5YEDxeTd7R3fv4rafq0WxfruZVGMZyydLRcOU8sJVLnq7GF+77AA/reTo7+Iu67Z3vp6M3IHIr6jHotksXqktY/k5mWkMDM8xM/akmHyGBSaOhT2nu8FNFdzTwVQ/XMvJap26rc9Hp1E6cloM6qFpBXq1mX6DmebN1viWZNYo9iK2EhVTH0pS7HpvfAZLYF8AC4OY8SRXTCeMXj20scanL7tUlSJiAQaLo2Z4FK2FLx0upV52vROzUgmAeJ0ujdJvIP+wPb4YSeJGT3QIn3wOhUwqauPVcCzXYQqpazPA8lZFdnuMyg1RRO9cs6zvuadUSNJ5GoJFacRKkEZSnk2lWGUusv46Jici0951Bdtt+zGv/37YEyiag2kDoXM5BtRG+PC7Ir24T+TlhbzfhrftmGlB9sVQ9JadkjaT463NM9HzkM6Iyem31X+0t7tz84ONfT1q/gLL265EHCuZ0J+z26VaPgKKNxrabM1yeldP5PM3652l65Mq9uqN21UKO1QeSKmJbDpJ3YFbuxTroFcmB7wXP9UWIqZywvsQSYjVwpUw8YG3og9BrQ1fdlMWhO0khpCqdhIX8TteK1MqjEf+6FRGfaDulvlOfj4QHnx37xtdOHJWn2hokZWMt6Rdk+cNckES5pYr7Er7r/DsH3wUvKvMi51ikGqhRKuHnPyVNanUDE5KkTHbbRqbYJdoMp1xOwf80+uIm4/J8uaP/vt2ZNBsBAmolFDTzr99oX18BNt4h603QL3xdcbyWc4K8pm0X+BrVUF6UArrGF/VXzU6d9me88Q8=</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20141114_064157</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa106c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>133eb120-ce3a-42c7-af22-e324e6bc8d85</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ce02036a-3938-46de-99f0-fec282df10c8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00002_Account and User Create with BE 111_UserDelete Standard Youth user107_200_OK_P0" searchProperties="true" id="5f3df94d-a9c5-4b2a-a395-0f7ac99ff874"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="21376f9b-d18a-4757-80b7-c76704966292"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="26012750-cf03-4d5e-9bed-4ec407a3c4c3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","BE");

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="abcef5e9-dc73-4509-849a-0eeeb1107442"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUser" id="d83f98e1-c52b-45a2-824a-33bac9f50b37"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - StandardYouthUser" id="1fd15145-4e8d-4c62-92ca-e4bbe6cc4408"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="2573037a-4ed8-4442-9a2f-354e960a7250"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="e021e151-e4cb-4320-a6d8-1d964b06a74e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="19b9e58d-42be-4c5a-bf39-6e6cd28e163b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZZc+I4EP4rlOdxy/jA5nAFqgiQjCeBECDHzktKyG1QYkvGkjnm169kwAFyLLtPrm63ur8+9KkvOIoj22tzDqkgjJbWcUS5l2ubWpZSjyFOuEdRDNwT2Bu3+7eeXTY9tD+ilfxuU3txTVRvOBjptUY10J2pVdenruXqbsNxMXbBMquhNOU8A59ygahoarZpObpl6ZYzMS3PsjzbKtcqld9a6RFSLn1Lk7Kp7UCteVObC5F4hrFarcqrSpmlM8M2Tct47t+O8RxipLUuthnlgdLWzh6XA8AQRbiMWWxcGEc2FwH3xmRGkchS2MUKvoplGmbDkDYBJ7MfWnEWAp+GLBc7iDJKMIrIH6Tq0wcxZ0GpHc1YSsQ8/jIJy1SOdVhjHVsO/aEZx9DOdHSEMOVI53Nk7XyNIIQUKIbSw8hvaj/O61p+dJIiykOWxvxY/G94gC4hYgkEOt+ntYN2vsNPKtW6AOz5FEcZJ0sYqGFNEAa+6ybg812VhimEZH1LuBzQNVfojEN4J+K2Gl0yAy7+T4MOmrN18oiiDFrJ9d0C7hZO968b61dlaj4ktZt00sONR9zMARwa54qitVvxZCiLIdqeWF6Lm/r0KV38rM1Gb4mT8OvMXdRMHF8NeQWqVdR7XGavgw5D2WtvsEhQreG8icE982eV0fMkG0Sbmv1ciSy4z4xwBI94ZbTvfz25JB4N/75+tRev94L1+3zzsDHq9tCvD/vXtw9rGjWeNjbq2q8NJ538nPjD38vwss1JPRQhTJ+GGPeiyW3yWMXLviDrld8s0jnAf6zb3/lxNn0FLPaiGgO/W7qSXULiezJTGhLoYW7qJYp8uAAqtJY6pbjDyyTdkcCTPdzKZq1Tdzp2r3vZMM1az+mZbsV0Gw3rymx36r36nmS2KE4gdhgNiYqlKHc7Nt8DxLHHgQaQ6kuWSabj2jceu0igkk9H8hIwymHCJD1HYsYW0RxnPEqqASTrt8WfaViJtNKAiTt6l7ZDAekxJTtHlDwCTBICirfVWHM511zIUizQMhORVV6iMoVMMnuqSNaznbprcBInESigRsyCLIJyMk/ywhh8+7V1hHmuHfUm+WX7Mq3Tf/sKSJuAKAOucrkE2UX45G2x9ol8nXDtMOG9+3YWEHWvZDlFSvAWyfGv9ylR41GMiMzopTN+sfa4C/Ozj388aXwDyjitRxEoWJKDsPuXW74BkjVa+24uUHlRzpbLLO9fTbFjKt1LyrJcw7SNMeBM8tpmwt6AGoUX46xHpAB+ErzQH0PMxJyOBRIQy4Er5eIZW8MYuNoafHlR1ueuJEchZekErMVnuk4kNx6F+NulCHtY2Un1UH5WLA3eO/aJr4M4Mk+5NAhCZ0pSD8jmi7nATLolkvpYeuj8MwefBT9WFkUusAg5UNNMwNd/SorTmhrCmGVU+F0tVxzybI5TbBLw3o0+uMmpvNjtyL8vdzrJRwCD3Ag5yf2rJ9pTV4DODrh6F/QjXbsN27LrZq3bPaRrp21Wi6IcoWt9UH/UHNTpdMZb/wA=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C84C59212807DDE05305991F0A4A06</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C84C59212807DDE05305991F0A4A06</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C84C2EDB9007E4E05305991F0AC8E8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C84CEFEEB22C20E05307991F0ABACB</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_064218</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EP4rKPu4CnZCuDQqSBRoiwptBaXb9mXlOhPwkjhsbEPorz92gBTo5XDOUzST8cw3F3+ec0HiyPXbQkAqWcJLWRxx4efapqVS7idEMOFzEoPwJfXH7eHAd8vYJ7sjVqnfbVq/MX0NKhXcsMMAY9urhmC/EuLaAWkQz61AWCWeNhVCQZ8LSbhsWi52PNtxbMd7wI7vOH7FK+MafrFKj5AK7VublLG1BZWJpjWTcuEjtFqtyqtKOUmnyMXYQU/DwZjOICZW63yTUR4obW3taTkAClFEyzSJ0Tk6sDkPhD9mU06kSmEbK/gqFkb4DGmbQLDpD6s4C0Gfh0kudghPOKMkYm/E1GcIcpYEpXY0TVImZ/GXSTjYOLYhozZ1PP7DQofQTnR0gDAVxBYz4mx9jSCEFDiF0mTUb1o/TutafvQhJVyESRqLQ/G/4QG+hChZQGCLXVpbaKc7/KRSrXOgfp/TSAm2hFszrAtCQWy7CfR0V6X7FEKWDZjQA5oJgw7twzsSN9XosikI+X8atNecjZNHEilo4XAS46CzVq6Ir1bhq+r25Dy6ZvMX2swB7BvniqK1G/FoKIsh2pxg8bzXfb6OXibVWk3ejDwcPvZuB2hyNVk93oKHxPANLX49raGBkkG7nrlP7HqdRi/qAd2geW2NKn9mwj3D2WTOg8pyOUwyr3IXPk+zDFfun3+mdSZu6tO7eaN35gyyy8nVffx8U03Bi//UpvFkOHubXyynWd2t9MjPu+Eq9i7oy0gN7m6jK349n9zA0y+n9gtPm0U6e/gPdbs7P1avf4DKnWjGoN8tXeouEfk9mRkNC+wwN/UXhnyEBC6tljlluMNXmu5Y4OsebmRc7zS8Tu+y17tw3Y6Le7hawfWzM+cSty/anYsdyWxQHEHsJDxkJpah3M3YfA+Qxr4AHkBqLxOlmU5Y33jsEklKfT7SlyDhAh4STc9OOldh5Y3NKkTFjnoLKF+QWKiQWaXbRN7xu7QdSkgPSdk7IOURULZgYJjbDLbQky2kLsZfslQycspLUuagNLenhmZ912tUkWDxIgIDFcVJoCIoL2aLvDRIbL6uTajItaPeQ37dvkzs+N+uBtomYMZAmFwuQPcRPnld3F0iXydc3094576tAmZuli6oTBndIDn89T4nZkCKIdEZ/e6Mfzs73IX5ycc/nkTfgELH9SgCBUu2F3b3dutXQPNGa9fNv6T8t6yWS5X3r274MdXuNWk5VYRdNAaqNLOtH5I5cFR4QSc9IwXwo+CF/hCikjM+lkRCrAeulIsn7A1jEGZv6Ourkp26lByE1KWTkMnPdJ1I7zwG8bdrEfWpsdPqe/1ZJWnw3rFPfO3F0XnqtUEyPjWSeULWX8wFTbRbpskvSfedf+bgs+CHyqLIBRapB+pVSfj6T8mwWtMilCaKy37XyhX7TJvjlOsF+O9GH9zkZF5sd+zf1zub5SNAQe+EguX+zSPtmyvAp3tsvQ36kbCrZ67jNnC9280Ju7ohbK+Na0VRDtC1Pqg/avbqdDzjrX8A</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07C812BF555E0D9BE05307991F0AD9D2:91FD4B91"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>07C84C2EDB9007E4E05305991F0AC8E8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C84CEFEEB22C20E05307991F0ABACB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C84C59212807DDE05305991F0A4A06</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_064229</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_064229</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_064229</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>BE</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>07C84CEFEEB22C20E05307991F0ABACB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C84CEFEEB22C20E05307991F0ABACB</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EP4rKPu4CnZCuDQqSBRoiwptBaXb9mXlOhPwkjhsbEPorz92gBTo5XDOUzST8cw3F3+ec0HiyPXbQkAqWcJLWRxx4efapqVS7idEMOFzEoPwJfXH7eHAd8vYJ7sjVqnfbVq/MX0NKhXcsMMAY9urhmC/EuLaAWkQz61AWCWeNhVCQZ8LSbhsWi52PNtxbMd7wI7vOH7FK+MafrFKj5AK7VublLG1BZWJpjWTcuEjtFqtyqtKOUmnyMXYQU/DwZjOICZW63yTUR4obW3taTkAClFEyzSJ0Tk6sDkPhD9mU06kSmEbK/gqFkb4DGmbQLDpD6s4C0Gfh0kudghPOKMkYm/E1GcIcpYEpXY0TVImZ/GXSTjYOLYhozZ1PP7DQofQTnR0gDAVxBYz4mx9jSCEFDiF0mTUb1o/TutafvQhJVyESRqLQ/G/4QG+hChZQGCLXVpbaKc7/KRSrXOgfp/TSAm2hFszrAtCQWy7CfR0V6X7FEKWDZjQA5oJgw7twzsSN9XosikI+X8atNecjZNHEilo4XAS46CzVq6Ir1bhq+r25Dy6ZvMX2swB7BvniqK1G/FoKIsh2pxg8bzXfb6OXibVWk3ejDwcPvZuB2hyNVk93oKHxPANLX49raGBkkG7nrlP7HqdRi/qAd2geW2NKn9mwj3D2WTOg8pyOUwyr3IXPk+zDFfun3+mdSZu6tO7eaN35gyyy8nVffx8U03Bi//UpvFkOHubXyynWd2t9MjPu+Eq9i7oy0gN7m6jK349n9zA0y+n9gtPm0U6e/gPdbs7P1avf4DKnWjGoN8tXeouEfk9mRkNC+wwN/UXhnyEBC6tljlluMNXmu5Y4OsebmRc7zS8Tu+y17tw3Y6Le7hawfWzM+cSty/anYsdyWxQHEHsJDxkJpah3M3YfA+Qxr4AHkBqLxOlmU5Y33jsEklKfT7SlyDhAh4STc9OOldh5Y3NKkTFjnoLKF+QWKiQWaXbRN7xu7QdSkgPSdk7IOURULZgYJjbDLbQky2kLsZfslQycspLUuagNLenhmZ912tUkWDxIgIDFcVJoCIoL2aLvDRIbL6uTajItaPeQ37dvkzs+N+uBtomYMZAmFwuQPcRPnld3F0iXydc3094576tAmZuli6oTBndIDn89T4nZkCKIdEZ/e6Mfzs73IX5ycc/nkTfgELH9SgCBUu2F3b3dutXQPNGa9fNv6T8t6yWS5X3r274MdXuNWk5VYRdNAaqNLOtH5I5cFR4QSc9IwXwo+CF/hCikjM+lkRCrAeulIsn7A1jEGZv6Ourkp26lByE1KWTkMnPdJ1I7zwG8bdrEfWpsdPqe/1ZJWnw3rFPfO3F0XnqtUEyPjWSeULWX8wFTbRbpskvSfedf+bgs+CHyqLIBRapB+pVSfj6T8mwWtMilCaKy37XyhX7TJvjlOsF+O9GH9zkZF5sd+zf1zub5SNAQe+EguX+zSPtmyvAp3tsvQ36kbCrZ67jNnC9280Ju7ohbK+Na0VRDtC1Pqg/avbqdDzjrX8A</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20141114_064229</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa106c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21376f9b-d18a-4757-80b7-c76704966292</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e021e151-e4cb-4320-a6d8-1d964b06a74e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00004_Account and User Create with NL 111_UserDelete SecondFull user 107_200_OK_P0" searchProperties="true" id="4ba5daf0-86ff-4ead-9f7f-5dfb8102a4a1"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="1b599ef7-4de5-42a0-87d9-8020ac372678"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="b6c261f4-db82-42b5-8da7-82de572d2116"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","NL");

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="8b1cf7ac-32b8-4186-bad7-a1140439007d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFULL" id="77ed2ea5-b502-4b43-826d-dd185fc7fd3c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - AdultFULL" id="ec5c973c-ee86-4c7a-a658-f80013506244"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="79fe21c7-e973-4b46-9351-7f87bc193771"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="dcd625c4-d948-4ffa-9586-86a028619cba"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="f036fd4a-ec3a-40f1-a5f9-db4de9f55559"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynmcMrbB5uIKVJGYbDyQTBYIGfKSEnIbNLElx5K55OtXMuAACVl2n1zdbnWfvuioLzmKo4rb4RxSQRgtreKIcjfXtrQspS5DnHCXohi4K7A77Nz13UrZdNHuiFbyvZb2UmviOmrUbL02rTi6bVWx3sDNmm43AVebtbAROjVpynkGPuUCUdHSKqZl65alW/bItFzLch2z3DCtZ600hpRL39KkbGpbUCve0uZCJK5hLJfL8rJaZunMqJimZfy+6w/xHGKktS83GeWB0vbWHpcDwBBFuIxZbFwaBzaXAXeHZEaRyFLYxgpOxTINs2lIm4CT2YVWnIXApyHLxWtEGSUYReQdqfrcgZizoNSJZiwlYh6fTMIylWMdVljHlk0vNOMQ2pmODhCmHOl8jqytrwGEkALFUHoc+C3t4ryu5UdHKaI8ZGnMD8X/hgfoAiKWQKDzXVpbaOc7/KJS7UvArk9xlHGygHs1rAnCwLfdBHy+q9JDCiFZ9QmXA7riCp2xD+9I3FTDIzPg4v80aK85GydjFGXQjt96rCYQ779bt0n85jheb/XTePYcylo5gH3jXFG0diMeDWUxRJsTmW8t/57gwSD0sxh6fXtomdXHxBgsO1Crd3+nD09x2hzj+GfVRL7n18ToKnuOE7Ji4wnu8UX/JuIPVl/Aj1m0EKwxnv14Gt7a1iSYLEOrauMAvXqLLnkaO73u7dB0Au/P9fTemfsJCyar/ro7+Nl5nD4k3Tr48yuvs17CX5MwjCajOarOmh3gXfFc6fU6rSKdPfyHut2dH2bTP4DFTlRj4HulG9klJL4nM6UhgR7mpm6iyIcLoEJrq1OKO9xM0h0JXNnDjWzWrxtW5erGcWpd02tedU2natabTevG7HhNr7IjmQ2KI4jXjIZExVKUuxmb7wHi2OVAA0j1Bcsk03HtG48eEqjk04G8BIxyGDFJz++wemXJ2szWDrX5oj5dOmE1gqlWumfiF/2VdkIB6SEl2weUPABMEgKKt9VYcznXXMhSvKFFJiKrvEBlCplk9lSRrFuxG47BSZxEoIAaMQuyCMrJPMkLY/DNt6IjzHPtoDvKL9vJtI7/7SogbQKiDLjK5QpkF+GLt8XeJXI64fp+wjv3nSwg6l7JcoqU4A2Sw18fU6LGoxgRmdHL9fDF2uEuzM8+/vmk8Q0o47geRaBgQfbC7l5u+QZI1mjvuvmGym/lbLHI8v7VFTum0r2kLMsxzIoxBJxJXluP2CtQo/BinPWIFMCPghf6Q4iZmNOhQAJiOXClXDxjaxgCV1uDLy/K6tyV5CCkLJ2AlfhKdx3JjUch/nYpwi5WdlL9ID9LlgYfHfvC114cmadcGgShMyWpB2R9Yi4wk26JpD6W7jv/ysFXwQ+VRZELLEIO1DQTcPpPSXFaS0MYs4wK39NyxT7P5jjFOgH3w+iTm5zKi92O/Ptyp5N8BDDIjZCT3L96ol11Behsj6u3QU/QdeU7uj5E1/6k/qzZq9PxjLf/AQ==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C812BF55620D9BE05307991F0AD9D2</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C812BF55620D9BE05307991F0AD9D2</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C812BF556E0D9BE05307991F0AD9D2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C84327C2AC7A11E05307991F0AB090</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_064246</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynmcMrYcm4srUEWAJEwCIRBymZeUIjcgxpaMJQPJ169kwAFyWXafXN1udZ++6KjPBI5Cx28IAYmknBVWUciEn2lrRpown2NBhc9wBMKXxB82uje+U7R9vD1iFDqtmvFSwi4KKq+eOX51bNOtOMjEmFTNMXGwW0YeKANlKkQKHSYkZrJmODZyTYRM5N7byEeOb58WnVLlj1F4gEQo38qkaBsbUCtRM6ZSxr5lLZfL4vK0yJOJ5dg2sp66N0MyhQgb9bN1RlmgpL6xJ8UACIQhKRIeWWfWns1ZIPwhnTAs0wQ2sYLvYtmWXbWUTSDo5MTIz0LQYWOeiU3MOKMEh/Qd6/p0QU55UGiEE55QOY2+TQLZ2rEJK2IS5LITw9qHdqSjPYSJwKaYYrTxNYAxJMAIFEaDTs04Oa5r2dH7BDMx5kkk9sX/hgfYAkIeQ2CKbVobaMc7/KJS9TMgfoeRMBV0AT09rDEmIDbdBHK8q0I/gTFd3VChBnQlNDprF96BuK5Gi05AyP/ToJ3mrJ084DCF+uPobnlbWXblNb1u08H1c9q/iuX5NR5XahmAXeNMkbd2LR4MZT5E6xPv+JfVRiX8BP3GnTUdlXDQ6Lp9GDwnwa/HKe6XLi/6/PmuVEnmb++9iFTu2iVvdglP5Lof/mW9x/u4I2dj5vE70uydO3cTt/J81f5DPfzenaE3sbrpPTNUhUV7JEasdPX0RE8n4kr+jkbuU2M0+L1qT5rzh8s5uSotW7fd3q3j8ddB9XThTpLKzVt7Nr294G5nWcvT2cG/r9ve+WH6OgMit6Ieg06rcKG6hOXPZKY1NDDHmakfa/IREpg06vqU5g4/VXRHA1/1cC3b5WbFPXXKTafRLDcQatveqV2uVtGF3Ti3q/aWZNYoDiA2ORtTHUtT7npsfgZIIl8ACyAxFzxVTCeMHzy2sMSFDhuoS8CZgHuu6BnNquh9Up3bolxBwbsXz0rjOIaZNAo9Lm/ZbdIYS0j2Odnd4+QBEBpT0MSt51qowRZS1WKOF6kMUXGBiwxSRe2JZlnfcSueJWgUh6CRWhEP0hCK8TTOKmOJ9dcxMRGZdtC+z27bt3kd/tuWQNkEVBsIncs5qDbCp8cF+d42ke8TLu8mvHXfSAOqL5aqp0woWSPZ//UxJno+8hlRGb00hy9oizs3P/r455PWD6Csw3rkgYIF3Qm7fbrVI6Boo77t5hwX58V0sUiz/pU1PSbKveIs5Fm2Yw2BpIrY3u75X2BW7sU66hXJgR8Ez/X7EFM5ZUOJJURq4AqZeMTaMASh14aOuimrY3eSvZCqdBJW8itdM1Qrj0b841ZEfKLtlLqvPkueBB8d+8LXThyVp9oaJGUTLekX5O2buSBcuaWK+3iy6/wrB18F31fmRc6xSDVQr6mE7/8UNKnVDEwIT5nstIxMsUu0GU75FoP/YfTJTcbl+XJH/327M2k2AgTUSiho5l+/0b6+AmyyQ9aboId8jZzzC88rOXarer7L161qy8mLsoeu/kn9WbNTp8MZr/8D</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07C84CEDC6DF2C1EE05307991F0A5377:FC033277"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>07C812BF556E0D9BE05307991F0AD9D2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C84327C2AC7A11E05307991F0AB090</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C812BF55620D9BE05307991F0AD9D2</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_064258</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_064258</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_064258</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>NL</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>07C84327C2AC7A11E05307991F0AB090</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C84327C2AC7A11E05307991F0AB090</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynmcMrYcm4srUEWAJEwCIRBymZeUIjcgxpaMJQPJ169kwAFyWXafXN1udZ++6KjPBI5Cx28IAYmknBVWUciEn2lrRpown2NBhc9wBMKXxB82uje+U7R9vD1iFDqtmvFSwi4KKq+eOX51bNOtOMjEmFTNMXGwW0YeKANlKkQKHSYkZrJmODZyTYRM5N7byEeOb58WnVLlj1F4gEQo38qkaBsbUCtRM6ZSxr5lLZfL4vK0yJOJ5dg2sp66N0MyhQgb9bN1RlmgpL6xJ8UACIQhKRIeWWfWns1ZIPwhnTAs0wQ2sYLvYtmWXbWUTSDo5MTIz0LQYWOeiU3MOKMEh/Qd6/p0QU55UGiEE55QOY2+TQLZ2rEJK2IS5LITw9qHdqSjPYSJwKaYYrTxNYAxJMAIFEaDTs04Oa5r2dH7BDMx5kkk9sX/hgfYAkIeQ2CKbVobaMc7/KJS9TMgfoeRMBV0AT09rDEmIDbdBHK8q0I/gTFd3VChBnQlNDprF96BuK5Gi05AyP/ToJ3mrJ084DCF+uPobnlbWXblNb1u08H1c9q/iuX5NR5XahmAXeNMkbd2LR4MZT5E6xPv+JfVRiX8BP3GnTUdlXDQ6Lp9GDwnwa/HKe6XLi/6/PmuVEnmb++9iFTu2iVvdglP5Lof/mW9x/u4I2dj5vE70uydO3cTt/J81f5DPfzenaE3sbrpPTNUhUV7JEasdPX0RE8n4kr+jkbuU2M0+L1qT5rzh8s5uSotW7fd3q3j8ddB9XThTpLKzVt7Nr294G5nWcvT2cG/r9ve+WH6OgMit6Ieg06rcKG6hOXPZKY1NDDHmakfa/IREpg06vqU5g4/VXRHA1/1cC3b5WbFPXXKTafRLDcQatveqV2uVtGF3Ti3q/aWZNYoDiA2ORtTHUtT7npsfgZIIl8ACyAxFzxVTCeMHzy2sMSFDhuoS8CZgHuu6BnNquh9Up3bolxBwbsXz0rjOIaZNAo9Lm/ZbdIYS0j2Odnd4+QBEBpT0MSt51qowRZS1WKOF6kMUXGBiwxSRe2JZlnfcSueJWgUh6CRWhEP0hCK8TTOKmOJ9dcxMRGZdtC+z27bt3kd/tuWQNkEVBsIncs5qDbCp8cF+d42ke8TLu8mvHXfSAOqL5aqp0woWSPZ//UxJno+8hlRGb00hy9oizs3P/r455PWD6Csw3rkgYIF3Qm7fbrVI6Boo77t5hwX58V0sUiz/pU1PSbKveIs5Fm2Yw2BpIrY3u75X2BW7sU66hXJgR8Ez/X7EFM5ZUOJJURq4AqZeMTaMASh14aOuimrY3eSvZCqdBJW8itdM1Qrj0b841ZEfKLtlLqvPkueBB8d+8LXThyVp9oaJGUTLekX5O2buSBcuaWK+3iy6/wrB18F31fmRc6xSDVQr6mE7/8UNKnVDEwIT5nstIxMsUu0GU75FoP/YfTJTcbl+XJH/327M2k2AgTUSiho5l+/0b6+AmyyQ9aboId8jZzzC88rOXarer7L161qy8mLsoeu/kn9WbNTp8MZr/8D</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20141114_064258</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa106c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1b599ef7-4de5-42a0-87d9-8020ac372678</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>dcd625c4-d948-4ffa-9586-86a028619cba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00005_Account and User Create with NL 111_UserDelete Standard Youth user107_200_OK_P0" searchProperties="true" id="98d2ef7e-c25a-46d5-a7c9-599c100cbc09"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="90ebfc3f-880b-4e1c-ae27-665b350c98d9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="aeabf4eb-2c04-4af3-bf0b-64f58f48e4d9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","NL");

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="7110f630-a687-4133-99d9-936347321ed4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUser" id="6075f493-a19b-4d36-b3f7-73a032813619"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - StandardYouthUser" id="85a9b5da-0306-4cf8-b3c0-3a2d3fc3f4e9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="c3e94946-eaa0-46bb-97c2-1baa8014775d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="9d8546c5-4b18-4569-871c-a07a2589c422"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="51fa901c-e72d-4216-ac2f-c5b2d629fa7b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvO4ZWyZuytQxXVCEpKZkAuTl5Qst40SWwJLBpKvH8mAA4Rk2X1ydbvVffqioz4TOI4cty0EJJJyVljFERNupm0aacJcjgUVLsMxCFcSd9weXblO0Xbx9ohRGPaaxnOAsYcbXs2sB9W6Wa7XfLNOSMWslomHgARlDDVlKkQKQyYkZrJpODYqmwiZqHxnIxc5roOKdrX6ZBQeIBHKtzIp2sYG1Eo0jamUM9eylstlcVkq8iS0HNtG1mR0NSZTiLHROltnlAVKWht7UvSBQBSRIuGxdWbt2Zz5wh3TkGGZJrCJ5X8Vy7bshqVsfEHDH0Z+FvwhC3gmdjHjjBIc0Xes6zMCOeV+oR2FPKFyGn+ZBLK1YxNWxCSozH4Y1j60Ex3tIUwENsUUo42vWwggAUagcH87bBo/TutadvQuwUwEPInFvvjf8ABbQMRn4Jtim9YG2ukOj1SqdQbEHTISpYIu4FoP6wwTEJtuAjndVeFXAgFdXVGhBnQlNDprF96BuK5Gj4Yg5P9p0E5z1k4ecJRCq7cKkN+fVsf33nQ8nMbhw5P0GvNQdaSZAdg1zhR5a9fiwVDmQ7Q+8RqUe/80bt/vLd+5eIhC9NMLexekevl4cxnLUlR/4Wi6Qu8Xf9DNb4wXo8fVcvpzUilFhNZv/FHHIzcvT/w8Rom/6K7ozEmvSoAfzofnl/ORnDxG3fv78XwoFunrb6+Ne5P54+Mk8l9eooaTVqyoXya43RnPHksPf64mF/XFk5N6eBZeP1Vf04s3/Dq59qpWuz/gzTydHfz7uu2dH6feCxC5FfUYDHuFgeoSlt+TmdZQ3wwyU3emyUdIYNJo6VOaO9xU0R31XdXDtWzXunXkdAaVSntg9xqdvl0p2bVGAw3sdq/Rc7Yks0ZxALHLWUB1LE2567H5HiCJXQHMh8Rc8FQxnTC+8djDEheG7FZdAs4E3HFFz2jlzet1LpzATyQKgzmpo9KbYIgYhWsub9hN0g4kJPukXN4j5VsgdEZBM7cebKEmW0hVjDlepDJCxQUuMkgVtyeaZl2nXK9YgsazCDRUK+Z+GkFxNp1lpbHE+uuYmIhMe9u/y67bl4kd/tvWQNn4VBsInUsHVB/hyOuCtol8nXBtN+Gt+3bqU32zVEFlQskayf6vjznRA5IPicrouTt+RlvcufnJxz+ftL4BZR3WIw/kL+hO2O3brV4BxRutbTfnuDgvpotFmvWvpvkxUe4VaaGKZTvWGEiqmO3tjr8Cs3Iv1knPSA78IHiu34eYyikbSywhVgNXyMQT9oYxCL03DNVVWZ26lOyFVKWTsJLHdN1I7Twa8bdrEXGJtlPqX+qz5In/0bEjvnbiqDzV2iApC7Wkn5C3L+aCcOWWKvLjya7zYw6OBd9X5kXOsUg1UF4q4es/Bc1qTQMTwlMmhz0jU+wybYZTvs3A/TD65CYj83y7o/++3pk0GwECaicUNPOvH2lXXwEW7rD1JughYZe7/UG/3+04XcfeJexOu9vJi7KHrvVJ/VmzU6fDGW/9BQ==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C84CEFEECB2C20E05307991F0ABACB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C84CEFEECB2C20E05307991F0ABACB</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C812BF55AF0D9BE05307991F0AD9D2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C84327C2CB7A11E05307991F0AB090</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_064317</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynmcMr7gBHAFqowhCQlhMjG5TF5SQm6DJrbkWDKQ+fqVDDiYXJbdJ1e3W92nLzrqU46S2HY9ziEThNHaKokpdwttR8sz6jLECXcpSoC7AruBdz1y7brpou0RrTbsd7TntuU02ihq6K2o5ejOsRPpU6vV1Fu2FeKWNbWPT1rSlPMchpQLREVHs03L0S1Lt5yJabmW7TZa9bZpP2m1e8i49C1N6qa2AbXiHW0uROoaxnK5rC8bdZbNDNs0LePxehTgOSRI656uMyoCZd2NPa6HgCGOcR2zxDg1KjanIXcDMqNI5BlsYoVfxTINs21Im5CT2ZFWnoVwSCNWiD6ijBKMYvIXqfpcg5izsObFM5YRMU++TMIylWMdVljHlkOPNKMK7UBHFYQZRzqfI2vj6xYiyIBiqN3dDjva0WFdK45OMkR5xLKEV8X/hgfoAmKWQqjzbVobaIc7/KRS3VPA7pDiOOdkAWM1rCnCwDfdBHy4q9pNBhFZjQiXA7riCp2xC29PXFejT2bAxf9p0E5z1k7uUZxD1w+e+PLyhT0EzDdZOnw8vryemxE+v1l2CgC7xoWibO1a3BvKcojWJ4Ze8IivvKuA3V+sLi6N9vlMhuvb04fLx+XkZnDOeXr+uhzHD97V2V3mj9EI4Om35Yz/oLv2i4n6L/OLlkmB0nEbOUOOflxd81t8grwrZzmPZ6tzuBd4ZJOHNzwZZb1G0Jsm98Sc3xmry1/th8Fi2gTh34XoBKGbN3ETpr/tywFr9qKX0Z1gb3H0I3pKfg28TpnODv6qbnvng3z6B7DYimoMhv3amewSEt+TmdKQUI8KUzdV5MMFUKF11SnFHW4u6Y6EruzhWjabfstp2E3f9ntNz7IG5nHDbLbb1pnp9cy2uSWZNYo9iD6jEVGxFOWux+Z7gDhxOdAQMn3Bcsl0XPvGYx8JVBvSW3kJGOUwYZKerVxkVouaLylJiCVvSUTn05a9jJFWGzPxk/7MvEhAViVlp0LKt4BJSkAxtxpsLiebC1mMV7TIRWzVF6hOIZfcnimadW2ndWxwkqQxKKhGwsI8hno6T4vSGHz9tXWEeaG9HUyK6/ZlYvv/tjWQNiFRBlzl0gPZR/jkdbG3iXydcHM34a17Lw+JulmyoCIjeI2k+ut9TtSAlEMiM3r2g2dri7s0P/j4x5PGN6CM/XqUgcIF2Qm7fbvlKyB5o7vt5iuqv9bzxSIv+tdU/JhJ95K0rGPDtI0AcC6Z7W3CXoAapRfjoGekBL4XvNRXIeZiTgOBBCRy4GqFeMDeEABXe8NQXpXVoUtJJaQsnYCV+Eznx3LnUYi/XYuwi5WdVN/Iz5Jl4XvHPvG1E0fmKdcGQehMSeoJeftiLjCTbokkP5btOv/MwWfBq8qyyCUWIQdqmgv4+k9NsVpHQxiznIphXysUu0xb4BRvKbjvRh/cFGRebnfk39c7nRQjgEHuhJwU/tUj7aorQGc7bL0J+oGw/cHZYOD3bN82K4Tt+b2yKBV03Q/qj5qdOu3PePcf</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07C8520031413553E05307991F0AFD5C:42EDD0D9"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>07C812BF55AF0D9BE05307991F0AD9D2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C84327C2CB7A11E05307991F0AB090</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C84CEFEECB2C20E05307991F0ABACB</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_064334</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_064334</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_064334</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>NL</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>07C84327C2CB7A11E05307991F0AB090</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C84327C2CB7A11E05307991F0AB090</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynmcMr7gBHAFqowhCQlhMjG5TF5SQm6DJrbkWDKQ+fqVDDiYXJbdJ1e3W92nLzrqU46S2HY9ziEThNHaKokpdwttR8sz6jLECXcpSoC7AruBdz1y7brpou0RrTbsd7TntuU02ihq6K2o5ejOsRPpU6vV1Fu2FeKWNbWPT1rSlPMchpQLREVHs03L0S1Lt5yJabmW7TZa9bZpP2m1e8i49C1N6qa2AbXiHW0uROoaxnK5rC8bdZbNDNs0LePxehTgOSRI656uMyoCZd2NPa6HgCGOcR2zxDg1KjanIXcDMqNI5BlsYoVfxTINs21Im5CT2ZFWnoVwSCNWiD6ijBKMYvIXqfpcg5izsObFM5YRMU++TMIylWMdVljHlkOPNKMK7UBHFYQZRzqfI2vj6xYiyIBiqN3dDjva0WFdK45OMkR5xLKEV8X/hgfoAmKWQqjzbVobaIc7/KRS3VPA7pDiOOdkAWM1rCnCwDfdBHy4q9pNBhFZjQiXA7riCp2xC29PXFejT2bAxf9p0E5z1k7uUZxD1w+e+PLyhT0EzDdZOnw8vryemxE+v1l2CgC7xoWibO1a3BvKcojWJ4Ze8IivvKuA3V+sLi6N9vlMhuvb04fLx+XkZnDOeXr+uhzHD97V2V3mj9EI4Om35Yz/oLv2i4n6L/OLlkmB0nEbOUOOflxd81t8grwrZzmPZ6tzuBd4ZJOHNzwZZb1G0Jsm98Sc3xmry1/th8Fi2gTh34XoBKGbN3ETpr/tywFr9qKX0Z1gb3H0I3pKfg28TpnODv6qbnvng3z6B7DYimoMhv3amewSEt+TmdKQUI8KUzdV5MMFUKF11SnFHW4u6Y6EruzhWjabfstp2E3f9ntNz7IG5nHDbLbb1pnp9cy2uSWZNYo9iD6jEVGxFOWux+Z7gDhxOdAQMn3Bcsl0XPvGYx8JVBvSW3kJGOUwYZKerVxkVouaLylJiCVvSUTn05a9jJFWGzPxk/7MvEhAViVlp0LKt4BJSkAxtxpsLiebC1mMV7TIRWzVF6hOIZfcnimadW2ndWxwkqQxKKhGwsI8hno6T4vSGHz9tXWEeaG9HUyK6/ZlYvv/tjWQNiFRBlzl0gPZR/jkdbG3iXydcHM34a17Lw+JulmyoCIjeI2k+ut9TtSAlEMiM3r2g2dri7s0P/j4x5PGN6CM/XqUgcIF2Qm7fbvlKyB5o7vt5iuqv9bzxSIv+tdU/JhJ95K0rGPDtI0AcC6Z7W3CXoAapRfjoGekBL4XvNRXIeZiTgOBBCRy4GqFeMDeEABXe8NQXpXVoUtJJaQsnYCV+Eznx3LnUYi/XYuwi5WdVN/Iz5Jl4XvHPvG1E0fmKdcGQehMSeoJeftiLjCTbokkP5btOv/MwWfBq8qyyCUWIQdqmgv4+k9NsVpHQxiznIphXysUu0xb4BRvKbjvRh/cFGRebnfk39c7nRQjgEHuhJwU/tUj7aorQGc7bL0J+oGw/cHZYOD3bN82K4Tt+b2yKBV03Q/qj5qdOu3PePcf</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20141114_064334</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa106c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>90ebfc3f-880b-4e1c-ae27-665b350c98d9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9d8546c5-4b18-4569-871c-a07a2589c422</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00007_Account and User Create with LU 111_UserDelete SecondFull user 107_200_OK_P0" searchProperties="true" id="1a0e97c7-3777-4298-9a2b-193661b7292f"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="3081a21d-006b-4374-a0fe-7efe70ce892e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="3cbfe0c0-968b-4955-b177-3f5e611e94ea"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","LU");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="a5d70566-10c0-497e-9fd3-253329837098"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFULL" id="3454b52c-f38d-470a-adc1-6ca39f45025a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - AdultFULL" id="a4e5dfa5-d4a8-4da7-a702-9aae4eacb25f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="c896c927-6c39-4809-be36-67e0beaf42cb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="19dd4108-bff5-409f-8260-841aeaed4c0a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="26085d1a-ed39-44ce-aa6b-a32f9e1884f7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VyvcxZbxgQ3AFqlgTUlkISyaTl5SQG6PElowls+TrRzLgACEZZp5c3W51n1501FccRaHtNTiHRBBGC6sopNzLtDUtTajHECfcoygC7gnsDRv3d55dND20O6IVeu2a9jZ14dKtYlefmE5Zd+ypq1+WsKUjszqdWKgyAedSmnKeQo9ygaioabZpObpl6ZYzMi3Psj23XKyUyq9a4RkSLn1Lk6KpbUGteE2bCRF7hrFcLovLUpElgWGbpmW83N8N8QwipNWvNhllgZL61h4XfcAQhriIWWRcGQc2Vz73hiSgSKQJbGP5P8UyDbNqSBufk+CPlp8Fv0enLBNbiDJKMArJJ1L1uQcxY36hEQYsIWIW/ZiEZSrHOqywji2H/tGMQ2hnOjpAmHCk8xmytr4GMIUEKIbCeNCraX/O61p2dJQgyqcsifih+N/wAF1AyGLwdb5LawvtfIcnKlW/Auz1KA5TThbwoIY1Rhj4tpuAz3dV6CcwJas7wuWArrhCZ+zDOxI31WiTALj4Pw3aa87GyTMKU6ivgovU8GEyIRdNp4LLVXcxHsztm6f537UMwL5xpshbuxGPhjIfos2J62AJlcb9ajlrXPeXbaNlzCcxGSb+xe1rZ/iyMu2P9O5WWOPGy2cHuexzIuvBOyX8Mbx76Qnbb330b/tVwarlz3V/TMN2s/o8/kivm/HN7H7wBJ316+VNcDsm79XBDR6mk8gOZka39XgRuTzGo+TlOQ5Gq9vor/5Hs9L9jOYdM2aTez7urJ4eaDcqsy5eJI8PQS1PZw//oW5352WYd8BiJ6ox6LULXdklJH4nM6Uhvj7NTL1YkQ8XQIVWV6cUd3ippDvie7KHG9mstC5d2c2S5VRKrlvqmG7JrFSrVtdsdNtua0cyGxRHEFuMTomKpSh3Mza/A8SRx4H6kOgLlkqm49ovHttIoEKPDuQlYJTDiEl6tpYpSUmZsXe6XjuiYgdTVorKKdYKD0w80sekMRWQHHKyc8DJA8AkJqCIW801l4PNhazFHC1SEVrFBSpSSCW1J4plPdu5dA1OojgEhdSImJ+GUIxncVYZg2++to4wz7SDzii7bT/mdfxvVwJp4xNlwFUuTZBthBOPi7NL5OeEK/sJ79w3Up+oiyXrKRKCN0gOf32NiZqPfEZkRm+t4Zu1w52bn338+0njF1DGcT3yQP6C7IXdPd3yEZC0Ud91c46K82K6WKRZ/yqKHhPpXnKW5RqmbQwBp5LY1iP2AdTIvRhnvSI58KPguf4QYipmdCiQgEgOXCETz1gbhsDV2tCTN2V17k5yEFKWTsBKnNK1QrnyKMS/bkXYw8pOqvvys2SJ/9WxE7724sg85dYgCA2UpF6Q9Q9zgZl0SyT3sWTf+SkHp4IfKvMi51iEHKhJKuDnPwVFajUNYcxSKnptLVPsE22GU6xj8L6MvrnJuDxf7si/b3c6yUYAg1wJOcn8qzfaU1eABntkvQ36ja9LnZZ8f0tygJoZX7sbvi53HTsvygG6+jf1d81enY5nvP4P</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C853EC0003201BE05305991F0A6F42</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C853EC0003201BE05305991F0A6F42</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C8520031473553E05307991F0AFD5C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C853F473C12048E05305991F0AF307</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_064352</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZrU/I6EP4rTN+PTmlSyq0jzGDVV96jqNQL+sWJ6QLxtAk2aUF//UkKVMDL4ZxPnd1udp+95MkeSpLErt+TElLFBK8skphLv9B2rCzlviCSSZ+TBKSvqB/2Ls59t4p8sj5iVfrHHeupjjAZozHYqNVs216z7drtcfRsk9a41YxaDVQHT5tKmUGfS0W46lguwp6NsY29G4R9XPNRu4owfrQqd5BK7VubVJG1ArWQHWuq1Mx3nPl8Xp3XqiKdOC5C2BldnId0CgmxuofLjIpAaXdlT6sRUIhjWqUicQ6dLZvDSPohm3CishRWsaLvYiEHtR1tE0k2+WWVZyHq87EoxIBwwRklMXsnpj4XoKYiqvTiiUiZmibfJoGRcWzDgtoUe/yX5WxD29PRFsJUEltOCV75GsIYUuAUKrfDfsf6tV/XiqM3KeFyLNJEbov/DQ/wHGIxg8iW67RW0PZ3+EWluodA/T6ncSZZDgMzrDNCQa66CXR/V5WrFMZscc6kHtCFNOicTXg74rIax2wCUv2fBm00Z+nkjsQZdOFqSgaecMV1Ht1H6M+Zk4eq7riv83mnALBpXCjK1i7FnaEsh2h54uKsdXnae5ynRw+4hgN+fzC6nV6KLLkOsiBPXn67aBSNZoF6uMeTs/DsbdZwQ9Zoh3x+LQbxXypNwWsHj5PzHn2d/74dTLD6854nI/UYxI2xah+cPDxk979xK/UasnYXDV49bzJ6RGz0Xru4C9HNiTh4zujw4EIkiwHCjUbvil0nedxqNe/eJ40h89rH9SP1x+uU6Wzg39at73yYPb8AVWvRjEH/uHKqu0TUz2RmNCyyx4WpPzPkIxVwZXXNKcMdfqbpjkW+7uFSRs2gVa+des1agF3ktU5QvYbq7TY+Rb3TGmquSWaJYgdiIPiYmViGcpdj8zNAmvgSeASpnYtMM520fvB4TBSp9PlQXwLBJdwITc+4LuPmmLv45WVOcCYyRlw09aK3tlUZCHXJL9PeWEG6TcreFikPgbIZA8PcZrClnmypdDFeSZ6pGFdzUuWQaW5PDc36rteqO5IlsxgMVCcRURZDdTadFaVx5PLr2oTKQjs8uSmu27eJ7f5b10DbRMwYSJPLEeg+wqfXxfXr60S+T7i5mfDafS+LmLlZuqAqZXSJZPvXx5yYASmHRGf0FIRPeI27NN/7+OeTzg+gnN16lIGinG2EXb/d+hXQvNFdd/OVVF+rWZ5nRf+ahh9T7V6TFq47yHVCoJlmtrcb8Tdwp/Ti7PWMlMB3gpf6bYiZmvJQEQWJHrhKIe6xN4Qgzd7Q11dlse9SshVSl07BQn2lC2K98xjEP65F1KfGTquv9Gcu0uijY1/42oij89Rrg2J8YiTzhLx9MxdUaLdMk59IN51/5eCr4NvKssglFqUH6jlT8P2fimG1jkUoFRlX/WOrUGwybYFTvc3A/zD65KYg83K7Y/++3tmsGAEKeieUrPBvHmnfXAE+2WDrVdDPhH0S6Ae4pgfoaJOwG6eeWxZlC133k/qzZqNOuzPe/Qc=</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07C85200316C3553E05307991F0AFD5C:528BF0E4"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>07C8520031473553E05307991F0AFD5C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C853F473C12048E05305991F0AF307</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C853EC0003201BE05305991F0A6F42</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_06444</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_06444</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_06444</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>07C853F473C12048E05305991F0AF307</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C853F473C12048E05305991F0AF307</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZrU/I6EP4rTN+PTmlSyq0jzGDVV96jqNQL+sWJ6QLxtAk2aUF//UkKVMDL4ZxPnd1udp+95MkeSpLErt+TElLFBK8skphLv9B2rCzlviCSSZ+TBKSvqB/2Ls59t4p8sj5iVfrHHeupjjAZozHYqNVs216z7drtcfRsk9a41YxaDVQHT5tKmUGfS0W46lguwp6NsY29G4R9XPNRu4owfrQqd5BK7VubVJG1ArWQHWuq1Mx3nPl8Xp3XqiKdOC5C2BldnId0CgmxuofLjIpAaXdlT6sRUIhjWqUicQ6dLZvDSPohm3CishRWsaLvYiEHtR1tE0k2+WWVZyHq87EoxIBwwRklMXsnpj4XoKYiqvTiiUiZmibfJoGRcWzDgtoUe/yX5WxD29PRFsJUEltOCV75GsIYUuAUKrfDfsf6tV/XiqM3KeFyLNJEbov/DQ/wHGIxg8iW67RW0PZ3+EWluodA/T6ncSZZDgMzrDNCQa66CXR/V5WrFMZscc6kHtCFNOicTXg74rIax2wCUv2fBm00Z+nkjsQZdOFqSgaecMV1Ht1H6M+Zk4eq7riv83mnALBpXCjK1i7FnaEsh2h54uKsdXnae5ynRw+4hgN+fzC6nV6KLLkOsiBPXn67aBSNZoF6uMeTs/DsbdZwQ9Zoh3x+LQbxXypNwWsHj5PzHn2d/74dTLD6854nI/UYxI2xah+cPDxk979xK/UasnYXDV49bzJ6RGz0Xru4C9HNiTh4zujw4EIkiwHCjUbvil0nedxqNe/eJ40h89rH9SP1x+uU6Wzg39at73yYPb8AVWvRjEH/uHKqu0TUz2RmNCyyx4WpPzPkIxVwZXXNKcMdfqbpjkW+7uFSRs2gVa+des1agF3ktU5QvYbq7TY+Rb3TGmquSWaJYgdiIPiYmViGcpdj8zNAmvgSeASpnYtMM520fvB4TBSp9PlQXwLBJdwITc+4LuPmmLv45WVOcCYyRlw09aK3tlUZCHXJL9PeWEG6TcreFikPgbIZA8PcZrClnmypdDFeSZ6pGFdzUuWQaW5PDc36rteqO5IlsxgMVCcRURZDdTadFaVx5PLr2oTKQjs8uSmu27eJ7f5b10DbRMwYSJPLEeg+wqfXxfXr60S+T7i5mfDafS+LmLlZuqAqZXSJZPvXx5yYASmHRGf0FIRPeI27NN/7+OeTzg+gnN16lIGinG2EXb/d+hXQvNFdd/OVVF+rWZ5nRf+ahh9T7V6TFq47yHVCoJlmtrcb8Tdwp/Ti7PWMlMB3gpf6bYiZmvJQEQWJHrhKIe6xN4Qgzd7Q11dlse9SshVSl07BQn2lC2K98xjEP65F1KfGTquv9Gcu0uijY1/42oij89Rrg2J8YiTzhLx9MxdUaLdMk59IN51/5eCr4NvKssglFqUH6jlT8P2fimG1jkUoFRlX/WOrUGwybYFTvc3A/zD65KYg83K7Y/++3tmsGAEKeieUrPBvHmnfXAE+2WDrVdDPhH0S6Ae4pgfoaJOwG6eeWxZlC133k/qzZqNOuzPe/Qc=</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20141114_06444</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa106c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3081a21d-006b-4374-a0fe-7efe70ce892e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>19dd4108-bff5-409f-8260-841aeaed4c0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00009_Account and User Create with AT 111_UserDelete SecondFull user 107_SUCCESS_P0" searchProperties="true" id="2945f1bb-8e4c-46b1-83b2-c78a94d4e64c"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="f7c301fb-885a-4c26-8e84-ab0a6cf05616"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="db133ed6-7805-46d3-8fcc-14ab41e45c62"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AT");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="7e2ae624-7a86-40bd-8e32-25e735f2cb09"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFULL" id="d94fc416-c66c-4a6f-afe9-97cffe963222"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - AdultFULL" id="8aa57243-5087-4d6f-a5a8-d5a1f35a75ec"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="6682dbf0-0f2a-4c00-9140-a79fd13940ab"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="632a6294-a138-4474-8178-190b81b66f58"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="1d594ba6-0eda-4735-8487-2750d1b4c6d8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtc6JIEP4rFvtxC2FQglDRKiO650aTrJjcrl9S49DqJDAQZlCSX38zGImal/PuE9VNT/fTL/NMn3McR5bX5RwyQRNWK+KIca/UtrU8Y16COeUewzFwTxAv6I5HnlU3Pbw7otWGflu7d7DbsM6gpTvgOHrTIme6i4mrW2gxt9HiDDuWKU05z2HIuMBMtDXLRE0dIR01pybyUMOz7LrlODOtdgcZl76lSV2e2oIqeFtbCZF6hrHZbOqbRj3JloZlmsj4PR4FZAUx1jrn24zKQFnn1Z7UQyAQRaROktg4Nw5szkPuBXTJsMgzeI0VfhbLNEzXkDYhp8tvWnUWwiFbJKXYwyxhlOCIvmBVnzGIVRLWutEyyahYxZ8mgUzlWIeC6AQ12TfNOIR2oqMDhBnHOl9h9OprAgvIgBGo3U6Gbe3baV0rj04zzPgiyWJ+KP43PMDWECUphDrfpfUK7XSHH1Sqcw7EGzIS5Zyu4UoNa4oJ8NduAjndVe0mgwUtRpTLAS24QmfswzsSt9Xw6RK4+D8N2mvO1skdjnLoIBRbN3/P0Lg1C+K7H6PW7GXZF0aSLvvtEsC+camoWrsVj4ayGqLtiQcejNPLXyO39X21+YVn3HbGl87ijx/dXpLC+fEY3l4YRte8BD95RvNecVXED3268LuGP48ngq/dqHH9YvXM31F6ezXdJDzeuP3V2SooRtllgMZ/RQ6e26b958XByfU4SCcFcnzLn99YFA/yH+7y58OSFNdk1Z38hOco69tL1IimwUVuxjP3Eg/O5t9nTyPSrtLZw3+o2935IJ8/ABE7UY3B0K8NZJew+JrMlIaG+qI09VJFPlwAE1pHnVLc4eWS7mjoyR5uZdPptZB1MbDtwYXpuxd9026Yjuuigdn1Xd/akcwWxRHEXsIWVMVSlLsdm68BktjjwELI9HWSS6bj2hcefSxwbcgm8hIkjMM0kfSM6MKJ7MdwwxcvBbJbETyaa/bEzDOtdpWIa3addRcCskNSbh6Q8gQITSko5laDzeVkcyGL8YTXuYhQfY3rDHLJ7ZmiWc9qtmyD0ziNQEE14iTMI6inq7QsjcG3X0vHhJfaSX9aXrdPEzv+t6uBtAmpMuAqlwuQfYQPXhe0S+TzhJ39hHfuu3lI1c2SBRUZJVskh7/e5kQNSDUkMqP7XnCPdrgr85OPvz9pfAHKOK5HFShc072wu7dbvgKSNzq7bj7h+lM9X6/zsn+O4sdMupekhWzDtIwASC6Z7XmaPAIzKi/GSc9IBfwoeKU/hJiLFQsEFhDLgauV4gl7QwBc7Q1DeVWKU5eSg5CydAIK8ZGuF8mdRyH+ci0iHlF2Un0jP5skC9869oGvvTgyT7k2CMqWSlJPyPMnc0ES6ZZK8kuyfecfOfgo+KGyKnKFRciBmucCPv9TU6zW1jAhSc7E0NdKxT7TljjFcwrem9E7NyWZV9sd/ff1TqflCBCQOyGnpX/1SHvqCrDlHlu/Bj0mbLsxaDoN37fMZqskbHtL2ANJ3VVRDtB13qnfa/bqdDzjnX8A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C853F473DD2048E05305991F0AF307</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C853F473DD2048E05305991F0AF307</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C812BF55FB0D9BE05307991F0AD9D2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C853F32E3E2043E05305991F0ABE1C</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_064421</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMrZ8CeAKVHFN2ITMTGCyk32ZUuQGBLZEJBlIvn4kAx4gJMvuk0vt1unTFx3pSuI08aKmlCAU5ay0ThMmo9xatzLBIo4llRHDKchIkWjYHNxFXtmN8G6LVep36tav2I0DrxpXbTL2KnaAYmTXYuLaz27oV59RDVDF065SZtBnUmGm6pbnosBGyEbByEUR8iO/Wg4v0T9W6RGE1NjapexaW1JrWbemSi0ix1mtVuWVX+Zi4niui5yfg7shmUKKrcbVJqM8kGhs/Uk5BgJJQsqEp86Vc+BzFctoSCcMq0zANlb8USzXcWuO9oklnXyxir0Q99mY58s2ZpxRghP6hk19BqCmPC41kwkXVE3TD5NArgG2YU1sggL2xXIOqZ0JdMBQSGzLKUZbrAcYgwBGoPTjoV+3vpzXtXzrSGAmx1yk8nD53/gAW0LCFxDbcpfWltr5gCcq1bgCEvUZSTJJl3BvhnWBCchtN4GcD1X6JmBM13dU6gFdS8PO2ad3tNxUo0MnINX/adBeczYgjzjJoBH2u5XHwZQoWhld3ly/zHF2WaPXlds3t54T2HfODUVrN8ujoSyGaLPjNrilTnqHb4Z31Wt0zVH/gtY6wrt7ZBctoZbNNnp7Swa4Ov/5N60ko9qA3Ph+1X+7DsRFF9+PerMf3mr8ELi1wVNLOq2Xp1Dw7z8vgsu0cxvMv4+G4SPM5hO6bl5PZhTQgvijv7wweApJF4uAXazX4SzrNcPp0lEch/3vlVbQe561Hvn8CfwpztbLy5vZZFUv0tnjf2jbnflh9jwDonZLMwb9Tqmnu4TV52JmLDS2x7lrtDDiIxUwZTXMLqMdUabljsaR7uFm7Vba1dDv+V7X73pu4Hf1iXHDWg313Gari9o7kdmwOKLY5mxMTSwjuZux+ZwgSSMJLAZhL3mmlU5anyB2sMKlPnvQh4AzCSOu5RnNWcJgzPxVuq4h+Sxr1bQ2e8UaqXTP1Vf2VTTHCsShKAcHovwAhC4oGOU2gy31ZEuli/GCl5lKUHmJywwyre3CyGzkBdXQkTRdJGCoOimPswTKi+kiL40jN1/PxkTm1ofuKD9uHyZ2/G9XA+0TU+MgTS4t0H2EE7eLt0vk44Qr+wnv4JtZTM3J0gVVgpINk8Nff+bEDEgxJDqjX+3hL7TjXbifvf39TucTUs5xPYpA8ZLuhd3d3foW0LrR2HXzBZdfytlymeX9qxh9FBpeixYKHddzhkAyrWyvIz4H5hQozlnXSEH8KHhhP6SYqSkbKqwg1QNXypdnvBuGIM27oa+PyvrcR8lBSF06BWt1ytZO9JvHMP70WUQiYvy0+Zv+rLiI/3TsBNZeHJ2nfjYoyiZmZa6Q1w/mgnANS7X4cbEPfgrgVPBDY1HkgovSA/WcKfj4T8moWt3ChPCMqX7Hyg37SpvzVK8LiP44vYPJxbx43dF/f97ZNB8BAvpNKGmOby7pyBwBNtlT623QE4IdVPxORwt2dV+we75bKYpywK7xzvzeslen4xlv/AY=</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07C812BF561C0D9BE05307991F0AD9D2:7CAEF2F8"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>07C812BF55FB0D9BE05307991F0AD9D2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C853F32E3E2043E05305991F0ABE1C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C853F473DD2048E05305991F0AF307</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_064433</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_064433</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_064433</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>AT</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>07C853F32E3E2043E05305991F0ABE1C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C853F32E3E2043E05305991F0ABE1C</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMrZ8CeAKVHFN2ITMTGCyk32ZUuQGBLZEJBlIvn4kAx4gJMvuk0vt1unTFx3pSuI08aKmlCAU5ay0ThMmo9xatzLBIo4llRHDKchIkWjYHNxFXtmN8G6LVep36tav2I0DrxpXbTL2KnaAYmTXYuLaz27oV59RDVDF065SZtBnUmGm6pbnosBGyEbByEUR8iO/Wg4v0T9W6RGE1NjapexaW1JrWbemSi0ix1mtVuWVX+Zi4niui5yfg7shmUKKrcbVJqM8kGhs/Uk5BgJJQsqEp86Vc+BzFctoSCcMq0zANlb8USzXcWuO9oklnXyxir0Q99mY58s2ZpxRghP6hk19BqCmPC41kwkXVE3TD5NArgG2YU1sggL2xXIOqZ0JdMBQSGzLKUZbrAcYgwBGoPTjoV+3vpzXtXzrSGAmx1yk8nD53/gAW0LCFxDbcpfWltr5gCcq1bgCEvUZSTJJl3BvhnWBCchtN4GcD1X6JmBM13dU6gFdS8PO2ad3tNxUo0MnINX/adBeczYgjzjJoBH2u5XHwZQoWhld3ly/zHF2WaPXlds3t54T2HfODUVrN8ujoSyGaLPjNrilTnqHb4Z31Wt0zVH/gtY6wrt7ZBctoZbNNnp7Swa4Ov/5N60ko9qA3Ph+1X+7DsRFF9+PerMf3mr8ELi1wVNLOq2Xp1Dw7z8vgsu0cxvMv4+G4SPM5hO6bl5PZhTQgvijv7wweApJF4uAXazX4SzrNcPp0lEch/3vlVbQe561Hvn8CfwpztbLy5vZZFUv0tnjf2jbnflh9jwDonZLMwb9Tqmnu4TV52JmLDS2x7lrtDDiIxUwZTXMLqMdUabljsaR7uFm7Vba1dDv+V7X73pu4Hf1iXHDWg313Gari9o7kdmwOKLY5mxMTSwjuZux+ZwgSSMJLAZhL3mmlU5anyB2sMKlPnvQh4AzCSOu5RnNWcJgzPxVuq4h+Sxr1bQ2e8UaqXTP1Vf2VTTHCsShKAcHovwAhC4oGOU2gy31ZEuli/GCl5lKUHmJywwyre3CyGzkBdXQkTRdJGCoOimPswTKi+kiL40jN1/PxkTm1ofuKD9uHyZ2/G9XA+0TU+MgTS4t0H2EE7eLt0vk44Qr+wnv4JtZTM3J0gVVgpINk8Nff+bEDEgxJDqjX+3hL7TjXbifvf39TucTUs5xPYpA8ZLuhd3d3foW0LrR2HXzBZdfytlymeX9qxh9FBpeixYKHddzhkAyrWyvIz4H5hQozlnXSEH8KHhhP6SYqSkbKqwg1QNXypdnvBuGIM27oa+PyvrcR8lBSF06BWt1ytZO9JvHMP70WUQiYvy0+Zv+rLiI/3TsBNZeHJ2nfjYoyiZmZa6Q1w/mgnANS7X4cbEPfgrgVPBDY1HkgovSA/WcKfj4T8moWt3ChPCMqX7Hyg37SpvzVK8LiP44vYPJxbx43dF/f97ZNB8BAvpNKGmOby7pyBwBNtlT623QE4IdVPxORwt2dV+we75bKYpywK7xzvzeslen4xlv/AY=</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20141114_064433</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9eed9da-b266-4cd4-b688-1a9f8d10c2f9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58219bfe-c940-4645-9a8a-4ae7275d674d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00010_Account and User Create with AT 111_UserDelete Standard Youth user107_SUCCESS_P0" searchProperties="true" id="310a0054-0fa3-4f1b-86b5-60ea100fc254"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="b380659b-6163-4989-975a-47db139267e9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="23008c6f-2970-4ba5-8538-58100f72adad"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AT");

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="12b9e2fd-4e3b-4709-a282-d8b89defb684"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUser" id="574330bf-79f2-47e5-929e-e0ab04d5dff7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - StandardYouthUser" id="6e48262e-3528-4bdc-9b53-1259a2e797a6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="37eb5f25-bafe-4795-b650-da0cd9019746"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="8425bde4-b27e-43f9-a79a-86c0ecd6c0f4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="62665f69-a78b-4730-a319-35300eef2501"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc+o4DP4rTM7jTsiFUCBTmOFSWk6htEBpty8dH0cB08QJsRPS/vq1A6RAgWX3KSNFlj5d/FnXDPmeaTcZg4iTgBZS36PMzrR1JY6oHSBGmE2RD8zm2B43B33bLOo22h5RCr1OXXnHRtUt6VBRwShVVEsv6WoVsKE6V7hiVk0w3TISpozF0KOMI8rriqkblmoYqmFNdMM2LNuqFUvl2ptSmELEhG9hUtSVDaiU1ZU556GtaavVqrgqFYNoppm6bmivg/4Yz8FHSuN6nVEWKGps7HHRAQyeh4s48LVrbc/m2mH2mMwo4nEEm1jOqVi6ptc0YeMwMvul5GfB6VE3yMQ2ogElGHnkC8n6DIDPA6fQ9GZBRPjcP5mEoUvHKqRYxYZFfynaPrQLHe0hjBhS2RwZG18jcCECiqHwPOrVlV+XdS07OokQZW4Q+Wxf/G94gCbgBSE4KtumtYF2ucMjlWpcA7Z7FHsxIwk8yGENEQa26Sbgy10VHiNwSdonTAxoyiQ6bRfegbiuRofMgPH/06Cd5qydTJEXQ+NlPm4RguEjfRvM2YK8/r67f5y4fc+w6hmAXeNMkbd2LR4MZT5E6xMxsz6aNbJsvfVely/PHMLOx/SxNR1NP26ukq5FML11lxY8JXf+32Z1iMe6s+g+BOyz6puV21kXGQZpJXzhJ6vR1GR45t4tPe+l1RqWpi4ZPDnP5eVDdE/iqXHXTHHsVu9peoe/+v2/MGt+faVPjh9GWtpG1oDf1vi4Oeyvvq7mry0e6zpPFm9P7df27+F4Vs/T2cG/r9ve+XH8ZwGYb0U5Br1OoSu6hPh5MpMa4qhuZmqHknwYB8qVhjwlucOOBd0RxxY9XMt6pV0tN5vdq0q7ZdVKlRu9XNIrtZrR1Zsds1TekswaxQHEdkBdImNJyl2PzXmA2LcZUAciNQliwXRMOeOxgzgq9OhIXIKAMpgEgp6NatWfl+eel6KPmcGYUQ7TBY6jKFEKDwEf0mHUdDlE+6Rs7ZHyCDAJCUjmloPNxGQzLoqxREnMPaOYoCKFWHB7JGnWNq1qWWPEDz2QUDU/cGIPiuE8zEqjsfXXVBFmmXZ0M8mu28nEDv9tayBsHCINmMylBaKPcOR1KW0TOZ1wZTfhrftm7BB5s0RBeUTwGsn+r+85kQOSD4nI6L09fje2uHPzi4//PKmdAaUd1iMP5CRkJ+z27RavgOCNxrabS1RcFuMkibP+VSQ/RsK9IC2jrOmmNgYxMYR/ToIPoFruRbvoGcmBHwTP9fsQYz6nY444+GLgCpl4wd4wBib3hp64KumlS8leSFE6Dik/pmt7YueRiM+uRdjG0k6oH8VnFUTOd8eO+NqJI/IUawMndCYl+YR8npgLHAi3RJBfEO06P+bgWPB9ZV7kHAsXA/Un5nD6T0GyWl1BGAcx5b2Okil2mTbDyT9DsL+NfrjJyDzf7si/r3cqyUYAg9gJGcn8y0falleAznbYehP0OGG3uucIex9d44f6p2anTocz3vgH</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C85AAF67BF4937E05307991F0AD235</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C85AAF67BF4937E05307991F0AD235</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C85AAF67CB4937E05307991F0AD235</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C85AB12F854939E05307991F0A540A</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_064545</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VyvdxytgyNosrUGUITJxANpNl7ktKkRtQYsuOJbPk669kwAGyDDNPLrVbp08vOtIJx3FkuR7nkAmasMoyjhh3C2tbyzPmJphT7jIcA3cFcQNvNHStquni7Rat4p+2taeW3bTq0LJ1MGug2+h5ojdRs66j0KmbpGE1LdOSrpzn4DMuMBNtzTKRrSOkI3tsIhc5rmlWW5b9W6vcQ8YltnSpmtqG1JK3tZkQqWsYi8WiuqhVk2xqWKaJjMfRMCAziLHWOVlnVATKOht/Ug2BQBSRKkli48TY8zkJuRvQKcMiz2ATK/wulmmYLUP6hJxOf2nlXgh9NkmKZQ+zhFGCI/qOVX1GIGZJWPGiaZJRMYu/TQKZCliHJdEJstkvzdindiTQHsOMY53PMNpg3cIEMmAEKne3flv7dVzXiq3jDDM+SbKY7y//Gx9gc4iSFEKdb9PaUDse8ItKdU6AuD4jUc7pHC7VsKaYAN90E8jxUJXrDCZ0OaRcDuiSK3bGLr2D5boap3QKXPyfBu00Zw1yj6McOn+dX+Tvs8dFP6svDD4k//RfH5A/GV6/8HZBYNe5MJStXS8PhrIcovWOpP46mPnzxyBIB3XPiPpGNiDpg/eCz64u7ye98ajFLu9fuxEyLy6XXq/f9x7qd+/0+bzHFt1zFBh3fw9tB68unTSI81ii2hcpPIro9u0GFiOnf7O6vrkaBdxv3D3eBfOmReuTa581z/LXrh+ufgd+3mok4joLptTpLu6Q3RwFbHWG5ymqiZv+67iHL5bPJmmX6ezw37dtz3yQP78AEdulGgP/tDKQXcLiZzFTFhrqk8LVTZX4cAFMaB21S2mHm0u5o6Ere7hem41e0/G6yBo0HbtVa/VNp2Y2Wi00MD3HNr2tyKxZHFDsJWxCVSwlueux+ZkgiV0OLIRMnye5VDqu/YB4igWu+OxWHoKEcRgnUp7RHNeSxbLGbEQXKAZGZw5HvF570SqXibhiV5k3EZDti7K9J8q3QGhKQSm3GmwuJ5sLWYw3PM9FhKpzXGWQS23PlMy6lt10DE7jNAJF1YiTMI+gms7SojQGX38tHRNeWG/74+K4fZvY4b9tDaRPSJUDV7l0QfYRPt0ututsE/k+4cZuwlt4Lw+pOlmyoCKjZM1k/9fHnKgBKYdEZvTUC57QlnfpfvT2zzuNH0gZh/UoA4VzuhN2e3fLW0DqRmfbzTdcfavm83le9K+h9DGT8FK0kGOYlhEAyaWyrcbJKzCjRDGOukZK4gfBS/s+xVzMWCCwADmrolIsj3g3BMDVu8GXR2V57KNkL6QsnYCl+MrWi+SbRzH+8VlEXKL8pPlafhZJFn507AusnTgyT/lsEJRN1UpdIatv5oIkEpZK8UuyXfCvAL4Kvm8si1xyEXKgnnMB3/+pKFVra5iQJGfCP9UKw67SFjzFKgX3w+kTTCHm5euO/vvzTqfFCBCQb0JOC3x1SbvqCLDpjlpvgn4WbG9Qb3QHUrAbu4J9atWcsih77DqfzJ8tO3U6nPHOHw==</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07C85AF238F949DEE05307991F0A5752:4D7B4B2C"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>07C85AAF67CB4937E05307991F0AD235</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C85AB12F854939E05307991F0A540A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C85AAF67BF4937E05307991F0AD235</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_064557</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_064557</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_064557</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>AT</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>07C85AB12F854939E05307991F0A540A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C85AB12F854939E05307991F0A540A</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VyvdxytgyNosrUGUITJxANpNl7ktKkRtQYsuOJbPk669kwAGyDDNPLrVbp08vOtIJx3FkuR7nkAmasMoyjhh3C2tbyzPmJphT7jIcA3cFcQNvNHStquni7Rat4p+2taeW3bTq0LJ1MGug2+h5ojdRs66j0KmbpGE1LdOSrpzn4DMuMBNtzTKRrSOkI3tsIhc5rmlWW5b9W6vcQ8YltnSpmtqG1JK3tZkQqWsYi8WiuqhVk2xqWKaJjMfRMCAziLHWOVlnVATKOht/Ug2BQBSRKkli48TY8zkJuRvQKcMiz2ATK/wulmmYLUP6hJxOf2nlXgh9NkmKZQ+zhFGCI/qOVX1GIGZJWPGiaZJRMYu/TQKZCliHJdEJstkvzdindiTQHsOMY53PMNpg3cIEMmAEKne3flv7dVzXiq3jDDM+SbKY7y//Gx9gc4iSFEKdb9PaUDse8ItKdU6AuD4jUc7pHC7VsKaYAN90E8jxUJXrDCZ0OaRcDuiSK3bGLr2D5boap3QKXPyfBu00Zw1yj6McOn+dX+Tvs8dFP6svDD4k//RfH5A/GV6/8HZBYNe5MJStXS8PhrIcovWOpP46mPnzxyBIB3XPiPpGNiDpg/eCz64u7ye98ajFLu9fuxEyLy6XXq/f9x7qd+/0+bzHFt1zFBh3fw9tB68unTSI81ii2hcpPIro9u0GFiOnf7O6vrkaBdxv3D3eBfOmReuTa581z/LXrh+ufgd+3mok4joLptTpLu6Q3RwFbHWG5ymqiZv+67iHL5bPJmmX6ezw37dtz3yQP78AEdulGgP/tDKQXcLiZzFTFhrqk8LVTZX4cAFMaB21S2mHm0u5o6Ere7hem41e0/G6yBo0HbtVa/VNp2Y2Wi00MD3HNr2tyKxZHFDsJWxCVSwlueux+ZkgiV0OLIRMnye5VDqu/YB4igWu+OxWHoKEcRgnUp7RHNeSxbLGbEQXKAZGZw5HvF570SqXibhiV5k3EZDti7K9J8q3QGhKQSm3GmwuJ5sLWYw3PM9FhKpzXGWQS23PlMy6lt10DE7jNAJF1YiTMI+gms7SojQGX38tHRNeWG/74+K4fZvY4b9tDaRPSJUDV7l0QfYRPt0ututsE/k+4cZuwlt4Lw+pOlmyoCKjZM1k/9fHnKgBKYdEZvTUC57QlnfpfvT2zzuNH0gZh/UoA4VzuhN2e3fLW0DqRmfbzTdcfavm83le9K+h9DGT8FK0kGOYlhEAyaWyrcbJKzCjRDGOukZK4gfBS/s+xVzMWCCwADmrolIsj3g3BMDVu8GXR2V57KNkL6QsnYCl+MrWi+SbRzH+8VlEXKL8pPlafhZJFn507AusnTgyT/lsEJRN1UpdIatv5oIkEpZK8UuyXfCvAL4Kvm8si1xyEXKgnnMB3/+pKFVra5iQJGfCP9UKw67SFjzFKgX3w+kTTCHm5euO/vvzTqfFCBCQb0JOC3x1SbvqCLDpjlpvgn4WbG9Qb3QHUrAbu4J9atWcsih77DqfzJ8tO3U6nPHOHw==</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20141114_064557</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c75d16a0-15f9-4c38-92a7-b463b5807364</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d7135bcb-5ae9-48fd-b8bc-c9fc85d4a212</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00012_Account and User Create with DE 111_UserDelete SecondFull user 107_SUCCESS_P0" searchProperties="true" id="2b0be737-44dd-40cf-81e7-cf4275a5519c"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="855a4620-94d7-4d4c-ac3a-12c6ea6b6eab"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="ea9c408c-c61c-4bd6-afa4-0b4f2ca75021"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","DE");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="0088ab1d-8084-4bd4-a3b8-a901376ca371"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFULL" id="a528f6bd-b143-428e-ba54-83c13d11484f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - AdultFULL" id="13b8045b-a754-4470-ba6a-57d7043816a2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="33f4f775-7f56-4b24-9596-5c83c3bbf686"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="b38397b1-4b86-45c1-95e7-6451b56d5981"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="bc7057f0-55d2-4001-90f5-eef575333c1f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VynmcMl6wTewKVJntxhmyQmYyeZlS5AZEjASWbCBfP5IBD5Dlcu+Tq9ut7tOLjvqCo1liByHnkArCaGU1SygPCm1Dy1IaMMQJDyiaAQ8EDgbhdT+wq2aAdke0StRpaL9d37OwZ3u643u+7lhmTfcBm7rt1x3LBzN+QSBNOc8golwgKhqabVqOblm65QxNK7C8wKxXbcd71io/IOXStzSpmtoW1Io3tIkQ88AwlstldVmrsnRs2KZpGU/X/QGewAxpzYtNRkWgtLm1x9UYMCQJrmI2My6MA5uLmAcDMqZIZClsY8WfxTIN0zekTczJ+Ewrz0Ic0RErxDaijBKMEvKGVH2uQUxYXAmTMUuJmMw+TcIylWMdVljHlkPPNOMQ2omODhCmHOl8gqytrwcYQQoUQ+XxIWpoZ6d1rTg6TBHlI5bO+KH43/AAzSFhc4h1vktrC+10hx9UqnkBOIgoTjJOcrhRwzpHGPi2m4BPd1W5S2FEVn3C5YCuuEJn7MM7EjfV6JAxcPF/GrTXnI2THyjJoJmd1+zzh9Hl90vTvmE192cU3t9fvUVvrW6jALBvXCjK1m7Eo6Esh2hz4urKueyF3vhmjqaP62T2o7aOcpxZw8Rh6PJbj2TPvJf9bGWP0y7UplMHpa8ueLEDFoT5XfxTPNbqfmu8fvK/PeHFff8WX975t79uR4seC9eTlzSB7tK++jW+Pu8l4oVeE7S07r/3s9bzxK5HmdHNJxFM81q86HqJeFqs3+Lr8Dnyeq/h+K69Wv3T7wx7y96V0yjT2cN/qNvd+UH2MgUsdqIag6hT6ckuIfE1mSkNifVRYRrMFflwAVRoTXVKcUeQSbojcSB7uJHNevvc7Xk9v+W5rufWu6ZbM+u+b/XMsGW3wx3JbFAcQWwzOiIqlqLczdh8DRDPAg40hlTPWSaZjmtfeOwggSoRfZCXgFEOQybp2aK5M3df8uSNMI9N0HQi+8AWq1ir3DBxS2/TcCQgPeRk54CTHwCTOQFF3GquuRxsLmQtFijPRGJVc1SlkElqTxXLBrZz7hqczOYJKKTGjMVZAtX5ZF5UxuCbr60jzAvtQ3dY3LZP8zr+tyuBtImJMuAqlxbINsK7x8UN3F0inydc30945z7MYqIulqynSAneIDn89XdM1HyUMyIz+t0e/LZ2uEvzk4+/P2l8Aco4rkcZKM7JXtjd0y0fAUkbzV03F6i6qGZ5nhX9qyt6TKV7yVmWa5i2MQCcSWJbD9krUKP0Ypz0ipTAj4KX+kOImZjQgUACZnLgKoV4wtowAK7WhkjelNWpO8lBSFk6ASvxka6dyJVHIf5yK8IBVnZSfSc/S5bGfzv2ga+9ODJPuTUIQsdKUi/I+pO5wEy6JZL7WLrv/CMHHwU/VJZFLrEIOVAvmYDP/1QUqTU0hDHLqIg6WqHYJ9oCp1jPIfhr9M5NweXlckf+fbvTSTECWC6S0r7wr97oQF0BOt4j623Q93ztmk7b67h26O/zdb1dr5dFOUDXfKd+r9mr0/GMN/8A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C85F504C6D52A9E05307991F0A7C77</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C85F504C6D52A9E05307991F0A7C77</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C85F6F9B655657E05307991F0AB2CA</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C85F6F9B995657E05307991F0AB2CA</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_06473</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc6pIEP4rFnlMIRdBkIpWGT1mzTGao25uL6lxaHQiDIQZ1PjrdwaVqIlZd5+obnq6v77MN33FUBSaXpMxSDmJaWkVhZR5ubauZCn1YsQI8yiKgHkce6PmXc8zy7qHdkeUUrddV14dWzcMbFZUy7Zc1bLsqlpzDVcN/KofOFABsECYMpZBlzKOKK8rpm5YqmGohjXWDc+oeoZbrlTNF6X0ACkTvoVJWVe2oFasrsw4TzxNWy6X5WWlHKdTzdR1Q3u6643wDCKkNK42GeWB0sbWHpd9wBCGuIzjSLvSDmyufOaNyJQinqWwjeWfiqVrek0TNj4j0wulOAt+lwZxLrYQjSnBKCRrJOtzB3wW+6VmOI1TwmfRySQMXTpWYYVVbFj0QtEOoZ3p6ABhypDKZsjY+hpCAClQDKW/h926cnFe1/Kj4xRRFsRpxA7F/4YH6ALCOAFfZbu0ttDOd/hNpRpXgL0uxWHGyAL6clgThIFtuwn4fFel+xQCsuoRJgZ0xSQ6bR/ekbipRptMgfH/06C95mycPKAwg8btX35kVeb89qY3B27Oeu54Pkge+6NgWs8B7BvniqK1G/FoKIsh2pzIfnejfhRFvvXyyDvpvG8MnlruwE+1tDV4w0/N27XlmOvRWL98Gz6s+qPBPX60KsaUg32L5peVu077EdtN8+3Sxnd+bfFMo9UluV48BS1jPFxF4/Ef87nXY87CEWjWvbFuBtHadV39fdiu/n77wycPSeeDBc1gsp5bCY+MycP8ZTQxb6raTWLrweIpym6y5269SGcP/6Fud+dH2eQNMN+Jcgy67VJHdAnxn8lMaoivBrmpl0jyYRwoVxrylOQOLxN0R3xP9HAj607LtTvVTu26VrOrtvNLtyu6U6sZHb15bbaaO5LZoDiC2IppQGQsSbmbsfkZII48BtSHVF3EmWA6pvzgsY04KnXpUFyCmDIYx4KeP4xwgkMeYYZXhu3qyzVfx+HyXSn1Yz6gg7QZcEgPKdk6oOQhYJIQkLwtx5qJuWZclOIdLTIeGuUFKlPIBLOnkmQ903JtjZEoCUEC1aLYz0IoJ7MkL4zGNl9TRZjl2uGvcX7ZTqZ1/G9XAWHjE2nAZC7XILoI37wt+i6R0wk7+wnv3Dczn8h7JcrJU4I3SA5/fU6JHI9iRERGr63Rq7HDXZifffzrSe0HUNpxPYpA/oLshd293OINEKzR2HXzHZXfy9likeX9cyQ7psK9oCzD1nRTGwHOBK99jOM5UK3wop31iBTAj4IX+kOIGZ/REUccIjFwpVw8Y2sYAZNbQ1dclNW5K8lBSFE6Div+na4Vio1HIv5xKcIelnZCfS8+yzj1Pzv2ja+9OCJPsTRwQqdSkg/Ix4m5wLFwSwT1xem+8+8cfBf8UFkUucDCxUBNMg6n/5Qkp9UVhHGcUd5tK7lin2dznPwjAe/T6IubnMqL3Y78+3KnknwEsNgjhX3uXz7RnrwCdLrH1dugX+na1q1WtW2bzdo+XTstxymKcoCu8UX9VbNXp+MZb/wD</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07C85F79DEF95653E05307991F0A45CA:E4C74925"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>07C85F6F9B655657E05307991F0AB2CA</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C85F6F9B995657E05307991F0AB2CA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C85F504C6D52A9E05307991F0A7C77</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_064714</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_064714</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_064714</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>DE</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>07C85F6F9B995657E05307991F0AB2CA</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C85F6F9B995657E05307991F0AB2CA</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbc6pIEP4rFnlMIRdBkIpWGT1mzTGao25uL6lxaHQiDIQZ1PjrdwaVqIlZd5+obnq6v77MN33FUBSaXpMxSDmJaWkVhZR5ubauZCn1YsQI8yiKgHkce6PmXc8zy7qHdkeUUrddV14dWzcMbFZUy7Zc1bLsqlpzDVcN/KofOFABsECYMpZBlzKOKK8rpm5YqmGohjXWDc+oeoZbrlTNF6X0ACkTvoVJWVe2oFasrsw4TzxNWy6X5WWlHKdTzdR1Q3u6643wDCKkNK42GeWB0sbWHpd9wBCGuIzjSLvSDmyufOaNyJQinqWwjeWfiqVrek0TNj4j0wulOAt+lwZxLrYQjSnBKCRrJOtzB3wW+6VmOI1TwmfRySQMXTpWYYVVbFj0QtEOoZ3p6ABhypDKZsjY+hpCAClQDKW/h926cnFe1/Kj4xRRFsRpxA7F/4YH6ALCOAFfZbu0ttDOd/hNpRpXgL0uxWHGyAL6clgThIFtuwn4fFel+xQCsuoRJgZ0xSQ6bR/ekbipRptMgfH/06C95mycPKAwg8btX35kVeb89qY3B27Oeu54Pkge+6NgWs8B7BvniqK1G/FoKIsh2pzIfnejfhRFvvXyyDvpvG8MnlruwE+1tDV4w0/N27XlmOvRWL98Gz6s+qPBPX60KsaUg32L5peVu077EdtN8+3Sxnd+bfFMo9UluV48BS1jPFxF4/Ef87nXY87CEWjWvbFuBtHadV39fdiu/n77wycPSeeDBc1gsp5bCY+MycP8ZTQxb6raTWLrweIpym6y5269SGcP/6Fud+dH2eQNMN+Jcgy67VJHdAnxn8lMaoivBrmpl0jyYRwoVxrylOQOLxN0R3xP9HAj607LtTvVTu26VrOrtvNLtyu6U6sZHb15bbaaO5LZoDiC2IppQGQsSbmbsfkZII48BtSHVF3EmWA6pvzgsY04KnXpUFyCmDIYx4KeP4xwgkMeYYZXhu3qyzVfx+HyXSn1Yz6gg7QZcEgPKdk6oOQhYJIQkLwtx5qJuWZclOIdLTIeGuUFKlPIBLOnkmQ903JtjZEoCUEC1aLYz0IoJ7MkL4zGNl9TRZjl2uGvcX7ZTqZ1/G9XAWHjE2nAZC7XILoI37wt+i6R0wk7+wnv3Dczn8h7JcrJU4I3SA5/fU6JHI9iRERGr63Rq7HDXZifffzrSe0HUNpxPYpA/oLshd293OINEKzR2HXzHZXfy9likeX9cyQ7psK9oCzD1nRTGwHOBK99jOM5UK3wop31iBTAj4IX+kOIGZ/REUccIjFwpVw8Y2sYAZNbQ1dclNW5K8lBSFE6Div+na4Vio1HIv5xKcIelnZCfS8+yzj1Pzv2ja+9OCJPsTRwQqdSkg/Ix4m5wLFwSwT1xem+8+8cfBf8UFkUucDCxUBNMg6n/5Qkp9UVhHGcUd5tK7lin2dznPwjAe/T6IubnMqL3Y78+3KnknwEsNgjhX3uXz7RnrwCdLrH1dugX+na1q1WtW2bzdo+XTstxymKcoCu8UX9VbNXp+MZb/wD</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20141114_064714</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9eed9da-b266-4cd4-b688-1a9f8d10c2f9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58219bfe-c940-4645-9a8a-4ae7275d674d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00013_Account and User Create with DE 111_UserDelete Standard Youth user107_SUCCESS_P0" searchProperties="true" id="4028045f-ff09-4d73-8b31-c24c8c376dba"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="a10aefed-3beb-4351-a97c-cafa1d7c1559"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="1b333213-c576-433e-b0ee-eec4ff6ea74b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","DE");

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="5484f92a-1c2c-43f7-b3c3-759601c7f16a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUser" id="f390891b-c122-4e82-be98-8b6ead7052b9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - StandardYouthUser" id="c92aa951-f4bd-42e3-880c-8074120aab43"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="1b24ab5e-d07c-485e-b679-82426e1225f7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="c95340a1-76c3-46c1-99ec-76e4527fb942"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="7f0b475a-567a-4ab6-b3cd-01f61f5605db"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZZk9o4EP4rlPOYMj4wl2ugimsC2TmBIZl5SQm5ATm2BDqA2V+/kgEHmGPZfXJ1u9X99aFPfSVQmvhhSwjgkjBa2KYJFWGmbViK05AhQURIUQoilDgctW5vQr/ohuhwxCoMug3rVzCtV3zsuvYsiAI7qJVKdi1CVXtacWe44vnB1KtpUyEUDKiQiMqG5bteYHue7QVj1wu9aujXixWv9GIVJsCF9q1Niq61B7UVDWsh5TJ0nM1mU9yUiozPHd91Pefn7c0ILyBFVvNql1EWiDf39rgYAYYkwUXMUufKObG5ikQ4InOKpOKwjxV9FMt13LqjbSJB5l+s/CxEAzpjmdhBlFGCUUL+RqY+tyAXLCq0kjnjRC7SD5PwXOPYhi22sRfQL5ZzCu1CRycIuUC2WCBv72sIM+BAMRSehoOG9eWyrmVHxxxRMWM8Fafif8MDdA0JW0Jki0Nae2iXO3ynUs0rwOGA4kQJsoY7M6xLhEHsuwn4cleFBw4zsr0hQg/oVhh0zjG8M3FXjS6Zg5D/p0FHzdk5maBEQfOvx2rd7bNSaXVH1pzCfcIfyjec1yaikQE4Ns4UeWt34tlQ5kO0OzHzHVF6+NGrtmL12G9PvG77aTwRz89y1eOjvqyMg8qL2lRv262o8yNeLJ++dirDzcu0Hc9fHnx1r4bbBbQ25fgbWj32yby2LFfGattz6tctFrtx5WuXvLBystgE3rfJ7xq5Vc48VqtNnMRC/oiefw7Su2+v31vw1J/Ej7dDqPR/fpf3yXPX62wDPtn+dqZ9duPv0z3Df6o73PmRmsaA5UE0YzDoFq51l5D8nMyMhkT2LDMNl4Z8hAQqraY5ZbgjVJruSBTqHu5kt9qpVYLStVvqBhU/8HpuueRW63Xv2m25Qa98IJkdijOIHUZnxMQylLsbm88B4jQUQCPg9popzXTC+sRjF0lUGNChvgSMChgzTc+lFeZSSlyfxauUzGNeV6s1Zcwq3DF5T+95ayaBn1JycELJQ8BkScDwthlroedaSF2KFVormXjFNSpSUJrZuSHZ0A9qZUeQdJmAAeqkLFIJFJeLZVYYR+y+vo2wyLTD3ji7bB+mdf7vUAFtExFjIEwubdBdhHfeFu+QyMcJV48TPrhvqYiYe6XLKTnBOySnv/5MiRmPfER0Rr86o1/eAXdufvHxtyedT0A55/XIA0VrchT28HLrN0CzRvPQzRUqropqvVZZ/6qGHbl2rynLKzuu74wAK81rr2P2G6iTe3EuekRy4GfBc/0pRCUXdCSRhFQPXCETL9gaRiDM1jDQF2V76UpyElKXTsJWvqfrJHrjMYg/XYpwiI2dVj/oz4bx6E/H3vF1FEfnqZcGSejcSOYBef1gLjDTbommPsaPnb/n4L3gp8q8yDkWqQdqqiR8/KdgOK1hIYyZonLQtTLFMc9mOOXrEsI/Rm/cZFSe73bk35c7m2QjgEFvhIJk/s0THZorQOdHXL0P+oauS9fX1Wo3KPdq7WO6bpU77bwoJ+iab9RvNUd1Op/x5j8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C863FF77D45E8BE05307991F0AA5CB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C863FF77D45E8BE05307991F0AA5CB</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C8643F03D46241E05307991F0A04E5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C8644E3982623DE05307991F0A1EAF</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_064822</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMr5ycwWqCA5Zz4QJiZnZbF6mhNwGJbYElmwgXz+SAQ+Qy7L75Op2q/v0RUd9yVGa2F6fc8gEYbS2ThPKvVLb1fKMegxxwj2KUuCewF7YH916dt300P6IVgv8rvZrajWmgFuR3sTQ0d2pi/V23I51y44bbddpoNhF0pTzHALKBaKiq9mm5eqWpVvuxLQ8q+W5Tt11mk9a7SdkXPqWJnVT24Fa8642F2LhGcZqtaqvnDrLZoZtmpbxOLoN8RxSpPUutxmVgbLezh7XI8CQJLiOWWpcGkc2lxH3QjKjSOQZ7GJFH8UyDbNjSJuIk9kXrToLUUBjVooDRBklGCXkFan6jEDMWVTrJzOWETFPP0zCMpVjHdZYx5ZLv2jGMbQzHR0hzDjS+RxZO18PEEMGFEPtx0PQ1b6c17Xy6CRDlMcsS/mx+N/wAC0gYQuIdL5PawftfIfvVKp3CdgLKE5yTgr4roZ1gTDwXTcBn++qNs4gJutbwuWArrlCZxzCOxG31fDJDLj4Pw06aM7WyU+U5NCjNyi4GKHho5+yb6Nnuz0YXQzN/CXy77slgEPjUlG1diueDGU1RNsTL89fp2G8vBBuQJPXVTDntH8x/HFjBZ0suCchHuOnwfiqzSZPo6WYc/aCrmdxx29885dPpt2Ev18XwXAz2Tytri6Wwimem3/hiTNMH/2siOzknxunXcDd/cCRB+ntrHOzwsXP0GpdobC4aT2Nbv3xjwvc7CTYGg/uXuNQIpnfLxuPry3aZF+/o9Gzu56MyX27W6VzgP9Yt7/zYT59Biz2ohqDwK8NZZeQ+JzMlIZEelyaegtFPlwAFVpPnVLc4eWS7kjkyR5uZbM1aDdd99rptO2m7fjXZsMxW52ONTT71nV/uCeZLYoTiANGY6JiKcrdjs3nAHHqcaARZHrBcsl0XPvEo48EqgX0QV4CRjlMmKRni8TusrlodDbmNENsQ5e5OaeZkOz6nYk7epf1YwHZMSe7R5z8AJgsCCjiVnPN5WBzIWuxREUuEqteoDqFXFJ7pljWs912w+AkXSSgkBopi/IE6ov5oqyMwbdfW0eYl9qH60l52z7M6/TfvgTSJiLKgKtcrkC2Ed55XJx9Ih8n3DpMeO++n0dEXSxZT5ERvEVy/OvPmKj5qGZEZvRrEP6y9rgr87OPvz1pfALKOK1HFSgqyEHY/dMtHwFJG719N5eovqznRZGX/Wspesyke8lZVsMwbSMEnEti20zYC1Cj8mKc9YpUwE+CV/pjiLmY01AgAakcuFopnrE2hMDV2hDIm7I+dyc5CilLJ2At3tMNErnyKMSfbkXYw8pOqsfys2JZ9Kdj7/g6iCPzlFuDIHSmJPWCbD6YC8ykWyK5j2WHzt9z8F7wY2VV5AqLkAM1zQV8/KemSK2rIYxZTkXga6XikGhLnGKzAO+P0Rs3JZdXyx359+1OJ+UIYJArISelf/VGe+oK0NkBWe+CvuFrZzhstXy3cd2+OuTrfmNwVRXlCF3vjfqt5qBOpzPe+w0=</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07C8640959E45E87E05307991F0A9FB6:1A72BF2F"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>07C8643F03D46241E05307991F0A04E5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C8644E3982623DE05307991F0A1EAF</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C863FF77D45E8BE05307991F0AA5CB</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_064839</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_064839</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_064839</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>DE</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>07C8644E3982623DE05307991F0A1EAF</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C8644E3982623DE05307991F0A1EAF</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMr5ycwWqCA5Zz4QJiZnZbF6mhNwGJbYElmwgXz+SAQ+Qy7L75Op2q/v0RUd9yVGa2F6fc8gEYbS2ThPKvVLb1fKMegxxwj2KUuCewF7YH916dt300P6IVgv8rvZrajWmgFuR3sTQ0d2pi/V23I51y44bbddpoNhF0pTzHALKBaKiq9mm5eqWpVvuxLQ8q+W5Tt11mk9a7SdkXPqWJnVT24Fa8642F2LhGcZqtaqvnDrLZoZtmpbxOLoN8RxSpPUutxmVgbLezh7XI8CQJLiOWWpcGkc2lxH3QjKjSOQZ7GJFH8UyDbNjSJuIk9kXrToLUUBjVooDRBklGCXkFan6jEDMWVTrJzOWETFPP0zCMpVjHdZYx5ZLv2jGMbQzHR0hzDjS+RxZO18PEEMGFEPtx0PQ1b6c17Xy6CRDlMcsS/mx+N/wAC0gYQuIdL5PawftfIfvVKp3CdgLKE5yTgr4roZ1gTDwXTcBn++qNs4gJutbwuWArrlCZxzCOxG31fDJDLj4Pw06aM7WyU+U5NCjNyi4GKHho5+yb6Nnuz0YXQzN/CXy77slgEPjUlG1diueDGU1RNsTL89fp2G8vBBuQJPXVTDntH8x/HFjBZ0suCchHuOnwfiqzSZPo6WYc/aCrmdxx29885dPpt2Ev18XwXAz2Tytri6Wwimem3/hiTNMH/2siOzknxunXcDd/cCRB+ntrHOzwsXP0GpdobC4aT2Nbv3xjwvc7CTYGg/uXuNQIpnfLxuPry3aZF+/o9Gzu56MyX27W6VzgP9Yt7/zYT59Biz2ohqDwK8NZZeQ+JzMlIZEelyaegtFPlwAFVpPnVLc4eWS7kjkyR5uZbM1aDdd99rptO2m7fjXZsMxW52ONTT71nV/uCeZLYoTiANGY6JiKcrdjs3nAHHqcaARZHrBcsl0XPvEo48EqgX0QV4CRjlMmKRni8TusrlodDbmNENsQ5e5OaeZkOz6nYk7epf1YwHZMSe7R5z8AJgsCCjiVnPN5WBzIWuxREUuEqteoDqFXFJ7pljWs912w+AkXSSgkBopi/IE6ov5oqyMwbdfW0eYl9qH60l52z7M6/TfvgTSJiLKgKtcrkC2Ed55XJx9Ih8n3DpMeO++n0dEXSxZT5ERvEVy/OvPmKj5qGZEZvRrEP6y9rgr87OPvz1pfALKOK1HFSgqyEHY/dMtHwFJG719N5eovqznRZGX/Wspesyke8lZVsMwbSMEnEti20zYC1Cj8mKc9YpUwE+CV/pjiLmY01AgAakcuFopnrE2hMDV2hDIm7I+dyc5CilLJ2At3tMNErnyKMSfbkXYw8pOqsfys2JZ9Kdj7/g6iCPzlFuDIHSmJPWCbD6YC8ykWyK5j2WHzt9z8F7wY2VV5AqLkAM1zQV8/KemSK2rIYxZTkXga6XikGhLnGKzAO+P0Rs3JZdXyx359+1OJ+UIYJArISelf/VGe+oK0NkBWe+CvuFrZzhstXy3cd2+OuTrfmNwVRXlCF3vjfqt5qBOpzPe+w0=</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20141114_064839</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c75d16a0-15f9-4c38-92a7-b463b5807364</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d7135bcb-5ae9-48fd-b8bc-c9fc85d4a212</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00015_Account and User Create with CH 111_UserDelete SecondFull user 107_SUCCESS_P0" searchProperties="true" id="1c39987f-fe89-45d5-804d-a6ee8ed96fd0"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="6ffd1faa-a538-466e-9f56-6176593d9c23"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="927623e9-68da-44d1-9c06-5a79ae0abae0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CH");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="3a378a63-a9be-4caf-9109-7a96f5d15916"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFULL" id="4a175d9a-913e-4368-a07b-721ddc38afbc"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - AdultFULL" id="8dae75d7-fb37-4a7b-9dc0-0c85640c3d99"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="67378e0a-e9d0-493f-95f2-aa651f80d0ca"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="1bdbc02b-ae79-4bc0-bf2c-27356494e6bf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="ba7f8eeb-54da-4362-9cc7-05dcf4ecb3df"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbd6o6EP4rLvYzdxBlVdeyYqunNyu2u7svXTEEjYVASVDbX78TVCpWPZ7zxJphMvPNJV/mgoI4MtwOpShjOCG1VRwR6hbalpRnxE0AxdQlIEbUZdD1O3e3rqFoLtgekWoDryW92aZuT8LQlqETWLI1cQJ5ojmODKEJjInZMJtmk5tSmqMBoQwQ1pIMTbdkXZd1a6zprt5wbVtxjMarVHtGGeW+uYmiSRtQK9qSZoylrqoul0tlaSpJNlUNTdPVl7tbH85QDKT2xTqjIlDW3thDJUAQRRFUYBKrF2rF5iKgro+nBLA8Q5tYwbFYmqo1VW4TUDz9JZVnUTAgYVKIXUASgiGI8BcQ9blDbJYEtU40TTLMZvHRJHRNOJbRCspQt8gvSa1CO9NRBWFGgUxnQN/4GqEQZYhAVHsaDVrSr/O6VhwdZ4DQMMliWhX/Gx5EFihKUhTIdJvWBtr5Dg9Uqn2BoDsgMMopXqB7MawpgIhuuong+a5qwwyFeHWLKR/QFRXo1F14e+K6Gh6eIsr+T4N2mrN28gyiHLV9a9G181W91zCD2LdDO7iJ7KEB1T9WqwCwa1woytauxb2hLIdofQLe3KvDWydYTiw6uXxyrAW1tZh9QLJsao8dva8ajwYNh/bXfTz1LM/Ketr7a705/5oHv/uffTu7plr/5bcJeYLkrv86beSJ2UPJWPf/zHINp/N/xoMHy8u7+curCaPFDc1ivesjOMLTcap51zfvjv8adp5xDLyXq/mLtQo+b+vPvZF3/fg+tG/CphYly/5Tq0xnB39Vt73zfj6ZI8i2ohiDgVe74l0C7DSZCQ0O5LAwdVNBPpQhwqS2OCW4w8053eHA5T1cy5rTbdSbtnXZqTfrl53LnmabmtNs6ldax7brjS3JrFHsQewmJMQilqDc9dicBghjlyISoExeJDlnOiqd8OgBBmoDMuKXICEUjRNOz3pgBXqG53hlmanuLFOaN+qAfqGlVLtP2AN5yDohQ1mVlK0KKY8QxClGgrnFYFM+2ZTxYnyARc4iXVkAhaCcc3smaNY1rIatUhynERJQ1TgJ8ggp6SwtSqPS9deQAaSFdtQbF9ftaGL7/7Y14DYBFgZU5HKJeB/RgdfF2iZyPGFnN+Gt+04eYHGzeEFZhuEaSfXX95yIASmHhGf01vXf9C3u0vzs4z9PqidAqfv1KAMFC7wTdvt281eA80Z7280PoHwo+WKRF/1zBD9m3D0nLd1WNUPl1zfnzPY5Tt4RUUsv6lnPSAl8L3ipr0LM2Yz4DDAU84GrFeIZe4OPqNgbBvyqrM5dSioheekYWrFDum7Edx6B+ORaBF0o7Lh6yD/LJAu+O3bA104cnidfGxgmUyGJJ+TzyFzAhLvFnPySbNf5IQeHgleVZZFLLIwP1CRn6PifmmC1lgQgTHLCBp5UKHaZtsDJPlPkfhv9cFOQebnd4X9f72RcjABEfCekuPAvHmlXXAEy3WHrTdDDhG17pwi7iq79Q/1Ts1On/Rlv/wU=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C86954BA5D6BABE05307991F0A5568</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C86954BA5D6BABE05307991F0A5568</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C86954BA696BABE05307991F0A5568</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C86958326A53D6E05305991F0AE485</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_064951</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZZU+pKEP4rVHy0QhYIS0qoCsvRHFFQ1KO+WMOkAwNhJmYmEc+vvzMBIuByufcp1Z2e7q+X+abPOFpGtutxDokgjJZWy4hyN9e2tDShLkOccJeiJXBXYHfsXQ1cu2y6aHtEK/m9lvYShgiCWnOiWxbU9So4oDfDRlV3zBAHTRzUJlYgTTlPwadcICpamm1aVWmvW9U703Ktpms2y6bdeNZKD5Bw6VualE1tA2rFW9pMiNg1jLe3t/JbpcySqWGbpmU8Xg3GeAZLpLXP1hnlgZL2xh6XA8AQRbiM2dI4M/ZszgLujsmUIpEmsIkVfBfLNMymIW0CTqYnWnEWAp+GLBe7iDJKMIrIX6TqcwVixoKSF01ZQsRs+W0Slqkc67DCOraq9EQz9qEd6WgPYcKRzmfI2vi6hRASoBhK97d+Szs5rmv50bsEUR6yZMn3xf+GB2gGEYsh0Pk2rQ204x1+Uan2GWDXpzhKOcngWg1rjDDwTTcBH++qNEogJKsB4XJAV1yhM3bhHYjravTIFLj4Pw3aac7ayQOKUmjPrODhgv/2B6N7y1te2d25WAzQrDG5aLRyALvGuaJo7Vo8GMpiiNYnHp7D4en9k20/G8Cuf9/fXD+iSb8/717Wr2tVbmRxz0eXXbbw5+N5zR9enmM/rcZPi/S1Ul+EC2BX9v1pv2M8PV0OHxHU7OSPP8/McDHysmAe3V2ZlUpnxW9Ow5A8v46cB3HuTJDN59M/w1m9k9332dRyrtNR8/z88Xw6sKN40GNz0jQuEuTdDP7OMeITL6qwVpHODv593fbOj9PJHLDYimoM/F7pl+wSEj+TmdKQQA9zUzdW5MMFUKG11SnFHW4q6Y4EruzhWjbr3Uat6TQqds1zKr1a33QqptNsWr9Mr19tOFuSWaM4gNhlNCQqlqLc9dj8DBAvXQ40gETPWCqZjms/eOwhgUo+vZWXgFEOd0zSs5MFtSxpvFl8Xq00CDRfLYgZ51rpmokhHSZeKCDZp+TqHiXfAiYxAcXbaqy5nGsuZCleUZaKyCpnqEwhlcyeKJJ1bVkDg5NlHIECaixZkEZQjmdxXhiDr7+2jjDPtbf9u/yyfZvW4b9tBaRNQJQBV7l0QHYRPr0tDdfZJvJ9wvXdhLfuvTQg6l7JcoqE4DWS/V8fU6LGoxgRmdFLd/xibXEX5kcf/3zS+AGUcViPIlCQkZ2w25dbvgGSNdrbbr6i8ms5zbI0719dsWMi3UvKshzDtI0x4FTy2vsdWwA1Ci/GUY9IAfwgeKHfh5iKGR0LJGApB66Ui0dsDWPgamvw5UVZHbuS7IWUpROwEl/pupHceBTiH5ci7GJlJ9Uj+XljyUfiX/naiSPzlEuDIHSqJPWAvH8zF5hJt0RSH0t2nX/l4Kvg+8qiyAUWIQdqkgr4/k9JcVpLQxizlAq/p+WKXZ7NcYr3GNwPo09uciovdjvy78udTvIRwCA3Qk5y/+qJdtUVoNMdrt4E/YKuqx3P6dU6Xien6/qarh2n1iiKsoeu/Un9WbNTp8MZb/8D</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07C86954BA816BABE05307991F0A5568:32CD7C1F"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>07C86954BA696BABE05307991F0A5568</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C86958326A53D6E05305991F0AE485</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C86954BA5D6BABE05307991F0A5568</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_06504</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_06504</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_06504</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>CH</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>07C86958326A53D6E05305991F0AE485</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C86958326A53D6E05305991F0AE485</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZZU+pKEP4rVHy0QhYIS0qoCsvRHFFQ1KO+WMOkAwNhJmYmEc+vvzMBIuByufcp1Z2e7q+X+abPOFpGtutxDokgjJZWy4hyN9e2tDShLkOccJeiJXBXYHfsXQ1cu2y6aHtEK/m9lvYShgiCWnOiWxbU9So4oDfDRlV3zBAHTRzUJlYgTTlPwadcICpamm1aVWmvW9U703Ktpms2y6bdeNZKD5Bw6VualE1tA2rFW9pMiNg1jLe3t/JbpcySqWGbpmU8Xg3GeAZLpLXP1hnlgZL2xh6XA8AQRbiM2dI4M/ZszgLujsmUIpEmsIkVfBfLNMymIW0CTqYnWnEWAp+GLBe7iDJKMIrIX6TqcwVixoKSF01ZQsRs+W0Slqkc67DCOraq9EQz9qEd6WgPYcKRzmfI2vi6hRASoBhK97d+Szs5rmv50bsEUR6yZMn3xf+GB2gGEYsh0Pk2rQ204x1+Uan2GWDXpzhKOcngWg1rjDDwTTcBH++qNEogJKsB4XJAV1yhM3bhHYjravTIFLj4Pw3aac7ayQOKUmjPrODhgv/2B6N7y1te2d25WAzQrDG5aLRyALvGuaJo7Vo8GMpiiNYnHp7D4en9k20/G8Cuf9/fXD+iSb8/717Wr2tVbmRxz0eXXbbw5+N5zR9enmM/rcZPi/S1Ul+EC2BX9v1pv2M8PV0OHxHU7OSPP8/McDHysmAe3V2ZlUpnxW9Ow5A8v46cB3HuTJDN59M/w1m9k9332dRyrtNR8/z88Xw6sKN40GNz0jQuEuTdDP7OMeITL6qwVpHODv593fbOj9PJHLDYimoM/F7pl+wSEj+TmdKQQA9zUzdW5MMFUKG11SnFHW4q6Y4EruzhWjbr3Uat6TQqds1zKr1a33QqptNsWr9Mr19tOFuSWaM4gNhlNCQqlqLc9dj8DBAvXQ40gETPWCqZjms/eOwhgUo+vZWXgFEOd0zSs5MFtSxpvFl8Xq00CDRfLYgZ51rpmokhHSZeKCDZp+TqHiXfAiYxAcXbaqy5nGsuZCleUZaKyCpnqEwhlcyeKJJ1bVkDg5NlHIECaixZkEZQjmdxXhiDr7+2jjDPtbf9u/yyfZvW4b9tBaRNQJQBV7l0QHYRPr0tDdfZJvJ9wvXdhLfuvTQg6l7JcoqE4DWS/V8fU6LGoxgRmdFLd/xibXEX5kcf/3zS+AGUcViPIlCQkZ2w25dbvgGSNdrbbr6i8ms5zbI0719dsWMi3UvKshzDtI0x4FTy2vsdWwA1Ci/GUY9IAfwgeKHfh5iKGR0LJGApB66Ui0dsDWPgamvw5UVZHbuS7IWUpROwEl/pupHceBTiH5ci7GJlJ9Uj+XljyUfiX/naiSPzlEuDIHSqJPWAvH8zF5hJt0RSH0t2nX/l4Kvg+8qiyAUWIQdqkgr4/k9JcVpLQxizlAq/p+WKXZ7NcYr3GNwPo09uciovdjvy78udTvIRwCA3Qk5y/+qJdtUVoNMdrt4E/YKuqx3P6dU6Xien6/qarh2n1iiKsoeu/Un9WbNTp8MZb/8D</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20141114_06504</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9eed9da-b266-4cd4-b688-1a9f8d10c2f9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58219bfe-c940-4645-9a8a-4ae7275d674d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00016_Account and User Create with CH 111_UserDelete Standard Youth user107_SUCCESS_P0" searchProperties="true" id="8e17db39-4596-46be-a677-de8ed2a872c9"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="00237267-c496-4f87-93e9-5a41f5ccd9b5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="ef63566f-6ce6-46c2-bfa2-791abd80bf29"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CH");

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="c36d1302-425c-4d73-ad00-c9203e7b7ba2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUser" id="f19ec56d-ae2e-42b6-94c1-20d092adcc5b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - StandardYouthUser" id="6f260e0b-d931-41cd-bbc4-341b1ee21632"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="b24365dc-b5d2-4d01-a05a-de757b7a1b8d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="9f8a1274-6937-4041-8433-ed4efecd493b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="a6027783-d84f-432c-8299-7a81d8a6d6df"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VyvOYMl7YbFegikBgyARCIEOWl5SQG1BiyyDJbF9/JQMOEMLl3idXt1vdpxcd9TVHYWB7Vc6BCRLRzDIMKPcSbVmLGfUixAn3KAqBewJ7/Wr73rOzpod2R7RMq17W3osuQtjKF/WSaWM977ojHbkI6wVs5XJ5J++PnJw05TyGFuUCUVHWbNPK65alW/kn0/Js07PcrGnZb1pmAIxL39Ika2pbUEte1iZCTD3DWCwW2UUuG7GxYZumZby07/t4AiHSKtebjJJArLK1x1kfMAQBzuIoNK6NA5trn3t9MqZIxAy2sfyfYpmG6RrSxudk/EtLz4LfoqMoEWuIRpRgFJA1UvVpg5hEfqYajCNGxCT8MQnLVI51WGJdFpL+0oxDaBc6OkDIONL5BFlbXz0YAQOKIfO31yprvy7rWnL0iSHKRxEL+aH43/AAnUMQTcHX+S6tLbTLHZ6oVOUasNeiOIg5mUNHDesUYeDbbgK+3FWmy2BElveEywFdcoXO2Id3JG6qUSdj4OL/NGivORsnAxTEULnx719em3YcfRZ7j835TdjJ1VadJo05LicA9o0TRdrajXg0lOkQbU78Xtit21mLP3aj3Gy+/LwZz4el8cCc/ak2YuN27JrtW9a4G8TiUVyt6O/uy+N6/TQlTn31NhjixdVd4QG/VFmbrprEro1Yt70eWms8aK2ZCfnG5H74ClXy2p42nZsrPGO+ZbvPbmiW/hQm9mrSZZ3qsBg9l+4eioVbszm4yQUN2+3kGp3n9sei0XgL6aC5yP2Vdz5NZw//oW535/vx8AOw2IlqDFr1TEN2CYnzZKY0xNdHiak3VeTDBVChVdQpxR1eLOmO+J7s4UY2SzWn6BZKJdd1Crm6c2sWcmbBda2GWa3WCuaOZDYojiDWIjoiKpai3M3YnAeIQ48D9YHp8yiWTMe1Mx7rSKBMi/bkJYgoh6dI0rPvcsf9FI5DcwDjGZ/MnfFHbA+1TCcSD/SBVUcC2CEl5w8ouQeYTAko3lZjzeVccyFLMUPzWARWdo6yFGLJ7EyRrGfnnYLBSTgNQAE1wsiPA8hOJ9OkMAbffG0dYZ5oe7dPyWX7Ma3jf7sKSBufKAOucrkB2UU48baYu0R+Tri0n/DOfTX2ibpXspyCEbxBcvjra0rUeKQjIjN6r/XfrR3u1Pzi499PGmdAGcf1SAP5c7IXdvdyyzdAskZl180Zys6y8XweJ/0rKXZk0r2kLKtgmLbRBxxLXls9RZ9AjdSLcdEjkgI/Cp7qDyHGYkL7AgkI5cBlEvGCraEPXG0NLXlRlpeuJAchZekELMUpXS2QG49CfHYpwh5WdlLdlZ9FxPyvjp3wtRdH5imXBkHoWEnqAVn9MBc4km6JpL6I7Ts/5eBU8ENlWuQUi5ADNYwF/PwnozitrCGMo5iKVl1LFPs8m+AUqyl4X0bf3CRUnu525N+XO50kI4BBboScJP7VE+2pK0DHe1y9DXqarp3aObo+RFf5pv6u2avT8YxX/gE=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C86957798C53D8E05305991F0AAC50</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C86957798C53D8E05305991F0AAC50</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C86957799853D8E05305991F0AAC50</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C86EE8534B60F1E05305991F0A1805</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_065114</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMr5gc3EFqgiQGTIkIZDMJHmZEnLbaGJLxpIdJ1+/kgEHyGXZfXJ1u9V9+qKjPuUojmyvzzmkgjBaK+KIcq/UdrUspR5DnHCPohi4J7A3719OPLtuemh7RKuNh13tj71wbGwFph40nY7u+M5C77jQ0MF3WuC7HXCxK005z2BMuUBUdDXbtBzdsnTLuTUtzza9hlW3W41HrfYLUi59S5O6qW1AFbyrLYVIPMN4fn6uPzfqLA0N2zQt4/5yMsdLiJHWO11nVAZKext7XPcBQxThOmaxcWrs2Zz63JuTkCKRpbCJ5X8WyzTMjiFtfE7Cb1p1FvwxDVgpDhBllGAUkVek6nMJYsn8Wj8KWUrEMv40CctUjnUosI4th37TjH1oRzraQ5hypPMlsja+ZhBAChRD7W427mrfjutaefQ2RZQHLI35vvjf8ADNIWIJ+DrfprWBdrzDDyrVOwXsjSmOMk5yuFLDmiAMfNNNwMe7qk1TCEgxIVwOaMEVOmMX3oG4rsaQhMDF/2nQTnPWTn6hKIOeE3eS1zEF5/57zme/bf6YXkWzk/BizrslgF3jUlG1di0eDGU1ROsT09GFP2ML/+S6mLtNM5xcjW/6F+6S3414nF7etEaLyerm6bHIfxiLM3BnPh0Vk9wxLlbhw2v2Yzri9CfEQXHmT09WT9O/DkH9s+HTy2IuWeE+z5Pv8cvP69ZDMgxe53382PQ5D/tnzspt3k1/PzaMGJzB/SSJ75e5O8tPOnfo9soa+a+RfVHcNUcPfZTfn4ehybpVOjv493XbOz/PFn8Bi62oxmA8rJ3LLiHxNZkpDfH1oDT1EkU+XAAVWk+dUtzhZTIx4nuyh2vZbA3azdGo7Tacs6Z5bo1Mt2G6nY51bvattuluSWaN4gDigNGAqFiKctdj8zVAHHscqA+pnrNMMh3XvvA4RALVxnQmLwGjHG6ZpGcrFHERIBI9Mea2F3lqoiJ8DoOOVrti4ppep/1AQLrPyc4eJ88Ak4SAIm4111wONheyFiuUZyKy6jmqU8gktaeKZT3babsGJ3ESgUJqxMzPIqgny6SsjMHXX1tHmJfa2ei2vG2f5nX4b1sCaeMTZcBVLmcg2wgfPC72NpHPE27tJrx13898oi6WrKdICV4j2f/1NiZqPqoZkRn9Gcz/WFvclfnRx9+fNL4AZRzWowrk52Qn7Pbplo+ApI3etpsrVF/VszzPyv61FD2m0r3kLMs1TNuYA84ksb3csiegRuXFOOoVqYAfBK/0+xAzsaRzgQTEcuBqpXjE2jAHrtaGsbwpxbE7yV5IWToBhfhIN4jkyqMQf7kVYQ8rO6meys8zS/23jn3gayeOzFNuDYLQUEnqBXn5ZC4wk26J5D6W7jr/yMFHwfeVVZErLEIO1CIT8PmfmiK1roYwZhkV46FWKnaJtsQpXhLw3ozeuSm5vFruyL9vdzopRwCDXAk5Kf2rN9pTV4CGO2S9CfqOrztuq9VpD9zGsL3L1/2Ba1ZF2UPXe6d+r9mp0+GM9/4B</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07C86EEADF4D78E8E05307991F0A9664:1221BBF2"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>07C86957799853D8E05305991F0AAC50</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C86EE8534B60F1E05305991F0A1805</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C86957798C53D8E05305991F0AAC50</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_065126</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_065126</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_065126</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>CH</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>07C86EE8534B60F1E05305991F0A1805</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C86EE8534B60F1E05305991F0A1805</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMr5gc3EFqgiQGTIkIZDMJHmZEnLbaGJLxpIdJ1+/kgEHyGXZfXJ1u9V9+qKjPuUojmyvzzmkgjBaK+KIcq/UdrUspR5DnHCPohi4J7A3719OPLtuemh7RKuNh13tj71wbGwFph40nY7u+M5C77jQ0MF3WuC7HXCxK005z2BMuUBUdDXbtBzdsnTLuTUtzza9hlW3W41HrfYLUi59S5O6qW1AFbyrLYVIPMN4fn6uPzfqLA0N2zQt4/5yMsdLiJHWO11nVAZKext7XPcBQxThOmaxcWrs2Zz63JuTkCKRpbCJ5X8WyzTMjiFtfE7Cb1p1FvwxDVgpDhBllGAUkVek6nMJYsn8Wj8KWUrEMv40CctUjnUosI4th37TjH1oRzraQ5hypPMlsja+ZhBAChRD7W427mrfjutaefQ2RZQHLI35vvjf8ADNIWIJ+DrfprWBdrzDDyrVOwXsjSmOMk5yuFLDmiAMfNNNwMe7qk1TCEgxIVwOaMEVOmMX3oG4rsaQhMDF/2nQTnPWTn6hKIOeE3eS1zEF5/57zme/bf6YXkWzk/BizrslgF3jUlG1di0eDGU1ROsT09GFP2ML/+S6mLtNM5xcjW/6F+6S3414nF7etEaLyerm6bHIfxiLM3BnPh0Vk9wxLlbhw2v2Yzri9CfEQXHmT09WT9O/DkH9s+HTy2IuWeE+z5Pv8cvP69ZDMgxe53382PQ5D/tnzspt3k1/PzaMGJzB/SSJ75e5O8tPOnfo9soa+a+RfVHcNUcPfZTfn4ehybpVOjv493XbOz/PFn8Bi62oxmA8rJ3LLiHxNZkpDfH1oDT1EkU+XAAVWk+dUtzhZTIx4nuyh2vZbA3azdGo7Tacs6Z5bo1Mt2G6nY51bvattuluSWaN4gDigNGAqFiKctdj8zVAHHscqA+pnrNMMh3XvvA4RALVxnQmLwGjHG6ZpGcrFHERIBI9Mea2F3lqoiJ8DoOOVrti4ppep/1AQLrPyc4eJ88Ak4SAIm4111wONheyFiuUZyKy6jmqU8gktaeKZT3babsGJ3ESgUJqxMzPIqgny6SsjMHXX1tHmJfa2ei2vG2f5nX4b1sCaeMTZcBVLmcg2wgfPC72NpHPE27tJrx13898oi6WrKdICV4j2f/1NiZqPqoZkRn9Gcz/WFvclfnRx9+fNL4AZRzWowrk52Qn7Pbplo+ApI3etpsrVF/VszzPyv61FD2m0r3kLMs1TNuYA84ksb3csiegRuXFOOoVqYAfBK/0+xAzsaRzgQTEcuBqpXjE2jAHrtaGsbwpxbE7yV5IWToBhfhIN4jkyqMQf7kVYQ8rO6meys8zS/23jn3gayeOzFNuDYLQUEnqBXn5ZC4wk26J5D6W7jr/yMFHwfeVVZErLEIO1CIT8PmfmiK1roYwZhkV46FWKnaJtsQpXhLw3ozeuSm5vFruyL9vdzopRwCDXAk5Kf2rN9pTV4CGO2S9CfqOrztuq9VpD9zGsL3L1/2Ba1ZF2UPXe6d+r9mp0+GM9/4B</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20141114_065126</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c75d16a0-15f9-4c38-92a7-b463b5807364</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d7135bcb-5ae9-48fd-b8bc-c9fc85d4a212</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00018_Account and User Create with FR 111_UserDelete SecondFull user 107_SUCCESS_P0" searchProperties="true" id="e8ecaaf0-535b-4015-a4e1-6640a5b703ef"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="72db9104-6e36-452b-a39b-af8ca46401a4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="959dc2cc-88cd-4a7d-a55d-2dd969ebe721"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","FR");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="fcbe9e32-e7bf-4c79-8ed8-94a737ecf3fb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFULL" id="1a64b70f-71bb-4fbd-b159-926b14247e42"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - AdultFULL" id="db995c8f-cc11-4ed3-bb03-95013c081170"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="f5d68ba7-cca3-41d5-afff-574ff9ff7046"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="14d72374-3336-4e36-ab37-4266dd8ae6ad"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="56975ece-31c3-49f9-8fa2-3c7d4c8af152"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc6JKEP4rFnlGBiVRqGiV623Z1cSom9tLahwanSwMhhkQ8+vPDCpRE3M854nqpqf768t809cch0HFaXEOsaARK2VhwLiTaxtaEjMnwpxyh+EQuCOIM2kNB06ljBy8O6KV3E5De7EQ1AHZoNfJFdKtWsXWcbVu6t7MmllkhrF1aUtTzhNwGReYiYZWQaalm6ZuWlNkOhXTsVDZtq+etdI9xFz6liZlpG1BZbyhLYRYOoaxWq3Kq2o5iudGBSHTeBwOJmQBIdaa15uM8kBxc2tPyh4QCAJSJlFoXBsHNtcedyZ0zrBIYtjG8k7FQgayDWnjcTq/0Iqz4LnMj3KxjVnEKMEBfceqPkMQi8grtYJ5FFOxCE8mYSLlWIeM6MS02IVmHEI709EBwphjnS+wufU1Bh9iYARKf8ZuQ7s4r2v50WmMGfejOOSH4n/DAyyFIFqCp/NdWlto5zv8olLNayCOy0iQcJrCjRrWJSbAt90Ecr6r0igGn2YDyuWAZlyhM/bhHYmbanToHLj4Pw3aa87GyT0OEmg+USt+rvaeXLsftPu9db01id2p3x2O3EYOYN84VxSt3YhHQ1kM0ebEo8fffj+PcI8Hf9PpbXj/8HP+MOq/d9cwfYvsddvz7m77qP3wyH7yu/6wH2Xvr79c1Paz+WhAmRyr7Kb+o8fdaXZ1k9nJMr7qTa3B7/rw/s57IqPxyl0PreosjLJL+/nmDuLF+/A1SVq/rDF+7Kfrh8f+wL+3/qz9ztO8ddntdl/Tfn+0fKqns3DWsRP/eXE7GD6iRpHOHv5D3e7OT5LZKxCxE9UYuJ1ST3YJi+/JTGmop/u5qbNU5MMFMKE11SnFHU4i6Y56juzhRka1dr1WRV2rVemiag110WUV1Wzb7KGW3TbRjmQ2KI4gtiPmUxVLUe5mbL4HSEKHA/Mg1tMokUzHtW88drDAJZeN5SWIGIdpJOk5q1kre3mV+GYd3lZ21Vy8htWUp1rpJhK37DZu+QLiQ0q2Dih5DIQuKSjeVmPN5VxzIUvxhtNEBGY5xWUGiWT2WJGsU7Hqlwan4TIABdQIIy8JoLxcLPPCGHzzreiY8Fw77k7zy3YyreN/uwpIG48qA65y+QGyi/DF21LdJXI64dp+wjv3rcSj6l7JcoqYkg2Sw18fU6LGoxgRmdFLe/Ji7nAX5mcf/3zS+AaUcVyPIpCX0r2wu5dbvgGSNZq7br7h8ls5SdMk719NsWMs3UvKMi8NVDEmQBLJa+tp9BeYUXgxznpECuBHwQv9IcRELNhEYAGhHLhSLp6xNUyAq63BlRclO3clOQgpSycgE1/p2oHceBTib5ci4hBlJ9Uj+VlFsffRsS987cWRecqlQVA2V5J6QNYn5oJE0i2V1BfF+86/cvBV8ENlUeQCi5ADNUsEnP5TUpzW0DAhUcKE29FyxT7P5jjFegnOh9EnNzmVF7sd/fflTqf5CBCQGyGnuX/1RDvqCrD5Hldvg56g68p3dH2IrvlJ/VmzV6fjGW/+Aw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C8730E4A220370E05307991F0A9C10</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C8730E4A220370E05307991F0A9C10</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C8730E4A2E0370E05307991F0A9C10</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C873154A90036EE05307991F0A5E0E</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_065235</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvO4ZSwbc3MFqhwgU55khiyQy+ZlSpYaUGLLYMmG8PUjGXCAXJbdJ1e3W92nLzrqC4HjyPF8ISCVLOGVdRxx4RXajpGl3EuwYMLjOAbhSeKN/Z83nlNFHt4fMSpBv2P8JhRhp9kKzVaN1ky3TWwTUyCmE1KbthoEuU6oTIXIIOBCYi47hoNs17Rt03YnyPYc26s3qrVa+8mo3EMqlG9lUkXGDtRadIy5lAvPslarVXVVqybpzHIQsq3HnzdjMocYG92LbUZFoLS7sydVBQWiiFRJElsX1pHNBRXemM04llkKu1j0s1jIQm1L2VDBZt+M8izQgE+TQuxhnnBGcMQ2WNfnJ8h5Qit+NEtSJufxp0nYSDs2YU1MYrv8m2EdQzvT0RHCVGBTzLG98zWCKaTACVTuRkHH+HZe14qjkxRzMU3SWByL/w0P8ByiZAHUFPu0dtDOd/hBpboXQLyAkygTLIdfelgXmIDYdRPI+a4qtylM2fqGCTWga6HRWYfwTsRtNfpsBkL+nwYdNGfr5B5HGXRl0lyRxih0ZzTzf/SDX+Ff4PiboNEgnQLAoXGhKFu7FU+Gshyi7Qk8v6vdyyl57Mkb+YKm14n9/dGu/cjCy2EfUPjiPg7D7KnP8hfL+h46Qbq56cEtf4HIR6MHin5s/sn/7l2N8+V1XTjPsjGbXgPvPQ76zXvcWL5eDojL8PpWXi56Df+ZbuLVxp5Efk4d8SCHBDbkMh2EdEaj4XNMW5uH4Oqu93g9XN7dNW/z56fnh9XDxFqGs06ZzgH+Y93+zo+z8BmI3It6DIJ+5Up1CcuvyUxrGDWnham30OQjJHBpdPUpzR1epuiOUU/1cCujZq/VrNl1128jVGsMBqheQ812275Cfn2ABnuS2aI4gdhL+JTpWJpyt2PzNUASewI4hdTMk0wxnTC+8NjHElcCPlKXIOECJomiZ0mbLxhWdRwtWnaCNytgpJHMGtio/ErkkA9TfyohPeZk94iTR0DYgoEmbj3XQg22kKoWS5xnMrKrOa5yyBS1p5plPcdt1S3B4kUEGqkVJzSLoLqYL4rKWGL7dUxMRKEdDSbFbfs0r9N/+xIoG8q0gdC5XIJqI3zwuLj7RD5PuHmY8N69n1GmL5aqp0wZ2SI5/vU2Jno+yhlRGf3ujX/be9yl+dnH35+0vgBlndajDERzdhB2/3SrR0DRRnffzSWuLqtZnmdF/5qaHlPlXnGWXbeQY42BZIrYXifJC3Cr9GKd9YqUwE+Cl/pjiJmc87HEEmI1cJVCPGNtGIPQa0Ogbsr63J3kKKQqnYS1/EjXi9TKoxF/uRURj2g7pb5Vn1WS0reOfeDrII7KU20NkvGZlvQL8vrJXJBEuWWK+5L00PlHDj4Kfqwsi1xikWqgwkzC538qmtQ6BiYkybgM+kahOCTaAqd8XYD3ZvTOTcHl5XLH/n27M1kxAgTUSihY4V+/0Z6+Anx2QNa7oO/5Gg1c33FQrYkO+brds1FZlCN03Xfq95qDOp3OePcP</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07C8730E4A510370E05307991F0A9C10:256F7DAC"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>07C8730E4A2E0370E05307991F0A9C10</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C873154A90036EE05307991F0A5E0E</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C8730E4A220370E05307991F0A9C10</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_065250</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_065250</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_065250</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>FR</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>07C873154A90036EE05307991F0A5E0E</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C873154A90036EE05307991F0A5E0E</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvO4ZSwbc3MFqhwgU55khiyQy+ZlSpYaUGLLYMmG8PUjGXCAXJbdJ1e3W92nLzrqC4HjyPF8ISCVLOGVdRxx4RXajpGl3EuwYMLjOAbhSeKN/Z83nlNFHt4fMSpBv2P8JhRhp9kKzVaN1ky3TWwTUyCmE1KbthoEuU6oTIXIIOBCYi47hoNs17Rt03YnyPYc26s3qrVa+8mo3EMqlG9lUkXGDtRadIy5lAvPslarVXVVqybpzHIQsq3HnzdjMocYG92LbUZFoLS7sydVBQWiiFRJElsX1pHNBRXemM04llkKu1j0s1jIQm1L2VDBZt+M8izQgE+TQuxhnnBGcMQ2WNfnJ8h5Qit+NEtSJufxp0nYSDs2YU1MYrv8m2EdQzvT0RHCVGBTzLG98zWCKaTACVTuRkHH+HZe14qjkxRzMU3SWByL/w0P8ByiZAHUFPu0dtDOd/hBpboXQLyAkygTLIdfelgXmIDYdRPI+a4qtylM2fqGCTWga6HRWYfwTsRtNfpsBkL+nwYdNGfr5B5HGXRl0lyRxih0ZzTzf/SDX+Ff4PiboNEgnQLAoXGhKFu7FU+Gshyi7Qk8v6vdyyl57Mkb+YKm14n9/dGu/cjCy2EfUPjiPg7D7KnP8hfL+h46Qbq56cEtf4HIR6MHin5s/sn/7l2N8+V1XTjPsjGbXgPvPQ76zXvcWL5eDojL8PpWXi56Df+ZbuLVxp5Efk4d8SCHBDbkMh2EdEaj4XNMW5uH4Oqu93g9XN7dNW/z56fnh9XDxFqGs06ZzgH+Y93+zo+z8BmI3It6DIJ+5Up1CcuvyUxrGDWnham30OQjJHBpdPUpzR1epuiOUU/1cCujZq/VrNl1128jVGsMBqheQ812275Cfn2ABnuS2aI4gdhL+JTpWJpyt2PzNUASewI4hdTMk0wxnTC+8NjHElcCPlKXIOECJomiZ0mbLxhWdRwtWnaCNytgpJHMGtio/ErkkA9TfyohPeZk94iTR0DYgoEmbj3XQg22kKoWS5xnMrKrOa5yyBS1p5plPcdt1S3B4kUEGqkVJzSLoLqYL4rKWGL7dUxMRKEdDSbFbfs0r9N/+xIoG8q0gdC5XIJqI3zwuLj7RD5PuHmY8N69n1GmL5aqp0wZ2SI5/vU2Jno+yhlRGf3ujX/be9yl+dnH35+0vgBlndajDERzdhB2/3SrR0DRRnffzSWuLqtZnmdF/5qaHlPlXnGWXbeQY42BZIrYXifJC3Cr9GKd9YqUwE+Cl/pjiJmc87HEEmI1cJVCPGNtGIPQa0Ogbsr63J3kKKQqnYS1/EjXi9TKoxF/uRURj2g7pb5Vn1WS0reOfeDrII7KU20NkvGZlvQL8vrJXJBEuWWK+5L00PlHDj4Kfqwsi1xikWqgwkzC538qmtQ6BiYkybgM+kahOCTaAqd8XYD3ZvTOTcHl5XLH/n27M1kxAgTUSihY4V+/0Z6+Anx2QNa7oO/5Gg1c33FQrYkO+brds1FZlCN03Xfq95qDOp3OePcP</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20141114_065250</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9eed9da-b266-4cd4-b688-1a9f8d10c2f9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58219bfe-c940-4645-9a8a-4ae7275d674d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00020_Account and User Create with NZ 111_UserDelete SecondFull user 107_SUCCESS_P0" searchProperties="true" id="848fed55-841a-483a-a6cd-c00c98c89965"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="68c9ea99-9699-4f5a-8527-0a3ff7c598ba"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="a9454c8e-9530-4cd9-b191-c01e925a6d08"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","NZ");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="18994add-c07a-4ef8-90fe-be9a38b7ef61"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFULL" id="8799d4c9-9ddf-4a01-981c-7dee81e3d5ff"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - AdultFULL" id="88598596-526c-4bb2-84fa-702ea564a183"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="6cfead10-0d3d-4e89-9a92-2d27cfb9ac0c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="4d0d25c3-8f0e-47fb-a843-b482c6b3ece5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="47c4d3f6-5d9c-4ee9-ba22-cdca228b6397"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynlM+W5urkAVAULIEJIBhpnkJSXkxihjy8SSueTrVzLgYAIsu0+ubre6T1901DcMhYHlNhiDmJOIFlZhQJmbamtKElM3Qowwl6IQmMuxO2w89lxLM1y0O6IUuq2a8mYVixOvWgZ1YiGsOhOwVVQxqioyqnapCMgsWSBMGUugSxlHlNcUyzAd1TRV0xkZpmvZrlHUrFL1VSmMIWbCtzDRDGULasVqyozzuavry+VSW9paFPu6ZRim/uexN8QzCJFSv9lklAaK61t7rHmAIQiwhqNQv9FzNjcec4fEp4gnMWxjeadiGbpR1YWNx4h/pWRnwevSaZSKTUQjSjAKyCeS9XkEPou8QiPwo5jwWXgyCdOQjlVYYRWbDr1S9Dy0Cx3lEMYMqWyGzK2vAUwhBoqh8GvQrSlXl3UtPTqKEWXTKA5ZXvxveIAuIIjm4Klsl9YW2uUOj1SqfgPY7VIcJIwsoC+HdY4wsG03AV/uqvAcw5SseoSJAV0xiU7fh3cgbqrRIj4w/n8atNecjZMxChKo9xvlePXSWw461UbT8x97pdG49YGA2EYtBbBvnCqy1m7Eg6HMhmhzIiyXluuo86f98tL9bJGf09vXB2i27697K9pLusPf0yDw+/2+/mPJBs3PmTfni2tm3OsVv2cvn4P3udNMHi1v3Abb8Al5Gkyajf71uOU/dZYD3mCWefuOGu/FDm09FSt2p4rW9w+jwB6Oy9i+v19+jm7LBmLTV96Byu/Y+bm+N8EYek4vch5ImfzAv5o9f9k2WC1LZw9/Xre788Nk8g6Y70Q5Bt1W4U50CfHzZCY1xFOnqak7l+TDOFCu1OUpyR1uIuiOeK7o4UY2ys1KuWLZd5WSY9w1Km2jaBvlatW8Mxpt89bakcwGxQHEZkSnRMaSlLsZm/MAcegyoB7E6iJKBNMx5YzHFuKo0KUDcQkiymAUCXou2yFPZn4U+OZsUf34Cw43Q+vzXSn0I/5En+LGlEOcp2QnR8kDwGROQPK2HGsm5ppxUYoPtEh4YGoLpFFIBLPHkmRdy6kUdUbCeQASqB5GXhKANp/N08LobPO1VIRZqh20R+llO5nW4b9dBYSNR6QBk7ncgugifHtbLLe4S+R0wuX9hHfuG4lH5L0S5eQxwRsk+V9fUyLHIxsRkdFbc/hm7nBn5hcf/35SPwNKP6xHFshbkL2wu5dbvAGCNeq7bn4g7UNLFosk7V9ZsmMs3AvKMou6YelDwIngtfUo+gtUz7zoFz0iGfCD4Jk+DzHhMzrkiEMoBq6QihdsDUNgcmvoiouyunQlyYUUpeOw4sd0zUBsPBLx2aUIu1jaCfWz+Cyj2Pvq2BFfe3FEnmJp4IT6UpIPyPrEXOBIuCWC+qJ43/kxB8eC55VZkTMsXAzUJOFw+k9BclpNQRhHCeXdlpIq9nk2xcnXc3C/jL65Sak82+3Ivy93KklHAIs9Utin/uUT7corQP09rt4GPU7Xxco5us6jq39Tf9fs1elwxuv/AA==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C87823F8580FA8E05307991F0AE1B2</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C87823F8580FA8E05307991F0AE1B2</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C87823F8640FA8E05307991F0AE1B2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C879392CCF139EE05307991F0A8293</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_06540</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VynlMGS+Yxa5AFZfl4oRswJDlJaXIbVDGlh1JZrlfP5IBB8gyzDy51G6dPr3oSBccxZHttTkHJkhCS6s4otzLrU0tY9RLECfcoygG7gnsjdvXQ88umx7abdFKfrepvTiVelBrWKHecKuB7jRqoL82qqYemFat4jqA63VbunKegU+5QFQ0Ndu0HN2ydMuZmJZnVzzbLruu+ayVpsC4xJYuZVPbklrxpjYXIvUMY7lclpeVcsJmhm2alvF4PRzjOcRIa11sMsoDsdbWH5cDwBBFuIyT2LgwDnwuAu6NyYwikTHYxgq+i2UapmtIn4CT2ZlW7IXAp2GSLzuIJpRgFJE/SNXnGsQ8CUrtaJYwIubxt0lYpgLWYYV1bDn0TDMOqZ0IdMCQcaTzObK2WCMIgQHFUPpr5De1s9O6lm+dMER5mLCYHy7/Gx+gC4iSFAKd79LaUjsd8ItKtS4Aez7FUcbJAm7UsKYIA992E/DpUKU7BiFZDQmXA7riip2xT+9oualGl8yAi//ToL3mbECmKMqgRe7ub+lwPIl+P8/cwfTcMNLukAj3ennfzAnsO+eGorWb5dFQFkO02YHunfSVWLVsas9j30+DW8e5C57uh6PL7Hw+XbDezdt5zX1Gz51w9OfxofNoTwZX/nzVH5Bqu3JZZXQxOX8a1EW6ni+WuPLgd8yHwYjd3/nRaxqGjrV0h8PV9HJkXo1Xfna3fg2i5dODczW6nqbWwPenb/FVbzJIk6jdv0pJuzYO+2SMzEbvt8vc7nX60H7vdvu8WaSzx//Qtjvz4+z1DbDYLdUY+N1SX3YJiZ/FTFlIoIe5q5cq8eECqNBaapfSDi+TckcCT/ZwszbrnUbdrbh2p9O3Km6vZ1YrZt11rb7ZbthuZScyGxZHFDsJDYmKpSR3MzY/E8Sxx4EGwPRFkkml49oPiF0kUMmnI3kIEsphkkh5jkitYjvrmhNkYIVONVqvE7ay3kEr3STilt6ydiiAHWqyc6DJI8AkJaCEW801l4PNhazFO1pkIrLKC1SmkElpZ0plPdtpVA1O4jQCxdSIkyCLoJzO07wyBt98bR1hnltHvUl+2r7N6/jfrgTSJyDKgatcfoFsI3xxuVi7RL5PuL6f8A6+nQVEHSxZT8EI3jA5/PUxJmo+ihmRGb10xi/WjnfhfvL2zzuNH0gZx/UoAgULshd2d3XLS0DKRmvXzXdUfi9ni0WW96+u5JFJeKlZVtUwbWMMOJPCtp4kfwM1ChTjpFukIH4UvLAfUszEnI4FEhDLgSvlyxOeDWPg6tngy5OyOvVNchBSlk7ASnxl60TyyaMY//gqwh5WftJ8Jz/LhAUfHfsCay+OzFO+GgShM7VSN8j6m7nAiYQlUvsStg/+FcBXwQ+NRZELLkIO1Gsm4Ps/JSVqTQ1hnGRU+F0tN+wLbc5TrFPwPpw+weRaXjzuyL+/7nSSjwCWoiX9c3x1R3vqCNDZnlhvg37S64Zd6TeqDbPfbuzrdc/69TGfB+xan8yfLXt1Op7x1j8=</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07C8782DE61D0FAAE05307991F0AFC18:103AFE32"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>07C87823F8640FA8E05307991F0AE1B2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C879392CCF139EE05307991F0A8293</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C87823F8580FA8E05307991F0AE1B2</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_065418</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_065418</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_065418</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>NZ</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>07C879392CCF139EE05307991F0A8293</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C879392CCF139EE05307991F0A8293</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VynlMGS+Yxa5AFZfl4oRswJDlJaXIbVDGlh1JZrlfP5IBB8gyzDy51G6dPr3oSBccxZHttTkHJkhCS6s4otzLrU0tY9RLECfcoygG7gnsjdvXQ88umx7abdFKfrepvTiVelBrWKHecKuB7jRqoL82qqYemFat4jqA63VbunKegU+5QFQ0Ndu0HN2ydMuZmJZnVzzbLruu+ayVpsC4xJYuZVPbklrxpjYXIvUMY7lclpeVcsJmhm2alvF4PRzjOcRIa11sMsoDsdbWH5cDwBBFuIyT2LgwDnwuAu6NyYwikTHYxgq+i2UapmtIn4CT2ZlW7IXAp2GSLzuIJpRgFJE/SNXnGsQ8CUrtaJYwIubxt0lYpgLWYYV1bDn0TDMOqZ0IdMCQcaTzObK2WCMIgQHFUPpr5De1s9O6lm+dMER5mLCYHy7/Gx+gC4iSFAKd79LaUjsd8ItKtS4Aez7FUcbJAm7UsKYIA992E/DpUKU7BiFZDQmXA7riip2xT+9oualGl8yAi//ToL3mbECmKMqgRe7ub+lwPIl+P8/cwfTcMNLukAj3ennfzAnsO+eGorWb5dFQFkO02YHunfSVWLVsas9j30+DW8e5C57uh6PL7Hw+XbDezdt5zX1Gz51w9OfxofNoTwZX/nzVH5Bqu3JZZXQxOX8a1EW6ni+WuPLgd8yHwYjd3/nRaxqGjrV0h8PV9HJkXo1Xfna3fg2i5dODczW6nqbWwPenb/FVbzJIk6jdv0pJuzYO+2SMzEbvt8vc7nX60H7vdvu8WaSzx//Qtjvz4+z1DbDYLdUY+N1SX3YJiZ/FTFlIoIe5q5cq8eECqNBaapfSDi+TckcCT/ZwszbrnUbdrbh2p9O3Km6vZ1YrZt11rb7ZbthuZScyGxZHFDsJDYmKpSR3MzY/E8Sxx4EGwPRFkkml49oPiF0kUMmnI3kIEsphkkh5jkitYjvrmhNkYIVONVqvE7ay3kEr3STilt6ydiiAHWqyc6DJI8AkJaCEW801l4PNhazFO1pkIrLKC1SmkElpZ0plPdtpVA1O4jQCxdSIkyCLoJzO07wyBt98bR1hnltHvUl+2r7N6/jfrgTSJyDKgatcfoFsI3xxuVi7RL5PuL6f8A6+nQVEHSxZT8EI3jA5/PUxJmo+ihmRGb10xi/WjnfhfvL2zzuNH0gZx/UoAgULshd2d3XLS0DKRmvXzXdUfi9ni0WW96+u5JFJeKlZVtUwbWMMOJPCtp4kfwM1ChTjpFukIH4UvLAfUszEnI4FEhDLgSvlyxOeDWPg6tngy5OyOvVNchBSlk7ASnxl60TyyaMY//gqwh5WftJ8Jz/LhAUfHfsCay+OzFO+GgShM7VSN8j6m7nAiYQlUvsStg/+FcBXwQ+NRZELLkIO1Gsm4Ps/JSVqTQ1hnGRU+F0tN+wLbc5TrFPwPpw+weRaXjzuyL+/7nSSjwCWoiX9c3x1R3vqCNDZnlhvg37S64Zd6TeqDbPfbuzrdc/69TGfB+xan8yfLXt1Op7x1j8=</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20141114_065418</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c9eed9da-b266-4cd4-b688-1a9f8d10c2f9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58219bfe-c940-4645-9a8a-4ae7275d674d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00021_Account and User Create with NZ 111_UserDelete Standard Youth user107_SUCCESS_P0" searchProperties="true" id="1d46c1c5-0053-4038-a4b3-b7138893905f"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="2bdf0205-8128-4035-afcd-8fe78872513a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="b7d4e64b-2f1e-430a-8bb6-86b322ae4743"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","NZ");

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="89900b55-2105-4fac-b799-1fb7702e5f25"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUser" id="85b81078-5902-42ff-b4cd-2ae473055ef2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - StandardYouthUser" id="d9502015-0c1e-44be-8c4f-5ba96deb7eab"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="36d85f1d-b6ff-42d5-bfc0-1b7cb5b7364d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="dec7171a-a6b2-46df-b9f1-224f3215f74a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="5345fb13-7dfb-46cd-bb9e-28d5055cd161"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0VyvcxZbywGLsCVSxZuIEskK3ykhJyA0psyViyMfn6kQw4QJZh5snV7Vb36UVHfcpRGNhem3OIBWG0lIUB5V6ubWpJTD2GOOEeRSFwT2Bv3B4OPLtsemh7RCv1e03t1bQbLqpXa7pjV129iqCqIwSW7sBkAm6jWmv4NWnKeQJ9ygWioqnZplXVLUu3qvem5dlVr2KVTdd90UqPEHPpW5qUTW0DKuNNbS5E5BnGcrksLytlFs8M2zQt43k4GOM5hEhrna4zygPFrY09LvuAIQhwGbPQODX2bE597o3JjCKRxLCJ5f8UyzRM15A2PiezP1pxFvw+nbJc7CLKKMEoIB9I1WcIYs78UjuYsZiIefhjEpapHOuQYR1bVfpHM/ahHeloD2HMkc7nyNr4GsEUYqAYSg+jflP7c1zX8qP3MaJ8yuKQ74v/DQ/QFAIWga/zbVobaMc7/KZSrVPAXp/iIOEkhWs1rBHCwDfdBHy8q9JtDFOSDQiXA5pxhc7YhXcgrqvRIzPg4v80aKc5ayePKEigdd4xzJE7mjzhdxJxBHf2w9xHk07S6DdzALvGuaJo7Vo8GMpiiNYnLgdRIzupwuokJpOrj/RjMH0IFyeMnTzX3/qN9CkgWcN9ry8ngzQLF+7EuPjLH3jPyh6Gy1VyJa79l/eViy/Sp+7LIHgZvNXvFk7m3FAyaidnJ73VY/x2c0m6z+nj+W0dDebdyd/MSJ1LTuFaiLodTYaPy/eT3sUd3M6uhv0X7mY06dx+TDujR3f4MbxoBHQRh2fNIp0d/Pu67Z0fJ5M3wGIrqjHo90rnsktI/E5mSkN8fZqbepEiHy6ACq2lTinu8BJJd8T3ZA/Xsul0G07PaXcqbcfqOs6ZWauYjuta52a70zEbW5JZoziA2GV0SlQsRbnrsfkdIA49DtSHWE9ZIpmOa7947CGBSn06kpeAUQ73TNLzfGVHaWXBaozOxfwNV2YLWq9XUq10zcQNvYnbUwHxPiVX9yh5BJhEBBRvq7Hmcq65kKVYoDQRgVVOUZlCIpk9ViQrjzZqBidhFIACaoTMTwIoR/MoL4zB119bR5jn2tHZfX7Zfkzr8N+2AtLGJ8qAq1w6ILsI37wt9jaRnxN2dhPeum8nPlH3SpZTxASvkez/+pwSNR7FiMiMXrvjV2uLuzA/+vjXk8YvoIzDehSB/JTshN2+3PINkKzR2nZzgcqLcpKmSd4/R7FjLN1LyrJqhmkbY8CJ5LXVPXsHahRejKMekQL4QfBCvw8xEXM6FkhAKAeulItHbA1j4Gpr6MuLkh27kuyFlKUTkInvdN1AbjwK8a9LEfawspPqW/lZstj/7Ng3vnbiyDzl0iAInSlJPSCrH+YCM+mWSOpj8a7z7xx8F3xfWRS5wCLkQE0SAT//KSlOa2oIY5ZQ0e9puWKXZ3OcYhWB92n0xU1O5cVuR/59udNJPgIY5EbISe5fPdGeugJ0tsPVm6Bf6brmnrUrNVPydU7XtTVdO5Xzgq730bW+qL9qdup0OOOtfwA=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C87D59EA3501C7E05305991F0A73F8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C87D59EA3501C7E05305991F0A73F8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C87D7AB3A71C77E05307991F0ABB08</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C84866AC057DC8E05305991F0A909F</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_065527</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0Vynm8Zbyx2RWo4hqY6wRIBpP1JSXkBisxsrFkQvj6kQw4QEKGmSdXt1vdpxcd9SVD88h02oxByklMS6t5RJmTa5tKllInRowwh6I5MIdjx28P+o5Z1h20O6KUvE5Teak0wMYI19WGpZtqpVGvqmg6rahGAwVVMKZVo4aEKWMZeJRxRHlTMXVDGBiqURnrhmNWnEqjbOrWs1K6h5QJ38KkrCtbUCvWVELOE0fT3t/fy+9WOU5nmqnrhvY46Ps4hDlSWpebjPJAaWtrj8sBYIgiXMbxXLvUDmwuA+b4ZEYRz1LYxgpOxdI13daETcDI7EIpzkLg0Wmciy6iMSUYRWSNZH0GwMM4KLWjWZwSHs5PJmHo0rEKK6xio0IvFO0Q2pmODhCmDKksRMbW1wimkALFULobeU3l4ryu5UfHKaJsGqdzdij+NzxAlxDFCQQq26W1hXa+w28q1boE7HgURxkjSxjKYU0QBrbtJuDzXZVuU5iSVZ8wMaArJtFp+/COxE01OmQGjP+fBu01Z+PkHkUZtPjT8jbQuYVxYpIk/FV7pmbKKn+uEtzMAewb54qitRvxaCiLIdqcQIv4BhHtLutblWRUe1353rK+tCfD12vjJuB9rA+fa+7k4fFutXgzh7bxp4/88bM3eCMD/yH013/fm8Fb6F2PKLm67j78cvsU397dWry2mND7if6b3bvLkTVup1fdh2tiN6xOhkdXXXf8yB9Hruv249hftFlWnfWeZrj7PAj6bXuNFrO/jCcIP/yx97AOu8Neu1mks4f/ULe78342eQXMd6IcA69T6okuIf4zmUkNCdRpbuokknwYB8qVljwlucPJBN2RwBE93Mh63W1UGrVa29Wr9Y7b6OpVS6/attHT27Zu93Yks0FxBNGN6ZTIWJJyN2PzM0A8dxjQAFJ1GWeC6Zjyg8cO4qjk0ZG4BDFlMI4FPb/hdW1tJVOd2IGBwX61wlVofthMKQ1jfkNv0vaUQ3rIyZUDTh4BJgkBSdxyrpkYbMZFLRZomfHIKC9RmUImqD2VLCuONqoaI/MkAolUm8dBFkE5CZO8MhrbfE0VYZZrR91xfttO5nX8b1cCYRMQacBkLr9BtBG+eVysXSKnE67vJ7xz384CIi+WqCdPCd4gOfz1OSZyPooZERm9uP6LscNdmJ99/OtJ7QdQ2nE9ikDBkuyF3T3d4hEQtNHadXOByotytlxmef/qkh5T4V5wllHVdFPzAWeC2D7G8RtQrfCinfWKFMCPghf6Q4gZD6nPEYe5GLhSLp6xNvjA5NrgiZuyOncnOQgpSsdhxb/TuZFYeSTiH7ci7GBpJ9S34vMep8Fnx77xtRdH5Cm2Bk7oTEryBfk4MRc4Fm6J4L443Xf+nYPvgh8qiyIXWLgYqEnG4fSfkiS1poIwjjPKvY6SK/aJNsfJPxJwPo2+uMm5vFjuyL9vdyrJRwCDWAkZyf3LN9qRV4DO9sh6G/SYr+udqt1tW1XdcOv7fF23eo2iKAfoWl/UXzV7dTqe8dY/</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07C84866AC1B7DC8E05305991F0A909F:DED81BD3"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>07C87D7AB3A71C77E05307991F0ABB08</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C84866AC057DC8E05305991F0A909F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C87D59EA3501C7E05305991F0A73F8</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_065540</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_065540</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_065540</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>NZ</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>07C84866AC057DC8E05305991F0A909F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C84866AC057DC8E05305991F0A909F</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbZcuo4EP0Vynm8Zbyx2RWo4hqY6wRIBpP1JSXkBisxsrFkQvj6kQw4QEKGmSdXt1vdpxcd9SVD88h02oxByklMS6t5RJmTa5tKllInRowwh6I5MIdjx28P+o5Z1h20O6KUvE5Teak0wMYI19WGpZtqpVGvqmg6rahGAwVVMKZVo4aEKWMZeJRxRHlTMXVDGBiqURnrhmNWnEqjbOrWs1K6h5QJ38KkrCtbUCvWVELOE0fT3t/fy+9WOU5nmqnrhvY46Ps4hDlSWpebjPJAaWtrj8sBYIgiXMbxXLvUDmwuA+b4ZEYRz1LYxgpOxdI13daETcDI7EIpzkLg0Wmciy6iMSUYRWSNZH0GwMM4KLWjWZwSHs5PJmHo0rEKK6xio0IvFO0Q2pmODhCmDKksRMbW1wimkALFULobeU3l4ryu5UfHKaJsGqdzdij+NzxAlxDFCQQq26W1hXa+w28q1boE7HgURxkjSxjKYU0QBrbtJuDzXZVuU5iSVZ8wMaArJtFp+/COxE01OmQGjP+fBu01Z+PkHkUZtPjT8jbQuYVxYpIk/FV7pmbKKn+uEtzMAewb54qitRvxaCiLIdqcQIv4BhHtLutblWRUe1353rK+tCfD12vjJuB9rA+fa+7k4fFutXgzh7bxp4/88bM3eCMD/yH013/fm8Fb6F2PKLm67j78cvsU397dWry2mND7if6b3bvLkTVup1fdh2tiN6xOhkdXXXf8yB9Hruv249hftFlWnfWeZrj7PAj6bXuNFrO/jCcIP/yx97AOu8Neu1mks4f/ULe78342eQXMd6IcA69T6okuIf4zmUkNCdRpbuokknwYB8qVljwlucPJBN2RwBE93Mh63W1UGrVa29Wr9Y7b6OpVS6/attHT27Zu93Yks0FxBNGN6ZTIWJJyN2PzM0A8dxjQAFJ1GWeC6Zjyg8cO4qjk0ZG4BDFlMI4FPb/hdW1tJVOd2IGBwX61wlVofthMKQ1jfkNv0vaUQ3rIyZUDTh4BJgkBSdxyrpkYbMZFLRZomfHIKC9RmUImqD2VLCuONqoaI/MkAolUm8dBFkE5CZO8MhrbfE0VYZZrR91xfttO5nX8b1cCYRMQacBkLr9BtBG+eVysXSKnE67vJ7xz384CIi+WqCdPCd4gOfz1OSZyPooZERm9uP6LscNdmJ99/OtJ7QdQ2nE9ikDBkuyF3T3d4hEQtNHadXOByotytlxmef/qkh5T4V5wllHVdFPzAWeC2D7G8RtQrfCinfWKFMCPghf6Q4gZD6nPEYe5GLhSLp6xNvjA5NrgiZuyOncnOQgpSsdhxb/TuZFYeSTiH7ci7GBpJ9S34vMep8Fnx77xtRdH5Cm2Bk7oTEryBfk4MRc4Fm6J4L443Xf+nYPvgh8qiyIXWLgYqEnG4fSfkiS1poIwjjPKvY6SK/aJNsfJPxJwPo2+uMm5vFjuyL9vdyrJRwCDWAkZyf3LN9qRV4DO9sh6G/SYr+udqt1tW1XdcOv7fF23eo2iKAfoWl/UXzV7dTqe8dY/</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20141114_065540</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c75d16a0-15f9-4c38-92a7-b463b5807364</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d7135bcb-5ae9-48fd-b8bc-c9fc85d4a212</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00023_Account and User Create with IE 111_UserDelete SecondFull user 107_SUCCESS_P0" searchProperties="true" id="a964be7b-90e8-48ff-a836-45d9ad0bbde4"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="1bd309c9-9430-4c40-ab21-99324e382e6b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="6cd1e89a-91c8-44fa-ab4f-73898112b768"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","IE");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="b8daf25b-d3e1-42b9-985e-f1f9e7e5dc20"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFULL" id="6ace1e32-a566-4bbc-8013-b0d882006560"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - AdultFULL" id="2fdd6485-0745-4f06-a05e-c081c36a636c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="cfcbf1a3-4adf-4011-8571-9a51cba4c76e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="f34fac42-d570-430f-be59-97a56960c67e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="a9259386-b1ba-48af-aad5-cadeb060ad1a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMr5gB3AFqhwcJmxCwi2Q5CUl5AY0MbKxZG5fP5IBBwhk2X1ydbvVffqio75haBqYjssYxJyENLecBpQ5qbaiJDF1QsQIcyiaAnM4drpu89Ex87qDdkeUXMOrKB++VdaRfV1Qh3phqFpDjNQShoJaLBhD69o2i0IlTBlLoEEZR5RXFFM3LNUwVMPq6YZj2o5t503DfldyfYiZ8C1M8rqyBbVkFWXCeeRo2mKxyC8K+TAea6auG9pr87GLJzBFSvVmk1EaKK5u7XHeBwxBgPM4nGo32oHNjc+cLhlTxJMYtrH8c7F0TS9rwsZnZPxLyc6C36CjMBVriIaUYBSQNZL1aQKfhH7ODcZhTPhkejYJQ5eOVVhiFRsW/aVoh9AudHSAMGZIZRNkbH11YAQxUAy5l06jovy6rGvp0V6MKBuF8ZQdiv8ND9A5BGEEvsp2aW2hXe7wRKWqN4CdBsVBwsgcnuSwRggD23YT8OWucq0YRmT5SJgY0CWT6LR9eEfiphoeGQPj/6dBe83ZOOmjIIHqP4/9ziCC4uvqpfvc6ntBZ9GH9jVlk0YlBbBvnCqy1m7Eo6HMhmhzwm24JTbwXwut++b6vtnS7mF16686/fUy+XP3ZrXbt+taazmxB3Vz5hZIvTP43fU0pj93BmGtSHSGHhMtLievhqcFc8Zu8ST43dfNZtu8rt213RhbxavZ0z3tgP/04EUtT5s8lGpPy/e3wefypd0qdnvNT9/uzOvj92b5ATq1euPTKr2/tZvDq5o9e10bV03eG7FKls4e/kPd7s53k+EfwHwnyjFoeLm66BLiP5OZ1BBfHaWmTiTJh3GgXKnKU5I7nETQHfEd0cONrBdrpZJpF9x6+drQPetOtwu6XS4bdd11b+/sHclsUBxBrIV0RGQsSbmbsfkZIJ46DKgPsToPE8F0TPnBo4c4yjVE6VkUUga9UNDzerIc26xoWLw0ZmX/M7DGc64biZJ7CvkzfY7dEYf4kJKtA0ruACYRAcnbcqyZmGvGRSlmaJ7wwMjPUZ5CIpg9liTrmFbJ1hiZRgFIoNo09JMA8tEkSgujsc3XVBFmqbZz10sv29m0jv/tKiBsfCINmMzlFkQX4cTbYu0SOZ9wcT/hnXs38Ym8V6KcPCZ4g+Tw19eUyPHIRkRk9FHrfhg73Jn5xce/n9R+AKUd1yML5M/JXtjdyy3eAMEa1V03Zyg/yyfzeZL2ryjZMRbuBWUZtqabWhdwInht1Qs/gWqZF+2iRyQDfhQ80x9CTPiEdjniMBUDl0vFC7aGLjC5NTTERVleupIchBSl47Dkp3S1QGw8EvGPSxF2sLQT6pb4LMLY/+rYCV97cUSeYmnghI6lJB+Q1Zm5wKFwSwT1hfG+81MOTgU/VGZFzrBwMVDDhMP5PznJaRUFYRwmlDc8JVXs82yKk68icL6MvrlJqTzb7ci/L3cqSUcAg9gIGUn9yyfakVeAjve4ehv0O11bNc+07wzdLO3Ttae7X3f0AF31m/q7Zq9OxzNe/Qs=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C8824CD25E1028E05305991F0AD0A1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C8824CD25E1028E05305991F0AD0A1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C88253AF9610D4E05305991F0AABE5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C8825292EC28D4E05307991F0AAA86</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_065650</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc9o6EP4rjPvYMb6EqycwQ4GkbklJMAlpXjKyvIBaWwJJxia//kjmEiCXwzlPnl2vdr+96NNeCpTErtcRArgkjJbyJKbCK7QtI+XUY0gQ4VGUgPAk9oLOzcBzy7aHdkeMkt9rGc+hizE0o8isubhpVho2NhvTRmg26mEzrDbrNTusK1MhUvCpkIjKluHaTsV0HNOpjG3Hc2ueXS/X7caTUXoALpRvZVK2jS2oXLSMuZQLz7KyLCtnF2XGZ5Zr2471eDMI8BwSZLQvNxkVgXh7a4/LEWCIY1zGLLEurSOby0h4AZlRJFMO21jRR7Fsy25ayiYSZPbF2J+FyKdTVohdRBklGMXkBen63ICcs6jUiWeMEzlPPkzCsbVjE3JsYqdCvxjWMbQzHR0h5AKZYo6cra8RTIEDxVC6H/kt48t5XSuOjjmiYsp4Io7F/4YH6ApitoDIFLu0ttDOd/hOpdqXgD2f4jgVZAW/9LAuEAax7Sbg812VbjlMST4gQg1oLjQ66xDeibipRo/MQMj/06CD5mycPKA4hTaLsnFPrmtsuF5PXnJSzYbyhsfjyd3fVgHg0LhQ7Fu7EU+Gcj9EmxPf/cebodUMX3507+cPy/X9cDnM8kEjmD88jr7JydXv2VUWfe3/pj/CO7uZBPYwf/wzGw0HVm/ykojVIOfDq6m/ZE2ZVr4mSTZ6orcxdhaBJBDEKY6evqc/wgGtUT68y8PJ4L7be7yKgH+9/caimyR4CLOpzKA7qZCn2YrfL3Nx7XezIbleXfs/+5OLtF/rTeQ23RP8x7rdnQ/S8A9guRP1GPi90pXqEpKfk5nWkMicFqbeQpOPkECl0danNHd4qaI7EnmqhxvZrncbDbfqNt1+1230Kn27emHXm03nyu50Oo3ajmQ2KE4gdhmdEh1LU+5mbD4HiBNPAFXlM1csVUwnjE889pBEJZ+O1CVgVMCYKXp2xIqj/IXgtfu37oQXF8v6Rd2eYkWZpV9MDumQd6YS+DEpV45IeQSYLAho5taDLdRkC6mKsUSrVMZOeYXKFFLF7VzTrOdWGlVLkGQRg4ZqJSxKYygv5ouiNJbYfF0TYVFoR/1xcd0+TOz0364GyiYi2kDoXL6B6iO8eV2qXnWXyMcJ1w8T3rnvpBHRN0sVVHKCN0iOf73OiR6Q/ZCojJ67wbOzw703P/v425PWJ6Cs03rsA0UrchB293arV0DxRnvXzSUqL8vpapUW/atrfuTKvSItp2rZrhUAThWzrcfsL1Br78U66xnZAz8JvtcfQ0zlnAYSSUjUwJUK8Yy9IQCh9wZfXZX83KXkKKQqnYRcvqfrxmrn0Yg/XYuwh7WdUt+qT8Z49Nqxd3wdxFF5qrVBEjrTkn5C1h/MBWbKLVHkx/ih8/ccvBf8WLkv8h6LVAMVphI+/lPSrNYyEMYspdLvGYXikGkLnHK9AO/V6I2bgsz32x359/XOJMUIYFA7oSCFf/1Ie/oK0NkBW2+DviXsSrfnVvuO7TYKwq5uCLtnd17v6BG69hv1W81BnU5nvP0P</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07C8824CD2701028E05305991F0AD0A1:21952BF0"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>07C88253AF9610D4E05305991F0AABE5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C8825292EC28D4E05307991F0AAA86</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C8824CD25E1028E05305991F0AD0A1</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_06573</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_06573</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_06573</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>IE</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>07C8825292EC28D4E05307991F0AAA86</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C8825292EC28D4E05307991F0AAA86</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbc9o6EP4rjPvYMb6EqycwQ4GkbklJMAlpXjKyvIBaWwJJxia//kjmEiCXwzlPnl2vdr+96NNeCpTErtcRArgkjJbyJKbCK7QtI+XUY0gQ4VGUgPAk9oLOzcBzy7aHdkeMkt9rGc+hizE0o8isubhpVho2NhvTRmg26mEzrDbrNTusK1MhUvCpkIjKluHaTsV0HNOpjG3Hc2ueXS/X7caTUXoALpRvZVK2jS2oXLSMuZQLz7KyLCtnF2XGZ5Zr2471eDMI8BwSZLQvNxkVgXh7a4/LEWCIY1zGLLEurSOby0h4AZlRJFMO21jRR7Fsy25ayiYSZPbF2J+FyKdTVohdRBklGMXkBen63ICcs6jUiWeMEzlPPkzCsbVjE3JsYqdCvxjWMbQzHR0h5AKZYo6cra8RTIEDxVC6H/kt48t5XSuOjjmiYsp4Io7F/4YH6ApitoDIFLu0ttDOd/hOpdqXgD2f4jgVZAW/9LAuEAax7Sbg812VbjlMST4gQg1oLjQ66xDeibipRo/MQMj/06CD5mycPKA4hTaLsnFPrmtsuF5PXnJSzYbyhsfjyd3fVgHg0LhQ7Fu7EU+Gcj9EmxPf/cebodUMX3507+cPy/X9cDnM8kEjmD88jr7JydXv2VUWfe3/pj/CO7uZBPYwf/wzGw0HVm/ykojVIOfDq6m/ZE2ZVr4mSTZ6orcxdhaBJBDEKY6evqc/wgGtUT68y8PJ4L7be7yKgH+9/caimyR4CLOpzKA7qZCn2YrfL3Nx7XezIbleXfs/+5OLtF/rTeQ23RP8x7rdnQ/S8A9guRP1GPi90pXqEpKfk5nWkMicFqbeQpOPkECl0danNHd4qaI7EnmqhxvZrncbDbfqNt1+1230Kn27emHXm03nyu50Oo3ajmQ2KE4gdhmdEh1LU+5mbD4HiBNPAFXlM1csVUwnjE889pBEJZ+O1CVgVMCYKXp2xIqj/IXgtfu37oQXF8v6Rd2eYkWZpV9MDumQd6YS+DEpV45IeQSYLAho5taDLdRkC6mKsUSrVMZOeYXKFFLF7VzTrOdWGlVLkGQRg4ZqJSxKYygv5ouiNJbYfF0TYVFoR/1xcd0+TOz0364GyiYi2kDoXL6B6iO8eV2qXnWXyMcJ1w8T3rnvpBHRN0sVVHKCN0iOf73OiR6Q/ZCojJ67wbOzw703P/v425PWJ6Cs03rsA0UrchB293arV0DxRnvXzSUqL8vpapUW/atrfuTKvSItp2rZrhUAThWzrcfsL1Br78U66xnZAz8JvtcfQ0zlnAYSSUjUwJUK8Yy9IQCh9wZfXZX83KXkKKQqnYRcvqfrxmrn0Yg/XYuwh7WdUt+qT8Z49Nqxd3wdxFF5qrVBEjrTkn5C1h/MBWbKLVHkx/ih8/ccvBf8WLkv8h6LVAMVphI+/lPSrNYyEMYspdLvGYXikGkLnHK9AO/V6I2bgsz32x359/XOJMUIYFA7oSCFf/1Ie/oK0NkBW2+DviXsSrfnVvuO7TYKwq5uCLtnd17v6BG69hv1W81BnU5nvP0P</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20141114_06573</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bc57b30d-8b4a-4613-9ee4-67533eefabe6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f4ee901a-64a1-4595-b400-be236adb0d5f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00024_Account and User Create with IE 111_UserDelete Standard Youth user107_SUCCESS_P0" searchProperties="true" id="a792f43a-a4f6-4930-a2ab-a533e4a7b2a1"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="70d8a59e-000a-43ce-9623-5134a04bc437"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="9ee773d3-1df2-4d8c-b559-66e9373bd297"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","IE");

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="4280c55a-114c-4809-bda6-d0d27f636b79"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUser" id="2c9350d4-c9b2-4a60-b3aa-fa09355d9ca9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - StandardYouthUser" id="33cf3a78-c221-4b2b-a7fa-17f46d2dd9a5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="be1c777d-d2c4-4de2-959b-5259b64f50a6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="90e52e7b-5a28-4e61-b60a-af2349f1f753"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="a0d3e369-2b58-407e-80b1-34e1a759b00a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+o6EP4rTM9HpzQp5cWOMIMiWhX1UFSuX86ENIVgm5Ym4eX8+pMU6AFEL/d+6ux2s/vsS57sBUdxZLttzkkmaMJKyzhi3M21TUNmzE0Qp9xlKCbcFdj1270H1y4DF22PGCWv0zR+jeywigkYmY1qEJoOrIfm+QjXzFE1aGBy7jg1WFWmnEviMS4QE03DBtAxITShMwDQtesurJVBxX43Sq8k48q3MikDYwNqyZvGRIjUtazFYlFeVMpJNrZsAKA17D34eEJiZLQu1hnlgbLWxh6XA4JJFOEyTmLrwtqzuQi469MxQ0JmZBMr+CoWsMC5pWwCTsc/jOIsCTwWJrl4hVjCKEYR/Y10fXpETJKg1I7GSUbFJP4yCQi0Y5MssYmhw34Y1j60Ex3tIcw4MvkEwY2vPglJRhgmpZe+1zR+nNa1/OggQ4yHSRbzffG/4SFsTqIkJYHJt2ltoJ3u8EilWhcEux7DkeR0Th71sKYIE77pJsGnuyo9ZySkywfK1YAuuUZn7cI7ENfV6NAx4eL/NGinOWsnryiSpPUxeLh/mvhixW/C3nv77MaZLKMBAOHCaeYAdo1zRdHatXgwlMUQrU8Mq75zi4dptrqPw/ef/eGDnM1vercfy+79AvgB8iewwq5qnu/RYSekluw5MJ11k0s2SP2PLK7d9uBwFty9Y3vh1fynGb5/ObvpP5GfEqTP3u9XKP8ZCzitj1/4AHpSxj/vGtHS71zb/sej9zqX74/Tx8uzu5ov32qgcfbwNhy+dZ6vJ3e3iTOwFj0bzhtdMOo1i3R28O/rtnfel6MpwWIr6jHwOqWu6hIS35OZ1tDADHNTN9XkwwVhwmjpU5o7XKnojgau6uFaBvWrRqMOO7XrulOxQeUaVCugfn4Ou6Bd7VxXtySzRnEA8SphIdWxNOWux+Z7gDh2OWEBycx5IhXTceMbjx0kUMljfXUJEsbJIFH0vFrB8XTOaBXUp3CE4tieielUTJdG6TERT+wpa4eCZPuc7Oxxcp9gmlKiiVvPNVeDzYWqxQzNpYhgeY7KjEhF7ZlmWdd2GlWL0ziNiEZqxUkgI1JOJ2leGYuvv7aJMM+1/etBftu+zOvw37YEyiag2oDrXC6JaiM58riAbSJfJ1zfTXjrvi0Dqi+WqqfIKF4j2f/1d0z0fBQzojL6deX/glvchfnJxz+ftL4BZR3WowgUzOlO2O3TrR4BRRutbTdnqDwry/lc5v2ra3rMlHvFWbBqAdvyCZaK2FaD5IMwq/BinfSKFMAPghf6fYhSTJgvkCCxGrhSLp6wNviE67XBUzdleepOshdSlU6QpTimu4rUyqMRf7sVYRdrO6V+Vp9FkgV/O3bE104clafaGgRlYy3pF2T1xVzgRLmlivuSbNf5MQfHgu8riyIXWIQaqJEU5Os/JU1qTQNhnEgmvI6RK3aJNscpVilx/xp9cpNzebHc0X/f7kyajwAmaiXkNPev32hXXwE23iHrTdAjfA0a3XOnAruXu3zdbTcqRVH20LU+qT9rdup0OOOtPw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C887108F9431FBE05307991F0AFA83</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C887108F9431FBE05307991F0AFA83</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C8871D6E743203E05307991F0A5DE5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C8880D53A31F37E05305991F0A3273</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_065810</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc7I6FP0rDn1GAuKNqc547aFftRetvbx00hAwFRKbBLX99V+CStXaHs95YrLZWXvtS1ZyLmASO15LCMwlYbSwSmIqvMzaMFJOPQYFER6FCRaeRN6oNbjynCLw4HaLUfC7DeMlBKBeCV5rJnAdbLp2uW7WKyEygwBVQSlA9Ur1VbkKkWKfCgmpbBgOsF3Ttk3bHQPbc6peSSED59koTDAXClu5FIGxIbUSDWMq5dyzrOVyWVyWioxHlgOAbT0OrkZoihNoNM/XGWWBeHPjj4oBRjiOURGxxDq39nzOA+GNSEShTDnexAp+igUsULeUTyBIdGbke3Hg05Blyw6kjBIEY/IJdX0GWE5ZUGjFEeNETpMfk7CBBjbxCpnIdumZYe1TOxFojyEX0BRTaG+w7nCIOaYIF+7v/IZxdlrXsq1jDqkIGU/E/vK/8cF0gWM2x4EptmltqJ0OeKRSzXOMPJ+iOBVkgYd6WOcQYbHpJkanQxVuOA7J6ooINaArodlZu/QOlutqdEmEhfw/DdppzhpkAuMUN8Ou/Umu6vJ2FYOlddnGk7fX7iW/rkyfGhmBXefMkLd2vTwYynyI1jv8XlrmLWci+/ZStvpgtLJmyXI+6j2l5U5tnLLS9Si6GPLqFLcnw/ANUXRvv1eG1x/jp09wNQsm7uAfsRpfCNAC9qD9xAZ/XOZ+DHwA7u3X2/JFb+QPy6XHnv/Qj/4MZw+1Hg8XE8If5s7s8X3JAvRmO9eT52c/DRfj+rhXuZ30K9GwHN09J7Ve+8bvPM4ml3PWyNPZ4b9v2575Ufr6hpHcLvUY+N1CX3UJyt/FTFtIYIaZqzfX4iMkptJo6l1aO7xUyR0JPNXD9RpUO7VaDXTLpVbJ7peqPVAugXK9bvdBq+RUS1uRWbM4oNhhNCQ6lpbc9dj8ThAlnsA0wNxcsFQpnTB+QexCCQs+vVOHgFGBx0zJs71cRSmI3iqfM/FmI4loLFy38rGCRmHI5DW95q1QYr4vyu6eKN9hROYEa+XWgy3UZAupivEOF6mM7eICFilOlbZzLbOe49bKliDJPMaaqpWwII1xcT6dZ6WxxPrrmBCJzHrXG2fH7cfEDv9ta6B8AqIdhM6ljVUf8ZHbxdkm8nPC1d2Et/CtNCD6ZKmCSk7Qmsn+r6850QOSD4nK6KUzerG3vHP3k7d/32n9Qso6rEceKFiQnbDbu1vdAko3mttuvsPiezFdLNKsf1Wtj1zBK9GyyxZwrBFGqVK2jzGbYWrlKNZJ10hO/CB4bt+nmMopHUkocaIGrpAtT3g3jLDQ7wZfHZXVqY+SvZCqdBKv5DFbJ1ZvHs3412cR8pD2U+Yb9VkyHnx17AjWThyVp3o2SEIjvdJXyMcPc4GYgiVK/BjfBT8GcCz4vjEvcs5FqoF6TSX++U9Bq1rDgAixlEq/a2SGXaXNeMqPOfa+nL7BZGKev+7Ivz/vTJKNAMLqTShIhq8vaU8fARrtqPUm6DfBrtqg1q+7SrHbmWBX14Ldb9Vywd5n1/xm/m7ZqdPhjDf/Ag==</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07C8871B2B2631FFE05307991F0A1DD0:A4E62833"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>07C8871D6E743203E05307991F0A5DE5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C8880D53A31F37E05305991F0A3273</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C887108F9431FBE05307991F0AFA83</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_065827</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_065827</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_065827</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>IE</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>07C8880D53A31F37E05305991F0A3273</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C8880D53A31F37E05305991F0A3273</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbc7I6FP0rDn1GAuKNqc547aFftRetvbx00hAwFRKbBLX99V+CStXaHs95YrLZWXvtS1ZyLmASO15LCMwlYbSwSmIqvMzaMFJOPQYFER6FCRaeRN6oNbjynCLw4HaLUfC7DeMlBKBeCV5rJnAdbLp2uW7WKyEygwBVQSlA9Ur1VbkKkWKfCgmpbBgOsF3Ttk3bHQPbc6peSSED59koTDAXClu5FIGxIbUSDWMq5dyzrOVyWVyWioxHlgOAbT0OrkZoihNoNM/XGWWBeHPjj4oBRjiOURGxxDq39nzOA+GNSEShTDnexAp+igUsULeUTyBIdGbke3Hg05Blyw6kjBIEY/IJdX0GWE5ZUGjFEeNETpMfk7CBBjbxCpnIdumZYe1TOxFojyEX0BRTaG+w7nCIOaYIF+7v/IZxdlrXsq1jDqkIGU/E/vK/8cF0gWM2x4EptmltqJ0OeKRSzXOMPJ+iOBVkgYd6WOcQYbHpJkanQxVuOA7J6ooINaArodlZu/QOlutqdEmEhfw/DdppzhpkAuMUN8Ou/Umu6vJ2FYOlddnGk7fX7iW/rkyfGhmBXefMkLd2vTwYynyI1jv8XlrmLWci+/ZStvpgtLJmyXI+6j2l5U5tnLLS9Si6GPLqFLcnw/ANUXRvv1eG1x/jp09wNQsm7uAfsRpfCNAC9qD9xAZ/XOZ+DHwA7u3X2/JFb+QPy6XHnv/Qj/4MZw+1Hg8XE8If5s7s8X3JAvRmO9eT52c/DRfj+rhXuZ30K9GwHN09J7Ve+8bvPM4ml3PWyNPZ4b9v2575Ufr6hpHcLvUY+N1CX3UJyt/FTFtIYIaZqzfX4iMkptJo6l1aO7xUyR0JPNXD9RpUO7VaDXTLpVbJ7peqPVAugXK9bvdBq+RUS1uRWbM4oNhhNCQ6lpbc9dj8ThAlnsA0wNxcsFQpnTB+QexCCQs+vVOHgFGBx0zJs71cRSmI3iqfM/FmI4loLFy38rGCRmHI5DW95q1QYr4vyu6eKN9hROYEa+XWgy3UZAupivEOF6mM7eICFilOlbZzLbOe49bKliDJPMaaqpWwII1xcT6dZ6WxxPrrmBCJzHrXG2fH7cfEDv9ta6B8AqIdhM6ljVUf8ZHbxdkm8nPC1d2Et/CtNCD6ZKmCSk7Qmsn+r6850QOSD4nK6KUzerG3vHP3k7d/32n9Qso6rEceKFiQnbDbu1vdAko3mttuvsPiezFdLNKsf1Wtj1zBK9GyyxZwrBFGqVK2jzGbYWrlKNZJ10hO/CB4bt+nmMopHUkocaIGrpAtT3g3jLDQ7wZfHZXVqY+SvZCqdBKv5DFbJ1ZvHs3412cR8pD2U+Yb9VkyHnx17AjWThyVp3o2SEIjvdJXyMcPc4GYgiVK/BjfBT8GcCz4vjEvcs5FqoF6TSX++U9Bq1rDgAixlEq/a2SGXaXNeMqPOfa+nL7BZGKev+7Ivz/vTJKNAMLqTShIhq8vaU8fARrtqPUm6DfBrtqg1q+7SrHbmWBX14Ldb9Vywd5n1/xm/m7ZqdPhjDf/Ag==</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20141114_065827</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7244e745-4185-4ef4-8f8b-1e8266baefbc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>017a0740-e733-4e2b-8050-3100fc3b5b0c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00026_Account and User Create with AU 111_UserDelete SecondFull user 107_SUCCESS_P0" searchProperties="true" id="ee172a40-7c03-408f-bd17-3496d45239fa"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="4379c3b0-7a2d-4cf0-952e-61252a6c24f8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="d8e5616c-84c9-42a7-a1cc-98894fba9ab0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AU");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="7ed1ff51-ea2c-418f-9705-7417d5fa5e34"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFULL" id="85abaf65-5565-4a7a-bda2-4acac44fb272"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - AdultFULL" id="f777e91d-bde1-4b33-8e8d-6ac56c9b0b16"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="af618760-ab2e-4595-b306-77aff56ccf2d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="d389f836-5863-4d80-9209-1778e25e4678"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="4ac7d2fb-7778-466b-854a-4f034d81bf06"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZZc6pKEP4rFucxhSxKUCpahVvCidlcsr2kxmGUSWBAZnD79XcGlYDRXO99orrp6f56mW/6ioLA1y2bUhQzHJLSKvAJtVJtQ0piYoWAYmoRECBqMWgN7bu+pZdVC+yPSCWn05A+YFWvm0CvyHUXTuTqBJgyUKdV+RLVgQFcpJqazk0pTZBDKAOENSRd1aqypsladaRqll6zqnrZNGrvUukZxZT75iZlVdqBWtGG5DEWWYqyXC7Ly0o5jGeKrqqa8nrXH0IPBUBqXm0zSgPFzZ09LLsIIt+HZRgGypVSsLlyqTXEMwJYEqNdLPdULFVR6wq3cSme/ZGys8h1yDRMxTYgIcEQ+HgDRH3uEPNCt2T7szDGzAtOJqGpwrGMVlCGWpX8kZQitDMdFRDGFMjUA9rO1wBNUYwIRKXxwGlIf87rWnp0FANCp2Ec0KL43/AgskB+GCFXpvu0dtDOd3ikUs0rBC2HQD+heIHuxbBGACK66yaC57sqPcZoild9TPmArqhAp+ThHYjbanTwDFH2fxqUa87WyTPwE9SkekvVunTt/V2Px5/1l+7slvV1owKf7hopgLxxqshauxUPhjIbou2J6C7qMlgxL8bP1cGqDftspI0fEudpbNyaNw/Pyf1NJ46u2xFY/l2+Bl6vF9qVFvlKJso7MDePUz7kTy/25nrUH3vX85svOui5I3yx6S9sOPRI7/3Jjtj73FtsGH5Rb99edL3Wtdujm16186bojvNFnto3z6vLga2Hk7VuLh/vL+FrcPGmvX7eqD7DvcqrfV8bLRtZOjn8Rd3+zg+TySeCbC+KMXA6pR7vEmC/k5nQYFeepqZWJMiHMkSY1BSnBHdYCac77Fq8h1tZNdu1WttUW7VLo9LqdLuqUVHNel3rqXZdM4w9yWxRHEBsh2SKRSxBudux+R0gDCyKiItieREmnOmo9IvHDmCg5JABvwQhoWgUcnque8vQBF/GypwzbeXONarq7mYzj6TSfcgeyENsTxmKi5xcLXDyAEEcYSSIW8w15YNNGa/FHCwS5mvlBSgTlHBqjwXLWnq1ZigUB5GPBFIlCN3ER+XIi9LKKHT71WUAaaoddEfpbTuZ1+G/fQm4jYuFARW5tBBvIzryuFT2iZxO2MwnvHdvJy4WF4vXk8UYbpEUf32PiZiPbEZ4Rh/t4Ye2x52Zn33850nlF1DKYT2yQO4C58Lun27+CHDaaO67OQfleTlZLJK0f6agx5i755ylGYqqK0MEE05s61H4hYiSeVHOekUy4AfBM30RYsI8MmSAoYAPXCkVz1gbhoiKtcHhN2V17k5SCMlLx9CKHdO1fb7yCMS/bkXQgsKOqx/5ZxnG7nfHjvjKxeF58q2BYTITknhB1ifmAobcLebcF8Z558ccHAteVGZFzrAwPlCThKHTf0qC1BoSgDBMCHM6UqrIE22Kk60jZH0b/XCTcnm23OF/3+5knI4ARHwlpDj1L95oS1wBMsuR9S7oT7421G7L4E9Z28jztdE261lRCuiaP9Q/Nbk6Hc548x8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C88C50EB5A3BC5E05307991F0A5C79</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C88C50EB5A3BC5E05307991F0A5C79</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C88C70B8653BDEE05307991F0A9155</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C88CAB14553BC3E05307991F0A2022</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_065938</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZrU/I6EP4rTN+PTtv0xqUjzCDIa1W0At744oQ0QLRNoUkB/fUnKVALgodzPnV2u9l99pIne85gFJpukzGccBLT0ioKKXMzbV1JE+rGkBHmUhhh5nLk9pvdW9fUgAu3R5SS164rb2VsAdMqO+q4CsqqXTMstWqNsArtsmWVy6aJahVhyliKPco4pLyumMCwVcNQDXsADNesuk5Zq5pgqJSecMKEb2GiAWUDasXqypTzmavry+VSW1panEx0EwBDf+ne9tEUR1BpnK8zygIljY090gKMcBgiDcWRfq7v2JwHzO2TCYU8TfAmVnAsFtBBTRc2ASOTP0p+FgceHceZ2II0pgTBkHxBWZ8u5tM4KDXDSZwQPo2OJmEA6VjFK6Qiw6Z/FH0X2omOdhAmDKpsCo2Nrx4e4wRThEuPPa+u/Dmta9nRQQIpG8dJxHbF/4YH0wUO4xkOVLZNawPtdIcHKtU4x8j1KApTRhb4Tg7rDCLMNt3E6HRXJT/BY7K6JUwM6IpJdHoR3p64rkabTDDj/6dBheasnTzBMMUN2r/7uPEZQZXq/G+5q1fQ0L5CQ+PhulnPABSNM0Xe2rW4N5T5EK1P3A+7xlMlvmEP1u3sBV12P+Y66Czte7/1zFZffvT1XKatq9HTc+3V7/z1eui16zhV68ybWJPey6BnXvf5O6DtEL37iZ8Y/LP8MfKBD4za4+RhMWfhPHLasDagYcca15571/PJXXX4urzyLHuxuDQS/uDcAd0Lrx91bwxuxu9ng3I5fv0Yvur8rDOcPfth6N8GD/U8nQL+Xd32zvfT0TtGfCvKMfDapY7oEuS/k5nUkEAdZ6buTJIP45hypSFPSe5wU0F3JHBFD9cyqLSq1VbzwrAdx7poWZfAsUClVjM6oGkC09ySzBrFHsRWTMdExpKUux6b3wGiyGWYBjhRF3EqmI4pv3hsQw5LHu2JSxBThgexoGdjxRYRIB92beSsDDZOp5V3EC4TFiulu5jf0/ukOeY42SVle4eUexiRGcGSueVgMzHZjItizOEi5aGhLaBGcSq4PZE065p21dEZiWYhllD1KA7SEGuz6Swrjc7WX1OFiGXa3uUgu25HE9v/t62BsAmINGAylwss+ogPvC72NpHjCVeKCW/dN9OAyJslCsoTgtZIdn99z4kckHxIREZvrf6bscWdm598/OdJ/RdQ+n498kDBghTCbt9u8QoI3mhsuzmH2lxLF4s0619F8mMi3AvSMhwdmHofo1Qw2+cg/sBUz73oJz0jOfC94Ll+F2LKp7TPIceRGLhSJp6wN/Qxk3uDJ67K6tSlZCekKB3HK35I1wrFziMR/7oWIRdJO6H2xWcZJ8F3xw74KsQReYq1gRM6kZJ8Qj6PzAWKhVsiyC9Ois4POTgUfFeZFznHwsVAjVKOj/8pSVarKxChOKXcayuZosi0GU7+OcPut9EPNxmZ59sd+ff1TiXZCCAsdkJGMv/ykXblFaCTAltvgv4kbAdcXjhNQdhOkbCdVqWWF2UHXeOH+qemUKf9GW/8Aw==</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07C88C7F714E275EE05305991F0A03BF:5FC07AC0"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>07C88C70B8653BDEE05307991F0A9155</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C88CAB14553BC3E05307991F0A2022</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C88C50EB5A3BC5E05307991F0A5C79</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_065952</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_065952</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_065952</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>AU</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>07C88CAB14553BC3E05307991F0A2022</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C88CAB14553BC3E05307991F0A2022</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZrU/I6EP4rTN+PTtv0xqUjzCDIa1W0At744oQ0QLRNoUkB/fUnKVALgodzPnV2u9l99pIne85gFJpukzGccBLT0ioKKXMzbV1JE+rGkBHmUhhh5nLk9pvdW9fUgAu3R5SS164rb2VsAdMqO+q4CsqqXTMstWqNsArtsmWVy6aJahVhyliKPco4pLyumMCwVcNQDXsADNesuk5Zq5pgqJSecMKEb2GiAWUDasXqypTzmavry+VSW1panEx0EwBDf+ne9tEUR1BpnK8zygIljY090gKMcBgiDcWRfq7v2JwHzO2TCYU8TfAmVnAsFtBBTRc2ASOTP0p+FgceHceZ2II0pgTBkHxBWZ8u5tM4KDXDSZwQPo2OJmEA6VjFK6Qiw6Z/FH0X2omOdhAmDKpsCo2Nrx4e4wRThEuPPa+u/Dmta9nRQQIpG8dJxHbF/4YH0wUO4xkOVLZNawPtdIcHKtU4x8j1KApTRhb4Tg7rDCLMNt3E6HRXJT/BY7K6JUwM6IpJdHoR3p64rkabTDDj/6dBheasnTzBMMUN2r/7uPEZQZXq/G+5q1fQ0L5CQ+PhulnPABSNM0Xe2rW4N5T5EK1P3A+7xlMlvmEP1u3sBV12P+Y66Czte7/1zFZffvT1XKatq9HTc+3V7/z1eui16zhV68ybWJPey6BnXvf5O6DtEL37iZ8Y/LP8MfKBD4za4+RhMWfhPHLasDagYcca15571/PJXXX4urzyLHuxuDQS/uDcAd0Lrx91bwxuxu9ng3I5fv0Yvur8rDOcPfth6N8GD/U8nQL+Xd32zvfT0TtGfCvKMfDapY7oEuS/k5nUkEAdZ6buTJIP45hypSFPSe5wU0F3JHBFD9cyqLSq1VbzwrAdx7poWZfAsUClVjM6oGkC09ySzBrFHsRWTMdExpKUux6b3wGiyGWYBjhRF3EqmI4pv3hsQw5LHu2JSxBThgexoGdjxRYRIB92beSsDDZOp5V3EC4TFiulu5jf0/ukOeY42SVle4eUexiRGcGSueVgMzHZjItizOEi5aGhLaBGcSq4PZE065p21dEZiWYhllD1KA7SEGuz6Swrjc7WX1OFiGXa3uUgu25HE9v/t62BsAmINGAylwss+ogPvC72NpHjCVeKCW/dN9OAyJslCsoTgtZIdn99z4kckHxIREZvrf6bscWdm598/OdJ/RdQ+n498kDBghTCbt9u8QoI3mhsuzmH2lxLF4s0619F8mMi3AvSMhwdmHofo1Qw2+cg/sBUz73oJz0jOfC94Ll+F2LKp7TPIceRGLhSJp6wN/Qxk3uDJ67K6tSlZCekKB3HK35I1wrFziMR/7oWIRdJO6H2xWcZJ8F3xw74KsQReYq1gRM6kZJ8Qj6PzAWKhVsiyC9Ois4POTgUfFeZFznHwsVAjVKOj/8pSVarKxChOKXcayuZosi0GU7+OcPut9EPNxmZ59sd+ff1TiXZCCAsdkJGMv/ykXblFaCTAltvgv4kbAdcXjhNQdhOkbCdVqWWF2UHXeOH+qemUKf9GW/8Aw==</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20141114_065952</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6d716fc3-8882-43a4-8a25-46995922d0df</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>27a8262e-f2d3-44d2-ac3c-98f4fecc9403</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00027_Account and User Create with AU 111_UserDelete Standard Youth user107_SUCCESS_P0" searchProperties="true" id="063d1389-c895-4dfa-8fae-1753f14696c0"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="21d99e0f-0b13-4a50-9d0b-4c639f373b37"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="b62c40e7-7088-498f-b471-e5996e289617"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AU");

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="6dad040c-b1a8-44bc-9474-12f1edc26dc1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUser" id="e3dc2633-5c19-4a56-aa07-7b9d1225973c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - StandardYouthUser" id="a3ffe11f-52ab-4058-9cea-d84e19216695"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="04a7b4f1-4289-47d3-bd02-5de530c27d4a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="2d399150-4c1c-4727-9f45-541e1095456b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="be3e499b-7ee5-42ac-866a-38d7fbb02065"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbV+o6EP4rrO5HV+nFAm2XsBaCaFVwb1CO+uKK6QDRNilNysVfv5MCFRA9nPMEM53MfHPJlznjKI5sv8k5pIIwWlrEEeV+rq1rWUp9hjjhPkUxcF9gf9Ds3vp22fTR5ohWCtp17cWxXy27Zrk6rnlV3UHyHzIR6Ca4Vdf0PPPUtKUp5xkElAtERV2zTcvRLUu3nHvT8k9N3z4tVzzvWSsNIeXStzQpm9oa1ILXtYkQiW8Y8/m8PD8ts3Rs2KZpGY/d2wGeQIy0xtkqozxQ2ljb43IIGKIIlzGLjTNjx+Ys5P6AjCkSWQrrWOF3sUzD9AxpE3Iy/qUVZyEM6IjlYgtRRglGEflAqj5dEBMWlprRmKVETOJvk7BM5ViHBdax5dBfmrEL7UhHOwhTjnQ+QdbaVx9GkALFUHroB3Xt13Fdy4/ep4jyEUtjviv+NzxAZxCxBEKdb9JaQzve4YFKNc4A+wHFUcbJDHpqWBOEga+7Cfh4V6XfKYzI4pZwOaALrtAZ2/D2xFU12mQMXPyfBm01Z+VkiKIMGvOT63ZnkTSDVte7vTTfK5XBTX+Ikkf2p54D2DbOFUVrV+LeUBZDtDpxaZ3i1nUy7s7fcP/q6n7kuYuW8MJB9eb84W3Qc5Ph8vXhGZ/gp86D0/noBL2b2Gm5MfJuA/eSpy36Z7kUk3b6EYRW7/qaXEA0R52eM20/Tq/mT9UknC6e3+EdwqHFupPLIZvPzbu3+GqIRn235Ty5z+Pnm9cqnFBqW0bw0GKXN5Pry3f22IPzGfRnc179p/vYrRfpbOHf1W3u/CB7fQMsNqIag6Bd6sguIfEzmSkNCfVRbuoniny4ACq0hjqluMPPJN2R0Jc9XMlmreV6VqXjXNiu43qdC7NyatY8z+qYTbdZtTYks0KxB7HF6IioWIpyV2PzM0Ac+xxoCKk+Y5lkOq794LGNBCoFtC8vAaMc7pmkZ4ulzJnYoygFD2VveFbDwlkSV2ilHhN39C5tjgSku5zs7HByHzBJCCjiVnPN5WBzIWsxRbNMRFZ5hsoUMkntqWJZ33bcisFJnESgkBoxC7MIyskkyStj8NWvrSPMc23/4j6/bd/mtf9tUwJpExJlwFUu5yDbCAceF2uTyPcJ17YT3rhvZiFRF0vWU6QEr5DsfvocEzUfxYzIjF5ag5diFgrzo49/PWn8AMrYr0cRKJyRrbCbp1s+ApI2GptuTlF5Ws5msyzvX03RYyrdS86yKoZpGwPAmSS25T17B2oUXoyjXpEC+F7wQr8LMRMTOhBIQCwHrpSLR6wNA+BqbQjkTVkcu5PshJSlE7AQh3StSK48CvGPWxH2sbKT6t/yZ87S8LNjB3xtxZF5yq1BEDpWknpBlt/MBWbSLZHcx9Jt54ccHAq+qyyKXGARcqBeMwHffykpUqtrCGOWURG0tVyxTbQ5TrFMwP80+uIm5/JiuSP/vt3pJB8BDHIl5CT3r95oX10BOt4i63XQA3ztVWtOR/L1+TZfVzsdtyjKDrrGF/VXzVad9me88Rc=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C89159674F489BE05307991F0A6FF8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C89159674F489BE05307991F0A6FF8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C8915F4E28489FE05307991F0A8A61</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C8915F4E28489FE05307991F0A8A61</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_07012</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbV+o6EP4rrO5HV+nFAm2XsBaCaFVwb1CO+uKK6QDRNilNysVfv5MCFRA9nPMEM53MfHPJlznjKI5sv8k5pIIwWlrEEeV+rq1rWUp9hjjhPkUxcF9gf9Ds3vp22fTR5ohWCtp17cWxXy27Zrk6rnlV3UHyHzIR6Ca4Vdf0PPPUtKUp5xkElAtERV2zTcvRLUu3nHvT8k9N3z4tVzzvWSsNIeXStzQpm9oa1ILXtYkQiW8Y8/m8PD8ts3Rs2KZpGY/d2wGeQIy0xtkqozxQ2ljb43IIGKIIlzGLjTNjx+Ys5P6AjCkSWQrrWOF3sUzD9AxpE3Iy/qUVZyEM6IjlYgtRRglGEflAqj5dEBMWlprRmKVETOJvk7BM5ViHBdax5dBfmrEL7UhHOwhTjnQ+QdbaVx9GkALFUHroB3Xt13Fdy4/ep4jyEUtjviv+NzxAZxCxBEKdb9JaQzve4YFKNc4A+wHFUcbJDHpqWBOEga+7Cfh4V6XfKYzI4pZwOaALrtAZ2/D2xFU12mQMXPyfBm01Z+VkiKIMGvOT63ZnkTSDVte7vTTfK5XBTX+Ikkf2p54D2DbOFUVrV+LeUBZDtDpxaZ3i1nUy7s7fcP/q6n7kuYuW8MJB9eb84W3Qc5Ph8vXhGZ/gp86D0/noBL2b2Gm5MfJuA/eSpy36Z7kUk3b6EYRW7/qaXEA0R52eM20/Tq/mT9UknC6e3+EdwqHFupPLIZvPzbu3+GqIRn235Ty5z+Pnm9cqnFBqW0bw0GKXN5Pry3f22IPzGfRnc179p/vYrRfpbOHf1W3u/CB7fQMsNqIag6Bd6sguIfEzmSkNCfVRbuoniny4ACq0hjqluMPPJN2R0Jc9XMlmreV6VqXjXNiu43qdC7NyatY8z+qYTbdZtTYks0KxB7HF6IioWIpyV2PzM0Ac+xxoCKk+Y5lkOq794LGNBCoFtC8vAaMc7pmkZ4ulzJnYoygFD2VveFbDwlkSV2ilHhN39C5tjgSku5zs7HByHzBJCCjiVnPN5WBzIWsxRbNMRFZ5hsoUMkntqWJZ33bcisFJnESgkBoxC7MIyskkyStj8NWvrSPMc23/4j6/bd/mtf9tUwJpExJlwFUu5yDbCAceF2uTyPcJ17YT3rhvZiFRF0vWU6QEr5DsfvocEzUfxYzIjF5ag5diFgrzo49/PWn8AMrYr0cRKJyRrbCbp1s+ApI2GptuTlF5Ws5msyzvX03RYyrdS86yKoZpGwPAmSS25T17B2oUXoyjXpEC+F7wQr8LMRMTOhBIQCwHrpSLR6wNA+BqbQjkTVkcu5PshJSlE7AQh3StSK48CvGPWxH2sbKT6t/yZ87S8LNjB3xtxZF5yq1BEDpWknpBlt/MBWbSLZHcx9Jt54ccHAq+qyyKXGARcqBeMwHffykpUqtrCGOWURG0tVyxTbQ5TrFMwP80+uIm5/JiuSP/vt3pJB8BDHIl5CT3r95oX10BOt4i63XQA3ztVWtOR/L1+TZfVzsdtyjKDrrGF/VXzVad9me88Rc=</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF06FD44A31A51E05305991F0AEF0F:9A0E6F18"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FF06FE512C1A55E05305991F0AE3BD</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FF06FE735876A4E05307991F0AAEDE</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C89159674F489BE05307991F0A6FF8</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_070137</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_070137</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_070137</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>AU</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>07C8934693834DB1E05307991F0A880C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C8934693834DB1E05307991F0A880C</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZZc+I4EP4rlOcxZXxy2BWo4ggbk5BkcJKZycuUIrdBG1s2lmyc+fUrGXCAHMvuk6vbre6vD33qc4biyHQHjEHGSUIbZRxR5lbanpJn1E0QI8ylKAbmcuz6g9m1azZ1F+2OKA1v3FN+O8gx2zp6Vo0wbKl229JVJ8SW+mx3rTY8WyYKbGHKWA4eZRxR3lNM3bBVw1AN+143XEt3bbNp2uaT0niEjAnfwqSpK1tQJespS85TV9PW63VzbTWTbKGZum5oP2fXPl5CjJT++SajKlDW39rjZgAYogg3cRJr59qBzXnAXJ8sKOJ5BttYwWexdE13NGETMLL4ptRnIfBomFTiCNGEEowi8gfJ+syAL5OgMYgWSUb4Mv40CUOXjlUosYoNm35TtENoJzo6QJgxpLIlMra+5hBCBhRD42Hu9ZRvp3WtOnqfIcrCJIvZofjf8AAtIEpSCFS2S2sL7XSHH1Sqfw7Y9SiOckYKuJHDmiIMbNtNwKe7atxlEJLymjAxoCWT6LR9eEfiphpjsgDG/0+D9pqzcfKIohz6Jb/7sXjJr27Lh/jSjL6j0YKmy2tul3qvArBvXCnq1m7Eo6Gsh2hzwrtg3nC4eLqZTjo3T2nss8L8RS3yeLacBYPvq+mf0fKv6a/8bvTEW912B88K+uS8TOloPLyc2ZMMouK7TdLb8dwe4Ru/9B+mY93rTldnWTEZOmz9B3vXkZXk5WVohKsLO3oMHu2zJx5AOb+3x2v88yq+aE+TsyvD63TgcubMFmfh7U9/4a+sX+aVOdNRMPxB7V6dzh7+Q93uzvv589+A+U6UY+CNGxPRJcS/JjOpIYEaVqZuKsmHcaBc6ctTkjvcXNAdCVzRw42sd0Zdx7LbjtW17PHQuNBblt5xHGOiD7pdfbQjmQ2KI4ijhIZExpKUuxmbrwHi2GVAA8jUIskF0zHlC49jxFHDo3NxCRLK4D4R9GzES7PVTfSCscwy0sWzxdbR60u3kymNm4Tf0ttsEHLIDknZPiDlOWCSEpDMLQebiclmoqF4hYqcR0azQE0KueD2TNKsa9rdlsZInEYgoWpxEuQRNNNlWpVGY5uvqSLMKu384r66bp8mdvxvVwNhExBpwGQuQxB9hA9eF2uXyOcJd/YT3rkf5AGRN0sUlGcEb5Ac/nqbEzkg9ZCIjH6P/N/GDndtfvLx9ye1L0Bpx/WoAwUF2Qu7e7vFKyB4o7/r5go1V828KPKqfx3Jj5lwL0jLaGm6qfmAc8Fsr/fJC1Ct9qKd9IzUwI+C1/pDiDlfUp8jDrEYuEYlnrA3+MDk3uCJq1KeupQchBSl41Dyj3SjSOw8EvGXaxF2sbQT6jvxWSdZ8NaxD3ztxRF5irWBE7qQknxCXj+ZC5wIt0SQX5LtO//IwUfBD5V1kWssXAzUc87h8z8NyWo9BWGc5JR7Y6VS7DNthZO/puC+Gb1zU5F5vd2Rf1/vVFKNAAaxEzJS+ZePtCuvAF3ssfU26DvCNlpOu2NP7K4z3Cfs9mTSrYtygK7/Tv1es1en4xnv/wM=</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20141114_070137</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ad9779b2-28dd-4093-8004-d79be8a3eeab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e844d67-82d2-4a09-8d48-8c37239edede</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00029_Account and User Create with CA 111_UserDelete SecondFull user 107_SUCCESS_P0" searchProperties="true" id="ea117f14-d777-41c4-b50b-5f6cbe64461b"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="56ab5671-7752-4e2e-8211-adc22da3695d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="a6c6b78d-12f3-4843-b91e-514fc778bd95"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CA");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="85fa2ee6-bef8-45a2-b90a-97835caa974b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFULL" id="8e86506f-dd40-416e-891e-9398fdee4ccf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - AdultFULL" id="c07009b9-44ad-4a7e-abbd-d3ef63e7be1c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="4a184db5-f4dc-43a6-be30-d46dd91a59e1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="bd28e724-dddb-49f3-8c46-29abc0255afe"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="146f8f8d-1b51-4cb4-b4f5-ec390f45c006"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZrV/I4EP4rnPrxPaUXCqU9wjkVUPEGgriuXzwxHSDapjVJufjrNylQAcVl9xPMdDLzzCVP5pSjOLL9gHNggiS0tIgjyv1c29AyRv0EccJ9imLgvsD+MLi98e2y6aPNEa3UbTe0FxvXwrpjuforOFXdMV1H/jMruutVnJrjjWu1uidNOc+gS7lAVDQ027Qc3bJ0y3kwLb/i+JV6uVq3nrXSIzAufUuTsqmtQS14Q5sKkfqGMZ/Py/NKOWETwzZNy3i6vRniKcRIa56uMsoDsebaHpdDwBBFuIyT2Dg1dmxOQ+4PyYQikTFYxwoPxTIN0zOkTcjJ5EQrzkLYpeMkF1uIJpRgFJFPpOpzC2KahKUgmiSMiGl8MAnLVI51WGAdWw490YxdaEc62kHIONL5FFlrXwMYAwOKoTQadBvayXFdy48+MET5OGEx3xX/Gx6gM4iSFEKdb9JaQzve4Q+Vap4C9rsURxknM7hTw5oiDHzdTcDHuyr1GYzJ4oZwOaALrtAZ2/D2xFU12mQCXPyfBm01Z+XkEUUZNCE6h/tnmPeYzYw+5hfB0ptetoMBu23kALaNc0XR2pW4N5TFEK1OsMHCEz1uXqBJ7H7Us1Zinv09+uz3769Fx7rrt+//EN62R5/B04CHj+/84q8acp9GnWfUvZoP8HVvUPGe4ru3wX3Uap2xp0Wns1ikV+1Kv/ch+l4vvX8kD1fvk/qfSTgZVdn5/Nq6rJ7B3Jmc3WTLW/T5lvKr6NKlZPx0GfTvo353GKTDIDTJ1O1fm8/Po1vzcjB2GkU6W/h3dZs7P8xe3wCLjajGoNsuncsuIfE7mSkNCfVxbuqniny4ACq0pjqluMPPJN2R0Jc9XMmm26oHlmtatXql2q5WO2a1YlY9zzo3A+e84m1IZoViD2IroWOiYinKXY3N7wBx7HOgITB9lmSS6bj2i8c2EqjUpQN5CRLK4SGR9OzReGpm1sd0yULPHkMlRNnCTZda6S4RPdpjwVgA26VkZ4eSB4BJSkDxthprLueaC1mKDzTLRGSVZ6hMIZPMzhTJ+rZTrxqcxGkECqgRJ2EWQTmdpnlhDL76tXWEea4ddB7yy3Ywrf1vmwpIm5AoA65yOQPZRfjhbbE3iRxO2N1OeOM+yEKi7pUsp2AEr5DsfvqaEjUexYjIjF5awxdrg7swP/r495PGL6CM/XoUgcIZ2Qq7ebnlGyBZo7np5gcqf5Sz2SzL++cqdmTSvaQsq2qYtjEEnEleWz4k70CNwotx1CNSAN8LXuh3IWZiSocCCYjlwJVy8YitYQhcbQ1deVEWx64kOyFl6QQsxE+6ViQ3HoX416UI+1jZSXVf/swTFn517AdfW3FknnJpEIROlKQekOWBucCJdEsk9SVs2/lPDn4KvqssilxgEXKgXjMBh7+UFKc1NIRxklHRbWu5Yptnc5ximYL/ZfTNTU7lxW5H/n2500k+AhjkRshJ7l890b66AnSyxdXroN/puma6nZYt6drbpuuOY1WKouyga35Tf9ds1Wl/xpv/AA==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C8A1607EC25D59E05305991F0AE413</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C8A1607EC25D59E05305991F0AE413</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C8A17016835D55E05305991F0A4F39</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C8A16BAB2D6F11E05307991F0ACD77</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_070532</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtc9o4EP4rjPvxxtjCBgdPYIZgknINNMW0SfOlI+QFBLYElsxLf/1JBlwgJMfdJ8+uV7vPvujR3gqcxBW/JQSkknJW2iQxE36ubRhZynyOBRU+wwkIXxI/bPUe/UrZ9vHhiFHqBg3j18iuOyPXdkwY1W3T9UjVxCO7ano1z0N1BBhhT5kKkUGXCYmZbBgVG7kmQiZyhzbyHdevuuVatfZqlH5AKpRvZVK2jT2ojWgYUykXvmWt1+vy2inzdGJVbBtZL73HkEwhwUbzdpdRHiht7u1JOQICcUzKhCfWrXVicxsJP6QThmWWwj5W9F4s27LrlrKJBJ18MoqzEHXZmOdiGzPOKMEx/Y11fXogpzwqteIJT6mcJu8mgWzt2IQNMQly2SfDOoV2paMThKnApphitPc1gDGkwAiUvg+6DePTdV3Ljw5TzMSYp4k4Ff8bHmAriPkCIlMc0tpDu97hhUo1b4H4XUbiTNAV9PWwLjABse8mkOtdlZ5SGNPNIxVqQDdCo7OO4Z2Ju2oEdAJC/p8GHTVn5+QHjjNorl/bCE+tkH/uBB3nr/ZDuB1lAxJFfbuRAzg2zhVFa3fi2VAWQ7Q78V10++Gds3yKv928WNs+mUydeaca8Bm6Dx7c3tqVoX0vU+hEz/N1lW0ctJnPnbQ/eeg9Oz8fFsn0Rx1el9veJnzu1Vae4OAGQTcZ2Diczck4RWhceeoP64H1bZbgqPP3z9HAJXg75ve09nn5aA9fbmZ33wNRacvXaPN1OUocFN2sfruT4Sh9GaDVM/tCN+G8UaRzhP9Ud7jzYTaaAZEHUY9BNyjdqy5h+TGZaQ2NzHFu6i80+QgJTBpNfUpzh58puqORr3q4k22vfdNCtbvWXSWo3SPUsauO7dXr6N5utQPPO5DMDsUZxDZnY6pjacrdjc3HAEniC2ARpOaKZ4rphPGBxwBLXOqygboEnAkYckXPaDHNZmJUYXTsrrK1u5jTmT3lc2qU+lx+ZV/T1lhCesrJ7gknD4DQBQVN3HquhRpsIVUtlniVyRiVV7jMIFPUnmqW9SvuTdUSNFnEoJFaCY+yGMqL6SKvjCV234qJici1g84wv23v5nX+71ACZRNRbSB0Lneg2ggXHhf3kMj7CXvHCR/ct7KI6oul6ilTSnZITn/9GRM9H8WMqIx+tcNf6IC7ML/6+NuT1gegrPN6FIGiFT0Ke3i61SOgaKN56OYSl5flbLXK8v55mh5T5V5xFqpadsUKgWSK2LZDPgdmFV6sq16RAvhZ8EJ/CjGTUxZKLCFRA1fKxSvWhhCEXhu66qZsrt1JTkKq0knYyEu6dqxWHo34w62I+ETbKfWT+qx5Gv3p2AVfR3FUnmprkJRNtKRfkO07c0G4cksV9/H02PklB5eCnyqLIhdYpBqoUSbh/T8lTWoNAxPCMya7gZErjok2xym3C/D/GL1xk3N5sdzRf9/uTJqPAAG1Egqa+9dvtK+vAJsckfU+6AW+tr1Ou1INqvWcr6s7vu64yCmKcoKu+Ub9VnNUp/MZb/4D</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07C8A32F78EA614FE05305991F0AED18:B1B8C14B"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>07C8A17016835D55E05305991F0A4F39</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C8A16BAB2D6F11E05307991F0ACD77</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C8A1607EC25D59E05305991F0AE413</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_070549</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_070549</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_070549</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>CA</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>07C8A16BAB2D6F11E05307991F0ACD77</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C8A16BAB2D6F11E05307991F0ACD77</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZtc9o4EP4rjPvxxtjCBgdPYIZgknINNMW0SfOlI+QFBLYElsxLf/1JBlwgJMfdJ8+uV7vPvujR3gqcxBW/JQSkknJW2iQxE36ubRhZynyOBRU+wwkIXxI/bPUe/UrZ9vHhiFHqBg3j18iuOyPXdkwY1W3T9UjVxCO7ano1z0N1BBhhT5kKkUGXCYmZbBgVG7kmQiZyhzbyHdevuuVatfZqlH5AKpRvZVK2jT2ojWgYUykXvmWt1+vy2inzdGJVbBtZL73HkEwhwUbzdpdRHiht7u1JOQICcUzKhCfWrXVicxsJP6QThmWWwj5W9F4s27LrlrKJBJ18MoqzEHXZmOdiGzPOKMEx/Y11fXogpzwqteIJT6mcJu8mgWzt2IQNMQly2SfDOoV2paMThKnApphitPc1gDGkwAiUvg+6DePTdV3Ljw5TzMSYp4k4Ff8bHmAriPkCIlMc0tpDu97hhUo1b4H4XUbiTNAV9PWwLjABse8mkOtdlZ5SGNPNIxVqQDdCo7OO4Z2Ju2oEdAJC/p8GHTVn5+QHjjNorl/bCE+tkH/uBB3nr/ZDuB1lAxJFfbuRAzg2zhVFa3fi2VAWQ7Q78V10++Gds3yKv928WNs+mUydeaca8Bm6Dx7c3tqVoX0vU+hEz/N1lW0ctJnPnbQ/eeg9Oz8fFsn0Rx1el9veJnzu1Vae4OAGQTcZ2Diczck4RWhceeoP64H1bZbgqPP3z9HAJXg75ve09nn5aA9fbmZ33wNRacvXaPN1OUocFN2sfruT4Sh9GaDVM/tCN+G8UaRzhP9Ud7jzYTaaAZEHUY9BNyjdqy5h+TGZaQ2NzHFu6i80+QgJTBpNfUpzh58puqORr3q4k22vfdNCtbvWXSWo3SPUsauO7dXr6N5utQPPO5DMDsUZxDZnY6pjacrdjc3HAEniC2ARpOaKZ4rphPGBxwBLXOqygboEnAkYckXPaDHNZmJUYXTsrrK1u5jTmT3lc2qU+lx+ZV/T1lhCesrJ7gknD4DQBQVN3HquhRpsIVUtlniVyRiVV7jMIFPUnmqW9SvuTdUSNFnEoJFaCY+yGMqL6SKvjCV234qJici1g84wv23v5nX+71ACZRNRbSB0Lneg2ggXHhf3kMj7CXvHCR/ct7KI6oul6ilTSnZITn/9GRM9H8WMqIx+tcNf6IC7ML/6+NuT1gegrPN6FIGiFT0Ke3i61SOgaKN56OYSl5flbLXK8v55mh5T5V5xFqpadsUKgWSK2LZDPgdmFV6sq16RAvhZ8EJ/CjGTUxZKLCFRA1fKxSvWhhCEXhu66qZsrt1JTkKq0knYyEu6dqxWHo34w62I+ETbKfWT+qx5Gv3p2AVfR3FUnmprkJRNtKRfkO07c0G4cksV9/H02PklB5eCnyqLIhdYpBqoUSbh/T8lTWoNAxPCMya7gZErjok2xym3C/D/GL1xk3N5sdzRf9/uTJqPAAG1Egqa+9dvtK+vAJsckfU+6AW+tr1Ou1INqvWcr6s7vu64yCmKcoKu+Ub9VnNUp/MZb/4D</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20141114_070549</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e49bef55-b198-45f3-9b1c-68803e400ff0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a77f6b3c-2be1-4e16-9216-22394f70ce32</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00030_Account and User Create with CA 111_UserDelete Standard Youth user107_SUCCESS_P0" searchProperties="true" id="56e0dd23-89ee-41ec-9bea-0eedfd47dade"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="a427e835-b408-4bb2-b91e-f9ac02a8cce6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="ccad93d0-32e6-4e15-af3b-03ff14dc3461"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CA");

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="d87f3860-c5b5-45f3-b021-6c6b79788312"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUser" id="8525aad4-2bc5-48b7-ae03-09b7f139075a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - StandardYouthUser" id="4ec5c5cd-b71f-49e1-a994-5ca2d9c0b882"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="db04b8f6-5a82-4605-93de-e9a670b6c208"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="a63adf9d-1298-4eb7-9991-4299a94c9f01"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="2d16fab0-24d9-4da8-9a15-05e2b605a566"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZZb+o6EP4rKOexCnHCHhUkylLlFkoPoYvOS2WcCbhNnDR2WPrrjx0gBQq93PsUzWQ8883iz3PNcRhYdptzSASNWGEVBozbmbappQmzI8wptxkOgduC2G57OLCtIrLx7ohWcLpN7dVHqGSVianX65WGXgZU1+tTBDoGVMJTqw5Tvy5NOU/BYVxgJpqahcyybpq6WZ4g0y5VbLNcrFjVP1rhCRIufUuTItK2oFa8qc2FiG3DWC6XxWWpGCUzw0LINF6GA5fMIcRa63qTURYoaW3tSdEDAkFAiiQKjWvjwOba47ZLZwyLNIFtLO9cLGSghiFtPE5nv7T8LHgO86NM7GAWMUpwQD+xqs8QxDzyCu1gFiVUzMOzSZhIOdZhRXRiltkvzTiEdqGjA4QJxzqfY3Praww+JMAIFB7HTlP7dVnXsqOTBDPuR0nID8X/hgfYAoIoBk/nu7S20C53eKJSrWsgtsNIkHK6gHs1rDEmwLfdBHK5q8JDAj5dDSiXA7riCp2xD+9I3FSjS2fAxf9p0F5zNk6ecJBCC/X59HPQX8nztUZ/Wk27YWc2ETEyUTMDsG+cKfLWbsSjocyHaHPi8TPu0uAN3ZUaT/ejkD3Phu/RLO7g1e3NcrVcu2X/uT7w38YPb6X7j9urRlQeDyf1x1mNPcdr7E79+d3b8OF2QJzRnI34ojZ1R0EpfRG/6+agN5rjOZpcEc+9i/E/eLH2k5fKNFg/DkcvV/Hwnq2d7sC1bhYJ1FbVQYi71nvsd63f46rz4lhdfBvdPa6fekv+p9fM09nDf6jb3Xk3nb4BETtRjYHTLfRll7D4mcyUhnq6n5nasSIfLoAJraVOKe6wU0l31LNlDzcyqnXqbavau0Fmu4p6tR6qlFCl0TD7qF02Kzc7ktmgOILYiZhPVSxFuZux+RkgCW0OzINEX0SpZDqu/eCxiwUuOGwsL0HEOEwiSc+1MFhOAz6lpc+SyefsrVJbVASuvGuF+0iM2Chp+wKSQ04uH3DyGAiNKSjiVnPN5WBzIWvxgRepCMziAhcZpJLaE8WytlWuVwxOwzgAhdQIIy8NoBjP46wyBt98LR0TnmnHvUl2287mdfxvVwJp41FlwFUuNyDbCCceF7RL5HzCtf2Ed+7bqUfVxZL1FAklGySHv77GRM1HPiMyo9eO+2rucOfmFx//ftL4AZRxXI88kLege2F3T7d8BCRttHbd/MDFj2K6WKRZ/2qKHhPpXnKWWTGQZbhAUkls60n0DszIvRgXvSI58KPguf4QYirmzBVYQCgHrpCJF6wNLnC1Njjypqwu3UkOQsrSCViJU7pOIFcehfjHrYjYRNlJ9YP8LKPE++rYCV97cWSecmsQlM2UpF6Q9Zm5IJF0SyX3Rcm+81MOTgU/VOZFzrEIOVDTVMD5PwVFak0NExKlTDhdLVPsE22GU6xjsL+MvrnJuDxf7ui/b3c6zUaAgFwJOc38qzfaVleAzfbIehv0G1+XrH6t3utVzXJ/n697XfNrPg/Qtb6pv2v26nQ8462/</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C8A32F78EE614FE05305991F0AED18</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C8A32F78EE614FE05305991F0AED18</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C8A26EB01A60E7E05305991F0A415B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C8A32A8DC86151E05305991F0A8595</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_07069</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbU+o6FP4rTH3cU9qUVqAjzCAXNx5FpbiP7hcnpqsQLUlpUi7715+kQAVED+c8dbK68q1vXfIlFwJPY8dvCQGppJyVltOYCT+3NowsZT7Hggqf4SkIXxI/aN3e+E7Z9vF2i1HqdxrGC7K90IvCyKzbddt0X18r5isKXdP16jVcRbaNnFC5CpFBnwmJmWwYjo1cEyETuSMb+RXPd6plt1L5bZR+QSoUtnIp28aG1FI0jImUiW9Zi8WivKiUeTq2HIVsPd3eBGQCU2w0L9YZ5YHS5saflEMgEMekTPjUurD2fC5C4Qd0zLDMUtjECr+KZVt23VI+oaDjM6PYC2GfRTxftjHjjBIc0z9Y1+cW5ISHpVY85imVk+mXSSBbA5uwJCZBLjszrH1qJwLtMUwFNsUEow3WECJIgREoPQ77DePstK7lW0cpZiLi6VTsL/8bH2BziHkCoSm2aW2onQ54pFLNCyB+n5E4E3QOAz2sCSYgNt0EcjpU6T6FiC5vqFADuhSanbVL72C5rkaHjkHI/9OgneasQX7hOIOmU0XLuBsEd3czuKXRpLW6nHWvmHW9eGzkBHadc0PR2vXyYCiLIVrvuJlVB5dV7+HNOl+Nrp8eqZhcdR4q4+4IfgYj5CTO9a3bbdeuevftFepSFvcWOImqlxT9cW5jee6+hcun55vKco7uBs9P52+i4g7kc/D78u8O/DV4+zFcjKjzMGx3hvfOw/XyLpiKn5U4iX7IQa22eI2DydjpwtUVJuJhNUCj87qYPd+/S4mv7R6prq5aInqgwhONIp0d/vu27ZkPstc3IHK71GPQ75R6qktYfi9m2kJDM8pd/USLj5DApNHUu7R2+JmSOxr6qofrtV1t11oVp1XrtGvnyENd26vYXr2Oenar5tW9rcisWRxQbHMWUR1LS+56bL4nSKa+ABZCas55ppROGN8gdrDEpT4bqkPAmYARV/IMOHHes4iH4bw24XwMIV/FkyQ2SgMu79hd2ookpPuS7O5J8hAITSho3dZjLdRcC6lKMcPzTMaoPMdlBplS9lSLrO+4Nc8SdJrEoIlaUx5mMZSTSZIXxhLrr2OqCcitw+4oP2xfpnX4b1sB5RNS7SB0LpegughH7ha0TeTrhKu7CW/hW1lI9blS5ZQpJWsm+78+pkSPRzEiKqOXdvCCtrwL95O3f95pfUPKOqxHESic052w25tb3QFKNZrbbs5weVbO5vMs719Vq2Oq4JVkIc+yHSsAkildW434OzCrQLFOukQK4gfBC/s+xUxOWCCxhKkauFK+POHVEIDQr4a+OijLU58keyFV6SQs5TFbO1YvHs3420cR8Yn2U+Z79Vnw9CPxY1g7cVSe6tEgKRvrlb5AVl/MBeEKlirp4+ku+DGAY8H3jUWRCy5SDdRrJuHrPyWtaQ0DE8IzJvsdIzfs6mzOU64S8D+cPsHkUl687ei/P+5Mmo8AAfUiFDTH11e0r48AG+9o9SboEbnuVWvd7jlye7ty3e2gWlGUPXbNT+bPlp06Hc548x8=</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07C8A32F78F9614FE05305991F0AED18:ADF6126C"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>07C8A26EB01A60E7E05305991F0A415B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C8A32A8DC86151E05305991F0A8595</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C8A32F78EE614FE05305991F0AED18</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_070622</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_070622</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_070622</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>CA</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>06C9F058D4A02C9EE05305991F0AC1A5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>07C8A32A8DC86151E05305991F0A8595</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C8A32A8DC86151E05305991F0A8595</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbU+o6FP4rTH3cU9qUVqAjzCAXNx5FpbiP7hcnpqsQLUlpUi7715+kQAVED+c8dbK68q1vXfIlFwJPY8dvCQGppJyVltOYCT+3NowsZT7Hggqf4SkIXxI/aN3e+E7Z9vF2i1HqdxrGC7K90IvCyKzbddt0X18r5isKXdP16jVcRbaNnFC5CpFBnwmJmWwYjo1cEyETuSMb+RXPd6plt1L5bZR+QSoUtnIp28aG1FI0jImUiW9Zi8WivKiUeTq2HIVsPd3eBGQCU2w0L9YZ5YHS5saflEMgEMekTPjUurD2fC5C4Qd0zLDMUtjECr+KZVt23VI+oaDjM6PYC2GfRTxftjHjjBIc0z9Y1+cW5ISHpVY85imVk+mXSSBbA5uwJCZBLjszrH1qJwLtMUwFNsUEow3WECJIgREoPQ77DePstK7lW0cpZiLi6VTsL/8bH2BziHkCoSm2aW2onQ54pFLNCyB+n5E4E3QOAz2sCSYgNt0EcjpU6T6FiC5vqFADuhSanbVL72C5rkaHjkHI/9OgneasQX7hOIOmU0XLuBsEd3czuKXRpLW6nHWvmHW9eGzkBHadc0PR2vXyYCiLIVrvuJlVB5dV7+HNOl+Nrp8eqZhcdR4q4+4IfgYj5CTO9a3bbdeuevftFepSFvcWOImqlxT9cW5jee6+hcun55vKco7uBs9P52+i4g7kc/D78u8O/DV4+zFcjKjzMGx3hvfOw/XyLpiKn5U4iX7IQa22eI2DydjpwtUVJuJhNUCj87qYPd+/S4mv7R6prq5aInqgwhONIp0d/vu27ZkPstc3IHK71GPQ75R6qktYfi9m2kJDM8pd/USLj5DApNHUu7R2+JmSOxr6qofrtV1t11oVp1XrtGvnyENd26vYXr2Oenar5tW9rcisWRxQbHMWUR1LS+56bL4nSKa+ABZCas55ppROGN8gdrDEpT4bqkPAmYARV/IMOHHes4iH4bw24XwMIV/FkyQ2SgMu79hd2ookpPuS7O5J8hAITSho3dZjLdRcC6lKMcPzTMaoPMdlBplS9lSLrO+4Nc8SdJrEoIlaUx5mMZSTSZIXxhLrr2OqCcitw+4oP2xfpnX4b1sB5RNS7SB0LpegughH7ha0TeTrhKu7CW/hW1lI9blS5ZQpJWsm+78+pkSPRzEiKqOXdvCCtrwL95O3f95pfUPKOqxHESic052w25tb3QFKNZrbbs5weVbO5vMs719Vq2Oq4JVkIc+yHSsAkildW434OzCrQLFOukQK4gfBC/s+xUxOWCCxhKkauFK+POHVEIDQr4a+OijLU58keyFV6SQs5TFbO1YvHs3420cR8Yn2U+Z79Vnw9CPxY1g7cVSe6tEgKRvrlb5AVl/MBeEKlirp4+ku+DGAY8H3jUWRCy5SDdRrJuHrPyWtaQ0DE8IzJvsdIzfs6mzOU64S8D+cPsHkUl687ei/P+5Mmo8AAfUiFDTH11e0r48AG+9o9SboEbnuVWvd7jlye7ty3e2gWlGUPXbNT+bPlp06Hc548x8=</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20141114_070622</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d0ade530-30e2-43fb-8389-8538e48e0b6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8a18d433-c6d2-4fd8-a8a9-8db150abfad5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00032_Account and User Create with GB 111_UserDelete SecondFull user 107_SUCCESS_P0" searchProperties="true" id="9231f218-a479-4b99-96a8-57b568b97347"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="c6428765-4a60-436c-8fc9-af5a7e56c19b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="28806c8d-6dfd-4478-8762-89810c4cae5a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","GB");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="0964736d-7e5e-4dc9-8a91-28664d6db243"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFULL" id="c4a3b381-c3f4-4a55-9d59-1d104f9faba8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - AdultFULL" id="84b4d682-9a30-49dc-a704-fbc56ee37725"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="d2213ec2-b362-4650-86b4-b32180ccc620"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="34e9b313-52d7-49dc-9933-fc3fceca42e8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="60750ef0-bb2a-480b-985b-94161c11470d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+o6EP4rTM/HM6VpoYAdYQYBleM7oFf94sRkgWiblCblxV9/kgIVULzc+6mz283usy95sscSR6EXNKWERDHBC/Mo5DLItHUrTXggsGQy4DgCGSgS9JtXl4FXRAFeH7EK3XbdegGvTBEtIxt5HrXLPi3ZNR+XbPCpVzmq4DKgsjaVMoUulwpzVbc85JZt17Xd8gC5QckPypVitVJ5tgoPkEjtW5sUkbUCNZd1a6xUHDjObDYrzkpFkYwcDyHXeby67JMxRNhqHC8zygIljZU9KVIgEIakSETkHDtbNsdUBn024lilCaxi0X2xkIOOHG1DJRv9svKzQLt8KDKxhbngjOCQfWBTnytQY0ELzXAkEqbG0d4kXGQc2zAnNnHL/JflbEM70NEWwkRiW46xu/LVgyEkwAkU7nvduvXrsK5lRwcJ5nIokkhui/8ND/AphCIGast1Witohzv8plKNYyBBl5MwlWwK12ZYY0xArroJ5HBXhdsEhmx+yaQe0Lk06JxNeDvishptNgKp/k+DNpqzdPKAwxQa84cq9tjd85kr5J9B3Bs23/7pnZ+fhel7PQOwaZwp8tYuxZ2hzIdoeSKqCIE+3k969/JRXb6JdkKun9uX1+205DuTi7B2UXsYpmGySMSodfIxnU+araOPp8nEEzcXFXQ3HFcXaFJqX87uznuli5Pbq0Vc7XS8qPa6mMB9+RnQSZ8/+n8i3H2m025KPEZrN3Hlro3kuUuuHfFYvenOP5zXmN7Ofk8eBq1aejU4+42e+u9XQ1FZ9J9Zh0/oUz1PZwP/tm595/vp6xsQtRbNGHTbhVPdJax+JjOjYdQeZqZBbMhHKuDKaphThjuCVNMdo4Hu4VJG1Vat6VU6fqt2WkEdv4P8EvKPjtxT1Gy2K2hNMksUOxBbgg+ZiWUodzk2PwMkUSCBU0jsqUg100nrB49trHChy3v6EgguYSA0PbtVRcfJJByq2B/zsBoS5X6gUnVkFa6FuuE3SXOoINnm5PIWJ/eAsJiBIW4z11IPtlS6FhM8TVXoFqe4yCHV1J4Ylg28cs13JIviEAxSJxI0DaEYj+OsMo5cfj0bE5lpe51Bdtv25rX7b10CbUOZMZAmlxPQbYRvHpfSOpH9CVc3E167b6aUmYul66kSRpZItn99jomZj3xGdEYvrf6Lu8admx98/OtJ5wdQzm498kB0yjbCrp9u/Qho2misuznBxUkxnU7TrH9VQ4+Jdq85y/Ud5Dl9IKkmtsVAvAN3ci/OQa9IDnwneK7fhpiqMe8rrCDSA1fIxAPWhj5IszZ09U2ZH7qTbIXUpVMwV9/pWqFeeQziH7ciEhBjp9W3+jMTCf3s2De+NuLoPPXWoBgfGcm8IIs9c0GEdss094lk0/l3Dr4Lvq3Mi5xjUXqgXlMF+/8UDKnVLUyISLnqtq1MsUm0GU61iCH4NPriJuPyfLlj/77d2SwbAQJ6JZQs82/e6MBcAT7aIOtV0D18XfqJr7fRNb6ov2o26rQ7442/</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>07C8A26E5C8360E5E05305991F0AAD60</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C8A26E5C8360E5E05305991F0AAD60</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C8A26E5C8F60E5E05305991F0AAD60</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C8A26E5C8F60E5E05305991F0AAD60</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_070642</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+o6EP4rTM/HM6VpoYAdYQYBleM7oFf94sRkgWiblCblxV9/kgIVULzc+6mz283usy95sscSR6EXNKWERDHBC/Mo5DLItHUrTXggsGQy4DgCGSgS9JtXl4FXRAFeH7EK3XbdegGvTBEtIxt5HrXLPi3ZNR+XbPCpVzmq4DKgsjaVMoUulwpzVbc85JZt17Xd8gC5QckPypVitVJ5tgoPkEjtW5sUkbUCNZd1a6xUHDjObDYrzkpFkYwcDyHXeby67JMxRNhqHC8zygIljZU9KVIgEIakSETkHDtbNsdUBn024lilCaxi0X2xkIOOHG1DJRv9svKzQLt8KDKxhbngjOCQfWBTnytQY0ELzXAkEqbG0d4kXGQc2zAnNnHL/JflbEM70NEWwkRiW46xu/LVgyEkwAkU7nvduvXrsK5lRwcJ5nIokkhui/8ND/AphCIGast1Witohzv8plKNYyBBl5MwlWwK12ZYY0xArroJ5HBXhdsEhmx+yaQe0Lk06JxNeDvishptNgKp/k+DNpqzdPKAwxQa84cq9tjd85kr5J9B3Bs23/7pnZ+fhel7PQOwaZwp8tYuxZ2hzIdoeSKqCIE+3k969/JRXb6JdkKun9uX1+205DuTi7B2UXsYpmGySMSodfIxnU+araOPp8nEEzcXFXQ3HFcXaFJqX87uznuli5Pbq0Vc7XS8qPa6mMB9+RnQSZ8/+n8i3H2m025KPEZrN3Hlro3kuUuuHfFYvenOP5zXmN7Ofk8eBq1aejU4+42e+u9XQ1FZ9J9Zh0/oUz1PZwP/tm595/vp6xsQtRbNGHTbhVPdJax+JjOjYdQeZqZBbMhHKuDKaphThjuCVNMdo4Hu4VJG1Vat6VU6fqt2WkEdv4P8EvKPjtxT1Gy2K2hNMksUOxBbgg+ZiWUodzk2PwMkUSCBU0jsqUg100nrB49trHChy3v6EgguYSA0PbtVRcfJJByq2B/zsBoS5X6gUnVkFa6FuuE3SXOoINnm5PIWJ/eAsJiBIW4z11IPtlS6FhM8TVXoFqe4yCHV1J4Ylg28cs13JIviEAxSJxI0DaEYj+OsMo5cfj0bE5lpe51Bdtv25rX7b10CbUOZMZAmlxPQbYRvHpfSOpH9CVc3E167b6aUmYul66kSRpZItn99jomZj3xGdEYvrf6Lu8admx98/OtJ5wdQzm498kB0yjbCrp9u/Qho2misuznBxUkxnU7TrH9VQ4+Jdq85y/Ud5Dl9IKkmtsVAvAN3ci/OQa9IDnwneK7fhpiqMe8rrCDSA1fIxAPWhj5IszZ09U2ZH7qTbIXUpVMwV9/pWqFeeQziH7ciEhBjp9W3+jMTCf3s2De+NuLoPPXWoBgfGcm8IIs9c0GEdss094lk0/l3Dr4Lvq3Mi5xjUXqgXlMF+/8UDKnVLUyISLnqtq1MsUm0GU61iCH4NPriJuPyfLlj/77d2SwbAQJ6JZQs82/e6MBcAT7aIOtV0D18XfqJr7fRNb6ov2o26rQ7442/</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF06FE51CC1A55E05305991F0AE3BD:B7179700"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FF06FDFF1976A2E05307991F0A3B17</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FF071069981A4DE05305991F0A8C2B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C8A26E5C8360E5E05305991F0AAD60</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20141114_070659</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20141114_070659</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20141114_070659</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>GB</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>00FF071069991A4DE05305991F0A8C2B</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FF071069981A4DE05305991F0A8C2B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FF071069981A4DE05305991F0A8C2B</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSxyrkQrhFBYly2U23LT1A6eWlMs4A7gY7xE6A/fXHDg0FSnvYIyEhT8Yz31z8zVxyNA8dr8k5xIIwqvntuv5acYPi2HEcI6hUqoZbAcdAtlUzqgEqV9HYRbhW0TWf8wR8ygWioq47lu0aVtWwa0O77BXLnl0qlF3rRddGEHNpWqoULF1bzUPKvcxtXU9i6jHECfcomgP3BPYGzdsbT2p6KMekNy43KDOHcWMmROSZJi4EgCEMcQGzuXlp7ulcBtwbkClFIonh3WfA6/r73eVyWVgWCyyemo5lWaZVM6VOwMn0XG+c5Zch8OmEbc4tRBklGIXkD1KgbkHMWKA1wymLiZjNvzBtm7alTBuwwga2XXqumx8OMnQnWtoDGXNk8Bmyc2N9mEAMFIP20Pfr+vlpFdzcHcaI8gmL5/zg/HeQgKYQsggCg+eR5ehOt3gkXY1LwJ5PcZhwksKdapMIYeDafQwTsrohXDZfwLWs/NqKyx/Juwzw35Tl0tzFKqGbR7LTJlPg4v/UbLdeGysjFCbQWI7wNO22+fRmfuu+uQN71P/JIzYprpv1DMKu8gbUttzv58Nm3fbW+6WxFS0T3nRc3roauhc/m9T5wZ575D4N3WLLKvUYce/bd1D1H9K70fNo1Gnx9IVPXp7GvtkljPy6fQweO52IPN+cmU8T3inx6+uH8k3lbfYkqhfRqkJ+Dkf9lxG9Js/YfMGLpf/Ym47/aSePzW55/Dx9Docru/inXG5dtO/G7fHbD7LqibMnZ7IAt8nSbnxbfCkl1V/V+kdMuzHsC3NKGCTjN8AiP6r28NtaV9YLie/pRUlIYEwyVS9SHMUFUKE31C1FLV4iCYgEnizm5mxZ3a5Vsa1yrVa1m267Y5WKVqlWs7tWs9pyrnIO2qA4gNhidEKUL8Wym/75HiCeexxoALGRsgTPgOvfWGwjgTSf9uXjYJTDkEkWt1FCa/E6XRRjLuzVb54k9rpE0pmu3THRo724OREQ71N3bY+6+4BJREDxu2pwLjucC5mLBUoTEdqFFBUoJHICxIqEPcetlkxO5lEICqk5Z0ESQiGaRVlmTL75l1yEeSbtd4bZw/syrsNveQqkTkCUAlexXIEsIxyZQVYeyJcBO85uwLn5ZhIQ9b5kPkVM8AbJ/qePNlH9se0RGdFra/Bq57i36idf/3zT/AaUeZiPraMgJTtu82Eq54Nkj0ZezQUqLApJmiZZ/SqKGWNp3pQEaZsDwImkt/WQ/QZqbk2YJ02XLeoDz1v5Pr5EzOhAIAFz2W1adjxhtRgAV6uFL5/J6tS9Zc+lzJuAlTgma4VyA1GIv11SsIeVnhTfy78li4OPch2xteNHxin3CUHoVJ3UHFl/0RSYSbNEEh+Ld40fM3DM+b5wm+QtFiG7aZwI+PqLphitriOMWUKF39YzwS7LZjjFOgLvQ+mTmYzJ30fzin85mp9ubwaS7+ZI3+qS/1Y2SNYuGHS1AWRY6vpKbprSOZ3usPo7wE/EXnavqsWiK4m9tkvsRdvubBO4F0njk/izZCenh++h8S8=</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140819_123614</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d94474a6-b762-447b-9114-73a1e8620d13</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c2f421-9244-4eb5-9ca2-8c25390fecaa</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00033_Account and User Create with GB 111_UserDelete Standard Youth user107_SUCCESS_P0" searchProperties="true" id="94f2e9bf-f422-427f-83d8-e1b1c1776a7d"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="57a1c4d4-5355-4c7b-b52f-908fdeabeba1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="b52baa14-7437-4624-8c85-771bc7133357"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","GB");

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="7416ea3c-4fa1-449c-91d2-53a3c77257e1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUser" id="a23ca181-9e9b-4c6d-be2d-55b69b46d431"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - StandardYouthUser" id="1df2d34c-1c99-42eb-97bd-a519b5bfb11d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="490ded67-225b-4b50-bab0-1f75dae22ba2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="1a670df6-9f52-4bce-b0fe-7885b8add929"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="72fce3df-800e-4f2c-84e5-2c1139f091f6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4jx1jGzAXT2DGMdDSQykFkjS8dIS8BhVbdiSZS3/9kUxMgJAcejye8Wi92v32ok97w1EclV2Pc2CCJFTrd1r6LwfmoTOHumHJx6jaYWg0nSo2GmG1HlYaASoHtq71Oc+gT7lAVLT0smVXDath2M2pXXMr6i3ZldpM1+6BcWlaqpQsXdvGEeVu7ralZ4y6CeKEuxTFwF2B3Yn3beBKTRcVmPT2zR5l7pC1l0KkrmniUgAYogiXcBKbN+aJzk3A3QlZUCQyBs8+A97Sn/duNpvSplJK2MIsyxBNq2lKnYCTxUe9/aHYDEGfhsl+7SOaUIJRRP4gBeobiGUSaF60SBgRy/gN07ZpW8q0AVtsYLtKP+rmi4Mc3ZWWTkAyjgy+RHZhbAwhMKAYtLtxv6V/vK6C+71ThigPExbzs/XfQQK6hihJITB4EVmB7nqLF9LVvgHs9imOMk7WMFRtkiIMXBsxCMl2QLhsvoBrefm1LZcvKboM8N+U5cY8xiqhmxey0yEL4OL/1Oy4Xnsr9yjKoE0WDb4Zf+UxC8flh03lNu7+mQ6/dPwKbuUQjpX3oA7lfl6fN+uht543PeJ7+3NzkTw0CPSCVTib93/cd/2hYw7W29Xd42AyG2wfstGuHHid+s75OfWcdDjz0+yBeZn3EJJoc2vHlS+3vc8fKp/qlZAO2WhUmfV+DKaeP/26y8Jpur0jE+uO+k6X/Z5ly8UugX8261h06SCI0lWPzpp4lXxa3I+CztPQ78D804d+PQ2YM1r7D/5jb+GsGp8brZeYjmM4FRaUMMnmvwGLYqnao9/RerJeSLxPL0pCAiPMVd1UcRQXQIXeVrsUtbiZJCASuLKY+7Vl9XpWrdd17I5le47TtZyK5TSbds/yupXbTsFBexRnEP2EhkT5Uiy775/3AeLY5UADYMY6yfASuP6OxQ4SSOvTsTwcCeUwTSSL2zV4qs8B1ap/0pWdZTuGarU0idInXRsm4jv9zrxQADvl7uYJd48Bk5SAInjV4Vy2OBcyGU9onYnILq1RiUImrwCmWNgtVxuOyUmcRqCgmnESZBGU0mWap8bk+2/ZQJjn0nF3mp+8NwM7/1fkQOoERClwFcstyDrChUuoXATyZsDl8nHAhXkvC4g6YDKhghG8R3L666VPVIMcmkRG9Muf/LIL3Af1q7e/3mm+A8o8z8fBUbAmR26L21ReEJI+2kU1n1DpqZSt11lev7qiRibNm5IhbXMCOJP8tpsmK6DmwYR51fVyQH3m+SA/xZeJJZ0IJCCW3ablyytmiwlwNVv05TnZXju4nLiUeROwFZdkfiRHEIX43SkFu1jpSfFIfjYJC17KdcHWkR8ZpxwoBKELtVIXye6NpsCJNEsk8yXs2PglA5ecnwoPST5gEbKb5pmAt/9oitJaOsI4yajod/RccEyzOU6xS8F9UXplJqfy57t5y9+8m39+G0wk4cVIP+iS/1Y2SN4uGHQ1AuRYWvpWjprSOV0c0fozwEvMXq/4fr3mVXNmr++Z3et2uocEnkTSfiV+LTnK6fl5aP8L</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>00FF06FE73CC76A4E05307991F0AAEDE</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:00FF06FE73CC76A4E05307991F0AAEDE</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF06FE51D01A55E05305991F0AE3BD</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF0701FD0D76A0E05307991F0A3951</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_123635</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF06FE51D11A55E05305991F0AE3BD</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4jx3jG5fYE5hxuLRMEpIDNG3z0hHyAgq2bCzZmP76IxnsACE59Mx4YLRe7X67+/mTrhkKA8v1GIOEk4gqw15b/d2YN/EMLEMzkelr9RlytKumbYufOTZ9Z9ZwwFCVIWMpDCnjiPK2ahlmXTOuNNOZmk3XFs9VzXbsZ1V5goSJ0MKlJnblYUCZW6Rtq2lC3QgxwlyKQmAux+7Eu79zhaeLSkxq53qHskiYdJacx66u45oPGIIA13AU6tf6kc+1z9wJWVDE0wT2OX3WVvd7N5tNbWPXomShW4Zh6IajCx+fkcVntfOp3Az+kM6j3bqLaEQJRgH5gySoe+DLyFe8YBElhC/Dd0KbumnI0BrkWMNmnX5W9dcEBboLIx2BTBjS2BKZZbAxzCEBikH5Ph621c+XTXC3d5ogyuZRErKT9d9BAppBEMXga6ysrER3ecQz7epcA3aHFAcpIxmMJE1ihIEpjwnMSX5HmCCfz5Ri/ErOxENKlgH+m7Fc64dYBXT9THd6ZAGM/5+ZHc5rF+UJBSl04MYcfpn0v9srCOarlxtqjM3VE9waD/12AeHQeQeqGvd+fUrWilv7TduY/IHbP6y/JpvWl8XwKU+Xa+SYj+Nlb1Rf/0p/PefrLgOv0VrPRi9WnX61gq5nh1n/R7AN7W13PphSfdr7BvYn76fVQ3HizfTbSfZ4Y5B/vuPJ6OXhWf8xWfTiaLa0SMa+PNksSPwV8hMPO982N895OvrR3TaX/qA+atjpepB/vf+0Svub6Oap/pXc67Q5fXy2vPZrTYc1HBtLSZiksxfAvFxKegx7ykDMC/GP5UVaiK/NC1c3lhrFOFCuduQuKS1uKgSI+K4Y5m5tGIOB0TLMQc/otZqe0TcattFyHHNgeLbTMEsN2qE4gdiN6JzIXFJld/z5GCAOXQbUh0TLohQvgakfROwhjpQhHYuPI6IMppFQ8TgzSKtOIo6yVp6gubOO42a6qqvKKOIP9CHx5hySY+V2jpR7DJjEBKS8S34zQXDGRSvWKEt5YNYyVKOQigMgkRrsWvWrhs5IGAcggeph5KcB1OJlXDRGZ7t/S0OYFdZxf1p8d++Wdfqu7IDw8Yl0YLKWGxBThDNHkFUW8m7BlnVYcBneS30iPy/RTp4QvENy/OqVJZIeFUVERb+7k98VFSr3i7e/3al/AEo/7UeVyM/IQdryLBXHgxCPTjnNNaqta2mWpcX8WlIYExFeF/po6hPAqVC37TRaAdWrEPpFh0uF+iRzZT/Gl/IlnXDEIRRsU4rlBTeLCTB5sxiKryS/9NpylFL0jUPOz9m6gbiASMQf3lGwi6WfMD+Kv02U+K/jOhPrII+oU1wnOKELuZLHyPYdUuBIhCVC96LkMPi5AOeSHxurJldYuGDTLOXw/htFClpbRRhHKeXDnloYDkW2wMm3MbivTm/CFEK+P5lz9u7J/PP+biLkLkRq5Uv+21kjBV0wqPICUGBpq7m4aIrkdHEg6nuAb3S9Oei37G5X6Hr9UNe9fq9fNfCoks4b81vLQU9Pv4fOvw==</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF064AE9801A45E05305991F0A570D:7C212E26"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FF06FE51D01A55E05305991F0AE3BD</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FF0701FD0D76A0E05307991F0A3951</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF06FE73CC76A4E05307991F0AAEDE</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140819_123637</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140819_123637</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140819_123637</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>GB</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>00FF0701FD0E76A0E05307991F0A3951</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FF0701FD0D76A0E05307991F0A3951</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FF0701FD0D76A0E05307991F0A3951</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4jx3jG5fYE5hxuLRMEpIDNG3z0hHyAgq2bCzZmP76IxnsACE59Mx4YLRe7X67+/mTrhkKA8v1GIOEk4gqw15b/d2YN/EMLEMzkelr9RlytKumbYufOTZ9Z9ZwwFCVIWMpDCnjiPK2ahlmXTOuNNOZmk3XFs9VzXbsZ1V5goSJ0MKlJnblYUCZW6Rtq2lC3QgxwlyKQmAux+7Eu79zhaeLSkxq53qHskiYdJacx66u45oPGIIA13AU6tf6kc+1z9wJWVDE0wT2OX3WVvd7N5tNbWPXomShW4Zh6IajCx+fkcVntfOp3Az+kM6j3bqLaEQJRgH5gySoe+DLyFe8YBElhC/Dd0KbumnI0BrkWMNmnX5W9dcEBboLIx2BTBjS2BKZZbAxzCEBikH5Ph621c+XTXC3d5ogyuZRErKT9d9BAppBEMXga6ysrER3ecQz7epcA3aHFAcpIxmMJE1ihIEpjwnMSX5HmCCfz5Ri/ErOxENKlgH+m7Fc64dYBXT9THd6ZAGM/5+ZHc5rF+UJBSl04MYcfpn0v9srCOarlxtqjM3VE9waD/12AeHQeQeqGvd+fUrWilv7TduY/IHbP6y/JpvWl8XwKU+Xa+SYj+Nlb1Rf/0p/PefrLgOv0VrPRi9WnX61gq5nh1n/R7AN7W13PphSfdr7BvYn76fVQ3HizfTbSfZ4Y5B/vuPJ6OXhWf8xWfTiaLa0SMa+PNksSPwV8hMPO982N895OvrR3TaX/qA+atjpepB/vf+0Svub6Oap/pXc67Q5fXy2vPZrTYc1HBtLSZiksxfAvFxKegx7ykDMC/GP5UVaiK/NC1c3lhrFOFCuduQuKS1uKgSI+K4Y5m5tGIOB0TLMQc/otZqe0TcattFyHHNgeLbTMEsN2qE4gdiN6JzIXFJld/z5GCAOXQbUh0TLohQvgakfROwhjpQhHYuPI6IMppFQ8TgzSKtOIo6yVp6gubOO42a6qqvKKOIP9CHx5hySY+V2jpR7DJjEBKS8S34zQXDGRSvWKEt5YNYyVKOQigMgkRrsWvWrhs5IGAcggeph5KcB1OJlXDRGZ7t/S0OYFdZxf1p8d++Wdfqu7IDw8Yl0YLKWGxBThDNHkFUW8m7BlnVYcBneS30iPy/RTp4QvENy/OqVJZIeFUVERb+7k98VFSr3i7e/3al/AEo/7UeVyM/IQdryLBXHgxCPTjnNNaqta2mWpcX8WlIYExFeF/po6hPAqVC37TRaAdWrEPpFh0uF+iRzZT/Gl/IlnXDEIRRsU4rlBTeLCTB5sxiKryS/9NpylFL0jUPOz9m6gbiASMQf3lGwi6WfMD+Kv02U+K/jOhPrII+oU1wnOKELuZLHyPYdUuBIhCVC96LkMPi5AOeSHxurJldYuGDTLOXw/htFClpbRRhHKeXDnloYDkW2wMm3MbivTm/CFEK+P5lz9u7J/PP+biLkLkRq5Uv+21kjBV0wqPICUGBpq7m4aIrkdHEg6nuAb3S9Oei37G5X6Hr9UNe9fq9fNfCoks4b81vLQU9Pv4fOvw==</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140819_123637</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e74d2b5e-939e-49b7-9a44-445a047a7ae6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2a7af988-7e34-4f6d-9441-18c89e01c9a8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00035_Account and User Create with US 111_UserDelete SecondFull user 107_SUCCESS_P0" searchProperties="true" id="3c27750d-142e-432a-86bd-3d2b7a360ad7"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="d8b1d54d-8eed-43e0-9525-8caf6abbe995"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="9c921413-4a8a-4bc4-87ed-abfb1dddd849"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","US");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="ecc83b39-09fc-4dd8-9386-8b2954c66835"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFULL" id="9e5dc89c-54ee-4b7d-81d1-28c0e0dc58e6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - AdultFULL" id="451fadf8-dbeb-4950-ba19-e9f61b815e5b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="b7298da6-8513-4710-ba20-74a945acb2b1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="ce08475d-9ab1-49f7-9d3d-f3058d0f4394"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="60c742ac-4617-43ef-8571-330136a8da33"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH6uQCwRIVJByoFDO0tIFyunuy8rYQ/A2sSF2UuivP05oKNDLYY+EhDwZz3xz8TdzKVAcOX4gBCSScqYNui39lzOfu8itW8a8urCMmuMhw3OxazRJHVwXLOI1kK4NhEhhwIRETLZ0x7JrhtU0bG9q1/1qw7calWrd+alrM0iEMq1UKpaubeKICb9w29LThPkcCSp8hmIQvsT+JLgZ+krTRyUmvX25Q1k4TNpLKVe+aeIKAQxRhCuYx+aleaRzSYQ/oSFDMk3gxScRLf3l7tPTU+WpWuFJaDqWZZmWZyodImj4VW9/KS8DGbAF3507iHFGMYroM8pB3YBccqIFUcgTKpfxB6Zt07Zy0wZssIHtGvuqm68OCnRnWjoCmQhkiCWyS2NjWEACDIN2Px609K/nVXB3d5ogJhY8icXJ+c8gAcsg4isghigjK9Gdb/GddLUvAfsDhqNU0Axu8zZZIQxCu0tgQTdDKlTzEaEV5dc2Qv1o2WWA/6Qsl+YhVgXdfCc7XRqCkP+nZof12lmZoSiFdv/6sfbQTcNlYvXXP4eUOOT78Ic97Nd4q4BwqLwDtS/3y/m0Wfe99XLp3r3e/rgjfTtyJkPg485j7YmNf1dnIyrHwSp2mvdoQ54hvTb5/bfHfkD7s9no+duVDJKfDzaqd7Z/T6aEj920+cW5czJuLW8v+pOsK6f9q1EYZmkw7wGZZRfhj/Vwge+Sm5l3sYmbQXdOv6P7Wwpe7x9EyEJEV+mYhr3xlvHftS+d9cO3yboxyq4vZDxCm+/NsPUa02EMx8KSEibp/DdgWR7z9hh0tZ6qF5Kf00suocRYFKr+KucoIYFJvZ3fyqnFTxUBUeKrYu7OltXrWQ3bqnudph3UuleWW7Vcz7N7VtDsOH+VHLRDcQKxw9mC5r5ylt31z+cAcewLYAQSI+MpXoLQP7HYRRJpAzZWj4MzAVOuWJzxZuIynCJnaTPbQ3YVMrl93ujaLZcjNkqChYTkmLm9I+YeA6YrCjm95/0tVIMLqVKxRlkqI7uSoQqDVA2AJOdg36k1XVPQeBVBDtSMOUkjqKyWqyIxptj9OwbCopCOr6bFu/swrNNvZQaUDqG5gshj+QtUFeHNCKr7bhnIhwE7zmHApfkgJTR/XiqdMqF4h+T402uX5O2xbxEV0a/O5Jdd4t6rn3397U3zE1DmaT72jkhGD9yWs1SNB0Ue7bKaa1RZV9IsS4v6NXJiTJR5U/GjbU4Ap4rdtlP+CMzcmzDPGi571Cee9/JjfKlcsolEEmLVbVpxPGOzmIDIN4uBeiWbc9eWI5cqbxI28j1ZJ1ILSI740x0F+zjXU+I79ffEE/JarndsHfhRcap1QlIW5qd8jGw/aArMlVmqeI8nh8bfM/Ce82PhPsl7LFJ10zyV8PEXLSe0lo4w5imTg65eCA5JtsAptyvwX5XemCmI/GUyb8SHk/nhZjhRdBcjfa9L/1vZoEW7YNDzBaDA0tI3atFUzll4QOovAN/yumX3um69UQ+sgtcbO16veu7rYz6KpP1G/FZykNPT99D+Fw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>00FF0701FD5676A0E05307991F0A3951</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:00FF0701FD5676A0E05307991F0A3951</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF071069C81A4DE05305991F0A8C2B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF064AE99D1A45E05305991F0A570D</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_12376</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF071069C91A4DE05305991F0A8C2B</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3vr4jSx6uQBBJCooLENksX+gELLe3tS+U6A3E3cSB2Qthfv3ZoKNCPy14JCXkynjkzc3zsM4biqO51GYOUk4Qqfb+tPlm205oFTkND9YarWQg9ay2MTM1sNSzXdp6NWctUlT5jGfQp44jytlo3TEszWprp3ppNr+F4hluzneajqkwhZSK0cKkZqlLEEWVembatZin1EsQI8yiKgXkce5Pu9ZUnPD1UYVI7ZxuUZcK0E3K+8HQd1wLAEEW4hpNYP9P3fM4C5k3InCKepfCaM2Bt9XXvarWqrRq1JJ3rdcMwdMPVhU/AyPxU7ZxUmyHo01myWZ8jmlCCUUR+IwnqGniYBEo3micp4WH8SWhTNw0ZWoMCa9i06KmqvyUo0R0ZaQ9kypDGQmRWwcYwgxQoBuVu3G+rp8dNcLP3NkWUzZI0Zgfrv4MENIcoWUCgsaqyCt3xET9oV+cMsNenOMoYyeFG0mSBMDBllMKMFFeECfIFTCnHrxRM/EjFMsB/M5YzfRergK5/0B2fzIHx/zOz3XltokxRlEGnORgXRty7ty6Lu9ajpS+zmY+MJgkt3C4h7DpvQG3H/bo+JOuWW6+blv80mperfDB08XW9aGF4PkfTZNKfLi/yB59l4/uLeXaRDS7Izf3Nw/DFH/WurPMVLNxRzxkMH0ZXs3Xv/mV0p/vfTpzf8379svj3ejyg0ZA7o571OL2erIYwDtfm86ge2NPldKnTi/lPHV/e5T/XXetxFPtR2H3s/ng0H2bTX9MFNwd3oxOLsh/hw7cmMyFcTWxn4Ny132rarWHfWEnCJHt+AcyrpaRH31d6Yl6Ify0v0kICbVa6egupUYwD5WpH7pLS4mVCgEjgiWFu1obR6xlNq/vddX2za9nfDbth2K5r9oyu7Rh+pUEbFAcQzxM6IzKXVNkNf74GiGOPAQ0g1fIkwyEw9YuIPuJI6dOxOBwJZXCbSBVHq5Vlrte5vczN4pcgTJiEaP1CVeUm4UM6TLszDum+dLt70j0GTBYEpL5LgjPBcMZFL5Yoz3hk1nJUo5CJGyCVIuzVrZatMxIvIpBI9TgJsghqi3BRdkZnm/+6hjArrePvt+XB+7Suw29VC4RPQKQDk7V8AzFGeHcHNT27KuTTguv13YKr8N0sIPJ8iX7ylOANkv1PbzSR/NhyRFT0dD55MivcW/ejt7/fqX8BSj/sxzZRkJOdtNVlKu4HoR6dappLVFvWsjzPyvk5UhlTEV4XAmnqE8CZkLf1bfILqL4NoR91u2xRH2Te2vfxZTykE444xIJtSrk84mkxASafFn1xTIpj3y17KUXfOBT8I9t5JF4gEvGXjxTsYeknzCPxt0rS4G1cH8TaySPqFO8JTuhcruQ9sv6EFDgRYYkQviTdDf5RgI+S7xu3Td5i4YJNzxmHz78oUtHaKsI4ySjv+2pp2FXZEidfL8B7c3oXplTy16u5YJ9ezQ/XVxOhdzFSt77kv501UtIFgypfACWWtlqIl6ZITuc7qv4K8J2wO4bZ8+2m0+wapbA7G2FvuPYbl/cq6bwzv7fs9PTwPHT+AA==</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF071069F41A4DE05305991F0A8C2B:2ED6D814"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FF071069C81A4DE05305991F0A8C2B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FF064AE99D1A45E05305991F0A570D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF0701FD5676A0E05307991F0A3951</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140819_12378</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140819_12378</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140819_12378</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>00FF064AE99E1A45E05305991F0A570D</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FF064AE99D1A45E05305991F0A570D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FF064AE99D1A45E05305991F0A570D</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3vr4jSx6uQBBJCooLENksX+gELLe3tS+U6A3E3cSB2Qthfv3ZoKNCPy14JCXkynjkzc3zsM4biqO51GYOUk4Qqfb+tPlm205oFTkND9YarWQg9ay2MTM1sNSzXdp6NWctUlT5jGfQp44jytlo3TEszWprp3ppNr+F4hluzneajqkwhZSK0cKkZqlLEEWVembatZin1EsQI8yiKgXkce5Pu9ZUnPD1UYVI7ZxuUZcK0E3K+8HQd1wLAEEW4hpNYP9P3fM4C5k3InCKepfCaM2Bt9XXvarWqrRq1JJ3rdcMwdMPVhU/AyPxU7ZxUmyHo01myWZ8jmlCCUUR+IwnqGniYBEo3micp4WH8SWhTNw0ZWoMCa9i06KmqvyUo0R0ZaQ9kypDGQmRWwcYwgxQoBuVu3G+rp8dNcLP3NkWUzZI0Zgfrv4MENIcoWUCgsaqyCt3xET9oV+cMsNenOMoYyeFG0mSBMDBllMKMFFeECfIFTCnHrxRM/EjFMsB/M5YzfRergK5/0B2fzIHx/zOz3XltokxRlEGnORgXRty7ty6Lu9ajpS+zmY+MJgkt3C4h7DpvQG3H/bo+JOuWW6+blv80mperfDB08XW9aGF4PkfTZNKfLi/yB59l4/uLeXaRDS7Izf3Nw/DFH/WurPMVLNxRzxkMH0ZXs3Xv/mV0p/vfTpzf8379svj3ejyg0ZA7o571OL2erIYwDtfm86ge2NPldKnTi/lPHV/e5T/XXetxFPtR2H3s/ng0H2bTX9MFNwd3oxOLsh/hw7cmMyFcTWxn4Ny132rarWHfWEnCJHt+AcyrpaRH31d6Yl6Ify0v0kICbVa6egupUYwD5WpH7pLS4mVCgEjgiWFu1obR6xlNq/vddX2za9nfDbth2K5r9oyu7Rh+pUEbFAcQzxM6IzKXVNkNf74GiGOPAQ0g1fIkwyEw9YuIPuJI6dOxOBwJZXCbSBVHq5Vlrte5vczN4pcgTJiEaP1CVeUm4UM6TLszDum+dLt70j0GTBYEpL5LgjPBcMZFL5Yoz3hk1nJUo5CJGyCVIuzVrZatMxIvIpBI9TgJsghqi3BRdkZnm/+6hjArrePvt+XB+7Suw29VC4RPQKQDk7V8AzFGeHcHNT27KuTTguv13YKr8N0sIPJ8iX7ylOANkv1PbzSR/NhyRFT0dD55MivcW/ejt7/fqX8BSj/sxzZRkJOdtNVlKu4HoR6dappLVFvWsjzPyvk5UhlTEV4XAmnqE8CZkLf1bfILqL4NoR91u2xRH2Te2vfxZTykE444xIJtSrk84mkxASafFn1xTIpj3y17KUXfOBT8I9t5JF4gEvGXjxTsYeknzCPxt0rS4G1cH8TaySPqFO8JTuhcruQ9sv6EFDgRYYkQviTdDf5RgI+S7xu3Td5i4YJNzxmHz78oUtHaKsI4ySjv+2pp2FXZEidfL8B7c3oXplTy16u5YJ9ezQ/XVxOhdzFSt77kv501UtIFgypfACWWtlqIl6ZITuc7qv4K8J2wO4bZ8+2m0+wapbA7G2FvuPYbl/cq6bwzv7fs9PTwPHT+AA==</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140819_12378</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>92045d39-00ec-47cd-8c7a-1cbd350771f9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0cb65ea1-9bd5-4e1a-bdd2-31434c137a16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00036_Account and User Create with US 111_UserDelete Standard Youth user107_SUCCESS_P0" searchProperties="true" id="fa58e17e-a0d2-4e8c-886c-1ef8577f0d60"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="816ea50f-a3d8-42b7-9b67-adcd267e881c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="625b841a-df2a-4e0c-9b4e-f75975bb390b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","US");

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="175067de-ed4b-4f90-a47f-84efaf36681a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUser" id="83bdf6b7-98fc-498c-8772-d57ab3c6bd1c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - StandardYouthUser" id="be2d6072-fb40-4773-a604-629e0a05ecc0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="95273905-2006-4822-b4ca-ebac789c46e4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="4ba2b26d-900b-4342-9f54-354081c887c7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="6abeb73e-4cba-4746-bd24-7a093c298e1c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbdcto8EL3vU3jcS8b4BzC2B5ghEBq3IaQxpQk3HUUWRoktO5IMTp6+kokJEJKPfjPMMFqvds/+6Ox2GEhiy+szhijHKVH8YVf9Aw2n3QCtlma3nVBrwhbU3OY90myngWzoOq5lLlTFZyxHPmEcEN5VLcNsaoajme7UtL1GW/zqDdecq8oMUSZMC5W6oSpFEhPmlW67ak6JlwKGmUdAgpjHoRf0x5ee0PRAhUntdTYoS4e0t+Q883Qd1kMEURzDOkwTvaPv6XRC5gU4IoDnFL36DFlXfb27Xq/r60Y9pZFuGYahG64udEKGo69q70t1GYU+WaSb8wCQlGAIYvwCJKgx4ss0VPpxlFLMl8kHpk3dNKRpDRVQg2aTfFX1NwcluhMt7YGkDGhsCczK2A1aIIoIRMqvG7+rfj2tgpu7UwoIW6Q0YQfnf4OEyArFaYZCjVWRVehOt3gkXb0Ogp5PYJwzvEJXsk0yABFTrila4OISM9F8IVPK8isFEz9cdRmC/1KWjr6LVUDXj2RniCPE+P+p2W69NlZmIM5Rb1I0J/zb7Ay40beH7496jZ7r9sxexn7aLSHsKm9Abcv9ej5s1m1vvV7K5vHYwdmdf1/T3YvIyMeJ8dRY/ghWA2aHl/bP4e9GPPd/3baD+dwowvbd+PE3GqwHNoyjGk4vgmdj1p+/4MxefZkUD0Vw+2iw28mMZD9R0l+ZiwtnDMNpELRDSJrDmm1NHq6eX64b81+zVi0e5A4tLHMScTussaz9vfaDmvHKbn4x8Z3ZGk6u1i9OVJxP7+6Xafctpt0Y9oUVJQT5/QOCvDrK9vCHykjUC/DP6UVKcKgtSlUvkxzFOCJc7clbklq8XBAQDj1RzM3ZMEYjo20atjtyzH5zeG60GkbLdc2R0XcG1lnFQRsUBxAHKVlg6Uuy7KZ/PgcIE48hEiKqrdIcLhFTP7E4BBwoPrkRjyMlDE1TweJRtl64ebRwGuY9pTaNHvHSpA3xOq5SPiET2l9wRPeZ291j7hsEcYaRpHfZ30w0OOMiFU9glfPYrK9AnaBcDAAqOdizmk5LZzjJYiSB6kka5jGqZ8usTIzONv+WBiArpTfn0/LdfRjW4bcqA0InxFKByVjOkKgiOjKCrCqQDwO2rN2AK/P9PMTyeYl0corhBsn+p7cuke2xbRER0Z9B8MescG/VT77+/qb+CSj9MB9bR+EK77itZqkYD4I8elU1n0D9qZ6vVnlZv7YkRirM64IfTT1AMBfs9jxNHxHRtyb0k4bLFvWB5618H1/OlyTggKNEdJtSHk/YLALE5Gbhi1dSnLq27LkUeeOo4Mdkg1gsIBLxpzsK9KDUE+Jr8bdOafhWriO2dvyIOMU6wTGJ5EmOkecPmgKmwiwWvJfSXePHDBxzvi/cJnmLhYtuus85+viLIgmtqwII05xwf6iWgl2SLXHy5wx5b0rvzJRE/jqZC/bhZL4dXwaC7hKgbnXxfytruGwXiFS5AJRYumohFk3hnEQ7pP4K8B2v26PzUaPZb9vuecnr7Q2vW6O2s03gXiS9d+L3kp2cHr6H3l8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>00FF06FEF34A769EE05307991F0A2F78</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:00FF06FEF34A769EE05307991F0A2F78</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF071069F81A4DE05305991F0A8C2B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF06FE52221A55E05305991F0AE3BD</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_123736</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF071069F91A4DE05305991F0A8C2B</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZZb+o6EH7vr4jSx6OQhTURILEWeoBSlm4vlXFM8D2JE2IHAr/+2oFQoNDLuRIS8mQ8883ib6ZMgecaVo1SFDLsE6nbrMif+aKdgwXTUAq2Ziq5gm4qs5yWV3RYmpmmAXUAbVnqUhqhLqEMEFaRDU3PKVpJ0c2JXrCyRStrZkr5wocsvaCQctNcJaPJUuy5hFqJ24ochcTyAcXUIsBD1GLQGtf6PYtrWiDFJFfLO5SJw7C6YCywVBVmbASR68IM9D21rJ7olG1qjbFDAItCtPdp04q8v7terzPrbMYPHdXQNE3VTJXr2BQ793L1Lr2M7C6Z+7tzAxCfYAhcvAUCVB+xhW9LNdfxQ8wW3hXTuqprwrSCYqhAPUfuZfXLQYLuRksnIEMKFLoAempshOYoRAQiaTrqVuT72yq4uzsJAaFzP/To2fnvICGyQq4fIFuhaWQputstXkhXtYyg1SXQjSheoYFokwBARKVhiOY47mHKm8+mUlJ+Kab8h9MuQ/BvylJWj7Fy6OqF7DSxgyj7PzU7rtfOygtwI1Sd9Udg9hp9tMBb+4+x6TivwbC4/NV5LmiVBMKx8g7Uodz783mzHnprfynA9kPjDY+dKVxsnzx14IM2M2bN9nvUe8xO1eXj8M2xt8NuvTGol/KvbmSuHrbT9ezl/an3iJcdVwuyhWn0vDK8u5UbPoNeafb7fatNYvgyr/enA9cGAHReH6bTSe65+StW1/163HQD26h7gamvO7NN24RxY1DqxNHbtvPgLRzmPNzhHJjY2VdjWHDDVe3jGftO5Sum4xhOhSkljKPZPwiy9Cjao9uU2rxegP1ML0KCbWWeqFqB4CjKEGFyVdwS1GJFnICwbfFi7s6a1m5rhXYrbxiGXsvnW1o+q+VNU29rtVa23kw5aIfiDGLDJ3MsfAmW3fXPzwChZ1FEbBQqKz+CC0TlHyw2AQNSl4z44/AJRROfs7gDi7Pierl2N04crPMO80oG0eauLA189kSewtqcofCUuc0T5h4hiAOMBL2L/qa8wSnjqViCVcRcPbMCGYIiPgBCwcGWkSvlVYq9wEUCqOr5duSiTLAIksSodPdvKADSRDpqTZJ3dzWs829pBriOjYUCFbHUEa8iujCCjDSQqwEbxnHAqflaZGPxvHg6WYjhDsnpp68uEe1xaBEe0Wdj/KmnuA/qN1//flP9AZR6no+DI3uFj9yms5SPB04e1bSaS5BZZqLVKkrqVxTEGHLzKudHXR0jGHF220z8P4ioBxPqTcPlgPrM80F+ii9iCzJmgCGPd5uUHG/YLMaIis2iy19JfOvacuKS542hmF2SNVy+gAjEP+4o0IJCj4uH/G/th1+BX7J15IfHydcJhokjTmKMbK40BfS5Wcx5zw+PjV8ycMn5qfCQ5AMWxrtpFjF0/YskCK0iAwj9iLBuU04ExySb4GSbAFlfSt/MJES+n8wxvTqZ3/q9Mac7D8gHXfzfygpO2gUiWSwACZaKHPNFkzsnzhGp7wFe4vV2NlcrFsxWwuvFHa8b7WLpkMCTSKrfxN8lRzk9fw/VfwE=</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF06FDFF7C76A2E05307991F0A3B17:AB001335"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FF071069F81A4DE05305991F0A8C2B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FF06FE52221A55E05305991F0AE3BD</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF06FEF34A769EE05307991F0A2F78</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140819_123738</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140819_123738</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140819_123738</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>00FF06FE52231A55E05305991F0AE3BD</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FF06FE52221A55E05305991F0AE3BD</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FF06FE52221A55E05305991F0AE3BD</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZZb+o6EH7vr4jSx6OQhTURILEWeoBSlm4vlXFM8D2JE2IHAr/+2oFQoNDLuRIS8mQ8883ib6ZMgecaVo1SFDLsE6nbrMif+aKdgwXTUAq2Ziq5gm4qs5yWV3RYmpmmAXUAbVnqUhqhLqEMEFaRDU3PKVpJ0c2JXrCyRStrZkr5wocsvaCQctNcJaPJUuy5hFqJ24ochcTyAcXUIsBD1GLQGtf6PYtrWiDFJFfLO5SJw7C6YCywVBVmbASR68IM9D21rJ7olG1qjbFDAItCtPdp04q8v7terzPrbMYPHdXQNE3VTJXr2BQ793L1Lr2M7C6Z+7tzAxCfYAhcvAUCVB+xhW9LNdfxQ8wW3hXTuqprwrSCYqhAPUfuZfXLQYLuRksnIEMKFLoAempshOYoRAQiaTrqVuT72yq4uzsJAaFzP/To2fnvICGyQq4fIFuhaWQputstXkhXtYyg1SXQjSheoYFokwBARKVhiOY47mHKm8+mUlJ+Kab8h9MuQ/BvylJWj7Fy6OqF7DSxgyj7PzU7rtfOygtwI1Sd9Udg9hp9tMBb+4+x6TivwbC4/NV5LmiVBMKx8g7Uodz783mzHnprfynA9kPjDY+dKVxsnzx14IM2M2bN9nvUe8xO1eXj8M2xt8NuvTGol/KvbmSuHrbT9ezl/an3iJcdVwuyhWn0vDK8u5UbPoNeafb7fatNYvgyr/enA9cGAHReH6bTSe65+StW1/163HQD26h7gamvO7NN24RxY1DqxNHbtvPgLRzmPNzhHJjY2VdjWHDDVe3jGftO5Sum4xhOhSkljKPZPwiy9Cjao9uU2rxegP1ML0KCbWWeqFqB4CjKEGFyVdwS1GJFnICwbfFi7s6a1m5rhXYrbxiGXsvnW1o+q+VNU29rtVa23kw5aIfiDGLDJ3MsfAmW3fXPzwChZ1FEbBQqKz+CC0TlHyw2AQNSl4z44/AJRROfs7gDi7Pierl2N04crPMO80oG0eauLA189kSewtqcofCUuc0T5h4hiAOMBL2L/qa8wSnjqViCVcRcPbMCGYIiPgBCwcGWkSvlVYq9wEUCqOr5duSiTLAIksSodPdvKADSRDpqTZJ3dzWs829pBriOjYUCFbHUEa8iujCCjDSQqwEbxnHAqflaZGPxvHg6WYjhDsnpp68uEe1xaBEe0Wdj/KmnuA/qN1//flP9AZR6no+DI3uFj9yms5SPB04e1bSaS5BZZqLVKkrqVxTEGHLzKudHXR0jGHF220z8P4ioBxPqTcPlgPrM80F+ii9iCzJmgCGPd5uUHG/YLMaIis2iy19JfOvacuKS542hmF2SNVy+gAjEP+4o0IJCj4uH/G/th1+BX7J15IfHydcJhokjTmKMbK40BfS5Wcx5zw+PjV8ycMn5qfCQ5AMWxrtpFjF0/YskCK0iAwj9iLBuU04ExySb4GSbAFlfSt/MJES+n8wxvTqZ3/q9Mac7D8gHXfzfygpO2gUiWSwACZaKHPNFkzsnzhGp7wFe4vV2NlcrFsxWwuvFHa8b7WLpkMCTSKrfxN8lRzk9fw/VfwE=</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140819_123738</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>359aabe1-9a11-4586-a236-a57421f0f941</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d6ca4472-ef35-4da1-9864-de9379f98d85</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00038_Account and User Create with AT 107_UserDelete SecondFull user 111_SUCCESS_P0" searchProperties="true" id="16046f77-c466-42f6-bf34-9f5f7c49defe"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="952c9498-7710-413a-8878-29382abbc008"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="1737d312-c518-481e-91a5-096f7add4678"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AT");

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="c8186926-2ceb-4353-bef8-d16b8cc1615e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFULL" id="a0c75e4d-ea66-4db7-b745-05c82b13b97f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - AdultFULL" id="8af184b2-8b9a-4e18-9b7e-d1af7707f897"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="b5688546-5645-43a6-b119-0f6ad58a8fae"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="4cdb09cb-88d6-4a8d-9a12-e1112dd9b3e6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="2fb9c897-b4dc-4ffd-8b70-8598495d86da"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZZb+o6EH7vr4jSx6uQhC0QFSQaipruELq+HLnOBNwmNsQOS3/9tUNDgdJezpVaIU/GM98s/mZOOEristvhHFJBGNX8bkv/g+pN3EDOq1GPoGFUm1HFaLxibIQ1u9YE3KxbVVvXfM4z8CkXiIqWXrbsqmE1DLs5tOtupeFalZLTrL7o2gOkXJqWKiVL1xZJTLmbu23pWUpdhjjhLkUJcFdgN+hcX7lS00UFJr19skKZO0zbYyEmrmniUggY4hiXMEvME3NL5yTkbkBGFIkshU+fIW/pn3fn83lpXimxdGSWLcsyraYpdUJORsd6+6i4DKFPI7Y6e4gySjCKyQdSoK5BjFmodeIRS4kYJz+Ytk3bUqYNWGAD21V6rJtfDnJ0B1raAplyZPAxsgtjA4ggBYpBux/4Lf34sAqu7g5TRHnE0oTvnP8OEtAZxGwCocGLyAp0h1vck672CWDXpzjOOJnBjWqTCcLAtbsUIrK4Ilw2X8i1vPzagss/UnQZ4L8py4m5iVVCN/dkp0tGwMX/qdlmvVZWHlCcQdv2Zo139pbUGQT9BR0/OSBeH4TnnbNWDmFTeQVqXe7P826zrnvr89LztEu96Kb/4jX4+cvgo9opz7uVpln75/Lx3rtrTF/JyGmW7QdWZ34vqNliEPpv4aPzuHTKQUiWT536++1sGWbp/RF+s2nUf08ugbw8PqOL5/PG7YXAY3SaPnTAql/Xr8hT8O4EPSueDy7fJr3KcFTu3X+YmWX16MVjfzx8Ce7H0/79+VG/iqfnV4/g1+wLrxvJ/37rK6bNGLaFBSUE2esbYFEcVXv4Xa0n64XE7/SiJCQ0olzVnSiO4gKo0NvqlqIWN5MEREJXFnN1lvDPzs469YrXcCTdnZ5ZtYrlNJt2z+rUTr1KwUErFDsQPUYjonwpll31z+8AceJyoCGkxoxleAxc/8ViFwmk+XQgHwejHIZMsvh7JlgF2eG0lkV2WBuxyvKN8dloqms3TNzS27QTCUi3qbu5Rd0DwGRCQPG7anAuO5wLmYspmmUitkszVKKQyQmQKhJ2y9VGzeQkmcSgkJoJC7MYSpPxJM+MyVe/ZQNhnksHZ8P84f0Y1+63IgVSJyRKgatYTkGWEb7NIMetFYH8GHC5vBlwYb6ThUS9L5lPkRK8QrL96atNVH+se0RG9McL/tgF7rX6wde/3zR/AWXu5mPtKJyRDbfFMJXzQbJHu6jmFJWmpWw2y/L6OYoZU2netE3LMQPAmaS35ZC9AzXXJsyDpssa9Y7ntXwbXybGNBBIQCK7TcuPB6wWAXC1WvjymSwO3Vu2XMq8CViIfTIvlhuIQvzrkoJdrPSk+E7+zFkafpVrj60NPzJOuU8IQkfqpObI8oemwEyaJZL4WLppfJ+Bfc63heskr7EI2U2vmYCfv2iK0Vo6wphlVPhdPRdssmyOUywn4H4pfTOTM/nnaF7wH0fz0/VVIPkuQfpal/y3skHydsGgqw0gx9LSF3LTlM7paIPVPwHuJ3bn9Ddi346k/U38XbKR09330P4X</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>00FEEEA63C7B201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA63C7B201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEEA63C87201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEEA63C9D201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_12382</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEEA63C88201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj1VwLgSaqCBRLi3b225Dd1teKuMMxG3iQOwA3V+/dmgoUNrDHgkJeTKe+ebib+aU4yS2/RbnkAmaMq3faehP2IK6BWAZMDZdo2pVXWPkEscg9tgZE7dadyxX1/qc59BnXGAmGrptWlXDPDEsb2DVfOfEN2uVWs0c6tovyLg0LVUqpq4tk5hxv3Db0POM+SnmlPsMJ8B9QfygdX3lS00fl5j05ukKZeEwa0ZCTH2ESCUEAnFMKiRN0Cna0jkNuR/QCcMiz+DNZ8gb+tvdxWJRWTiVNJsg2zRNZHpI6oScTo705rfyMoR9Nk5X5zZmKaMEx/QPVqCuQURpqLXiSZpRESWfmLaQZSrTBiyJQawqO9LRu4MC3YGWtkBmHBs8wlZp7A7GkAEjoN3f9Rv60WEVXN0dZJjxcZolfOf8b5CAzSFOpxAavIysRHe4xT3pap4C8fuMxDmnc7hRbTLFBLj2I4MxXV5RLpsv5FpRfm3J5Y+WXQbkX8pyijaxSuhoT3Y6dAJc/J+abdZrZeUXjnNoLp5n1m33fkSCx+rVgDhTNCDn1chsO91GAWFTeQVqXe63826zrnvr7RInDne7s3p0c997OL686t0vf9qzk8vMWpDhRfL4cjtkqcc6D/z5+PuiPkmWz97wzg7Gzk37fH72+joLzx+zX/PoeP7z22/vuRV4Mzfm0/Pq88Pl4p6kgWgvw5dlv9Pt9Xvf7W5wAVXHsc8sPGx7j93B8evtcDb8MWn3TGfwc9iKXqYhil5evg3C0R/yuzvn+GpkCnSB2ieN95g2Y9gWlpQQ5KNnIKI8qvbod7SerBcWX9OLktDQGBeq/lRxFBfAhN5UtxS1+LkkIBr6spirs2n2ut1uq+a0vY6ku7Ou6Tpm3fOsntlyz9pOyUErFDsQ2ykbU+VLseyqf74GSBKfAwshM+ZpTiLg+hcWO1hgrc/u5ONIGYdBKlncGqW2bZNR6npWrc5pLYqxW6+Dp2s3qbhlt1lrLCDbpm5vi7rvgNApBcXvqsG57HAuZC5meJ6L2KrMcYVBLidApkjYt6snLuI0mcagkKIkDfMYKtNoWmQG8dW/bWDCC+ldd1A8vE/j2v1WpkDqhFQpcBXLGcgywocZVPfdMpBPA7btzYBL8608pOp9yXyKjJIVku1P722i+mPdIzKip3bwZJW41+oHX/94E30BCu3mY+0onNMNt+UwlfNBskezrOYMV2aVfD7Pi/rVFTNm0jyykFlHAZBc0tvrIH0BhtYm0EHTZY16x/Navo0vFxELBBaQyG7TiuMBq0UAXK0WfflMlofuLVsuZd4ELMU+WTuWG4hC/OWSQnyi9KT4h/xbpFn4Xq49tjb8yDjlPiEom6iTmiOvnzQFSaVZKokvzTaN7zOwz/m2cJ3kNRYhu2mUC/j8i6YYraFjQtKciX5HLwSbLFvgFK9T8N+VPpgpmPxtNC/5p6P54foqkHyXYH2tS/9b2aBFuxDQ1QZQYGnoS7lpSudsssHqbwD3E3v97Cti346k+UH8UbKR09330PwL</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"00FEEE6AFDFD300DE05307991F0A1965:C17711F4"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FEEEA63C87201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FEEEA63C9D201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA63C7B201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140819_12385</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140819_12385</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140819_12385</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>AT</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>00FEEEA63C9E201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FEEEA63C9D201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FEEEA63C9D201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj1VwLgSaqCBRLi3b225Dd1teKuMMxG3iQOwA3V+/dmgoUNrDHgkJeTKe+ebib+aU4yS2/RbnkAmaMq3faehP2IK6BWAZMDZdo2pVXWPkEscg9tgZE7dadyxX1/qc59BnXGAmGrptWlXDPDEsb2DVfOfEN2uVWs0c6tovyLg0LVUqpq4tk5hxv3Db0POM+SnmlPsMJ8B9QfygdX3lS00fl5j05ukKZeEwa0ZCTH2ESCUEAnFMKiRN0Cna0jkNuR/QCcMiz+DNZ8gb+tvdxWJRWTiVNJsg2zRNZHpI6oScTo705rfyMoR9Nk5X5zZmKaMEx/QPVqCuQURpqLXiSZpRESWfmLaQZSrTBiyJQawqO9LRu4MC3YGWtkBmHBs8wlZp7A7GkAEjoN3f9Rv60WEVXN0dZJjxcZolfOf8b5CAzSFOpxAavIysRHe4xT3pap4C8fuMxDmnc7hRbTLFBLj2I4MxXV5RLpsv5FpRfm3J5Y+WXQbkX8pyijaxSuhoT3Y6dAJc/J+abdZrZeUXjnNoLp5n1m33fkSCx+rVgDhTNCDn1chsO91GAWFTeQVqXe63826zrnvr7RInDne7s3p0c997OL686t0vf9qzk8vMWpDhRfL4cjtkqcc6D/z5+PuiPkmWz97wzg7Gzk37fH72+joLzx+zX/PoeP7z22/vuRV4Mzfm0/Pq88Pl4p6kgWgvw5dlv9Pt9Xvf7W5wAVXHsc8sPGx7j93B8evtcDb8MWn3TGfwc9iKXqYhil5evg3C0R/yuzvn+GpkCnSB2ieN95g2Y9gWlpQQ5KNnIKI8qvbod7SerBcWX9OLktDQGBeq/lRxFBfAhN5UtxS1+LkkIBr6spirs2n2ut1uq+a0vY6ku7Ou6Tpm3fOsntlyz9pOyUErFDsQ2ykbU+VLseyqf74GSBKfAwshM+ZpTiLg+hcWO1hgrc/u5ONIGYdBKlncGqW2bZNR6npWrc5pLYqxW6+Dp2s3qbhlt1lrLCDbpm5vi7rvgNApBcXvqsG57HAuZC5meJ6L2KrMcYVBLidApkjYt6snLuI0mcagkKIkDfMYKtNoWmQG8dW/bWDCC+ldd1A8vE/j2v1WpkDqhFQpcBXLGcgywocZVPfdMpBPA7btzYBL8608pOp9yXyKjJIVku1P722i+mPdIzKip3bwZJW41+oHX/94E30BCu3mY+0onNMNt+UwlfNBskezrOYMV2aVfD7Pi/rVFTNm0jyykFlHAZBc0tvrIH0BhtYm0EHTZY16x/Navo0vFxELBBaQyG7TiuMBq0UAXK0WfflMlofuLVsuZd4ELMU+WTuWG4hC/OWSQnyi9KT4h/xbpFn4Xq49tjb8yDjlPiEom6iTmiOvnzQFSaVZKokvzTaN7zOwz/m2cJ3kNRYhu2mUC/j8i6YYraFjQtKciX5HLwSbLFvgFK9T8N+VPpgpmPxtNC/5p6P54foqkHyXYH2tS/9b2aBFuxDQ1QZQYGnoS7lpSudsssHqbwD3E3v97Cti346k+UH8UbKR09330PwL</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140819_12385</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00039_Account and User Create with AT 107_UserDelete Standard Youth user111_SUCCESS_P0" searchProperties="true" id="b18c191c-67d6-4eb2-bd81-0ed7300a1d1e"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="2edd93f3-d4bc-4a06-8b7a-c0f92a97ec10"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="68055d58-54e7-4339-ace4-e126d55c561e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AT");

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="c601269a-ef76-42a4-84bb-5fc57d26c39d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUser" id="7bad3783-0a15-4ea7-984f-9c147722072a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - StandardYouthUser" id="7ee0b56e-7eb4-431e-8222-384b002d29f4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="31e52fe6-7dc8-4614-bcfb-761a7265443f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="143e8c34-0afc-4dfd-914e-c8d838b5c230"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="3c7a9be8-4ca5-4eb6-9405-6cab8fea050c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+o6EP5+fkWnfnRKWihoO8IML75U8eUI6pEvTkiXkmubQJMC+utvUiwCopdzZ5hhst3sPrv75ElOBE7ist8UAlJJOTOCTt18Kdv28JjUXGtou2C5tkesoVe2LbdaG2EvdI4wDk0jECKDgAmJmaybZdtxLfvYcry+U/Mrx77jlSq1o4FpPEIqVGjlUrJNY5HETPh52rqZpcznWFDhM5yA8CXxe83rrq88fVxgMhsnS5R5wrQxlnLiI0RKIRCIY1IiPEEnaMPnJBR+j0YMyyyFj5yhqJsfe+fzeWleKfE0QqpWG9keUj6hoNGB2fhVbIYwYCO+XLcx44wSHNN3rEFdgxzz0GjGEU+pHCffhHaQY+vQFiyIRRyXHZjoM0GObs9IGyBTgS0xxk4R7B5GkAIjYDzcB3XzYL8JLvf2U8zEiKeJ2Fr/HSRgM4j5BEJLFJUV6PaPuKNdjRMgfsBInAk6gxtNkwkmIIy7FEZ00aVCkS8URj5+YyHUjxYsA/I3YzlB61gVdLSjOx0agZD/Z2br81pGecRxBo2r8GHcbbXErHp83rlCl868G0R8VHt25/UcwrrzEtRq3B/rbbKuuPWxqRkcDdqHXnyZXAQ1lFLkBYu5M7r7LZpeJeQ98nAb1Zp0OIo7/DJ7EjfRQ/fskojO2TMW6L3ax3D99DuKWuePT79G7uTyfBLdvLLpdfMqCvBza37bD1l3gDJ0dfz4lsrO4eufblqt3s7fBczuwOm37PS09tobdC/mA7d6BbdQnV4t3n9NsYjjlntxOB30emIQvC3s+mdN6zVsGgtJ6GXDf4DIYqnpEXSMMzUvLH+WF22hoTXKXf2J1ighgUmzoXdpafEzJUA09NUwl2vbPjs9Pa017ZZbrdiOc2qrvyPPc87sZtnttAoNWqLYgtjmbER1Lq2yS/78DJAkvgAWQmrNeEbGIMwfInawxEbA7tXh4ExAnysVz94Jd2klS8ocjxe0MsTzqTereqZxw+Utu02bIwnppnJ7G8p9D4ROKGh51/wWiuBCqlZM8SyTsVOa4RKDTF0AqdZgv+weV5GgySQGDRQlPMxiKE3Gk7wxSCz/yxYmIrfen/bzc/dtWdvfig4on5BqB6FraYGaIuy4guyikG8LLpfXCy7CN7OQ6uOl2ilTSpZINj99skTTY0URVdFLu/fiFLhX7ntv/7oT/QAKbfdjlSic0bW0xV2qrgclHo1imlNcmpay2SzL53ekhTFV4ZGD7CPUA5IpdXvr81dgaBUC7XW5rFBvZV7ZN/Flcsx6EktIFNuMfLnHy6IHQr8sAnVKFvs+WzZSqr5JWMhdtnasHiAa8Y9vFOIT7afMd+pvztPPwnfFWsuj6lTPCUlZpFf6Gnn7hhSEq7BU6R5P14PvCrAr+aZx1eQVFqnYNMwkfP/F0IJWNzEhPGMy6Ji5YV1kc5zybQL+p9OXMLmQf9zMC/HtzfznuttTcpdgc+VL/9vZojldCJj6AZBjqZsL9dBUyVm0JuofAL/qerNWabdqimytdV2vttqVVQM3Kml8MX+1rPV0+zw0/gU=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>00FEEEA63CB6201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA63CB6201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEE6A0B453011E05307991F0A24DB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEEA63CDF201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_123818</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEE6A0B463011E05307991F0A24DB</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jS55CEO1FB4roNC92WwG67L5VxhuCSODR2COyvXzsQChR62CMhIU/GM99c/M3cMRT4eavJGESchFSxO3X1dVpEUJvVSlqpgqpa0cib2hRXDG1aK5mV8jRfEd9VxWYsBpsyjiivq3nDLGpGVTNrY7NsFapW3sxVyqXfqvITIiZMC5WcoSrrwKfMSt3W1TiiVogYYRZFATCLY8tpDgeW0LRQhklt3G1Rpg6jxpzzpaXrOOcCBt/HORwG+p1+pHPnMsshHkU8jmDn02V1dXc3SZJcUsiFkafnDcPQjZoudFxGvFu1cZNdBtems3B7biMaUoKRT/4gCWoIfB66StP3wojweXDBtKmbhjStwRpr2CzSW1X/cJCiu9LSEciIIY3NkZkZG8EMIqAYlMnIrqu311Vwe3ccIcpmYRSwk/O/QQK6Aj9cgquxLLIM3fUWz6SrcQfYsin2Y0ZW8CDbZIkwMOUxghlZDwgTzecyJS2/smbiR7IuA/wvZbnTD7EK6PqZ7HSIB4z/n5od1mtr5SfyY2j0S8OHTTR4ro6T1soL2K9+fzD326H3/FJPIRwqb0Hty707nzbrvrd2l4Kk4y5r48QmNHlMgLZeEjIeOv1gMeiFZPVCzXVgo+Cl13MHQ15sTmaTqAv2r5c/5YAgb9Kybbdcfkg23uj+pm/8hqe8N0Wtl8eJg8j9euosmlW9MHLId9OuLtpdtCkOvj+C55Cn1kPBLG38wtK/j+bvE7MV9ad8Pv1Wi8kC1W7eOhPed557xW8L1n9K7r0qrn/EdBjDsTCjBCeevgHm2VG2h91ReqJeiH9NL1JCXG2WqlpLyVGMA+VqQ96S1GLFgoCIa4libs+G0et2u81yod3pCbprdY1SwajUambPaJZa7ULGQVsUJxDbIZ0R6Uuy7LZ/vgaIA4sBdSHSVmGM58DULyx2EEeKTUficYSUwTgULG6WimwxSzbuAhXf4rxbnkLIyuXVm6o8hPwH/RE1ZxyiY+quHVH3CDBZEpD8LhuciQ5nXOTiHa1i7pu5FcpRiMUEiCQJW/litaQzEix9kEj1IHRjH3LL+TLNjM62/3kNYZZKR91x+vAuxnX6LUuB0HGJVGAylhaIMsKZGWRmgVwMOJ8/DDgz34xdIt+XyCePCN4iOf700SayP/Y9IiJ6bTuvZoZ7r3719c839S9A6af52DtyV+TAbTZMxXwQ7NHIqvmOcu+5eLWK0/pVJDNGwrxu6kZFdwDHgt4243ABVN+b0K+aLnvUJ5738mN8MZ9ThyMOgeg2JT1esVo4wORqYYtnsr52bzlyKfLGYc3Pydq+2EAk4i+XFGxhqSfEj+IvCSP3o1xnbB34EXGKfYIT6smTnCObC02BQ2GWCOILo0Pj5wycc34s3Cd5j4WLbprGHC5/USSj1VWEcRhTbnfUVHDIsilOvlmC9aH0yUzK5LvRvGYXR/PzcOAIvguQutcl/62skbRdsFhMhX6Kpa6uxaYpnFPvgNV3AM8Te6v8FbEfR9L4JP4sOcjp6Xto/AU=</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"00FEEE6A224C3013E05307991F0A3D55:F7F18202"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FEEE6A0B453011E05307991F0A24DB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FEEEA63CDF201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA63CB6201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140819_123820</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140819_123820</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140819_123820</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>AT</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>00FEEEA63CE0201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FEEEA63CDF201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FEEEA63CDF201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jS55CEO1FB4roNC92WwG67L5VxhuCSODR2COyvXzsQChR62CMhIU/GM99c/M3cMRT4eavJGESchFSxO3X1dVpEUJvVSlqpgqpa0cib2hRXDG1aK5mV8jRfEd9VxWYsBpsyjiivq3nDLGpGVTNrY7NsFapW3sxVyqXfqvITIiZMC5WcoSrrwKfMSt3W1TiiVogYYRZFATCLY8tpDgeW0LRQhklt3G1Rpg6jxpzzpaXrOOcCBt/HORwG+p1+pHPnMsshHkU8jmDn02V1dXc3SZJcUsiFkafnDcPQjZoudFxGvFu1cZNdBtems3B7biMaUoKRT/4gCWoIfB66StP3wojweXDBtKmbhjStwRpr2CzSW1X/cJCiu9LSEciIIY3NkZkZG8EMIqAYlMnIrqu311Vwe3ccIcpmYRSwk/O/QQK6Aj9cgquxLLIM3fUWz6SrcQfYsin2Y0ZW8CDbZIkwMOUxghlZDwgTzecyJS2/smbiR7IuA/wvZbnTD7EK6PqZ7HSIB4z/n5od1mtr5SfyY2j0S8OHTTR4ro6T1soL2K9+fzD326H3/FJPIRwqb0Hty707nzbrvrd2l4Kk4y5r48QmNHlMgLZeEjIeOv1gMeiFZPVCzXVgo+Cl13MHQ15sTmaTqAv2r5c/5YAgb9Kybbdcfkg23uj+pm/8hqe8N0Wtl8eJg8j9euosmlW9MHLId9OuLtpdtCkOvj+C55Cn1kPBLG38wtK/j+bvE7MV9ad8Pv1Wi8kC1W7eOhPed557xW8L1n9K7r0qrn/EdBjDsTCjBCeevgHm2VG2h91ReqJeiH9NL1JCXG2WqlpLyVGMA+VqQ96S1GLFgoCIa4libs+G0et2u81yod3pCbprdY1SwajUambPaJZa7ULGQVsUJxDbIZ0R6Uuy7LZ/vgaIA4sBdSHSVmGM58DULyx2EEeKTUficYSUwTgULG6WimwxSzbuAhXf4rxbnkLIyuXVm6o8hPwH/RE1ZxyiY+quHVH3CDBZEpD8LhuciQ5nXOTiHa1i7pu5FcpRiMUEiCQJW/litaQzEix9kEj1IHRjH3LL+TLNjM62/3kNYZZKR91x+vAuxnX6LUuB0HGJVGAylhaIMsKZGWRmgVwMOJ8/DDgz34xdIt+XyCePCN4iOf700SayP/Y9IiJ6bTuvZoZ7r3719c839S9A6af52DtyV+TAbTZMxXwQ7NHIqvmOcu+5eLWK0/pVJDNGwrxu6kZFdwDHgt4243ABVN+b0K+aLnvUJ5738mN8MZ9ThyMOgeg2JT1esVo4wORqYYtnsr52bzlyKfLGYc3Pydq+2EAk4i+XFGxhqSfEj+IvCSP3o1xnbB34EXGKfYIT6smTnCObC02BQ2GWCOILo0Pj5wycc34s3Cd5j4WLbprGHC5/USSj1VWEcRhTbnfUVHDIsilOvlmC9aH0yUzK5LvRvGYXR/PzcOAIvguQutcl/62skbRdsFhMhX6Kpa6uxaYpnFPvgNV3AM8Te6v8FbEfR9L4JP4sOcjp6Xto/AU=</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140819_123820</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00041_Account and User Create with DE 107_UserDelete SecondFull user 111_SUCCESS_P0" searchProperties="true" id="1aa1541b-ffb2-463d-aec3-8a3d25cd6cf4"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="db446abd-b6ca-4f33-8954-905c93ffa827"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="49ba8a1f-dcd2-4152-b020-d8a355c0424f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","DE");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="f50f71a0-33c4-4e90-a93c-3c31e8b5721c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFULL" id="9c411daa-ca3f-49f8-86d8-ec7e3bf3cb49"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - AdultFULL" id="8614df5c-c33b-4fae-9cea-941a31261dd5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="7e8bd546-4b67-4001-b4fe-a6f4832e3bfd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="7078f8f2-8d2c-4a30-9df7-4be1ff6cdb16"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="95a97cb9-1760-4c64-87e6-ebeb771ed0b3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4jx3jGxDsCcwQLolTCG0gbZOXjpAXLGrLIMlc8usrmZgAITn0zDDDaL3a/faib/eSoyR2/CbnwARJqRa06/rvio0cd+I4hude1Ixy1akaHnI9Y1x2PaeKKmHFmehawHkGAeUCUVHXHcsuG1bNsL2RXfXdmvyVajX3Sdd+AOPStFQpWbq2TmLK/dxtXc8Y9VPECfcpSoD7AvvDZr/nS00fFZj0xuUWZe6QNSIh5r5p4lIIGOIYl3CamJfmgc5lyP0hmVIkMgYvPkNe11/urlar0sotpWxqOpZlmZZnSp2Qk+lnvfGpuAxhQCfp9txCNKUEo5g8IwWqDyJKQ60ZT1NGRJS8Y9o2bUuZNmCNDWyX6WfdfHWQozvT0gFIxpHBI2QXxu5hAgwoBu3hPqjrn8+r4PbuiCHKJylL+NH53yABXUKcziE0eBFZge58iyfS1bgE7AcUxxknS7hTbTJHGLj2jcGErHuEy+YLuZaXX1tz+SNFlwH+l7JcmvtYJXTzRHbaZApc/J+a7ddra+UHijNowKT1fOe67s3K+Wm6EftV/bpYPvd617WgnkPYV96C2pX75XzcrLveerk06nY2vS8Waje958X191sxu2pFyZ/BQzSAL4+pmM2voti++R7MyIb1J48YPbS89fhq+mV2/fB1icd/rgfI7iROi5qf7h9XFcvus/Ia37SCZPzTWg86lRpv/4qehmmt8kTsW7Kyx5w3mxRnAvrpXVmE40qvz59unkartSWeNt3HblAmnwaud3s3+F79wZZ2NB/MJ0G5/hrTfgyHwoIShtl4BlgUR9UeQVvrynoh8TG9KAkJjUmu6s8VR3EBVOgNdUtRi59JAiKhL4u5PVtWt9PpVJvdjmO7ltXuWBXXuvA8u2s1ba9aKThoi+IIYiulE6J8KZbd9s/HAHHic6AhMGOZZjgCrn9gsY0E0gJ6Lx9HSjmMUsniLFlF5Vk0E4sN2PbmWVTItEZggXTtLhUDOmDNiQB2SN3eAXXfAyZzAorfVYNz2eFcyFws0DITsV1aohKFTE4ApkjYd8q1islJMo9BITWTNMxiKM2jeZ4Zk2//HQNhnkvvO6P84b0b1/G3IgVSJyRKgatYrkCWEU7MIKcI5N2AHWc/4MJ8MwuJel8yn4IRvEVy+Om1TVR/7HpERvS7NfxtF7h36mdff3vT/ACUeZyPnaNwSfbcFsNUzgfJHo2imgtUWpSy5TLL63ehmJFJ86ZtWhfmEHAm6W0zSv8ANXcmzLOmyw71keed/BBfJiI6FEhAIrtNy49nrBZD4Gq1COQzWZ+7txy4lHkTsBanZK1YbiAK8YdLCvax0pPib/JvlbLwtVwnbO35kXHKfUIQOlUnNUc27zQFTqVZIokvZfvGTxk45fxQuEvyDouQ3TSWPP3+F00xWl1HGKcZFUFbzwX7LJvjFJs5+K9Kb8zkTP4ymtf83dH8q98bSr5LkL7TJf+tbJC8XTDoagPIsdT1tdw0pXM63WP1F4CniL3WdCxJ7N4+sTcrbm2XwINIGm/EbyV7OT1+D42/</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>00FEEE6A8A203009E05307991F0AA538</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:00FEEE6A8A203009E05307991F0AA538</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEE6AFE21300DE05307991F0A1965</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEF202EDB300BE05307991F0A2CCC</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_123838</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEE6AFE22300DE05307991F0A1965</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH6vgJECBqCClfNyypS0LlO72ZWWcIXgJThrbfOyvv3ZoKFDay14JCXkynjkzc3zsK44Xkev5nEMqaMyMbqtu/qpVCLjOtGJVHOJapUu7ZmG76FrVgLjB5SQglYpjGl3OJXQZF5iJuunaTsmyq5ZTGzmXXrHqlZyCXbWfTWMMKVehlUvBNo31ImLcy9LWTZkyL8acco/hBXBPEG/o3/U85enhHJPZuNqizBKmjZkQiYcQKQRAIIpIgcQLdIUOfK4C7g1pyLCQKbzmDHjdfN27Wq0Kq2IhTkPk2raN7BpSPgGn4Vez8SXfDEGXTePtuolZzCjBEf2DNag7ELM4MPwojFMqZosPQjvIsXVoC9bEIk6JfTXRW4IM3ZmRDkCmHFt8hp082ACmkAIjYDwOunXz63kT3O4dpZjxaZwu+NH67yABW0IUJxBYPK8sR3d+xBPtalwB8bqMRJLTJdxrmiSYADf6KUzpuke5Il/AjWz8xpqrH81ZBuRvxnKF9rEq6OhEd1o0BC7+z8z257WNMsaRhIbTaZY3d8mgBE170x/8vLjsPQ3WgR/yeT2DsO+8BbUb9+v6mKw7br1uYrObjbO6aY5tqKFNyEbXj53Sj1k7KP7ZoIfZ+rZzAe7o8bkczMo/54Pb6/Gk05Pfx0xRZtgvd7o/R8x9kuLGv3j6wq5XEn8r/abF5Lnk1mq/SxV3CcwfV2Uq8bCcVP/pTRCQ5++303g2bPW7Udi6v2EwDPu3lTkqhnNRndtruBj7X/hjKXySl2RF+dpNk6en/l39rab9Gg6NuSQM5eQ3EJEvNT26LaOj5oXF5/KiLTSwppmrl2iN4gKYMBt6l5YWTyoBooGnhrld23an3e64tttuXRdt+7ptl4t2pVZzOrbvNpvNXIO2KI4gNmM2pTqXVtktfz4HSBYeBxZAai1jSWbAzU8itrDARpcN1OGIGYdRrFT8BUSRL51ITmDjxEVJ+WSyqc3FwjTuY/HAHlJ/KiA9lO7agXQPgNCEgtZ3TXCuGM6F6sULXkoROYUlLjCQ6gZItQh7bqlaRpwukgg0UrSIAxlBIZklWWcQ3/67FiY8sw7ao+zgfVjX8be8BconoNqB61quQY0RTtxBxbyQDwt23f2C8/C+DKg+X6qfIqVki+Tw0xtNND92HFEV/WoOfzk57p372dvf70SfgELH/dglCpZ0L21+mar7QalHI5/mCy68FORyKbP5VbQypio8cpBdQUMgUsnbZhTPgaFdCHTW7bJDfZR5Zz/EJ8WMDQUWsFBsM7LlGU+LIXD9tOiqY7I+991ykFL1TcBanLI1I/UC0Yg/faQQj2g/Ze6rv1WcBm/jOhFrL4+qU70nBGWhXul7ZPMBKUiswlIlfHG6H/xUgFPJD427Ju+wCMWmiRTw8RdDK1rdxITEkoluy8wM+yqb4RSbBLw3p3dhMiV/vZrX/MOr+cddb6j0boHNnS/9b2eLZnQhYOoXQIalbq7VS1MlZ+Geqr8CfCfs7Uu/6ru2EvbavrD75WJ118CDShrvzO8tez09Pg+NfwE=</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"00FEEF202EEF300BE05307991F0A2CCC:5641DB93"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FEEE6AFE21300DE05307991F0A1965</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FEEF202EDB300BE05307991F0A2CCC</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEE6A8A203009E05307991F0AA538</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140819_123840</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140819_123840</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140819_123840</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>DE</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>00FEEF202EDC300BE05307991F0A2CCC</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FEEF202EDB300BE05307991F0A2CCC</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FEEF202EDB300BE05307991F0A2CCC</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH6vgJECBqCClfNyypS0LlO72ZWWcIXgJThrbfOyvv3ZoKFDay14JCXkynjkzc3zsK44Xkev5nEMqaMyMbqtu/qpVCLjOtGJVHOJapUu7ZmG76FrVgLjB5SQglYpjGl3OJXQZF5iJuunaTsmyq5ZTGzmXXrHqlZyCXbWfTWMMKVehlUvBNo31ImLcy9LWTZkyL8acco/hBXBPEG/o3/U85enhHJPZuNqizBKmjZkQiYcQKQRAIIpIgcQLdIUOfK4C7g1pyLCQKbzmDHjdfN27Wq0Kq2IhTkPk2raN7BpSPgGn4Vez8SXfDEGXTePtuolZzCjBEf2DNag7ELM4MPwojFMqZosPQjvIsXVoC9bEIk6JfTXRW4IM3ZmRDkCmHFt8hp082ACmkAIjYDwOunXz63kT3O4dpZjxaZwu+NH67yABW0IUJxBYPK8sR3d+xBPtalwB8bqMRJLTJdxrmiSYADf6KUzpuke5Il/AjWz8xpqrH81ZBuRvxnKF9rEq6OhEd1o0BC7+z8z257WNMsaRhIbTaZY3d8mgBE170x/8vLjsPQ3WgR/yeT2DsO+8BbUb9+v6mKw7br1uYrObjbO6aY5tqKFNyEbXj53Sj1k7KP7ZoIfZ+rZzAe7o8bkczMo/54Pb6/Gk05Pfx0xRZtgvd7o/R8x9kuLGv3j6wq5XEn8r/abF5Lnk1mq/SxV3CcwfV2Uq8bCcVP/pTRCQ5++303g2bPW7Udi6v2EwDPu3lTkqhnNRndtruBj7X/hjKXySl2RF+dpNk6en/l39rab9Gg6NuSQM5eQ3EJEvNT26LaOj5oXF5/KiLTSwppmrl2iN4gKYMBt6l5YWTyoBooGnhrld23an3e64tttuXRdt+7ptl4t2pVZzOrbvNpvNXIO2KI4gNmM2pTqXVtktfz4HSBYeBxZAai1jSWbAzU8itrDARpcN1OGIGYdRrFT8BUSRL51ITmDjxEVJ+WSyqc3FwjTuY/HAHlJ/KiA9lO7agXQPgNCEgtZ3TXCuGM6F6sULXkoROYUlLjCQ6gZItQh7bqlaRpwukgg0UrSIAxlBIZklWWcQ3/67FiY8sw7ao+zgfVjX8be8BconoNqB61quQY0RTtxBxbyQDwt23f2C8/C+DKg+X6qfIqVki+Tw0xtNND92HFEV/WoOfzk57p372dvf70SfgELH/dglCpZ0L21+mar7QalHI5/mCy68FORyKbP5VbQypio8cpBdQUMgUsnbZhTPgaFdCHTW7bJDfZR5Zz/EJ8WMDQUWsFBsM7LlGU+LIXD9tOiqY7I+991ykFL1TcBanLI1I/UC0Yg/faQQj2g/Ze6rv1WcBm/jOhFrL4+qU70nBGWhXul7ZPMBKUiswlIlfHG6H/xUgFPJD427Ju+wCMWmiRTw8RdDK1rdxITEkoluy8wM+yqb4RSbBLw3p3dhMiV/vZrX/MOr+cddb6j0boHNnS/9b2eLZnQhYOoXQIalbq7VS1MlZ+Geqr8CfCfs7Uu/6ru2EvbavrD75WJ118CDShrvzO8tez09Pg+NfwE=</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140819_123840</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00042_Account and User Create with DE 107_UserDelete Standard Youth user111_SUCCESS_P0" searchProperties="true" id="e319e112-bcc7-49cc-8ab6-cda32ba42447"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="0663fecb-021e-4c7e-b2a7-f81471eae822"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="0d882d5a-647b-4198-9506-8ffdb6dc9baa"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","DE");

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="28f0da66-6c04-4714-9f70-4040e73b359c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUser" id="7eef7f68-5b9f-43df-bdc3-b36cd8a14b6f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - StandardYouthUser" id="94fb237b-3a6a-477d-a962-fe7154219c91"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="03282b09-cc51-488f-a306-88b546b37962"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="cb2c8ff8-ce98-48a2-9577-66bc4e54b9ef"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="3d5dbd88-0b96-4703-8b9c-5a90d2b38416"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EH3PV7icxykjm6vtAqo8QGbYDUmWS5KZl5SQ20aJLRNL5pKvX8nEDpDLMltFFaV2q/t099GR2hzHUdX1OIdU0IRpw35Hf2hZjQaxfGy0wMFG3arXDCewA6PewrZJrLoJdkPXhpxnMGRcYCY6etW06oZpG5YztZpuzXFNu1Kr1X7r2i2kXIaWLhVT1zZxxLibp+3oWcrcBHPKXYZj4K4g7sQbXbrS08UFJr3b3qHME6bdhRBLFyFS8YFAFJEKSWLURgc+bZ+7ExoyLLIUXnP6vKO/7l2v15V1rZKkIaqapolMB0kfn9PwXO+eFZvBH7Ig2a17mCWMEhzRF6xAjUAsEl/zojBJqVjEn4S2kGWq0AZsiCE7x8519JYgR3dipAOQKccGX2CrCDaGAFJgBLTZeNjRz0+b4G7vNMWMB0ka86P1n0ECtoIoWYJv8KKyAt3pET9oV7cNxB0yEmWcruBK0WSJCXDtJoWAbi4pl+TzuZaPX9tw+aMFy4D8yVjaaB+rhI4+6E6fhsDF/5nZ/rx2UW5xlEEXbqOfUbBMbPb4OBZzc9WczF9WsYd/mZ0cwr7zDlQ57tf1MVlLbr1uYojWsxjVghqw+rT5c1DbjEeX95vm3NlYjQXDl2yL7oIbtgjr29FvezZsedmPf8iEk9n94HHkefx6nprOpDcKz5zLrT2yW7NWIvzZ0+r71d36B6bxt2dhX7xc8OBvR/zlb2IWWZAFjSFr1sbeU/UXH62cu+p0+hI2p040nt9ERDydTcNmb+ZY108M1e/rg/k3Ynfeatqv4dBYSMIkmz8CEcVS0WPY1y7kvLD4Wl6UhfpGkLu6S6VRXAATelftUtLiZlKAqO/KYe7WpnkxGAw8p9kYNKTctQZmo2a2HMe6ML1mw7EKDdqhOILYS1hAVS6lsjv+fA2QxC4H5kNqrJKMLIDrX0TsY4G1IRvLw5EwDtNEqniYmtXtthqum0ts4UcnCxdRkzkQ6tpVIq7ZdeoFAtJD6XYOpHsMhC4pKH1XBOeS4VzIXjzjVSYiq7LCFQaZvAFSJcJutW43EKfxMgKFFMWJn0VQWS6WeWcQ3/1XDUx4bh0PpvnB+7Su429FC6SPT5UDV7V8BzlGeHcH2W6jKOTTgqvV/YKL8F7mU3W+ZD9FSskOyeGnN5oofpQckRU99CYPJRdK95O3v9+JvgCFjvtRJvJXdC9tcZnK+0GqR7eY5jOuPFey1SrL59dSypjK8MhCZgtNgGRS3rbT5AkYKkOgk26XEvVR5tJ+iC8TCzYRWEAs2ablyxOeFhPg6mkxlMdkc+q75SCl7JuAjfjI1ovkC0Qh/vKRQlyi/KT5Rv6tk9R/G9cHsfbyyDrle0JQFqqVuke2n5CCJDIslcKXpPvBPwrwUfJDY9nkEouQbJpnAj7/oilF6+iYkCRjYtjXc8O+yuY4xXYJ7pvTuzC5kr9ezRv+6dV8P7qcSL2LsV760v92NmhOFwK6egHkWDr6Rr40ZXIW7qn6K8B3wn5h9fqe16odCbvV71fLBh5U0n1nfm/Z6+nxeej+Cw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>00FEEF1CDAA73017E05307991F0A1DD2</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:00FEEF1CDAA73017E05307991F0A1DD2</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEEA965E52017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEF58821B2FA5E05305991F0AA605</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_12397</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEEA965E62017E05307991F0A6591</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4j4yxZDDGnsCME0LHt2mTGzukyUtHkWVQY0vEkoH011cyMQFCcumdYYbRerV79kNn90SgIneCUAhSSsqZEY0G5k8XpF4PeNDKfAKtbrfTs3yv41n9LPMciD3U62emEQlRkYgJiZgcmA6AXQv0LegnsBd0/ADCNoD9e9OYkFIo00qlDUxjVeRMBLXbgVmVLOBIUBEwVBARSBzE4beLQGkGqMFkDk/WKGuH5XAm5TywbdxOCSZ5jtuYF/aJvaNzkoogplOGZFWSF5+pGJgvd5fLZXvZafNyajsAABv4ttJJBZ1+NoefmsskjVjG1+czxDijGOX0N9KgvhE546kR5lNeUjkr3jENbQi0aYussIVhl3027VcHNbojLe2ALAWyxAzBxtg1yUhJGCbGzXU0MD8fV8H13aRETGS8LMTe+e8gEbYgOZ+T1BJNZA264y0eSNfwhOAgYjivBF2Q77pN5ggTYVyVJKOrCypU86XCqMtvrIT60abLCP6bspzY21gVdPtAdkZ0SoT8PzXbrtfaygTlFRnO2I0T/b4sxr9ieRvRVgv+nszR1dJ75oMawrbyGtSm3C/n/Wbd9NbLpVUncX+MR248g/5oErZuHwv77rnr97KnRH6fzi5El1yOkP9PwW9zPw4LfF/cu9270/uZ77r4Jp53RZGdVpgvv35Kkm6vaN1+dUKGcO9u8UtE/6bj8wk9FQ/5xcXtj4c7BoiLE2eKel/Ss+QOtJ4fTpOrvHU9ATRcPAJRtDq309j58mnEJlfATu5Z6+ZmFvlfvPPu4DWm7Rh2hQ0lxNXDL4Jlc9TtEY2MsaoXkh/Ti5bQ1Mpq1WCuOUpIwqQ51Lc0tQSVIiCaBqqY6zMA4/PzsdvvO/DUGYfuOXA7wPV9OAZh2ANuw0FrFHsQzzjLqPalWXbdPx8DxEUgCEtJaS14hWdEmB9YHCGJjIhdq8fBmSAJVyzOHyFzSwfm6cJdoSp3UQWYL1LT+M7lJbssw0yScpe5/R3mviaYzinR9K77W6gGF1Kl4gktKpnD9gK1GanUACg1BwdOt+/aghbznGigdsHTKift+WxeJ8YW63/HQljU0uvzpH5374a1/63JgNJJqVYQOpZToqpIDowg0ATybsCOsx1wYz6sUqqfl0qnLCleI9n99Noluj02LaIi+nkW/4QN7o360dff3rQ/AGXv52PjKF3QLbfNLFXjQZHHsKnmE2o/tavFoqrr52liLJV5G9rAs2OCK8Vuzwl/JMzemLCPGi4b1HueN/JdfJWcsVgiSQrVbUZ9PGKziInQm0WkXsnq2LVlx6XKmyQreUh2lqsFRCP+cEfBAdZ6Snyl/pa8TF/LdcDWlh8Vp1onJGVTfdJj5PmdpsBcmaWK93i5bfyQgUPOd4WbJG+wSNVND5Uk738xNKENTIQxr5iMRmYt2CbZGqd8npPgVemNmZrIXybzSrw7mX98u4gV3RXI3OjS/1a2aN0umJh6AaixDMyVWjSVczbdIvUXgG95HZ6NwtDrAOjVvO6teR2ORs4mgTuRDN+I30q2crr/HoZ/AA==</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"00FEEEA983A22019E05307991F0A80D6:18FE3E59"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FEEEA965E52017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FEEF58821B2FA5E05305991F0AA605</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEF1CDAA73017E05307991F0A1DD2</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140819_12399</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140819_12399</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140819_12399</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>DE</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>00FEEF58821C2FA5E05305991F0AA605</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FEEF58821B2FA5E05305991F0AA605</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FEEF58821B2FA5E05305991F0AA605</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4j4yxZDDGnsCME0LHt2mTGzukyUtHkWVQY0vEkoH011cyMQFCcumdYYbRerV79kNn90SgIneCUAhSSsqZEY0G5k8XpF4PeNDKfAKtbrfTs3yv41n9LPMciD3U62emEQlRkYgJiZgcmA6AXQv0LegnsBd0/ADCNoD9e9OYkFIo00qlDUxjVeRMBLXbgVmVLOBIUBEwVBARSBzE4beLQGkGqMFkDk/WKGuH5XAm5TywbdxOCSZ5jtuYF/aJvaNzkoogplOGZFWSF5+pGJgvd5fLZXvZafNyajsAABv4ttJJBZ1+NoefmsskjVjG1+czxDijGOX0N9KgvhE546kR5lNeUjkr3jENbQi0aYussIVhl3027VcHNbojLe2ALAWyxAzBxtg1yUhJGCbGzXU0MD8fV8H13aRETGS8LMTe+e8gEbYgOZ+T1BJNZA264y0eSNfwhOAgYjivBF2Q77pN5ggTYVyVJKOrCypU86XCqMtvrIT60abLCP6bspzY21gVdPtAdkZ0SoT8PzXbrtfaygTlFRnO2I0T/b4sxr9ieRvRVgv+nszR1dJ75oMawrbyGtSm3C/n/Wbd9NbLpVUncX+MR248g/5oErZuHwv77rnr97KnRH6fzi5El1yOkP9PwW9zPw4LfF/cu9270/uZ77r4Jp53RZGdVpgvv35Kkm6vaN1+dUKGcO9u8UtE/6bj8wk9FQ/5xcXtj4c7BoiLE2eKel/Ss+QOtJ4fTpOrvHU9ATRcPAJRtDq309j58mnEJlfATu5Z6+ZmFvlfvPPu4DWm7Rh2hQ0lxNXDL4Jlc9TtEY2MsaoXkh/Ti5bQ1Mpq1WCuOUpIwqQ51Lc0tQSVIiCaBqqY6zMA4/PzsdvvO/DUGYfuOXA7wPV9OAZh2ANuw0FrFHsQzzjLqPalWXbdPx8DxEUgCEtJaS14hWdEmB9YHCGJjIhdq8fBmSAJVyzOHyFzSwfm6cJdoSp3UQWYL1LT+M7lJbssw0yScpe5/R3mviaYzinR9K77W6gGF1Kl4gktKpnD9gK1GanUACg1BwdOt+/aghbznGigdsHTKift+WxeJ8YW63/HQljU0uvzpH5374a1/63JgNJJqVYQOpZToqpIDowg0ATybsCOsx1wYz6sUqqfl0qnLCleI9n99Noluj02LaIi+nkW/4QN7o360dff3rQ/AGXv52PjKF3QLbfNLFXjQZHHsKnmE2o/tavFoqrr52liLJV5G9rAs2OCK8Vuzwl/JMzemLCPGi4b1HueN/JdfJWcsVgiSQrVbUZ9PGKziInQm0WkXsnq2LVlx6XKmyQreUh2lqsFRCP+cEfBAdZ6Snyl/pa8TF/LdcDWlh8Vp1onJGVTfdJj5PmdpsBcmaWK93i5bfyQgUPOd4WbJG+wSNVND5Uk738xNKENTIQxr5iMRmYt2CbZGqd8npPgVemNmZrIXybzSrw7mX98u4gV3RXI3OjS/1a2aN0umJh6AaixDMyVWjSVczbdIvUXgG95HZ6NwtDrAOjVvO6teR2ORs4mgTuRDN+I30q2crr/HoZ/AA==</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140819_12399</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00044_Account and User Create with CH 107_UserDelete SecondFull user 111_SUCCESS_P0" searchProperties="true" id="92097b97-70a6-46a7-aede-82f46e3bd749"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="a57df678-b684-4be0-a013-7c3eed4ad753"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="8d4d18c3-ba66-4a3c-89a2-f3730e60544e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CH");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="c97a6d09-762f-467d-a3e6-c53712062ea0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFULL" id="3236b0b9-704b-471b-91a5-79a87fd98b33"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - AdultFULL" id="09581cfa-4cec-474f-a2bf-9159de4c16cc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="5c85f34a-6c9f-454d-ad6c-9347c71cb709"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="ae25cc23-2322-48b6-a64a-4c0ea2c27911"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="a1e06f90-bb81-4b37-ad35-4618a20a7d33"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0Tp41ZwEq6JChIl0GYXWgqcquVlyzgOmCYOxA63rz92IBQo9LCPhIQ8Gc+suXjN3DEYBqZdZwzHnERUcZ2q+gcWRqaO/IJWqGBPK5RLI61S9EpauWRYyM8bVhFaquIylmCXMg4pr6qmbhQ0vaIZ1sAo2XnLLhi5imkMVeUNx0yYFio5XVVWYUCZnbqtqklM7QgywmwKQ8xsjux+vdO2haYNM0xq7W6LMnUY1yacz2wAUM7DCAcByqEoBHfgSOfOY3afjCnkSYx3Pj1WVXd3l8tlbpnPRfEYmLquA90CQsdjZHyr1m6yy9hzqR9tzw1II0oQDMgGSlAdzCeRp9SDcRQTPgkvmDaAoUvTGl4hDRkFequCLwcpuistHYGMGdTYBBqZsR72cYwpwso/Pbeq3l5Xwe3dQQwp86M4ZCfnv4OE6QIH0Ux4Y1lkGbrrLZ5JV+0OI9ulKEgYWeBn2SYziDBTujH2yapNmGg+jylp+ZUVEz+SdRlGf1OWO3CIVUAHZ7LjkDFm/P/U7LBeWytvMEhwbfNafpwsR+vQr/iDudNt9+4fnMZ4031j1RTCofIW1L7cu/Nps+57a3epNQrFo3zzh79eenw9NOhw3WpYre7HBn6gh3zlfUyexvzZ6tafTC+alkDFWOqV9nQz9T777x8JZOOHxsu8+Ird7s2s9/vNA8aqnDxa7+jpufHLWU2Li2H3nZbXYKMPu8BdfQKz29q4YLpo8Q82aHcS63WwgsPRMpg/LD9pNPg9LT42bx7n94VZf4mLbqc4mTS9oNSpfsV0GMOxMKOEfjKaYsSzo2wP11Faol6Q/0wvUkI8zU9V7ZnkKMYx5WpN3pLUYieCgIhni2Juz7reajabdauSd5qC7qymXszrZcsyWnq9ojuljIO2KE4gNiLqE+lLsuy2f34GiEKbYerhWFtECZpgpv5g0YEcKi7ticcRUYYHkWDxuGKV4cwyi0Jl4hUDZoXlwsQXzP0c8Rf6Etd9juNj5raOmLuHEZkRLOld9jcTDc64SMUcLhIeGLkFzFGciAEQSw62zUKlCBgJZwGWQEEYeUmAc7PJLE0MYNt/U4OIpdJec5C+u4thnX7LMiB0PCIVmIzlHosq4jMjKJ8FcjFg0zwMODNfTzwin5dIJ48J2iI5/vTVJbI99i0iIvrT6P8xMtx79auvf78JfgAFTvOxd+QtyIHbbJaK8SDIo5ZVcw5z81yyWCRp/cqSGGNhHhhAL4M+Rolgt/Ug+sQU7E2Aq4bLHvWJ5738GF/CJ7TPIceh6DYlPV6xWfQxk5uFK17J6tq15cilyBvHK35O1gjEAiIR/7ijIBtJPSHuir9lFHtf5Tpj68CPiFOsE5zQsTzJMbK+0BQoEmaJ4L0oPjR+zsA558fCfZL3WLjoplHC8eUviiS0qgoRihLKXUdNBYckm+Lk6xm2v5S+mUmJfDeZV+ziZH7vtPuC7kKo7nXJfytrJG0XhFW5AKRYqupKLJrCOR0fkPoO4DdebxkNp37fyOtG+ZDXDccx9wk8iqT2TfxdcpDT0/dQ+xc=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>00FEEF1CDABC3017E05307991F0A1DD2</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:00FEEF1CDABC3017E05307991F0A1DD2</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEEA983DE2019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEF5882392FA5E05305991F0AA605</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_123941</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEEA983DF2019E05307991F0A80D6</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+o6EP7ur+jUj05JW1oKHWGmAnrKAfWAetUvTkhTiLYpNGmt/vqbFIuA6OXcGWaYbDe7z77k2T1lMI5M12MMp5wkVPF7bfXJbDWgUzdCrYEbgWYZhqVN69OW5lg2RI4D7bCJVMVnLMM+ZRxS3lZNXWjpTc1o3RgNt95yLatWN+1HVbnDKROmhUpNV5UijihzS7dtNUupm0BGmEthjJnLkTvxRkNXaLqwwqR2TlcoS4dpZ875wgUA1QKMcBShGkpicAq2dE4D5k7IjEKepfjDZ8Da6sfd19fX2mu9lqQzYOq6DvQWEDoBI7NjtXNUXcaBT8Nkde5CmlCCYETeoQQ1wnyeBIoXzZKU8Hn8jWkDGLo0reECaciw6LEKPh2U6A60tAUyZVBjc2hUxsY4xCmmCCu3Y7+tHh9WwdXdmxRSFiZpzHbOfwcJ0xxHyQIHGqsiq9AdbnFPujqnGLk+RVHGSI4vZZssIMJMuU5xSIohYaL5AqaU5VcKJn6k6jKM/qYsp2ATq4AO9mSnR2aY8f9Ts816razcwSjDnX/uo9HjwPL1wch56Eb0l32G7hzPNghrlxA2lVeg1uX+OO8267q3Pi4V3HocPDdG74MLKzF+xZNb2ssvnzG2HwZT4oTBM+jq3CvGpH/lvzw0Cti7frf8+3dn4gyjB4vMpvPunxN6Pur9PnqLrpeFDez7YMLhEniDIpm8jK9p2rLn19bwyiTTSwsMfp+cNJfjd2R6F8Ng/vpyC+5mXew9xGGQ9y+jKA9bhnf0x7O7v0Aren7rPTgXfHLW7bc/Y9qMYVtYUcIkmz5jxKujbA+/p5yLekH+M71ICQm0sFR1F5KjGMeUqx15S1KLmwkCIoErirk66/p5v39uN5tmvWWee3Zft+u63WoZ57rnNXS74qAVih2I3YSGRPqSLLvqn58BothlmAY41fIkQ3PM1B8s9iCHik/H4nEklOGbRLC4QxYxcfR8GjaQkbNs1ozn0yV6b6jKZcKv6FXqhRyn29Td2qLuMUZkQbDkd9ngTHQ44yIXS5hnPDJqOaxRnIkJkEoSdk2raQNG4kWEJVIQJ0EW4dpivigzA9jq39QgYqV03L8pH963ce1+q1IgdAIiFZiM5QyLMuI9M6heBfJtwKa5GXBl3ssCIt+XyCdPCVoh2f702SayP9Y9IiJ66k6ejAr3Wv3g619vgh9Agd18rB0FOdlwWw1TMR8Ee3Sqai5hbVnL8jwr6+dIZkyFeWAA3QETjDJBb283yQumYG0CHDRd1qh3PK/l2/gyPqeCTziORbcp5fGA1WKCmVwtfPFMikP3li2XIm8cF3yfrBuJDUQi/nFJQS6SekJ8Lf5ekzT4LNceWxt+RJxin+CEzuRJzpG3b5oCJcIsEcSXpJvG9xnY53xbuE7yGgsX3TTNOP7+iyIZra1ChJKMcr+nloJNli1x8rcFdj+VvpgpmfxjNBfs29F8PxpOBN/FUF3rkv9W1kjZLgircgMosbTVQmyawjmdbbD6B8CvxG50e95Zt64bTknszorYjV7PXCdwK5LOF/FXyUZOd99D518=</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"00FEEEA9662A2017E05307991F0A6591:395B07C3"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FEEEA983DE2019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FEEF5882392FA5E05305991F0AA605</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEF1CDABC3017E05307991F0A1DD2</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140819_123943</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140819_123943</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140819_123943</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>CH</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>00FEEF58823A2FA5E05305991F0AA605</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FEEF5882392FA5E05305991F0AA605</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FEEF5882392FA5E05305991F0AA605</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZtU+o6EP7ur+jUj05JW1oKHWGmAnrKAfWAetUvTkhTiLYpNGmt/vqbFIuA6OXcGWaYbDe7z77k2T1lMI5M12MMp5wkVPF7bfXJbDWgUzdCrYEbgWYZhqVN69OW5lg2RI4D7bCJVMVnLMM+ZRxS3lZNXWjpTc1o3RgNt95yLatWN+1HVbnDKROmhUpNV5UijihzS7dtNUupm0BGmEthjJnLkTvxRkNXaLqwwqR2TlcoS4dpZ875wgUA1QKMcBShGkpicAq2dE4D5k7IjEKepfjDZ8Da6sfd19fX2mu9lqQzYOq6DvQWEDoBI7NjtXNUXcaBT8Nkde5CmlCCYETeoQQ1wnyeBIoXzZKU8Hn8jWkDGLo0reECaciw6LEKPh2U6A60tAUyZVBjc2hUxsY4xCmmCCu3Y7+tHh9WwdXdmxRSFiZpzHbOfwcJ0xxHyQIHGqsiq9AdbnFPujqnGLk+RVHGSI4vZZssIMJMuU5xSIohYaL5AqaU5VcKJn6k6jKM/qYsp2ATq4AO9mSnR2aY8f9Ts816razcwSjDnX/uo9HjwPL1wch56Eb0l32G7hzPNghrlxA2lVeg1uX+OO8267q3Pi4V3HocPDdG74MLKzF+xZNb2ssvnzG2HwZT4oTBM+jq3CvGpH/lvzw0Cti7frf8+3dn4gyjB4vMpvPunxN6Pur9PnqLrpeFDez7YMLhEniDIpm8jK9p2rLn19bwyiTTSwsMfp+cNJfjd2R6F8Ng/vpyC+5mXew9xGGQ9y+jKA9bhnf0x7O7v0Aren7rPTgXfHLW7bc/Y9qMYVtYUcIkmz5jxKujbA+/p5yLekH+M71ICQm0sFR1F5KjGMeUqx15S1KLmwkCIoErirk66/p5v39uN5tmvWWee3Zft+u63WoZ57rnNXS74qAVih2I3YSGRPqSLLvqn58BothlmAY41fIkQ3PM1B8s9iCHik/H4nEklOGbRLC4QxYxcfR8GjaQkbNs1ozn0yV6b6jKZcKv6FXqhRyn29Td2qLuMUZkQbDkd9ngTHQ44yIXS5hnPDJqOaxRnIkJkEoSdk2raQNG4kWEJVIQJ0EW4dpivigzA9jq39QgYqV03L8pH963ce1+q1IgdAIiFZiM5QyLMuI9M6heBfJtwKa5GXBl3ssCIt+XyCdPCVoh2f702SayP9Y9IiJ66k6ejAr3Wv3g619vgh9Agd18rB0FOdlwWw1TMR8Ee3Sqai5hbVnL8jwr6+dIZkyFeWAA3QETjDJBb283yQumYG0CHDRd1qh3PK/l2/gyPqeCTziORbcp5fGA1WKCmVwtfPFMikP3li2XIm8cF3yfrBuJDUQi/nFJQS6SekJ8Lf5ekzT4LNceWxt+RJxin+CEzuRJzpG3b5oCJcIsEcSXpJvG9xnY53xbuE7yGgsX3TTNOP7+iyIZra1ChJKMcr+nloJNli1x8rcFdj+VvpgpmfxjNBfs29F8PxpOBN/FUF3rkv9W1kjZLgircgMosbTVQmyawjmdbbD6B8CvxG50e95Zt64bTknszorYjV7PXCdwK5LOF/FXyUZOd99D518=</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140819_123943</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00045_Account and User Create with CH 107_UserDelete Standard Youth user111_SUCCESS_P0" searchProperties="true" id="e2960eae-fb08-4a4d-a14a-732b1566740e"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="8cc7f07b-3ccf-46bf-a12c-d9e6c9f5bfed"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="c14c749f-dec3-4117-bad6-42a358049b3c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CH");

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="bcb04d59-e304-4ee3-89fd-50e49d7167c8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUser" id="20a35839-ece3-476a-99bd-6b48e9bd1c83"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - StandardYouthUser" id="aa27810e-a715-48bf-ac29-4ac6d44f2695"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="4506e2ba-8cb3-47d1-a69b-034515da6bb7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="10349554-9016-4d8e-9781-08fcc503bac5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="e87d9a09-ab57-413d-9dcc-fd8ca384b189"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0Tp41HIhWuigkRJ2aWl7S7Q60tlnAl4k9hp7ADt1x87NBQo7WEfCQl5Mp5ZM7O87BOO4sjx2pxDKgijWs9v6i9OrTyu1B3HqMHYMiqu2zCQVXMN5AbleuA4FVQLda3HeQY9ygWioqk7ll0xrIZhuyO75pVdr1or1Zzys67dQ8plaOlSsnRtGUeUe3napp6l1GOIE+5RFAP3BPaG7au+Jz09VGDSWycrlHnCtDUVIvFME5cCwBBFuIRZbJ6YWz4nAfeGZEKRyFL4yBnwpv6xd7FYlBblEksnpmNZlmm5pvQJOJkc662jYjMEPRqy1bqDKKMEo4i8IwXqCsSUBVo7mrCUiGn8TWjbtC0V2oAlNrBdoce6+ZkgR3dgpC2QKUcGnyK7CDaAEFKgGLS7Qa+pHx82wdXeUYooD1ka853130ECOoeIJRAYvKisQHd4xD3tap0A9noURxknc7hWNEkQBq79TiEkyz7hknwB1/Lxa0suf6RgGeC/GcuJuYlVQjf3dMcnE+Di/8xsc16rKPcoyqA1DO7K4Pbgl1lb+M59vVpz/OErC0m10cwhbDqvQK3H/bHeJeuaWx+bRlkFhfd2fxYOYkovKHmE82hRmQxmiYWvbJok6buPWf9tNkpGV+ZlFDUe/7h3D93RaXxxziF6Cp7P389R+H7vH1nzqO5eVGb/xJd1Vq1m5sXjVf8peBjcOrxxNb5MpufthAyurYfFLz6NajMrrAa9uNt1n26GtjWzL8CakH7tzcb1o8XtmJ0908HlY+SjX50lm942P2varGHbWEjCMBv/ASyKpaJHz9e6cl5I/CwvykICI8xdvURpFBdAhd5Su5S0eJkUIBJ4cpirtWV1z866dsdv+52yZdfPrGrZqruu3bXatu87hQatUOxA7DAaEpVLqeyKPz8DxLHHgQaQGnOW4Slw/YeIPhJI69GBPByMchgxqeJA0DgIZ3bjrV63ceX9dTl5T6uWAF27ZuKG3qTtUEC6Ld3ulnQPAJOEgNJ3RXAuGc6F7MUrmmcisktzVKKQyRsgVSLsOZVG1eQkTiJQSM2YBVkEpWSa5J0x+erfMRDmuXVwNsoP3rd17X4rWiB9AqIcuKrlFOQYYc8dVCkK+bZgx9ksuAjfzgKizpfsp0gJXiHZ/vRJE8WPNUdkRS+d4Ytd4F67H7z9607zB1Dmbj/WiYI52UhbXKbyfpDq0Sqm+YpKr6VsPs/y+dWVMqYyvGmbVt0cAs6kvL2N2AyouQ5hHnS7rFHvZF7bt/FlYkqHAgmIJdu0fHnA02IIXD0tevKYLA99t2yllH0TsBT7bJ1IvkAU4h8fKdjDyk+af8u/BUuDz3HtibWRR9Yp3xOC0IlaqXvk7RtSYCbDEil8LN0Mvi/AvuTbxnWT11iEZNM4E/D9F00pWlNHGLOMip6v54ZNlc1xircEvE+nL2FyJf+4mpf826tZXidDqXcx0te+5L+dDZLTBUt1k/45lqa+lC9NmZxONlT9A+AXYT9r18p+tSHJdrop7NXTTnndwK1KWl/MXy0bPd09D61/AQ==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>00FEEEA63D58201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA63D58201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEF1CDADC3017E05307991F0A1DD2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEEA63D6A201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_123955</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEF1CDADD3017E05307991F0A1DD2</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZrc7I6EP7eX8HQjx0EFC8w1Rlr1dKjvWlvfunEsGreQrAkgPbXnwSLVWs9vmfGGSfLZvfZS57dc4YCv+g0GYOIk5Aq7mVdfUNGuWZWLVvDtWpJs2A80WqeWdUQYLsyscflEiqqistYDC5lHFFeV4uGaWlGTTPtoVlxSrZTrhVqVmmkKk8QMWFaqBQMVVkEPmVO5rauxhF1QsQIcygKgDkcO4Nmv+cITQflmNTG+Qpl5jBqzDifO7qOCx5g8H1cwGGgn+tbOucecwZkShGPI/jy6bG6+nU3TdNCWiqE0VQvGoahG7YudDxGpqdq4yS/DJ5LJ+Hq3EI0pAQjn3wiCaoPfBZ6StOfhhHhs+AX06ZuGtK0BgusYdOip6r+7SBDd6SlLZARQxqbITM39gATiIBiUB4f3Lp6elwFV3eHEaJsEkYB2zn/HSSgCfjhHDyN5ZHl6I63uCddjXPAjkuxHzOSwI1skznCwJS7CCZk0SNMNJ/HlKz8yoKJH8m7DPDflOVc38QqoOt7snNJpsD4/6nZZr1WVp6QH0Pj07rqe2fJ3WMyvE09PL+Pr7vYs+zPkVXPIGwqr0Cty/113m3WdW99XZq8lCrm69jr9m9Y7TUYdNNa//bzMbifJSW/mnborLV8Kg6vou7o/axVvfFje/zqXifPV31yvby7f2mO48/b9/SMVPon6KJXvVr0XD/yAwhLvT9oyYPOcNrk1eXVMm6V20nruhZz3/VFONB9nhQf/mk/vQ7T5wpqz0Z89jpgHTf1K3Z68ljsdbtXHVwziiSajujovl//jmkzhm1hTgmDePwHMM+Psj3cS6Uj6oX4YXqREuJpk0zVmUuOYhwoVxvylqQWJxYERDxHFHN1NoxOu91uVkqXlaagu4u2US4ZVds2O0azfNEq5Ry0QrEDsRXSCZG+JMuu+ucwQBw4DKgHkZaEMZ4BUw9YvEQcKS59EI8jpAyGoWBxszK3vZiVcWyVib/EbGGmPEktS1VuQn5Lb6PmhEO0Td32FnU/ACZzApLfZYMz0eGMi1x8oEQU2CwkqEAhFhMgkiTsFK1aWWckmPsgkepB6MU+FOazeZYZna3+ixrCLJM+tIfZw/s1rt1veQqEjkekApOxXIAoI+yZQVYeyK8BF4ubAefmm7FH5PsS+eQRwSsk25++20T2x7pHRERvrcGbmeNeqx99/edN/QAofTcfa0deQjbc5sNUzAfBHo28mh+o8FGIkyTO6leVzBgJ87qpG1V9ADgW9LYchu9A9bUJ/ajpska943kt38YX8xkdcMQhEN2mZMcjVosBMLlauOKZLI7dW7ZcirxxWPB9spYvNhCJ+OCSgh0s9YT4TvylYeR9l2uPrQ0/Ik6xT3BCp/Ik58jyl6bAoTBLBPGF0abxfQb2Od8WrpO8xsJFN41jDr9/USSj1VWEcRhT7l6qmWCTZTOcfDkH51vph5mMyb9G84L9Oppf+r2B4LsAqWtd8t/KGsnaBYMqN4AMS11diE1TOKfTDVb/Arif2Mu1Q8S+HUnjh/inZCOnu++h8S8=</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"00FEEEA966362017E05307991F0A6591:582F86DC"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FEEF1CDADC3017E05307991F0A1DD2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FEEEA63D6A201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA63D58201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140819_123958</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140819_123958</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140819_123958</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>CH</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>00FEEEA63D6B201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FEEEA63D6A201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FEEEA63D6A201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZrc7I6EP7eX8HQjx0EFC8w1Rlr1dKjvWlvfunEsGreQrAkgPbXnwSLVWs9vmfGGSfLZvfZS57dc4YCv+g0GYOIk5Aq7mVdfUNGuWZWLVvDtWpJs2A80WqeWdUQYLsyscflEiqqistYDC5lHFFeV4uGaWlGTTPtoVlxSrZTrhVqVmmkKk8QMWFaqBQMVVkEPmVO5rauxhF1QsQIcygKgDkcO4Nmv+cITQflmNTG+Qpl5jBqzDifO7qOCx5g8H1cwGGgn+tbOucecwZkShGPI/jy6bG6+nU3TdNCWiqE0VQvGoahG7YudDxGpqdq4yS/DJ5LJ+Hq3EI0pAQjn3wiCaoPfBZ6StOfhhHhs+AX06ZuGtK0BgusYdOip6r+7SBDd6SlLZARQxqbITM39gATiIBiUB4f3Lp6elwFV3eHEaJsEkYB2zn/HSSgCfjhHDyN5ZHl6I63uCddjXPAjkuxHzOSwI1skznCwJS7CCZk0SNMNJ/HlKz8yoKJH8m7DPDflOVc38QqoOt7snNJpsD4/6nZZr1WVp6QH0Pj07rqe2fJ3WMyvE09PL+Pr7vYs+zPkVXPIGwqr0Cty/113m3WdW99XZq8lCrm69jr9m9Y7TUYdNNa//bzMbifJSW/mnborLV8Kg6vou7o/axVvfFje/zqXifPV31yvby7f2mO48/b9/SMVPon6KJXvVr0XD/yAwhLvT9oyYPOcNrk1eXVMm6V20nruhZz3/VFONB9nhQf/mk/vQ7T5wpqz0Z89jpgHTf1K3Z68ljsdbtXHVwziiSajujovl//jmkzhm1hTgmDePwHMM+Psj3cS6Uj6oX4YXqREuJpk0zVmUuOYhwoVxvylqQWJxYERDxHFHN1NoxOu91uVkqXlaagu4u2US4ZVds2O0azfNEq5Ry0QrEDsRXSCZG+JMuu+ucwQBw4DKgHkZaEMZ4BUw9YvEQcKS59EI8jpAyGoWBxszK3vZiVcWyVib/EbGGmPEktS1VuQn5Lb6PmhEO0Td32FnU/ACZzApLfZYMz0eGMi1x8oEQU2CwkqEAhFhMgkiTsFK1aWWckmPsgkepB6MU+FOazeZYZna3+ixrCLJM+tIfZw/s1rt1veQqEjkekApOxXIAoI+yZQVYeyK8BF4ubAefmm7FH5PsS+eQRwSsk25++20T2x7pHRERvrcGbmeNeqx99/edN/QAofTcfa0deQjbc5sNUzAfBHo28mh+o8FGIkyTO6leVzBgJ87qpG1V9ADgW9LYchu9A9bUJ/ajpska943kt38YX8xkdcMQhEN2mZMcjVosBMLlauOKZLI7dW7ZcirxxWPB9spYvNhCJ+OCSgh0s9YT4TvylYeR9l2uPrQ0/Ik6xT3BCp/Ik58jyl6bAoTBLBPGF0abxfQb2Od8WrpO8xsJFN41jDr9/USSj1VWEcRhT7l6qmWCTZTOcfDkH51vph5mMyb9G84L9Oppf+r2B4LsAqWtd8t/KGsnaBYMqN4AMS11diE1TOKfTDVb/Arif2Mu1Q8S+HUnjh/inZCOnu++h8S8=</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140819_123958</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00047_Account and User Create with FR 107_UserDelete SecondFull user 111_SUCCESS_P0" searchProperties="true" id="c57541f3-6521-445e-b871-a76af1a3f6ae"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="37a18432-d96e-40d9-97be-68bb18c2eed7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="cf9c1940-9dbb-4ea7-8555-50d08e51adad"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","FR");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="174156c6-0321-4fa3-bde9-3575510ef4f4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFULL" id="a6641ba2-bdcd-46ad-adf5-5949dbe5fde6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - AdultFULL" id="a8cc6157-7046-4123-a412-15cd8bbde5d3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="a167b5df-296f-4f10-8463-6f695b82bbe6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="37aa725f-98e2-4d7b-8a86-f3c45a1fa98f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="8c645112-d43c-4f82-b7e0-5ae0b824ab12"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZrU/I6EP7ur+jUj07pRUDoADPcVOSiL7ejfnHSdIFom0KTQvHXn6RQBEQP75lhhsl2s/vs7pMnKTHke5ZdZQxCTgKqtBpl9Q3y1jUqFEArItfUssiwNORkLc0yUcHJmwhbzkRVWoxF0KKMI8rLqmWYWc0oaGZxaObtrGFbhUw+b76qyhhCJkILl4yhKrHvUWYnactqFFI7QIwwmyIfmM2xPah2O7bwtFGKSa2UNiiThGFlxvnc1nWccQGD5+EMDny9pB/4lFxmD8iUIh6FsM3psrK63btarTKr60wQTnXLMAzdKOrCx2VkeqlWLtLN4LboJNis64gGlGDkkU8kQXWBzwJXqXrTICR85v8Q2tRNQ4bWIMYaNrP0UtW/EiTozox0ADJkSGMzZKbB+jCBECgGZdRvldXL8ya42TsMEWWTIPTZ0frvIAFdghfMwdVYWlmK7vyIJ9pVKQG2WxR7ESNL6EmazBEGpjyFMCFxhzBBPpcpyfiVmIkfSVkG+G/GUtL3sQro+onuNMgUGP8/M9uf1ybKGHkRVFBu6r48eu0x5tNq97YQTuqes/rM3/NuOYGw77wBtRv3dn1M1h23tpuGjwJj3PgzvStUBwvHGM07zav5mD4H3iSXa8TVxzt/fU0c97VBPl4+Ucu/X0+d7v2sh9v/fExaD8/z+rjdhpvacHUxyHmvTzS76F1bfvuzFkZd3ri+f3E6vXrO6mRR7cn321fuhPSzdy9WNai5/ezIHD25Cz7ym7V+rYtGy/iPMXA+Fxderl+7GhsP3VH0UO8VOi+3L+WvmvZrODSmkjCInHfAPF1KerQayq2YF+K/y4u0EFebJK72XGoU40C5WpG7pLTYkRAg4tpimJu1Ydw2m81qMZ/PF4Tc3TSN3LVxUyyat0Y1nyuaqQZtUBxBrAd0QmQuqbIb/vwOEPs2A+pCqC2DCM+Aqb9EbCCOlBbti8MRUAbDQKi4syhwPp3FzntsmZi8m8V8bm2FxUBVegF/pI9hdcIhPJTu4oF09wGTOQGp75LgTDCccdGLBVpG3DMzS5ShEIkbIJQibFvZQk5nxJ97IJHqfuBGHmTms3nSGZ1t/oUWYZZY+81hcvB+rOv4W9oC4eMS6cBkLTUQY4QTd5CZFvJjwZa1X3Aavhq5RJ4v0U8eErxBcvjpiyaSHzuOiIre6oO3HRd27mdv/75T/wWUftyPXSJ3SfbSppepuB+EelTSaS5QZpGJlssomd+NVMZQhNdN3bjRB4AjIW/rYfABVN+F0M+6XXaojzLv7If4Ij6jA444+IJtSrI842kxACafFi1xTOJz3y0HKUXfOMT8lK3uiReIRPzrIwXbWPoJ85P4WwWh+zWuE7H28og6xXuCEzqVK3mPrH8gBQ5EWCKELwj3g58KcCr5oXHX5B0WLtjkRBx+/qJIRSurCOMgorzVUBPDvsomOPl6DvaX07cwiZJvr+aY/Xg1P3c7A6F3PlJ3vuS/nTWS0AWDKl8ACZayGouXpkhOp3uqvgV4Wthz9d+E/bCSyjfzd8teT4/PQ+Vf</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>00FEEEA9665C2017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA9665C2017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEEA966682017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEEA9842E2019E05307991F0A80D6</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124027</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEEA966692017E05307991F0A6591</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+o6EP7ur+jUj05pC+WlHWEGedEe0aOCeuXLmZAuECkJNmkp/vqbFIuA6OXcGWcw283us7tPnuSco3lY9JqcQyQIo5rfrut/yk45GBeRawRVp2Y4Zbtm1NR/RWyPHKsEFhqNdM3nPAafcoGoqOtFy3YMq2bY7sCueI7llexC0akNde0JIi5DS5eCpWvpPKTcy9LW9TiiHkOccI+iOXBPYK/fvOl50tNDOSa9cb5GmSWMGlMhFp5p4kIAGMIQFzCbm+fmjs95wL0+mVAk4gg+cga8rn/sXS6XhWWpwKKJWbQsy7RcU/oEnExO9cZJvhkCn47Zet1ClFGCUUjekQJ1A2LKAq0ZTlhExHT+TWjbtC0V2oAUG9h26KlufibI0B0ZaQdkxJHBp8jOgz3AGCKgGLTHB7+unx43wfXeQYQoH7NozvfWfwcJaAIhW0Bg8LyyHN3xEQ+0q3EO2PMpDmNOErhVNFkgDFy7i2BM0h7hknwB17LxaymXfyRnGeC/Gcu5uY1VQjcPdKdNJsDF/5nZ9rzWUZ5QGENjCFdB0+nz1vTMj2viKbmPRk3f7l3MZvUMwrbzGtRm3B/rfbJuuPWx6abT/uWugvvSiF4nZOFUo9h9XPZE72U8fl71kmFSbaXXlTPz8o67o9uO+0LPxiuzimZvInl7vfXj9uXLxSK+CNPuSXB1djG4qFRHJcep9Oc1FqTdLp89s+Fz1Bldd1bJMFrNeEpWyyEh7VtWZTd++P5Y66bk8pb3e/f+U7y8TBarHpy0ydVk2Hl6ee1dlcIR9Aa9Zv2zpu0ado25JPTj0StgkS8VPfy21pXzQuJneVEWEhjjzNVbKI3iAqjQG2qXkhYvlgJEAk8Oc722rG6n02m6NafYkXLndqxyyaq6rt21mjWrXck1aI1iD2KL0TFRuZTKrvnzM0A89zjQACIjYTGeAtd/iNhGAmk+fZCHg1EOAyZV3LZnb9NkQspJ+v5qp5Vx2Z24o5QFZV27ZeI3/R01xwKiXe12d7T7ATBZEFACrxjOJcW5kM14Q0ksQruQoAKFWF4BkVJhT24qm5zMFyEoqOacBXEIhcV0kbXG5OvfooEwz6wPnUF28r4tbP9b3gPpExDlwFUtFyDnCAcuoWJeyLcFF4vbBefhm3FA1AGTDRURwWsku58+eaIIsiGJrOhPq//HznFv3I/e/nWn+QMoc78fm0RBQrbS5repvCCkfDTyab6hwlshTpI4m19VSWMkw5u2aVXNPuBY6ttqwGZAzU0I86jrZYN6L/PGvosvFlPaF0jAXLJNy5ZHvC36wNXbwpfnJD324bKTUvZNQCoO2VqhfIIoxD++UrCHlZ8038mfJYuCz3EdiLWVR9YpHxSC0IlaqYtk9Q0pMJNhiVQ+Fm0HPxTgUPJd46bJGyxCsmkUC/j+i6Ykra4jjFlMhd/WM8O2zGY4xWoB3qfTlzCZlH/czSn/9m7+56bXl4I3R/rGl/y3s0EyumDQ1RMgw1LXU/nUlMnpZEvWPwAeUvZKpdySZKtuK3ul7H4e5p1KGl/MXy1bPd0/D41/AQ==</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"00FEEE6A227E3013E05307991F0A3D55:477E8EAA"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FEEEA966682017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FEEEA9842E2019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA9665C2017E05307991F0A6591</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140819_124030</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140819_124030</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140819_124030</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>FR</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>00FEEEA9842F2019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FEEEA9842E2019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FEEEA9842E2019E05307991F0A80D6</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZtU+o6EP7ur+jUj05pC+WlHWEGedEe0aOCeuXLmZAuECkJNmkp/vqbFIuA6OXcGWcw283us7tPnuSco3lY9JqcQyQIo5rfrut/yk45GBeRawRVp2Y4Zbtm1NR/RWyPHKsEFhqNdM3nPAafcoGoqOtFy3YMq2bY7sCueI7llexC0akNde0JIi5DS5eCpWvpPKTcy9LW9TiiHkOccI+iOXBPYK/fvOl50tNDOSa9cb5GmSWMGlMhFp5p4kIAGMIQFzCbm+fmjs95wL0+mVAk4gg+cga8rn/sXS6XhWWpwKKJWbQsy7RcU/oEnExO9cZJvhkCn47Zet1ClFGCUUjekQJ1A2LKAq0ZTlhExHT+TWjbtC0V2oAUG9h26KlufibI0B0ZaQdkxJHBp8jOgz3AGCKgGLTHB7+unx43wfXeQYQoH7NozvfWfwcJaAIhW0Bg8LyyHN3xEQ+0q3EO2PMpDmNOErhVNFkgDFy7i2BM0h7hknwB17LxaymXfyRnGeC/Gcu5uY1VQjcPdKdNJsDF/5nZ9rzWUZ5QGENjCFdB0+nz1vTMj2viKbmPRk3f7l3MZvUMwrbzGtRm3B/rfbJuuPWx6abT/uWugvvSiF4nZOFUo9h9XPZE72U8fl71kmFSbaXXlTPz8o67o9uO+0LPxiuzimZvInl7vfXj9uXLxSK+CNPuSXB1djG4qFRHJcep9Oc1FqTdLp89s+Fz1Bldd1bJMFrNeEpWyyEh7VtWZTd++P5Y66bk8pb3e/f+U7y8TBarHpy0ydVk2Hl6ee1dlcIR9Aa9Zv2zpu0ado25JPTj0StgkS8VPfy21pXzQuJneVEWEhjjzNVbKI3iAqjQG2qXkhYvlgJEAk8Oc722rG6n02m6NafYkXLndqxyyaq6rt21mjWrXck1aI1iD2KL0TFRuZTKrvnzM0A89zjQACIjYTGeAtd/iNhGAmk+fZCHg1EOAyZV3LZnb9NkQspJ+v5qp5Vx2Z24o5QFZV27ZeI3/R01xwKiXe12d7T7ATBZEFACrxjOJcW5kM14Q0ksQruQoAKFWF4BkVJhT24qm5zMFyEoqOacBXEIhcV0kbXG5OvfooEwz6wPnUF28r4tbP9b3gPpExDlwFUtFyDnCAcuoWJeyLcFF4vbBefhm3FA1AGTDRURwWsku58+eaIIsiGJrOhPq//HznFv3I/e/nWn+QMoc78fm0RBQrbS5repvCCkfDTyab6hwlshTpI4m19VSWMkw5u2aVXNPuBY6ttqwGZAzU0I86jrZYN6L/PGvosvFlPaF0jAXLJNy5ZHvC36wNXbwpfnJD324bKTUvZNQCoO2VqhfIIoxD++UrCHlZ8038mfJYuCz3EdiLWVR9YpHxSC0IlaqYtk9Q0pMJNhiVQ+Fm0HPxTgUPJd46bJGyxCsmkUC/j+i6Ykra4jjFlMhd/WM8O2zGY4xWoB3qfTlzCZlH/czSn/9m7+56bXl4I3R/rGl/y3s0EyumDQ1RMgw1LXU/nUlMnpZEvWPwAeUvZKpdySZKtuK3ul7H4e5p1KGl/MXy1bPd0/D41/AQ==</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140819_124030</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00049_Account and User Create with NZ 107_UserDelete SecondFull user 111_SUCCESS_P0" searchProperties="true" id="33e48ad5-9587-4cd7-97d9-b2334e0a37e8"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="8fe0629e-7a56-425e-975e-6123028854b4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="9b270009-a829-497b-841a-92aaae3ada07"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","NZ");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="b860ca94-1133-4f92-87c0-2389048dfe73"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFULL" id="e07fd975-328a-420d-b25f-c54573dac5e9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - AdultFULL" id="cd7d805b-d511-4a38-83ff-a6376a268d2c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="664ebb2b-b16d-4b74-8237-3dd3aaef2c1c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="df116601-38a9-428b-ad6d-e92fe76b698e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="99f98938-61b8-47d9-afa5-42893cc76737"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EH2fr3B5HqeMbe64AlXmlnGWXAiX2eRlSsiNEWtLjiQD4etXNjEBQrLMVlFFqd3qPt19dKQrgaKw6LhCAJeEUc3rNvXfZRuqlVqtZtgNu2aUy6hsICjVjaKPUa1aLVaraKZrnhAJeFRIRGVTL1p22bDqasvYrjply6nUC7Vi41nXpsCFCq1cCpaubaKQCidL29QTTh2GBBEORREIR2Jn5N4OHOXpoByT3rraocwS8tZCytgxTVzwAUMY4gJmkXllHvlc+cIZkYAimXB4y+mLpv62d71eF9alAuOBWbQsy7QapvLxBQm+661v+WbwPTpnu3UHUUYJRiHZohTULcgF8zU3DBgnchF9Eto2bSsNbcAGG9gu0++6+Z4gQ3dhpCOQXCBDLJCdB3uEOXCgGLTJo9fUv182wd3eMUdUzBmPxMn6zyABXUHIYvANkVeWo7s84pl2ta4AOx7FYSLICu5SmsQIg9AeOMzJZkCEIp8vtGz82kaoH8lZBvhPxnJlHmJV0M0z3emSAIT8PzM7nNcuyhSFCbSs8U/xNAnnQX/ZH9/5w4V7/xL0t8v2utzMIBw670Dtx/22PiXrnltvmzp02x+wyXV/8vREult6F3svweMN8Aiz+WyCrmXnof4wTJKqGK5/xYOS+1fxebIaPySD3rLdSEwYXvt1f9H5tbz/9nM2fhqvaw/dzmR+2+4NN/Hsx/D5FYLNjXUzbXjM43EpeP4xe+p7Jh9NCKGDrXU/7LenU1n7eTOsuBG7W8b3fvvumz0F4U2Skps8Tctbvrh+tZrvNR3WcGzMJWGUzJaAZb5M6eF1tb6aF5Jfy0tqIb4xz1ydONUoIYFKvZXuSqXFSZQAEd9Rw9ytLavf6/Wqbt2tFkuW1ehZlZJVazTsvuW6lVI916AdihOIHUbnJM2VquyOP18DxJEjgPrAjRVL8AKE/kXELpJI8+ijOhyMChgzpeK2PVsutySmbLuNlsu5qLCXoM4517U7Ju/pPXfnEvixdDeOpPsRMIkJpPqeElwohgupevGCVokM7cIKFSgk6gbgqQg7xXK9YgoSxSGkSM2I+UkIhXgRZ50xxe6/aCAsMutjb5wdvE/rOv2Wt0D5+CR1EGktbVBjhDN3UDkv5NOCi8XDgvPwbuKT9HypfkpO8A7J8ad3mqT82HNEVfS7M/pt57j37hdv/7jT/AKUedqPfSJ/RQ7S5pepuh+UerTyab6gwkshWa2SbH61VBm5Cm/aplUzR4ATJW+vY/YPUHMfwrzodtmjPsm8tx/jS+SCjiSSECm2adnygqfFCET6tPDUMdlc+m45Sqn6JmEjz9k6oXqBpIi/fKRgB6d+yvyg/taM++/jOhPrII+qU70nJKFBukrvkddPSIGZCkuU8DF+GPxcgHPJj437Ju+xSMWmWSLh8y9aqmhNHWHMEiq9rp4ZDlU2wylfY3DenT6EyZT87WreiE+v5r9vByOldxHS977kv50NktEFg56+ADIsTX2jXpoqOQ0OVP0N4Edhd6ulbqenyNY+FPZKu1PaN/CoktYH80fLQU9Pz0PrXw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>00FEEEA63DCE201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA63DCE201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEE6A8A623009E05307991F0AA538</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEEA9848F2019E05307991F0A80D6</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124057</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEE6A8A633009E05307991F0AA538</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH1chCbcmUUHiepTT0m6B9nT7sjLOBLxN7NR2uOyvP3ZoKFDawx4JCXkynvlm5vNnXwqUJtWgIwRwSRg1wn7L/OlH4NWcKrKg5mKrDnHT8upV35pFcYyd5gx5ftM0QiFyCKmQiMqWWXXcuuV4lutP3WZQdwPHqXhO/ck0HoALFVq5VBzTWKcJFUGRtmXmnAYMCSICilIQgcTBpDO6DpRngEpMZvtyi7JIyNsLKbPAtnElAgxJgiuYpfalfeBzGYlgQuYUyZzDa85ItMzXvavVqrKqVRif21XHcWzHt5VPJMj8q9n+Um6GKKQx2657iDJKMErIb6RBjUAuWGR0kjnjRC7SD0K7tuvo0BassYXdOv1q2m8JCnRnRjoAyQWyxAK5ZbAxxMCBYjDux2HL/HreBLd7pxxRETOeiqP1n0ECuoSEZRBZoqysRHd+xBPtal8CDkKKk1yQJdxommQIgzC+c4jJ+poIRb5IGMX4jbVQP1KyDPCfjOXS3seqoNsnutMncxDy/8xsf17bKA8oyaHdiDY3F/NllHhX6WgUReQxox6ZhSvfaRUQ9p23oHbjfl0fk3XHrddNeV/e23FnzUQa9wab0bT2WP32T1OG+fBuut5MyKQx26QXN2Nx/c3279G3Byz4KH8Kp9Af+POnJFo/ZXcvi+WS219CcpfdX//Y8GxQv+rejuqjRp3/6L7Mp9+Htcc0Z8OcvUwFyu5Cnt+Jq9/P7jzvDxsZe/51F9/O/p6mibypjTts1f0yvuo+PD9EPb5qyHv+VzXszFtvNe3XcGgsJWGSz34BluVS0yPsG0M1LyQ/lxdtIZEVF65BpjVKSKDSbOtdWlqCXAkQiQI1zO3acYaDwaDje3VvqOTOHziNmnPh++7Q6XhOv1lq0BbFEcQeozHRubTKbvnzOUCcBgJoBNxashwvQJifROwjiYyQjtXhYFTAlCkV39RWNTkDRNXRcaveRYLWiUcb3DRumLylt7wTS+CHyu0fKPcYMMkIaHnX/BaK4EKqVrygZS4Tt7JEFQq5ugC41uCgWvcatiBploAGaqcsyhOoZIusaIwttv9VC2FRWMeDaXHuPizr+FvZAeUTEe0gdC1dUFOEd1eQEzTKQj4suFrdL7gM38kjoo+XaqfkBG+RHH56Y4mmx44iqqKfvclPt8S9cz97+/ud9ieg7ON+7BJFS7KXtrxL1fWgxKNdTvMFVV4q+XKZF/O70MLIVXjbtZ0LewI4V+q2mbJnoPYuhH3W5bJDfZR5Zz/El8sFnUgkIVVsM4rlGS+LCQj9sgjVKVmf+2w5SKn6JmEtT9l6iXqAaMSfvlFwgLWfMn9XfyvGo7dxnYi1l0fVqZ4TktC5XulrZPMBKTBTYYnSPcb3g58KcCr5oXHX5B0Wqdg0yyV8/MXQgtYyEcYspzLsm4VhX2QLnHKTQfDm9C5MIeSvN/NafHgzP46uJ0ruUmTufMl/O1ukoAsGUz8ACiwtc60emio5ne+J+ivAE7rerPV7A0W27r6uN7q92q6BB5W035nfW/Z6enwe2v8C</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"00FEEEA63DE0201BE05307991F0A5BC3:FCAF1412"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FEEE6A8A623009E05307991F0AA538</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FEEEA9848F2019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA63DCE201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140819_12410</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140819_12410</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140819_12410</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>NZ</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>00FEEEA984902019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FEEEA9848F2019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FEEEA9848F2019E05307991F0A80D6</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH1chCbcmUUHiepTT0m6B9nT7sjLOBLxN7NR2uOyvP3ZoKFDawx4JCXkynvlm5vNnXwqUJtWgIwRwSRg1wn7L/OlH4NWcKrKg5mKrDnHT8upV35pFcYyd5gx5ftM0QiFyCKmQiMqWWXXcuuV4lutP3WZQdwPHqXhO/ck0HoALFVq5VBzTWKcJFUGRtmXmnAYMCSICilIQgcTBpDO6DpRngEpMZvtyi7JIyNsLKbPAtnElAgxJgiuYpfalfeBzGYlgQuYUyZzDa85ItMzXvavVqrKqVRif21XHcWzHt5VPJMj8q9n+Um6GKKQx2657iDJKMErIb6RBjUAuWGR0kjnjRC7SD0K7tuvo0BassYXdOv1q2m8JCnRnRjoAyQWyxAK5ZbAxxMCBYjDux2HL/HreBLd7pxxRETOeiqP1n0ECuoSEZRBZoqysRHd+xBPtal8CDkKKk1yQJdxommQIgzC+c4jJ+poIRb5IGMX4jbVQP1KyDPCfjOXS3seqoNsnutMncxDy/8xsf17bKA8oyaHdiDY3F/NllHhX6WgUReQxox6ZhSvfaRUQ9p23oHbjfl0fk3XHrddNeV/e23FnzUQa9wab0bT2WP32T1OG+fBuut5MyKQx26QXN2Nx/c3279G3Byz4KH8Kp9Af+POnJFo/ZXcvi+WS219CcpfdX//Y8GxQv+rejuqjRp3/6L7Mp9+Htcc0Z8OcvUwFyu5Cnt+Jq9/P7jzvDxsZe/51F9/O/p6mibypjTts1f0yvuo+PD9EPb5qyHv+VzXszFtvNe3XcGgsJWGSz34BluVS0yPsG0M1LyQ/lxdtIZEVF65BpjVKSKDSbOtdWlqCXAkQiQI1zO3acYaDwaDje3VvqOTOHziNmnPh++7Q6XhOv1lq0BbFEcQeozHRubTKbvnzOUCcBgJoBNxashwvQJifROwjiYyQjtXhYFTAlCkV39RWNTkDRNXRcaveRYLWiUcb3DRumLylt7wTS+CHyu0fKPcYMMkIaHnX/BaK4EKqVrygZS4Tt7JEFQq5ugC41uCgWvcatiBploAGaqcsyhOoZIusaIwttv9VC2FRWMeDaXHuPizr+FvZAeUTEe0gdC1dUFOEd1eQEzTKQj4suFrdL7gM38kjoo+XaqfkBG+RHH56Y4mmx44iqqKfvclPt8S9cz97+/ud9ieg7ON+7BJFS7KXtrxL1fWgxKNdTvMFVV4q+XKZF/O70MLIVXjbtZ0LewI4V+q2mbJnoPYuhH3W5bJDfZR5Zz/El8sFnUgkIVVsM4rlGS+LCQj9sgjVKVmf+2w5SKn6JmEtT9l6iXqAaMSfvlFwgLWfMn9XfyvGo7dxnYi1l0fVqZ4TktC5XulrZPMBKTBTYYnSPcb3g58KcCr5oXHX5B0Wqdg0yyV8/MXQgtYyEcYspzLsm4VhX2QLnHKTQfDm9C5MIeSvN/NafHgzP46uJ0ruUmTufMl/O1ukoAsGUz8ACiwtc60emio5ne+J+ivAE7rerPV7A0W27r6uN7q92q6BB5W035nfW/Z6enwe2v8C</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140819_12410</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00050_Account and User Create with NZ 107_UserDelete Standard Youth user111_SUCCESS_P0" searchProperties="true" id="ed8b654d-4551-4853-9d13-d4701b826398"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="f364245f-5e25-42bc-b058-4df992224962"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="7268e9f8-cba6-4ac8-adde-d9173e62271d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","NZ");

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="3c42f673-4e1e-4c06-8ce6-7e2ac8915e84"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUser" id="c89dafb5-16ee-48e3-90ab-6175062f68dc"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - StandardYouthUser" id="b512108d-8b10-4785-8528-e49d3c50a3ca"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="d7cfd59f-d18e-40fc-ac0d-06963c723ef2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="46509655-0ea0-4216-8fad-0063d3ac80e1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="230472ba-0c93-4f98-9281-0a3ac61f8417"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4j2eML2AwnsAMgZC6JSQDNG360hHyGquxZWJJYPLrj2RiAoTk0DPDDKP1avfbi77dC4bSxPF7jEHOSUa1YNDRf1ueheeW3TTcht02GpEXGnPPmRtR3YvCltvCYQvrWsCYgIAyjijv6I5lNwzLM+z2zG76Ddt3GjWv3fyla/eQM2laqtQsXSvShDK/dNvRRU79DDHCfIpSYD7H/rR3M/Klpo8qTHr3YouydJh3Y86XvmniWggYkgTXcJaaF+aBzkXI/ClZUMRFDi8+Q9bRX+6u1+vaul7L8oXpWJZlWm1T6oSMLD7r3U/VZQgDGmXbcx/RjBKMEvKMFKgb4HEWar1kkeWEx+k7pm3TtpRpAwpsYLtBP+vmq4MS3ZmWDkDmDBksRnZlbAIR5EAxaN8nQUf/fF4Ft3dnOaIsyvKUHZ3/DhLQFSTZEkKDVZFV6M63eCJd3QvAfkBxIhhZwVi1yRJhYNpdDhEpRoTJ5guZVpZfK5j8karLAP9NWS7MfawSunkiOwOyAMb/T83267W1co8SAV3y41f0UB99fRpuHpqrCMEckefe83Pz8rFTQthX3oLalfvlfNysu956uTQPUd4zp5kYk2/X4gtYzl0g4hG+n86D+U17EnrZuP5UCBJno54Q0dLpt8bBHWI/Zv3FT/MxdIox/XH9z2pznX56mvR4TC8fF3czPmGYblL3pni8oWna/75aTxePg9upaH/dJE3vgdWDh/vrfvP5Z2sQN+7WY3E73izZ1/hLfDderp4/Df+gfuB4I8uNhsJNPbe96LzGtB/DobCihKmY/wHMq6Nqj2CgDWW9EP+YXpSEhEZUqvpLxVGMA+V6V91S1OILSUAk9GUxt2fLGl5dDV3Pc7wrZ9hzryy3brnttj20er2m5VYctEVxBLGf0YgoX4plt/3zMUCc+gxoCLmxygSOgekfWBwgjrSATuTjyCiDWSZZ3P6zDu1WyvO4nYPdAK/IPFe0GqTQtXHGb+lt3os45Ifc3T7g7glgsiSgCF51OJMtzrhMxhNaCZ7YtRWqURByBOSKheU9zzUZSZcJKKhmmoUigdoyXpapMdn23zEQZqV0cjUrX967gR1/q3IgdUKiFJiK5RJkHeHEELKrQN4N2HH2A67M90RI1AOTCeU5wVskh59e+0Q1yK5JZES/+9PfdoV7p3729bc3zQ9Amcf52DkKV2TPbTVN5YCQ9NGtqvmEak81sVqJsn4tRY25NG/aptUyp4CF5LfNLHsEau5MmGeNlx3qI887+SE+IUllyhGHVHabVh7P2C2mwNRuEch3Upy7uBy4lHnjUPBTsn4iVxCF+MMtBftY6Umx5Eu2zvLwtVwnbO35kXHKhYITulAnNUg27zQFzqRZIpkvy/eNnzJwyvmhcJfkHRYuu2kuOLz/RVOU1tERxpmgPBjopWCfZkucfLME/1XpjZmSyl9mc8Henc0/b0ZTSXgp0ne65L+VDVK2CwZdrQAllo5eyFVTOqeLPVp/AfiW2R3LGda9umVdlsze2jK70+/3dwk8iKT7RvxWspfT4/fQ/Rc=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>00FEEF202F38300BE05307991F0A2CCC</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:00FEEF202F38300BE05307991F0A2CCC</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEF58828E2FA5E05305991F0AA605</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEE6AFE8B300DE05307991F0A1965</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124124</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEF58828F2FA5E05305991F0AA605</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcto6FH3vV3jcR8b4ggnYE5ghXBqfkCYFStu8dBR5g9XakmPJBvr1RzIxAUJy6JlhhtH21tprX7SkS46S2PF7nEMmCKNaMOjoP5uNx8Zj22kbF61m03Cxh4y23cIGNFttG3mW5wLStYDzHALKBaKiozuW7RpW27C9mX3hu7bvXNQ9t/Wga3PIuISWLnVL19ZJTLlfhu3oeUZ9hjjhPkUJcF9gf9q7HfvS00cVJ717uWVZBsy6kRCpb5q4HgKGOMZ1zBLz0jzwuQy5PyVLikSewXPMkHf0572r1aq+atRZtjQdy7JMyzOlT8jJ8qPe/VBthjCgC7Zd9xFllGAUkz9IkboFEbFQ68VLlhERJW9A26ZtKWgD1tjAtks/6uZLgJLdmUgHJDOODB4huwKbwAIyoBi0r5Ogo388r4PbvbMMUb5gWcKP1n9HCWgBMUshNHiVWcXufMQT5epeAvYDiuOckwI+qzFJEQau3WewIOsx4XL4Qq6V7dfWXP5INWWA/6Ytl+Y+V0ndPFGdAVkCF/+nZ/v92qLMUZxDN8kshqz77yKKVu7mkV3HnKNmrR3PcaeksO+8JbVr9/P6eFh3s/W8KR0t/ribvrdOv3m1m6eH8WdRrOYjGtwMf92PClFLajgyB58W+d1V49s8vEHX1w818LLgoZ+O76cr79OXu1Gx+r5h0Yd0PIbe5qp2cy1sggLvbiNh/7lwvyyBjVqbombfbFrcmV0PzPmvAf7hLRajHw8N0fBW7qSwVs2nTFz9oG4REfLhcXITXeP1V3zX+HQ7nM/cL787Lznt53BorCRhmj/+AiyqpRqPYKCNZL+QeF9elIWExqJ09VOlUVwAFXpX7VLS4udSgEjoy2Zu15Y1Gg6HF73RsH3VsKzB0Go2rJbn2SOrZ3sXzUqDtiyOKPYZXRAVS6nsdn7eJ4gTnwMNITMKluMIuP4O4gAJpAV0Ig8HoxxmTKq43UZPyFsvmquYZS2SbGJwvLVFua59ZuKO3mW9hYDsULq9A+meACYpAaXvasC5nHAuZC2eUJGL2K4XqE4hlzdApkTYd9x20+QkSWNQTM2EhXkM9TRKy8qYfPvvGAjz0joZzsqD92Zex9+qEkifkCgHrnK5AtlGOHEH2VUibybsOPsJV/C9PCTqfMl6iozgLZPDTy9jouZjNyMyo5/96U+74r1zP3v7653mO6TM43rsAoUF2QtbXabyfpDq0a26+YTqT/W8KPKyfy2ljJmEN23TaplTwLmUt82M/QZq7iDMs26XHeujyDv7Ib9cRHQqkIBETptWLs94WkyBq6dFII/J+tx3y0FIWTcBa3HK1o/lC0QxfveRgn2s/KT5Xv6tWBa+tOsE1l4cmad8TwhCl2ql7pHNG0OBmYQlUvhYtg9+CuBU8EPjrsg7LkJO02Mu4O0vmlK0jo4wZjkVwUAvDfsqW/IUmxT8F6dXMKWSP1/Na/7m1fz9djyVepcgfedL/tvZIOW4YNDVC6Dk0tHX8qUpg9Plnqo/E3wl7CPHckaNthT2q31hd/r9/q6AB5l0X5lfW/Zqenweuv8C</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"00FEEE6AFE9F300DE05307991F0A1965:B7B44BC8"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FEEF58828E2FA5E05305991F0AA605</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FEEE6AFE8B300DE05307991F0A1965</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEF202F38300BE05307991F0A2CCC</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140819_124126</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140819_124126</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140819_124126</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>NZ</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>00FEEE6AFE8C300DE05307991F0A1965</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FEEE6AFE8B300DE05307991F0A1965</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FEEE6AFE8B300DE05307991F0A1965</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcto6FH3vV3jcR8b4ggnYE5ghXBqfkCYFStu8dBR5g9XakmPJBvr1RzIxAUJy6JlhhtH21tprX7SkS46S2PF7nEMmCKNaMOjoP5uNx8Zj22kbF61m03Cxh4y23cIGNFttG3mW5wLStYDzHALKBaKiozuW7RpW27C9mX3hu7bvXNQ9t/Wga3PIuISWLnVL19ZJTLlfhu3oeUZ9hjjhPkUJcF9gf9q7HfvS00cVJ717uWVZBsy6kRCpb5q4HgKGOMZ1zBLz0jzwuQy5PyVLikSewXPMkHf0572r1aq+atRZtjQdy7JMyzOlT8jJ8qPe/VBthjCgC7Zd9xFllGAUkz9IkboFEbFQ68VLlhERJW9A26ZtKWgD1tjAtks/6uZLgJLdmUgHJDOODB4huwKbwAIyoBi0r5Ogo388r4PbvbMMUb5gWcKP1n9HCWgBMUshNHiVWcXufMQT5epeAvYDiuOckwI+qzFJEQau3WewIOsx4XL4Qq6V7dfWXP5INWWA/6Ytl+Y+V0ndPFGdAVkCF/+nZ/v92qLMUZxDN8kshqz77yKKVu7mkV3HnKNmrR3PcaeksO+8JbVr9/P6eFh3s/W8KR0t/ribvrdOv3m1m6eH8WdRrOYjGtwMf92PClFLajgyB58W+d1V49s8vEHX1w818LLgoZ+O76cr79OXu1Gx+r5h0Yd0PIbe5qp2cy1sggLvbiNh/7lwvyyBjVqbombfbFrcmV0PzPmvAf7hLRajHw8N0fBW7qSwVs2nTFz9oG4REfLhcXITXeP1V3zX+HQ7nM/cL787Lznt53BorCRhmj/+AiyqpRqPYKCNZL+QeF9elIWExqJ09VOlUVwAFXpX7VLS4udSgEjoy2Zu15Y1Gg6HF73RsH3VsKzB0Go2rJbn2SOrZ3sXzUqDtiyOKPYZXRAVS6nsdn7eJ4gTnwMNITMKluMIuP4O4gAJpAV0Ig8HoxxmTKq43UZPyFsvmquYZS2SbGJwvLVFua59ZuKO3mW9hYDsULq9A+meACYpAaXvasC5nHAuZC2eUJGL2K4XqE4hlzdApkTYd9x20+QkSWNQTM2EhXkM9TRKy8qYfPvvGAjz0joZzsqD92Zex9+qEkifkCgHrnK5AtlGOHEH2VUibybsOPsJV/C9PCTqfMl6iozgLZPDTy9jouZjNyMyo5/96U+74r1zP3v7653mO6TM43rsAoUF2QtbXabyfpDq0a26+YTqT/W8KPKyfy2ljJmEN23TaplTwLmUt82M/QZq7iDMs26XHeujyDv7Ib9cRHQqkIBETptWLs94WkyBq6dFII/J+tx3y0FIWTcBa3HK1o/lC0QxfveRgn2s/KT5Xv6tWBa+tOsE1l4cmad8TwhCl2ql7pHNG0OBmYQlUvhYtg9+CuBU8EPjrsg7LkJO02Mu4O0vmlK0jo4wZjkVwUAvDfsqW/IUmxT8F6dXMKWSP1/Na/7m1fz9djyVepcgfedL/tvZIOW4YNDVC6Dk0tHX8qUpg9Plnqo/E3wl7CPHckaNthT2q31hd/r9/q6AB5l0X5lfW/Zqenweuv8C</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140819_124126</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00052_Account and User Create with IE 107_UserDelete SecondFull user 111_SUCCESS_P0" searchProperties="true" id="98a98bfd-6879-4479-b7a8-4ca847bd4f85"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="aab28daf-2bef-4152-950c-5c27e55e5f49"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="248595f4-3b69-464d-89a5-7306dd3216b5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","IE");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="cb998513-a364-434a-80a8-25a350d7c43d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFULL" id="c9b276db-15b2-41f3-b38e-bb8e2328e66e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - AdultFULL" id="c8cff1d1-11a7-4c9e-abd3-a4d71d4f3b9f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="51c942bd-27ad-4dce-ba4d-3821573d1f7b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="c8046167-9899-4a49-836a-0966d7d6a9ff"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="89303490-9624-41a2-bafc-c6574b1a500f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o8EH3vr/C4jxkjC5wAnsAM18RpCA3k1r50hLyAGlsilsylv76SiQkQko9+M8wwWq92z+4eHelckjgq+g0pIVFMcCto1+xf1VNMqm6InTKMSo4HmDjEPSs6Ixh7QCploKfUtgIpUwi4VISrml10see4FQdX7/CZ72HfKxVKpepP23qAROrQ2qXg2tYyjrj0s7Q1O024L4hk0uckBukr6g8bvWtfe/okx2TXz9cos4RJfarUzEeIFkKgEEW0QEWMztGOz3ko/SGbcKLSBF5zhrJmv+5dLBaFRakgkgkquq6L3CrSPqFkk692/Uu+GcKAj8V63SJccEZJxP4QA6oHaipCqxFNRMLUNP4gNEbYNaEdWFKHYo9/tdFbggzdkZF2QCaSOHJKcB5sAGNIgFOw7gdBzf563ATXe+8SwuVYJLHcW/8bJOBziMQMQkfmleXojo94oF31c6B+wGmUSjaHG0OTGaEgre8JjNnymklNvlBa2fitpdQ/lrMM6L+M5RxtY9XQ0YHutNkEpPo/M9ue1zrKA4lSqJ+EqfrNmqN0ju7R1fRq9fwjLkfXi6dmp5ZB2HZeg9qM+3W9T9YNt1439cpR60qUVPfHT9dLOvePt6NGb6AWFycAtx6+GSymnduL52+kzRt/KqvVyWWTkCa7fSS4uhr/EGhZuuxdzNMLSuIviKe94fyUJIM+9tDt6PHpsnM9fQjuCO5ftlaXPSK/i27lW3CmbnrihST3lWG4On0Zl6cnJ91K2Fzwm/6oGLiPz/0vq6ubqte/XcWBunoacvX84NXeatquYdeYS8IwHf0GqvKloUfQtrp6XkR9Li/GwkJnnLn6M6NRUgFXdt3sMtLip1qAWOjrYa7XrtvtdLq41W4WT0suLndc/VeuVnHXbeB2u5hr0BrFHsSW4GNmchmVXfPnc4A09iXwEBJnLlI6BWl/ErFNFLECPtCHQ3AJd0KrOJbFVZkrXOXy+Q+epItyBQQeu17Ftm6E6vN+0hgrSHa1u7qj3QOgbMbACLxhuNQUl0o344XMUxXhwpwUOKT6CkiMCvtFr3KKJItnERioKBZhGkFhNp1lrUFy/V90CJWZddC5y07eh4Xtf8t7oH1CZhykqaUJeo5w4BIq5YV8WHCxuF1wHr6RhswcMN1QlTC6RrL76Y0nhiAbkuiKfrWGv3COe+N+9Pb3O9EnoNB+PzaJwjnbSpvfpvqC0PJRz6f5QgovhXQ+T7P5lY00Jjo8wsgtoyHQVOvb6k48A0ebEOio62WDei/zxr6LL1VTPlREQazZZmXLI94WQ5DmbRHoc7I89uGyk1L3TcFSHbK1Iv0EMYg/faVQnxo/bf6u/xYiCd/GdSDWVh5dp35QKMYnZmUuktUHpKBCh2Va+USyHfxQgEPJd42bJm+wKM2mUarg4y+WkbSaTSgVKVdB284M2zKb4VSrGfhvTu/CZFL+ejcv5Yd381PveqgFLyb2xpf9t7PDMrpQsM0TIMNSs5f6qamT88mWrL8CfKfsnUa14nXONNmq28pecdtnmwbuVFJ/Z35v2erp/nmo/wU=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>00FEEEA984E62019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA984E62019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEF1CDB253017E05307991F0A1DD2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEEA63E5F201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124142</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEF1CDB263017E05307991F0A1DD2</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtc6o6EP7eX8HQj3cQUFFh1Bl8aQ+3tfWKtj3nSycnBE2FQElQ7K+/CQpVq72eO+OMk2Wz++zukydpUxAGVcumFCUMR0RyBh35FZhNDdWqDQU26k2l3oCe8rtR85SmYZrAN+uaWW3KkkNpihxCGSCsI1c1va5oLUU3p3rDqutW3agYhvZLlp5QQnlo7lLRZCkLA0KtPG1HThNiRYBiahEQImoxaLn26N7inhYoMMnd9hZlnjDpLhiLLVWFFQ9BFASwAqNQbasHPm2PWi6eE8DSBO1yerQj7/au1+vKulaJkrla1TRN1UyV+3gUz6/l7lWxGXkO8aPtug9IRDAEAf4AAtQIsUXkSXYwjxLMFuGZ0LqqayK0gjKoQL1OrmX1M0GO7sJIByATChS6AHoRbIJ8lCACkTSbOB35+rIJbvdOE0CoHyUhPVr/GSREViiIYuQptKisQHd5xBPt6rYRtBwCg5TiFXoQNIkBRFQaJ8jH2T2mnHwelfLxSxnlP1ywDME/GUtb3cfKoasnujPAc0TZ/5nZ/ry2UZ5AkKIuuZ2Y8cfTj1ot7b8Eb2/ZLP5787EOB7ewk0PYd96CKse9Wx+TteTWbhOLIjJYPmZsOXm+a+DJ+Kf688Fz4iej15/GXuaqf5Hlj3h615ytyKK+eR63xn6f2Y6epXbrQ2e3j3fvgb94c8fOVQq1LBu/ZObsl3s3p0x3HwZ3856RPYNNWOt/OC1vVTde6ux9Ycx60WTpu5MZtZf3YDC71dKRedPvGfayBmGNXf1zP5ohMxkRrbcwXXusU63zWdN+DYfGQhLc9PcbgqxYCno4A+mGzwuw7+VFWLCn+LmrFQuNogwRJnfFLiEtVsoFCHsWH+Z2rWk3w+HQbtSGxg2Xu95QM2pa0zT1G83mnawVGrRFcQSxHxEfi1xCZbf8+R4gDC2KiIcSZRWlcIGo/E3EAWBAcsiEH46IUDSNuIqvTa01b6z9wNcY72tj/ka4WCdvhiw9ROyRPCa2z1ByKN3mgXRPEMQxRkLfBcEpZzhlvBfvYJWyQK+sQIWglN8AiRBhq1pvGSrFYRwggVQNIy8NUCVexHlnVLr9ryoA0tw6GU7zg3e2ruNvRQu4j4eFAxW19BAfIzpxB9WKQs4WXK3uF1yEt1MPi/PF+8kSDLdIDj990kTwo+QIr+i1777qBe7S/eLtX3eq34BSj/tRJvJWeC9tcZny+4GrR7eY5juovFfS1SrN59cUypjw8Kquak3VRTDl8raZRktE1DKEetHtUqI+ylzaD/GlbEFcBhgKOdukfHnB08JFVDwtHH5MskvfLQcped8YytgpWz/gLxCB+NtHCrSg8OPmMf9bR4n3Oa4Tsfby8Dr5e4JhMhcrcY9szpACRjws5sIXJfvBTwU4lfzQWDa5xMI4m36nDJ3/IglF68gAwiglzBnIuWFfZXOcbBMj69PpS5hcyXdXc0bPXs0vo3uX610I5NIX/7ezgnO6QCSLF0COpSNn/KXJk5P5nqrvAJ4QdrNVHzY42cx9YW9pg0bZwINKul/MXy17PT0+D91/AQ==</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"00FEEE6A228F3013E05307991F0A3D55:9B8929A3"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FEEF1CDB253017E05307991F0A1DD2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FEEEA63E5F201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA984E62019E05307991F0A80D6</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140819_124144</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140819_124144</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140819_124144</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>IE</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>00FEEEA63E60201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FEEEA63E5F201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FEEEA63E5F201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZtc6o6EP7eX8HQj3cQUFFh1Bl8aQ+3tfWKtj3nSycnBE2FQElQ7K+/CQpVq72eO+OMk2Wz++zukydpUxAGVcumFCUMR0RyBh35FZhNDdWqDQU26k2l3oCe8rtR85SmYZrAN+uaWW3KkkNpihxCGSCsI1c1va5oLUU3p3rDqutW3agYhvZLlp5QQnlo7lLRZCkLA0KtPG1HThNiRYBiahEQImoxaLn26N7inhYoMMnd9hZlnjDpLhiLLVWFFQ9BFASwAqNQbasHPm2PWi6eE8DSBO1yerQj7/au1+vKulaJkrla1TRN1UyV+3gUz6/l7lWxGXkO8aPtug9IRDAEAf4AAtQIsUXkSXYwjxLMFuGZ0LqqayK0gjKoQL1OrmX1M0GO7sJIByATChS6AHoRbIJ8lCACkTSbOB35+rIJbvdOE0CoHyUhPVr/GSREViiIYuQptKisQHd5xBPt6rYRtBwCg5TiFXoQNIkBRFQaJ8jH2T2mnHwelfLxSxnlP1ywDME/GUtb3cfKoasnujPAc0TZ/5nZ/ry2UZ5AkKIuuZ2Y8cfTj1ot7b8Eb2/ZLP5787EOB7ewk0PYd96CKse9Wx+TteTWbhOLIjJYPmZsOXm+a+DJ+Kf688Fz4iej15/GXuaqf5Hlj3h615ytyKK+eR63xn6f2Y6epXbrQ2e3j3fvgb94c8fOVQq1LBu/ZObsl3s3p0x3HwZ3856RPYNNWOt/OC1vVTde6ux9Ycx60WTpu5MZtZf3YDC71dKRedPvGfayBmGNXf1zP5ohMxkRrbcwXXusU63zWdN+DYfGQhLc9PcbgqxYCno4A+mGzwuw7+VFWLCn+LmrFQuNogwRJnfFLiEtVsoFCHsWH+Z2rWk3w+HQbtSGxg2Xu95QM2pa0zT1G83mnawVGrRFcQSxHxEfi1xCZbf8+R4gDC2KiIcSZRWlcIGo/E3EAWBAcsiEH46IUDSNuIqvTa01b6z9wNcY72tj/ka4WCdvhiw9ROyRPCa2z1ByKN3mgXRPEMQxRkLfBcEpZzhlvBfvYJWyQK+sQIWglN8AiRBhq1pvGSrFYRwggVQNIy8NUCVexHlnVLr9ryoA0tw6GU7zg3e2ruNvRQu4j4eFAxW19BAfIzpxB9WKQs4WXK3uF1yEt1MPi/PF+8kSDLdIDj990kTwo+QIr+i1777qBe7S/eLtX3eq34BSj/tRJvJWeC9tcZny+4GrR7eY5juovFfS1SrN59cUypjw8Kquak3VRTDl8raZRktE1DKEetHtUqI+ylzaD/GlbEFcBhgKOdukfHnB08JFVDwtHH5MskvfLQcped8YytgpWz/gLxCB+NtHCrSg8OPmMf9bR4n3Oa4Tsfby8Dr5e4JhMhcrcY9szpACRjws5sIXJfvBTwU4lfzQWDa5xMI4m36nDJ3/IglF68gAwiglzBnIuWFfZXOcbBMj69PpS5hcyXdXc0bPXs0vo3uX610I5NIX/7ezgnO6QCSLF0COpSNn/KXJk5P5nqrvAJ4QdrNVHzY42cx9YW9pg0bZwINKul/MXy17PT0+D91/AQ==</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140819_124144</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00053_Account and User Create with IE 107_UserDelete Standard Youth user111_SUCCESS_P0" searchProperties="true" id="454d3640-0c2d-498a-a9bc-aa341c286b0d"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="adae407b-2be9-4c73-ba00-de126fa2be6c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="6c9995fb-4842-44a3-9ade-defaa60ccaca"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","IE");

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="b5492049-31a7-4e19-b001-968c378af2e0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUser" id="479f6772-8295-4d67-b6e4-19fc8b5b0158"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - StandardYouthUser" id="3bd095e8-ace6-4a2c-bf82-82e2a6398a58"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="9b4ab536-7ecb-476d-a7d3-3a61d3a4a66f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="02224969-9062-4e2a-b38f-1c0a6e291d5f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="e7fd2ef9-0369-4be5-8c0d-ab62cddfcc5f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdc6JKEH3fX0Gxj1s4IIpCRatI1HvZNV9qst68bOHQ4GRhQGZAkl9/BwxEzcd1b5VV1jQ93ae7z5yZM+ZGYduyGYOUk5hKzmgg/+oZXb3d1TXFV/2V0ln1DKVvgqp0fexpet/0dbUnSw5jGTiUcZfygdxWtY6i9hXNXGiG1Wlbaq/V0boPsnQPKROhhUtLlaUiCimzqrQDOUupFbuMMIu6ETCLY2tuX04t4Wm5NSZ5eLZDWSVMh2vOEwsh3PIAQxjiFo4jdIYOfM48Zs1JQF2epfCS02MD+WXvdrttbfVWnAaoraoqUk0kfDxGgq/y8Eu9GTyH+vFufeHSmBLshuTZLUFdAl/HnmSHQZwSvo4+CK0hTS1DK1BgBWsd+lVGrwkqdCdGOgCZMldha1erg83AhxQoBulu5gzkr6dNcLd3kbqU+XEasaP1n0ECmkMYJ+AprK6sRnd6xHfaNTwDbDkUhxkjOVyVNElcDEy6ScEnxZQwQT6PSdX4pYKJH6lZBvhPxnKG9rEK6Oid7oxIAIz/n5ntz2sX5d4NMxjCepJ7Txd4llNB/WCmTg193mfbDh8PKgj7zjtQzbhf1sdkbbj1smmqde6y1eiqf/d8k58/317Ht8kzS5JlYePb6Lw/i75Pb4y/nFTTtfH8rmDzy2K5uNncB3cof9zYySbjia3+iOHh8cvV+OYht/XzIHGCx8jsfqMUxuipcHrLTvTUWU38+wnLtkvbRUu1QFPj53cfxtj5h9/+fbv89oB+bnSux/pleD7/EqwmidPu6EG88Ip1XJid34PXmvZrODTWkjDPVo+Aeb0s6eGMpImYl8s/l5fSQjzFr1ytpNQoxoFyeVjuKqXFyoQAEc8Sw9ytVXUyHo9t0+hpbSF3vbHaFcfINLWJahtdU6s1aIfiCOJFTH1S5ipVdsefzwHiyGJAPUiVPM7wGpj8ScSRy13JoTNxOGLKYBELFdeMvuoaSZuYIY20TRd7ePMI4GdUlq5ifk2vU9vnkB5qt3mg3TPAJCFQCnzJcCYozrhoxsbNMx5qrdxtUcjEFZCWKmy1O/0uYiRKQiihoij2shBayTqpWoPY7r+tuJhV1tl4UZ28Dws7/lb3QPh4pHRgZS3nIOYIby4hzerWhXxYcLu9X3Ad3s48Uh4w0VCeErxDcvjplSclQRqSiIp+Xcx/NWRo3E/e/nYn+gQUOu5Hk8jLyV7a+jYVF4SQj2E9zY3b2rSyPM+q+fVKaUxFeKQhtYfmgDOhb0+L+DdQ1IRAJ10vDeqjzI39EF/G13TOXQ6RYJtULU94W8yBlW8LR5yT4tSHy0FK0TcOBX/PdhGKJ0iJ+NNXCrZw6SfMN+JvG6fe67jeibWXR9QpHhSc0KBclRfJ0wekwLEIS4Tyxel+8PcCvJf80Ng0ucHCBZtWGYePv0ilpA1kF+M4o9wZyZVhX2YrnPwpAevV6U2YSspf7uaCfXg3Ly+ncyF4kSs3vuS/nRVS0QWDXD4BKiwDuRBPTZGcBnuy/gLwrbIb9mRsG7qqjvaVXTONbtPAg0qGb8xvLXs9PT4Pw38B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>00FEEE6AFEA6300DE05307991F0A1965</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:00FEEE6AFEA6300DE05307991F0A1965</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEEA967122017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEF5878353007E05307991F0AB1C2</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_12426</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEEA967132017E05307991F0A6591</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZZb+o6EH7vr4jSxyokDoQlKkgcllt6oGXraeGlSp0JuE2cNHYC5ddfOzQU6HI5V0JCnoxnvln8zVwyJ/BNu8kYxJyEVOm16+pjCXlgVA2kWWWvrJVwrarVighpbrVSRFCqPlnVsqr0GEugRxl3KK+rpoFKmlHVUG2KynbJtI1aoVIqz1XlD8RMmBYqBUNV1oFPmZ25ratJTO3QYYTZ1AmA2Rzbk+agbwtN28kxqY3LLcrMYdxYch7Zuo4LLmDwfVzAYaBf6gc6ly6zJ2RBHZ7E8O7TZXX1/e5qtSqsioUwXuimYRi6UdOFjsvI4lxtnOWXwe1RL9yeWw4NKcGOTzaOBDUAvgxdpekvwpjwZfCNaaQjQ5rWYI01jEr0XNU/HGToTrR0ADJmjsaWDsqNjcGDGCgG5W7cq6vnp1Vwe3caO5R5YRywo/PfQQKagh9G4GosjyxHd7rFL9LVuARs9yj2E0ZSuJFtEjkYmDKMwSPrPmGi+VymZOVX1kz8SN5lgP+mLJf6PlYBXf8iO22yAMb/T83267W18sfxE2hEzbfnW+TP01XxagO1jjee3lTJPUqtl3oGYV95C2pX7vfzcbPueuv9UnsdxcF4gOcjfd51O/Rq4L5djKr92dKK/fZyZoy6rmGueeWq1/Ruhvej57hzzab9+6Y5bc+iqj8bDqJp7cX6HazOXq9b7hD65tXVKBjdTztPF/emO7ydpeNuaTOYvFTY9eqhb5Xm+uzibj5qz0K0mUQX0/B3+R/20GaLl83mwqWrh9ead9bqpE90/uCUO3PU8p6v7pa4/hHTfgyHwpwSJsnTM2CeH2V79NpKV9TL4T/Ti5QQV/MyVTuSHMU4UK425C1JLXYiCIi4tijm9mwY3U6na1Ur1aJVNIxKxxB/lVoNdY3mL9Qycw7aojiC2AqpR6QvybLb/vkZIA5sBtSFWEvDBC+BqT9YbDvcUXp0LB5HSBlMQ8HiCFBCUoOF1uIJI8/EnPlWkaJ4oyo3Ib+lt3HT4xAfcnftgLvHgElEQBK87HAmWpxxkYxXJ024jwqpU6CQiBEQSxa2zVLV0hkJIh8kVD0I3cSHQrSMstTobPtvag5mmXTcmWYv79vAjr/lORA6LpEKTMbyC0Qd4dMQQraVB/JtwKa5H3Buvpm4RD4wkVAeE7xFcvjpo09kg+yaRET02Jo8ohz3Tv3k659v6j+A0o/zsXPkpmTPbT5NxYAQ9NHIq/nqFF4LSZomWf0qkhpjYV5HulHRJ4ATwW9v0/AFqL4zoZ80Xnaojzzv5If4Er6kE+5wCES3KdnxhN1iAkzuFj3xTtanLi4HLkXeOKz5V7KWL1YQifjHLQXbWOoJ8VD8rcLY/SjXF7b2/Ig4xULBCV3Ikxwkb980BQ6FWSKYL4z3jX9l4Cvnh8JdkndYuOimp4TD918USWl11cE4TCjvtdVMsE+zGU7+FoH9ofTJTEbl77N5zb6dzQ+D/kQQXuCoO13y38oaydoFgypXgAxLXV2LVVM4p4s9Wn8H+InZO+Vmt9MsC2Zv7zM7qpWtXQIPIml8En+W7OX0+D00/gU=</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"00FEEEA9851D2019E05307991F0A80D6:6D53DCC6"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FEEEA967122017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FEEF5878353007E05307991F0AB1C2</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEE6AFEA6300DE05307991F0A1965</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140819_12428</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140819_12428</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140819_12428</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>IE</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>00FEEF5878363007E05307991F0AB1C2</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FEEF5878353007E05307991F0AB1C2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FEEF5878353007E05307991F0AB1C2</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZZb+o6EH7vr4jSxyokDoQlKkgcllt6oGXraeGlSp0JuE2cNHYC5ddfOzQU6HI5V0JCnoxnvln8zVwyJ/BNu8kYxJyEVOm16+pjCXlgVA2kWWWvrJVwrarVighpbrVSRFCqPlnVsqr0GEugRxl3KK+rpoFKmlHVUG2KynbJtI1aoVIqz1XlD8RMmBYqBUNV1oFPmZ25ratJTO3QYYTZ1AmA2Rzbk+agbwtN28kxqY3LLcrMYdxYch7Zuo4LLmDwfVzAYaBf6gc6ly6zJ2RBHZ7E8O7TZXX1/e5qtSqsioUwXuimYRi6UdOFjsvI4lxtnOWXwe1RL9yeWw4NKcGOTzaOBDUAvgxdpekvwpjwZfCNaaQjQ5rWYI01jEr0XNU/HGToTrR0ADJmjsaWDsqNjcGDGCgG5W7cq6vnp1Vwe3caO5R5YRywo/PfQQKagh9G4GosjyxHd7rFL9LVuARs9yj2E0ZSuJFtEjkYmDKMwSPrPmGi+VymZOVX1kz8SN5lgP+mLJf6PlYBXf8iO22yAMb/T83267W18sfxE2hEzbfnW+TP01XxagO1jjee3lTJPUqtl3oGYV95C2pX7vfzcbPueuv9UnsdxcF4gOcjfd51O/Rq4L5djKr92dKK/fZyZoy6rmGueeWq1/Ruhvej57hzzab9+6Y5bc+iqj8bDqJp7cX6HazOXq9b7hD65tXVKBjdTztPF/emO7ydpeNuaTOYvFTY9eqhb5Xm+uzibj5qz0K0mUQX0/B3+R/20GaLl83mwqWrh9ead9bqpE90/uCUO3PU8p6v7pa4/hHTfgyHwpwSJsnTM2CeH2V79NpKV9TL4T/Ti5QQV/MyVTuSHMU4UK425C1JLXYiCIi4tijm9mwY3U6na1Ur1aJVNIxKxxB/lVoNdY3mL9Qycw7aojiC2AqpR6QvybLb/vkZIA5sBtSFWEvDBC+BqT9YbDvcUXp0LB5HSBlMQ8HiCFBCUoOF1uIJI8/EnPlWkaJ4oyo3Ib+lt3HT4xAfcnftgLvHgElEQBK87HAmWpxxkYxXJ024jwqpU6CQiBEQSxa2zVLV0hkJIh8kVD0I3cSHQrSMstTobPtvag5mmXTcmWYv79vAjr/lORA6LpEKTMbyC0Qd4dMQQraVB/JtwKa5H3Buvpm4RD4wkVAeE7xFcvjpo09kg+yaRET02Jo8ohz3Tv3k659v6j+A0o/zsXPkpmTPbT5NxYAQ9NHIq/nqFF4LSZomWf0qkhpjYV5HulHRJ4ATwW9v0/AFqL4zoZ80Xnaojzzv5If4Er6kE+5wCES3KdnxhN1iAkzuFj3xTtanLi4HLkXeOKz5V7KWL1YQifjHLQXbWOoJ8VD8rcLY/SjXF7b2/Ig4xULBCV3Ikxwkb980BQ6FWSKYL4z3jX9l4Cvnh8JdkndYuOimp4TD918USWl11cE4TCjvtdVMsE+zGU7+FoH9ofTJTEbl77N5zb6dzQ+D/kQQXuCoO13y38oaydoFgypXgAxLXV2LVVM4p4s9Wn8H+InZO+Vmt9MsC2Zv7zM7qpWtXQIPIml8En+W7OX0+D00/gU=</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140819_12428</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00055_Account and User Create with AU 107_UserDelete SecondFull user 111_SUCCESS_P0" searchProperties="true" id="1f76a532-4e74-4356-92d7-956d7a78dc55"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="add9998a-002f-4bca-9c25-8a881b088f6e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="0895ad60-b3f0-4197-9087-f733faca21a7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AU");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="0a245c98-d58d-4f7a-802c-1d57f0072e87"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFULL" id="f24c80e3-32b6-4d32-a6c8-a2310256ed7c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - AdultFULL" id="ad94d521-93ea-434f-8e5f-9a2b3a2f846d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="f4cd3f58-1ccd-433a-a751-133da5770b97"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="0ba688e0-b023-4429-a0c7-8e8c46fcb199"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="ae160a61-0ccb-4b3f-9784-bc4ec5a773e4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I8EH3vr4jSxyrkziUqSNx2N7u9AW235aUyzgTMJg6NHW6/fu3QUKC0H/tJSMiT8cyZmeNjXzIUR5bXZAxSThKq+J26+mKhwLVdFGqOgUeaU6kZ2qhcRhrYIYDhlssVG6uKz1gGPmUcUV5XLcN0NKOqmbV7s+w5lme5Jdcxh6ryCCkToYVLyVCVZRxR5uVp62qWUi9BjDCPohiYx7E3aF5fecLTQwUmtXG5QZknTBsTzmeeruNSABiiCJdwEuuX+p7PZcC8ARlTxLMU3nIGrK6+7V0sFqWFXUrSsW4ZhqEbNV34BIyMz9XGWbEZAp+GyWbdRjShBKOIrJEEdQ18kgRKMxonKeGT+JPQpm4aMrQGS6xh06Hnqv6eIEd3YqQ9kClDGpsgswjWhxBSoBiUh75fV89Pm+Bm732KKAuTNGYH63+DBHQOUTKDQGNFZQW60yMeaVfjErDnUxxljMzhRtJkhjAw5S6FkCyvCBPkC5iSj19ZMvEjBcsA/8tYLvVdrAK6fqQ7HTIGxv/PzHbntYnyiKIMGtyZdtNXCJ6/X3fvanZ0MQznD6vf7P4hqecQdp03oLbjflsfknXLrbdNKISbdv9p9it7NWplw1itbw3X7z52OlkFXVTCn4sWZHi9rtq92fRmtLhozTpu7/c69W+pU4U47l79eMY9y71KL84unO+DvvWn+9OpTocYhR26wI+Pw5UBdk+3Wrb+wxmunprM/UVqS7t/yxcoeMpC3HPaQdhDbBSScjpE1eF87p9FPK5Ontt37nVsrqvjsFPD9feadmvYNxaSMMhGU8C8WEp6+B3lm5gX4l/Li7SQQAtzV28mNYpxoFxtyF1SWrxMCBAJPDHMzdowvnW73WbZ7ja7Qu5aXcO1jUqtZn4zmm6rbRcatEFxALGd0JDIXFJlN/z5GiCOPQY0gFSbJxmeAFO/iNhBHCk+7YvDkVAG94lQcUHrSaVCbTuOnTGsx040nS6TuctU5Sbht/Q2bYYc0n3pru1Jdx8wmRGQ+i4JzgTDGRe9eEXzjEdmaY5KFDJxA6RShD3Lqbo6I/EsAolUj5Mgi6A0m8zyzuhs829pCLPc2u/e5wfv07oOvxUtED4BkQ5M1tICMUY4cgeZRSGfFmxZuwUX4ZtZQOT5Ev3kKcEbJPuf3mki+bHliKjopT14MQvcW/eTt3/cqX8BSj/sxzZRMCc7aYvLVNwPQj0axTRfUem1lM3nWT6/ilTGVITXTd2o6APAmZC31X3yB6i+DaGfdLtsUR9k3tr38WV8QgcccYgF25R8ecLTYgBMPi18cUyWp75b9lKKvnFY8mO2diReIBLxl48U7GHpJ8x34m+RpMH7uI7E2skj6hTvCU7oWK7kPbL6hBQ4EWGJEL4k3Q1+LMCx5PvGbZO3WLhg0yjj8PkXRSpaXUUYJxnlfkfNDbsqm+Pkqxl4704fwuRK/nY1L9mnV/PT9dVA6F2M1K0v+W9njeR0waDKF0COpa4uxUtTJKfjHVV/A/hR2MtNo9Wq2IZp7gq75XRa2wbuVdL4YP5o2enp4Xlo/AU=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>00FEEE6A0BB73011E05307991F0A24DB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:00FEEE6A0BB73011E05307991F0A24DB</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEEA63EAE201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEE67603A300FE05307991F0A7B17</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124224</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEEA63EAF201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj6uQKwSiggSFbun2tpD20L6sjDOA28ROYyel++uPHRoKlPawR0JCnoxnvrn4mznmKImdoMs5ZIIwqg37bf2377VmqIlcw7H8uuFNwTOajls37FYDWS2/DtasqWtDznMYUi4QFW3dsWzPsJpSJ7QbgecEjl9rNJoPunYHGZempUrN0rVlElMelG7bep7RgCFOeEBRAjwQOBh3Ly8CqRmgCpPeOV6hLB1mnYUQaWCauBYBhjjGNcwS89jc0jmOeDAmc4pEnsGbz4i39be7Ly8vtRe3xrK56ViWZVotU+pEnMyP9M636jJEQzpjq/MJoowSjGLyBylQlyAWLNK68ZxlRCyST0zbpm0p0wYssYFtjx7p5ruDEt2BlrZAZhwZfIHsytgIZpABxaDdjoZt/eiwCq7uhhmifMayhO+c/w4S0AJilkJk8CqyCt3hFvekq3MMOBhSHOecFHCl2iRFGLh2k8GMLC8Il80Xca0sv7bk8keqLgP8N2U5NjexSujmnuz0yRy4+D8126zXysodinPo/EKTmIzvi/7jjzPWer75M+29nt2Ep03ebZcQNpVXoNblfjvvNuu6t94uyWf6fcpuvMYZbw5aZ+Hgdgrze5fUU7g9v0jCH5YdPQyE25osxL07X76O3aVljZ7qPZq1Js0TfoUnZtw9E8vGP9/ufDd9/D6cz3qXpG5dR+fej5cr20XX05FPHp2od23/4neL9Gd4+2TXL+NZ4hUPYehFYRE2z+9PzRYTpMHII2bn36yubZPJ3W32AJdoWXS9yVP7PabNGLaFFSWM8+kjYFEdVXsM+9qprBcSX9OLkpDImJWqQao4igugQu+oW4paglwSEIkCWczV2bJOB4NBw29YbtdVB6vuWn6rZZ9aXb9n+xUHrVDsQDxhdEaUL8Wyq/75GiBOAg40gswoWI4XwPUvLPaRQNqQjuTjYJRDyCSL27HDfP/Vs52iMbfnacN2Z04Kj9Oprl0xcU2vs+5MQLbN3a0t7h4BJikBRfCqw7lscS5kMp5RkYvYrhWoRiGXIyBTLBw4XrNucpKkMSioZsKiPIZaukjL1Jh89e8YCPNSOhqE5cv7NLDdb1UOpE5ElAJXsfRA1hH2DCG7CuTTgB1nM+DKfDePiHpgMqEiI3iFZPvTe5+oBlk3iYzo98n4t13hXqsffP3jTfMLUOZuPtaOooJsuK2mqRwQkj46VTWfUe25lhdFXtbPV9SYSfOmbVq+OQacS357DdkTUHNtwjxovKxR73hey7fx5WJBxwIJSGS3aeXxgN1iDFztFkP5TpaHLi5bLmXeBCzFPtlJLFcQhfjLLQUHWOlJ8Y38e2FZ9F6uPbY2/Mg45UIhCJ2rkxokr580BWbSLJHMx7JN4/sM7HO+LVwneY1FyG6a5gI+/6IpSmvrCGOWUzHs66Vgk2ZLnOI1heBd6YOZksrfZvOSfzqbJ5cXY0l4CdLXuuS/lQ1StgsGXa0AJZa2vpSrpnRO5xu0/gZwD7N3rV7Pdy3b3mR2x+v31gnciqTzQfxRspHT3ffQ+Rc=</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"00FEEEA985472019E05307991F0A80D6:DD540FF2"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FEEEA63EAE201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FEEE67603A300FE05307991F0A7B17</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEE6A0BB73011E05307991F0A24DB</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140819_124226</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140819_124226</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140819_124226</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>AU</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>00FEEE67603B300FE05307991F0A7B17</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FEEE67603A300FE05307991F0A7B17</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FEEE67603A300FE05307991F0A7B17</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj6uQKwSiggSFbun2tpD20L6sjDOA28ROYyel++uPHRoKlPawR0JCnoxnvrn4mznmKImdoMs5ZIIwqg37bf2377VmqIlcw7H8uuFNwTOajls37FYDWS2/DtasqWtDznMYUi4QFW3dsWzPsJpSJ7QbgecEjl9rNJoPunYHGZempUrN0rVlElMelG7bep7RgCFOeEBRAjwQOBh3Ly8CqRmgCpPeOV6hLB1mnYUQaWCauBYBhjjGNcwS89jc0jmOeDAmc4pEnsGbz4i39be7Ly8vtRe3xrK56ViWZVotU+pEnMyP9M636jJEQzpjq/MJoowSjGLyBylQlyAWLNK68ZxlRCyST0zbpm0p0wYssYFtjx7p5ruDEt2BlrZAZhwZfIHsytgIZpABxaDdjoZt/eiwCq7uhhmifMayhO+c/w4S0AJilkJk8CqyCt3hFvekq3MMOBhSHOecFHCl2iRFGLh2k8GMLC8Il80Xca0sv7bk8keqLgP8N2U5NjexSujmnuz0yRy4+D8126zXysodinPo/EKTmIzvi/7jjzPWer75M+29nt2Ep03ebZcQNpVXoNblfjvvNuu6t94uyWf6fcpuvMYZbw5aZ+Hgdgrze5fUU7g9v0jCH5YdPQyE25osxL07X76O3aVljZ7qPZq1Js0TfoUnZtw9E8vGP9/ufDd9/D6cz3qXpG5dR+fej5cr20XX05FPHp2od23/4neL9Gd4+2TXL+NZ4hUPYehFYRE2z+9PzRYTpMHII2bn36yubZPJ3W32AJdoWXS9yVP7PabNGLaFFSWM8+kjYFEdVXsM+9qprBcSX9OLkpDImJWqQao4igugQu+oW4paglwSEIkCWczV2bJOB4NBw29YbtdVB6vuWn6rZZ9aXb9n+xUHrVDsQDxhdEaUL8Wyq/75GiBOAg40gswoWI4XwPUvLPaRQNqQjuTjYJRDyCSL27HDfP/Vs52iMbfnacN2Z04Kj9Oprl0xcU2vs+5MQLbN3a0t7h4BJikBRfCqw7lscS5kMp5RkYvYrhWoRiGXIyBTLBw4XrNucpKkMSioZsKiPIZaukjL1Jh89e8YCPNSOhqE5cv7NLDdb1UOpE5ElAJXsfRA1hH2DCG7CuTTgB1nM+DKfDePiHpgMqEiI3iFZPvTe5+oBlk3iYzo98n4t13hXqsffP3jTfMLUOZuPtaOooJsuK2mqRwQkj46VTWfUe25lhdFXtbPV9SYSfOmbVq+OQacS357DdkTUHNtwjxovKxR73hey7fx5WJBxwIJSGS3aeXxgN1iDFztFkP5TpaHLi5bLmXeBCzFPtlJLFcQhfjLLQUHWOlJ8Y38e2FZ9F6uPbY2/Mg45UIhCJ2rkxokr580BWbSLJHMx7JN4/sM7HO+LVwneY1FyG6a5gI+/6IpSmvrCGOWUzHs66Vgk2ZLnOI1heBd6YOZksrfZvOSfzqbJ5cXY0l4CdLXuuS/lQ1StgsGXa0AJZa2vpSrpnRO5xu0/gZwD7N3rV7Pdy3b3mR2x+v31gnciqTzQfxRspHT3ffQ+Rc=</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140819_124226</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00056_Account and User Create with AU 107_UserDelete Standard Youth user111_SUCCESS_P0" searchProperties="true" id="38400d0d-1a54-4c0d-ae7c-b13005383e6c"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="6dca1e55-0084-46ee-a983-3f6550a25f41"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="550217ea-959c-4eb3-83b6-f086ccda8efd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AU");

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="aaffd1f4-52f0-4d2a-b076-5399ea111c34"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUser" id="0ba9215a-ed49-4f0c-8c71-b78573271080"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - StandardYouthUser" id="f17bb179-3b2f-431f-9898-7f83055a25c3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="e69b6532-003d-422d-8eed-a57387a525c2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="7288fb70-57bb-460f-a4bd-9d14dc34ee51"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="5c678ffc-edfe-4652-9f46-10198ab6edf2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7Pr/C4jx0jX6BgT2CGBNK4CS0xJM3JS0aWBFZry0aSDfTXH9nEBAjJoWeGGUbr1e63F3275wImse31hSBc0pRp/qCrP2PSxCS0oeEQhIymgy0DQhQaoWmbLraxhUNX13whcuIzISGTXd02raZhdgzLnVpfvKbtNTuNZst60rUHwoUyrVQapq6tkpgJr3Lb1XPOvBQKKjwGEyI8ibxJf3TrKU0P1pj03vkGZeWQ9yIpMw8A1MAEkThGDZQm4Bzs6Zxj4U3onEGZc/LiE4uu/nJ3uVw2lk4j5XNgm6YJTBcoHSzo/JPeO6svE+yzWbo5X0KWMopgTP/AEtSIyCjFWj+ep5zKKHnHtAUsszRtkBUykNVkn3Tw6qBCd6KlPZBcQENE0KqNBWRGOGGIaPeB39U/nVbBzd0ph0zMUp6Ig/PfQSKsIHGaEWyIOrIa3ekWj6Srd06Q5zMU54IW5HvZJhlERGhjTmZ0dUuFaj4stKr82kqoH627jKC/Kcs52MWqoIMj2RnQORHy/9Rst14bKw8wzkkvCi/aQZO5jmB+csuvw9/LRzw0I56b3QrCrvIG1LbcL+fDZt321sslfx0UD0FrPV7dXIH23ZCZd7/B9WdnHQDZEq1mHIb5kDzBabKYtQfBKKN/wGcAO9ePVuiEkeznN1/71uRzx/8nOPu5SPLJTTLibuvRfuJmm3+9n7b8wg1GY9wPLqBr5TTKv2C4Gv2ajfMoulgvvyH7nn4rHn/eoUV6vRwtsPUwnmRntvMjfcoGN+PJnSXIvTOaLbuvMe3GsC+sKWGSh78IkvWxbA9/oF2pekH5Mb2UEoqNWaXqZSVHCUmY1HvlrZJavFwREMWeKubmbJpXw+Gw73ZarbaiO3dothyz7brWldnvmIMvNQdtUBxAvEzZjJa+Spbd9M/HAFHiCcIw4UaR5igiQv/A4gBKqPksUI8jZYJMU8Xi1tzhixAXJv2zKqzYYaGDFzyCma1r31P5g/3g/ZkkfJ+73T3uDgiiGSUlwZcdLlSLC6mSsYBFLmOrUcAGI7kaAbxkYc9udlpA0CSLSQkVJCnOY9LIoqxKDRCbf9uASFTSYDitXt67gR1+q3OgdDAtFUQZywVRdSRHhpBTB/JuwLa9G3Btvp9jWj4wlVDJKdog2f/02idlg2ybREX0fDl5tmrcW/WTr7+9CT4ABQ7zsXWEC7rjtp6makAo+ujV1VzAxqKRF0Ve1a9dUiNX5oEFzDaYEJQrfltP09+Ega0JcNJ42aI+8LyV7+PLZcQmEkqSqG7TquMJu8WEiHK38NU7WZ26uOy5VHmTZCWPyS5jtYKUiD/cUpCHSj0lHqu/Zcrxa7mO2Nrxo+JUC4WkbF6eykGyfqcpUKrMUsV8Kd81fszAMef7wm2St1ik6qYwl+T9L1pJaV0dIpTmTPoDvRLs0myFU64z4r0qvTFTUfnLbF6Jd2fz4+h2oggvgfpWl/63skGrdkFEL1eACktXX6lVUzln8x1afwF4nNmbFx8x+34kvTfit5KdnB6+h96/</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>00FEEEA9854B2019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA9854B2019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEEA985572019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEEA9856D2019E05307991F0A80D6</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124247</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEEA985582019E05307991F0A80D6</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3fXxGlj1XIhUAhAiRKqJrT0gtQzqYvlesMxDRxQuwA7ddvOzQUKPSwj4SEPBnPrLl4zTQYikLLaTMGKScxVTy3qb6Uq2a9bFfKGvhmRbNrvqEhmGDNsJBVfjVty/dtVfEYy8CjjCPKm6plmLZm1DSzPjSrjm05FaNUqVWfVWUEKROmhUrJUJVVFFLm5G6bapZSJ0aMMIeiCJjDsTNo924doemgApPaaqxR5g7TVsB54ug6LvmAIQxxCceR3tB3dBo+cwZkShHPUvj06bOm+nl3uVyWluVSnE51yzAM3ajrQsdnZHqmtn4Vl8H36CRenzuIxpRgFJIPJEH1gAexr7TDaZwSHkRHTJu6aUjTGqywhk2bnqn6l4Mc3YmWdkCmDGksQGZhrA8TSIFiUJ76XlM9O62C67vDFFE2idOI7Z3/DhLQBYRxAr7GisgKdKdbPJCuVgOw41EcZows4E62SYIwMOUhhQlZ3RImms9nSl5+ZcXEjxRdBvhvytLQt7EK6PqB7LhkCoz/n5pt12ttZYTCDFqXz2l4Y7vnk9FT5TF4q10+Dise79vBctrMIWwrr0Ftyv153m/WTW99XuqgO7Iybz+607tR+bfbu34qV5M5TWtLNg8ea+P5eX8VTdrJ7RyNYVXvoFDnD4NZ0nm+fsi6PZpUOt54HPmj+6fyr/RpgMc3Q7PXe3t8nbq86jGIarcDsOaEWPjNbpddd7LovS//+Xf64aFxAsEd3KDMXnXGs9nY751no1n/NX4IL35dv113r0b0BrnXvfFz+BjOvOZXTNsx7AoLShhkrzPAvDjK9vBc5UrUC/Gf6UVKiK9NclUnkRzFOFCutuQtSS1OJgiI+I4o5vpsGFfdbrddr1WqrqC7eteolI2Let28Mto1w60WHLRGsQexE9MJkb4ky67752eAOHIYUB9SbRFnOACm/mDRRRwpHu2LxxFTBsNYsLjJqBG9BfPaLJsu0HIyC2sfFIJFVVXuYn5P79P2hEO6S931HeruAyYJAcnvssGZ6HDGRS7maJHx0CwtUIlCJiZAKknYsexaRWckSkKQSPUo9rMQSkmQ5JnR2frf0hBmubTfHeYP72hc+9+KFAgdn0gFJmO5BFFGODCD7CKQowFb1nbAhfl25hP5vkQ+eUrwGsnup682kf2x6RER0Utn8GIWuDfqJ1//flP/AZS+n4+NI39BttwWw1TMB8EeraKac1Sal7LFIsvrdyGZMRXmdVM3LvQB4EzQ2/swfgOqb0zoJ02XDeo9zxv5Lr6MB3TAEYdIdJuSH09YLQbA5GrhiWeyOnVv2XEp8sZhxQ/JOqHYQCTiH5cU7GCpJ8QP4m8Zp/5XuQ7Y2vIj4hT7BCd0Kk9yjrwfaQocC7NEEF+cbhs/ZOCQ813hJskbLFx002vG4fgXRTJaU0UYxxnlnqvmgm2WzXHy9wScL6VvZnIm/xzNK3Z0NP/u3Q4E30VI3eiS/1bWSN4uGFS5AeRYmupKbJrCOZ1usfonwMPEbl/+ROy7kbS+ib9LtnK6/x5afwA=</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"00FEEF202F61300BE05307991F0A2CCC:1E398714"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FEEEA985572019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FEEEA9856D2019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA9854B2019E05307991F0A80D6</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140819_124249</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140819_124249</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140819_124249</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>AU</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>00FEEEA9856E2019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FEEEA9856D2019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FEEEA9856D2019E05307991F0A80D6</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3fXxGlj1XIhUAhAiRKqJrT0gtQzqYvlesMxDRxQuwA7ddvOzQUKPSwj4SEPBnPrLl4zTQYikLLaTMGKScxVTy3qb6Uq2a9bFfKGvhmRbNrvqEhmGDNsJBVfjVty/dtVfEYy8CjjCPKm6plmLZm1DSzPjSrjm05FaNUqVWfVWUEKROmhUrJUJVVFFLm5G6bapZSJ0aMMIeiCJjDsTNo924doemgApPaaqxR5g7TVsB54ug6LvmAIQxxCceR3tB3dBo+cwZkShHPUvj06bOm+nl3uVyWluVSnE51yzAM3ajrQsdnZHqmtn4Vl8H36CRenzuIxpRgFJIPJEH1gAexr7TDaZwSHkRHTJu6aUjTGqywhk2bnqn6l4Mc3YmWdkCmDGksQGZhrA8TSIFiUJ76XlM9O62C67vDFFE2idOI7Z3/DhLQBYRxAr7GisgKdKdbPJCuVgOw41EcZows4E62SYIwMOUhhQlZ3RImms9nSl5+ZcXEjxRdBvhvytLQt7EK6PqB7LhkCoz/n5pt12ttZYTCDFqXz2l4Y7vnk9FT5TF4q10+Dise79vBctrMIWwrr0Ftyv153m/WTW99XuqgO7Iybz+607tR+bfbu34qV5M5TWtLNg8ea+P5eX8VTdrJ7RyNYVXvoFDnD4NZ0nm+fsi6PZpUOt54HPmj+6fyr/RpgMc3Q7PXe3t8nbq86jGIarcDsOaEWPjNbpddd7LovS//+Xf64aFxAsEd3KDMXnXGs9nY751no1n/NX4IL35dv113r0b0BrnXvfFz+BjOvOZXTNsx7AoLShhkrzPAvDjK9vBc5UrUC/Gf6UVKiK9NclUnkRzFOFCutuQtSS1OJgiI+I4o5vpsGFfdbrddr1WqrqC7eteolI2Let28Mto1w60WHLRGsQexE9MJkb4ky67752eAOHIYUB9SbRFnOACm/mDRRRwpHu2LxxFTBsNYsLjJqBG9BfPaLJsu0HIyC2sfFIJFVVXuYn5P79P2hEO6S931HeruAyYJAcnvssGZ6HDGRS7maJHx0CwtUIlCJiZAKknYsexaRWckSkKQSPUo9rMQSkmQ5JnR2frf0hBmubTfHeYP72hc+9+KFAgdn0gFJmO5BFFGODCD7CKQowFb1nbAhfl25hP5vkQ+eUrwGsnup682kf2x6RER0Utn8GIWuDfqJ1//flP/AZS+n4+NI39BttwWw1TMB8EeraKac1Sal7LFIsvrdyGZMRXmdVM3LvQB4EzQ2/swfgOqb0zoJ02XDeo9zxv5Lr6MB3TAEYdIdJuSH09YLQbA5GrhiWeyOnVv2XEp8sZhxQ/JOqHYQCTiH5cU7GCpJ8QP4m8Zp/5XuQ7Y2vIj4hT7BCd0Kk9yjrwfaQocC7NEEF+cbhs/ZOCQ813hJskbLFx002vG4fgXRTJaU0UYxxnlnqvmgm2WzXHy9wScL6VvZnIm/xzNK3Z0NP/u3Q4E30VI3eiS/1bWSN4uGFS5AeRYmupKbJrCOZ1usfonwMPEbl/+ROy7kbS+ib9LtnK6/x5afwA=</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140819_124249</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00058_Account and User Create with CA 107_UserDelete SecondFull user 111_SUCCESS_P0" searchProperties="true" id="31cdeaa3-5181-44dc-abe0-ad66b3671556"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="9d041c88-4500-479b-8fb1-2f8999ca0b72"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="09e2744f-2eef-4e39-adcf-d915e9e15405"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CA");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="0d80243a-1726-4ff0-9110-31edeeefe405"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFULL" id="aaa0bacc-5bd2-4832-8f7e-6a1e1f8cbafe"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - AdultFULL" id="fca5cd88-b37a-4450-81db-9852b2c923ef"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="889342b5-fe3d-4f4a-aee0-236343888771"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="ea828be3-3ed7-40c2-b0b0-46c7df53718b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="875ca94b-4813-428e-b1b6-5514d12833a8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZZb+o8EH3vr4jSRxSysSRRQaIst6jrBbq+XBlnALeJHWIHaH/9tUNDgS4f95OQkCfjmTMzx8c+4SiOnKDFOaSCMKr1Ow39D+DQrjvexLD8Sd2oOGAb46qNjRp4CDmVSr2CfV3rc55Bn3KBqGjojmVXDMszbH9k14KKG1i1suvWnnTtDlIuQ0uXsqVrqziiPMjTNvQspQFDnPCAohh4IHAwbF1eBNIzQAUmvXmyRpknTJszIZLANHE5BAxRhMuYxeaJueNzEvJgSKYUiSyF95whb+jve5fLZXnpllk6NR3LskzLN6VPyMn0WG8eFZsh7NMJW6/biDJKMIrIG1KgLkHMWKi1oilLiZjF34S2TdtSoQ1YYQPbFXqsmx8JcnQHRtoBmXJk8Bmyi2ADmEAKFIN2O+g39OPDJrjeO0oR5ROWxnxv/W+QgC4gYgmEBi8qK9AdHvGLdjVPAAd9iqOMkwVcKZokCAPXblKYkNUF4ZJ8Idfy8WsrLn+kYBngfxnLibmNVUI3v+hOh0yBi/8zs+15raPcoSiDZime3Nw+u29nYjbiD6Tt4Um0HIeD+5tuI4ew7bwGtRn3+3qfrBtuvW96fet1RcfzPPp8Z4fms/swLyV2vBw7/drp49kgvWOD3pWzOL13shIyq8un8+v78W/bOv91Vbu4uj6rDS9Kkvv4pnR/RCKrU3V6Vqm3ujV/9UP/d+KN0W1iLp660eO8dznMcNea39xFdZa8IFgOz7zx/KzdpWgkpskAu2x5/Tp7wCX+cuT6bFjNvMfKefjWrtQumOM1PmrarmHXWEjCMBs/AxbFUtGj39F6cl5I/CwvykJCY5K7BonSKC6ACr2pdilpCTIpQCQM5DDXa8vqdbu9qlf3aq5rWfWuVXWtuu/bPat1aredQoPWKPYgthmdEJVLqeyaPz8DxHHAgYaQGguW4Rlw/YeIHSSQ1qcDeTgY5TBiUsVt359VBJkSyqar6cIhMRX+tPoy1rUrJq7pddqaCEh3pdvfke4BYJIQUPquCM4lw7mQvZijRSYiu7xAZQqZvAFSJcKBU/GqJidxEoFCasYszCIoJ7Mk74zJ1/+OgTDPrYPuKD9439a1/61ogfQJiXLgqpZTkGOET3eQE1SLQr4t2HG2Cy7Ct7KQqPMl+ylSgtdIdj990ETxY8MRWdGf9vCPXeDeuB+8/fNO8wdQ5n4/NonCBdlKW1ym8n6Q6tEspjlH5Xk5WyyyfH51pYypDG/aplU3h4AzKW+vI/YC1NyEMA+6XTao9zJv7Lv4MjGjQ4EExJJtWr484GkxBK6eFn15TFaHvlt2Usq+CViJr2ztSL5AFOIfHyk4wMpPmm/k35Kl4ce4voi1lUfWKd8TgtCpWql75PUbUmAmwxIpfCzdDv5VgK+S7xo3Td5gEZJN40zA9180pWgNHWHMMir6HT03bKtsjlO8JhB8OH0Kkyv5+9W84t9ezQ+XF0OpdzHSN77kv50NktMFg65eADmWhr6SL02ZnE63VP0d4Cdh77Zqbs/yJdlOt4W9etp2Nw3cqaT5yfzZstXT/fPQ/As=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>00FEEEA63F09201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA63F09201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEF5878633007E05307991F0AB1C2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEEA63F1B201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_12435</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEF5878643007E05307991F0AB1C2</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4jxkjG0yMPYEZAqSlza1AkiYvHSEvoNiWiCVz+/WVTEyAkBx6ZphhtF7tfnvRt3smcBKXg6YQkErKmdFt180/buhVCdRCq1LxapZLXM8aulCxAHtDpxyW3XBom0ZXiAy6TEjMZN0s245r2TXL8QfOaeBWArtWOq35T6ZxD6lQppVKSd1aJDETQe62bmYpCzgWVAQMJyACSYJ+8+oyUJoBLjCZjbM1ytxh2phIOQ0QIqUQCMQxKRGeoDO0o3MWiqBPxwzLLIVXn6Gom6935/N5aV4p8XSMyrZtI9tHSicUdPzVbHwpLkPYZSO+Prcw44wSHNMV1qCuQE54aDTjMU+pnCQfmHaQY2vTFiyIRRyXfTXRm4Mc3ZGWdkCmAltigp3CWA9GkAIjYNz1unXz63EVXN8dpJiJEU8TsXf+N0jAZhDzKYSWKCIr0B1v8UC6GmdAgi4jcSboDK51m0wxAWHcpjCii0sqVPOFwsjLbyyE+tGiy4D8S1nO0DZWBR0dyE6bjkHI/1Oz7XqtrdzjOIPGeOH1Tjochuj6pu1GvavopH1/XZPL23k9h7CtvAa1Kffreb9ZN731eunBX30b3d/1O8PbxO2dtsZ3+Od3P0pn/HR5Ermo+YOiR+JdP2eYNcFpr56Q9+T5wgf/5PfPOzdxI/nk4bvzZjT6svpZRbfS4fRlMKs4lXn7YdW8//HrOsoey88PyxuZ2Kz26zvuDibTcot9y+zqt+yhQ7LBzG7xLnm8EK1fsT96uZy+fPERnKCnSN7JyJ5KurqsPtbfYtqOYVdYUEI/Gz4DkcVRt0e3bVyoemH5Ob1oCQ2tUa4aTDVHCQlMmg19S1NLkCkComGgirk+2/ZFp9NpnlYunHNFd+cdu1qxPd93Luxm9bxVKThojWIPYouzEdW+NMuu++dzgCQJBLAQUmvGMzIBYX5isY0lNrqspx4HZwIGXLF4NRpFabxKJR55TjR/psNlYlfiGjGNay5v2E3aHElId6nb36HuHhA6paD5XTe4UB0upMrFC55lMnZKM1xikKkJkGoSDspurYoETaYxaKQo4WEWQ2k6meaZQWL9X7YwEbm01xnkD+/DuPa/FSlQOiHVCkLHcg6qjPBuBpWDahHIhwGXy9sBF+abWUj1+1L5lCklayS7n97aRPfHpkdURH9a/T9OgXujfvT19zfRJ6DQfj42jsIZ3XJbDFM1HxR7NIpqvuDSSymbzbK8fp5mxlSZRw6yPdQHkil6Ww54BAxtTKCjpssG9Z7njXwXXyYnrC+xhER1m5Efj1gt+iD0atFVz2Rx7N6y41LlTcJCHpK1YrWBaMSfLikkIFpPiW/V35yn4Vu5Dtja8qPiVPuEpGysT3qOLD9oCsKVWaqIj6fbxg8ZOOR8V7hJ8gaLVN00zCR8/MXQjFY3MSE8Y7LbNnPBNsvmOOVyCsGb0jszOZO/juaF+HA0/7667Cu+S7C50aX/rWzRvF0ImHoDyLHUzYXaNJVzNt5i9VeAh4nd9j8j9t1IGu/E7yVbOd1/D42/</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"00FEEEA9679A2017E05307991F0A6591:9432C9DC"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FEEF5878633007E05307991F0AB1C2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FEEEA63F1B201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA63F09201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140819_12438</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140819_12438</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140819_12438</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>CA</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>00FEEEA63F1C201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FEEEA63F1B201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FEEEA63F1B201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4jxkjG0yMPYEZAqSlza1AkiYvHSEvoNiWiCVz+/WVTEyAkBx6ZphhtF7tfnvRt3smcBKXg6YQkErKmdFt180/buhVCdRCq1LxapZLXM8aulCxAHtDpxyW3XBom0ZXiAy6TEjMZN0s245r2TXL8QfOaeBWArtWOq35T6ZxD6lQppVKSd1aJDETQe62bmYpCzgWVAQMJyACSYJ+8+oyUJoBLjCZjbM1ytxh2phIOQ0QIqUQCMQxKRGeoDO0o3MWiqBPxwzLLIVXn6Gom6935/N5aV4p8XSMyrZtI9tHSicUdPzVbHwpLkPYZSO+Prcw44wSHNMV1qCuQE54aDTjMU+pnCQfmHaQY2vTFiyIRRyXfTXRm4Mc3ZGWdkCmAltigp3CWA9GkAIjYNz1unXz63EVXN8dpJiJEU8TsXf+N0jAZhDzKYSWKCIr0B1v8UC6GmdAgi4jcSboDK51m0wxAWHcpjCii0sqVPOFwsjLbyyE+tGiy4D8S1nO0DZWBR0dyE6bjkHI/1Oz7XqtrdzjOIPGeOH1Tjochuj6pu1GvavopH1/XZPL23k9h7CtvAa1Kffreb9ZN731eunBX30b3d/1O8PbxO2dtsZ3+Od3P0pn/HR5Ermo+YOiR+JdP2eYNcFpr56Q9+T5wgf/5PfPOzdxI/nk4bvzZjT6svpZRbfS4fRlMKs4lXn7YdW8//HrOsoey88PyxuZ2Kz26zvuDibTcot9y+zqt+yhQ7LBzG7xLnm8EK1fsT96uZy+fPERnKCnSN7JyJ5KurqsPtbfYtqOYVdYUEI/Gz4DkcVRt0e3bVyoemH5Ob1oCQ2tUa4aTDVHCQlMmg19S1NLkCkComGgirk+2/ZFp9NpnlYunHNFd+cdu1qxPd93Luxm9bxVKThojWIPYouzEdW+NMuu++dzgCQJBLAQUmvGMzIBYX5isY0lNrqspx4HZwIGXLF4NRpFabxKJR55TjR/psNlYlfiGjGNay5v2E3aHElId6nb36HuHhA6paD5XTe4UB0upMrFC55lMnZKM1xikKkJkGoSDspurYoETaYxaKQo4WEWQ2k6meaZQWL9X7YwEbm01xnkD+/DuPa/FSlQOiHVCkLHcg6qjPBuBpWDahHIhwGXy9sBF+abWUj1+1L5lCklayS7n97aRPfHpkdURH9a/T9OgXujfvT19zfRJ6DQfj42jsIZ3XJbDFM1HxR7NIpqvuDSSymbzbK8fp5mxlSZRw6yPdQHkil6Ww54BAxtTKCjpssG9Z7njXwXXyYnrC+xhER1m5Efj1gt+iD0atFVz2Rx7N6y41LlTcJCHpK1YrWBaMSfLikkIFpPiW/V35yn4Vu5Dtja8qPiVPuEpGysT3qOLD9oCsKVWaqIj6fbxg8ZOOR8V7hJ8gaLVN00zCR8/MXQjFY3MSE8Y7LbNnPBNsvmOOVyCsGb0jszOZO/juaF+HA0/7667Cu+S7C50aX/rWzRvF0ImHoDyLHUzYXaNJVzNt5i9VeAh4nd9j8j9t1IGu/E7yVbOd1/D42/</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140819_12438</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00059_Account and User Create with CA 107_UserDelete Standard Youth user111_SUCCESS_P0" searchProperties="true" id="7aa4d890-e964-40f4-aea5-bbefb6dd5219"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="8160eba7-7e0f-4995-aa22-5182d2c999f7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="338ca384-06b7-4cb4-88d5-0f35bf5f4e2f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CA");

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="b5dc3bc0-7334-4acf-988b-5bb6dd8833a1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUser" id="a61c1de7-7f97-48b7-9856-321191d8ef06"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - StandardYouthUser" id="76cbbb72-dd22-4337-946c-58fa4efe7fa8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="218ac0b7-bab4-417a-a698-07d6bfd81d8d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="bd233897-53dd-453b-998a-c0f6e99300fd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="7cbc4155-e987-4e46-8218-07fd3b46db05"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtb+I4EP6+vyLKflyFOAkUiApSttBr7oC2QNndflm5ziS4JA7EDi/99WeHhgKlPfakqsiT8cwzL35mLjlOYtv1OIdM0JRpfqel/66FTUBOCIb9FNSMatWpGg0nxEbVQbgR4uCphgJd8znPwWdcYCZauo2sqoEahtUcWxdu1XEdu4Ka6FHXJpBxaVqqVJCurZOYcbdw29LzjLkp5pS7DCfAXUHckdfvuVLTxSUmvX25RVk4zNpTIeauaZJKAATimFRImpiX5oHOZcDdEY0YFnkGrz4D3tJf765Wq8rKqaRZZNoIIRM1TakTcBp91dtfyssQ+CxMt+crzFJGCY7pC1ag+iCmaaB5cZRmVEyTD0xbpoWUaQPWxCBWlX3VzTcHBbozLR2AzDg2+BRbpbEhhJABI6A9DP2W/vW8Cm7vjjPMeJhmCT86/xkkYEuI0zkEBi8jK9Gdb/FEutqXQFyfkTjndAkD1SZzTIBrdxmEdN2jXDZfwLWi/Nqayz9adhmQPynLpbmPVUI3T2SnQyPg4v/UbL9eWysTHOfQvv9pzvLJ8n4xNr8PHkfzG/zj7rHbQM7CbxUQ9pW3oHblfj0fN+uut14vjWfI7s7+WtSbyx//jP2oC9eDQfQ9atQH0+imQcVg5JiTxUs8nZhDcjNJhlCr0l/3SS96eMqSX7P16nkeN6fDixfxJaqBf/2tz6zbZ9vCVVJfRlbvOoBvf5EfSy9x5vdpmE763kW2vpute73bO+/bz0FuTfvwsnn6ZSfCix8Gm/s6Dxdf7M7Vpg/p8GH26P3dfajeiPvWW0z7MRwKS0oY5U/PQER5VO3hd7RrWS8sPqcXJaGBERaq7lxxFBfAhN5WtxS1uLkkIBq4spjbM0LX3W73wmt4XcdBqNlFNQfVm03rGnlezWmUHLRFcQTxKmUhVb4Uy27753OAJHE5sAAyY5nmZApc/8RiBwus+WwoH0fKOIxTyeIWXaE0IlHysrIJya0NAvFcvaAvujZIxS27zbxQQHZI3c0D6h4CoXMKit9Vg3PZ4VzIXCzwMhexVVniCoNcToBMkbBrVxs1k9NkHoNCaiZpkMdQmU/nRWZMvv21DUx4IR12x8XD+zCu429lCqROQJUCV7F8B1lGODGD7DKQDwO27f2AS/NeHlD1vmQ+RUbJFsnhp7c2Uf2x6xEZ0e+r0W+rxL1TP/v6+5vmJ6DM43zsHAVLuue2HKZyPkj2aJfVXODKopIvl3lRv7pixkyaNy0T1c0RkFzS22aczoCZOxPmWdNlh/rI805+iC8XUzYSWEAiu00rjmesFiPgarXw5TNZn7u3HLiUeROwFqdkV7HcQBTiT5cU4hKlJ8V38meVZm+Bn7K150fGKfcJQVmkTmqObD5oCpJKs1QSX5rtGz9l4JTzQ+EuyTssQnbTUy7g4y+aYrSWjglJcyb8jl4I9lm2wCk2c3DflN6ZKZj8dTSv+Yej+We/N5J8l2B9p0v/W9mgRbsQ0NUGUGBp6Wu5aUrnLNpj9VeAp4hd/peMjjr7xG41L2q7BB5E0n4nfi/Zy+nxe2j/Cw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>00FEEE6AFEE5300DE05307991F0A1965</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:00FEEE6AFEE5300DE05307991F0A1965</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEE6A8AE33009E05307991F0AA538</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEF2143573015E05307991F0A40F4</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124331</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEE6A8AE43009E05307991F0AA538</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4jx3jKxd7AjOES+smkBQSaPvSUeQ1qLElYslc+usrmZgAITn0zDDYWq92v73o015wlCZO0OYcMkEY1cJuU/+F6w8PllOvGXYttg3Pj+uGX8W20ajWolq95j84DVvXQs5zCCkXiIqm7li2Z1gNw/bv7FrguYHrVRzX+qlrE8i4NC1VKpaurdOE8qBw29TzjAYMccIDilLggcDBuD24DqRmgEpMeutii7JwmLXmQiwC08SVCDAkCa5glpoX5oHORcSDMZlRJPIMnn1GvKk/712tVpWVW2HZzHQsyzIt35Q6ESezj3rrQ7kZopDGbLvuIMoowSghf5ACNQAxZ5HWTmYsI2KevmHaNm1LmTZgjQ1se/Sjbr44KNCdaekAZMaRwefILo2NIIYMKAbtfhQ29Y/nVXC79y5DlMcsS/nR+t8gAV1CwhYQGbyMrER3vsUT6WpdAA5CipOckyUMVZssEAau3WYQk/U14bL5Iq4V5dfWXP5I2WWA/6UsF+Y+VgndPJGdLpkBF/+nZvv12lqZoCSHVn2yYtPa5eTqt/c9Z6E9Wq1uvtQYsb/+aBYQ9pW3oHblfl4fN+uut543fRkMQzrA/ufNeBpPxacfjcl93b+fRI2YOEPbI7P7Gl/1GtMYIXRljYZ9blnDJLqN2+GtNQYPIda/8rvZVf3zh9Sl374PeLsXTp3LtObMkkFWd3/+6dAfrud+6jxG7Jvbv2x8HVP4Od1Q4Yqe/20wHI17697sqY8/XT/Cl/Bq6C7gA/go7i46fbxaT4Ysmm74Y/Mlpv0YDoUlJYzzh9+ARblU7RF2tb6sFxLv04uSkMiIC9VgoTiKC6BCb6ldilqCXBIQiQJZzO3asvq9Xt+xPbdady272rOqrlX3fbtvtT2r75UctEVxBLHDaEyUL8Wy2/55HyBOAw40gsxYshzPgevvWOwigbSQjuThYJTDHZMsbqfLTbZ8SuWJb6R21ZJvourZ68jVtSETN/Qma8cCskPu9g+4ewSYLAgoglcdzmWLcyGT8YSWuUjsyhJVKOTyCsgUCweO16ianKSLBBRUM2VRnkBlMV8UqTH59ukYCPNCOurdFSfvzcCOv5U5kDoRUQpcxXIJso5w4hJyykDeDNhx9gMuzbfziKgDJhMqMoK3SA4/vfSJapBdk8iIfnXGv+wS90797O2vd5rvgDKP87FzFC3JntvyNpUXhKSPVlnNJ1R5quTLZV7Ur66oMZPmTdu06uYYcC75bXPHHoGaOxPmWdfLDvWR5538EF8u5nQskIBUdptWLM+YLcbA1WwRynOyPndwOXAp8yZgLU7JOokcQRTid6cUHGClJ8W38rFiWfRSrhO29vzIOOVAIQidqZW6SDZvNAVm0iyRzMeyfeOnDJxyfijcJXmHRchuesgFvP1FU5TW1BHGLKci7OqFYJ9mC5xis4DgRemVmYLKn+/mNX/zbv4+uB5LwkuRvtMl/61skKJdMOhqBCiwNPW1HDWlczrbo/VngK+YvVdry39J6VZ3n9ltv1bdJfAgktYr8WvJXk6Pz0PrLw==</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"00FEEF21436B3015E05307991F0A40F4:44920F0E"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FEEE6A8AE33009E05307991F0AA538</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FEEF2143573015E05307991F0A40F4</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEE6AFEE5300DE05307991F0A1965</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140819_124333</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140819_124333</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140819_124333</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>CA</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>00FEEF2143583015E05307991F0A40F4</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FEEF2143573015E05307991F0A40F4</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FEEF2143573015E05307991F0A40F4</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4jx3jKxd7AjOES+smkBQSaPvSUeQ1qLElYslc+usrmZgAITn0zDDYWq92v73o015wlCZO0OYcMkEY1cJuU/+F6w8PllOvGXYttg3Pj+uGX8W20ajWolq95j84DVvXQs5zCCkXiIqm7li2Z1gNw/bv7FrguYHrVRzX+qlrE8i4NC1VKpaurdOE8qBw29TzjAYMccIDilLggcDBuD24DqRmgEpMeutii7JwmLXmQiwC08SVCDAkCa5glpoX5oHORcSDMZlRJPIMnn1GvKk/712tVpWVW2HZzHQsyzIt35Q6ESezj3rrQ7kZopDGbLvuIMoowSghf5ACNQAxZ5HWTmYsI2KevmHaNm1LmTZgjQ1se/Sjbr44KNCdaekAZMaRwefILo2NIIYMKAbtfhQ29Y/nVXC79y5DlMcsS/nR+t8gAV1CwhYQGbyMrER3vsUT6WpdAA5CipOckyUMVZssEAau3WYQk/U14bL5Iq4V5dfWXP5I2WWA/6UsF+Y+VgndPJGdLpkBF/+nZvv12lqZoCSHVn2yYtPa5eTqt/c9Z6E9Wq1uvtQYsb/+aBYQ9pW3oHblfl4fN+uut543fRkMQzrA/ufNeBpPxacfjcl93b+fRI2YOEPbI7P7Gl/1GtMYIXRljYZ9blnDJLqN2+GtNQYPIda/8rvZVf3zh9Sl374PeLsXTp3LtObMkkFWd3/+6dAfrud+6jxG7Jvbv2x8HVP4Od1Q4Yqe/20wHI17697sqY8/XT/Cl/Bq6C7gA/go7i46fbxaT4Ysmm74Y/Mlpv0YDoUlJYzzh9+ARblU7RF2tb6sFxLv04uSkMiIC9VgoTiKC6BCb6ldilqCXBIQiQJZzO3asvq9Xt+xPbdady272rOqrlX3fbtvtT2r75UctEVxBLHDaEyUL8Wy2/55HyBOAw40gsxYshzPgevvWOwigbSQjuThYJTDHZMsbqfLTbZ8SuWJb6R21ZJvourZ68jVtSETN/Qma8cCskPu9g+4ewSYLAgoglcdzmWLcyGT8YSWuUjsyhJVKOTyCsgUCweO16ianKSLBBRUM2VRnkBlMV8UqTH59ukYCPNCOurdFSfvzcCOv5U5kDoRUQpcxXIJso5w4hJyykDeDNhx9gMuzbfziKgDJhMqMoK3SA4/vfSJapBdk8iIfnXGv+wS90797O2vd5rvgDKP87FzFC3JntvyNpUXhKSPVlnNJ1R5quTLZV7Ur66oMZPmTdu06uYYcC75bXPHHoGaOxPmWdfLDvWR5538EF8u5nQskIBUdptWLM+YLcbA1WwRynOyPndwOXAp8yZgLU7JOokcQRTid6cUHGClJ8W38rFiWfRSrhO29vzIOOVAIQidqZW6SDZvNAVm0iyRzMeyfeOnDJxyfijcJXmHRchuesgFvP1FU5TW1BHGLKci7OqFYJ9mC5xis4DgRemVmYLKn+/mNX/zbv4+uB5LwkuRvtMl/61skKJdMOhqBCiwNPW1HDWlczrbo/VngK+YvVdry39J6VZ3n9ltv1bdJfAgktYr8WvJXk6Pz0PrLw==</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140819_124333</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00061_Account and User Create with GB 107_UserDelete SecondFull user 111_SUCCESS_P0" searchProperties="true" id="8c015ac8-d20b-4575-8b4a-06a6cb74e64a"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="d645b3fe-11d0-4545-8d34-150fd11684dc"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="46a2853a-5a5b-4e9f-8100-0fe06f7f2c5c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","GB");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="5570ee99-fd8e-4452-b65c-cee28e362dbf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFULL" id="4722ce2a-67ae-494c-8d2b-567ad111db0b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - AdultFULL" id="1dbd6c92-125f-40ea-a237-3aafff82909a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="9bd7a715-5f61-4d5e-b92b-46dba382a785"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="b737e706-3127-429a-81f1-6fb30ae9aa24"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="06d99bb2-8c9c-43dc-a68f-3e760eef5030"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH1HIBx8hUUGiUHrTbbvdQrttX1bGGcAlsUPsBNpff+3QUKC0l70SEvJkPHNm5vjYJxzFkeN3OYdUEEa1oN/W/7hhMwwdLzQm4I6Nuo3BGI8bNaNWA9zE45Zre46uBZxnEFAuEBVt3bHsumG1DNsb2U2/XvMbVtWy7Cddu4eUy9DSpWrp2iqOKPeLtG09S6nPECfcpygG7gvsD7tXl7709FGJSe+crFEWCdPOTIjEN01cDQFDFOEqZrF5Yu74nITcH5IpRSJL4S1nyNv6297lclld1qosnZqOZVmm5ZnSJ+Rk+l3vfCs3QxjQCVuve4gySjCKyCtSoK5AzFiodaMpS4mYxZ+Etk3bUqENWGED23X6XTffExTojoy0AzLlyOAzZJfBbmECKVAM2t1t0Na/HzfB9d5RiiifsDTme+u/gwQ0h4glEBq8rKxEd3zEA+3qnAD2A4qjjJMcrhVNEoSBazcpTMjqknBJvpBrxfi1FZc/UrIM8N+M5cTcxiqhmwe60ydT4OL/zGx7Xuso9yjKoOPd0YuZcBfLyZP5Shus9hBb/1RWhNz9ahcQtp3XoDbjflvvk3XDrbdNg9N5Hpm/7xI0XbUu4xevTx/zq5sVe17Wu89oGDy0Lobp6n4YNFnjoldJGq8XT+eP5y8m3DTswdOEuyTw0pxZQfDtfhn05zc/oko4ecofZo82a1b6izGfsUE/eb2fL23n0SKIsDCu9MFt/G6NJ79yex6cZ+757/j+8nx0yrxzUYnh57eHW/xM3dHoekQqZLhAc3hsv9e0XcOusZSEYTZ+BizKpaJH0NcGcl5IfC0vykLk+Shc/URpFBdAhd5Ru5S0+JkUIBL6cpjrtWUNzs4Gdq9/2mzULNs9s+Sf63n2wOra/b5TatAaxR7EHqMTonIplV3z52uAOPY50BBSI2cZngHXv4jYRwJpAb2Vh4NRDiMmVdwOQ0q9etpqzZx8vmSoSWvJopZ7unbNxE/6M+1OBKS70u3tSPctYJIQUPquCM4lw7mQvVigPBORXc1RlUImb4BUibDv1FsNk5M4iUAhNWMWZhFUk1lSdMbk63/HQJgX1tuzUXHwPq1r/1vZAukTEuXAVS2nIMcIB+6gelnIpwU7znbBZfhuFhJ1vmQ/RUrwGsnup3eaKH5sOCIr+tMb/rFL3Bv3o7d/3Gl+Acrc78cmUZiTrbTlZSrvB6kenXKaC1RdVLM8z4r5uUoZUxnetE3LNYeAMylvLyM2B2puQphH3S4b1HuZN/ZdfJmY0aFAAmLJNq1YHvG0GAJXT4tAHpPVse+WnZSybwJW4pCtF8kXiEL85SMF+1j5SfON/FuyNHwf14FYW3lknfI9IQidqpW6R14+IQVmMiyRwsfS7eCHAhxKvmvcNHmDRUg2jTMBn3/RlKK1dYQxy6gI+nph2FbZAqd4ScB/d/oQplDyt6t5xT+9mh+uLodS72Kkb3zJfzsbpKALBl29AAosbX0lX5oyOZ1uqfobwA/CftZt1gauI8l2ui3sjdNebdPAnUo6H8wfLVs93T8PnX8B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>00FEEEA63F72201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA63F72201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEF1CDB653017E05307991F0A1DD2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEEA63F9B201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124349</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEF1CDB663017E05307991F0A1DD2</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+o4EH7vr4jSx1XIBShNVJCgwJ6cUtolUJXzUhlnIO5JnBA7gfbXrx0IBUq7nJWQkCfjmW8u/mZuGIpCy2kzBiknMVXcblN9gVrNNxrI1ObXtq3VZuZMQ7aJNduy4erqaoYAmariMpaBSxlHlDdVyzBrmnGtmfbYvHJqVaduVaqG9UtVniBlwrRQqRiqso5CypzCbVPNUurEiBHmUBQBczh2vPb9wBGaDioxqa2bDcrCYdoKOE8cXccVHzCEIa7gONJv9AOdG585HllQxLMUtj591lS3d1erVWVVrcTpQrcMw9ANWxc6PiOLS7V1UV4G36XzeHO+RTSmBKOQvCMJ6h54EPtKO1zEKeFB9IVpUzcNaVqDNdawWaOXqv7hoEB3pqUDkClDGgtEEbbGRjCHFCgGZTJym+rleRXc3B2niLJ5nEbs6PxnkIDmEMYJ+BorIyvRnW/xRLpaN4Adl+IwYySHoWyTBGFgymMKc7IeECaaz2dKUX5lzcSPlF0G+E/KcqPvYxXQ9RPZ6ZIFMP5/arZfr42VJxRm0CI/fzSWgIbmozFl8M9kDeHzyrt+rL65zQLCvvIG1K7c2/Nxs+56a3vpdxel3J829Pv8NeN3bEDbr2+/ltPu3c+8PfDyH/NoNU2TaTyJxvZ0+LfddhvDhZlYr08hHSTP/Ulw7y8ea55HOxdWfnU3eusGPmmPveFzULcaD4PZvDekvYfl0M1ia9bpTMYM/eUvx2vzAfWTcTqvT8mCDd67U/N+lDQGM35b6zf4RdwLnqbs/XnmTSa53R9OU9b8iGk/hkNhSQleNnsFzMujbA+3q/RFvRD/nl6khPjavFB1EslRjAPlakvektTiZIKAiO+IYm7OhtHv9Xrtq2rf7gi66/SMetVo2LbZN9r1zm215KANiiOItzGdE+lLsuymf74HiCOHAfUh1fI4wwEw9RuLXcSR4tKReBwxZTCOBYvby4VfxwGNAztj16iOyPX7MgkEcw9j/kAf0vacQ3rI3PYBc48Ak4SApHfZ30w0OOMiFUuUZzw0KzmqUMjEAEglBztW7bquMxIlIUigehT7WQiVJEiKxOhs829pCLNCOuqNi3f3ZVjH38oMCB2fSAUmY+mAqCKcGEG1MpAvA7as/YBL8+3MJ/J5iXTylOANksNPH10i22PXIiKil1vvxSxx79TPvv75pv4NKP04HztHfk723JazVIwHQR6tsppLVFlWsjzPivo1JDGmwrxu6kZD9wBngt3exvFvoPrOhH7WcNmhPvK8kx/iy3hAPY44RKLblOJ4xmbhAZObhSteyfrcteXApcgbhzU/JbsNxQIiEX+7o2AHSz0hfhR/qzj1P8p1wtaeHxGnWCc4oQt5kmPk7YumwLEwSwTvxem+8VMGTjk/FO6SvMPCRTfNMg5ff1EkoTVVhHGcUe521UKwT7IFTv6WgPOh9MlMQeTbybxmX07m5/uBJ+guQupOl/y3skaKdsGgygWgwNJU12LRFM7pYo/UtwBP83rD+o7XDyNpfRJ/luzl9Pg9tP4F</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"00FEEE6AFEF5300DE05307991F0A1965:D7DC08C2"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FEEF1CDB653017E05307991F0A1DD2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FEEEA63F9B201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA63F72201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140819_124351</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140819_124351</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140819_124351</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>GB</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>00FEEEA63F9C201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FEEEA63F9B201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FEEEA63F9B201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+o4EH7vr4jSx1XIBShNVJCgwJ6cUtolUJXzUhlnIO5JnBA7gfbXrx0IBUq7nJWQkCfjmW8u/mZuGIpCy2kzBiknMVXcblN9gVrNNxrI1ObXtq3VZuZMQ7aJNduy4erqaoYAmariMpaBSxlHlDdVyzBrmnGtmfbYvHJqVaduVaqG9UtVniBlwrRQqRiqso5CypzCbVPNUurEiBHmUBQBczh2vPb9wBGaDioxqa2bDcrCYdoKOE8cXccVHzCEIa7gONJv9AOdG585HllQxLMUtj591lS3d1erVWVVrcTpQrcMw9ANWxc6PiOLS7V1UV4G36XzeHO+RTSmBKOQvCMJ6h54EPtKO1zEKeFB9IVpUzcNaVqDNdawWaOXqv7hoEB3pqUDkClDGgtEEbbGRjCHFCgGZTJym+rleRXc3B2niLJ5nEbs6PxnkIDmEMYJ+BorIyvRnW/xRLpaN4Adl+IwYySHoWyTBGFgymMKc7IeECaaz2dKUX5lzcSPlF0G+E/KcqPvYxXQ9RPZ6ZIFMP5/arZfr42VJxRm0CI/fzSWgIbmozFl8M9kDeHzyrt+rL65zQLCvvIG1K7c2/Nxs+56a3vpdxel3J829Pv8NeN3bEDbr2+/ltPu3c+8PfDyH/NoNU2TaTyJxvZ0+LfddhvDhZlYr08hHSTP/Ulw7y8ea55HOxdWfnU3eusGPmmPveFzULcaD4PZvDekvYfl0M1ia9bpTMYM/eUvx2vzAfWTcTqvT8mCDd67U/N+lDQGM35b6zf4RdwLnqbs/XnmTSa53R9OU9b8iGk/hkNhSQleNnsFzMujbA+3q/RFvRD/nl6khPjavFB1EslRjAPlakvektTiZIKAiO+IYm7OhtHv9Xrtq2rf7gi66/SMetVo2LbZN9r1zm215KANiiOItzGdE+lLsuymf74HiCOHAfUh1fI4wwEw9RuLXcSR4tKReBwxZTCOBYvby4VfxwGNAztj16iOyPX7MgkEcw9j/kAf0vacQ3rI3PYBc48Ak4SApHfZ30w0OOMiFUuUZzw0KzmqUMjEAEglBztW7bquMxIlIUigehT7WQiVJEiKxOhs829pCLNCOuqNi3f3ZVjH38oMCB2fSAUmY+mAqCKcGEG1MpAvA7as/YBL8+3MJ/J5iXTylOANksNPH10i22PXIiKil1vvxSxx79TPvv75pv4NKP04HztHfk723JazVIwHQR6tsppLVFlWsjzPivo1JDGmwrxu6kZD9wBngt3exvFvoPrOhH7WcNmhPvK8kx/iy3hAPY44RKLblOJ4xmbhAZObhSteyfrcteXApcgbhzU/JbsNxQIiEX+7o2AHSz0hfhR/qzj1P8p1wtaeHxGnWCc4oQt5kmPk7YumwLEwSwTvxem+8VMGTjk/FO6SvMPCRTfNMg5ff1EkoTVVhHGcUe521UKwT7IFTv6WgPOh9MlMQeTbybxmX07m5/uBJ+guQupOl/y3skaKdsGgygWgwNJU12LRFM7pYo/UtwBP83rD+o7XDyNpfRJ/luzl9Pg9tP4F</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140819_124351</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00062_Account and User Create with GB 107_UserDelete Standard Youth user111_SUCCESS_P0" searchProperties="true" id="b95717d6-6062-448b-ab8f-cbc60a839e65"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="88fb9d2c-3e7e-4109-a071-291532a63f07"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="a60af17b-3130-473d-9c4a-42cfb6abbcc5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","GB");

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="1e10d4df-37cc-4e16-8ed6-23673420ab01"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUser" id="9f6b2077-627f-4098-8e52-98797cf36ec8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - StandardYouthUser" id="38e7663a-c9de-4816-bcc3-1c5cf6d704a6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="09c9b4de-65ff-4ef8-bafc-85ddb2462f5d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="4f7acb2c-3b4c-4d65-92ae-d41f8e6b0796"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="f0aceee6-4b9c-4d25-84cc-4c3675652e25"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o8EH3vr/C4z8Y3DLEnMMM1pbkWSNrmpSPkBZTaMugCpL++kokdICQf/WaYYbRe7Z7dPTrSOUdp4kUtzoEJklFj0G2Yvzx34jrIn1q+Pwmtar0aW2euV7XiauiEExTUgyA2jQHnEgaUC0RFw/Qct2o5Z5Ybjt1aVK1GnlMJPOfRNB6AcRVauVQc09ikCeVRnrZhSkajDHHCI4pS4JHA0ah1fRUpzwgVmMzm+RZlnpA150IsItvGlRgwJAmu4Cy1z+09n/OYRyMyo0hIBi85Y94wX/au1+vK2q9kbGZ7juPYTmgrn5iT2Wez+anYDPGATrPtuoNoRglGCfmDNKhrEPMsNlrJLGNEzNN3Qru26+jQFmywhd0q/WzarwlydCdG2gPJOLL4HLlFsCFMgQHFYNwPBw3z82kT3O4dM0T5NGMpP1j/GySgK0iyBcQWLyor0J0e8Ui7mueAowHFieRkBTeaJguEgRt3DKZkc0W4Il/MjXz8xoarHylYBvhfxnJu72JV0O0j3emSGXDxf2a2O69tlAeUSGji2d2iFSz8a/+Bo4fnYApDcsmfHWc+a+QQdp23oMpxv6wPyVpy62XThddOe9UNmSwvv42+fM/aF/1e/6l7/aW9HHcfa0Gb3bTP7mrzn+Hdtzs2DZ+r/drlY7suv9zGN2k1m/ndzSSbDb1ep/ZpLeRqzjr1QdC5J0/p2Y+OvJiwR/l19VN2H3p/lktOvcVXcuu0Opv5Ogm/s9/ePe9PxmOWAqld/CBwGZJa9hNffpp9W3594J47bQ8v2dX9Gm6dxmtNuzXsGwtJGMnJE2BRLDU9Bl2jr+aFxMfyoi0ktqa5a7TQGsUFUGE29S4tLZFUAkTiSA1zu3acfq/Xa4W1M7el5K7ecwLfqYeh23datSB0Cw3aojiA2MnolOhcWmW3/PkYIE4jDjQGZq0yiefAzQ8idpFAxoAO1eHIKIdxplTcxSDdyRJSKfDGpf6fCZLTpznzl6Zxk4lbestaUwFsX7vDPe0eAiYLAlrgNcO5ojgXqhlLtJIicSsrVKEg1RXAtApHXvUssDlJFwloqHaaxTKBymK+yFtj8+2/ZyHMc+uwN85P3ruFHX4reqB8YqIduK6lDWqOcOQScotC3i3Y83YLLsK3ZEz0AVMNFYzgLZL9T6880QQpSaIq+tUZ/SrJULqfvP3tTvsDUPZhP8pE8YrspC1uU3VBKPloFtNcosqyIlcrmc+vrqWRqfC2azt1ewRYKn17Hme/gdplCPuk66VEfZC5tO/jk2JORwIJSBXbjHx5wttiBFy/LQbqnGxOfbjspVR9E7ARx2ydRD1BNOIPXyk4wtpPme/U3zpjr4Ufi7WTR9WpHhSC0Jle6Yvk+R1S4EyFJUr5MrYb/FiAY8n3jWWTSyxCsWkiBbz/xdCS1jARxpmkYtA1c8OuzOY4xfMColenN2FyKX+5mzf83bv5x/XVSAleiszSl/y3s0VyumAw9RMgx9IwN+qpqZLT2Y6svwB8q+y1lud1ur7j+rvK7neDoGzgXiXNN+a3lp2eHp6H5l8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>00FEEE6A22CD3013E05307991F0A3D55</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:00FEEE6A22CD3013E05307991F0A3D55</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEEA9681A2017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEF202F7B300BE05307991F0A2CCC</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124419</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEEA9681B2017E05307991F0A6591</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj1VwEq6JChLlsk23tF0ubbcvK+NMwN3Egdjh0l+/dmgoUNrDHgkJeTKe+ebib+aC4yi03SbnkAgaM81r1/XfxQoOoGqPDd+qmUZpbDvG2K6NDbNiVopQKptFG3TN4zwFj3GBmajrtmmVDLNmWM7QqrilkmvbhartPOvaAyRcmpYqBVPXVlHIuJu5retpwtwYc8pdhiPgriDuoNm7caWmi3NMeuNigzJzmDSmQsxchEjBBwJhSAokjtAF2tO58Lk7oBOGRZrAm0+f1/W3u8vlsrAsFuJkgmzTNJHpIKnjczr5pjfO8svgeyyIN+cWZjGjBIf0FStQPRDT2Nea4SROqJhGn5i2kGUq0wasiEGsEvumo3cHGboTLe2BTDg2+BRbubE+BJAAI6CN+l5d/3ZaBTd3hwlmPIiTiB+c/w0SsAWE8Qx8g+eR5ehOt3gkXY0LIK7HSJhyuoBb1SYzTIBr9wkEdHVDuWw+n2tZ+bUVlz+adxmQfynLBdrFKqGjI9lp0wlw8X9qtluvjZUHHKbQWIymL6VO2n04fx72n+6WCX68eTRH5ze1UT2DsKu8AbUt99v5sFm3vfV2KSHrsDhoj5wRfeHA/NH3q0f7ygmqixpaPD935uP1eMCml6/r2apcu0PP1Pr+szp7jWp2WFmioHt7/fKjNWnWrBtydnfZe33+9fpnWCn35lfFJ9ZEP4fXawei+cQxV8Hk1+P1pD/H5afg8WGZfF/hYVz+eXlf8mKPD8aj1lW66L1ArXPbgbMIn/fm5CEaUvR433Wuf1x59feYdmPYF+aUMEjHL0BEflTt4bW1rqwXFl/Ti5JQ3wgyVXemOIoLYEJvqFuKWtxUEhD1XVnMzdk0u51O1zbtbvWyaJqXHbNcNKuOY3XNpt1qtXIO2qA4gNiKWUCVL8Wym/75GiCJXFUrSIxFnJIpcP0Li20ssOaxvnwcMeMwjCWLWxFej9k0ePET8moBcyZpGpaslBNdu43FHbtLmoGAZJ+7nT3u7gOhMwqK4FWHc9niXMhkzPEiFaFVWOACg1SOgESxsGuXamXEaTQLQUFFUeynIRRm01mWGsQ3/7aBCc+k/c4we3mfBnb4Lc+B1PGpUuAqlkuQdYQjQ8jKA/k0YNveDTg330x9qh6YTKhIKNkg2f/03ieqQbZNIiP63Rr8tnLcW/WTr3+8ib4AhQ7zsXXkL+iO23yaygEh6aORV3OOC/NCulikWf2qihoTaR5ZyKyiAZBU8tt6GP8BhrYm0EnjZYv6wPNWvo8vFVM2EFhAJLtNy44n7BYD4Gq38OQ7WZ26uOy5lHkTsBLHZK1QriAK8ZdbCnGJ0pPie/m3jBP/vVxHbO34kXHKhUJQNlEnNUjWnzQFiaVZKpkvTnaNHzNwzPm+cJvkLRYhu2mcCvj8i6Yora5jQuKUCa+tZ4Jdms1wivUM3HelD2YyKn+bzSv+6Wx+6t0MJOFFWN/q0v9WNmjWLkRuplI/w1LXV3LVlM7ZZIfW3wB+YPZOpWnbrXbRtIq7zF5sl8vbBO5F0vgg/ijZyenhe2j8BQ==</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"00FEEEA986362019E05307991F0A80D6:3E62BD56"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FEEEA9681A2017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FEEF202F7B300BE05307991F0A2CCC</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEE6A22CD3013E05307991F0A3D55</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140819_124421</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140819_124421</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140819_124421</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>GB</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>00FEEF202F7C300BE05307991F0A2CCC</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FEEF202F7B300BE05307991F0A2CCC</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FEEF202F7B300BE05307991F0A2CCC</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj1VwEq6JChLlsk23tF0ubbcvK+NMwN3Egdjh0l+/dmgoUNrDHgkJeTKe+ebib+aC4yi03SbnkAgaM81r1/XfxQoOoGqPDd+qmUZpbDvG2K6NDbNiVopQKptFG3TN4zwFj3GBmajrtmmVDLNmWM7QqrilkmvbhartPOvaAyRcmpYqBVPXVlHIuJu5retpwtwYc8pdhiPgriDuoNm7caWmi3NMeuNigzJzmDSmQsxchEjBBwJhSAokjtAF2tO58Lk7oBOGRZrAm0+f1/W3u8vlsrAsFuJkgmzTNJHpIKnjczr5pjfO8svgeyyIN+cWZjGjBIf0FStQPRDT2Nea4SROqJhGn5i2kGUq0wasiEGsEvumo3cHGboTLe2BTDg2+BRbubE+BJAAI6CN+l5d/3ZaBTd3hwlmPIiTiB+c/w0SsAWE8Qx8g+eR5ehOt3gkXY0LIK7HSJhyuoBb1SYzTIBr9wkEdHVDuWw+n2tZ+bUVlz+adxmQfynLBdrFKqGjI9lp0wlw8X9qtluvjZUHHKbQWIymL6VO2n04fx72n+6WCX68eTRH5ze1UT2DsKu8AbUt99v5sFm3vfV2KSHrsDhoj5wRfeHA/NH3q0f7ygmqixpaPD935uP1eMCml6/r2apcu0PP1Pr+szp7jWp2WFmioHt7/fKjNWnWrBtydnfZe33+9fpnWCn35lfFJ9ZEP4fXawei+cQxV8Hk1+P1pD/H5afg8WGZfF/hYVz+eXlf8mKPD8aj1lW66L1ArXPbgbMIn/fm5CEaUvR433Wuf1x59feYdmPYF+aUMEjHL0BEflTt4bW1rqwXFl/Ti5JQ3wgyVXemOIoLYEJvqFuKWtxUEhD1XVnMzdk0u51O1zbtbvWyaJqXHbNcNKuOY3XNpt1qtXIO2qA4gNiKWUCVL8Wym/75GiCJXFUrSIxFnJIpcP0Li20ssOaxvnwcMeMwjCWLWxFej9k0ePET8moBcyZpGpaslBNdu43FHbtLmoGAZJ+7nT3u7gOhMwqK4FWHc9niXMhkzPEiFaFVWOACg1SOgESxsGuXamXEaTQLQUFFUeynIRRm01mWGsQ3/7aBCc+k/c4we3mfBnb4Lc+B1PGpUuAqlkuQdYQjQ8jKA/k0YNveDTg330x9qh6YTKhIKNkg2f/03ieqQbZNIiP63Rr8tnLcW/WTr3+8ib4AhQ7zsXXkL+iO23yaygEh6aORV3OOC/NCulikWf2qihoTaR5ZyKyiAZBU8tt6GP8BhrYm0EnjZYv6wPNWvo8vFVM2EFhAJLtNy44n7BYD4Gq38OQ7WZ26uOy5lHkTsBLHZK1QriAK8ZdbCnGJ0pPie/m3jBP/vVxHbO34kXHKhUJQNlEnNUjWnzQFiaVZKpkvTnaNHzNwzPm+cJvkLRYhu2mcCvj8i6Yora5jQuKUCa+tZ4Jdms1wivUM3HelD2YyKn+bzSv+6Wx+6t0MJOFFWN/q0v9WNmjWLkRuplI/w1LXV3LVlM7ZZIfW3wB+YPZOpWnbrXbRtIq7zF5sl8vbBO5F0vgg/ijZyenhe2j8BQ==</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140819_124421</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00064_Account and User Create with US 107_UserDelete SecondFull user 111_SUCCESS_P0" searchProperties="true" id="fb8df3d4-f6e0-44d2-bee8-4b9cbbcfa425"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="2c086743-9188-4153-a36f-0b1c6797170b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="d5e98f96-0c07-4b56-8b5d-3337e43772e9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","US");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="90e0d5b9-1b85-44a6-b949-bf652fcabdf6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for AdultFULL" id="6d252b63-adc0-4bf4-925d-e1118a1da499"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - AdultFULL" id="aea9fb5c-f475-40e3-bd79-67ebedb451f8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="0ed28221-03bf-4213-9136-6874cea38888"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="d6db40a8-29af-45bc-b2bf-b54177eee08f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="ac1ca598-6b4d-4b2e-865b-99a3dc49082b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU+o6FH73V3Tqo1N64dZ2gBkQcKqiCKhbX5yQBoi2aW3SUvz1OykUC4KHfWaYYdbqunzrki9pUOB7ht2mFEUMB0Ryuk35rQYMd1qFVaWqW5ZSqbuWMjVmulLTqqgOZtNaxdRkyaE0Rg6hDBDWlA1NryiaqejWRK/ZlYpdNkvc7lWWnlBEeWhuUuJeqe8Ramdpm3IcETsAFFObAB9Rm0F73B7c2tzSBjkmudVYo8wSRq0FY6GtqrDkIog8D5Zg4KsNdcem4VJ7jOcEsDhCm5wubcob3+VyWVqWS0E0Vw1N01TNUrmNS/H8XG6d5c7IdcgsWMuXgAQEQ+DhLyBADRBbBK7U9uZBhNnCPxJaV3VNhFZQChWoV8i5rH4nyNCdGGkHZESBQhdAz4ON0AxFiEAkPY6cpnx+2gTXvpMIEDoLIp/uyf8GCZEEeUGIXIXmleXoTo94oF2tBoK2Q6AXU5ygO7EmIYCISsMIzXB6iylfPpdK2fillPIfzrcMwX8ZS0MtYuXQ1QPd6eI5ouz/zKw4r3WUJ+DFqPU6fHyxDP3aNF8macr678vKImkvICwPmhmEovEa1HbcG3l/Wbe7tXHybgwT9ubDFYGvk9WIvj50rgY37J289BPgphdVo0/u4Y15N507jtn7kxqr6oJe1cqTuEdMf9S//oJxp/fwNQw+z4baNP4I4+Vq0Hmf9Fej24QMrmfz8NIdJyPfqamuiuCXy8Bjb7V8uQivHkytE/pfsFt7fiLdxwvVStrkul8xut0z6+Lx5n1wl34azwSMnoM+mDe/ayrWsKvMKWEcT98RZLko1sPpSn0+L8B+pxehwa4yy0ztUHAUZYgwuSW8BLXYMScg7Np8mGtZ0/q9Xq9dK/d7bU53nZ5WLWt1y9L7WrvauSznHLRGsQfxMiAzLHIJll3vz+8AoW9TRFwUKUkQwwWi8i8Ru4ABySEjfjgCQtEk4CyOTZ3C+sfCt1hdp1o9WFQhXlanpizdBeye3EftGUPRLnVbO9Q9QhCHGAl+FwtO+YZTxnvxCZKYeXopASWCYn4DRIKEbaNiVlWK/dBDAqnqB27soVK4CLPOqHT9bygA0kw76k2yg3e0rv1veQu4jYuFARW1dBAfIzpwBxl5IUcLNoxiwXn4duxicb54P1mE4RrJ7qfvNRH7sd0RXtHb5fhNz3FvzU92/+mp/gJK3e/HNpGb4ELa/DLl9wNnj1Y+zU9Q+izFSRJn86sLZox4eFVXtbo6RjDm9LaaBB+IqNsQ6km3yxb1XuatfhdfzBZkzABDPt82KRNPeFqMERVPC4cfk/TUd8tOSt43hlJ2SHfp8ReIQPzrIwXaUNhx9ZD/LYPI/R7XgViFPLxO/p5gmMyFJO6R1ZGlgAEPiznxBVEx+KEAh5LvKrdN3mJhfJumMUPHv0iC0ZoygDCICXO6cqYosmyGk61CZH8b/QiTMfnmak7p0av5z+B2zPnOB/LWFv+3sYKzdYFIFi+ADEtTTvlLkycn8wKrbwD+JPZavaZZlbIQCsRe7+j1bQN3Kmn9UP/UFHq6fx5afwE=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>00FEEE676094300FE05307991F0A7B17</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:00FEEE676094300FE05307991F0A7B17</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEEA63FEA201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEE6AFF02300DE05307991F0A1965</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124437</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEEA63FEB201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0TpYxVyIYEmKkjsAm12L7RAS3dfKuMM4JI4IXa4nK8/dmgoUNrDPhIS8mQ8s2ZmedkXDEWh5TUYg5STmCp+s6a+meWqbVbODQ27wVCzEZQ110GBNgxgaOORawfVqqr4jGXgU8YR5TXVMkxbM8410+2bFc+2PdsouYb9qirPkDIRWriUDFVZRiFlXp62pmYp9WLECPMoioB5HHu9xt2tJzw9VGBS6xdrlHnCtD7hPPF0HZcCwBCGuITjSL/Qd3wuAub1yJginqXwkTNgNfVj72KxKC3KpTgd65ZhGLrh6sInYGR8qtZPis0Q+HQUr9eXiMaUYBSSf5AEdQd8EgdKIxzHKeGT6JvQpm4aMrQGS6xh06anqv6ZIEd3ZKQdkClDGpsgswjWhRGkQDEoT12/pp4eN8H13n6KKBvFacT21n8HCegcwjiBQGNFZQW64yMeaFf9ArDnUxxmjMzhXtIkQRiY8pDCiCxvCRPkC5iSj19ZMvEjBcsA/81YLvRtrAK6fqA7TTIGxv/PzLbntY7yjMIM6rHxdL+4unQG7f7r8v3x6aHN/1ydXZ1Nzxu1HMK28xrUZtwf632ybrj1sam56pgv9wOH486Lbb3ew/jRfx2072bXabsx17nt6j2YXDUXkY+z5zNj1AnnaPA4c9woWQ3eV1bQnT5Mbtqt6a/qyaNrJb/R0+qamM9VejOcdpNbFwaDF7d1DQPg5TJg+vDeHfWy4P0R8ac/lenL0+/Xs8QxbjrmJbpuh0F2xhaVq+lJOJw+u3jUfz9zGuXOZOhwv/ZZ03YNu8ZCEnrZ8B0wL5aSHn5TaYt5If6zvEgLCbRR7uolUqMYB8rVutwlpcXLhACRwBPDXK8No91qtSqNdtuwyobRbBlO2ai6rtk2GqZbcQoNWqPYg3gZ0xGRuaTKrvnzM0AceQxoAKk2jzM8Aab+ELGJOFJ82hWHI6YM+rFU8ZXJSJg41sxZmmbVKQdDa2rRJLJV5T7mHdpJGyMO6a52uzva3QVMEgJS4CXDmaA446IZMzTPeGiW5qhEIRNXQCpV2LPsc0dnJEpCkFD1KA6yEErJJMlbo7P1v6UhzHJrt9XPT963he1/K3ogfAIiHZis5ReIOcKBS6hcFPJtwZa1XXARvpEFRB4w0VCeErxGsvvpkyeSIBuSiIreLntvZoF743709q879R9A6fv92CQK5mQrbXGbigtCyEe9mOYMlWalbD7P8vlVpTSmIrxu6kZViALOhL6t+vEUqL4JoR91vWxQ72Xe2HfxZXxCexxxiATblHx5xNuiB0y+LXxxTpbHPlx2Uoq+cVjyQ7bLUDxBJOIfXynYw9JPmB/E3yJOg89xHYi1lUfUKR4UnNCxXMmLZPUNKXAswhKhfHG6HfxQgEPJd42bJm+wcMGmYcbh+y+KlLSaijCOM8r9ppobtmU2x8lXCXifTl/C5FL+cTcv2bd388vdbU8IXoTUjS/5b2eN5HTBoMonQI6lpi7FU1Mkp+MtWf8AeEDZqxXDtctysaXs1V/mJ5d3Kql/MX+1bPV0/zzU/wU=</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"00FEEEA9685D2017E05307991F0A6591:37AE8F7F"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FEEEA63FEA201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FEEE6AFF02300DE05307991F0A1965</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEE676094300FE05307991F0A7B17</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140819_124440</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140819_124440</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140819_124440</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>00FEEE6AFF03300DE05307991F0A1965</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FEEE6AFF02300DE05307991F0A1965</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FEEE6AFF02300DE05307991F0A1965</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0TpYxVyIYEmKkjsAm12L7RAS3dfKuMM4JI4IXa4nK8/dmgoUNrDPhIS8mQ8s2ZmedkXDEWh5TUYg5STmCp+s6a+meWqbVbODQ27wVCzEZQ110GBNgxgaOORawfVqqr4jGXgU8YR5TXVMkxbM8410+2bFc+2PdsouYb9qirPkDIRWriUDFVZRiFlXp62pmYp9WLECPMoioB5HHu9xt2tJzw9VGBS6xdrlHnCtD7hPPF0HZcCwBCGuITjSL/Qd3wuAub1yJginqXwkTNgNfVj72KxKC3KpTgd65ZhGLrh6sInYGR8qtZPis0Q+HQUr9eXiMaUYBSSf5AEdQd8EgdKIxzHKeGT6JvQpm4aMrQGS6xh06anqv6ZIEd3ZKQdkClDGpsgswjWhRGkQDEoT12/pp4eN8H13n6KKBvFacT21n8HCegcwjiBQGNFZQW64yMeaFf9ArDnUxxmjMzhXtIkQRiY8pDCiCxvCRPkC5iSj19ZMvEjBcsA/81YLvRtrAK6fqA7TTIGxv/PzLbntY7yjMIM6rHxdL+4unQG7f7r8v3x6aHN/1ydXZ1Nzxu1HMK28xrUZtwf632ybrj1sam56pgv9wOH486Lbb3ew/jRfx2072bXabsx17nt6j2YXDUXkY+z5zNj1AnnaPA4c9woWQ3eV1bQnT5Mbtqt6a/qyaNrJb/R0+qamM9VejOcdpNbFwaDF7d1DQPg5TJg+vDeHfWy4P0R8ac/lenL0+/Xs8QxbjrmJbpuh0F2xhaVq+lJOJw+u3jUfz9zGuXOZOhwv/ZZ03YNu8ZCEnrZ8B0wL5aSHn5TaYt5If6zvEgLCbRR7uolUqMYB8rVutwlpcXLhACRwBPDXK8No91qtSqNdtuwyobRbBlO2ai6rtk2GqZbcQoNWqPYg3gZ0xGRuaTKrvnzM0AceQxoAKk2jzM8Aab+ELGJOFJ82hWHI6YM+rFU8ZXJSJg41sxZmmbVKQdDa2rRJLJV5T7mHdpJGyMO6a52uzva3QVMEgJS4CXDmaA446IZMzTPeGiW5qhEIRNXQCpV2LPsc0dnJEpCkFD1KA6yEErJJMlbo7P1v6UhzHJrt9XPT963he1/K3ogfAIiHZis5ReIOcKBS6hcFPJtwZa1XXARvpEFRB4w0VCeErxGsvvpkyeSIBuSiIreLntvZoF743709q879R9A6fv92CQK5mQrbXGbigtCyEe9mOYMlWalbD7P8vlVpTSmIrxu6kZViALOhL6t+vEUqL4JoR91vWxQ72Xe2HfxZXxCexxxiATblHx5xNuiB0y+LXxxTpbHPlx2Uoq+cVjyQ7bLUDxBJOIfXynYw9JPmB/E3yJOg89xHYi1lUfUKR4UnNCxXMmLZPUNKXAswhKhfHG6HfxQgEPJd42bJm+wcMGmYcbh+y+KlLSaijCOM8r9ppobtmU2x8lXCXifTl/C5FL+cTcv2bd388vdbU8IXoTUjS/5b2eN5HTBoMonQI6lpi7FU1Mkp+MtWf8AeEDZqxXDtctysaXs1V/mJ5d3Kql/MX+1bPV0/zzU/wU=</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140819_124440</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00065_Account and User Create with US 107_UserDelete Standard Youth user111_SUCCESS_P0" searchProperties="true" id="159e0e99-3eaf-4bde-9848-88d1491dd684"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="4ce011a5-ed18-4186-8875-416d0f71ce37"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="3484aeea-aafb-4202-b485-43edec812911"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","US");

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="6b126216-a2d7-4f98-bca1-b22f9c88feb2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for StandardYouthUser" id="7f85fa7e-1832-4ef2-92b0-08cce6eeafca"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","YOUTH");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("DateOfBirth",tC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - StandardYouthUser" id="87ce7c11-2866-4f0b-93cf-d57142c9970b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);

myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Get - FullUser" id="7b1f9802-4490-45a1-aa8f-b07c9fdd0064"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserGet_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

tC.setPropertyValue("ResponseTypeUserGet","SUCCESS");
tC.setPropertyValue("RequestorType","Self");
tC.setPropertyValue("RequestorClass","full");
tC.setPropertyValue("Requestee","ADULT");


myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));

tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="c63ed525-36e5-4247-89b9-cd27ce3dfd3b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call_UserDelete" id="4f700d07-c108-46b8-b5f2-7347c01f1cb9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
tC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

tC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
tC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("ResponseTypeUserDelete","SUCCESS");

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserDelete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/A4jx3jDz7tCcxQCA1tSBsgNM1LR5HXoIstGUkGkl9/JRMTIJBL7wwzjNar3bO7R0e6FCiJvaAtBHBJGDX63ab5px5hzw0rvuXVoWFVPL9mNVy/YqGwUvUi5NRCD5tGX4gM+lRIRGXT9By3YjkNy/XHbi2oVIJquVSplx9NYwJcqNDKpeSYxjqJqQjytE0z4zRgSBARUJSACCQORu3BTaA8A1RgMluXG5R5Qt6aSZkGto1LIWCIY1zCLLEv7T2fy1AEIzKlSGYcXnOGomm+7l2tVqVVucT41PYcx7Ed31Y+oSDTC7P1qdgMYZ9GbLPuIMoowSgmL0iDGoCcsdBox1PGiZwlJ0K7tuvo0BassYXdCr0w7bcEObozI+2B5AJZYobcItgQIuBAMRj3w37TvDhvgpu9Y46oiBhPxMH67yABXULMUggtUVRWoDs/4pF2tS4BB32K40yQJdxqmqQIgzB+cojI+oYIRb5QGPn4jbVQP1KwDPDfjOXS3sWqoNtHutMlUxDy/8xsd16bKBMUZ9Dqpe7i8/W1dEaTZzyxO6twUf9SHQy+PTrNHMKu8wbUdtyv60Oybrn1uqnvT+56g1FGMftVHj2+fFvil7IgD/c3K//+bvL4MJDulRt5n/t8Pa5+v8bxGF3Po2Xj6524f6yizq1vN4arh+rMkZ/S9W39oVafr3mH2Ot0Gt/9nl6vV4O2X74dDe9e/NpT7547zvzOj6oefAGcfP/5q8GHX59q7ftp7brLXC9bwK/G+OlT56uYR+MHoL02tXl3wn6L5ltNuzXsGwtJGGVP/wCWxVLTo981empeSH4sL9pCQivKXYNUa5SQQKXZ0ru0tASZEiASBmqYm7Xj9K6urtp+rVHrKrmrXznVslP3fbfntGtV3y00aIPiAGKH0YjoXFplN/z5GCBOAgE0BG4tWYZnIMwPInaRREafDtXhYFTAmCkVl3iBGqHDUzZnbjVi81niPNeSRmgat0z+oD94O5LA96Xb35PuIWCSEtD6rgkuFMOFVL1YoGUmY7e0RCUKmboBuBbhwKs0qrYgSRqDRmonLMxiKKWzNO+MLTb/noWwyK3Dq3F+8E7WdfitaIHyCYl2ELqWL6DGCEfuoEpRyMmCPW+34CJ8OwuJPl+qn5ITvEGy/+mNJpofW46oiv50Rn+2XNi6n739/U77A1D2YT+2icIl2UlbXKbqflDq0SqmuUClRSlbLrN8fnWtjFyFt13bqdsjwJmSt+cxmwO1tyHss26XLeqDzFv7Pr5MzuhIIgmJYpuRL894WoxA6KdFXx2T9bnvlr2Uqm8S1vKYrROrF4hG/OEjBQdY+ynzT/W3Yjx8G9eRWDt5VJ3qPSEJneqVvkeeT5ACMxWWKOFjfDf4sQDHku8bt03eYpGKTU+ZhNNfDK1oTRNhzDIq+10zN+yqbI5TPqcQvDm9C5Mr+evVvBYnr+aHwc1I6V2CzK0v+W9ni+R0wWDqF0COpWmu1UtTJafTHVV/BXhC2N2PhH2/ktY783vLTk8Pz0PrXw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>00FEEEA968612017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA968612017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEEA9686D2017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEEA968832017E05307991F0A6591</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124452</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEEA9686E2017E05307991F0A6591</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0Tp41bIhQRIVJBoSdX03kKvL5XrDOA22BA7gfbrtx0IBUp72EdCQp6MZ9bMLC/7gKNR4gRtziEVhFEt6jT1F8dDNct/RUa1AZ7hVqsNw7cd23B8x+u/Yvxar7u6FnGeQUS5QFQ0dceyXcNqGLbfs2uB6waeV/Fd51nX7iHlMrR0qVi6NhsllAdF2qaepTRgiBMeUDQCHggcdNsX54H0DFCJSW8dzFEWCdPWUIhxYJq4EgOGJMEVzEbmgbnmcxDzoEsGFIkshUXOmDf1xd7pdFqZVissHZiOZVmm5ZvSJ+ZksK+39srNEEe0z+brI0QZJRgl5BMpUBcghizW2smApUQMRz+Etk3bUqENmGED2y7d182vBAW6HSOtgUw5MvgQ2WWwW+hDChSDdncbNfX93SY439tLEeV9lo74xvrfIAHNIWFjiA1eVlai2z3ilna1DgAHEcVJxkkOl4omY4SBa9cp9MnsnHBJvphrxfi1GZc/UrIM8L+M5cBcxSqhm1u60yED4OL/zGx1XvMo9yjJoHVH3PDx+XnIjvOT/vXk6fmailNIUHsyaBYQVp3noJbjXqw3ybrk1mLT3emwCocfcUjaz8n01JqaZtY/yd57Xa9O/4irtvt8Men7N+bloRuGyY19eVH1njrkLpqxqvd4OpmcuYPX6+lJTu/2qo8nn+G0KuKrm4eQ14bYj94/x/ekXb2cTONzNDwbJ43zj9PIu41PHmo4G4TRU/Z+liJx4iQkfLsUZ09X04cZ49FeZ3x0nN9kZ3/IGztOZm9vZ0/Nr5pWa1g3lpLQzV7fAItyqegRdbRjOS8kfpcXZSGx0S9cg7HSKC6ACr2ldilpCTIpQCQO5DDna8s6DsOw7dcajaqUu3poeVWr7vv2sdWueb5datAcxQbEI0b7ROVSKjvnz+8A8SjgQGNIjZxleAhc/yViBwmkRfRWHg5GOfSYVHHb9lKC3Zg3YJL3hx+588kETlOma5dMXNGrtN0XkK5Lt78m3beAyZiA0ndFcC4ZzoXsxQTlmUjsSo4qFDJ5A6RKhAPHbXgmJ6NxAgqpOWJxlkBlPBwXnTH5/N8xEOaF9TbsFQfvx7o2v5UtkD4xUQ5c1XIIcoyw5Q5yy0J+LNhxVgsuw7ezmKjzJfspZA/nSNY/fdFE8WPJEVnRy1H3ZcmFpfvO27/vNH8BZW72Y5kozslK2vIylfeDVI9WOc0JqkwqWZ5nxfzqShlTGd60TatudgFnUt4+euwdqLkMYe50uyxRb2Re2tfxZWJIuwIJGEm2acVyh6dFF7h6WkTymMx2fbespZR9EzAT22xHiXyBKMS/PlJwgJWfNF/LvylL469xbYm1kkfWKd8TgtCBWql75OMHUmAmwxIpfCxdDb4twLbk68Zlk5dYhGTTaybg5y+aUrSmjjBmGRVRRy8Mqypb4BQfYwi+nL6FKZR8cTXP+I9X8+PFeVfq3QjpS1/y384GKeiCQVcvgAJLU5/Jl6ZMTgcrqr4AuF3Ya/Zvwr5eSeub+btlpaeb56H1Fw==</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"00FEEE6A23063013E05307991F0A3D55:BB7E2F74"</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FEEEA9686D2017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FEEEA968832017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA968612017E05307991F0A6591</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140819_124454</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140819_124454</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140819_124454</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value>E97A5B7941FE4974E0401F0A0599427F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-10-29</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-28</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-27</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>00FEEEA968842017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FEEEA968832017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FEEEA968832017E05307991F0A6591</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0Tp41bIhQRIVJBoSdX03kKvL5XrDOA22BA7gfbrtx0IBUp72EdCQp6MZ9bMLC/7gKNR4gRtziEVhFEt6jT1F8dDNct/RUa1AZ7hVqsNw7cd23B8x+u/Yvxar7u6FnGeQUS5QFQ0dceyXcNqGLbfs2uB6waeV/Fd51nX7iHlMrR0qVi6NhsllAdF2qaepTRgiBMeUDQCHggcdNsX54H0DFCJSW8dzFEWCdPWUIhxYJq4EgOGJMEVzEbmgbnmcxDzoEsGFIkshUXOmDf1xd7pdFqZVissHZiOZVmm5ZvSJ+ZksK+39srNEEe0z+brI0QZJRgl5BMpUBcghizW2smApUQMRz+Etk3bUqENmGED2y7d182vBAW6HSOtgUw5MvgQ2WWwW+hDChSDdncbNfX93SY439tLEeV9lo74xvrfIAHNIWFjiA1eVlai2z3ilna1DgAHEcVJxkkOl4omY4SBa9cp9MnsnHBJvphrxfi1GZc/UrIM8L+M5cBcxSqhm1u60yED4OL/zGx1XvMo9yjJoHVH3PDx+XnIjvOT/vXk6fmailNIUHsyaBYQVp3noJbjXqw3ybrk1mLT3emwCocfcUjaz8n01JqaZtY/yd57Xa9O/4irtvt8Men7N+bloRuGyY19eVH1njrkLpqxqvd4OpmcuYPX6+lJTu/2qo8nn+G0KuKrm4eQ14bYj94/x/ekXb2cTONzNDwbJ43zj9PIu41PHmo4G4TRU/Z+liJx4iQkfLsUZ09X04cZ49FeZ3x0nN9kZ3/IGztOZm9vZ0/Nr5pWa1g3lpLQzV7fAItyqegRdbRjOS8kfpcXZSGx0S9cg7HSKC6ACr2ldilpCTIpQCQO5DDna8s6DsOw7dcajaqUu3poeVWr7vv2sdWueb5datAcxQbEI0b7ROVSKjvnz+8A8SjgQGNIjZxleAhc/yViBwmkRfRWHg5GOfSYVHHb9lKC3Zg3YJL3hx+588kETlOma5dMXNGrtN0XkK5Lt78m3beAyZiA0ndFcC4ZzoXsxQTlmUjsSo4qFDJ5A6RKhAPHbXgmJ6NxAgqpOWJxlkBlPBwXnTH5/N8xEOaF9TbsFQfvx7o2v5UtkD4xUQ5c1XIIcoyw5Q5yy0J+LNhxVgsuw7ezmKjzJfspZA/nSNY/fdFE8WPJEVnRy1H3ZcmFpfvO27/vNH8BZW72Y5kozslK2vIylfeDVI9WOc0JqkwqWZ5nxfzqShlTGd60TatudgFnUt4+euwdqLkMYe50uyxRb2Re2tfxZWJIuwIJGEm2acVyh6dFF7h6WkTymMx2fbespZR9EzAT22xHiXyBKMS/PlJwgJWfNF/LvylL469xbYm1kkfWKd8TgtCBWql75OMHUmAmwxIpfCxdDb4twLbk68Zlk5dYhGTTaybg5y+aUrSmjjBmGRVRRy8Mqypb4BQfYwi+nL6FKZR8cTXP+I9X8+PFeVfq3QjpS1/y384GKeiCQVcvgAJLU5/Jl6ZMTgcrqr4AuF3Ya/Zvwr5eSeub+btlpaeb56H1Fw==</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140819_124454</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>full</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dd31fcd8-3b2e-4cea-9fdc-c7e5d2fa111c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>190cfb9c-7401-47ab-84a4-abc79599f738</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21fd0883-6d62-4bb7-aae9-2bb01e16ae47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>role</con:name><con:value>nodeIdRTL</con:value></con:property><con:property><con:name>Country</con:name><con:value>GB</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:RET_CS_1</con:value></con:property></con:properties><con:tearDownScript>if(context.expand( '${#Project#runTeardown}' )=='true')
	{
	log.info("Executing TearDown for Suite '" + testSuite.getName() + "'");
	
	for ( testCaseResult in runner.results )
	{
	   currentTestCaseName = testCaseResult.getTestCase().name;  
	   currentTestCase = testCaseResult.getTestCase(); 
	   log.info("Current TestCase : '"+ currentTestCaseName + "'");
	   log.info("Current TestCase Status : '" + testCaseResult.getStatus().toString() + "'");
	   
	   if ( testCaseResult.getStatus().toString() == 'FAILED' )
	   {
	      log.info("Re-executing failed TC");
	      def currentRunnerTC = currentTestCase.run(null, false);
	      log.info("Status on re-execution : '" + currentRunnerTC.status + "'");
	   }
	}
	log.info("Execution of TearDown for Suite '" + testSuite.getName() + "' Completed" );
}</con:tearDownScript><con:reportParameters/></con:testSuite><con:testSuite name="04.AccountCreate_Backward_Compatability" id="cdea44c4-ddc2-42a8-8c91-4730fede7e39"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00001_AccountCreate_with_country_BE_107_200_OK_P0" searchProperties="true" id="a3da937f-bfed-40ac-b1c6-fd112d87eee9"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="636b9294-ea95-469a-8a06-665ce4435483"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="9bf39215-53fd-4693-85bf-585d1d5e51b1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","BE");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Create" id="9901d87c-2d2d-4f5f-a915-fc76988b3f23"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("AccountCreate API_Invalid_Geo")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("ResponseType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20141114_073452</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C90A83BBCA5FA5E05305991F0A1EAD</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:07C90A83BBCA5FA5E05305991F0A1EAD</con:value></con:property><con:property><con:name>ResponseTypeAccountCreate</con:name><con:value>INVALID_GEO</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00002_AccountCreate_with_country_NL_107_200_OK_P0" searchProperties="true" id="6a6432ac-fd08-4a13-8176-77a491e852db"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="db882fe4-6726-4978-b6ad-727409f06a94"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="ed66cdb9-adf2-42af-a854-4592d40f35bc"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","NL");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Create" id="079c643e-0458-4964-9b1f-5911f7f688d9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("AccountCreate API_Invalid_Geo")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("ResponseType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20141114_073456</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C90A99ECC95FD2E05307991F0A6478</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:07C90A99ECC95FD2E05307991F0A6478</con:value></con:property><con:property><con:name>ResponseTypeAccountCreate</con:name><con:value>INVALID_GEO</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00003_AccountCreate_with_country_LU_107_200_OK_P0" searchProperties="true" id="23ec8145-4ab1-4331-9d61-89b9a0e3cf60"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="576946a2-d4b9-4578-b66d-b092f899957a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="ac2e55ca-a951-48e2-86b2-ec7bf31a71ce"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","LU");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Create" id="79380730-2b23-40ed-9039-76f2863a9a39"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("AccountCreate API_Invalid_Geo")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("ResponseType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20141114_07353</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07C90B306FE05F2CE05305991F0A7335</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:07C90B306FE05F2CE05305991F0A7335</con:value></con:property><con:property><con:name>ResponseTypeAccountCreate</con:name><con:value>INVALID_GEO</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties><con:property><con:name>role</con:name><con:value>nodeIdRTL</con:value></con:property><con:property><con:name>Country</con:name><con:value>LU</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:RET_CS_1</con:value></con:property></con:properties><con:tearDownScript>if(context.expand( '${#Project#runTeardown}' )=='true')
	{
	log.info("Executing TearDown for Suite '" + testSuite.getName() + "'");
	
	for ( testCaseResult in runner.results )
	{
	   currentTestCaseName = testCaseResult.getTestCase().name;  
	   currentTestCase = testCaseResult.getTestCase(); 
	   log.info("Current TestCase : '"+ currentTestCaseName + "'");
	   log.info("Current TestCase Status : '" + testCaseResult.getStatus().toString() + "'");
	   
	   if ( testCaseResult.getStatus().toString() == 'FAILED' )
	   {
	      log.info("Re-executing failed TC");
	      def currentRunnerTC = currentTestCase.run(null, false);
	      log.info("Status on re-execution : '" + currentRunnerTC.status + "'");
	   }
	}
	log.info("Execution of TearDown for Suite '" + testSuite.getName() + "' Completed" );
}</con:tearDownScript><con:reportParameters/></con:testSuite><con:testSuite name="05.AccountGet_Backward_Compatability" id="91da3357-e9aa-4617-b2e5-43c14fb881af"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00001_AccountUserCreate_with_country_BE_111_AccountGet_107_SUCCESS_P0" searchProperties="true" id="801f7d53-c7bb-49ed-97a9-e9d4793b7cb0"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="0d706fa1-03e4-42d3-9e8f-aafa380ed053"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="3d5c7650-0f03-4b1a-b60e-adad4333069e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","BE");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="7bc30816-6a71-44c7-9df5-7ca170870fca"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="b0ec707c-1e16-4cb7-922a-e0493c94e9d7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="1a58a766-bf9f-4759-b506-00567330fe08"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20131025_020534</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF06FEF369769EE05307991F0A2F78</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF06FEF369769EE05307991F0A2F78</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj6uQC+GSqCBxPc2WtizQy9mXynUmxNvESWOHS3/92qGhQGkPeyQk5Ml45puLv5lzhuLIcjuMQcZJQhWv31IfLbPh+9gOtGrDDzTbCmwNNSHQHLteN53AxsjAquIxloNHGUeUt1TLMG3NaGqmMzPrrl1zzWqlbju/VOUOMiZMC5WKoSqrOKLMLdy21DyjboIYYS5FMTCXY3fauRq5QtNFJSa1fb5BWTjM2iHnqavruOIDhijCFZzE+rm+p3PuM3dK5hTxPIM3nz5rqW93l8tlZVmtJNlctwzD0A1HFzo+I/NvavusvAy+R4Nkc+4hmlCCUURekQR1BTxMfKUTzZOM8DD+xLSpm4Y0rcEKa9i06TdVf3dQoDvR0h7IjCGNhcgsjU0ggAwoBuV24rXUb6dVcHN3liHKgiSL2cH57yABXUCUpOBrrIysRHe6xSPpap8Ddj2Ko5yRBVzLNkkRBqaMMwjIakSYaD6fKUX5lRUTP1J2GeC/Kcu5votVQNePZKdP5sD4/6nZbr02Vu5QlEO70+3gaJQuvMvuILi/WLKJb17oHoXxbauAsKu8AbUt99v5sFm3vfV2KVwPB79+rF7Y9WBxORzX1uGg8dxEPeN+GEZLr1Hvmd8HnNfGdf2Zpxcr7+bG6T9c9DuN+9f5fHbx++f4O+v++9q3nryz9DZtkO4yquajl9c7P/y5dOYw5P2xk0fdh9o/5Ke5nODOdH3dy5N7J3+YPlwgO9Z/jCKYAcqfn5/g7nJGq1dPd2dhOKoZHez/ol7UpEPr+/K29R7Tbgz7wpISpvnTb8C8PMr28PrKUNQL8a/pRUqIrwWFqptKjmIcKFfb8pakFjcXBER8VxRzczaM4dCoDwc1y66bnVptYNSqRs1xzKHRGVS7/ZKDNigOIPYSGhDpS7Lspn++BohjlwH1IdMWSY5DYOoXFvuII8WjE/E4EspglggWZ46FrWZKiW0gM+ZkaYR+tlqwmqpcJ/yG3mSdgEO2T93OHnVPAJOUgOR32eBMdDjjIhcvaJHzyKwsUIVCLiZAJknYtexmTWckTiOQSPU48fMIKmmYFpnR2ebf0hBmhXQymBUP79O4Dr+VKRA6PpEKTMbSBVFGODKDjDKQTwO2rN2AS/Od3CfyfYl88ozgDZL9T+9tIvtj2yMiosfe9NEscW/VT77+8ab+BSj9MB9bR/6C7Lgth6mYD4I92mU1X1DlpZIvFnlRv4ZkxkyY1wVBmvoUcC7obT1LnoHqWxP6SdNli/rA81a+jy/nIZ1yxCEW3aYUxxNWiykwuVp44pmsTt1b9lyKvHFY8WOyXiQ2EIn4yyUFu1jqCfFY/C2TzH8v1xFbO35EnGKf4ITO5UnOkfUnTYETYZYI4kuyXePHDBxzvi/cJnmLhYtueso5fP5FkYzWUhHGSU6511cLwS7LFjj5OgX3XemDmYLJ30bzin06mh+uRlPBdzFSt7rkv5U1UrQLBlVuAAWWlroSm6ZwTuc7rP4G8BixD6t1p1F3BgWxNzbEbg0bzW0C9yJpfxB/lOzk9PA9tP8A</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF06FEF36A769EE05307991F0A2F78</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF06FE52461A55E05305991F0AE3BD</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF06FE52461A55E05305991F0AE3BD</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124512</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF06FE52471A55E05305991F0AE3BD</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF06FDFFBB76A2E05307991F0A3B17:43E3921D"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f571416-0159-451f-9e5d-db97431d19c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eeeb2e19-03d2-4eb7-87e4-a2a5d0c12e4f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0b56b960-c5a9-499f-bfd6-916ca9ab2ee7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00002_AccountUserCreate_with_country_LU_111_AccountGet_107_SUCCESS_P0" searchProperties="true" id="b12075ce-ab3f-4c6e-97cb-9b5fc58775f8"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="f11aba0c-868b-4728-a033-a420f3dac1c9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="6084d519-7d33-4f60-8b82-2df0401f967e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","LU");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="326627cc-f81d-45b3-90a6-86e9bcf76f8e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="539dce1f-cd4e-4d02-9370-9e011364edea"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="436e2d96-fec9-466b-a015-6d0cf60cdba0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20131025_020534</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF06FE52731A55E05305991F0AE3BD</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF06FE52731A55E05305991F0AE3BD</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH49CEki4RAUpFDhNt7cDdE+Xl5XrTMAlcYLtcNlfv3ZoKFDawx4JCXkynvnm4m/mgqMkrno+58AESakW9Nr6T8uy7MhxHMMOMTIcJ8JG67nZNGq1OtRrLjSgVde1gPMcAsoFoqKtVy3bMaymYbfGdt1zXM9uVGzHnujad2BcmpYqFUvX1klMuVe4bes5o16KOOEeRQlwT2Bv5N/eeFLTQyUmvXOxRVk4ZJ2ZEJlnmrgSAoY4xhWcJuaFeaBzEXJvRKYUiZzBq8+Qt/XXu6vVqrKqVVI2NasyWNNqmVIn5GT6Ve98KS9DGNAo3Z4vEU0pwSgmv5ACdQtiloaaH09TRsQs+cC0bdqWMm3AGhvYduhX3XxzUKA709IBSMaRwWfILo0NIQIGFIP2OAza+tfzKri9O2aI8ihlCT86/xkkoEuI0wxCg5eRlejOt3giXZ0LwF5AcZxzsoQ71SYZwsC1BwYRWd8QLpsv5FpRfm3N5Y+UXQb4T8pyYe5jldDNE9npkSlw8X9qtl+vrZXvKM6hsxjju6u7R77pdefXL4/9/lPe3NysltRttgsI+8pbULtyv56Pm3XXW6+XGEsmg9k0qC0G4bfNj03zpTnpLm5vX5bTX2BfAbpxR9eLVWaihztWpxNkbnjWexxPzLUrwhpbOGP2lF4vNrV7+OJP5vXm5dPD3Tx+hm9XD6Pu47/V4H7WH5l8RiM/67PvUbO3HEdVdz7xuw+Tl5of191p0EDP3Ml6vat1N7taukP7xxf7n1vRWt2jv4czq2aHf/HHoP0W034Mh8KSEkb58wtgUR5VewQ9bSDrhcTn9KIkJDSiQtXLFEdxAVToHXVLUYuXSwIioSeLuT1b1mBg1Z2u06+3GvXWZd9ya1aj1bIHlu9XW37JQVsURxAvUxoR5Uux7LZ/PgeIE48DDYEZyzTHM+D6JxZ7SCAtoEP5OFLKYZxKFofIsZOQbbidb2yr/jzF84WVznNJ3XepuKf3zI8EsEPqbh1Q9xAwyQgoflcNzmWHcyFzsUDLXMR2ZYkqFHI5AZgiYa/qNF2TkySLQSE1kzTMY6hks6zIjMm3/1UDYV5Ih/1x8fA+jOv4W5kCqRMSpcBVLF2QZYQTM8gqA/kw4Gp1P+DSvJ+HRL0vmU/BCN4iOfz01iaqP3Y9IiP6eTn6aZe4d+pnX39/0/wElHmcj52jcEn23JbDVM4HyR6dspoLVFlU8uUyL+rXUMzIpHlTEqRtjgDnkt4243QO1NyZMM+aLjvUR5538kN8uZjRkUACEtltWnE8Y7UYAVerRSCfyfrcveXApcybgLU4JbuM5QaiEH+6pGAPKz0pfpB/q5SFb+U6YWvPj4xT7hOC0Kk6qTmy+aApcCrNEkl8Kds3fsrAKeeHwl2Sd1iE7KbnXMDHXzTFaG0dYZzmVAQ9vRDss2yBU2wy8N6U3pkpmPx1NK/5h6P56fZmJPkuQfpOl/y3skGKdsGgqw2gwNLW13LTlM7pdI/VXwG+J/ZB3602arbvugWxu1ti79e6vV0CDyLpvBO/l+zl9Pg9dH4D</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF06FE52741A55E05305991F0AE3BD</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF064B4E69769CE05307991F0AA29A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF064B4E69769CE05307991F0AA29A</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124516</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF064B4E6A769CE05307991F0AA29A</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF06FDFFC376A2E05307991F0A3B17:BA54E5A4"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f571416-0159-451f-9e5d-db97431d19c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eeeb2e19-03d2-4eb7-87e4-a2a5d0c12e4f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0b56b960-c5a9-499f-bfd6-916ca9ab2ee7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00003_AccountUserCreate_with_country_NL_111_AccountGet_107_SUCCESS_P0" searchProperties="true" id="11574314-593a-4053-bb22-1e8c947e59fe"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="830b3786-7447-484b-92d4-07df01af56d5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="1ead6af3-396d-41a0-9ad8-a4e8c046a2ef"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","NL");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="f0ed8088-e663-48eb-b15b-27d6b89b9306"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="c7baefcc-af7d-499f-be56-4ce73a4b57cf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="312b0f18-b809-41ec-ba6d-f74b49186ca2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20131025_020534</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF064B4E96769CE05307991F0AA29A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF064B4E96769CE05307991F0AA29A</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH1chFwIkUUFKQ7uHLttSoLtVX1auMwG3iQ2xA5Rff+zQUKC0hz0SEvJkPPPNxd/MGUdZ6gQh55ALwqjW67b1P65tJY4T141GvQmGi72GgVDiGQCO53qe23r0PF3rcV5Aj3KBqGjrjmW7huUZtj+2m4HbCByr5rScB137BTmXpqVKzdK1VZZSHpRu23qR04AhTnhAUQY8EDgYhT/7gdQMUIVJ75xtUJYO885UiFlgmrgWA4Y0xTXMMvPM3NM5i3kwIhOKRJHDq8+Yt/XXu8vlsras11g+MR3LskzLN6VOzMnkq975Ul2GuEcTtjlHiDJKMErJGilQP0FMWayF6YTlREyzD0zbpm0p0wassIFtl37VzTcHJboTLe2BzDky+BTZlbEhJJADxaDdDXtt/etpFdzcHeeI8oTlGT84/x0koAtI2Qxig1eRVehOt3gkXZ0zwEGP4rTgZAHXqk1mCAPXBjkkZNUnXDZfzLWy/NqKyx+pugzw35TlzNzFKqGbR7LTJRPg4v/UbLdeGyu/UFpApyhu3TC9n0cpvfP68W1y3czCeTqPrli7hLCrvAG1Lffr+bBZt731eumf+NkaINZ/zv3Ie5jm5w/NSfSwMr/Ru3xwhdKn3HHXP+rX3XU8f/49LybO/b2I5s3peBB9b14+r7tOg980JkRcnH+5Io0B+T0coNveHFDzofUtovcNZj0NrpKsaFnf+4N1ZNapPWBra/1Cpi+r1nJ4J9zsHx/8/u3VzTV9WYU/okZufvkxnj3X3WU3abHHZG2Fi4nXfotpN4Z9YUUJo+LxCbCojqo9el3tUtYLic/pRUlIbCSlajBTHMUFUKF31C1FLUEhCYjEgSzm5mxZl5dW0z336uctO3T9C6tRtxq+b19aYd22LyoO2qA4gBgxmhDlS7Hspn8+B4izgAONITcWrMBT4PonFrtIIK1Hh/JxMMphzCSL29yeNthq+pjU/ZnteK0Cg5dQ/PSoa9dM3NCbPEwE5Pvc7e9x9xAwmRFQBK86nMsW50ImY44WhUjt2gLVKBRyBOSKhQPH9RomJ9ksBQXVzFhcpFCbTWdlaky++XcMhHkpHV6My5f3YWCH36ocSJ2YKAWuYjkHWUc4MoTsKpAPA3ac3YAr82ERE/XAZEJFTvAGyf6ntz5RDbJtEhnRn2j0x65wb9VPvv7+pvkJKPMwH1tH8YLsuK2mqRwQkj46VTXnqDavFYtFUdavpagxl+ZNyZC2OQJcSH57GbNnoObWhHnSeNmiPvC8le/jK8SUjgQSkMlu08rjCbvFCLjaLXrynaxOXVz2XMq8CViJY7IolSuIQvzploIDrPSkeCD/liyP38p1xNaOHxmnXCgEoRN1UoPk5YOmwEyaJZL5WL5r/JiBY873hdskb7EI2U2PhYCPv2iK0to6wpgVVPS6einYpdkSp3iZQfCm9M5MSeWvs3nFP5zN9z/7I0l4GdK3uuS/lQ1StgsGXa0AJZa2vpKrpnROJzu0/grwGLO7F36z1fSjktlbG2YPHT/cJnAvks478XvJTk4P30PnXw==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF064B4E97769CE05307991F0AA29A</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF064B83B71A49E05305991F0A311E</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF064B83B71A49E05305991F0A311E</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124519</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF064B83B81A49E05305991F0A311E</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF06FDFFCB76A2E05307991F0A3B17:6CC9A42C"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f571416-0159-451f-9e5d-db97431d19c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eeeb2e19-03d2-4eb7-87e4-a2a5d0c12e4f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0b56b960-c5a9-499f-bfd6-916ca9ab2ee7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00004_AccountUserCreate_with_country_AT_111_AccountGet_107_SUCCESS_P0" searchProperties="true" id="05af8fff-1e43-4727-ab94-4f1588891a83"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="5b64e510-0490-40fc-befc-b762f1e5ba8a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="13407ee5-f6ad-4b27-9a59-d018623ab897"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AT");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="20755ca1-b28e-4df7-91b0-490dbe04c795"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="783cc9e9-346a-4d9f-95a2-3ecf342fc042"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="8c03ba48-196a-48a2-9c18-0cf22fd5a8fa"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20131025_020534</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF064B83E41A49E05305991F0A311E</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF064B83E41A49E05305991F0A311E</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH6vgJMACUUGiEBZ2S9sF2m77UhlnAN8mTrCdQPfXXzs0FCjtZa+EhDwZz5z58Jk5FzgKXa8tBHBJY2YMuk3zyam7UJlViDVzg6pVaTRqFnadhhUQElQdAgTqddMYCJHCgAmJmWyaru1ULLtuOY2J882rVD23XLIr1UfTuAMulGmlUrJNYx2FTHi526aZcubFWFDhMRyB8CTxxu3hpac0PVxgMlvnG5S5Q95aSJl4CJFSoICEISmROELnaE/nPBDemM4ZlimHV5+BaJqvd1erVWlVLsV8jlzbtpHdQEonEHT+1Wx9KS5DMGCzeHPuYBYzSnBI/2ANaghyEQdGO5zHnMpF9IFpBzm2Nm3BmljEqbCvJnpzkKM70dIeSC6wJRbYKYyNYAYcGAHjdjRoml9Pq+Dm7oRjJmYxj8TB+e8gAcsgjBMILFFEVqA73eKRdLXOgXgDRsJU0AyudJskmIAwbjjM6PqSCtV8gTDy8htroX606DIgf1OWc7SLVUFHR7LTpXMQ8v/UbLdeGyt3OEyhBfdZ42wofkfPfcmh/Xh/036gQwcnP0gzh7CrvAG1Lffr+bBZt731esn/Nf2BULIqs1Vy8bM+QutuVE3xtH99/fCYjJYPfTzwR+5F7Lfv0+5gOAhotd++qZ2NVxP1nu8fq/1OJ3rm/Laffrlrz+f9bsj9hwz7yeiyS1/cs0US+vFCLKd/0FB0fiHSW35/uLlb2PTHfTZxH69lHy0yv+Y8/qxG0yz+c3V7djULv1Ba/jnrfydBJtgFsNl9+bb5FtNuDPvCghLG6fQfILI46vYYdI2eqheWn9OLltDAmuWqXqI5Skhg0mzpW5pavFQREA08VczN2bZ7Pftbz++V653at4bv29WyXWs0nJ7ddnu1esFBGxQHEDsxm1HtS7Pspn8+B0giTwALgFtZnJIFCPMTi10ssTFgI/U4YiZgEisWr7PVdJ7UHLZck4Bz7MjG0p1LZhpXsbxm17w9k8D3mbuxx9wjIDShoOld97dQDS6kSsUSZ6kMnVKGSwxSNQC45mDPrdSrSNAoCUEDRVEcpCGUkkWSJwaJzb9rYSJy6cif5O/uw7AOvxUZUDoB1QpCx3IBqopwZAQ5RSAfBuy6uwEX5ttpQPXzUumUnJINkv1Pb12i22PbIiqip874ySlwb9VPvv7+JvoEFDrMx9ZRkNEdt8UsVeNBkUerqOYSl5alNMvSvH41TYxcmUeKHx00BpIqdnuZxM/A0NYEOmm4bFEfeN7K9/GlcsHGEkuIVLcZ+fGEzWIMQm8WA/VK1qeuLXsuVd4krOUxWSdUC4hG/OmOQjyi9ZT4Rv2tYh68leuIrR0/Kk61TkjK5vqkx8jLB01BYmWWKt6L+a7xYwaOOd8XbpO8xSJVN01TCR9/MTShNU1MSJwyOeiauWCXZHOc8iUB703pnZmcyF8n81p8OJl/Dy/Hiu4ibG516X8rWzRvFwKmXgByLE1zrRZN5ZzNd0j9FeB7Xq9c1Mt+xWlXGjmvVze8XnYcf5vAvUha78TvJTs5PXwPrX8B</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF064B83E51A49E05305991F0A311E</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF06FEF38C769EE05307991F0A2F78</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF06FEF38C769EE05307991F0A2F78</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124522</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF06FEF38D769EE05307991F0A2F78</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF064AE9EA1A45E05305991F0A570D:C627546B"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f571416-0159-451f-9e5d-db97431d19c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eeeb2e19-03d2-4eb7-87e4-a2a5d0c12e4f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0b56b960-c5a9-499f-bfd6-916ca9ab2ee7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00005_AccountUserCreate_with_country_DE_111_AccountGet_107_SUCCESS_P0" searchProperties="true" id="4a3c798e-129e-496d-945c-2203e248429d"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="5c257eeb-aa96-41fc-94c2-ab8ecd0e718e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="c349e0ff-4c5d-42c2-98ce-11113a44e6fa"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","DE");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="3ceaf3c5-b712-4b86-82ef-399d3dd33141"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="e8c949f0-41a5-43bd-ad83-68c5d22b5070"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="d2c71e5c-5faa-43b1-96c2-ef37ca2e8b68"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20131025_020534</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF064B4EBF769CE05307991F0AA29A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF064B4EBF769CE05307991F0AA29A</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+o4EH4/vyJKH6uQC4GEqCBxraLtFTjdbl8q45jgNrFD7JCUX792IBQo7XJWQkKejGe+ufibuWIgjiyvyxhKOaZE8Qdt9dVwXQc0XahBd1bXbHcWaMBy6prVhAGqO7Dh1huq4jOWIZ8wDghvq5Zh2prhamZrajY9u+FZzZphOS+q8oRSJkwLlZqhKkUcEeaVbttqlhKPAoaZR0CMmMehN+ne3nhC0wMVJrVztUFZOkw7C84TT9dhLUAQRRGsQRrrV/qBzlXAvAkOCeBZirY+A9ZWt3fzPK/l9RpNQ90yDEM3WrrQCRgOL9TOr+oyCnwyp5tzHxBKMAQRXgMJ6hbxBQ2UbhTSFPNF/I1pUzcNaVpDhcimaZMLVf90UKI709IByJQBjS2AWRkbozlKEYFI+T322+rFeRXc3J2mgLA5TWN2dP4zSIisUEQTFGisiqxCd77FE+nqXCHo+QRGGcMrdCfbJAEQMeUhRXNc3GAmmi9gSll+pWDih6suQ/BPynKl72MV0PUT2RngEDH+f2q2X6+NlScQZahjOqSP3tngsni2rm8fr/Mw9KPZ0Aqu39slhH3lDahdubfn42bd9db20sjR3/HqaVpv9DgK12EveuvTZv7PcpEXj0GUA3fhktFL64m6rP7ca2Z3wyj87UO8fli5vezSWE/DXivv83ra+xXmDfeRh/TlHowz2I9yfRAUH7fZZXA76veLt+EbzZbOEpCPRA/9af73w5q8mfj9Pry2/rp/Np8+Atiitg74Q/cXjrrNVrJ6v3l8HpO4Pp31afszpv0YDoUVJUyy2RuCvDrK9vAHykjUC/Cf6UVKcKDNS1UvkRzFOCJc7chbklq8TBAQDjxRzM3ZMEYjozkaOnaz6TS79tBo1A2n1TJHRrc7HAwrDtqgOILYp2SOpS/Jspv++RkgjD2GSIBSbUUzuEBM/cHiAHCg+GQsHgclDE2pYHEAGhjRpIjj9Ww5CyJ7ZZtO0rBV5Y7ye3KfduccpYfM3Tpg7jGCOMFI0rvsbyYanHGRiiVYZTwyaytQIygTAyCVHOxZttvQGY6TCEmgekyDLEK1ZJGUidHZ5t/SAGSldDyclu/u27COv1UZEDoBlgpMxtJDooroxAgyq0C+Ddiy9gOuzHezAMvnJdLJUww3SA4/fXaJbI9di4iIXvuTV7PCvVM/+/rXm/oPoPTjfOwcBSu857aapWI8CPLoVNVcgtqylq1WWVk/RxJjKszrgh9NfYJgJtjtY0rfEdF3JvSzhssO9ZHnnfwQX8YXZMIBR7HoNqU8nrFZTBCTm4UvXklx7tpy4FLkjaOCn5L1I7GASMQ/7ijQg1JPiB/EX07T4LNcJ2zt+RFxinWCYxLKkxwjH980BaTCLBa8R9N946cMnHJ+KNwleYeFi26aZRx9/0WRhNZWAYQ0I9wfqKVgn2RLnPwjQd6n0hczJZFvJ3PBvp3Mz7c3E0F3MVB3uvi/lTVctgtEqlwASixttRCLpnBOwj1S3wL8yut2zx72Rk6z1T/gdavV3SXwIJLOF/FXyV5Oj99D518=</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF064B4EC0769CE05307991F0AA29A</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF06FE746676A4E05307991F0AAEDE</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF06FE746676A4E05307991F0AAEDE</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124525</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF06FE746776A4E05307991F0AAEDE</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF064AE9F21A45E05305991F0A570D:54E28FD3"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f571416-0159-451f-9e5d-db97431d19c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eeeb2e19-03d2-4eb7-87e4-a2a5d0c12e4f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0b56b960-c5a9-499f-bfd6-916ca9ab2ee7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00006_AccountUserCreate_with_country_CH_111_AccountGet_107_SUCCESS_P0" searchProperties="true" id="cd2795e9-ab0a-4a54-8a74-c0505ecdab9c"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="b1b99719-9bf5-464b-a384-6ec733007505"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="af0303c4-ac89-4db8-a370-ada3bfbc5e47"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CH");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="274c66f7-62ad-4959-b4b9-8b1b23f3f16a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="46204628-fa36-4fab-b478-0a8abcf72e44"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="e9a133ff-28fe-43f4-bf51-82942fceb42e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20131025_020534</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF06FE749376A4E05307991F0AAEDE</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF06FE749376A4E05307991F0AAEDE</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU+o8FH33V3Tqo1PaQrm0I8wUEMW7gnr0xQlpCtE2gSQtxV9/kmIREP043wwzTHZ31l77kpUccxBHZc/nHDGBKdH63ab+GtSqwHVc2wjdGjQcVIXGyB25Rtgoh3Y9rJWrFtS1PucJ6hMuABFNvWzZjmE1DNsd2jXPqXplt1RuVF507RExLqGlS8nStSyOCPfysE09YcSjgGPuERAj7gnoDfyrS096eqDgpLeOlyzzgKw1EWLqmSYsBQiiKIIlSGPz2NzwOQ64N8BjAkTC0GfMgDf1z73z+bw0r5QoG5tly7JMyzWlT8Dx+FBvHRSbUdAnIV2uO4BQgiGI8AdQpK6QmNBA86MxZVhM4h+gbdO2FLSBMmhA2yGHuvkVIGe3J9IGScaBwSfALsDuUYgYIhBpD/f9pn64XweXe4cMEB5SFvOt9b9RQiRFEZ2iwOBFZgW7/RF3lKt1jKDXJzBKOE7RtRqTKYCIa7cMhTi7xFwOX8C1vP1axuUPF1OG4L+05dhc5yqpmzuq08VjxMX/6dl6v5YojyBKUCs8DTp2+SxqiNPTxKpbldM7Sp5vzkg8b+YU1p2XpFbt/lxvD+tqtj439R8ue4sknncWJJoEbJ6esD9j//L9rQdursNunT5FNZex0VP7IgALc1zrzeDHnfN4kTi1dNINU9q+bZvxS3848w/u/MwZnveY7YskoO/J7ctwgV7E+3Xv9M195GfjWnaBeFp9ugRO56jTm1vDSj1+qd1mpyQcnx9Vr7LF88c5zdhD4wAcvbXbHyMzOXt+7mRvLw9nfvMrp/UcNo2FJAyS0RuColiq8eh3tZ7sFxC/y4uy4MAIc1dvqjSKC0SE3lK7lLR4iRQgHHiymcu1ZfV6Vs1pNxzLtn3HPbGqFavqunbP8iu2fVJo0JLFFsUOJSFWsZTKLufnd4Iw9jgiAWJGShM4QVz/BbELBND65F4eDko4GlKp4pVpOpo68wmvvM3sSvbxEVMOoAiQrl1TcUNumB8KxDal292Q7nsE8RQjpe9qwLmccC4B4AykiYjsUgpKBCXyBmBKhL2y06iaHMfTCCmmZkyDJEKl6WSaV8bky/+yASDPrfcnw/zg/ZjX9reiBNInwMqBq1zaSLYR7biD7CKRHxMul9cTLuD9JMDqfMl6Cobhksnmp68xUfOxmhGZ0Wtn8GoXvFfue2//vtP8hZS5XY9VoCDFa2GLy1TeD1I9WkU3Z6A0KyVpmuT9qytlZBLelAJpmwMEEylviyF9R8RcQZh73S4r1luRV/ZNfomYkIEAAsVy2rR8ucfTYoC4elr05THJ9n23bISUdRMoE7tsnUi+QBTjXx8p0IPKT5pv5d+csuCrXTuw1uLIPOV7QmAyVit1jyx+GApIJSyWwkfZOvgugF3BN42rIq+4CDlNo0Sgn79oStGaOoCQJkT0u3puWFfZnKdYTJH35fQNJlfyz6s54z9ezX+uLgdS72Kgr3zxfzsbOB8XKNVN+udcmnomX5oyOBmvqfonwe/C3jupO26lXvOdXNjrS2H3T7orYd/MpPXN/N2yVtPt89D6Cw==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF06FE749476A4E05307991F0AAEDE</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF064B84011A49E05305991F0A311E</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF064B84011A49E05305991F0A311E</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124528</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF064B84021A49E05305991F0A311E</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF064AE9FA1A45E05305991F0A570D:D824953B"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f571416-0159-451f-9e5d-db97431d19c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eeeb2e19-03d2-4eb7-87e4-a2a5d0c12e4f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0b56b960-c5a9-499f-bfd6-916ca9ab2ee7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00007_AccountUserCreate_with_country_FR_111_AccountGet_107_SUCCESS_P0" searchProperties="true" id="4e19de5c-a991-4442-9423-16de3e7b0a35"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="62403a9e-b26e-449e-a9cd-dc2f77bc64dc"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="aee99d4f-63d0-40a0-9ba6-b9135059d6b7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","FR");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="d896ed3e-63f6-4cc8-af08-b1aa6df07273"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="71178ac8-8b33-4ed5-8ce4-27470152c5d1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="39232402-b9ee-4982-a393-2658ea23c2e3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20131025_020534</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF064B842E1A49E05305991F0A311E</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF064B842E1A49E05305991F0A311E</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH6uQCwFCVJAol0NYelGhdNmXletMiCFxIHaA7q8/dmgoUNrDHgkJeTKe+Wbm82dfMxRHlttiDFJOEqp4nYb627EM24QqaJYJjmZbZk1DUEEa8u0qlH3xKzuq4jGWgUcZR5Q3VMswbc1wNLM+NquuXXHLVqlWq/1SlQmkTIQWLiVDVbZxRJmbp22oWUrdBDHCXIpiYC7H7qh1O3SFp4sKTGrzeocyT5g2Q86Xrq7jkg8YogiXcBLr1/qRz7XP3BGZUcSzFN5y+qyhvu3dbDalTbmUpDPdMgxDN+q68PEZmX1Xm9+KzeB7NEh26zaiCSUYReQPkqBugYeJr7SiWZISHsafhDZ105ChNdhiDZs2/a7q7wlydBdGOgKZMqSxEJlFsEcIIAWKQXl69Brq98smuNs7ThFlQZLG7GT9d5CAriFKluBrrKisQHd5xDPtal4Ddj2Ko4yRNdxJmiwRBqY8pBCQ7ZAwQT6fKfn4lS0TP1KwDPDfjOVaP8QqoOtnutMhM2D8/8zscF67KBMUZdBsP3cEj5P+1dVkaj9HwzHu9Phg+jNwnEYO4dB5B2o/7rf1KVn33HrbNE/CfyzvebkY3/QXrZfVpO85r9ZN7X42NDfe3PbrRtsaz0fDari4Wq2mE5aE264zqQSs4ixG8POhH9hDCzkLsL+FrwvyY/HgePqc3Exvp4Nh74dPFy29Ol/1yABNf01G8WA1+WNP0VP3zg4Mq99PcF+H7OH56ql7yzfRZPXSHjxXwm8hPIBfr+nB4BZWk+0kMp4a7zUd1nBsLCRhlL3MAfNiKenhdZSemBfiX8uLtBBfC3JXdyk1inGgXG3KXVJa3EwIEPFdMczd2jB6PaNmGtVW3TBbdqdrVMpGpV43e0bLaVs3hQbtUJxAbCc0IDKXVNkdf74GiGOXAfUh1dZJhkNg6hcRO4gjxaOP4nAklME4ESoexJs4wjXbnm/Yq18NKpt12YjndVW5S/g9vU9bAYf0WLnrR8r9CJgsCUh5l/xmguCMi1as0DrjkVlaoxKFTFwAqdRg17Kdis5IvIxAAtXjxM8iKC3DZd4Yne3+LQ1hllsfu+P83H1a1um3ogPCxyfSgclabkBMEc5cQVZRyKcFW9ZhwUX4VuYTebxEO3lK8A7J8ad3lkh67CkiKvrdHv02C9x794u3f9ypfwFKP+3HPpG/Jgdpi7tUXA9CPJrFNFeotCpl63WWz68mhTEV4XWhj6Y+ApwJdXsdJwug+j6EftHlskd9knlvP8aX8ZCOOOIQC7Yp+fKCl8UImHxZeOKUbC99thylFH3jsOXnbO1IPEAk4i/fKNjF0k+YH8TfJkn993GdiXWQR9QpnhOc0JlcyWvk9RNS4ESEJUL3kvQw+LkA55IfG/dN3mPhgk0vGYfPvyhS0BoqwjjJKPc6am44FNkcJ39dgvvu9CFMLuRvN/OWfXoz/7wdjoTcxUjd+5L/dtZIThcMqnwA5Fga6lY8NEVyOjsQ9TeAH3S9at84ttUVul4/1PWyaXb3DTyqpPnB/NFy0NPT89D8Fw==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF064B842F1A49E05305991F0A311E</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF07106A901A4DE05305991F0A8C2B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF07106A901A4DE05305991F0A8C2B</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124532</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF07106A911A4DE05305991F0A8C2B</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF06FEF3C6769EE05307991F0A2F78:ACFBBDB0"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f571416-0159-451f-9e5d-db97431d19c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eeeb2e19-03d2-4eb7-87e4-a2a5d0c12e4f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0b56b960-c5a9-499f-bfd6-916ca9ab2ee7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00008_AccountUserCreate_with_country_NZ_111_AccountGet_107_SUCCESS_P0" searchProperties="true" id="35963a50-fd3c-4ae4-b9e9-5121cce6bbf4"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="9acb6b68-8875-4466-a16a-eab1476ab194"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="55cf2036-fb94-486e-ad99-c30b2e04c5cf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","NZ");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="ed788946-fa35-47b9-a00b-88373fa0fbe6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="cfb7fbcb-1464-43c0-bced-83e56868e42b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="d32aaa89-1b0c-40a2-b913-0181fd0f7433"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20131025_020534</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF06FE52A81A55E05305991F0AE3BD</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF06FE52A81A55E05305991F0AE3BD</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj6uQhCRAooJEuWzTA71xabcvlXEGcJs4NHYg7K8/dmgoUNrDHgkJeTKe+ebib+acoSgse03GIOEkporfrqvPVs21qxaaatUKWJptuIE2mbhTzTJsx3EqrmHgqar4jKXgU8YR5XW1bJi2ZtQ00x2aFc92PMsp1crVJ1UZQ8KEaaFSMlQli0LKvNxtXU0T6sWIEeZRFAHzOPYGzX7PE5oeKjCpjfMNytxh0phzvvB0HZcCwBCGuITjSD/X93TOA+YNyIwinibw7jNgdfX97mq1Kq2sUpzM9LJhGLrh6kInYGT2Q22cFZch8Ok03pxbiMaUYBSSP0iC6gOfx4HSDGdxQvg8+sK0qZuGNK1BhjVs2vSHqn84yNGdaGkPZMKQxubILIzdwxQSoBiU0b1fV3+cVsHN3WGCKJvGScQOzn8HCegSwngBgcaKyAp0p1s8kq7GOWDPpzhMGVnCtWyTBcLAlNsEpiTrESaaL2BKXn4lY+JHii4D/DdlOdd3sQro+pHstMkMGP8/Ndut18bKGIUpNAy4bKVs5I9eluOn5a+f+nqc2c3VNerc1XMIu8obUNtyv58Pm3XbW++X2tV+dD957I3oryer6wTc/529ZrCujNsP5jJ6MIwEzfhtl9Uu+s7CvLkbxrfkajC5qlacp7X/z4D+afOHq9lk1ZqdtS7HEN65057pj6/IfPjmXE4eIqv11M8e2+Htr2olrjZf1i+9x+Fs3LPYnVWb31zNLiHuMf3hJ7J7fXuER7+Tx9H12bw26YwWs84ALuZ/lgNKk1H9I6bdGPaFBSUM0skLYF4cZXv4baUr6oX49/QiJSTQprmqt5AcxThQrjbkLUktXioIiASeKObmbBjdrlGxL2q2bZlN2+0YjmU4rmt2jaZlmp2CgzYoDiC2Yjol0pdk2U3/fA8QRx4DGkCiLeMUz4Gp31hsI44Un96LxxFTBsNYsLjpVtL1ime2bTBKa+XX6DVxLbdqqsp1zG/oTdKcckj2qdvdo+57wGRBQPK7bHAmOpxxkYs3tEx5aJaWqEQhFRMgkSTsle2aozMSLUKQSPUoDtIQSov5Is+Mzjb/ZQ1hlkvvO8P84X0Z1+G3IgVCJyBSgclYLkCUEY7MoHIRyJcBl8u7ARfmm2lA5PsS+eQJwRsk+58+2kT2x7ZHRETPrcGzWeDeqp98/fNN/RtQ+mE+to6CJdlxWwxTMR8EezSKar6h0lspXS7TvH5VyYyJMK8LgjT1AeBU0Nt6GL8C1bcm9JOmyxb1geetfB9fyud0wBGHSHSbkh9PWC0GwORq4Ytnkp26t+y5FHnjkPFjslYoNhCJ+NslBXtY6gnxrfhbxUnwUa4jtnb8iDjFPsEJncmTnCPrL5oCx8IsEcQXJ7vGjxk45nxfuE3yFgsX3TRJOXz9RZGMVlcRxnFKud9Wc8Euy+Y4+XoB3ofSJzM5k7+P5ox9OZof+72B4LsIqVtd8t/KGsnbBYMqN4AcS13NxKYpnNPZDqu/A/xM7N2OU27WzKbj7BJ7x7pobxO4F0njk/izZCenh++h8S8=</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF06FE52A91A55E05305991F0AE3BD</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF064B84431A49E05305991F0A311E</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF064B84431A49E05305991F0A311E</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124534</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF064B84441A49E05305991F0A311E</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF06FEF3CE769EE05307991F0A2F78:B424F3F"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f571416-0159-451f-9e5d-db97431d19c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eeeb2e19-03d2-4eb7-87e4-a2a5d0c12e4f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0b56b960-c5a9-499f-bfd6-916ca9ab2ee7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00009_AccountUserCreate_with_country_IE_111_AccountGet_107_SUCCESS_P0" searchProperties="true" id="ad4be240-5944-4f5b-9992-5b5c413d734d"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="da162ecf-b3ec-429a-a637-7e15e9d1c1fd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="5893ddad-b4e3-4e5e-9bed-8fc9ecad5792"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","IE");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="1392ed0f-7567-4f26-ba3a-c3cd91dc03e3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="47e47585-450a-450c-a66d-0c907df8bd24"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="d4bdec45-bd40-4e86-8819-91d937abab23"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20131025_020534</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF064B84701A49E05305991F0A311E</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF064B84701A49E05305991F0A311E</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4z8YXDAZPYIYQyKEJkAaSpn3pKPIalNqykWQw+fVHMpgAITn0zDDDaL3a/faib/eCozhy/A7nwARJqDa4aum/64HnPFueY1RDGxsucrDRdKy6ETqhazXCGtSqga4NOM9gQLlAVLR0x7Jdw2oYdnNq13235lcblZpr/dK1R2BcmpYqFUvX8jii3C/ctvSMUT9BnHCfohi4L7A/6QxvfanpoxKT3r7YoCwcsvZciNQ3TVwJAEMU4QpOYvPCPNC5CLg/ITOKRMZg6zPgLX17d7VaVVbVSsJmpmNZlmk1TakTcDL7qre/lJchGNAw2Zy7iCaUYBSRV6RADUHMk0DrRLOEETGPPzBtm7alTBuQYwPbLv2qm28OCnRnWjoAyTgy+BzZpbF7CIEBxaA93A9a+tfzKri5O2WI8jBhMT86/x0koEuIkhQCg5eRlejOt3giXe0LwP6A4ijjZAkj1SYpwsC1OwYhyW8Jl80XcK0ov5Zz+SNllwH+m7JcmPtYJXTzRHauyAy4+D8126/XxsojijJor8aLm7tb77Y+NpvTpz/Xq+HoZ32KxKqatAoI+8obULtyb8/Hzbrrre2lnv2DCbqK+w+P6eQhvnWr8wlLRAZjr+berWHcuLyPpq9pfD0cDbOn/urb90X9cvnr8Zd303hZ1iO+egHvqtrtNWdfpkHK8j931zdxj49M6580T6dh7SFf1m7wN+baY08E3vfRt+z5WaxvosAdrr1qzGaQ3IWD4Uqk82zw88fTyInY65cuz3pDdLkmi9nztYVyi/1svcW0H8OhsKSESfb8AliUR9UegyutL+uFxOf0oiQkMMJC1U8VR3EBVOhtdUtRi59JAiKBL4u5OVtWv2/V+z1Z2K5X7zg9q1a1vGbT7lud6qXtlRy0QXEEsZvQkChfimU3/fM5QBz7HGgAzFgmGZ4D1z+xeIUE0gb0Xj6OhHKYJpLF7SaK5otklmNYhHZYn9Om+0KtV2uta6NEjOmYdUIB7JC7mwfcfQ+YpAQUwasO57LFuZDJWKBlJiK7skQVCpkcAUyxsO+4jZrJSZxGoKCacRJkEVTSeVqkxuSbf8dAmBfS+960eHkfBnb8rcyB1AmIUuAqlkuQdYQTQ8gpA/kwYMfZD7g038kCoh6YTKhgBG+QHH566xPVILsmkRH97k5+2yXunfrZ19/fND8BZR7nY+coWJI9t+U0lQNC0ke7rOYCVRaVbLnMivp5ihqZNG9KhrTNCeBM8tt6mvwBau5MmGeNlx3qI887+SG+TMzpRCABsew2rTiesVtMgKvdYiDfSX7u4nLgUuZNQC5OybqRXEEU4k+3FOxjpSfFd/JvlbC3wE/Z2vMj45QLhSB0pk5qkKw/aAqcSLNEMl/C9o2fMnDK+aFwl+QdFiG76TkT8PEXTVFaS0cYJxkVgyu9EOzTbIFTrFPw35TemSmofDubc/7hbH4a3k4k4cVI3+mS/1Y2SNEuGHS1AhRYWnouV03pnM72aH0L8D2zu5cN17PsjtssmL22ZXbb7u0SeBBJ+534vWQvp8fvof0v</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF064B84711A49E05305991F0A311E</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF06FE000C76A2E05307991F0A3B17</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF06FE000C76A2E05307991F0A3B17</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124537</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF06FE000D76A2E05307991F0A3B17</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF064B4EE7769CE05307991F0AA29A:B1ED8F16"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f571416-0159-451f-9e5d-db97431d19c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3b76620f-4b76-47c7-b518-50523f60feff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>056af997-d7cd-4a3f-9727-f3229d073150</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00010_AccountUserCreate_with_country_AU_111_AccountGet_107_SUCCESS_P0" searchProperties="true" id="944881a4-2b32-4f95-b3ba-70b43c8aa11e"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="2a6621d7-d53c-4d7a-804d-e171c83099da"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="80ed903c-0212-42e4-9077-1e9674bc4d7b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AU");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="aa0d06e6-d7f0-42ce-99d4-dd2ba7385d10"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="318e8de2-ab89-4a20-bae5-b19467539a6a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="00883ec6-60e2-4169-9329-bd9ded92fc80"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20131025_020534</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF06FE52D11A55E05305991F0AE3BD</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF06FE52D11A55E05305991F0AE3BD</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj6uQO5eoIFEuXbal3QP0ti8r4wyJS+JA7HD79ccODQVKe9gjISFPxjPfXPzNXDIUR5bXZAxSThKq9Np19Y9r1KACNmhj18SaM8G+Vh1jS7Mdu1yrTYxyGdVUpcdYBj3KOKK8rlqG6WhGVTNrI7PsOa7nmCXbNX+ryiOkTJgWKiVDVVZxRJmXu62rWUq9BDHCPIpiYB7H3rDZv/WEpocKTGrjcosyd5g2Qs5nnq7jkg8YogiXcBLrl/qBzqXPvCEJKOJZCm8+fVZX3+4ul8vS0i4laaBbhmHoRk0XOj4jwTe1cVFcBr9HJ8n23EI0oQSjiGyQBNUHHia+0oyCJCU8jD8xbeqmIU1rsMIaNh36TdXfHeTozrR0ADJlSGMhMgtjA5hAChSD8jDo1dVv51Vwe3eUIsomSRqzo/PfQQK6gCiZga+xIrIC3fkWT6SrcQnY61EcZYws4E62yQxhYMqvFCZkdUuYaD6fKXn5lRUTP1J0GeC/Kculvo9VQNdPZKdNAmD8/9Rsv15bK48oyqARO63wxQ5o1RlXOuZ19UV/gGpr4aZWtZ5D2FfegtqV++183Ky73nq7BP3r/ma5QmXc7E3X1X8e7kZ+8BpUfj/ZtWrLfiZ8YlldMrrt+87Awd2rq02/4ob4x+Pwe7c7b4Zl3eg+DB/v4+XgYkqfbfb69PtXGN9s5lF0c12ezubmc0CmQQbh+oXXplNOs81wcfN4Y4Uvy+V3u7Nq03V8A+WmMa8kC/9xEzw9G7WL8c/n8c/R7TzuXK98N7r/Acv6e0z7MRwKC0oYZuNXwLw4yvbotZWuqBfiX9OLlBBfm+Sq3kxyFONAudqQtyS1eJkgIOJ7opjbs2F0u0bFNMrNtmk2nXbHcG3DrdXMrtGstqyrgoO2KI4gthI6IdKXZNlt/3wNEMceA+pDqi2SDIfA1C8sthFHSo8OxONIKINRIlh87DhrWh4n5pzNzAp7dap0s6hMYq4qdwm/p/dpc8IhPaTu2gF1DwCTGQHJ77LBmehwxkUu5miR8cgsLVCJQiYmQCpJ2LOcqqszEs8ikEj1OPGzCEqzcJZnRmfbf0tDmOXSQWeUP7xP4zr+VqRA6PhEKjAZyxWIMsKJGWQXgXwasGXtB1yYb2Y+ke9L5JOnBG+RHH56bxPZH7seERH9aQ3/mAXunfrZ1z/e1L8ApR/nY+fIX5A9t8UwFfNBsEejqOYclealbLHI8vpVJDOmwrwuCNLUh4AzQW/rUTIFqu9M6GdNlx3qI887+SG+jId0yBGHWHSbkh/PWC2GwORq0RPPZHXu3nLgUuSNw4qfkrUisYFIxF8uKdjDUk+If4m/ZZL67+U6YWvPj4hT7BOc0ECe5BxZf9IUOBFmiSC+JN03fsrAKeeHwl2Sd1i46KZxxuHzL4pktLqKME4yynttNRfss2yOk69n4L0rfTCTM/nbaF6xT0fzc/92KPguRupOl/y3skbydsGgyg0gx1JXV2LTFM5psMfqbwA/EHu523EtSeyuu0/sHfuqvUvgQSSND+KPkr2cHr+Hxr8=</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF06FE52D21A55E05305991F0AE3BD</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF07106AD11A4DE05305991F0A8C2B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF07106AD11A4DE05305991F0A8C2B</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124540</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF07106AD21A4DE05305991F0A8C2B</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF064B4EEF769CE05307991F0AA29A:46A4C895"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f571416-0159-451f-9e5d-db97431d19c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d988188e-d2f8-4d90-874d-4b8147a8e32e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7ad16474-4504-466c-90fd-019f8a0f5c5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00011_AccountUserCreate_with_country_CA_111_AccountGet_107_SUCCESS_P0" searchProperties="true" id="f639fc9f-fd13-4140-8115-b14515d9a75f"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="098b479b-6c40-47c5-8fd2-0fd49a3ecb66"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="eacc2462-2542-4e28-bd3c-849cd3e91a30"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CA");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="f70881fd-d64b-4af3-b37f-5c527ec7ddbb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="70cf8406-36b4-4aeb-b28d-d8f236c08664"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="9f53aaa2-fc05-442f-a4e8-f53bf4f31eff"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20131025_020534</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF07106AFE1A4DE05305991F0A8C2B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF07106AFE1A4DE05305991F0A8C2B</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+o6EP7ur+jUj07pCwWhA8xwQBQVUF48V784IV1Kjm2KTQrFX3+TYisgeDl3hhkm283us7tPnqTGUOBbTpMxiDgJqdJt19VXDJWKYVm2BgiwZs8AtKnh2lrJRoZbvTQtd4ZVpctYDF3KOKK8rlqGaWtGRTOrY7Ps2CXHtgtWqfyiKk8QMRFauBQMVUkCnzInTVtX44g6IWKEORQFwByOnVGzd+8ITwdlmNRGbYMyTRg15pwvHF3HBRcw+D4u4DDQa/qOT81lzoh4FPE4gs+cLqurn3tXq1VhVSyEkadbhmHoRlUXPi4j3rnaOMs2g9uls3CzbiEaUoKRTz6QBNUDPg9dpel7YUT4PDgS2tRNQ4bWIMEaNm16rupfCVJ0J0baARkxpLE5MrNgQ5hBBBSDMhl26+r5aRPc7B1HiLJZGAVsb/13kIAuwQ8X4GosqyxDd3rEA+1q1AA7XYr9mJEl9CVNFggDUx4imJHknjBBPpcp6fiVhIkfyVgG+G/GUtO3sQro+oHutIkHjP+fmW3PaxPlCfkxNOL5cn6bVIez8kW/B/eTstF/+3NH7fHFcz2FsO28AZWP+3O9T9acW5+bJqvewq/QVuv6Oah8QOsxeXxb0utxt/x2F3Qum60qWQzCQdDncT+4Sdbj38/TdcVtzSG6G33M7duX68nHS4v1g+T2zGt2fsdDtzeyr7yJmbjjiW3qK3jqTL0H8Jp8QErB8PZmHHzcPFjzq/fVyvYecPASPl4PVlHk9zzUjuNbYl4Vq2c3wbW/WBWtYBJewHRwTzrd+ldN2zXsGjNJGMXTP4B5tpT06LaVjpgX4j/Li7QQV5ulrs5CahTjQLnakLuktDixECDiOmKYm7VhdDrGpWF22uKv3DSujFLRuKxWzY7RLFZLZqZBGxR7EFshnRGZS6rshj8/A8SBw4C6EGnLMMZzYOoPEduII6VLh+JwhJTBOBQqbhp2yau+ld6NaFo1kc98an6sfVJ8U5V+yAd0EDVnHKJd7a7uaPcQMFkQkAIvGc4ExRkXzXhHy5j7ZmGJChRicQVEUoUdy66UdEaChQ8Sqh6EbuxDYTFfpK3R2ebf0hBmqXV4NU5P3tHC9r9lPRA+LpEOTNbyC8Qc4cAlVMwKOVqwZW0XnIVvxi6RB0w0lEcEb5DsfvriiSRIThJR0Wtr9JqTIXc/efv3nfoPoPT9fuSJ3CXZSpvdpuKCEPLRyKb5jgrvhXi5jNP5XUppjER4XSikqY8Ax0Lf1uPwDaieh9BPul5y1HuZc/suvpjP6YgjDoFgm5IuT3hbjIDJt0VXnJPk1IfLTkrRNw4JP2Rr+eIJIhH/+ErBDpZ+wvwg/lZh5H6N60CsrTyiTvGg4IR6ciUvkvURUuBQhCVC+cJoO/ihAIeS7xrzJudYuGDTNOZw/IsiJa2uIozDmPJuW00N2zKb4uTrBThfTt/CpFL+eTcn7Ojd/E/vfiQEL0Bq7kv+21kjKV0wqPIJkGKpq4l4aork1NuS9U+A35XdNMrNzpXZtNupspc2yl5pWb/yBu5U0vhm/m7Z6un+eWj8Cw==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF07106AFF1A4DE05305991F0A8C2B</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF0701FDF076A0E05307991F0A3951</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF0701FDF076A0E05307991F0A3951</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124543</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF0701FDF176A0E05307991F0A3951</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF06FE003876A2E05307991F0A3B17:1BBD1B1"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f571416-0159-451f-9e5d-db97431d19c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>107bf297-fe0c-4dc9-8815-bfcf8b812633</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8750da29-e94e-4955-b4a5-2b7521348166</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00012_AccountUserCreate_with_country_GB_111_AccountGet_107_SUCCESS_P0" searchProperties="true" id="bf16b55a-f72a-40c9-8173-0b4decde53c7"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="1ecb60ee-68d7-47d5-add1-8a3cad215069"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="128783e9-9d35-45b0-b283-0212519083af"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","GB");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="4c022fcb-3a9e-456f-9107-54a4a15ca808"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="3a906103-4989-435f-94c2-a6575e4ce45d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="8f71c1cd-0112-42ee-b299-25e94deec495"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20131025_020534</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF0701FE1D76A0E05307991F0A3951</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF0701FE1D76A0E05307991F0A3951</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj1XIpQksUUGipZymC20XaHfLS2WcCRgSJ8QOhP31xw4NBUp72CMhIU/GM99c/M1cMhSFlttiDFJOYqp47Yb6WgNwDBR812oYO5pt22NtbNo1LcBOgKtO1bAMS1U8xjLwKOOI8oZqGaatGd81sz40q67tuHatYtbqI1V5hpQJ00KlYqhKHoWUuYXbhpql1I0RI8ylKALmcuwOWr2uKzRdVGJSm5cblIXDtDnlPHF1HVd8wBCGuILjSL/U93QufeYOyIQinqXw5tNnDfXt7mq1qqwuKnE60S3DMHSjrgsdn5HJN7V5Vl4G36NBvDlfIxpTglFI/iAJqgd8GvtKK5zEKeHT6BPTpm4a0rQGOdawadNvqv7uoEB3oqU9kClDGpsiszTWhwBSoBiUp77XUL+dVsHN3WGKKAviNGIH57+DBHQJYZyAr7EyshLd6RaPpKt5Cdj1KA4zRpZwL9skQRiY8phCQPIuYaL5fKYU5VdyJn6k7DLAf1OWS30Xq4CuH8lOm0yA8f9Ts916baw8ozCDZs8aYW84Q13et2G86HvJ07w+s+0ATRoFhF3lDahtud/Oh8267a23S7/uLLuzuv5n5j2PAv7j/MXj+dNjdhfdjvPOkx7M4+fJjNaxMxm8jO+TlN7qQwcv8lZk/by69ZJ1e87iBZ3+6N4GZ/Xr87ynr9dzw2iFv15SelddL6yH3vlNf1z7M/oR9quz3jrpz63pw3KyvMr4k/X40noZObj7/LPdvZ8Px0Pf+ENGs8ezaDaaAn2514f2bT98+F3zWo33mHZj2BeWlDDIxjPAvDzK9vDaSkfUC/Gv6UVKiK8FhaqbSI5iHChXm/KWpBY3EwREfFcUc3M2jE7HqHbatnNjmS3HvDGcC8Op182O0brpGJ2SgzYoDiBexzQg0pdk2U3/fA0QRy4D6kOqLeMMT4GpX1hsI44Uj/bF44gpg2EsWDzCi1oWVqsXsZ2ZWW4HFjdyG9aChO9j/kAf0lbAId2n7voedfcBk4SA5HfZ4Ex0OOMiFwu0zHhoVpaoQiETEyCVJOxa9ndHZyRKQpBI9Sj2sxAqyTQpMqOzzb+lIcwKaf9mWDy8T+M6/FamQOj4RCowGcsViDLCkRl0UQbyacCWtRtwab6V+US+L5FPnhK8QbL/6b1NZH9se0RE9Ho9eDVL3Fv1k69/vKl/AUo/zMfWkb8kO27LYSrmg2CPZlnNBaosKtlymRX1q0lmTIV5XRCkqQ8AZ4Le1sN4DlTfmtBPmi5b1Aeet/J9fBmf0gFHHCLRbUpxPGG1GACTq4Unnkl+6t6y51LkjUPOj8muQ7GBSMRfLinYxVJPiB/F3ypO/fdyHbG140fEKfYJTuhEnuQcWX/SFDgWZokgvjjdNX7MwDHn+8JtkrdYuOimccbh8y+KZLSGijCOM8q9tloIdlm2wMnXCbjvSh/MFEz+Nppz9ulo/t3rDgTfRUjd6pL/VtZI0S4YVLkBFFgaai42TeGcTnZY/Q3gB2KvGWbnxmzXqi2jIPbahtgv6s77Y96LpPlB/FGyk9PD99D8Fw==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF0701FE1E76A0E05307991F0A3951</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF06FD45E21A51E05305991F0AEF0F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF06FD45E21A51E05305991F0AEF0F</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124546</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF06FD45E31A51E05305991F0AEF0F</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF06FE004076A2E05307991F0A3B17:3DF22632"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f571416-0159-451f-9e5d-db97431d19c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3c8ea7d4-f0e3-4c9a-97f3-d3d949a3ec8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a61dff2b-3e57-438a-8156-74d011087edf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00013_AccountUserCreate_with_country_US_111_AccountGet_107_SUCCESS_P0" searchProperties="true" id="0cc3487a-2dc4-432f-ba82-10f908480b57"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="c18c5f0e-1782-465d-99ba-d279bdb8d020"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="aec86f1c-3718-4d46-84ea-59227730cb30"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","US");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="161bc99e-b3c9-4eea-ad4f-a8fb1adb3a91"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="7d90105b-d11f-4524-aa90-2883919c3a52"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="b5260ea0-c4db-4d09-a389-16d6dd8701aa"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20131025_020534</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF06FD460F1A51E05305991F0AEF0F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF06FD460F1A51E05305991F0AEF0F</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EH2fr3A5j1NGtrnaFajiEnbZkAy3JJO8pITcBmVsiVgyl/n6lUxMgJAss1VUUWq3uk93Hx3pUuA4cv2mEJBIypnR69TNZxzUPHsaVq3QKdtWyQkrVs0Ja1a1WKl41UqxVquVTKMnRAo9JiRmsm66tlOy7JrleBOn4pfKfskrKN8n07iHRKjQyqVgm8Y6jpjws7R1M02Yz7Ggwmc4BuFL4o+bN31fefo4x2Q2Lrcos4RJYy7lwkeIFAIgEEWkQHiMLtGBz2Ug/DGdMSzTBN5yBqJuvu1drVaFVbHAkxlybdtGtoeUTyDo7MJsfMs3Q9BjId+u25hxRgmO6G+sQd2AnPPAaEYznlA5jz8J7SDH1qEtWBOLOCV2YaL3BBm6MyMdgEwEtsQcO3mwEYSQACNg3I16dfPivAlu904SzETIk1gcrf8MErAlRHwBgSXyynJ050c80a7GJRC/x0iUCrqEW02TBSYgjEECIV33qVDkC4SRjd9YC/WjOcuA/MlYLtE+VgUdnehOh85AyP8zs/15baPc4yiFxlVrJV7t33z810u/nMj2w83j3VW/P3yZkXoGYd95C2o37rf1MVl33HrbJFvgraCajkOE/yk/zh/aTx4bEGdQnOJuUPVIC90Pxe0Kd1C3M9ko8vAX3B49Th4Ye+17zev7ZDyPXlBrc13+5t4+jUrfER7yYDatXo1q8XTuboq4Xy2OhveUQU9WpuGoNOgBFcP2xh3cOD9tVAmW/Up8+/dsNrkeck4GNnm8/cam3cmo8uv7JJ3UbtJpUh7e1d9r2q/h0JhLwjidvgCR+VLTo9cxumpeWH4tL9pCAyvMXP2F1ighgUmzoXdpafFTJUA08NUwt2vb7nbtqmNXWk7LaZY6V3a5aJc9z+nazVrbbeUatEVxBLHNWUh1Lq2yW/58DZDEvgAWQGIteUrmIMwvInawxEaPjdTh4EzAhCsVT6rlX69u/MJKuBiydeKV3WIaxtI0brn8wX4kzVBCcqjc3oFyj4DQBQUt75rfQhFcSNWKV7xMZeQUlrjAIFUXQKI12HdLtTISNF5EoIGimAdpBIXFfJE1Bontv2thIjLr6GqSnbtPyzr+lndA+QRUOwhdSwvUFOHEFVTMC/m0YNfdLzgP30wDqo+XaqdMKNkiOfz0zhJNjx1FVEXP7fGzk+PeuZ+9/eNO9AUodNyPXaJgSffS5nepuh6UeDTyab7iwmshXS7TbH5VLYyJCo+UPjpoDCRV6raZ8F/A0C4EOuty2aE+yryzH+JL5ZyNJZYQK7YZ2fKMl8UYhH5Z9NQpWZ/7bDlIqfomYS1P2dqReoBoxF++UYhPtJ8yD9TfiifB+7hOxNrLo+pUzwlJ2Uyv9DWy+YQUhKuwVOkeT/aDnwpwKvmhcdfkHRap2DRNJXz+xdCCVjcxITxlstcxM8O+yGY45WYB/rvThzCZkL/dzGvx6c3886Y/VnIXY3PnS//b2aIZXQiY+gGQYamba/XQVMnZbE/U3wB+0PVKt1Oq2F2nWXb2df2qa3d3DTyopPHB/NGy19Pj89D4Fw==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF06FD46101A51E05305991F0AEF0F</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF07106B1B1A4DE05305991F0A8C2B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF07106B1B1A4DE05305991F0A8C2B</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124549</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF07106B1C1A4DE05305991F0A8C2B</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF06FE004876A2E05307991F0A3B17:F5137E85"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f571416-0159-451f-9e5d-db97431d19c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>edf51533-7efe-48f3-a7e2-940bc9105391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7db97119-eb7f-42be-841b-4716e98cf0c6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00014_AccountUserCreate_with_country_AT_107_AccountGet_111_SUCCESS_P0" searchProperties="true" id="c9189b25-cde0-4afa-bf73-6880660a29c2"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="1ea2eea4-dc69-41de-82a8-0d3d04e20096"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="8f7088c0-120f-4445-94ed-694331b23a70"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AT");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="db0757dc-e8d6-425b-8bc1-88463221f186"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="b7fcabba-cfde-40a7-90cb-7c1192dcfc1c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="237ec018-84bb-41bf-a728-6ceefbf3c413"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20131025_020534</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FEEEA9868F2019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA9868F2019E05307991F0A80D6</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+o4EH3vr4jSxyrkgwBJVJBSoL3p9hMovduXynUMuE3sENuB7q9fOzQUKO1yV0JCnoxnzswcH/uUgTRxgpAxlHNMiRb12vpzw4GOV3eahjvxW4brtoDhOTA2bKfVctGkMam7rq5FjAkUEcYB4W3dsWzXsDzD9kd2M3AbQaNesxvWk66NUc5kaOlSs3RtmSaEBWXati5yElDAMAsISBELOAyG4fVVID0DUGHSO6crlGXCvDPjPAtME9ZiBFGSwBqkqXlqbvmcxiwY4ikBXOToI2fM2vrH3sViUVvUazSfmo5lWablm9InZnh6rHeOqs0ojsiErtZdQCjBECT4H6BAXSM+o7EWJlOaYz5Lvwltm7alQhtoCQ1ou+RYNz8TlOgOjLQFMmfAYDNgV8EGaIJyRCDSHgZRWz8+bIKrvaMcEDahecp21n8GCZECJTRDscGqyip0h0fc067OKYJBRGAiGC7QjaJJBiBi2l2OJnh5hZkkX8y0cvzakskfrliG4J+M5dTcxCqhm3u608NTxPj/mdnmvFZRxiARqDN+nOaZe83ENefNtPvu1Yl96b+BzH1olxA2nVeg1uP+WO+Sdc2tj01L7/Zvj6U9T9zjqCCvT/F56D9evTcbyYNTXIB5NGzSO3c0nTNu4tdLYNUfRPzoANS6v3uzEji7GWf9297TXydXR82o55zYZz1BT7zXX/bLCQ391+HN8N6JcT0cL+CldfErvHg6E2gA5vOb+e1gMC7uR+nvPFy+XTzcdfucUsvrdsn70WDU6A5/jV6TePbYZJPk8sRqf9a0WcO2sZKEoXh5RZBXS0WPqKedy3kB/rO8KAuOjUnpGmRKoxhHhOsdtUtJSyCkAOE4kMNcrS3rvN/vN1tNKwzramE16lbL9+1zK2yd2a1Kg1YodiB2KZlglUup7Io/PwOEacAQiVFuFFTAGWL6DxF7gAMtIgN5OChhaESlitvFAr1MBQfzJmzYmfAXuZhb3IeFrt1Qfktu83DCUb6t3f6Wdg8QxBlGSuAVw5mkOOOyGXNQCJ7YtQLUCBLyCsiVCgeO6zVMhtMsQQqqmdJYJKiWzbKyNSZb/TsGgKy0Dvqj8uR9W9jut6oH0ifGyoGpWs6QnCPacwm5VSHfFuw4mwVX4UMRY3XAZEN5juEKyfanT54ogqxJIit67g6f7Qr32v3g7V93mj+AMnf7sU4UF3gjbXWbygtCykenmuYc1OY1URSinF9LSWMuw5u2abXMIYJC6tv7iL4hYq5DmAddL2vUO5nX9m18gs/IkAOOUsk2rVwe8LYYIqbeFpE8J8tDHy5bKWXfOFryfbZuIp8gCvGPrxQYQOUnzXfyb0Hz+HNce2Jt5JF1ygcFx2SqVuoief+GFJDKsFgqH803g+8LsC/5tnHd5DUWLtn0Ijj6/oumJK2tAwipIDzq6aVhU2ZLnPw9Q8Gn05cwpZR/3M1L9u3d/Pv6aigFLwX62hf/t7OBS7pApKsnQImlrS/lU1MmJ9MNWf8A+FXZQ99reueSbP6msntWr7lu4FYlnS/mr5aNnu6eh86/</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FEEEA986902019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEE6760AA300FE05307991F0A7B17</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEE6760AA300FE05307991F0A7B17</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124552</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEE6760AB300FE05307991F0A7B17</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FEEEA64063201BE05307991F0A5BC3:3A8569FB"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f571416-0159-451f-9e5d-db97431d19c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00015_AccountUserCreate_with_country_DE_107_AccountGet_111_SUCCESS_P0" searchProperties="true" id="990812c9-1300-42d4-bfa2-7b44b9dfa5d0"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="0d737946-e22e-42fd-af7f-a8ec593599ea"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="322e7b2e-449e-4aca-ac64-8b4a6ff60f7b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","DE");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="9caff532-0c4d-4939-93d9-df8693ff5102"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="9439c59f-35e7-42af-b01b-28afa03789e4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="631b378f-9ee7-4513-bddc-0696f7371899"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20131025_020534</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FEEE6A230E3013E05307991F0A3D55</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEE6A230E3013E05307991F0A3D55</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+o4EH4/vyJKH1fBSSABooKUFnqall64tGdPXyrjDMTbxIHYAdpfv3ZoKFDa5ayEhDwZz3xz8TdzynES257POWSCpkwLOi39OazW7NqkNjaaTZsYNTBdYzzBljE2nUaj6o4t16rpWsB5DgHjAjPR0m3Tqhlmw7CaI8v1ao7nuBWrYT3p2iNkXJqWKhVT11ZJzLhXuG3peca8FHPKPYYT4J4g3tC/6XlS08MlJr19ukZZOMzakRAzDyFSCYFAHJMKSRN0inZ0TkPuDemUYZFn8O4z5C39/e5yuawsq5U0myLbNE1kNpHUCTmdnujtH+VlCAM2Sdfnc8xSRgmO6RtWoG5ARGmo+fE0zaiIki9MW8gylWkDVsQgVo2d6OjDQYHuSEs7IDOODR5hqzQ2gAlkwAhoD4OgpZ8cV8H13VGGGZ+kWcL3zn8GCdgC4nQGocHLyEp0x1s8kK72KRAvYCTOOV3ArWqTGSbAtfsMJnTVo1w2X8i1ovzaissfLbsMyJ+U5RRtY5XQ0YHsdOgUuPg/Nduu19rKI45zaLOwO3cW/KFeb3J72E9fcnP20vB7zuuyVUDYVl6D2pT7/bzfrJveer8kBsHkl9l5IlfnP3uXo2QevPphdxmJaD6+vuoG6WqA3+bkhkXLxe3wN+CftwQeb6w+7rovVx0nmAT9xfXyBWpnv3+Q+/7Z013+y7+vhs7PDrqsX8NDSOzlWzwZPp5djKp/TSmHhWMFqXvfDBAb92O/7l4mN0GvR6Iqvri0otRvDqLzHyv77ukeo17uPnbP+k4f4X7rI6btGHaFJSUM8/E/QER5VO0RdLQLWS8svqcXJaGhMSlUvZniKC6ACb2tbilq8XJJQDT0ZDHXZ9O86Ha7frPhnjUk3TW7plM1682mdWH6DbPjlhy0RrEH8TxlE6p8KZZd98/3AEnicWAhZMYizUkEXP/GYgcLrAVsIB9HyjiMUsniIgudmCUNHrvUosKh1izPGm4807XbVNyxu8yfCMh2qbu5Q90DIHRGQfG7anAuO5wLmYs5XuQitioLXGGQywmQKRL27FrDQZwmsxgUUpSkYR5DZRbNiswgvv63DUx4IR10R8XD+zKu/W9lCqROSJUCV7GcgSwjHJhBtTKQLwO27e2AS/N+HlL1vmQ+RUbJGsnup482Uf2x6REZ0fP58NkqcW/Uj77++Sb6BhTaz8fGUbigW27LYSrng2SPdlnNOa7MK/likRf1qytmzKR5ZCGzjoZAcklvr6P0BRjamEBHTZcN6j3PG/kuvlxEbCiwgER2m1Ycj1gthsDVahHIZ7I6dm/ZcSnzJmAlDsnOY7mBKMTfLinEI0pPiu/l3zLNwo9yHbC15UfGKfcJQdlUndQcef2iKUgqzVJJfGm2bfyQgUPOd4WbJG+wCNlN41zA1180xWgtHROS5kwEHb0QbLNsgVO8zsD7UPpkpmDy99G84l+O5r9vekPJdwnWN7r0v5UNWrQLAV1tAAWWlr6Sm6Z0zqZbrP4O8DOxu75dNbtV06puE3u14zibBO5E0v4k/izZyun+e2j/Cw==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FEEE6A230F3013E05307991F0A3D55</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEEA986B82019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEEA986B82019E05307991F0A80D6</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124555</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEEA986B92019E05307991F0A80D6</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FEEEA6406F201BE05307991F0A5BC3:8ED0A678"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f571416-0159-451f-9e5d-db97431d19c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00016_AccountUserCreate_with_country_CH_107_AccountGet_111_SUCCESS_P0" searchProperties="true" id="710eed8c-060e-413d-9a24-f9f869837895"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="16e21aac-2ff0-418a-bf9f-a3c7d9869c65"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="dd0c592a-31a7-44f7-a5a0-b316b34ff923"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CH");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="2a511c2e-a50e-484b-971c-1ef41876adf2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="6f04c083-94c8-4294-95de-987f54746ead"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="be0f5e5b-51a2-4402-9bfe-67f89410d4d2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20131025_020534</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FEEEA9690C2017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA9690C2017E05307991F0A6591</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EH2fr3B5HlPGF8zFrkAV4bLrCZlkgVxmXlJCboNmbBkk2UC+fiUTEyAky2wVVZTare7T3UdHuuQoiR2/wzkwQVKqBb2W/hw5NlSbgIxoWsOGW52GBrLdmhGFTeR4YTXy6q6uBZxnEFAuEBUt3bFs17Cahu1N7Lrv1vxas+JZ3k9dewDGZWjpUrF0bZ3ElPtF2paeMeqniBPuU5QA9wX2x52boS89fVRi0tuXW5RFQtaeC7HwTRNXQsAQx7iC08S8NA98LkPuj8mMIpExeM0Z8pb+une1WlVW1UrKZqZjWZZpeab0CTmZfdXbX8rNEAY0SrfrLqIpJRjF5AUpUDcg5mmodeJZyoiYJx+Etk3bUqENWGMD2y79qptvCQp0Z0Y6AMk4Mvgc2WWwEUTAgGLQ7kdBS/963gS3eycMUR6lLOFH6z+DBDSHOF1AaPCyshLd+RFPtKt9CdgPKI4zTnL4rmiyQBi4dscgIush4ZJ8IdeK8WtrLn+kZBngPxnLpbmPVUI3T3SnR2bAxf+Z2f68tlEeUJxBOxYXP39MvOaoUa0G7sWwOR3/eHK7HrH6rQLCvvMW1G7cr+tjsu649bpJBmR5o3s7X1/cRQtUnwymS+54ThaOF3zybZKH64YTP3YGj9FFHlcn97XeKBxmznIV1WY3L+4gHP20J9ZLylj9y/WjO+W9u8er4O9k2d90ROP+aRikTr6ZM7fXJAt2w9eD4eOLLXqD2+uXUfXuARFr9dfmnzn6hlN0/yv+nnceunQlvtSboTeIrsk0mjZn7Gn8o3ffeqtpv4ZDYykJ42z6C7Aol4oeQU8byHkh8bm8KAsJjahw9RdKo7gAKvS22qWkxc+kAJHQl8Pcri1r0O8Pas1Gs2tXLavRt2pVq+F59sDqXNldp9SgLYojiN2URkTlUiq75c/nAHHic6AhMCNPMzwHrn8SsYcE0gI6kocjpRwmqVTxZBlSaPyOsqlIbdeDus0akmMw07Xvqbilt6wTCWCH0u0dSPcIMFkQUPquCM4lw7mQvViiPBOxXclRhUImbwCmRNh33GbN5CRZxKCQmkkaZjFUFvNF0RmTb/8dA2FeWEf9SXHwPqzr+FvZAukTEuXAVS1XIMcIJ+4gtyzkw4IdZ7/gMnwnC4k6X7KfghG8RXL46Y0mih87jsiKnrvjZ7vEvXM/e/v7neYnoMzjfuwShTnZS1tepvJ+kOrRLqe5RJVlJcvzrJhfQykjk+FN27Qa5hhwJuVtM0l/AzV3Icyzbpcd6qPMO/shvkzM6VggAYlkm1Ysz3hajIGrp0Ugj8n63HfLQUrZNwFrccrWjeULRCH+9JGCfaz8pPlO/q1SFr6N60SsvTyyTvmeEITO1ErdI5sPSIFTGZZI4UvZfvBTAU4lPzTumrzDIiSbppmAj79oStFaOsI4zagIenph2FfZAqfYLMB/c3oXplDy16t5zT+8mp9uhmOpdwnSd77kv50NUtAFg65eAAWWlr6WL02ZnM72VP0V4Dth73e8umd1JdkOhL1e894O80El7Xfm95a9nh6fh/a/</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FEEEA9690D2017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEF5878C13007E05307991F0AB1C2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEF5878C13007E05307991F0AB1C2</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124558</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEF5878C23007E05307991F0AB1C2</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FEEF5878E83007E05307991F0AB1C2:25C9CB50"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f571416-0159-451f-9e5d-db97431d19c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00017_AccountUserCreate_with_country_FR_107_AccountGet_111_SUCCESS_P0" searchProperties="true" id="98fc9113-8810-4be1-ac48-63816d5b8c38"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="6fac11fb-1192-4786-99bf-91397064320c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="bc36918d-f857-46a2-87be-d48810d29c05"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","FR");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="31cca172-ad16-43e3-9b7d-45fc8c39b31a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="96e99e00-ffa2-4789-a8d8-e6ad61772b77"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="040c21a4-295b-4e9f-810c-e2881202fa06"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20131025_020534</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FEEF58830C2FA5E05305991F0AA605</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEF58830C2FA5E05305991F0AA605</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH1chF0iBqCBlubQ5C7QFtu32ZWWcIbibOBA7l/bXHzs0FOjlsEdCQp6MZ765+Js5ZygKLcdlDBJOYqp4/Y76G5ptG5/Vba3ZRi2tscAtbeED1jBqtxdN1PKX9aaqeIyl4FHGEeUd1TLMhma0NLM9N8+cxpljmLVW3XxQlVtImDAtVGqGqhRRSJlTuu2oaUKdGDHCHIoiYA7Hzswdjxyh6aAKk9o936IsHSbdFedrR9dxTUCCMMQ1HEf6uX6gc+4zZ0YCiniawItPn3XUl7t5ntfyei1OAt0yDEM32rrQ8RkJvqrdL9Vl8D26jLfnHqIxJRiF5BlJUGPgq9hX3DCIE8JX0QemTd00pGkNCpE+s0G/qvqrgxLdiZYOQCYMaWyFzMrYFJaQAMWg/Jx6HfXraRXc3p0niLJlnETs6Px3kIBmEMZr8DVWRVahO93iO+nqngN2PIrDlJEMJrJN1ggDU64TWJJiRJhoPp8pZfmVgokfqboM8N+U5Vzfxyqg6+9kp08CYPz/1Gy/XlsrtyhMoTtzIzd8uLmz8DV/tMNGPs507zZrraJBp4Swr7wFtSv3y/m4WXe99XLp/g6e3J/Xjb4V1GdjD9GkN7mbtCZF+/omnieXNstG3749gz7afJ97l8t8Yefzh8Bc988GSb4YE3cZX42D4XxpGF8eiiB7KEYjC3TbHN7/Mt2819cX+dT4NbjO8d3Fpv8P+eG3rU2xGieTy0v/Oby5rFv3F/Ve8XDr/0j6TWvcnz5j4F8u79IL/thehNE4W02D5WSad15j2o/hUFhRwixdPALm1VG2h9dXhqJeiH9OL1JCfG1ZqjpryVGMA+VqV96S1OKkgoCI74hibs+GMRwMBmeu0WtYdcM0B4ZdN5rttjk0XKvR/15x0BbFEcReTJdE+pIsu+2fzwHiyGFAfUi0LE7xCpj6icU+4kjx6FQ8jpgymMeCxYM/9trmT0ZQoGfqsyL26+kGg60qk5hf0avEXXJIDpm7fcDcU8BkTUDSu+xvJhqccZGKDcpSHpq1DNUopGIAJJKDHavRsnVGonUIEqgexX4aQm29WpeJ0dn239IQZqV0OpiX7+7DsI6/VRkQOj6RCkzG8h1EFeHNCLIduwrkw4Ataz/gyryb+kQ+L5FOnhC8RXL46bVLZHvsWkRE9Ls3+21WuHfqJ19/e1P/BJR+nI+dIz8je26rWSrGgyCPblXNDaptammWpWX9mpIYE2FeN3Wjqc8Ap4LdnubxH6D6zoR+0nDZoT7yvJMf4kv5is444hCJblPK4wmbxQyY3Cw88UqKU9eWA5cibxwK/p6sF4oFRCL+dEfBDpZ6Qnwt/vI48V/L9Y6tPT8iTrFOcEIDeZJj5OmDpsCxMEsE78XJvvH3DLzn/FC4S/IOCxfdtEg5fPxFkYTWURHGcUq511dLwT7Jljj50xqcV6U3Zkoif5nMBftwMt+PRzNBdxFSd7rkv5U1UrYLBlUuACWWjlqIRVM4p8Eeqb8AfMPrQ7vVqhs9a+jaJa/bW153zwx7l8CDSLpvxG8lezk9fg/dfwE=</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FEEF58830D2FA5E05305991F0AA605</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEE6A0C423011E05307991F0A24DB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEE6A0C423011E05307991F0A24DB</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_12460</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEE6A0C433011E05307991F0A24DB</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FEEEA969302017E05307991F0A6591:36AB3D99"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f571416-0159-451f-9e5d-db97431d19c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00018_AccountUserCreate_with_country_NZ_107_AccountGet_111_SUCCESS_P0" searchProperties="true" id="7bca783d-a526-44f1-84c2-b3260363d48d"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="16236a5c-6936-48c1-8c61-485a9f55b096"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="03df9797-17f7-4e35-97ad-2045e1ecb028"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","NZ");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="98493a84-b52e-4515-9e85-feafc24ad796"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="f33e92d0-4a67-48eb-bc15-9c0893251df6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="c2fe20e7-5f10-4dfe-951c-928d38f4064f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20131025_020534</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FEEE6A0C583011E05307991F0A24DB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEE6A0C583011E05307991F0A24DB</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj1VIAgGSqCBxaze7tHQLh7Pqy8p1JsHdxAm2A7S/fu3QUKCXwx4JCXkynvnm4m/mgqM0qfs9zoEJklEtGHb0X7Zjh82GZxkYe67hAHYMz2tFBmBk2w9WZNXboGsB5wUElAtERUevW7ZjWK5hezO75Tst33JqTqN+r2tzYFyalio1S9c2aUK5X7rt6AWjfoY44T5FKXBfYH/aux77UtNHFSa9e7FFWTpk3YUQuW+auBYChiTBNZyl5oV5oHMRcn9KYopEweDFZ8g7+svd9XpdWzdqGYvNumVZpuWZUifkJP6id8+qyxAGNMq25wGiGSUYJeQZKVDXIBZZqPWSOGNELNIPTNumbSnTBmywgW2HftHNVwcluhMtHYBkHBl8gezK2B1EwIBi0P65Czr6l9MquL07Y4jyKGMpPzr/HSSgK0iyHEKDV5FV6E63+E66uheA/YDipOBkBTeqTXKEgWu3DCKyGRMumy/kWll+bcPlj1RdBvhvynJh7mOV0M13sjMkMXDxf2q2X6+tlTlKCugObTZl0xvyG3/7vnoMWf+KuKOoBcRyOyWEfeUtqF25X87HzbrrrZdL35YipePgihX1aPLU9q6c8e2G34Xn83g0Tm/cfhLE9rr5kHvT9nN8QxBaDs6L+e3Vpcd+Alp8PV8LexLMf0yaztnS7l9643nrR5RHz49kPX+4pq7b8OKVN5uQcX/Su8Zfl63ezbd1Y+I1FvVZC7cG/5pu777vXt6mzfufaRo8u/b4R/NMrN2gfT5dTK5Rf/gw33yfxJ3XmPZjOBRWlDAtHh4Bi+qo2iMYapeyXkh8Ti9KQkIjKlX9XHEUF0CF3lW3FLX4hSQgEvqymNuzZV2ORqNey7F6tqS7/shqNqy259mXVq/ZHzQqDtqiOII4yGhElC/Fstv++RwgTn0ONARmrLICL4Drn1gcIoG0gN7Jx5FRDrNMsXiaebmX5e7Tslg9kmcPPcbeb2g5unaTiQmdsF4kgB1St3dA3XeASU5A8btqcC47nAuZiyVaFSKxaytUo1DICcAUCft1x22anKR5AgqpmWZhkUAtX+RlZky+/a8bCPNSejealQ/vw7iOv1UpkDohUQpcxdIHWUZ4M4OafrMK5MOA6/X9gCvzvSIk6n3JfApG8BbJ4afXNlH9sesRGdGvwfSXXeHeqZ98/e1N8xNQ5nE+do7CFdlzWw1TOR8ke3Srai5RbVkrVquirF9bMSOT5k3btNrmFHAh6e1plv0Gau5MmCdNlx3qI887+SG+QizoVCABqew2rTyesFpMgavVIpDPZHPq3nLgUuZNwEa8JxskcgNRiD9dUrCPlZ4U38q/dcbC13K9Y2vPj4xT7hOC0Fid1Bx5+qApcCbNEkl8Gds3/p6B95wfCndJ3mERspseCgEff9EUo3V0hHFWUBEM9VKwz7IlTvGUg/+q9MZMyeQvo3nDPxzNP6/HU8l3KdJ3uuS/lQ1StguWi6nUL7F09I3cNKVzGu+x+gvAt8Te6lmDptuwbHuf2OvOsL9L4EEk3Tfit5K9nB6/h+4f</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FEEE6A0C593011E05307991F0A24DB</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEEA640A1201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEEA640A1201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_12463</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEEA640A2201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FEEF2143A63015E05307991F0A40F4:487EE3A5"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f571416-0159-451f-9e5d-db97431d19c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00019_AccountUserCreate_with_country_IE_107_AccountGet_111_SUCCESS_P0" searchProperties="true" id="bd6eb1ba-c519-4d8e-a120-207b6eab4e95"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="51c4d40a-95d1-4ae5-b266-1f83244a4736"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="cff4ecf9-d445-4239-b012-4a064265ec11"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","IE");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="41db89b4-89c6-452a-bbd3-35e7e2aacaa7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="4b7fa703-b709-4cf9-9745-5eecd46c827b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="cb620518-c5c0-49d4-8294-95d2ee691928"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20131025_020534</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FEEEA9870F2019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA9870F2019E05307991F0A80D6</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZrU+o8EP7ur+jUj2dKL4CUjjBTxUvPES9cFP3ihHQL0TbFJAX015+kWAREXs47wwyT7Wb32Uue3WOOktjxfM6BCZJSLWg19Ocj10K1yLKNqF6pGhV3aBl1uzw0cFSp2laI3KoDuhZwnkFAuUBUNHTHsiuG5Rp2vWcfeZUjz6qVHNd50rV7YFyaliolS9fmSUy5l7tt6BmjXoo44R5FCXBPYK/rt688qemhApPePF6gzB2y5liIiWeauBQChjjGJZwm5rG5pnMccq9LRhSJjMGnz5A39M+7s9msNCuXUjYyHcuyTKtuSp2Qk9Gh3jwoLkMY0ChdnE8RTSnBKCYfSIFqgxinoebHo5QRMU5+MG2btqVMGzDHBrYr9FA3vxzk6Pa0tAaScWTwMbILYx2IgAHFoPU7QUM/3K+Ci7s9hiiPUpbwjfO/QQI6hTidQGjwIrIC3f4Wt6SreQzYCyiOM06mcK3aZIIwcO2WQUTmV4TL5gu5lpdfm3P5I0WXAf6Xshybq1gldHNLdlpkBFz8n5qt1mth5R7FGTQvPqLezXvYtfrXozSsP/bvWXg36JGLh6CRQ1hVXoBalvvzvNmsy976vPT7qXvfJ1dtcd5ls6x3+VBNMbplpJwM/H7tT7vVaVeCGQ7srBy90bv+R+3jd5bc+De/3Oqg45xxf2b3Jn9u72ZVfPD+dA3EiYfTaeLyX/e8bbfr/pQ4ty+xXZsPhpVT4Y5P7i4froNJlvQRHQwfB9XIjqkpfLs78Ovj7BKQ+zIOHw/KV68d7AZHbGhf3DEyunn1G18xrcawLiwooZsNXwCL4qjaI2hp57JeSOymFyUhoRHlqt5EcRQXQIXeVLcUtXiZJCASerKYi7NlnZ+dnfl1t2afSLqrn1nVslWr1+1zy3et1lHBQQsUGxBPUxoR5Uux7KJ/dgPEiceBhsCMaZrhMXB9h8UWEkgLaEc+jpRy6KWSxRFFR5UKZB90ZEdV/l4bvtozVgt17ToVN/SG+ZEAts7c9TXm7gAmEwKK3lV/c9ngXMhUvKFpJmK7NEUlCpkcAExxsOdU3KrJSTKJQQE1kzTMYihNxpM8MSZf/DsGwjyXds56+bv7MazNb0UGpE5IlAJXsZyArCJ8G0FVr1oE8mPAjrMacGHez0KinpdMp2AEL5Csf/rqEtUeyxaRET2fdp/tAvdSfe/r32+aO0CZm/lYOgqnZMVtMUvleJDk0Syq+YZKb6VsOs3y+tUUMTJp3rRNq2Z2AWeS3d576StQc2nC3Gu4LFFveF7K1/FlYky7AglIZLdp+XGPzaILXG0WgXwl833XljWXMm8C5mKb7DSWC4hCvHNHwR5WelJ8K/9mKQu/yrXF1oofGadcJwShI3VSY+T9h6bAqTRLJO+lbNX4NgPbnK8Ll0leYhGym4aZgJ+/aIrQGjrCOM2oCFp6Llgl2RyneJ+A96X0zUxO5J+Tec5/nMyD9lVX0l2C9KUu+W9lg+TtguVeKvVzLA19LhdN6ZyOVkj9E+B2XrfOd/H6eiTNb+LvkpWcbr6H5l8=</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FEEEA987102019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEEA9871B2019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEEA9871B2019E05307991F0A80D6</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_12466</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEEA9871C2019E05307991F0A80D6</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FEEE6760D1300FE05307991F0A7B17:50892E44"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f571416-0159-451f-9e5d-db97431d19c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00020_AccountUserCreate_with_country_AU_107_AccountGet_111_SUCCESS_P0" searchProperties="true" id="60e5f213-8695-46bf-816f-9745d0586c65"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="b889dccd-457a-4512-88f9-feb50b7fd4a0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="d81dd242-333d-4f39-bcaf-31534dbba185"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AU");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="3445ff7d-a5c0-489c-9607-d35739f56def"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="8298babc-4629-4c30-8548-c84cad405ff7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="1d8dc4e9-5cfd-4d5f-a7ed-9252ab57d180"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20131025_020534</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FEEEA9695F2017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA9695F2017E05307991F0A6591</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH6tgJ4QAUUGifOyml3a3QLttX1bGGcDd4EDs0NBff+3QUKC0l70SEvJkPHNm5vjY54LMI8dvCQGJZDE3gk7D/F2uhMTBk9CaVIlruaRCLFJ3xlbdcSe1GgB2qxXTCIRIIeBCEi4bpoNt18I1y66PbM93Pd/GJVzxHk3jDhKhQiuXEjaNbB5x4edpG2aacD8mggmfkzkIX1J/2Lrq+8rTJwUms3m+QZknTJozKRc+QrQUAoUooiUaz9E52vM5D4U/ZFNOZJrAa85QNMzXvc/Pz6XncilOpsjBGCNcR8onFGz61Wx+KTZDGPBJvFm3CY85oyRiL0SDugI5i0OjFU3jhMnZ/IPQNrKxDm1BRi1qu/yrid4S5OhOjLQHMhHEEjNiF8EGMIEEOAXjdhA0zK+nTXCzd5QQLiZxMhcH67+DBHwFUbyA0BJFZQW60yMeaVfzHKgfcBqlgq3gWtNkQSgI42cCE5b1mVDkC4WRj9/IhPqxgmVA/2Ys52gXq4KOjnSnw6Yg5P+Z2e68NlHuSJRCUz613ZuOHXRmt4P78GaBLjPy0PHa1dVtI4ew67wBtR336/qQrFtuvW6KX3re459On3S6tEay6XLVndVEa/pPy1msz+YPty9/Hm7GDytB1+W+d+dl+Dbq/hp+Q4uLSweeqgkpv9TRtNcblsWX8aDfno1GfeJeTbLBkz1cDwZ3rte+JwPxLFpXbg2fdeS4/Z0/Xjnjx1/L5R25ZAyxb7dPs9rg+3Xt8s5uBdkFQcEX7N4se99rZ7WnNQS/PDx1a423mnZr2DcWkjBMx09AZbHU9Ag6Rk/Ni8jP5UVbmDofuau/0BolJHBpNvUuLS1+qgSIhb4a5maNca/b7Xot3K46ZWzbXVwp42q9bvdwy3E7F4UGbVAcQGzHfMJ0Lq2yG/58DpDOfQE8hMRaxSmdgTA/idghkhgBH6jDEXMBo1ipuJ3KJEnT9drxqmw5Hct4WVmyOpuZxnUsf/AfSWsiIdmX7vqedA+AsgUDre+a4EIxXEjViyVZpTKySytS4pCqGyDRIuw7bq2CBJsvItBI0TwO0whKi9ki7wwSm3/HIlTk1kF3lB+8D+s6/Fa0QPmETDsIXcsFqDHCkTsIF4V8WLDj7BZchG+lIdPnS/VTJoxukOx/eqOJ5seWI6qi3+3hb7vAvXU/efv7negTUOiwH9tE4YrtpC0uU3U/KPVoFtNcktKylK5WaT6/qlbGRIVHNsJVNASaKnlbj+I/wNE2BDrpdtmiPsi8te/jS+WMDyWRMFdsM/LlCU+LIQj9tAjUMclOfbfspVR9k5DJY7Z2pF4gGvGnjxTqU+2nzD/V33OchG/jOhJrJ4+qU70nJONTvdL3yPoDUtBYhWVK+OJkN/ixAMeS7xu3Td5ikYpN41TCx18MrWgNk1Aap1wGHTM37KpsjlOuF+C/Ob0Lkyv569WciQ+v5vur/lDp3ZyYW1/2384Wy+lCwdQvgBxLw8zUS1Ml59MdVX8F+F7YW3WvXukpslV3hd2r1N8O814lzXfm95adnh6eh+a/</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FEEEA969602017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEE6A0C723011E05307991F0A24DB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEE6A0C723011E05307991F0A24DB</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_12469</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEE6A0C733011E05307991F0A24DB</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FEEEA640E7201BE05307991F0A5BC3:EC3150EE"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f571416-0159-451f-9e5d-db97431d19c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00021_AccountUserCreate_with_country_CA_107_AccountGet_111_SUCCESS_P0" searchProperties="true" id="41ca9df4-8fb5-451d-a933-fc055cbde2d0"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="53f43515-37e5-401e-bb0a-6585f2ff9635"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="38584be5-e283-45ed-ba91-63c996aeb21f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CA");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="f6c3cce4-11d5-4108-8267-8586b78ca2a8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="b8415aeb-29ad-40aa-9288-f611ffb3e76e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="87b2bc2b-e8b7-411f-a267-c15cc59a19f8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20131025_020534</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FEEE6A8B4C3009E05307991F0AA538</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEE6A8B4C3009E05307991F0AA538</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o8EH3vr/C4jx0jX7jYnsAMIU5DSygNJGnz0lHkNaixZWPJXPrrK5mYACH56DfDDKP1avfs7tGRzjhOYtvvcg65oCnT+hdt/ZfdJI2m60VGM3psGPWwbhrYciKjAVDHbqsVOXVX1/qcF9BnXGAm2rptWnXDdA3Lm1hNv970LbvWsJsPunYHOZehpUvN1LVVEjPul2nbepEzP8Wccp/hBLgviD/uXg986enjCpPeOdugLBPmnZkQmY8QqYVAII5JjaQJOkN7Pmch98d0yrAocnjOGfK2/rx3uVzWlk4tzafINk0TmR6SPiGn049650O1GcI+i9LNuodZyijBMf2DFahrELM01LrxNM2pmCVvhLaQZarQBqyIQaw6+6ijlwQluhMj7YHMOTb4DFtVsBuIIAdGQLu96bf1j6dNcLN3kmPGozRP+MH63yABW0CcZhAavKqsQnd6xCPt6pwB8fuMxAWnCxgqmmSYANdGOUR0NaBcki/kWjl+bcXlj1YsA/IvYzlDu1gldHSkOxd0Clz8n5ntzmsT5Q7HBXRQ90+wQu5gSkZPn1jrHpxiyBufJ/fNeruEsOu8AbUd9/P6kKxbbj1vKp4un5Yj93bZenDv6rZn5XFvFGUJa6zvfqb21XDgxB4/HwZZ65PwgnCSzR8S+h2NPptL+jVHXb6cgU2Llu1MPiTO1V0wn17/HDwuLk2I+86PBvnqBC37ltLBGiySwrzpFrfr77+DzJ38uS/692HQY6spHcbuQ3F/557//rLIRj/4h+HEany57IXB+uvj+OrqyxKl7ZeadmvYN1aSMC4efwMR1VLRo3+hXcp5YfG+vCgLDY2odPUzpVFcABN6R+1S0uIXUoBo6MthbtameRkEQddreq4r5a4VmA3HbHmedWl2mw3PqjRog+IAYi9lEVW5lMpu+PM+QJL4HFgIubFICzIDrr8T8QILrPXZjTwcKeMwSaWKW64TzUX41LBtOp+5DAN3rXVz2tK1YSq+sW95NxKQ70u3tyfdN0BoRkHpuyI4lwznQvZijheFiK3aAtcYFPIGyJUI+3bdbSBOkywGhRQlaVjEUMtmWdkZxDf/toEJL603waQ8eG/WdfitaoH0Caly4KqWc5BjhCN3kFkV8mbBtr1bcBW+W4RUnS/ZT5FTskGy/+mFJoofW47Iin71xr+2XNi6n7z99U70Dih02I9tonBBd9JWl6m8H6R6dKppznFtXisWi6KcX0spYy7DIwuZLTQGUkh5W0/SJ2BoGwKddLtsUR9k3tr38RVixsYCC0gk27RyecLTYgxcPS368pisTn237KWUfROwEsdsvVi+QBTidx8pxCfKT5pH8m+Z5uHLuI7E2skj65TvCUHZVK3UPbJ+gxQklWGpFL403w1+LMCx5PvGbZO3WIRk02Mh4O0vmlK0to4JSQsm+hd6adhV2RKnWGfgvzi9ClMq+fPVvOJvXs0/rgdjqXcJ1re+9L+dDVrShYCuXgAllra+ki9NmZxNd1T9GeBrYW923fN6zzFNb1fYuw3nhct7lXRemV9bdnp6eB46fwE=</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FEEE6A8B4D3009E05307991F0AA538</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEEA969882017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEEA969882017E05307991F0A6591</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124611</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEEA969892017E05307991F0A6591</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FEEEA640F3201BE05307991F0A5BC3:3657AC6A"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f571416-0159-451f-9e5d-db97431d19c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00022_AccountUserCreate_with_country_GB_107_AccountGet_111_SUCCESS_P0" searchProperties="true" id="265897fe-cd16-4f48-97cb-d31b96232a16"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="113c72c4-07c6-4e1d-9caa-d809ccd4cdec"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="b3e43f86-9cdb-491d-b9d8-b881eb990c34"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","GB");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="68fb2fd8-6917-4f06-93ba-7624164ba525"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="42d4c5c4-b726-4e52-b0c7-1a494fa2a13a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="73a5785a-ddda-4340-ac8b-f349fd03249f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20131025_020534</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FEEEA987622019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA987622019E05307991F0A80D6</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+o6EP7ur+jUj3dK2lKgdISZKuhBEZU35XxxYhpotE2gSQueX3+TYhEQvZw7wwyT7Wb32d0nT3LGYRzZns85TgRhVOu0GvqzbVam0H4pG87URoZTnVpGHWNoOGW36rpVu1aHVV3rcJ7iDuUCUtHQbdNyDNM1rPrQqnpO1bMqJcsxf+vaGCdchpYuJVPXVnFEuZenbehpQj0GOeEehTHmnkDewL/tetLTgwUmvXm2RpknTJqhEHMPAFQKMMJRhEqIxeAM7PicBdwbkBmFIk3wR86AN/SPvcvlsrQsl1gyA7ZpmsCsA+kTcDI71ZsnxWYcdOiUrdcXkDJKEIzIH6hA3WIRskDzoxlLiAjjb0JbwDJVaAOvkIEsh57q4DNBju7ISDsgEw4NHkKrCNbHU5xgirA26nca+ulxE1zvHSaQ8ilLYr63/jtImGY4YnMcGLyorEB3fMQD7WqeYeR1KIpSTjLcUzSZQ4S5dp/gKVl1CZfkC7iWj19bcfkjBcsw+puxnIFtrBI6ONCdFplhLv7PzLbntY4yhlGKmw58H3er7M0qPz0BuFjFcOCKys3i1mw3cgjbzmtQm3F/rPfJuuHWx6ZxLxSV++tyPeRLN4ZJ8FRfLGr0pXLlTx4Xo+xXBzxE5stoFLQnr73fD+/RhF0+imV1iNwaeB3FkL0xcXH3aonsJGylYdfPgkHvwQXtZNS79bvjqnMzeIK9azFoR/QaL15vsmvUfzofTjqzeGKaY9+d/GLndDa7rN6Bq/gqu/T/yewTG4JRPxjTSRa1V/bj+a9g0visabuGXWMhCYP05RUjUSwVPTot7VLOC4qf5UVZSGBMc1dvrjSKC0yF3lS7lLR4qRQgEnhymOu1aV622+2qb164rbJpWW2zUjZr9bp1afq20zovNGiNYg/iBaNTonIplV3z52eAKPY4pgFOjIylKMRc/yFiCwqodWhfHg5GOR4yqeKpI5x6GvJw9qdskQSyDL7a84RIEe4xcUfvEn8qcLIr3fUd6e5jROYEK31XBOeS4VzIXixglorIKmWwRHEqb4BEibBnO24FcBLPI6yQgpgFaYRL83Cedwbw9b9tQMRza789zA/et3XtfytaIH0Cohy4quUcyzHiA3eQWRTybcG2vV1wEd5PA6LOl+ynSAhaI9n99EkTxY8NR2RFzxeDZ6vAvXE/evvXneAHUGC/H5tEQUa20haXqbwfpHo0i2kuYGlRSrMszedXU8qYyPDAAmYNDDBKpby9D9kbpmATAhx1u2xQ72Xe2HfxpSKkAwEFjiXbtHx5xNNigLl6WnTkMVkd+27ZSSn7JvBKHLJdRPIFohD/+EhBHlJ+0nwv/5YsCT7HdSDWVh5Zp3xPCEJnaqXukfdvSIGYDEuk8LFkO/ihAIeS7xo3Td5gEZJNL6nA33/RlKI1dIgQS6notPTcsK2yOU7xPsfep9OXMLmSf1zNK/7t1fx02x1IvYuhvvEl/+1skJwuCOvqBZBjaegr+dKUyelsS9U/AH4Vdr/u1qq2JFt9W9hds/XJ5Z1Kml/MXy1bPd0/D81/AQ==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FEEEA987632019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEE6A0C8D3011E05307991F0A24DB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEE6A0C8D3011E05307991F0A24DB</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124614</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEE6A0C8E3011E05307991F0A24DB</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FEEE6A0CB43011E05307991F0A24DB:E899AFCA"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f571416-0159-451f-9e5d-db97431d19c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00023_AccountUserCreate_with_country_US_107_AccountGet_111_SUCCESS_P0" searchProperties="true" id="0c668d8e-1b77-43b1-a12e-2a2820a80877"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="c14d6fc4-a7d6-4793-a2b7-c17305503f69"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="fd7f5aca-65f3-46f0-bb68-434d6de8a41d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","US");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="c7d55953-7079-4872-b9a8-3893879655cc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="95e100c1-74c8-4bd3-9971-5d54f3540f94"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="479379d9-e5de-4a3c-97a0-4b5d645aaa80"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20131025_020534</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FEEF5883332FA5E05305991F0AA605</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEF5883332FA5E05305991F0AA605</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtb+I4EP7eXxFlP66Ck0AIiQoSr1e20HKBbnfvy8p1DPGSOCF2IPTXnx0IBUp77ElIyJPxzDMvfmZuGYxC020zhlNOYqoMe031l181G7WGUdNMvWFrtRcdadCyqppj2C/YsnWz7tiqMmQsw0PKOKS8qZq60NcbmuHMjLpbq7uGXbGrzj+q8h2nTJgWKhVdVfIopMwt3DbVLKVuDBlhLoURZi5H7rQ9HrlC04UlJrV1u0NZOExbAeeJCwCq+BjhMEQVFEfgFpzo3PrMnZIFhTxL8d6nz5rq/u5ms6lsqpU4XQBT13WgO0Do+Iwsvqitm/Iy9od0Hu/OXUhjShAMySuUoMaYB7GvtMNFnBIeRB+YNoChS9MazpGGjBr9ooI3BwW6Ky2dgEwZ1FgAjdKYh+c4xRRh5ckbNtUv11Vwd3eWQsrmcRqxs/OfQcJ0jcM4wb7GyshKdNdbvJCu1i1G7pCiMGNkjR9kmyQQYaZMUjwn+Ygw0Xw+U4ryKzkTP1J2GUZ/UpZbcIxVQAcXstMjC8z4/6nZcb12Vr7DMMMtL9iOeqC/oZ18FH1fPaLxkhp6hCY2axYQjpV3oA7l3p/Pm/XQW/tL+P5Zv190v9o1ANLnxPr2O7A71SCY0eU2WzReNv5o+/DwNP5rEm3ju61Vt/9uZ+PJMnfmxvNm4Sf3+AEQM7M6r/7Nj28DD3p9nrCa8dpgnWiG7gYpuo+f0CP9eodew6fhzy6IQB167dGIdmaRF4I84A4JvBzOfnae6Qo74+Vz0r35OvKjnjmdPE7MsUe8MKwum28xHcdwKiwpYZq9/MaIl0fZHsOeMhD1gvxzepES4mvzQtVNJEcxjilXW/KWpBY3EwREfFcUc3fW9UG/36+3G526U9V1p69bVd12HGOgt9tWtVFy0A7FGcRuTOdE+pIsu+ufzwGiyGWY+jjV1nGGAszUTyz2IIfKkHriccSU4VksWHxrwoZdR/kL3TLDDtN5ZK2Xy9UmUpWHmD/Sx7Q95zg9pW7nhLo9jEhCsOR32eBMdDjjIhcruM54aFTWsEJxJiZAKknYNWsNCzASJSGWSEEU+1mIK0mQFJkBbPdvahCxQur1Z8XD+zCu829lCoSOT6QCk7F0sCgjvjCD9DKQDwM2zeOAS/PtzCfyfYl88pSgHZLTT29tIvvj0CMiol/d6S+jxH1Qv/r6+5vgE1DgPB8HR/6aHLkth6mYD4I9WmU1V7CyqmTrdVbUz5bMmArzwAC6DaYYZYLetrN4iSk4mABXTZcD6jPPB/kpvowHdMohx5HoNqU4XrFaTDGTq8VQPJP82r3lxKXIG8c5vyTrhmIDkYg/XVKQi6SeEE/E3yZO/bdyXbB15EfEKfYJTuhCnuQc2X7QFCgWZokgvjg9Nn7JwCXnp8JDkg9YuOiml4zjj78oktGaKkQozigf9tRCcMyyBU6+TbD7pvTOTMHk+9Gcsw9H84/xaCr4LoLqQZf8t7JGinZBWJUbQIGlqeZi0xTO6eKI1fcA3xH7wGo0qtWqOWhbBbFbe2Kv69YhgSeRtN6J30uOcnr+Hlr/Ag==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FEEF5883342FA5E05305991F0AA605</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEE6A8B693009E05307991F0AA538</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEE6A8B693009E05307991F0AA538</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124616</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEE6A8B6A3009E05307991F0AA538</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FEEEA987832019E05307991F0A80D6:6D8E6546"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f571416-0159-451f-9e5d-db97431d19c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>role</con:name><con:value>nodeIdRTL</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:RET_CS_1</con:value></con:property></con:properties><con:tearDownScript>if(context.expand( '${#Project#runTeardown}' )=='true')
	{
	log.info("Executing TearDown for Suite '" + testSuite.getName() + "'");
	
	for ( testCaseResult in runner.results )
	{
	   currentTestCaseName = testCaseResult.getTestCase().name;  
	   currentTestCase = testCaseResult.getTestCase(); 
	   log.info("Current TestCase : '"+ currentTestCaseName + "'");
	   log.info("Current TestCase Status : '" + testCaseResult.getStatus().toString() + "'");
	   
	   if ( testCaseResult.getStatus().toString() == 'FAILED' )
	   {
	      log.info("Re-executing failed TC");
	      def currentRunnerTC = currentTestCase.run(null, false);
	      log.info("Status on re-execution : '" + currentRunnerTC.status + "'");
	   }
	}
	log.info("Execution of TearDown for Suite '" + testSuite.getName() + "' Completed" );
}</con:tearDownScript><con:reportParameters/></con:testSuite><con:testSuite name="06.AccountUpdate_Backward_Compatability" id="d40ff568-091f-4d3a-a219-f601ebfb1b81"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00001_AccountUserCreate_with_country_BE_111_AccountUpdate_107_200_OK_P0" searchProperties="true" id="f6ffa219-c1e8-4a8a-96ea-391b83e0f4f9"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="8511415f-d116-455d-9ae9-4bce44e73001"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="4734ca62-f193-454f-a24e-fbdde81ed642"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","BE");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="190df78b-4809-4500-a75d-918809827dd3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="9fd9e03c-e2e0-4a58-b12d-9a8bb42a3cb1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="ddcde2a3-9486-430f-b42f-2ce7e116a131"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Update" id="f56643cb-442f-48c9-9487-24d1a332d06c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Update_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def today= new Date().format( 'yyyyMMdd_hhmms' );

myTC.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTC.setPropertyValue("AccountDisplayName","accname_"+today);
myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("eTag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}



tC.setPropertyValue("ResponseTypeAccountUpdate","SUCCESS");
tC.setPropertyValue("AccountDisplayName","accname_"+today);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VyvOYMpYcm4srUEWAJJ5hJhkgJJWXKUVuGyW2TCyZS75+JQMeICTL7pOr263u0xcd9YUgSWx7HSEgkyzllWUSc+EV2paRZ9xLiWDC4yQB4UnqjTo/B55dRR7ZHjEqfq9l/Gk0mk1EHWJihInp1NzQbGDbNd3AOa9T5D43QkeZCpGDz4UkXLYMG2HHxNjEzhjZHj73XFxFuPZkVCaQCeVbmVSRsQG1FC1jKuXMs6zFYlFdnFfTLLJshLD1+HMwolNIiNG+WGdUBMraG3taDYBCHNMqTRPrwtqzuQiEN2IRJzLPYBMr+CwWslDTUjaBYNE3ozwLgc/DtBC7hKecURKzd6Lr8xPkNA0qnThKMyanyadJYKQdm7CkJsUO/2ZY+9BOdLSHMBPEFFOCN76GEEIGnELlfui3jG+nda04Os4IF2GaJWJf/G94gM8hTmcQmGKb1gba6Q6PVKp9AdTzOY1zwebwSw/rjFAQm24CPd1V5S6DkC0HTKgBXQqNztqFdyCuq9FjEQj5fxq005y1kwmJc2g/1lz/Jgmdu/nZddzsd5LnxdiVMKj5UasAsGtcKMrWrsWDoSyHaH1iMXzvRQk0at3nh8YVerhzm1doaP3oivn3W3xd+yWaD7+zy1sS/RjPvofjl6B3s4rydHpW757RSfPpPqdDP346A6f7dPPdWZD60xINHu+v/YfR42RaSyY5dnqra/iNLx+c3/bV/UpMkD/o0df3ySR85fkt6kXpoHG1mowREXH/+mYcXsrofOZPXycvzbcfs6TxMKz3W2U6O/j3dds7P8qfX4DKrajHwO9VrlSXiPyazLSGBWZYmHozTT5CApdGW5/S3OHliu5Y4KkermVU7zbtTgdf9rs12+3gPnLPUb3ZxFeo07e79pZk1igOIHZTHjIdS1Puemy+BkgTTwAPIDPnaa6YThhfeOwRSSo+H6pLkHIB41TRM84prdF3NwjwS45JvJgj9GJn2dw2Kr9Sectvs04oIdsnZXePlIdA2YyBZm492EJNtpCqGG9knssYV+ekyiFX3J5pmvVsp+FagiWzGDRUK0mDPIbqbDorSmOJ9dc2CRWFdtgfF9ft08QO/21roGwCpg2EzuUSVB/hyOvibBP5POHGbsJb9508YPpmqYLKjNE1kv1ff+dED0g5JCqjP93RH7zFXZqffPzjSesLUNZhPcpAwZzthN2+3eoVULzR3nbzjVTfqvl8nhf9q2t+zJR7RVrYtZBtjYDmitlW4/QVuFV6sU56RkrgB8FL/T7EXE75SBIJiRq4SiGesDeMQOi9wVdXZXnqUrIXUpVOwlIe03VjtfNoxF+uRdSj2k6p79RnkWbB344d8bUTR+Wp1gbJeKQl/YSsPpkLmiq3TJFfmu06P+bgWPB9ZVnkEotUA/WcS/j8T0WzWssglKY5l37PKBS7TFvglKsZeH+NPrgpyLzc7ti/r3cmK0aAgtoJBSv860fa01eARztsvQl6nLAvO18R9j669gf1R81OnQ5nvP0P</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>06C9F8B2728B771EE05307991F0AFB05</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>07C92AA1BEBA25A1E05307991F0AE2C2</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C92AA1BEBA25A1E05307991F0AE2C2</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C92AA1BEC625A1E05307991F0AE2C2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C92AA1BEC625A1E05307991F0AE2C2</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_074445</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07C92B1E7F8C2978E05307991F0A9C60:D57AB875"</con:value></con:property><con:property><con:name>ResponseTypeAccountUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>AccountDisplayName</con:name><con:value>accname_20141114_07457</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>82f5abdf-4f82-4c46-af76-c307c21de871</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>86f22f02-ef5f-4877-9840-fe535e736b7e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ed412dd1-394f-4b7a-bd89-6511dc1c5690</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00002_AccountUserCreate_with_country_LU_111_AccountUpdate_107_200_OK_P0" searchProperties="true" id="6ac4070d-9e06-4952-9df3-9dd16aeea225"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="467b097b-990e-4c6d-8e6c-277e4a3b2132"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="9c54d5f0-cd73-4f1d-972b-c6be17f32000"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","LU");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="5743bbe7-7ae0-4e42-8a09-0f44da017060"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="786af53d-f966-4d9b-8ac6-434f6e12df73"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="a12350a0-f2d1-4d4f-835b-fd2380ce44dd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Update" id="1d102d3b-5ffd-42c5-9a8e-65f97ce3b865"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Update_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def today= new Date().format( 'yyyyMMdd_hhmms' );

myTC.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTC.setPropertyValue("AccountDisplayName","accname_"+today);
myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("eTag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}



tC.setPropertyValue("ResponseTypeAccountUpdate","SUCCESS");
tC.setPropertyValue("AccountDisplayName","accname_"+today);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc6pIEP4rFucZuXiFilYp6oacxBgxyea8pMah0UlgMMwAml+/M6hEzWXdfaK66en++jLf9AVDUWjaPcYg4SSmlXUUUmYX2o6SJtSOESPMpigCZnNse72ba9us6jbaH1Eq7qCjPLdBbwWtRlPVfbDUelPH6hxZSNUt38JmA7WbLRCmjKXgUsYR5R3F1I26ahiqUZ/ppm3UbaNdbTXbf5TKAyRM+BYmVV3ZgVqzjrLkfGVrWp7n1bxWjZOFZuq6of19c+3hJURI6V5sMyoCJd2dPa76gCEMcRXHkXahHdlc+Mz2yIIiniawi+V/F0vXdEsTNj4ji19KeRZ8lwZxITqIxpRgFJJ3JOtzA3wZ+5VeuIgTwpfRt0kYunSswhqr2KjTX4p2DO1MR0cIE4ZUtkTGztcUAkiAYqjcT92O8uu8rhVHZwmiLIiTiB2L/w0P0AzCeAW+yvZp7aCd7/CLSnUvANsuxWHKSAZjOawrhIHtugn4fFeVSQIBWV8TJgZ0zSQ67RDeibitxoAsgPH/06CD5mydPKAwhe4waGLvsma9j4NszmC+mF7X0z/5E4nyTgHg0LhQlK3diidDWQ7R9sQADOqA+/ZX5rPM97X+fTaZm2jpgdlYbqY1Z/meWxN9nd44wyfHWWoTLf/tXo6fHtESXd69WKPx1cuTP7t/eLljMKJZ/BR4tX4z8IwRwG32+vR+NQqvgvU89yfUvau3nd/9a+/mrnHVc6bj4WY1idPWhl61DX4389oN4q79/DEKJ/d3Kd88okk8zLPxJUW9TpnOAf5j3f7Oe+n8BTDfi3IM3EFlJLqE+M9kJjXEV4PC1F5J8mEcKFe68pTkDjsVdEd8W/RwK+stxzL7plHrjVqm1TKHeqOmtyzLGOk9o17v70lmi+IEohPTgMhYknK3Y/MzQBzZDKgPiZrFqWA6pvzgcYA4qrh0Ki5BTBnMYkHPud/QIaxtmuErfn17tWJk6pHFI6UyjvktvU16AYfkmJIbR5Q8BUxWBCRvy7FmYq4ZF6V4Q1nKQ6OaoSqFVDB7IknWNuvthsZItApBAtWi2E9DqK6Wq6IwGtt+TRVhVminw1lx2b5N6/TfvgLCxifSgMlc+iC6CF+8Lfo+ke8Tbh8mvHffS30i75UoJ08I3iI5/vUxJXI8yhERGT073rOxx12an33880ntB1DaaT3KQH5GDsLuX27xBgjW6O67+Yaqb9U0y9Kify3JjolwLyjLaGi6qXmAU8Frm1n8ClQrvWhnPSIl8JPgpf4YYsqX1OOIQyQGrlKIZ2wNHjC5NbjioqzPXUmOQorScVjzr3ROKDYeifjHpQjbWNoJ9UR88jjxPzr2ha+DOCJPsTRwQhdSkg/I5pu5wLFwSwT1xcmh868cfBX8WFkWucTCxUDNUw7f/6lITusoCOM4pdwdKIXikGcLnHyzAvvD6JObgsrL3Y78+3KnkmIEsNgjhX3hXz7RtrwCdHHA1bugn+h6MNSdentQa5p6QdeNLV33+vVmWZQjdN1P6s+agzqdznj3Hw==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>06C9F8B2728B771EE05307991F0AFB05</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>07C92DE0C48D3620E05305991F0AAB46</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C92DE0C48D3620E05305991F0AAB46</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C92B213AF72972E05307991F0A144B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C92B213AF72972E05307991F0A144B</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_074513</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07C93061498D3DD8E05305991F0A7E5F:50FB401"</con:value></con:property><con:property><con:name>ResponseTypeAccountUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>AccountDisplayName</con:name><con:value>accname_20141114_074533</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>82f5abdf-4f82-4c46-af76-c307c21de871</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>86f22f02-ef5f-4877-9840-fe535e736b7e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ed412dd1-394f-4b7a-bd89-6511dc1c5690</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00003_AccountUserCreate_with_country_NL_111_AccountUpdate_107_200_OK_P0" searchProperties="true" id="b5b8c543-2361-4af2-96f0-f6432fc44e8e"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="0c6db9fa-9073-4e89-b288-d92d0a3ca9f7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="49c4ad46-c1c8-48d4-b6bb-c60c76c62dc8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","NL");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="94226984-3fde-472a-a23c-a179da3da340"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="fb4d9140-6faf-4032-ac60-f364f95bddef"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="69050993-8ce2-44cd-be02-00526c1b27b5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Update" id="88e6e78a-fb74-41fd-a55c-d673d370e4d5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Update_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def today= new Date().format( 'yyyyMMdd_hhmms' );

myTC.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTC.setPropertyValue("AccountDisplayName","accname_"+today);
myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("eTag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}



tC.setPropertyValue("ResponseTypeAccountUpdate","SUCCESS");
tC.setPropertyValue("AccountDisplayName","accname_"+today);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VynlMGS+YzRWoclhyCSQkwGSSeUkJuQEFWwJLNpCvH8mAA2S53Pvk6nar+/Sio77iKAxs1+McIkEYza3DgHI31da0OKIuQ5xwl6IQuCuwO/Tueq6dN120P6LlOs2a9lqyqrhYwiUdlcu27kwsS0fjCtIt0xkXi+UJOD5IU85j6FAuEBU1zTYtR5eGljMybddyXMfJV6uVP1ruCSIufUuTvKntQK15TZsJsXANY7Va5VeFPIumhm2alvF81xviGYRIq19tM0oDRfWdPc77gCEIcB6z0LgyjmyufO4OyZQiEUewi+V/F8s0zKohbXxOphdadhb8Dp2wVGwgyijBKCDvSNXnDsSM+TkvmLKIiFn4bRKWqRzrsMY6thx6oRnH0M50dIQw4kjnM2TtfA1gAhFQDLlfg05Nuziva+nRUYQon7Ao5Mfif8MDNIGALcDX+T6tHbTzHX5RqfoVYLdDcRBzksC9GtYFwsB33QR8vqvcQwQTsu4RLgd0zRU64xDeibitRpNMgYv/06CD5mydPKEghno3vGyjQuLFm03fTkZJszC1NzZrD0svtRTAoXGqyFq7FU+GMhui7YnbQaffv6GNyctEmL9ufj9NIOx3q/b60XPM5+7N2+9/NrTL33qOHT6Ix2V8W271/Z5YxNYd7WFrHvr8uTOojsOlsXIWpWvRCpoDnowfeOWlOHocP/Fxt2cV5hV0eU+eZ6thUJm9hV1vlszK9p++1S6so9LzUyv27WV7UxheLm4f328j02DjDXiMJOacFcY385dOLUvnAP+xbn/nh/H4DbDYi2oMOs1cW3YJiZ/JTGmIr09SU3ehyIcLoEKrq1OKO9xY0h3xXdnDrWyWG1Xb80pF27u2i16hZRYLZrlatdqmV2lcN/cks0VxArHB6ISoWIpyt2PzM0AcuhyoD5GesFgyHdd+8NhEAuU6dCAvAaMcRkzS87y4LFXiVaX0zsfWktlJTKu0vC5bWu6eiT7tR95EQHTMycUjTh4AJgsCirjVXHM52FzIWixREovAyicoTyGW1B4plnVtp1I0OAkXASikRsj8OID8YrZIK2Pw7dfWEeapdtAapbft27xO/+1LIG18ogy4yuUaZBvhi8elsE/k+4Qrhwnv3XuxT9TFkvUUEcFbJMe/PsZEzUc2IzKj18bw1drjzszPPv75pPEDKOO0HlkgPyEHYfdPt3wEJG3U991covwyHydJnPavrOgxku4lZ1lFw7SNIeBYEttmxOZAjcyLcdYrkgE/CZ7pjyHGYkaHAgkI5cDlUvGMtWEIXK0NHXlT1ufuJEchZekErMVXukYgVx6F+MetCLtY2Un1g/ysWOR/dOwLXwdxZJ5yaxCETpWkXpDNN3OBmXRLJPex6ND5Vw6+Cn6szIqcYRFyoMaxgO//5BSp1TSEMYup6DS1VHFItClOsVmA+2H0yU3K5dlyR/59u9NJOgJYLpLSPvWv3mhXXQE6PSDrXdBTvi6YJUnVpXah2fRSvi5u+bpcbWV8fYyu/kn9WXNQp9MZr/8F</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>06C9F8B2728B771EE05307991F0AFB05</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>07C930625A6F3DDAE05305991F0A79ED</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C930625A6F3DDAE05305991F0A79ED</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C92AA652AB25A3E05307991F0A8CBD</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C92AA652AB25A3E05307991F0A8CBD</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_074538</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07C9306415AE3DDCE05305991F0A3D51:9B05F327"</con:value></con:property><con:property><con:name>ResponseTypeAccountUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>AccountDisplayName</con:name><con:value>accname_20141114_074556</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>82f5abdf-4f82-4c46-af76-c307c21de871</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>86f22f02-ef5f-4877-9840-fe535e736b7e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ed412dd1-394f-4b7a-bd89-6511dc1c5690</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00004_AccountUserCreate_with_country_AT_111_AccountUpdate_107_SUCCESS_P0" searchProperties="true" id="f59a56b9-c6ec-45b4-84b0-570cde6da870"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="79527e5b-526e-47b5-9af9-ae569b68b36e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="ad7807a9-2cc3-4df1-a208-b3d991a22902"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AT");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="dca5804f-418b-473a-a5d1-acd09950a190"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="7ec78efc-b639-4710-b78a-5b4d153f05c8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="73121f23-48e9-4476-92ae-0d23c9765259"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Update" id="a2611147-2c63-4739-8853-d65fd12e568c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Update_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def today= new Date().format( 'yyyyMMdd_hhmms' );

myTC.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTC.setPropertyValue("AccountDisplayName","accname_"+today);
myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("eTag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}



tC.setPropertyValue("ResponseTypeAccountUpdate","SUCCESS");
tC.setPropertyValue("AccountDisplayName","accname_"+today);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuI6EP0VyvM4ZSwZm8UVqCJAUr7ZCJAFXlKK3IAyRnYsmSVfP5IBB0jI5d4nV7db3acXHfWZILPQ9ppCQCJZxAvLWciFl2nrRppwLyKCCY+TGQhPUq/fvLn27CLyyPaIUfDbdeOFBphUqm7JDEp22XRQDZvVErhmmYyrr7jmjKGGlakQKfhcSMJl3bARdkyMTewMkO1h10O1omujkVF4hEQo38qkiIwNqKWoG1MpY8+yFotFcVEqRsnEshHC1vPNdZ9OYUaMxtk6oyxQ0tjY02IAFMKQFmk0s86sPZuzQHh9NuFEpglsYgXHYiEL1SxlEwg2+WXkZyHw+TjKxBbhEWeUhOyD6PrcgJxGQaEZTqKEyensaBIYaccmLKlJscN/GdY+tBMd7SFMBDHFlOCNrx6MIQFOofDQ8+vGr9O6lh0dJISLcZTMxL743/AAn0MYxRCYYpvWBtrpDr+pVOMMqOdzGqaCzeFWD2tMKIhNN4Ge7qrQTWDMltdMqAFdCo3O2oV3IK6r0WYTEPL/NGinOWsnjyRMoSGWPSf5fXEvYcjci1a7x98fwiv02gxoPQOwa5wp8tauxYOhzIdofWLYqd1fRP4qjbux9dRxrx7O6c15lb49Xt2UR+fX4Wvcva/dtdk0fLi8YOEzvnwLr0f/4LF167vP3RsYdkmTzSd4serffizSau9+9SqfyG06fBpUJg+X89+d6h0e1OZ0jJygMvQH/JJZz5e2M0GTxYjelxSC24+PYNS+7rLHq1KVvY+qo046EP3uEIXV+5SKJnvw63k6O/j3dds7309f34DKrajHwG8XLlSXiPyZzLSGBeY4M/ViTT5CApdGQ5/S3OGliu5Y4KkermVUadXsdge1nGarVLZRB7kl5NZq+AI1m+dOeUsyaxQHEFsRHzMdS1Puemx+BkhnngAeQGLOo1QxnTB+8NgmkhR83lOXIOICBpGiZxxOlrWVLWnZfa/8id/GGDsorgjXKNxG8o7fJc2xhGSfk909Tu4BZTEDTdx6roUabCFVLd7JPJUhLs5JkUOqqD3RLOvZTtW1BJvFIWik1iwK0hCK8TTOKmOJ9dc2CRWZttcZZLftaF6H/7YlUDYB0wZC53IOqo3w5XFxPHebyPGEq7sJb90304Dpi6XqKRNG10j2f32OiZ6PfEZURi+t/gve4s7NTz7+9aT1AyjrsB55oGDOdsJun271CCjaaGy7+U6K78V0Pk+z/lU0PSbKveIs7FrItvpAU0Vsq0H0B7iVe7FOekVy4AfBc/0+xFROeV8SCTM1cIVMPGFt6IPQa4Ovbsry1J1kL6QqnYSl/E7XCtXKoxH/uBVRj2o7pe6qzyJKgs+OfeNrJ47KU20NkvGJlvQLsjoyFzRSbpnivijZdf6dg++C7yvzIudYpBqo11TC8T8FTWp1g1AapVz6bSNT7BJthlOuYvA+jb64ybg8X+7Yv293JstGgIJaCQXL/Os32tNXgE92yHoT9JCvS6jsYPfcKbXbrV2+LrXdz/ncQ9f4ov6q2anT4Yw3/gI=</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>06C9F8B2728B771EE05307991F0AFB05</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>07C9306415B43DDCE05305991F0A3D51</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A07C9306415B43DDCE05305991F0A3D51</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>07C92DE0C4AC3620E05305991F0AAB46</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A07C92DE0C4AC3620E05305991F0AAB46</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141114_07463</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07C93061499B3DD8E05305991F0A7E5F:3D48A091"</con:value></con:property><con:property><con:name>ResponseTypeAccountUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>AccountDisplayName</con:name><con:value>accname_20141114_074623</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>82f5abdf-4f82-4c46-af76-c307c21de871</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>86f22f02-ef5f-4877-9840-fe535e736b7e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ed412dd1-394f-4b7a-bd89-6511dc1c5690</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00005_AccountUserCreate_with_country_DE_111_AccountUpdate_107_SUCCESS_P0" searchProperties="true" id="55ce6909-ccb5-41d7-93f0-3ff7ea954021"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="560b22f6-512d-46dc-a03b-16603feb1e08"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="8e5bad40-1c9a-4354-aa11-ab282bc32c16"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","DE");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="7b8857a1-4727-48ca-a960-ce0bd782c05a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="116bc8ee-3b3f-47b2-9e67-84819407d2c0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="009cbd5f-9937-4ac1-b163-0f58c5a15b66"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Update" id="f6b29968-5dc3-464a-bd41-e0b17c2bb0e0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Update_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def today= new Date().format( 'yyyyMMdd_hhmms' );

myTC.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTC.setPropertyValue("AccountDisplayName","accname_"+today);
myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("eTag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}



tC.setPropertyValue("ResponseTypeAccountUpdate","SUCCESS");
tC.setPropertyValue("AccountDisplayName","accname_"+today);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH69CPiCBRAWJhdKlLe22QLfbl5VxBjCb2CF2gPbXXzs0KVDay14JCXkynjkzc3zsM47iyAnanEMqCKNav9vUfztuHXkNHBreBGOj5lqugWy7buCJXfNCaNRcz9e1PucZ9CkXiIqm7lh2zbAahu2PbC+oeUG1Wmm4/pOuPUDKZWjpUrF0bRNHlAd52qaepTRgiBMeUBQDDwQOhu3BdSA9A1Rg0ltnW5R5wrQ1FyIJTBNXQsAQRbiCWWyemXs+ZyEPhmRGkchSeM0Z8qb+une9XlfW1QpLZ6ZjWZZp+ab0CTmZfdVbX4rNEPbplG3XHUQZJRhF5AUpUAMQcxZq7WjGUiLm8QehbdO2VGgDNtjAdo1+1c23BDm6EyPtgUw5Mvgc2UWwe5hCChSDNr7vN/Wvp01wu3eUIsqnLI35wfrvIAFdQcQSCA1eVFagOz3ikXa1zgAHfYqjjJMV3CiaJAgD136kMCWba8Il+UKu5ePXNlz+SMEywH8zljNzF6uEbh7pTpfMgIv/M7PdeW2jPKAog1ans8L49jHeDC6Su+6yt778s7qbT7qP40Ezh7DrvAVVjvt1fUjWkluvm9h42G5EVjyyfr7cLGJm3obYvBPIDa8WrEe53/2eTboO+v6LdAf/zCap0zv3bgRp1L8tOusEug8TJ5lmy6f7sfnlfFwXIefT9e365WLyEJJBbXguJtnTbYIG64unudcmvD26Jp1f+Ofj4iqeVv36wkOXqAMz62J85Q4zPhriJ4RnX2j9bjGdd1a/ri7N+HEsojVvvtW0W8O+sZCEYTZZABbFUtGj39V6cl5IfC4vykJCY5q7BonSKC6ACr2ldilpCTIpQCQM5DC3a8vq9ay6ZffO3V7da1vnllu16r5v96x21XftQoO2KA4gdhidEpVLqeyWP58DxHHAgYaQGiuW4Tlw/ZOIXSSQ1qf38nAwymHEpIpj3sDVF7qYRPzFBhfTmcXWS+Z7unbDxC29TdtTAem+dPt70n0PmCQElL4rgnPJcC5kL5ZolYnIrqxQhUImb4BUiXDg1BquyUmcRKCQmjELswgqyTzJO2Py7b9jIMxz6/35KD94H9Z1+K1ogfQJiXLgqpZvIMcIR+4gpyjkw4IdZ7fgInw7C4k6X7KfIiV4i2T/0xtNFD9KjsiKfneGv0sulO4nb3+/0/wElHnYjzJRuCI7aYvLVN4PUj1axTSXqLKsZKtVls+vrpQxleFNKZC2OQScSXl7HrE/QM0yhHnS7VKiPshc2vfxZWJOhwIJiCXbtHx5wtNiCFw9LfrymGxOfbfspZR9E7ARx2ydSL5AFOJPHyk4wMpPmn/IvzVLw7dxHYm1k0fWKd8TgtCZWql75PkDUmAmwxIpfCzdDX4swLHk+8ayySUWIdk0yQR8/EVTitbUEcYso6Lf1XPDrsrmOMVzAsGb07swuZK/Xs0b/uHV/Di4Hkq9i5Fe+pL/djZIThcMunoB5Fia+ka+NGVyOttR9VeA74Tdq32r9dxG3fM7u8Ledvx22cC9SlrvzO8tOz09PA+tfwE=</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF064B4F59769CE05307991F0AA29A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF064B4F58769CE05307991F0AA29A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF064B4F58769CE05307991F0AA29A</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF0701FE5F76A0E05307991F0A3951</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF0701FE5F76A0E05307991F0A3951</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124633</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF0701FE6076A0E05307991F0A3951</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF07106B9B1A4DE05305991F0A8C2B:B6163DF3"</con:value></con:property><con:property><con:name>ResponseTypeAccountUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>AccountDisplayName</con:name><con:value>accname_20140819_124635</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>82f5abdf-4f82-4c46-af76-c307c21de871</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>86f22f02-ef5f-4877-9840-fe535e736b7e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ed412dd1-394f-4b7a-bd89-6511dc1c5690</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00006_AccountUserCreate_with_country_CH_111_AccountUpdate_107_SUCCESS_P0" searchProperties="true" id="dd4a0e9e-a4ab-499b-88e0-d28b8f59232b"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="09b42486-2039-44d9-aad0-b3695d563a3b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="f6b3ea7f-9131-41a3-98c4-c7eeb9d3913d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CH");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="5734769e-85cf-477c-92f8-e712397f9f97"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="0d0544e2-367e-47fc-ab49-b006bca23ee0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="cad0ef56-c678-4cd7-a7c1-280abb23ef58"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Update" id="8cfa3b60-d614-4a26-98dc-f5f7cb0daf2c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Update_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def today= new Date().format( 'yyyyMMdd_hhmms' );

myTC.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTC.setPropertyValue("AccountDisplayName","accname_"+today);
myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("eTag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}



tC.setPropertyValue("ResponseTypeAccountUpdate","SUCCESS");
tC.setPropertyValue("AccountDisplayName","accname_"+today);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH49CLiSBRAUp3AptoV1gt92+rIwzgCE4aexQ2l9/7NBQoLSHPRIS8mQ8883F38wFQ6vI8gPGIOUkpkqvVVP/YBtPoTzBmo08R7Mt19KqpmNpZdMDxzIdp4oNVekxlkGPMo4or6mWYdqaUdVMb2y6vu365UrJrrqPqvILUiZMC5WSuLVZRZT5uduamqXUjxEjzKdoBczn2B8F/RtfaPqowKTWL7Yoc4dpfc554us6LoWAIYpwCccr/UI/0LkImT8iM4p4lsKbz5DV1Le7z8/PpedyKU5numUYhm54utAJGZl9V+vfissQ9ug03p6biMaUYBSRVyRB9YHP41AJolmcEj5ffWLa1E1DmtZggzVs2vS7qr87yNGdaekAZMqQxubILIwNYQopUAzKz2Gvpn4/r4Lbu+MUUTaN0xU7Ov8dJKBriOIEQo0VkRXozrd4Il31C8B+j+IoY2QNA9kmCcLAlLsUpmRzQ5hovpApefmVDRM/UnQZ4L8py4W+j1VA109kp0VmwPj/qdl+vbZWfqEog3qvelft3q8XnY3XXJiPdN29772WM7Mz7ddyCPvKW1C7cr+dj5t111tvl7rw4zK8hv6dO1kOG/yq2Rn/CINrzyUPC/cqm/Wh+/Q7fECbZfOaIAhuXpdd57ry+7Z5eeX2JwvyfM+qY+hMlpXBN3Ow/GfwigfdJ2obziu/bbhtarZfrUr0O2n9fInKbbf/eGtPh9MgQ5f6sDFqZgv3V9hxPeY07q9+dNPlrNy+vWw8fGvPNomedB8H1ccuv7xZBMbP2ntM+zEcCgtKGGWTBWBeHGV79FpKR9QL8a/pRUpIqE1zVT+RHMU4UK7W5S1JLX4mCIiEvijm9mwYnY7h2g1bRFJxvWbbcMpGxfPMjhEElhcUHLRFcQSxGdMpkb4ky27752uAeOUzoCGk2jrO8ByY+oXFFuJI6dGheBwxZTCOBYuHLJ4jO2bJZMVm7oSZNFqsmGeryiDmt/Q2DaYc0kPm9g6YewiYJAQkvcv+ZqLBGRepeELrjEdmaY1KFDIxAFLJwb5lVx2dkVUSgQSqr+Iwi6CUzJM8MTrb/lsawiyXDtvj/N19GtbxtyIDQickUoHJWBogqggnRpBVBPJpwJa1H3BhPshCIp+XSCdPCd4iOfz03iWyPXYtIiL60xz9MQvcO/Wzr3+8qX8BSj/Ox85RuCZ7botZKsaDII96Uc0nVHoqZet1ltevIokxFeZ1wY+mPgKcCXZ7GcdLoPrOhH7WcNmhPvK8kx/iy/icjjjisBLdpuTHMzaLETC5WfTEK9mcu7YcuBR547Dhp2TNSCwgEvGXOwr2sdQT4jvx9xyn4Xu5Ttja8yPiFOsEJ3QmT3KMvHzSFDgWZongvTjdN37KwCnnh8JdkndYuOimScbh8y+KJLSaijCOM8p7LTUX7JNsjpO/JOC/K30wkxP522TesE8n80P/ZiToboXUnS75b2WN5O2CQZULQI6lpm7Eoimc09keqb8B/MjrnbZTthwzcJyc150tr7fLjdYugQeR1D+IP0r2cnr8Hur/Ag==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF06FE53261A55E05305991F0AE3BD</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF06FE53251A55E05305991F0AE3BD</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF06FE53251A55E05305991F0AE3BD</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF064B4F69769CE05307991F0AA29A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF064B4F69769CE05307991F0AA29A</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124636</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF064B4F6A769CE05307991F0AA29A</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF06FE754776A4E05307991F0AAEDE:7D1BC4CC"</con:value></con:property><con:property><con:name>ResponseTypeAccountUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>AccountDisplayName</con:name><con:value>accname_20140819_124639</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>82f5abdf-4f82-4c46-af76-c307c21de871</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>86f22f02-ef5f-4877-9840-fe535e736b7e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ed412dd1-394f-4b7a-bd89-6511dc1c5690</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00007_AccountUserCreate_with_country_FR_111_AccountUpdate_107_SUCCESS_P0" searchProperties="true" id="aed73f14-d960-406a-9f93-0fa3fd307ce2"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="e627a11a-e4d6-43f6-8422-c07955d6aad6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="f0191895-6dc5-482a-9f23-4a28b8b79bf4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","FR");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="cc701951-2e12-44a8-8467-533fce00df4a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="0ae61470-dfab-4edc-bcbd-eda7a749dda1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="006cb2e8-bed0-43c4-ab2a-000e155145f4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Update" id="d1a6aace-4818-4533-954c-2c077f8a5659"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Update_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def today= new Date().format( 'yyyyMMdd_hhmms' );

myTC.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTC.setPropertyValue("AccountDisplayName","accname_"+today);
myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("eTag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}



tC.setPropertyValue("ResponseTypeAccountUpdate","SUCCESS");
tC.setPropertyValue("AccountDisplayName","accname_"+today);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj6uQOIRLooJEC+xmewfKafdlZRyHuCROajtA+fXHDoQCpT3skZCQJ+OZby7+Zs45TGLb63COmSAp1fxuS/8TOs2JVce2EWLXMZx6ExkTK3CNEFh2EE5qNdQMdM3nPMc+5QJS0dJtCziG1TSAOwJ1z5E/q+I27d+6NsaMS9NSpWLp2jKJKfcKty09Z9RLISfcozDB3BPIG3Zurj2p6cESk94+X6MsHLJ2JETmmSaqBBjhOEYVlCbmubmncx5wb0imFIqc4Y3PgLf0zd3FYlFZVCspm5q2ZVmm5ZpSJ+Bkeqa3v5WXceDTMF2fLyFNKUEwJiuoQN1gEaWB1omnKSMiSj4xDUxgKdMGXiIDAYee6ea7gwLdiZb2QDIODR5BUBob4BAzTBHWHgd+Sz87rYLruyMGKQ9TlvCD899BwnSO4zTDgcHLyEp0p1s8kq72OUaeT1GcczLHt6pNMogw1+4ZDsnymnDZfAHXivJrSy5/pOwyjP6mLOfmLlYJ3TySnS6ZYi7+T81267W2MoZxjtvP4a/x6gLM3ato0Pk5e3Se669WHD3dJahVQNhVXoPalntzPmzWbW9tLg1t0Lm8/InRzfThtwWyX7Q6a9z6ve7z+K1P/Vn9Me4PWeMJEDebZe6K1AkBQRYC1HuYismgixioz7HzfeSKb4+/o3t+2x8JEo07PyADycXzYOxHL3f/RMwHT7XVbS9A5AWy5PFpMn9YTOGNY5m96uvPH/UxsJdTlzYH4bT5AOi36/uFc7VIBfr+2rh4ubkad6zWe0y7MewLS0oY5pMXjER5VO3hd7W+rBcUX9OLkpDACAtVL1McxQWmQm+rW4pavFwSEAk8Wcz12bL6fave71mW22/UO3bPqlWthuuCvtWpXoBGyUFrFAcQL1MaEuVLsey6f74GiBKPYxpgZszTHEWY619Y7EIBNZ8O5ONIKcejVLJ4rTrjtUb0Mosms5StouncWsEVWujabSru6B3rhAKzfeZ295h7gBHJCFb0rvqbywbnQqbiFc5zEYPKHFYozuUAYIqDPdtp1kxOkizGCqiZpEEe40oWZUViTL7+tw2IeCEd9EbFu/s0rMNvZQakTkCUAlexXGBZRXxkBFXLQD4N2LZ3Ay7Nd/KAqOcl0ykYQWsk+5/eu0S1x7ZFZER/Lod/QIl7q37y9Y83zS9AmYf52DoK5mTHbTlL5XiQ5NEuq/kKK6+VfD7Pi/o1FDEyad6U/AjMIUa5ZLe3UTrD1NyaME8aLlvUB5638n18uYjoUECBE9ltWnE8YbMYYq42C1++kuWpa8ueS5k3gZfimOwylguIQvzljoI8pPSk+F7+LVL2HvgxWzt+ZJxynRCETtVJjZG3T5oCpdIskbyXsl3jxwwcc74v3CZ5i0XIbprkAn/+RVOE1tIhQmlOhd/VC8EuyRY4xVuGvXelD2YKIt9M5iX/dDI/3VwPJd0lUN/qkv9WNkjRLgjragEosLT0pVw0pXM63SH1DcCPvO5cNJ1eH3Qct+D12obXAehtE7gXSfuD+KNkJ6eH76H9Lw==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF064B84F01A49E05305991F0A311E</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF064B84EF1A49E05305991F0A311E</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF064B84EF1A49E05305991F0A311E</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF06FE009F76A2E05307991F0A3B17</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF06FE009F76A2E05307991F0A3B17</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124640</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF06FE00A076A2E05307991F0A3B17</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF06FD46541A51E05305991F0AEF0F:8638E0DE"</con:value></con:property><con:property><con:name>ResponseTypeAccountUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>AccountDisplayName</con:name><con:value>accname_20140819_124642</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>82f5abdf-4f82-4c46-af76-c307c21de871</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>86f22f02-ef5f-4877-9840-fe535e736b7e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ed412dd1-394f-4b7a-bd89-6511dc1c5690</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00008_AccountUserCreate_with_country_NZ_111_AccountUpdate_107_SUCCESS_P0" searchProperties="true" id="73effb52-2c7c-4b5e-be92-ebe854c736db"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="d641dfd0-1821-46d2-ba28-1068122ec727"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="5575913e-ce46-4cc0-908c-ab1d0879052e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","NZ");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="fe4f5d79-9e72-43db-98a1-76f6c7002f24"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="b4d072db-4472-44b8-9a8e-55dbdd269dfe"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="c6b73627-c58f-4d71-9d33-540ad242e00f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Update" id="eaebe469-d36e-457c-9598-fb6cef8291af"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Update_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def today= new Date().format( 'yyyyMMdd_hhmms' );

myTC.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTC.setPropertyValue("AccountDisplayName","accname_"+today);
myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("eTag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}



tC.setPropertyValue("ResponseTypeAccountUpdate","SUCCESS");
tC.setPropertyValue("AccountDisplayName","accname_"+today);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+o8EP3ur+jUj07pC6XYjjCDovdWeVHw7frFCWkK0TatTQKFX3+TQhEQfbjPDDNMtpvds7snJzmjII4sr0UpyhhOiOK3G+qr4zqWa1hIM9Cpq9mjsK6N3FFNM20LWHYYwNN6VVV8SjnyCWWAsIZqGaatGaea6d6bjmeLn11xDOdFVR5RRkVo4VIxVCWPI0K9Im1D5RnxEkAx9QiIEfUY9IatbscTnh4oManNsyXKImHWnDCWeroOKwGCKIpgBSaxfqZv+ZwF1BviMQGMZ2iVM6ANdbV3NptVZtVKko11yzAM3XB14RNQPD5Wm0flZhT4JEyW6wtAEoIhiPACSFBdxCZJoLSicZJhNom/CW3qpiFDayiHGjRtcqzqnwkKdAdG2gKZUaDRCTDLYAMUogwRiJSHgd9Qjw+b4HLvfQYIDZMspjvrf4OEyBRFSYoCjZaVlegOj7inXc0zBD2fwIhTPEU9SZMUQESV2wyFOO9gKsgXUKUYv5JT8cMlyxD8l7Gc6ZtYBXR9T3faeIwo+z8z25zXMsojiDhq3nWfSPantViA9lV+3brVKb4Z8pfb2w/YKCBsOi9Brce9Wu+Sdc2t1aYHkD7d0b6FOa46xlOY9pxkPJl18tB+53oPzk6i6Hw+OHnpLH77d/rwd9WcTq7vdNa9Zje4i9MLpzYBN/2wB/2jQXuRW30/fF+4Tz2Hn0fvI65f913fzx5COqlVp+P+S7XKZ+GoOrbTtPvwZvy6uxl2fjm9e5+MKX0Pos5H/8SxXo7aN49szpLR80ncemYP1p/zy8ZnTZs1bBtLSRjy0RuCrFxKevht5UrMC7Cf5UVacKCFhauXSo2iDBGmNuUuKS0eFwKEA08Mc7k2jKsrw7HPT2uCQS3bvTRqVaPmuuaV0aqa5mWpQUsUOxAvEhJimUuq7JI/PwOEsUcRCVCmTRMOJ4iqP0RsAwYUnwzE4UgIRfeJUHE8snMbRjPLqCdmzN9m83w+S9/imar0EtYn/awVMpRtS7e7Jd0DBHGKkdR3SXAqGE6Z6MUHmHIWmZUpqBDExQ2QSRH2LPu0JugbpxGSSPU4CXiEKukkLTqj0+W/pQFIC+vg8r44eN/WtfutbIHwCbB0oLKWcyTGiPbcQdWykG8LtqzNgsvwLR5geb5EP1mG4RLJ9qdPmkh+rDkiKnq9GL6aJe61+8Hbv+7UfwCl7/ZjnSiY4o205WUq7gehHs1ymh+g8lHh0ykv5leXypiJ8LoQSFMfIsiFvM3vk3dE9HUI/aDbZY16J/Pavo2PswkZMsBQLNimFMsDnhZDROXTwhfHJD/03bKVUvSNoZzts11E4gUiEf/4SIEelH7CfCv+ZkkWfI5rT6yNPKJO8Z5gmIzlSt4j829IARMRFgvhS7LN4PsC7Eu+bVw3eY2FCTaNOEPff1GkojVUAGHCCfPbamHYVNkCJ5unyPt0+hKmUPLV1ZzTb6/m525nKPQuBuraF/+3s4YLukCkyhdAgaWh5uKlKZKT8YaqrwB+Efa6YV5dtmp1p2UUwl5fCbtb+zzMW5U0v5i/WjZ6unsemn8B</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF0701FEA676A0E05307991F0A3951</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF0701FEA576A0E05307991F0A3951</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF0701FEA576A0E05307991F0A3951</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF064B85001A49E05305991F0A311E</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF064B85001A49E05305991F0A311E</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124643</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF064B85011A49E05305991F0A311E</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF06FE53431A55E05305991F0AE3BD:26F01153"</con:value></con:property><con:property><con:name>ResponseTypeAccountUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>AccountDisplayName</con:name><con:value>accname_20140819_124646</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>82f5abdf-4f82-4c46-af76-c307c21de871</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>86f22f02-ef5f-4877-9840-fe535e736b7e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ed412dd1-394f-4b7a-bd89-6511dc1c5690</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00009_AccountUserCreate_with_country_IE_111_AccountUpdate_107_SUCCESS_P0" searchProperties="true" id="53b54b06-bc36-4595-85d8-b741fc4e828c"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="196fb2b8-0c73-4f0d-aaf2-a3693fc8f2c7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="cd7fcfdc-52d2-4c97-aab6-206ad73a55b1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","IE");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="242e2883-aa76-4d5c-befd-311b2ca9b47a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="8205d986-8779-4b7d-b6f6-a7eb47aa72ae"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="8d63323e-c7f5-44d1-bdaa-08d119fe5fb9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Update" id="49156da5-d8ea-44f3-8e43-f55173869d69"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Update_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def today= new Date().format( 'yyyyMMdd_hhmms' );

myTC.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTC.setPropertyValue("AccountDisplayName","accname_"+today);
myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("eTag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}



tC.setPropertyValue("ResponseTypeAccountUpdate","SUCCESS");
tC.setPropertyValue("AccountDisplayName","accname_"+today);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbvb9o8EP6+vyLKPk4hcaBAooLEj7KxjsKAorZfJuMc4C5xqO1A1r9+dmhSoLQveyUk5Mv57rm7x499KXAUun5LCOCSxszodxvmr1qAvQCqrnVB0NyqLLyyVV+QwEKkUr8ISBm5ATaNvhAJ9JmQmMmG6TqoYjl1C3lTVPUr6lcr1b36g2nMgAsVWrmUHNNIo5AJP0vbMBPO/BgLKnyGIxC+JP6kNfjhK08f55jM5uUOZZaQN1dSrn3bJqUACIQhKZE4si/tA5/LQPgTumRYJhxecgaiYb7s3W63pW25FPOl7TqOYzuerXwCQZefzeanfDMEfbaId+sOZjGjBIf0GWtQA5CrODBa4TLmVK6id0IjGzk6tAUpsQiqsM+m/ZogQ3dmpAOQXGBLrDDKg41hARwYAeN23G+Yn8+b4G7vlGMmFjGPxNH63yAB20AYryGwRF5Zju78iCfa1bwE4vcZCRNBN3CjabLGBIQx4rCg6Q8qFPkCYWTjN1KhfjRnGZB/GculvY9VQbdPdKdLlyDk/5nZ/rx2UWY4TKDJvS51UvuJX69n4/YCdZbDxxkPb91w2cgg7DvvQBXjflkfk7Xg1ssmmAzb92M+7EbX6SD9GUfXP8Xou2ijZDBMe/Py6KJX75SH83H0ZYSmzBbP3vU1Crc9efskrrZ3GzEMgi9oxB+/iU89r35v3/0kIybRNzytPQzms4AhN3Tx9OGZf6Ez7n7/OgnRfS3kNxH6jR5gMe4v0nCAb2yv3FlBtSPG09q9aH9yZ9ff7m675RY8P3z9fu+6q0Hjtab9Gg6NuSRMkvkjEJkvNT36XaOn5oXlx/KiLTSwFpmrv9YaJSQwaTb1Li0tfqIEiAa+GuZu7Ti9nlNzUO+qXa1VW86Vc1F2ap6Hek6r7F2gXIN2KI4gdmK2oDqXVtkdfz4GSCJfAAuAW5s4ISsQ5gcRu1hio8/G6nDETMA0ViqOPM+L2Xq1lU+PgKqP83k1XQgGUDGNm1gO2ZC3FhL4oXZ7B9o9BkLXFLTAa4YLRXEhVTOe8CaRISptcIlBoq4ArlXYd5W62IJG6xA0VDuKgySE0nq1zlpji92/a2EiMuv4apqdvHcLO/6W90D5BFQ7CF1LG9Qc4cQlVM4Lebdg190vOA/fSgKqD5hqqOSU7JAcfnrliSZIQRJV0a/O5FdBhsL97O1vd9ofgLKP+1EkCjZ0L21+m6oLQslHM5/mEy49lZLNJsnmV9PSyFV4WykksidAEqVvf6bxb2B2EcI+63opUB9lLuyH+BK5YhOJJUSKbUa2PONtMQGh3xZ9dU7Scx8uBylV3ySk8pStE6oniEb84SuF+ET7KfNI/W1jHryO60SsvTyqTvWgkJQt9UpfJH/eIQWJVViqlC/m+8FPBTiV/NBYNLnAIhWb5omE978YWtIaJiYkTpjsd83MsC+zGU75Zw3+q9ObMJmUv9zNqXj3br4b/JgowYuwWfjS/3a2aEYXAqZ+AmRYGmaqnpoqOVvuyfoLwDfKXq20K72WV6t6nX1lb7leq2jgQSXNN+a3lr2eHp+H5l8=</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF064B4FAA769CE05307991F0AA29A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF064B4FA9769CE05307991F0AA29A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF064B4FA9769CE05307991F0AA29A</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF0701FEB676A0E05307991F0A3951</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF0701FEB676A0E05307991F0A3951</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124647</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF0701FEB776A0E05307991F0A3951</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF064B85401A49E05305991F0A311E:E1AB46C8"</con:value></con:property><con:property><con:name>ResponseTypeAccountUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>AccountDisplayName</con:name><con:value>accname_20140819_124649</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>82f5abdf-4f82-4c46-af76-c307c21de871</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>86f22f02-ef5f-4877-9840-fe535e736b7e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ed412dd1-394f-4b7a-bd89-6511dc1c5690</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00010_AccountUserCreate_with_country_AU_111_AccountUpdate_107_SUCCESS_P0" searchProperties="true" id="e846b49f-9e71-4865-b870-aa23c85ba1e4"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="1a24b247-25e0-4802-bcad-5a050d01740a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="44635a9d-cee8-48a0-8da0-adc4026ffd40"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AU");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="b37fa4bd-485d-4efb-abcf-fc26d65f92c7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="cb2e0c12-d6e3-40aa-bcc1-d3f09d37ca88"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="24b39c0f-623b-4cf9-a02b-432275f3bbbc"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Update" id="5bd7ecbb-8b0e-4c8f-8e63-eaa6b8e4d609"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Update_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def today= new Date().format( 'yyyyMMdd_hhmms' );

myTC.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTC.setPropertyValue("AccountDisplayName","accname_"+today);
myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("eTag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}



tC.setPropertyValue("ResponseTypeAccountUpdate","SUCCESS");
tC.setPropertyValue("AccountDisplayName","accname_"+today);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtb+I4EP6+vyLKflwFJwECRAWJ8nLlDtousC3tl8o4Q+JucNLYgZRff3ZoKFDaY09CQp6MZ5558TNzwfEytN0255AIGjFt0G3qT6Zt1h3Hwwauz7FRqdlzY+7Va4a1cGC+qDTmBLCuDThPYcC4wEw0ddu0KoZZN6zG1HLciuNWrZJtmo+6dgcJl6alSsnUtWwZMu7mbpt6mjA3wpxyl+ElcFcQd9IeDV2p6eICk9662KLMHSatQIjYRYiUPCAQhqREoiW6QAc6Fx53J9RnWKQJvPn0eFN/u7ter0vrcilKfCQxmshsIKnjcep/11vfisvgDdgi2p47mEWMEhzSDVagRiCCyNPaoR8lVATLT0xbyDKVaQMyYhCrwr7r6N1Bju5MSwcgE44NHmCrMDaGBSTACGi/xoOm/v28Cm7vThPM+CJKlvzo/GeQgK0gjGLwDF5EVqA73+KJdLUugLgDRsKU0xVcqzaJMQGu3SawoNmQctl8Htfy8msZlz9adBmQPynLBdrHKqGjE9npUh+4+D8126/X1sodDlNobcYdB6Hf/vBnnN5N+ms68tEsmv49vXpo5hD2lbegduV+Ox8366633i4tO2Fy+Zg44djc/IDrFzvOZp3VaP4jzOrh5nb9eB9Ua3havqr/FWfTzuwleF4/YBv9vJs92NP2xPe8Qdlcz8rXaPqtXOsEt+FDOXsYO30xNYeNq7rvj3pBYNuj2hXqRnFvOLq/Wf0K729+z3vVm4YZ8OrrhISzzd3ouTOc1b1otgZUf/wWlO+rvNq+HIzwL+I52T9j3nyPaT+GQ2FBCZN0/gxEFEfVHoOu1pf1wuJrelES6hmLXNWNFUdxAUzoLXVLUYubSgKiniuLuT2bZr9vOv1uxXF6Vrtq9cxq2aw2GlbfbPf6Zr/goC2KI4idiC2o8qVYdts/XwMkS5cD8yAxVlFKAuD6Fxa7WGBtwMbycUSMwzSSLG75AdvghAHfpBUeLzJ/4S/mpOrr2nUkbthN0l4ISA6pu3FA3WMgNKag+F01OJcdzoXMxQtepSK0SitcYpDKCZAoEnbtSr2KOF3GISikaBl5aQilOIjzzCC+/bcNTHguHfem+cP7NK7jb0UKpI5HlQJXsVyCLCOcmEGVIpBPA7bt/YAL8+3Uo+p9yXyKhJItksNP722i+mPXIzKip87kySpw79TPvv7xJvoCFDrOx86Rt6J7bothKueDZI9WUc0XXHoppatVmtevppgxkeaRJEgLTYCkkt5ep9FvYGhnAp01XXaojzzv5If4UhGwicAClrLbtPx4xmoxAa5Wi4F8Jtm5e8uBS5k3AZk4JeuEcgNRiL9cUohLlJ4U38q/dZR47+U6YWvPj4xT7hOCMl+d1Bx5/aQpSCTNUkl8UbJv/JSBU84Phbsk77AI2U3zVMDnXzTFaE0dExKlTAy6ei7YZ9kcp3iNwX1X+mAmZ/K30ZzxT0fzbDScSL5bYn2nS/9b2aB5uxDQ1QaQY2nqmdw0pXPm77H6G8ATxN4zzd5lzWnbObHXtsRevrRquwQeRNL6IP4o2cvp8Xto/Qs=</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF06FE00EC76A2E05307991F0A3B17</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF06FE00EB76A2E05307991F0A3B17</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF06FE00EB76A2E05307991F0A3B17</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF06FD466E1A51E05305991F0AEF0F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF06FD466E1A51E05305991F0AEF0F</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124650</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF06FD466F1A51E05305991F0AEF0F</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF064AEAA91A45E05305991F0A570D:98FBB76F"</con:value></con:property><con:property><con:name>ResponseTypeAccountUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>AccountDisplayName</con:name><con:value>accname_20140819_124652</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>82f5abdf-4f82-4c46-af76-c307c21de871</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>86f22f02-ef5f-4877-9840-fe535e736b7e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ed412dd1-394f-4b7a-bd89-6511dc1c5690</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00011_AccountUserCreate_with_country_CA_111_AccountUpdate_107_SUCCESS_P0" searchProperties="true" id="92609114-e0ec-4c82-8f47-0df8fcdfea49"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="76a6018a-e60e-43cc-ba60-90907feb099c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="1a6279ef-f9ff-416f-87da-c6c066147930"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CA");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="4f36446b-80bb-4fda-b2e1-5db858c8f3ac"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="81b06fdb-bb4a-4405-bac7-82088dfcd4a7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="d4f06a78-a408-4706-ab15-3c8a88855c82"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Update" id="4a18737d-2a3f-466f-9b46-f29019cce98d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Update_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def today= new Date().format( 'yyyyMMdd_hhmms' );

myTC.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTC.setPropertyValue("AccountDisplayName","accname_"+today);
myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("eTag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}



tC.setPropertyValue("ResponseTypeAccountUpdate","SUCCESS");
tC.setPropertyValue("AccountDisplayName","accname_"+today);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU+JKEH7fX5GKzyEXAiEpoQoRNGdFdonrUV+2hkkHRpNJzEwg+ut3JhgERA97qqiiptPT/fVlvu5ThpLY8vqMQc5JShX/vKv+jsJOaIJrac0mBs122m3NnZmGODqWBZaNI9dWFZ+xAnzKOKK8q1qGaWtGRzPdG7Pt2W2vZTestvOgKreQM2FaqDQMVSmTmDKvcttVi5x6KWKEeRQlwDyOvaA/vvKEpodqTGrvdI2ycpj3Fpxnnq7jRggY4hg3cJrop/qOzmnIvIDMKeJFDm8+Q9ZV3+6uVqvGqtlI87luGYahG64udEJG5idq71t9GUKfRun6PEA0pQSjmLwiCWoMfJGGSj+epznhi+QT06ZuGtK0BiXWsGnTE1V/d1ChO9LSDsicIY0tkFkbm0IEOVAMyq+p31VPjqvg+u5NjiiL0jxhe+e/gwR0CXGaQaixOrIa3fEWD6SrdwrY8ymOC0aWcC3bJEMYmPIjh4iUV4SJ5guZUpVfKZn4kbrLAP9NWU71bawCun4gO+dkDoz/n5pt12tt5RbFBfQ68a9xgqYj977/xB+dp0v3bh44Qx3OfnYrCNvKa1Cbcr+d95t101tvl67HWSuwdZJTNn65b7o8ebzotMuJM1rN0lGwivoXA9uPfob2Ippd5SmeZeVFp/PAvieG23y9uMC355fzSZDyrPhWTCeh2V88m8PHKLZfy7t/zVu0tDt+EhTLO8OefR/fT9ynAD2wPr+flct/CMry2+brysqfgv580rQyo+XiaXk5+QbxoNnR7+j1yGmX8xf/kvnd95i2Y9gV1pQQFLNHwLw+yvbwz5WRqBfiX9OLlJBQiypVL5McxThQrvbkLUktXiEIiISeKOb6bBijkdEeDcX/wGn3raHRahqO65ojo988M52ag9Yo9iAOUhoR6Uuy7Lp/vgaIE48BDSHXlmmBF8DULyyeI44Un07F40gpg5tUsLhtt8K8ZSfpMzGz1znisWXgDslU5TrlEzrJ+xGHfJe53R3mngImGQFJ77K/mWhwxkUqntGy4LHZWKIGhUIMgFxysGfZnZbOSJLFIIHqSRoWMTSyRVYlRmfrf0tDmFXS6fCmenefhrX/rc6A0AmJVGAyljMQVYQDI8iuA/k0YMvaDrg23y9CIp+XSCfPCV4j2f303iWyPTYtIiL6PQh+mzXujfrR1z/e1L8Ape/nY+MoXJItt/UsFeNBkEevruYzajw3iuWyqOrnSGLMhXld8KOpB4ALwW4vN+kTUH1jQj9quGxQ73neyHfxFXxBA444JKLblOp4xGYRAJObhS9eSXns2rLjUuSNQ8kPyQaxWEAk4i93FOxhqSfEP8TfKs3D93IdsLXlR8Qp1glO6Fye5Bh5+aQpcCrMEsF7ab5t/JCBQ853hZskb7Bw0U2zgsPnXxRJaF0VYZwWlPvnaiXYJtkKJ3/JwHtX+mCmIvK3yVyyTyfz3fgqEHSXIHWjS/5bWSNVu2BQ5QJQYemqpVg0hXM63yL1N4CHeH1kD4ZO2x1u87o1cjqbBO5E0vsg/ijZyun+e+j9AQ==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF06FEF4CF769EE05307991F0A2F78</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF06FEF4CE769EE05307991F0A2F78</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF06FEF4CE769EE05307991F0A2F78</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF06FE00FC76A2E05307991F0A3B17</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF06FE00FC76A2E05307991F0A3B17</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124653</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF06FE00FD76A2E05307991F0A3B17</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF06FE536B1A55E05305991F0AE3BD:5DE12B7D"</con:value></con:property><con:property><con:name>ResponseTypeAccountUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>AccountDisplayName</con:name><con:value>accname_20140819_124656</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>82f5abdf-4f82-4c46-af76-c307c21de871</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>86f22f02-ef5f-4877-9840-fe535e736b7e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ed412dd1-394f-4b7a-bd89-6511dc1c5690</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00012_AccountUserCreate_with_country_GB_111_AccountUpdate_107_SUCCESS_P0" searchProperties="true" id="68c396f9-5b91-4836-9882-c3a59c802daa"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="285e3028-060a-4d72-88db-ad56375e3a45"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="17530d00-1767-41ef-8ce3-e73fa1744d92"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","GB");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="5cf1c3b1-3c85-4d8a-8953-e06da7f6a128"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="503539f6-b139-45f8-b08b-dc50f3eabd21"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="70e2daef-8e17-41d6-b750-8a06d8dedd01"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Update" id="34f1667b-fd13-47ca-891d-fc30811ecfd3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Update_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def today= new Date().format( 'yyyyMMdd_hhmms' );

myTC.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTC.setPropertyValue("AccountDisplayName","accname_"+today);
myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("eTag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}



tC.setPropertyValue("ResponseTypeAccountUpdate","SUCCESS");
tC.setPropertyValue("AccountDisplayName","accname_"+today);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH1chCbdAVJBSCD2U0naBdrt9WbnOAC6Jk9pOoP31xw6EAqU97JGQkCfjmW8u/mbOOIrCsutxDkyQmGr9bkv/M4WGjeoNy6hUAtuoOoFlPCEsjwgHQVCxETh1XetznkKfcoGoaOlly64aVsOwmxO77lbrbs0p1cvNR127B8alaalSsnRtFYWUu7nblp4y6saIE+5SFAF3BXbH3vDKlZouKjDp7bM1ytwha8+FSFzTxKUAMIQhLuE4Ms/MPZ2zgLtjMqNIpAw2PgPe0jd3l8tlaVkpxWxmli3LMq2mKXUCTmbf9fa34jIEfTqN1+cOojElGIXkDSlQQxDzONC8cBYzIubRJ6Zt07aUaQNW2MB2lX7XzXcHOboTLe2BZBwZfI7swtgIpsCAYtDuRv2W/v20Cq7vThiifBqziB+c/w4S0AzCOIHA4EVkBbrTLR5JV/sMsNunOEw5yeBatUmCMHDtlsGUrK4Il80XcC0vv7bi8keKLgP8N2U5M3exSujmkex0yQy4+D81263X2so9ClNo3/Sng/NGJTt/sMIsTM3QQ1Xv8aIyu8StHMKu8hrUttyb82Gzbntrc2nyDL7zcHm7HPavH+qYMVF7a9YuskWvPp7/wi/+3cq3H5uj8M7xl4NOcJn5veqwOfs1EoO71Wh4cZ49hXF9Mni0l98qdzCMM/N1QU0yuO1i8WIHfnOSjZ7/Ic602rW7g7c5eV79XKBLJ/vp/bhoLCqT8Hra+D32MtG571z8GLL6XcO6977xN3qeZPasZjfmv4PqIBO/W+8x7cawLywoYZw+PQMWxVG1R7+r9WS9kPiaXpSEBMY0V3UTxVFcABV6W91S1OKmkoBI4Mpirs+W1etZ9Z7v1Jy6U/eqvlWrWE6zafcsz/O7fsFBaxQHEDsxnRLlS7Hsun++BogjlwMNgBlZnOI5cP0Li10kkNanI/k4YsphEksWf34mFrKcKEiSxI6ALeZMPC34dKZr17G4oTfMmwpg+9Td3KPuEWCSEFD8rhqcyw7nQubiBWWpCO1ShkoUUjkBmCJht1xt1ExOoiQEhdSM4iANoZTMkzwzJl//lw2EeS4d+ZP84X0a1+G3IgVSJyBKgatYzkGWEY7MoGoRyKcBl8u7ARfmvTQg6n3JfApG8BrJ/qf3NlH9se0RGdGfzviPXeDeqp98/eNN8wtQ5mE+to6CjOy4LYapnA+SPdpFNV9Q6aWUZlma189RzMikeVMSpG2OAaeS3l4n8QKouTVhnjRdtqgPPG/l+/hSMadjgQREstu0/HjCajEGrlaLvnwmq1P3lj2XMm8CVuKYrBPKDUQh/nJJwS5WelJ8K/+WMQvey3XE1o4fGafcJwShM3VSc+T1k6bAsTRLJPHFbNf4MQPHnO8Lt0neYhGym55SAZ9/0RSjtXSEcZxS0e/quWCXZXOc4jUB913pg5mcyTejecU/Hc0Pw6ux5LsI6Vtd8t/KBsnbBYOuNoAcS0tfyU1TOqezHVbfAPxA7I5l93zflsRu7RJ7pVl7f8x7kbQ/iD9KdnJ6+B7a/wI=</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF0701FEE276A0E05307991F0A3951</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF0701FEE176A0E05307991F0A3951</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF0701FEE176A0E05307991F0A3951</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF06FE757676A4E05307991F0AAEDE</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF06FE757676A4E05307991F0AAEDE</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124656</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF06FE757776A4E05307991F0AAEDE</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF06FEF4E2769EE05307991F0A2F78:EA325CB"</con:value></con:property><con:property><con:name>ResponseTypeAccountUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>AccountDisplayName</con:name><con:value>accname_20140819_124659</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>82f5abdf-4f82-4c46-af76-c307c21de871</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>86f22f02-ef5f-4877-9840-fe535e736b7e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ed412dd1-394f-4b7a-bd89-6511dc1c5690</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00013_AccountUserCreate_with_country_US_111_AccountUpdate_107_SUCCESS_P0" searchProperties="true" id="3ecfc831-f4f8-406d-a89e-46aa4070f8d8"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="90efc929-15cf-476e-bceb-b141333de4a2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="8ed6cde4-12b3-4026-a6ab-be7f8b981312"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","US");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="ae180ae5-88b7-433d-a3c1-9d4820b8f600"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="3bc68627-490e-4743-8a7e-1d5c6a38e2ac"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="826e24b3-976c-4811-b768-d78271468cb0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Update" id="549adbf0-c276-44e5-aaef-dc1a907be4c1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Update_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def today= new Date().format( 'yyyyMMdd_hhmms' );

myTC.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTC.setPropertyValue("AccountDisplayName","accname_"+today);
myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("eTag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}



tC.setPropertyValue("ResponseTypeAccountUpdate","SUCCESS");
tC.setPropertyValue("AccountDisplayName","accname_"+today);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I8EH3fXxGlj6uQOFwTFSR6gbLQdltod7cvlXEm4DbYEDsB+uvXDk0K9PKxn4SEPBnPnJk5PvaxwLPI9dtCQCwpZ0bvrGk+ulUvRA0ytqqeW7cqNbdseXUUWrVyDQKM3GotaJhGT4gEekxIzGTTdB1UsZyGhbwRqvmVuu+gEkL1B9O4h1io0Mql5JjGahYx4Wdpm2YSM59jQYXP8AyEL4k/bF8OfOXp4xyT2TreoMwSxq2plHPftkkpAAJRREqEz+xje8fnOBD+kE4YlkkMrzkD0TRf9y6Xy9KyXOLxxHYdx7Edz1Y+gaCTI7P1Ld8MQY+FfLM+xYwzSnBEX7AGdQlyygOjHU14TOV09kloZCNHh7ZgRSyCKuzItN8SZOgOjLQDMhbYElOM8mC3EEIMjIBxd9trmkeHTXCzdxRjJkIez8Te+t8gAUsh4nMILJFXlqM7POIH7WodA/F7jESJoClcaZrMMQFh/IwhpKsBFYp8gTCy8RsroX40ZxmQfxnLsb2NVUG3P+jOGZ2AkP9nZtvz2kS5x1ECrcZLOTnpD66v2Gjx7NiT3sO6/CBry6jMmxmEbecNqGLcr+t9shbcet30axD20h/9yqlHnWX1exC3xWhx4aSL+bRaIfXGdzsIG/fdMybTBkjUqd24dxfTh/okvVmcCDS4mYZ9p/twXV2LxbeHhLbLi1+80j7nYMcXPybd7u9G2A+9P+71ZW3KnNFT0B3+8gaju+rV6KR7ip7b7e7zE7/ByzE6cb6fz9OX6O6pfD3+9vuS9Gfi8iq+74/vg34Qp3+abzVt17BrzCVhmIyfgMh8qenROzM6al5Yfi0v2kIDK8xc/bnWKCGBSbOld2lp8RMlQDTw1TA3a8fpdJy6gzrnHbdeazvnTrXs1D0PdZx22auiXIM2KPYgnnIWUp1Lq+yGP18DJDNfAAsgtlKekCkI84uIZ1hio8du1eHgTMCIKxWfeILOyusnN+ALseDYgeipuh4j07ji8ppdx+1QQryr3N6Oct8CoXMKWt41v4UiuJCqFQucJjJCpRSXGCTqAoi1BvtupVG1Vc55BBqoPeNBEkFpPp1njbHF5t+1MBGZ9fZ8lJ27T8va/5Z3QPkEVDsIXcsJqCnCuyuo5lfzQj4t2HW3C87Dt5OA6uOl2iljSjZIdj+9sUTTo6CIqujxdPhYUKFwP3j7+532F6Ds/X4UiYKUbqXN71J1PSjxaOXTXODSopSkaZLNr66FMVbhbaWPyB4CSZS6rUf8GZhdhLAPulwK1HuZC/suvkRO2VBiCTPFNiNbHvCyGILQL4ueOiWrQ58tOylV3ySs5Ee200g9QDTiL98oxCfaT5l/qr8lj4O3cX0QayuPqlM9JyRlE73S18j6E1IQrsJSpXs83g7+UYCPku8aiyYXWKRi0ziR8PkXQwta08SE8ITJ3pmZGbZFNsMp13Pw35zehcmE/PVmXolPb+bfl4OhkrsZNgtf+t/OFs3oQsDUD4AMS9NcqYemSs4mW6L+CvCdrtc65w5ykdJ1d0fXT1C9aOBOJa135veWrZ7un4fWXw==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF06FE012276A2E05307991F0A3B17</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF06FE012176A2E05307991F0A3B17</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF06FE012176A2E05307991F0A3B17</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF0701FEF276A0E05307991F0A3951</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF0701FEF276A0E05307991F0A3951</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_12470</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF0701FEF376A0E05307991F0A3951</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF06FD46B01A51E05305991F0AEF0F:AD422552"</con:value></con:property><con:property><con:name>ResponseTypeAccountUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>AccountDisplayName</con:name><con:value>accname_20140819_12472</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>82f5abdf-4f82-4c46-af76-c307c21de871</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>86f22f02-ef5f-4877-9840-fe535e736b7e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ed412dd1-394f-4b7a-bd89-6511dc1c5690</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00014_AccountUserCreate_with_country_AT_107_AccountUpdate_111_SUCCESS_P0" searchProperties="true" id="5aa7267d-e663-4915-8006-c1e68aa395d0"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="0c142900-89dc-4e93-a998-90b8ed93b40c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="02fe25f4-6265-4555-ac12-3da14588cd23"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AT");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="520e0fa3-7bd3-4d96-8425-9ae16e4857b9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="a2d25d2a-3dc9-47eb-b6b6-d7f65b82bf72"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="27d6e261-0900-4748-a47d-844ecc26fdcd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Update" id="99fd275a-f38b-42bd-b880-578113071c85"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Update_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def today= new Date().format( 'yyyyMMdd_hhmms' );

myTC.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTC.setPropertyValue("AccountDisplayName","accname_"+today);
myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("eTag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}



tC.setPropertyValue("ResponseTypeAccountUpdate","SUCCESS");
tC.setPropertyValue("AccountDisplayName","accname_"+today);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0TpYxVyabhFBYly2dBNLwd63S+VcQZwSewQOwH69ccODQVKe9hHQkKejGfWzCwv+4KjMHC8BucQC8Ko1mvV9NcRKldK/sg2Ku6oaLg+do2RUwajZNkjDOA6bnWkaz3OE+hRLhAVNd2xbNewKoZdvbdLnlv2LLdQKhf/6NojxFyGli4FS9eWYUC5l6Wt6UlMPYY44R5FIXBPYG/YuO570tNDOSa9frFGmSWM61MhIs80ccEHDEGAC5iF5oW543Phc29IJhSJJIaPnD6v6R97F4tFYXFeYPHEdCzLMq2qKX18Tianev0k3wx+j47Zet1ElFGCUUDekQJ1DWLKfK0RTFhMxDT8JrRt2pYKbcASG9h26alufibI0B0ZaQdkzJHBp8jOgw1gDDFQDNrDoFfTT4+b4HrvfYwoH7M45Hvrv4MENIWAReAbPK8sR3d8xAPtql8A9noUBwknKdwomkQIA9fuYhiTZZ9wST6fa9n4tSWXP5KzDPDfjOXC3MYqoZsHutMiE+Di/8xse17rKI8oSKDemNgOWfX/OcN8dTu+c9hVFJO3l9LgV6WWQdh2XoPajPtjvU/WDbc+NtGZm8Rvv4tMhMPW03M6dLrd+N21aIWTwdVo9VxNZtHT1I27nenDwmTJ9WxeeubPjebdtENJn47eG4TdPPWH6duJf9Pu3Avrltw8igf7LMBuOBtWXhYUTwJhl1Y+CopVs/vrecFHbyVr0exe/Zk9zs+av8okReOz9Oyy/JCeV/yXx+aJ3+yjUqnsmI98GbW6L3fV69pnTds17BpzSRgmozfAIl8qevRaWkfOC4mf5UVZiG+MM1cvUhrFBVCh19UuJS1eIgWI+J4c5nptWZ12u+NYTqdjn1vWZdsqnlvlatXuWA2n2WzmGrRGsQexyeiYqFxKZdf8+RkgDj0O1IfYSFmCp8D1HyK2kEBajw7k4WCUwz2TKh6w5BzSZGyXF1F1vpj7E7FcBtNI126YuKW3cWMsIN5V7uqOcg8Ak4iAknfFby4JzoVsxRyliQjsQooKFBJ5AcRKgz3HrRRNTsIoAAXUDJmfBFCIplHWGJOv/x0DYZ5ZB+377Nx9W9b+t7wD0scnyoGrWi5BThG+XEElr5gX8m3BjrNdcB6+kfhEHS/ZThETvEay++mTJYoeG4rIil6bw1c7x71xP3r7153mD6DM/X5sEvkp2Uqb36XyepDiUc+nOUeFeSFJ0ySbX1kJYyzDm7Zplc0h4ESq2+qezYCamxDmUZfLBvVe5o19F18ipnQokIBQsk3Llke8LIbA1cuiJ0/J8thny05K2TcBS3HI1gzkA0Qh/vGNgj2s/KT5Tv4tWOx/jutArK08sk75nBCETtRKXSOrb0iBmQxLpO6xeDv4oQCHku8aN03eYBGSTaNEwPdfNCVoNR1hzBIqei09M2yLbIZTrCLwPp2+hMmE/ONmXvJvb+bn6/5Qyl2I9I0v+W9ng2R0waCrB0CGpaYv5UNTJqeTLVH/APhF19uNaqVcaUuyVbd1vWK1SpsG7lRS/2L+atnq6f55qP8L</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FEEEA9878F2019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FEEEA9878E2019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA9878E2019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEF202FF1300BE05307991F0A2CCC</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEF202FF1300BE05307991F0A2CCC</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_12473</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEF202FF2300BE05307991F0A2CCC</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FEEEA987A92019E05307991F0A80D6:781E0DBB"</con:value></con:property><con:property><con:name>ResponseTypeAccountUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>AccountDisplayName</con:name><con:value>accname_20140819_12476</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>82f5abdf-4f82-4c46-af76-c307c21de871</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00015_AccountUserCreate_with_country_DE_107_AccountUpdate_111_SUCCESS_P0" searchProperties="true" id="98d981fc-ae77-4026-b1b9-a442ce2f41b6"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="bcea956c-3b75-48d7-9cf3-4e277bb0381e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="e823624b-21ad-4dc8-913a-543806b60397"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","DE");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="1c6dca85-779f-48a7-b345-28e1a9dd79cd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="da0a1dd8-ae1f-45ad-a9f8-9663071c3642"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="e6605cd8-6251-4a90-8f3b-7f9860e48081"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Update" id="c5589943-4662-4dc0-b172-4791b710b85a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Update_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def today= new Date().format( 'yyyyMMdd_hhmms' );

myTC.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTC.setPropertyValue("AccountDisplayName","accname_"+today);
myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("eTag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}



tC.setPropertyValue("ResponseTypeAccountUpdate","SUCCESS");
tC.setPropertyValue("AccountDisplayName","accname_"+today);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH1chCRAgUUGiXJZs6WWB7ml5WbnOAG4Tm9oOYfn1xw4NBXo57JGQkCfjmW9mPn/2mUBJXA7aQgCXhFEj7DbN3z6UfRc8ZDnRA1hVFGELeQ3HqlRnlVrDjx6iyDWNUIgUQiokorJplh23ajkNy/Unbi2o1gOnXvIalalp/AIuVGjlUnJMY53EVAR52qaZchowJIgIKEpABBIH4/blMFCeASowma2zLco8IW8tpFwGto1LEWCIY1zCLLHP7AOfs0gEYzKnSKYcXnJGomm+7M2yrJRVSozP7bLjOLbj28onEmT+1Wx9KTZDFNIZ2647iDJKMIrJBmlQlyAXLDLa8ZxxIhfJB6Fd23V0aAvW2MJulX417dcEOboTIx2A5AJZYoHcItgIZsCBYjBuR2HT/HraBLd7JxxRMWM8EUfrv4MEdAUxW0JkiaKyAt3pEd9pV+sMcBBSHKeCrOBK02SJMAjjhsOMrIdEKPJFwsjHb6yF+pGCZYD/Zixn9j5WBd1+pztdMgch/8/M9ue1jfILxSm00D08/LwOV53RbLBaMe/y+ud6ktz4mzRs5hD2nbegduN+WR+Tdcetl01X90MJ9ceh9OsTbg/Q5DbabG4H4YB0/dUD6l4502mG13ebb3eD/vzbstc9F+th/E2KH53qxc/y4Nc0dJ+eLmR4nnwR3XLHXVzOH7PnAcYjL3Q2Dr69yb5Ps+n0PvmOKs6j32b++YJd1DbTTr3f+5G0p+NsOBXf59nFhtX6bN7/B/eW9S+OX7sddZ5I59IW1+O7+02Im6817ddwaCwkYZw+PAKWxVLTI+wafTUvJD+XF20hkTXLXYOl1ighgUqzpXdpaQlSJUAkCtQwt2vH6fd6fa/RqFSdcr/t9Ryv4ni+7/addrvmeIUGbVEcQewwOiM6l1bZLX8+B4iTQACNgFsrluIFCPOTiF0kkRHSkTocjAqYMKXiLs/qEj/WcA1YnSM/zZ4zvuZeahpXTF7Ta96eSeCH0u0fSPcIMFkS0PquCS4Uw4VUvXhGq1TGbmmFShRSdQNwLcJBudrwbEGSZQwaqZ2wKI2htFws887YYvtfthAWuXXUm+QH78O6jr8VLVA+EdEOQtdyDmqM8OYOqgVeUciHBZfL+wUX4dtpRPT5Uv2UnOAtksNPrzTR/NhxRFX0uzP+7Ra4d+4nb3+70/4ElH3cj12iaEX20haXqboflHq0imk+o9JzKV2t0nx+da2MXIW3Xdup22PAqZK3PxP2BNTehbBPul12qI8y7+yH+FK5oGOJJCSKbUa+POFpMQahnxahOibrU98tBylV3ySs5Xu2TqxeIBrxp48UHGDtp8w36i9jPHod1zux9vKoOtV7QhI61yt9j/z5gBSYqbBECR/j+8HfC/Be8kPjrsk7LFKx6SGV8PEXQyta00QYs5TKsGvmhn2VzXHKP0sIXp3ehMmV/OVqXosPr+a7y+FY6V2CzJ0v+W9ni+R0wWDqF0COpWmu1UtTJafzPVV/AfhG2Httv+b3K4ps9VzY61thr3n+K5cPKmm9Mb+17PX0+Dy0/gU=</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FEEEA969F42017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FEEEA969F32017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA969F32017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEF5883402FA5E05305991F0AA605</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEF5883402FA5E05305991F0AA605</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_12476</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEF5883412FA5E05305991F0AA605</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FEEF5883672FA5E05305991F0AA605:295120AA"</con:value></con:property><con:property><con:name>ResponseTypeAccountUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>AccountDisplayName</con:name><con:value>accname_20140819_12479</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>82f5abdf-4f82-4c46-af76-c307c21de871</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00016_AccountUserCreate_with_country_CH_107_AccountUpdate_111_SUCCESS_P0" searchProperties="true" id="ab690f82-0189-4d02-9a64-4721753b2e28"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="e34b6cd5-3086-49b7-97d2-cef3f861d142"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="4bf9c8c6-3a4f-4937-870d-40ee263c285d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CH");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="91abed94-0b9d-4a75-af99-51b022ff0c70"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="a0017eb2-30b4-499b-b82a-f7731700d68c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="5b59a675-e184-4e48-8e07-0f645adc0374"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Update" id="48675691-10ea-45e6-af5d-00d21b1fd4fa"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Update_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def today= new Date().format( 'yyyyMMdd_hhmms' );

myTC.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTC.setPropertyValue("AccountDisplayName","accname_"+today);
myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("eTag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}



tC.setPropertyValue("ResponseTypeAccountUpdate","SUCCESS");
tC.setPropertyValue("AccountDisplayName","accname_"+today);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4j3eMZb7xBGYIHwktSSkmSZOXjpDXWI0tG0kGwq+/sokdICSX3plMGK1Xu2d3j450IXAYlO2uEMAljZg26rf13zVSBahhYsxRo2lUG+W5MSeu+tcsV8H1Gh7BVV0bCZHAiAmJmWzrZWRVDdQ0rNbMqtvVhm2hUqVlPenaPXChQiuXEtK1TRgwYWdp23rCmR1hQYXNcAjClsR2ujdjW3naOMekdy52KLOEvONLGdumSUouEAgCUiJRaF6YBz4XrrAdumBYJhxec7qirb/uXa/XpXWlFPGFWUYImahlKh9X0MVXvfMl3wzuiHnRbt3DLGKU4IBucQrqBqQfuVo3WEScSj/8ILRlWigNbcCGGMSqsq+6+ZYgQ3dmpAOQXGBD+NjKg03BAw6MgHY3HbX1r+dNcLd3xjETXsRDcbT+O0jAVhBEMbiGyCvL0Z0f8US7OhdA7BEjQSLoCm5TmsSYgNAmHDy6GVOhyOcKLRu/thHqj+YsA/I3Y7kw97Eq6OaJ7vTpAoT8PzPbn9cuyj0OEuj0Hsprvu1PrCF8exxc/3SuCF2g523t+qadQdh33oEqxv26PiZrwa3XTbfjSTSV/Wp95iW9+8erYMj9F1Z3mG89XD7Iuj+9Xkzub4d9QM98u/mDUUiflpNe82f/6vt68JDIbdN5uqs21v72y8sTfmrE1KTxpfntdv7InP7P2pVbX45R1Fubs9ldMnwWaHA9+Md6+D7/1bsTJo6dWa31+DAafl/1Fvx+QmrhTU1sv3CRLPGTF48nEA7J1r0bd9tvNe3XcGjMJcFJ5n+AyHyZ0mPU14ZqXlh+Li+phbqGl7nacapRQgKTeifdlUqLnSgBoq6thrlbIzQcDAbdVr2LakruGgNUq6BGq2UNUbdea1m5Bu1QHEHsRcyjaa5UZXf8+RwgCW0BzAVurKKE+CD0TyL2scTaiE3V4YiYgFmkVPzPRnpWxa/ES+5W/DKuNHEZefhF124j+YP94F1PAj9U7taBck+B0JhCKu8pv4UiuJCqFUu8SmRglVa4xCBRFwBPNdguV5s1U9AwDiAFaoaRmwRQiv04a4wpdr9lAxORWaeDWXbuPizr+FveAeXj0tRBpLVcgpoinLiCUF7IhwWXy/sF5+G7iUvT46XaKTklOySHn95YktKjoIiq6HfP+V1QoXA/e/v7neYnoMzjfhSJ3BXdS5vfpep6UOLRyae5xKVlKVmtkmx+jVQYuQpvWiZqmA6QRKnbyyx6BmYWIcyzLpcC9VHmwn6IL5E+cySWECq2adnyjJeFAyJ9WYzUKdmc+2w5SKn6JmEjT9l6gXqApIg/faMQm6R+yjxRP+uIu2/jOhFrL4+qUz0nJGWLdJVeIy8fkIJEKixVuhfx/eCnApxKfmgsmlxgkYpN80TCx1+0VNDaOiYkSpgc9fXMsC+yGU75EoP95vQuTCbkrzfzRnx4M/+6GTtK7kKsF770v50NmtGFgJ4+ADIsbX2jHpoqOVvsiforwPe6Xu82L5utCkKtfV3v1irNooEHlXTemd9b9np6fB46/wI=</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FEEE6A8B8A3009E05307991F0AA538</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FEEE6A8B893009E05307991F0AA538</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEE6A8B893009E05307991F0AA538</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEEA96A052017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEEA96A052017E05307991F0A6591</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_12479</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEEA96A062017E05307991F0A6591</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FEEE6A23653013E05307991F0A3D55:3F564FBC"</con:value></con:property><con:property><con:name>ResponseTypeAccountUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>AccountDisplayName</con:name><con:value>accname_20140819_124712</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>82f5abdf-4f82-4c46-af76-c307c21de871</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00017_AccountUserCreate_with_country_FR_107_AccountUpdate_111_SUCCESS_P0" searchProperties="true" id="f278aaa7-c0f7-480a-a09a-329ac4272890"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="4deaeb60-906b-4a41-be36-8a6f4e430561"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="50736da6-8bd8-4a2e-b987-daad8e05131f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","FR");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="fcbf4cc8-09d8-41d6-989a-1f28635c67bb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="6ec77487-5e39-46ca-b4a3-6339ca5a24d2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="1b8fc97a-e890-4d3e-8e7a-b516580f799a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Update" id="2c64c453-389f-4242-bc73-1e42f09da1e1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Update_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def today= new Date().format( 'yyyyMMdd_hhmms' );

myTC.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTC.setPropertyValue("AccountDisplayName","accname_"+today);
myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("eTag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}



tC.setPropertyValue("ResponseTypeAccountUpdate","SUCCESS");
tC.setPropertyValue("AccountDisplayName","accname_"+today);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj1VwEu5RQaJcttkWWAG9bF9WxhmIu4kdYodLf/06oaFAaQ97JCTkyXjmm4u/mSuBw8B2WkJALClnmttp6L9rplmuEVIx6qRMjNKsahtTb+oZhNTK1Vq1Ys8A65orRAIuExIz2dBt0yoZZs2w6hOr4pSqjlUsFMv1Z117gFgo00qlYOraOgyYcDK3DT2JmcOxoMJhOAThSOKMW/07R2k6OMekN6+2KDOHcdOXMnIQIgUPCAQBKRAeoit0oHPlCWdM5wzLJIY3n55o6G93V6tVYVUs8HiObNM0kVlHSscTdH6hN7/ll8Fz2Yxvz23MOKMEB/QVp6D6IH3uaa1gzmMq/fAT0xayzNS0AWtiEKvELnT07iBDd6alA5CxwIbwsZUbG8EMYmAEtPuR29Avzqvg9u4kxkzMeByKo/O/QQK2hIBH4BkijyxHd77FE+lqXgFxXEaCRNAlDNI2iTABof2MYUbXd1So5vOElpVfWwv1o3mXAfmXslyhfawKOjqRnQ6dg5D/p2b79dpaecBBAs3AfR2Gln87ebaKs8ug7z+5kTt+EKXIbWQQ9pW3oHblfjsfN+uut94uPcJtqzr8dRNPOu0FnoJXXG2SX+PbSTy4uZkO7p/7+GU6tOMpekye/iy642lvPZpdPnzvl7yB1R/Nrl+nyP1+1/s+uPs2tLphxfNa/qU5bSf4adLvJ4uHm9te2AFc8zs/yPKyH02f0euyF8Az2kQ/wvmmUkOdyi874atH+mS+9Il47A/b3zi/F1C9C0b9W1GcCz5Y3jfeY9qP4VCYU8I4mb4AkfkxbQ+3o/VUvbD8ml5SCfWMWabqRClHCQlM6s30VkotTqIIiHqOKub2bJq9brdnm0XTahdN87prlotmtV63embLbrfbOQdtURxBbHM2o6mvlGW3/fM1QBI6ApgHsbHkCfFB6F9Y7GCJNZeN1OPgTMCEKxbf1F9e1n5UXiwqa8sni2oxCoov9h+uawMuh2wYt2YS4kPqrh9Q9wgIjSik/J42uFAdLqTKxQIvExlYhSUuMEjUBIhTEnbsUq2MBA2jAFKkKOReEkAh8qMsM0hs/20DE5FJR91J9vA+jev4W54CpePRVEGksVyDKiOcmEFmHsinAdv2fsC5+Vbi0fR9qXzKmJItksNP722S9seuR1REv9vj31aOe6d+9vWPN9EXoNBxPnaOvCXdc5sPUzUfFHs082oucGFRSJbLJKtfNWXGWJlHFjKraAwkUfS2mfA/wNDOBDpruuxQH3neyQ/xJdJnY4klhKrbtOx4xmoxBpGuFq56Jutz95YDlypvEtbylKwdqA0kRfzlkkIckuop8U/1t+Kx916uE7b2/Kg41T4hKZunp3SObD5pCsKVWaqIj8f7xk8ZOOX8ULhL8g6LVN00TSR8/kVLGa2hY0J4wqTb0TPBPstmOOUmAudd6YOZjMnfRvNafDqan/p3Y8V3IdZ3uvS/lQ2atQsBPd0AMiwNfa02TeWczfdY/Q3gB2Lvtiolq6zo3Tog9vJ1u7hL4EEkzQ/ij5K9nB6/h+Zf</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FEEEA64160201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FEEEA6415F201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA6415F201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEF20301C300BE05307991F0A2CCC</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEF20301C300BE05307991F0A2CCC</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124712</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEF20301D300BE05307991F0A2CCC</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FEEEA987E82019E05307991F0A80D6:A29905F6"</con:value></con:property><con:property><con:name>ResponseTypeAccountUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>AccountDisplayName</con:name><con:value>accname_20140819_124714</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>82f5abdf-4f82-4c46-af76-c307c21de871</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00018_AccountUserCreate_with_country_NZ_107_AccountUpdate_111_SUCCESS_P0" searchProperties="true" id="934062fb-a5a1-4604-aa89-fbbd66e31245"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="1d225465-ab80-43cb-99be-f851d2c8fde4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="c0ee0100-15f4-4c2c-9546-ea8b11e49482"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","NZ");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="8e1ced48-cbff-42c7-9586-1fb2fad670a2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="3aff3a02-e918-4a08-8f5c-8246373b6085"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="c3d99fdf-c870-4713-8d62-defaeaac983d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Update" id="951d0b4e-7333-4aa4-8861-52dfbcfed5b7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Update_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def today= new Date().format( 'yyyyMMdd_hhmms' );

myTC.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTC.setPropertyValue("AccountDisplayName","accname_"+today);
myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("eTag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}



tC.setPropertyValue("ResponseTypeAccountUpdate","SUCCESS");
tC.setPropertyValue("AccountDisplayName","accname_"+today);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH6uQjwKBqCBBoGq2tHSBbnv3ZeU6AxiCE2wHQn/9tUNDgdJe9kpIyJPxzJmZ42NfcbSIHK/FOTBBYqoFnYb+Z+xAaFUty3ABu0bZqoJRH1eR4TrlurSMXbBcXQs4TyGgXCAqGrpj2WXDqhl2fWRXvbLr2dVSuer+1rVfwLgMLV1Klq5li4hyL0/b0FNGvRhxwj2KFsA9gb1h667nSU8PFZj05tUWZZ6QNadCJJ5p4lIIGKIIl3C8MK/MA5+rkHtDMqFIpAzecoa8ob/tXa/XpfVlKWYT07Esy7TqpvQJOZl815vfis0QBnQcb9c+ojElGEXkFSlQdyCmcai1oknMiJguPgltm7alQhuQYQPbZfpdN98T5OjOjHQAknFk8Cmyi2ADGAMDikF7HAQN/ft5E9zuHTFE+ThmC360/jtIQFcQxQmEBi8qK9CdH/FEu5pXgL2A4ijlZAX3iiYJwsC1BwZjkvUIl+QLuZaPX8u4/JGCZYD/ZixX5j5WCd080Z0OmQAX/2dm+/PaRvmFohSadeq/pIPNZrl+mrs3gydAt8KcDxL/ttvIIew7b0Htxv22Pibrjltvm66fk98/8eiidVGL2fM/9cWAOxcbFtwkaMPa7a657rH6KzxHtV7nR3s5eHSfW+1HuOkny14Qm51s1sb+5cVDdYb8b/cv1u1dmc42vaf7H91WfX77YHZu+pXsGvWnm1ffcm4qv1/Tx7gXVHq/bnruPJtFL9Er9ZN2+vTcHU36j8uHH85Pv9//lq2Caa18MRwuB9mrHWYXrW7jvab9Gg6NhSQM05cZYFEsFT2CjnYt54XE1/KiLCQ0xrmrlyiN4gKo0Jtql5IWL5UCREJPDnO7tqzrbvfa9jtt37+0bLdrVS4tt163r62W3ek4hQZtURxB9GM6JiqXUtktf74GiBceBxoCM1ZxiqfA9S8idpBAWkAH8nDElMMolipu21ARbDMGzObWZTyDF6g4K5jPdO0+Fn3aZ62xAHYo3fUD6R4AJgkBpe+K4FwynAvZiyVapSKySytUopDKG4ApEfaccq1icrJIIlBIzUUcphGUkmmSd8bk23/HQJjn1kF3lB+8T+s6/la0QPqERDlwVUsb5BjhxB1kFYV8WrDj7BdchG+lIVHnS/ZTMIK3SA4/vdNE8WPHEVnRH3/4xy5w79zP3v5xp/kFKPO4H7tE4YrspS0uU3k/SPVoFtNcotKylK5WaT4/Vykjk+FN27Rccwg4lfK2GcVzoOYuhHnW7bJDfZR5Zz/El4opHQokYCHZpuXLM54WQ+DqaRHIY5Kd+245SCn7JiATp2x+JF8gCvGXjxTsYeUnzQ/ybx2z8H1cJ2Lt5ZF1yveEIHSiVuoe2XxCChzLsEQKX8z2g58KcCr5oXHX5B0WIdn0kgr4/IumFK2hI4zjlIqgo+eGfZXNcYpNAt6704cwuZK/Xc0Z//Rqfr7rDaXeLZC+8yX/7WyQnC4YdPUCyLE09Ey+NGVyOtlT9TeAH4S926qW7VpNkq29L+yVtn+5a+BBJc0P5o+WvZ4en4fmvw==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FEEEA64189201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FEEEA64188201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA64188201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEF1CDBCC3017E05307991F0A1DD2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEF1CDBCC3017E05307991F0A1DD2</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124715</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEF1CDBCD3017E05307991F0A1DD2</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FEEF5879263007E05307991F0AB1C2:F2AE18A5"</con:value></con:property><con:property><con:name>ResponseTypeAccountUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>AccountDisplayName</con:name><con:value>accname_20140819_124718</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>82f5abdf-4f82-4c46-af76-c307c21de871</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00019_AccountUserCreate_with_country_IE_107_AccountUpdate_111_SUCCESS_P0" searchProperties="true" id="123353aa-eafe-4e4b-b9ce-7aa5cd426b17"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="414f1c0a-8367-40b8-aa8c-4b854ed889a9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="3502e916-2c3a-4c5c-a693-8a5db62329d6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","IE");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="f8a48aa3-e601-42c4-a85d-d0eda847bb62"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="1fb2cd2b-994e-4959-8ccb-275b0d9974b7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="fc3762b4-f426-4b23-9f7a-56a04041f7c5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Update" id="b4317259-8b21-43b5-a70a-b91bedb75295"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Update_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def today= new Date().format( 'yyyyMMdd_hhmms' );

myTC.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTC.setPropertyValue("AccountDisplayName","accname_"+today);
myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("eTag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}



tC.setPropertyValue("ResponseTypeAccountUpdate","SUCCESS");
tC.setPropertyValue("AccountDisplayName","accname_"+today);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+o6EP7ur+jUj05pi0WgI8wgL8de8Q04HPWLE9IFom1ak7QUf/1NikVA9HLuDDNMtpvdZ3efPMk5R2FQdlucAxMkoprXaejPp6jqIzxxDH9SrxiO7YOBnErdKDvVM9s5tayaNdU1j/MEPMoFoqKhly3bMayaYddH9pnrVF27XqpU60+6NgbGZWjpUrJ0LQsDyt08bUNPGHUjxAl3KQqBuwK7w9Z135WeLiow6c3zFco8IWvOhYhd08QlHzAEAS7hKDTPzS2fc5+7QzKjSCQMPnL6vKF/7F0sFqXFaSliM7NsWZZp1U3p43MyO9abR8Vm8D06jVbrNqIRJRgF5B0pUNcg5pGvtYJZxIiYh9+Etk3bUqENyLCBbYce6+ZnghzdgZG2QDKODD5HdhFsAFNgQDFovwdeQz8+bIKrvSOGKJ9GLOQ767+DBDSFIIrBN3hRWYHu8Ih72tU8B+x6FAcJJyncKJrECAPX7hhMSdYnXJLP51o+fi3j8kcKlgH+m7Gcm5tYJXRzT3c6ZAZc/J+Zbc5rFWWMggSas35ZdK3LUe8li/v+JRF/Wnc3t7NW/Og0cgibzitQ63F/rHfJuubWx6bFDV8KxroPj+S+fcL/ycbhZXwD2L9Kw16cTB7vJv4JOHDC+jh6c66s6P3WeWOJ//jEnaD9ENCUsnk/Xv7C+KjlXN5fW5iRfqX8IOzotf0wvj6hy7eHX79x1j1N0SRaDK7vF+lJvPQW/LFnoiB7fx2F1cv+K3maPyXp4E/5qgeT7lH76s4bj03r9qlzNeLZ+PbCa3zWtFnDtrGQhGEyeQEsiqWih9fRenJeSPwsL8pCfGOau7qx0igugAq9qXYpaXETKUDEd+UwV2vL6nW73Va9Vu1VpdzVu1bl1KrW63bPatWszlmhQSsUOxDbEZ0SlUup7Io/PwPEocuB+sCMNErwHLj+Q8QOEkjz6EAejohyGEVSxe1ppZaF4azGXmok9Jf0tbJ8mVfLtq7dROKW3rLWVADblu76lnQPAJOYgNJ3RXAuGc6F7MUbShMR2KUUlSgk8gZgSoTdslOrmJyEcQAKqRlGfhJAKZ7HeWdMvvovGwjz3DrojvKD921du9+KFkgfnygHrmq5ADlG2HMHWUUh3xZcLm8WXIRvJT5R50v2UzCCV0i2P33SRPFjzRFZ0XN7+GwXuNfuB2//utP8AZS52491Ij8lG2mLy1TeD1I9msU031DprZSkaZLPr6qUkcnwpm1aVXMIOJHythxFr0DNdQjzoNtljXon89q+jS8RczoUSEAo2ablywOeFkPg6mnhyWOSHfpu2Uop+yYgE/ts7UC+QBTiHx8p2MXKT5rv5N8iYv7nuPbE2sgj65TvCUHoTK3UPbL8hhQ4kmGJFL6IbQbfF2Bf8m3juslrLEKyaZII+P6LphStoSOMo4QKr6Pnhk2VzXGKZQzup9OXMLmSf1zNGf/2an647g+l3oVIX/uS/3Y2SE4XDLp6AeRYGnomX5oyOZ1tqPoHwK/CftaqXdTbkiVbwt6qnNbWDdyqpPnF/NWy0dPd89D8Fw==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FEEE6A8B9D3009E05307991F0AA538</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FEEE6A8B9C3009E05307991F0AA538</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEE6A8B9C3009E05307991F0AA538</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEEA987F72019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEEA987F72019E05307991F0A80D6</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124718</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEEA987F82019E05307991F0A80D6</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FEEE6A8BA53009E05307991F0AA538:D6F45185"</con:value></con:property><con:property><con:name>ResponseTypeAccountUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>AccountDisplayName</con:name><con:value>accname_20140819_124721</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>82f5abdf-4f82-4c46-af76-c307c21de871</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00020_AccountUserCreate_with_country_AU_107_AccountUpdate_111_SUCCESS_P0" searchProperties="true" id="9039579b-24e1-48ac-b353-1d4d6074a68b"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="45af240b-b7e2-4831-b2d6-d84e1df7423b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="f06541d7-c190-4d8a-99e6-d8b5c7696cbb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AU");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="5bf7c4b6-9bb7-4969-9318-a391268eee98"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="57cce2ee-9ee0-4091-90a1-53a220711b34"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="4530e988-fe96-4b53-849f-8eeb27fbe57a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Update" id="1888ff59-e94e-458e-b4e1-6d3d5a521843"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Update_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def today= new Date().format( 'yyyyMMdd_hhmms' );

myTC.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTC.setPropertyValue("AccountDisplayName","accname_"+today);
myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("eTag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}



tC.setPropertyValue("ResponseTypeAccountUpdate","SUCCESS");
tC.setPropertyValue("AccountDisplayName","accname_"+today);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH1fBTrgEooLE9ZSqtF1gL92XlXEccDexQ+wklF9/7NBQoLSHPRIS8mQ8883M58++EigKHa8rBEkk5cwYD9rm72bVJg5cVC3bb9pWjaCm1QqarlWD/gLWFw6yF4FpjIVIyZgJiZhsmw60axZsWnZrbje8mus5TqXRgL9M4ztJhAqtXCrQNDZRyIRXpG2bacI8jgQVHkMREZ7E3qw7ufWUp4dKTGbnaoeySJh0VlLGHgC44hNMwhBXMI/AFTjyufKFN6NLhmSakJecvmibL3vzPK/k1QpPlsCBEALYAsrHF3T52ex8KjcTf8wCvlv3EeOMYhTSLdKgJkSuuG90wyVPqFxF74S2gQ11aItssIXtGvtsgtcEBboLIx2BTASyxArZZbApCUhCGCbGt+m4bX6+bIK7vfMEMRHwJBIn67+DRFhGQh4T3xJlZSW6yyOeaVfnimBvzHCYCpqRO02TGGEijIeEBHRzS4Uiny+MYvzGRqgfLVlG8N+M5QocYlXQwZnuDOiSCPl/ZnY4r12U7yhMSUf2+lyAwdf5ZpbWguXE/Xq7Yj+ft2iUtwsIh847UPtxv6xPybrn1sumEEyccTci2a8BdZ7Y4+N1FEse3lSfegHoztL1Pf/yNHt4ThtfEPvxuJnejO57ojbAtUk23X6p/9nWbvr5POtmk8dPMR1NAb6eBny7rn3FqwW8kauqPxd5lEcBjN1Wo1r9JqfX35Lh9WIKRq2tu36Aw/gOuMkd/Lnh7Cn/tej9yEL5Ka/3WsgJ6+PVd7exTf/BALZfazqs4dhYSsIsXTwRLMulpsd4YIzUvJD8WF60hfpWULh6sdYoIQmTZkfv0tLipUqAqO+pYe7WEI6Gw1G96baqsAqhO4T1KnRbLXsEuz2775QatENxArHPWUB1Lq2yO/58DBBHniDMJ4mV8RSviDA/iDhAEhljNlWHgzNB5lypeAydTfy0IraIuJ3nz64br6XIYGQad1zes/ukG0iSHEt360i6pwTTmBKt75rgQjFcSNWLNcpSGdqVDFUYSdUNkGgR9pxasw4EjeKQaKQg4n4akkq8iovOALH7dyyERWGdDufFwXu3rtNvZQuUj0+1g9C19IgaIzlzB9llIe8W7DiHBZfhu6lP9flS/ZQJxTskx59eaaL5seeIquh3f/bbLnHv3S/e/nYn+AAUOO3HPpGf0YO05WWq7gelHp1ymmtUWVfSLEuL+blaGRMVHtgAumBGcKrk7XnO/xAG9iHARbfLHvVJ5r39GF8qV2wmkSSRYptRLC94WsyI0E+LsTomm0vfLUcpVd8k2chztn6oXiAa8YePFOxh7afMD+ov54n/Oq4zsQ7yqDrVe0JSttQrfY88v0MKzFVYqoSPJ4fBzwU4l/zYuG/yHotUbFqkkrz/xdCK1jYRxjxlcjwwC8OhyhY45XNMvFenN2EKJX+5mjfi3av55+R2pvQuQubel/63s0ULumBi6hdAgaVtbtRLUyVnywNVfwH4RtiH3UbN7kFFtt6hsNd7/eq+gUeVdN6Y31oOenp6Hjr/Ag==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FEEEA641B1201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FEEEA641B0201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA641B0201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEF5879303007E05307991F0AB1C2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEF5879303007E05307991F0AB1C2</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124722</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEF5879313007E05307991F0AB1C2</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FEEEA96A902017E05307991F0A6591:9FD70AB3"</con:value></con:property><con:property><con:name>ResponseTypeAccountUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>AccountDisplayName</con:name><con:value>accname_20140819_124724</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>82f5abdf-4f82-4c46-af76-c307c21de871</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00021_AccountUserCreate_with_country_CA_107_AccountUpdate_111_SUCCESS_P0" searchProperties="true" id="3379baca-2a9d-4333-a0e1-590131cebf29"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="56578cdf-5a8a-485f-8c1e-06b8a348aee6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="85820140-873b-44f5-bde8-d10e947ef5fa"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CA");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="4a10a178-303a-4347-ac14-17e432d0442e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="d8e4e094-046b-43dd-b842-334524edac58"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="3e0181ea-c29d-4879-b0e6-d2e77fc9ff79"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Update" id="2901e421-9bff-4fa2-af8e-323e5f26c0ad"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Update_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def today= new Date().format( 'yyyyMMdd_hhmms' );

myTC.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTC.setPropertyValue("AccountDisplayName","accname_"+today);
myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("eTag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}



tC.setPropertyValue("ResponseTypeAccountUpdate","SUCCESS");
tC.setPropertyValue("AccountDisplayName","accname_"+today);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+o4EH4/vyJKH6vgBAKUCJC47uaU0nOAXrYvlXEGcJvYEDtA+fVrh4YCpV3OSkjIk/HMNxd/M1WBozDvNYSAWFLODL9dM58xnpArxw4sx8Ulyx1PShaGMrGI4xaggkmh4mDT8IVIwGdCYiZrZt52XMu+spzKyCl5btnLl3IFx30yjXuIhTKtVHK2aayjkAkvdVszk5h5HAsqPIYjEJ4k3rBx0/OUpoczTGa9ukWZOozrMynnHkIkFwCBMCQ5wiNURQc61UB4QzplWCYxvPsMRM18v7tarXKrQo7HU5S3bRvZFaR0AkGnF2b9R3YZAp9N+PbcwowzSnBIN1iDugE544HRCKc8pnIWfWHaQY6tTVuwTtPHLkz04SBFd6alA5CxwJaYYSczNoAJxMAIGHcDv2ZenFfB7d1RjJmY8DgSR+c/gwRsCSGfQ2CJLLIM3fkWT6SrXgXi+YyEiaBL6Os2mWMCwvgVw4Sue1So5guEkZbfWAv1o1mXAfmTslTRPlYFHZ3ITptOQcj/U7P9em2t3OMwgfqmM4tvRg9lMV9ek+Tq6WEyhtVjGL1G01oKYV95C2pX7vfzcbPueuv9Ugvo+KXvAvhdvil0nDCUf61x0UX3Gxi1Hq8ewpuN21r+3VnFyWZz2Vh1lpXLCJX65duf5VK/J+H26aknm2Elb//gl4GcB2+rfNhAMO38fCSO7/JrKL78s+ktwv7gdVESPdlfTJKgUek9wm9/SJuvXRyW1w+t+/bgrrfmdyhMrjuLH/f9xmC17s+D8Hb4u9saPxSntY+Y9mM4FGaUMEzGL0BkdtTt4beNrqoXlt/Ti5bQwJqkqt5cc5SQwKRZ17c0tXiJIiAaeKqY27NtdzudTqlccuxSQR/sYsEuVypO126Um04546AtiiOILc4mVPvSLLvtn+8BksgTwAKIrSVPyAyE+Y3FNpbY8NlAPQ7OBIy4YnGnJMlqKd9epxPuOupZKAZ7DaesqLi7z+Utu40bEwnxIXdXDrh7AITOKWiC1x0uVIsLqZKxwMtEhk5uiXMMEjUCYs3CXt69KiJBo3kIGiqKeJCEkJvP5mlqkNj+5y1MRCoddEbpy/sysONvWQ6UTkC1gtCxNEHVEU4MIScL5MuA8/n9gDPzjSSg+oGphMqYki2Sw08ffaIbZNckKqLn1vDZyXDv1M++/vkm+gYUOs7HzlGwpHtus2mqBoSij3pWzQXOLXLJcpmk9StraoyVeeQgu4yGQBLFb28j/goM7Uygs8bLDvWR5538EF8iZ2wosYRIdZuRHs/YLYYg9G7hq3eyPndxOXCp8iZhLU/JWqFaQTTib7cU4hGtp8S/1N+Kx8FHuU7Y2vOj4lQLhaRsqk96kLx90RSEK7NUMR+P942fMnDK+aFwl+QdFqm6aZxI+PqLoSmtZmJCeMKk3zZTwT7Npjjl2xy8D6VPZlIqf5/Na/HlbH686Q0V4UXY3OnS/1a2aNouBEy9AqRYauZarZrKOZvu0fo7wM/M3ii5TluNOKe5z+zFZquwS+BBJPVP4s+SvZwev4f6vw==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FEEEA641DA201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FEEEA641D9201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA641D9201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEE676106300FE05307991F0A7B17</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEE676106300FE05307991F0A7B17</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124725</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEE676107300FE05307991F0A7B17</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FEEE6A237F3013E05307991F0A3D55:1E43217A"</con:value></con:property><con:property><con:name>ResponseTypeAccountUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>AccountDisplayName</con:name><con:value>accname_20140819_124728</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>82f5abdf-4f82-4c46-af76-c307c21de871</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00022_AccountUserCreate_with_country_GB_107_AccountUpdate_111_SUCCESS_P0" searchProperties="true" id="374234e0-5e37-4b6b-832e-164146168348"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="ff5f1bca-5c98-4647-802d-b0a9540b0a37"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="e0dce651-3b5d-46db-99eb-ce1ac252e0c4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","GB");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="a86fcdbb-59f9-4fec-a6dc-0ff14a418fa5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="19c7e8b7-b098-4657-9556-a113055b8ab5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="a9e879f7-5bb1-4601-9c29-e8ce328c7ceb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Update" id="b1fcc2d3-d153-46a3-8c13-2a6cd637bbfa"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Update_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def today= new Date().format( 'yyyyMMdd_hhmms' );

myTC.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTC.setPropertyValue("AccountDisplayName","accname_"+today);
myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("eTag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}



tC.setPropertyValue("ResponseTypeAccountUpdate","SUCCESS");
tC.setPropertyValue("AccountDisplayName","accname_"+today);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3vr4iyj6sQJ3wmKkgsKWra0u3y0e7uS+U6Jnib2BA7CfTXrx2aFCjtZa+EhDwZz5yZOT72OYdxZLt9znEiCKOa73X1xyZAbdR6qhtojmyjAVqO4QDLMp4CWEcA2E+tpq1rPucp9ikXkIqubgOrYYCOYTlTq+U22q7t1Nqg81vX7nHCZWjpUgO6to4jyt0ibVdPE+oyyAl3KYwxdwVyJ/3RjSs9XVhi0nvnW5RFwqS3EGLpmiaqBRjhKEI1xGLz3NzzOQ+4OyEhhSJN8GvOgHf11715ntfyeo0loWkDAEzgmNIn4CT8ovfOys048OmcbdcDSBklCEbkBSpQIywWLND6UcgSIhbxB6Et0wIqtIHXyEBWg37RzbcEBboTI+2BTDg0+AJaZbAxnuMEU4S12djv6l9Om+B27zSBlM9ZEvOD9b9BwjTDEVviwOBlZSW60yMeaVfvHCPXpyhKOcnwraLJEiLMtbsEz8n6hnBJvoBrxfi1NZc/UrIMo38Zy7m5i1VCN490xyMh5uL/zGx3Xtso9zBKcY84619e/PKAkZeYD8nV5Z0t5s1Lhz/PugWEXectqGrcr+tDslbcet3kpWRz8fwtgo3m9O7SG8bj35vb+4xeta8bzupls/nazG+vrsfeIOzjwWzUHj1ls3H+1Z+/3FvO4NK7uqKrFD5sPJCeDfIHwa0BGuSp+SMPwcxOQkD9yf2EJqsFctgmH6HrGZuNnz2y/mb+IPiBiSmcvtywn+1Zxw/MXyCzr35sfoVnk4cxar0kHZrdPIPxTyg6oPtW024N+8ZSEibp0x+MRLlU9PA9bSjnBcXn8qIsJDDmhau7VBrFBaZC76ldSlrcVAoQCVw5zO0agOHFxUXfafWdoZS79gVo1kHbcawh6LeajlVq0BbFAcQBo3OicimV3fLnc4AodjmmAU6MjKVogbn+SUQPCqj5dCwPB6McT5lUcau+ycP6xmGLP6vQsp/jaLkKO1lu57p2y8R3+j3pzwVO9rXb2dPuMUZkSbASeMVwLinOhWzGCmapiKxaBmsUp/IKSJQKu3aj0zQ5iZcRVlDNmAVphGvLxbJojcm3/7YBES+s44tpcfI+LOzwW9kD6RMQ5cBVLd+wnCM+cglZZSEfFmzbuwWX4ftpQNQBkw0VCUFbJPuf3niiCFKRRFb0OJg8VmSo3E/e/n6n+Qko87AfVaIgIztpy9tUXhBSPnrlNFewtqqlWZYW82sraUxkeNMyQducYJRKfdtM2TOmZhXCPOl6qVAfZK7s+/hSsaATAQWOJdu0YnnC22KCuXpb+PKcrE99uOyllH0TeC2O2QaRfIIoxJ++UpCLlJ8038m/nCXB27iOxNrJI+uUDwpBaKhW6iLZfEAKxGRYIpWPJbvBjwU4lnzfWDW5wiIkm55SgT/+oilJ6+oQIZZS4Xt6YdiV2QKn2Cyx++b0Lkwh5a9385p/eDf/HN1MpODFUK98yX87G6SgC8K6egIUWLr6Wj41ZXIa7sj6K8D3yt7qD4edTh0Ab1fZLafVrBq4V0nvnfm9Zaenh+eh9xc=</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FEEE6AFF89300DE05307991F0A1965</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FEEE6AFF88300DE05307991F0A1965</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEE6AFF88300DE05307991F0A1965</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEEA96A9F2017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEEA96A9F2017E05307991F0A6591</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124728</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEEA96AA02017E05307991F0A6591</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FEEF2143FA3015E05307991F0A40F4:303DF30A"</con:value></con:property><con:property><con:name>ResponseTypeAccountUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>AccountDisplayName</con:name><con:value>accname_20140819_124731</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>82f5abdf-4f82-4c46-af76-c307c21de871</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00023_AccountUserCreate_with_country_US_107_AccountUpdate_111_SUCCESS_P0" searchProperties="true" id="63668337-0e2c-4b36-8ec1-2818ef22106a"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="47323e2c-8c9a-4fcb-97ab-c0637eb91db7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="b12431c7-4519-4086-a991-15c91ae2c747"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","US");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="8dd40c61-26d3-4211-b703-a7fb2058fca0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="b4116a06-526e-48c8-b65c-1798c843d28e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="83b6df63-a69c-40ee-ace1-1b23a9056c8d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Update" id="87ddfdce-a53f-4098-acd7-105d9413e65f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Update_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def today= new Date().format( 'yyyyMMdd_hhmms' );

myTC.setPropertyValue("Country",tS.getPropertyValue("Country"));
myTC.setPropertyValue("AccountDisplayName","accname_"+today);
myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("eTag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}



tC.setPropertyValue("ResponseTypeAccountUpdate","SUCCESS");
tC.setPropertyValue("AccountDisplayName","accname_"+today);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4jxlj2cYBewIz5iO9bglNQ75uXjpCFqDUlkCSDfTXVzIxAUJy6Z1hhtF6tXt29+hIFwJmqRtGQmAuCaNG3GuZP13Pc5qTc2gFYxdZ9SZIrGaQuBZouA0Pjpt+E09MIxYixzEVElLZMl3g1C3QtJzg1jkP643Q82qNuv9kGveYCxVaudSAaayylIqwTNsyc05DBgURIYUZFqFE4Si6GoTKM4QVJrN9sUFZJuTtmZTz0LZRLcEIpymqIZbZF/aez0UiwhGZUihzjl9yJqJlvuxdLpe1pVdjfGq7AAAbBLbySQSZfjbbn6rNOInphG3WXUgZJQim5DfUoK6wnLHEiNIp40TOsndCO7YDdGgLr5CFnDr9bNqvCUp0J0baA8kFtMQMOlWwGzzBHFOEjbubuGV+Pm2Cm723HFIxYTwTB+u/g4RpgVM2x4klqsoqdKdHPNKu9gVGYUxRmgtS4KGmyRwiLIxrjidkNSBCkS8RRjl+YyXUj1Qsw+hvxnJh72JV0O0j3emRKRby/8xsd16bKPcwzXH7YUm+jdcJz7xOdFnA4m4oO9369yYbR60Swq7zBtR23C/rQ7JuufWyqZ/PB+7ghx+Rh8nVv2dk6HRT0HR/d1cJ99cQjkc+TvzB72QYDR9EgzGyGvpPV8u4v/jn8tq7yx6n/v2X+tez5971pz4IAHiMGy4fPq6gWKxhszufFSQPICl8sLh76PjPucuzwvVm/fqiMfhxPacSoTO7M7pzv2XTW/p1YZPA/bX4xHpfQOxF3+DorP+UPd+lD/3Wa027NewbK0kY5eNnjGS11PSIe8almheUH8uLtpDEmpSu4VxrlJCYSrOtd2lpCXMlQCQJ1TA3awAu+/3+edTsdD0PgKAPfA80gsC5BFHke81KgzYoDiB2GZ0QnUur7IY/HwNEWSgwTTC3CpajGRbmBxF7UEIjpjfqcDAq8C1TKu6A5eJ8xQuEYCCd+nrN2Hk94PxZnY8hk9/pdx5NJOb72h3safcNRmROsBZ4zXChKC6kasYCFrlMnVoBaxTn6grgWoVDt970bUGyeYo1VDtjSZ7i2nw2L1tji82/a0EkSutN/7Y8ee8Wdvit6oHySYh2ELqWDlZzxEcuIbcq5N2CXXe34Cp8lCdEHzDVUMkJ2iDZ//TKE02QLUlURT+7o59OhXvrfvL2tzvtD0DZh/3YJkoKspO2uk3VBaHko11NcwFri1peFHk5v4aWRq7C244NGvYIo1zp2/qW/cLU3oawT7petqgPMm/t+/hyOaMjCSXOFNuMcnnC22KEhX5bxOqcrE59uOylVH2TeCWP2bqpeoJoxB++UlCItJ8yX6u/JePJ67iOxNrJo+pUDwpJ6FSv9EWyfocUiKmwRCkf47vBjwU4lnzfuG3yFotUbBrnEr//xdCS1jIhQiynMu6ZpWFXZkuccj3H4avTmzCllL/czSvx7t38eDUYKcHLoLn1Jf/tbJGSLgib+glQYmmZK/XUVMnpdEfWXwC+VfbovK6Ypn6dXWX3ldpvG7hXSfuN+a1lp6eH56H9Bw==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FEEEA64202201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FEEEA64201201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA64201201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEE6A8BC33009E05307991F0AA538</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEE6A8BC33009E05307991F0AA538</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124733</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEE6A8BC43009E05307991F0AA538</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FEEEA988822019E05307991F0A80D6:B0832667"</con:value></con:property><con:property><con:name>ResponseTypeAccountUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>AccountDisplayName</con:name><con:value>accname_20140819_124735</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>82f5abdf-4f82-4c46-af76-c307c21de871</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>role</con:name><con:value>nodeIdRTL</con:value></con:property><con:property><con:name>Country</con:name><con:value>BE</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:RET_CS_1</con:value></con:property></con:properties><con:tearDownScript>if(context.expand( '${#Project#runTeardown}' )=='true')
	{
	log.info("Executing TearDown for Suite '" + testSuite.getName() + "'");
	
	for ( testCaseResult in runner.results )
	{
	   currentTestCaseName = testCaseResult.getTestCase().name;  
	   currentTestCase = testCaseResult.getTestCase(); 
	   log.info("Current TestCase : '"+ currentTestCaseName + "'");
	   log.info("Current TestCase Status : '" + testCaseResult.getStatus().toString() + "'");
	   
	   if ( testCaseResult.getStatus().toString() == 'FAILED' )
	   {
	      log.info("Re-executing failed TC");
	      def currentRunnerTC = currentTestCase.run(null, false);
	      log.info("Status on re-execution : '" + currentRunnerTC.status + "'");
	   }
	}
	log.info("Execution of TearDown for Suite '" + testSuite.getName() + "' Completed" );
}</con:tearDownScript><con:reportParameters/></con:testSuite><con:testSuite name="07.AccountDelete_Backward_Compatability" id="5c9a7224-0d8d-44e7-a126-fe5ab78e3f68"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00001_AccountUserCreate_with_country_BE_111_AccountDelete_107_200_OK_P0" searchProperties="true" id="5d8895bd-c2de-445e-936a-a2ed5a99e231"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="109400c8-03a1-471a-ae1e-44135b3c2ba3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="f4ead14f-15ff-4f49-8a32-8caecdbf03ee"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","BE");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="985bc603-db01-476f-973f-2a136d4fc8a1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="4a736a6d-4638-4012-8ae8-6005dfcef83a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="5025cbea-082f-4c2d-961e-cff905f7b3c2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="ae0188dc-84c2-455e-96bf-b7c89e752e81"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbT+M6EH7nV0ThEaXOpdeIVuqFQhCwu21hWV5WrjNJvCR2iZ1e+PXrpKS0pXC6R0JUnoxnvrn4mzkXOIlttysEpJJypnmDtv47CHxSrzmW4QStwKg6Nd9o1Rz1b4qxBbUAQ43omidEBh4TEjPZ1m3Tqhpm07BaE6vuVhuu06g4rdqTrj1AKpRppVIxdW2ZxEy4hdu2nqXM5VhQ4TKcgHAlccfd2xtXabq4xKR3ztcoC4dpJ5Jy5iJEKj4QiGNSITxB52hH59wX7piGDMsshTefvmjrb3cXi0Vl4VR4GiLbNE1ktpDS8QUNT/XOSXkZfI8FfH3uY8YZJTimrzgHdQsy4r7WjUOeUhkln5i2kGXmpg1YEoNYVXaqo3cHBbojLe2ATAU2RISt0tgIAkiBEdDuR15bPz2uguu7kxQzEfA0EXvnf4MEbA4xn4FviDKyEt3xFg+kq3MOxPUYiTNB53CXt8kMExDa9xQCuryhQjWfL7Si/NpSqD9adhmQfynLOdrGqqCjA9kZ0BCE/D81267X2soDjjPo9KdRA4OwJ95ZFC7MJEhf7y+zm7vmTdguIGwrr0Ftyv123m/WTW+9XRJ1c3B7n2RVU0jmX3N77jWrAXvoNrz+Ff/lhOOH2ZKuyNXl9aq//BZGzwjJIbJ/oh764cT26hezB6vRMpp1z06ys5+rKJ1+H06SZnB3OfiRmKnZWFyg0fXjbIgddslf71/HU7N+9Vy9euJXT4/+Nbygh4uzq+mEkeD5zAbILv8so9VJrzcXT39C+w7F88cY2d0z3n6PaTuGXWFJCeNs+geILI95e3gDbajqheXX9JJLqG8Ehao7yzlKSGBS7+S3cmpxM0VA1HdVMddn0xwOzfrwwrQcp1Hv2hdmzTEbrZY1NLtOz2qUHLRGsQexz1lAc185y67752uAJHEFMB9SY84zEoHQv7A4wBJrHhupx8GZgAlXLP4ctdQjaL5WgVp1KdizrIWtjAS6dsflN/Yt7QYS0l3mbu0w9wgInVHI6T3vb6EaXEiVihc8z2RsVea4wiBTAyDNOdi1q80aEjSZxZADRQn3sxgqs2hWJAaJ9a9tYCIK6ehiUry7T8Pa/1ZmQOn4NFcQeSw9UFWEAyPILgP5NGDb3g64NN/NfJo/L5VOmVKyRrL76b1L8vbYtIiK6Hd//NsqcW/Uj77+8Sb6AhTaz8fGkT+nW27LWarGgyKPTlnNF1x5qWTzeVbUr5ETY6rMI8WPFhoDyRS7rSb8GRjamEBHDZcN6j3PG/kuvkxGbCyxhER1m1Ycj9gsxiDyzcJTr2R57Nqy41LlTcJSHpL1Y7WA5Ii/3FGIS3I9Jf6ufhY89d/LdcDWlh8Vp1onJGVhfsrHyOqTpiBcmaWK93i6bfyQgUPOd4WbJG+wSNVN00zC51+0nNDaOiaEZ0x6A70QbJNsgVOuZuC+K30wUxD522Reik8n8+PtzVjRXYL1jS79b2WDFu1CQM8XgAJLW1+qRVM5Z+EWqb8B/MDrDcus9y7qVrc6KHi9tub1Zt/ubRK4E0nng/ijZCun+++h8xc=</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF07106BE71A4DE05305991F0A8C2B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF07106BE61A4DE05305991F0A8C2B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF07106BE61A4DE05305991F0A8C2B</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF06FE013376A2E05307991F0A3B17</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF06FE013376A2E05307991F0A3B17</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124736</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF06FE013476A2E05307991F0A3B17</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF06FE75C176A4E05307991F0AAEDE:75529DA4"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>87339ef0-463c-42c0-b9e0-38df8132987c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e41d2809-8fcc-4034-a3ce-b9638760f31c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00002_AccountUserCreate_with_country_LU_111_AccountDelete_107_200_OK_P0" searchProperties="true" id="3daac5e3-bdaa-4829-97c5-a84fed34acc7"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="98594155-0da2-474f-b2f1-ebf4f45ccebd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="5db6e6d0-b102-4ea7-8de1-7a4eccb753d0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","LU");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="51d799d9-1374-44cf-adf2-4b4d5398b2cf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="98709d9f-0563-4629-946e-d35dc33a985f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="b198106d-5f88-4116-84de-c20c003f4164"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="aaaceb73-895b-4906-8765-053357d688ed"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+o4EH7vr4jSx1VIDIGGqCBx7aalpQv0tKcvlXEc4jaxaeyEy69fOzQUKO1yVkJCnoxnvrn4m7nkMI7KbotznAjCqOZ1G/pL2a4FPryoGj6yLgwbAstwytPAqPqV6XQKaiDwLV3zOE+xR7mAVDT0sgVsw3IMUJ+AmmtfuLZVqjvgWdd+4YRL01KlJG8t44hyN3fb0NOEugxywl0KY8xdgdxx63bgSk0XFpj05uUGZe4waYZCzF3TRCUfIxxFqIRYbF6aezqXPnfHZEahSBP84dPnDf3j7mKxKC0qJZbMzLJlWaZVN6WOz8nsXG+eFZex79GAbc4dSBklCEZkDRWoWyxC5mutaMYSIsL4G9PABJYybeAlMhCw6blufjrI0Z1oaQ9kwqHBQwgKYyMc4ARThLWHkdfQz0+r4ObuJIGUByyJ+cH5zyBhmuGIzbFv8CKyAt3pFo+kq3mJketRFKWcZPhOtckcIsy1+wQHZDkgXDafz7W8/NqSyx8pugyjPynLpbmLVUI3j2SnS2aYi/9Ts916baz8glGKm2/O6OrvKXis3bD6sJ32a6tZ5ozuffHeauQQdpU3oLbl/jgfNuu2tz4uBddrPr5OqiRkg1GHOe8es1bDp97qOWgPwXJxBZPryuDxyallv8NFeHdNrhzwdP0sHm+m1wPzBgytWUre0n52Y5957URUHtatec+y/XV1tVzx33fhMPrHnsSjzI7F2J4+LbvdYd9sV/4ii9fXKxnW6/h2wO/jh2GbVR4tNqwGLLygZxdDLyNrnE7mQPidjrd+eGt8xrQbw76woIRxOn3FSBRH1R5eV+vLekHxM70oCfGNIFd154qjuMBU6E11S1GLm0oCIr4ri7k5W1a/b9XstlN1uqBl13tWtWJV63XQt1oVAHoFB21QHEDsMBoQ5Uux7KZ/fgaIYpdj6uPEyFiKQsz1Hyx2oYCaR0fycTDK8YRJFq+9OhVc88O38A2AecAsJ+TlNQ4yXbtjYkiHSSsQONmn7voedY8wInOCFb+rBueyw7mQuXiHWSoiUMpgieJUToBEkbBbtp2qyUk8j7BCasbMTyNcmofzPDMm3/yXDYh4Lh31JvnD+zauw29FCqSOT5QCV7G0sSwjPjKDKkUg3wZcLu8GXJhvpT5R70vmUyQEbZDsf/psE9Uf2x6REb10xi+gwL1VP/n615vmD6DMw3xsHfkZ2XFbDFM5HyR7NItqvsPSeynNsjSv34VixkSaNyVBAnOMUSrpbTVhb5iaWxPmSdNli/rA81a+jy8VIR0LKHAsu03LjyesFmPM1WrhyWeyPHVv2XMp8ybwUhyTdSK5gSjEPy4pyEVKT4rv5d+CJf5nuY7Y2vEj45T7hCB0pk5qjqy+aQrEpFkiiY8lu8aPGTjmfF+4TfIWi5DdNE0F/v6LphitoUOEWEqF19VzwS7L5jjFao7dT6UvZnIm/xjNS/7taH66HYwl38VQ3+qS/1Y2SN4uCOtqA8ixNPSl3DSlczrbYfUPgF+Jvd+rVhSxV6u7xN6rtLvbBO5F0vwi/irZyenhe2j+Cw==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF06FE538E1A55E05305991F0AE3BD</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF06FE538D1A55E05305991F0AE3BD</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF06FE538D1A55E05305991F0AE3BD</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF064B858D1A49E05305991F0A311E</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF064B858D1A49E05305991F0A311E</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124740</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF064B858E1A49E05305991F0A311E</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF07106BFA1A4DE05305991F0A8C2B:F4533735"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>87339ef0-463c-42c0-b9e0-38df8132987c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e41d2809-8fcc-4034-a3ce-b9638760f31c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00003_AccountUserCreate_with_country_NL_111_AccountDelete_107_200_OK_P0" searchProperties="true" id="3fe2b850-7893-4f36-ae82-5f99595fd808"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="501d121b-091f-4654-8b25-9c505dbb016a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="eb948d77-66bf-420c-aa3d-e2a803a627f0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","NL");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="80ea4b5d-1a8b-4768-aa83-0a189f496ef0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="cceb1278-d609-41c2-806d-71a06a7afeff"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="d0c4040e-f05b-4b3d-87fc-ab7b9a9e53f9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="cda891a6-77c4-4f85-9d72-dd9c7362f694"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4jx3jOxdPYIYCPnVKSIJpbi8dIS+g1pbBksHprz+SiQkQkkPPDDOM1qvdby/6di8YSmLL6zIGGScpVYJ+W/1pziLTxXVLQ81GS3Om1lRDNp5p0wYGx3AdF+GWqgSM5RBQxhHlbdUyTEczmprZmph1z2l4jlMTsidVuYOMCdNCpWaoSpHElHml27aaZ9RLESPMoygB5nHshd2roSc0PVRhUjsXW5Slw6yz4Hzp6TquRYAhjnENp4l+oR/oXETMC8mcIp5n8OIzYm315e5ms6lt7FqazXXLMAzdaOlCJ2Jk/lntfKouQxTQWbo99xBNKcEoJn+QBHUFfJFGSjeepxnhi+Qd06ZuGtK0BgXWsOnQz6r+6qBEd6alA5AZQxpbILMyNoYZZEAxKD/GQVv9fF4Ft3cnGaJslmYJOzr/HSSga4jTJUQaqyKr0J1v8US6OheAvYDiOGdkDSPZJkuEgSk3GcxIMSRMNF/ElLL8SsHEj1RdBvhvynKh72MV0PUT2emTOTD+f2q2X6+tlTsU59AZjr8sbnvxUJ98H9wYQ5v6q4jfPafJxGmXEPaVt6B25X45HzfrrrdeLs3Q99v8eRia8Miu64PrcV4Mn2hALHQ7CjaLb5kxe3CTsWkvHPvRt5q96FsWFjdDez64hBHz767030V+H06g+fVT8CtoNP3mLc+7o/Xg/nHav7sdLqfXl1+SdBTFPb//9LAqvs5GNr11Bjm754/10DIgv1zVi96kaAb39WVzs/q9rtuffoT2H8svev9cXdott7VaN67arzHtx3AorCghzKe/APPqKNsj6Cu+qBfiH9OLlJBIm5Wq3lJyFONAudqRtyS1eLkgIBJ5opjbs2H4vlH3+06955pd1xwYrm24rZbpG92Bb/gVB21RHEHspXRGpC/Jstv++RggTjwGNIJMW6c5XgBTP7DYRxwpAR2Lx5FSBpNUsrjD42fHnv/6Y8Q5NVtuTue8MBYbVRml/JpeZ90Zh+yQulsH1D0GTJYEJL/LBmeiwxkXuVihdc5js7ZGNQq5mACZJGHPcpquzkiyjEEi1ZM0ymOoLRfLMjM62/4LVsKslI4Hk/LhvRvX8bcqBUInIlKByVi+gigjnJhBdhXIuwFb1n7AlfluHhH5vkQ+eUbwFsnhp9c2kf2x6xER0c9e+NOscO/Uz77+9qb+ASj9OB87R9Ga7LmthqmYD4I9OlU1V6i2quXrdV7WryGZMRPmdUGQph4CzgW9PU/S30D1nQn9rOmyQ33keSc/xJfzBQ054pCIblPK4xmrRQhMrhaBeCbFuXvLgUuRNw4FPyXrxWIDkYg/XFKwh6WeEN+Iv02aRa/lOmFrz4+IU+wTnNC5PMk58vxOU+BUmCWC+NJs3/gpA6ecHwp3Sd5h4aKbpjmH978oktHaKsI4zSkP+mop2GfZEid/XoL3qvTGTMnkL6O5YO+O5oerYSj4LkHqTpf8t7JGynbBoMoNoMTSVguxaQrndL7H6i8ATxD7wHctt1FvDUpib2yJ3fIbzV0CDyLpvBG/lezl9Pg9dP4F</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF06FEF526769EE05307991F0A2F78</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF06FEF525769EE05307991F0A2F78</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF06FEF525769EE05307991F0A2F78</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF06FD46C51A51E05305991F0AEF0F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF06FD46C51A51E05305991F0AEF0F</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124743</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF06FD46C61A51E05305991F0AEF0F</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF06FE015B76A2E05307991F0A3B17:8BCC041F"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>87339ef0-463c-42c0-b9e0-38df8132987c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e41d2809-8fcc-4034-a3ce-b9638760f31c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00004_AccountUserCreate_with_country_AT_111_AccountDelete_107_SUCCESS_P0" searchProperties="true" id="dddb2795-8d1d-4da1-ba8a-b0a467f73545"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="c0486915-9f94-47f0-a920-0ba3249d0b2e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="3db43085-2e17-4704-ab9b-bbac25d65f57"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AT");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="c80d1d94-ad9b-45b5-a1f6-4b29cb337efc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="f3374058-f8d1-4a92-a0ed-48dd3f466630"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="36f6c44e-1ec1-48fc-b96c-b0c716b7648a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="563124cc-cc5c-42d7-9bb7-2dc6a5b768fb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb/I4EP0rKH2sQuJACEQFiULpl94LbLftS2UcB0wTG2wHQn/92gFSoJdl9wU0k/HMmYuP50zAJHb8thCYS8JoKUtiKvxc2zRSTn0GBRE+hQkWvkT+oH174ztl24fbI0Yp6DaNt0YNVGqjBjSjsALMahi5ZgM3RiasediLRiB0HUeZCpHigAoJqWwajg2qJgAmqA+B7duODxrlmu28GqUnzIXyrUzKtrEBlYmmMZFy5lvWcrksLytlxseWY9vAer69GaAJTqDROltnlAfirY09KocY4ThGZcQS68zaszkLhT8gYwplyvEmVvhTLNuyG5ayCQUZnxjFWRwGNGK52IGUUYJgTD6grs8tlhMWltrxmHEiJ8mPSQBbOzZxhkwEqvTEsPahHeloDyEX0BQTCDa++jjCHFOES3/1g6ZxclzX8qNDDqmIGE/Evvjf8GC6wDGb4dAU27Q20I53+E2lWmcY+QFFcSrIAt/pYZ1BhMWmmxgd76r0wHFEshsi1IBmQqOzduEdiOtqdMkYC/l/GrTTnLWTJxinuBXMh73g8bJaSeaXjUX3ko4H547LRtAeN3MAu8a5omjtWjwYymKI1ifoxe28E7WfHrPporOqS/shHS9fxgmvut51r/44P/0IO1lU+TOsvYxuXk+X7LYdy8vJ05+gO3wFr6No2r/7uFvN+f1oMrx+94IkPhcWuGPPk0H/8T3DEtw9Od2r8yxzvUfRdx8rr1JMnclzxROdl27ben2+6oABX1keal/TZS/svvBVNggAv1oltdMERE/Tv7seaxbp7ODf123v/CAdTTGSW1GPQdAt9VSXoPydzLSGhGaUm/ozTT5CYiqNlj6lucNPFd2R0Fc9XMt2HfR61U69B9qO26leXNhuxXYbDdCz2w7wLrYks0ZxALHDaER0LE2567H5HSBKfIFpiLm5YKliOmH84rELJSwFtK8uAaMCD5mi57GAXi1bLLxpPB19MDYPp24qJ5lRumPynt7zdiQx36fkyh4l9zEiM4I1b+uxFmquhVSlmMNFKmNQXsAyxalidq5J1neqddcSJJnFWAO1EhamMS7PJrO8MJZY/zsmRCLX9i+G+WX7Ma3Db9sKKJuQaAOhcznHqov4m7fF3ibyc8K13YS37ttpSPS9UuWUnKA1kv1Pn1Oix6MYEZXRW2fwBra4C/Ojj389af0CyjqsRxEoXJCdsNuXW70BijVa227OYXleTheLNO+fp9mRK/eKsoBr2Y41wChVvLYasndMrcKLddQjUgA/CF7o9yGq0aQDCSVO1MCVcvGIrWGAhd4aAnVRsmNXkr2QqnQSZ/I7XSdWG49G/OtShHyk7ZT6Qf0tGQ8/O/aNr504Kk+1NEhCx1rSD8jqh7lATLklivoY33X+nYPvgu8riyIXWKQaqFEq8c9fSprTmgZEiKVUBl0jV+zybI5TrmbY/zT64ian8mK3I/++3JkkHwGE1UYoSO5fP9G+vgJ0vMPVm6CHdN11qxWnXamo305O196arhV9u0VR9tC1vqi/anbqdDjjrX8A</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>06C9F8B2728B771EE05307991F0AFB05</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>081FD5432A33432CE05307991F0A5C45</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A081FD5432A33432CE05307991F0A5C45</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>081FF4C8F1A25C4EE05305991F0A217E</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3A081FF4C8F1A25C4EE05305991F0A217E</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20141118_03332</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>06C9EC55979520F9E05305991F0AA6CC</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"081FE26B60996352E05307991F0A6EF0:6EEAC643"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>87339ef0-463c-42c0-b9e0-38df8132987c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e41d2809-8fcc-4034-a3ce-b9638760f31c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00005_AccountUserCreate_with_country_DE_111_AccountDelete_107_SUCCESS_P0" searchProperties="true" id="25f834bb-16f9-42ac-ae7c-9f28f66d6c19"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="803e44f4-c911-4849-b0db-4c2c0ddb22f5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="151b23ee-49bc-4744-84d7-cad152b96b21"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","DE");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="f7b1fb3e-5c08-4cf6-aa08-3013e201f421"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="545d521c-f7fe-4bf6-82e9-e36856f289f3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="e7677b9d-b2fa-4a95-845c-d94091249156"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="e4e42fe7-a99d-4411-a7e4-76a05b5d893b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4jx3jS7jYnsAM4dKSKwHSNnnJKNIaBLZELBlofn0lExMgJIeeGWYYrVe731707Z4KlMRe2BQCUkk5M3rtuvmIHVI5ARRYZeJEVhlOfCsgXmC5kR9UPT8iZTcwjZ4QGfSYkIjJuuk5btlyfMsNRm41LNfCilvyXefBNH5CKpRppVJyTGOVxEyEudu6maUs5EhQETKUgAglDofNq8tQaYaowGQ2Ttcoc4dpYyLlPLRtXCKAIY5xCfPEPrV3dE6JCId0zJDMUnj1SUTdfL27XC5Ly5MST8e25ziO7QS20iGCjr+ajS/FZSA9FvH1uYUYZxSjmL4gDeoK5IQToxmPeUrlJPnAtGu7jjZtwQpb2C2zr6b95iBHd6SlHZCpQJaYILcwNoAIUmAYjLtBr25+Pa6C67ujFDER8TQRe+d/gwRsATGfA7FEEVmB7niLB9LVOAUc9hiOM0EXcK3bZI4wCKOfQkRXl1So5iPCyMtvrIT60aLLAP9LWU7tbawKun0gO206BiH/T82267W28hPFGTRGd1Px7bI19b4lAqNKdfYwyMTT8kfaFvUcwrbyGtSm3K/n/Wbd9Nbrpe8X7daNM+Qv3fvkqeKcn01XT2K8DC7Ov/ehfHH3s/07u65FyHEms3OEW52TfnfcJ7feYFKL+a9sWl3EyX02+XF2c/flNzkLHvwKISSC5eXS7V2x5/H4vncdzeb9ajrnNa+Kb/3ZYiLc/q/vd5X5ZDYo09vueFBzFx5vzUb8tuvfj7r92y+LH7w2Ornq3GOVBvytMyCz+ltM2zHsCgtKGGZPU8CyOOr26LWNrqoXkp/Ti5ZQYkW5ajjXHCUkMGk29C1NLWGmCIiSUBVzfXacbtepdju1SrtTqzbLHady4tSCwO06zWan3Sk4aI1iD2KLs4hqX5pl1/3zOUCchAIYgdRa8AxPQJifWGwjiYweG6jHwZmAEVcsTl8g82nEVj6K3Nk0iYWf1KYEv5jGNZc37CZtRhLSXeoOdqh7AJjOKWh+1w0uVIcLqXLxjBaZjN3SApUYZGoCpJqEQ6/sV2xBk3kMGqmdcJLFUJpP5nlmbLH+9yyERS4ddEb5w/swrv1vRQqUDqFaQehYzkCVEQ7MoHIRyIcBe952wIX5Zkaofl8qnzKleI1k99Nbm+j+2PSIiuixNXx0C9wb9aOvv79pfwLK3s/HxhFZ0C23xTBV80GxR6Oo5jMqPZeyxSLL61fTzJgq87YiSNceAs4Uvf0Z8Rkwe2PCPmq6bFDved7Id/FlcsKGEklIVLcZ+fGI1WIIQq8WPfVMVsfuLTsuVd4krOQhWStWG4hG/OmSgkOs9ZS4r/6WPCVv5Tpga8uPilPtE5KysT7pOfLng6bAXJmlivh4um38kIFDzneFmyRvsEjVTU+ZhI+/GJrR6ibCmGdM9tpmLthm2Ryn/DOH8E3pnZmcyV9H80p8OJp/X10OFd8lyNzo0v9WtmjeLhhMvQHkWOrmSm2ayjkbb7H6K8D3xF4+qziuX6sGrR1i94LmJoE7kTTeid9LtnK6/x4afwE=</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF064B5019769CE05307991F0AA29A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF064B5018769CE05307991F0AA29A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF064B5018769CE05307991F0AA29A</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF06FE75DE76A4E05307991F0AAEDE</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF06FE75DE76A4E05307991F0AAEDE</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124751</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF06FE75DF76A4E05307991F0AAEDE</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF06FE760676A4E05307991F0AAEDE:F18A8EA0"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>87339ef0-463c-42c0-b9e0-38df8132987c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e41d2809-8fcc-4034-a3ce-b9638760f31c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00006_AccountUserCreate_with_country_CH_111_AccountDelete_107_SUCCESS_P0" searchProperties="true" id="bfea1127-e484-4928-b9f7-6ce64bf14d14"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="6ea24378-6e18-4643-9944-391bf52974be"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="969d1956-0cb5-4396-8ac2-2ad4ca8add4d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CH");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="f1f94f54-1dbd-493a-b535-6ddae4dea3eb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="35a333fb-f0f0-4a47-96b7-78bb04621779"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="9fa7615f-e22c-4e6c-9e7e-7072b590a1a5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="db8c2de2-7406-460c-841a-feb08c061977"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSx6OQG9cIkKDAii0t1+12+1K5ziS4TZwQO1z6648dGgoUetgjISFPxjPfXPzN1BkKA8tpMQYJJxFV+p2G+lwrWybClZr2YmBbK2LL06pVz9WQ6ZovyDLsqmWrSp+xFPqUcUR5Q7UMs6gZVc2szcyyU6w4pVKhZFefVOUBEiZMC5WCoSrrMKDMydw21DShToQYYQ5FITCHY2fauhs4QtNBOSa1Wd+izBwmzTnnsaPruOAChiDABRyFel0/0Km7zJkSnyKeJvDh02UN9ePuarUqrOxClPi6ZRiGbtR0oeMy4l+rzav8Mrh96kXb8w2iESUYBeQdSVB3wOeRq7QCP0oIn4dnTJu6aUjTGqyxhs0ivVb1TwcZugstHYBMGNLYHJm5sQl4kADFoPya9Bvq9WUV3N6dJYgyL0pCdnT+O0hAlxBEMbgayyPL0V1u8US6mnXATp/iIGVkCfeyTWKEgSmjBDyyHhAmms9lSlZ+Zc3Ej+RdBvhvylLX97EK6PqJ7HSID4z/n5rt12tr5QEFKTT12GAjf/r+8Kc9nA3TYXtZbteWow3rtxoZhH3lLahduT/Ox826662PS9Mf0bBv08fgxRzMH0N/XCJJ5fbGXtx5Pda2J79/jMetR+vhH/319+r1pTihXbDHZjuYtm4H8/EdbU08Sixr5C7YVbfSeX20njZx4i9vZmXD46vJYPCL+93KPOyYT+/D1nocj6zxqLfxS13XvaWV+bDrY2/llTpvkTe0bGtWM62FPbwaUDSpBvPF8n7R/vnzfQqjP43PmPZjOBTmlDBNX14B8/wo26PfUXqiXoh/Ty9SQlzNy1SdWHIU40C52pS3JLU4qSAg4jqimNuzYfR6RrnXNcxyr1JuWV2jZBuVWs3sGS27bVZyDtqiOIJ4E1GPSF+SZbf98z1AHDoMqAuJtoxSPAemfmOxgzhS+nQiHkdEGcwiweJ2jby5PifUDikk6Yoiy14nrmDu+4gP6TBpeRySQ+auHTD3BDCJCUh6l/3NRIMzLlKxQMuUB2ZhiQoUUjEAEsnBjlWslnRGwjgACVQPIzcNoBDP4ywxOtv+WxrCLJNOurPs3Z0N6/hbngGh4xKpwGQsbRBVhBMjqJgHcjZgy9oPODffSl0in5dIJ08I3iI5/PTZJbI9di0iInq+mT6bOe6d+sXXv97UvwGlH+dj58hdkj23+SwV40GQRzOv5gIVFoV0uUyz+lUkMSbCvC740dSngFPBbptZ9AZU35nQLxouO9RHnnfyQ3wpn9MpRxxC0W1Kdrxgs5gCk5tFX7yS9aVry4FLkTcOa35KdhOIBUQi/nZHwQ6WekI8En+rKHE/y3XC1p4fEadYJ8Tr9OVJjpHNmabAkTBLBO9Fyb7xUwZOOT8U7pK8w8JFN72kHM5/USShNVSEcZRS3u+omWCfZDOcfBOD86n0xUxG5B+Tec3OTubHu8FU0F2I1J0u+W9ljWTtgkGVC0CGpaGuxaIpnFN/j9Q/AH7h9Yph9nolS/C6ccDrtdLnYz6IpPlF/FWyl9Pj99D8Fw==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF0701FF5376A0E05307991F0A3951</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF0701FF5276A0E05307991F0A3951</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF0701FF5276A0E05307991F0A3951</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF06FE016F76A2E05307991F0A3B17</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF06FE016F76A2E05307991F0A3B17</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124754</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF06FE017076A2E05307991F0A3B17</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF06FEF55F769EE05307991F0A2F78:2C5AB6BD"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>87339ef0-463c-42c0-b9e0-38df8132987c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e41d2809-8fcc-4034-a3ce-b9638760f31c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00007_AccountUserCreate_with_country_FR_111_AccountDelete_107_SUCCESS_P0" searchProperties="true" id="6456438c-e0c5-44ef-be59-8603bdbadc5c"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="6931b6b9-d4cf-478e-b12c-62a9662715f0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="702388b5-78da-4022-9637-bb5b06473ce7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","FR");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="e245e650-e146-4e0c-be30-ba9b07ecb1c6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="c2571209-85d8-4ff3-ac47-f6255819a7da"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="c1ffb7f4-09f9-4713-bad8-9298d37c813d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="cd0809c4-a81d-434d-8d58-aec2dd0387e4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxGlj6uQBBJCooLENtDNFvoFZXv7sjLOAF4Sh8YOH/vrrx1ICpT2sldCQp6MZ87MHB/7kqE4qnptxiDlJKFK4DfVXzBxbHdihJo9trBmIbA017Xr2hjjes1xnHHojFUlYCyDgDKOKG+qVcO0NKOhme7QrHuW49luxWzUXlRlBCkToYVLxVCVdRxR5uVpm2qWUi9BjDCPohiYx7E3aPd7nvD0UIFJbV1uUeYJ09aM84Wn67gSAoYowhWcxPqlfuBzGTJvQKYU8SyFXc6QNdXd3tVqVVnVKkk61auGYeiGqwufkJHphdr6UmyGMKCTZLu+QjShBKOI/EESVB/4LAmVdjRNUsJn8QehTd00ZGgN1ljDpkUvVP0tQY7uzEgHIFOGNDZDZhHsESaQAsWgPD0GTfXivAlu9w5TRNkkSWN2tP47SECXECULCDVWVFagOz/iiXa1LgF7AcVRxsgSbiVNFggDU+5TmJB1jzBBvpAp+fiVNRM/UrAM8N+M5VLfxyqg6ye645MpMP5/ZrY/r22UEYoyaPmPm+uV+3WTGqP6wwjVGvPr+aAz+x3czZs5hH3nLahy3Lv1MVlLbu02jX68Vn/2nAf0MucL3vnHJVM/6M/qz+aP4YNPBz/r+HvttY+788haX88TNIafq4GfXG/M9vp+uAqqjZcnZxTh6tP0i0vrLGjXrMHLXaf+7fqu8/Rcb0DVCtrBeLZqNG5SPVxkw2Hg3t7TcJS4MXC/P/KfnRvf735Hw2jefun97sHkK3zp20+WO6123Xmvc3VjzIdL3Hyrab+GQ2MhCYNs/BswL5aSHoGvdMW8EP9cXqSFhNokd/UWUqMYB8rVltwlpcXLhACR0BPD3K4No9s1HMPsdsUZqreNjmHXDMd1za7Rrrm2WWjQFsURxKuETojMJVV2y5/PAeLYY0BDSLVlkuEZMPWTiD7iSAnoozgcCWUwTISKT+zpeMbsKJ6YxMzsuO42EjyuNVTlNuF39C5tTzikh8rtHij3I2CyICDlXfKbCYIzLlrxipYZj8zKElUoZOICSKUGe1WrYeuMxIsIJFA9TsIsgspitsgbo7Ptf1VDmOXWx84wP3cflnX8reiA8AmJdGCylm8gpggnriCrKOTDgqvV/YKL8O0sJPJ4iXbylOAtksNPbyyR9CgpIir6dTX4VVKhdD97+/ud+ieg9ON+lInCJdlLW9yl4noQ4tEqpvmKKq+VbLnM8vk5UhhTEV4X+mjqA8CZULfNMJkD1csQ+lmXS4n6KHNpP8SX8RkdcMQhFmxT8uUZL4sBMPmyCMQpWZ/7bDlIKfrGYc1P2a4i8QCRiD99o2APSz9hvhd/qyQN38Z1ItZeHlGneE5wQqdyJa+RzQekwIkIS4TuJel+8FMBTiU/NJZNLrFwwaZxxuHjL4oUtKaKME4yygNfzQ37Ipvj5JsFeG9O78LkQr67mdfsw5v5ud8bCLmLkVr6kv921khOFwyqfADkWJrqWjw0RXI63RP1HcB3ul63vjXsrmO2LTfXdXun66bZKRt4UEnrnfm9Za+nx+eh9S8=</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF064B85F81A49E05305991F0A311E</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF064B85F71A49E05305991F0A311E</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF064B85F71A49E05305991F0A311E</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF0701FF6376A0E05307991F0A3951</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF0701FF6376A0E05307991F0A3951</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124758</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF0701FF6476A0E05307991F0A3951</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF06FE53C51A55E05305991F0AE3BD:6DB220F"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>87339ef0-463c-42c0-b9e0-38df8132987c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e41d2809-8fcc-4034-a3ce-b9638760f31c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00008_AccountUserCreate_with_country_NZ_111_AccountDelete_107_SUCCESS_P0" searchProperties="true" id="406f946f-16e2-441d-92dc-f70018f2a80c"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="58681f87-eec3-4b09-aed6-123f8bd7fe1f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="0f9afde2-6aa6-4f0d-be64-9ac7aaaaf137"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","NZ");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="9672f1ea-7935-4801-bc93-5caa0ac4f066"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="5859d6ef-c1f0-45ef-8415-161d3be56635"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="f0320523-0b95-4763-8c1c-f35c845df4a4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="9149fdad-b977-4472-876a-18d1f0e003e3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdU+o8EL73V3Tq5ZnSD4rSjjCDoOcwgngsetAbJ6YLBEtSkhTQX3+SYhEQfTnvDDNMtpvdZz/y7J4JNE28sCEEcEkYNdqtmvk0jJEXx0HZ8j1wLd99Rlb12YutwHdOfaiWTzzfMY22EBm0qZCIyprpOa5vOVXLDfruSehXQ8crVQL30TTugQtlWqmU1K3lNKEizN3WzIzTkCFBREjRFEQocRg1up1QaYaowGTWz1Yoc4e8PpYyDW0bl2LAkCS4hNnUPrO3dM5iEUZkRJHMOLz7jEXNfL+7WCxKi3KJ8ZHtOY5jO4GtdGJBRsdm/ai4DHGbDtnq3ESUUYJRQt6QBtUFOWax0UhGjBM5nn5h2rVdR5u2YIkt7Pr02LQ/HOToDrS0BZILZIkxcgtjtzAEDhSDcXfbrpnHh1VwdbfPERVDxqdi5/xvkIDOIWEpxJYoIivQHW5xT7rqZ4DDNsVJJsgcrnWbpAiDMG44DMmyQ4RqvlgYefmNpVA/UnQZ4H8py5m9iVVBt/dkp0VGIOT/qdlmvVZW7lGSQd29uqqy6x6/iTrlRveWTlrNx6z9OGnPWC2HsKm8ArUu9/t5t1nXvfV+6XopnuXLqPVw0xvfPQ6iFuqz6EL0srsB7g+60XAWTWiz4/HoPnj0Z5fdZm9+f7W4GP/5FfTLzXKlH/l/fpwMR63O5dHPyXBaKdNe+Tf5Ff26Gtz15j054dQfL8j1oHvem7+Jl0F0Pq5mP0dBJN6W/tvsIUsfeG9wPb5bdlhafaDZbDI/bR117mPeAhmcN2+cH5i8uv7v2kdMmzFsCwtKiLLnCWBZHHV7tFvGpaoXkt/Ti5aQ2BrmqmGqOUpIoNKs61uaWsJMERCJQ1XM1dlxLi+dE/+8euJU3YYfXDiVslMJAvfSaZRd96LgoBWKHYhNRodE+9Isu+qf7wHiaSiAxsCtOcvwGIT5jcUWksho01v1OBgV0GeKxd3UdYXEJHZUgt1k8Zo9k8oknbiJaVwz2aM93hhK4NvcHWxx9y1gkhLQBK87XKgWF1IlY4bmmUzc0hyVKGRqBHDNwqHnVyu2INM0AQ3VnrI4S6CUjtM8NbZY/XsWwiKX3l7085f3ZWC734ocKJ2YaAWhYzkHVUf4NIROw0oRyJcBe95mwIX5RhYT/cBUQiUneIVk+9NHn+gGWTeJiuipGT25Be61+sHXP9+0vwFl7+Zj7Siekw23xTRVA0LRR72o5gyVZqVsPs/y+p1qauTKvK0Y0rUjwJnit9c+ewFqr03YB42XNeodz2v5Nr5MjmkkkYSp6jYjPx6wW0Qg9G7RVu9keejisuVS5U3CUu6TNRO1gmjE324pOMRaT4lv1N+C8fijXHtsbfhRcaqFQhI60ic9SF6/aArMlFmimI/xTeP7DOxzvi1cJ3mNRapues4kfP3F0JRWMxHGLKOy3TJzwSbN5jjlawrhh9InMzmVv8/mpfhyNg+6nUgR3hSZa13y38oWydsFg6lXgBxLzVyqVVM5p6MNWn8HuIfZGxfnnmb2yiazV06d1jqBW5HUP4k/SzZyuvse6n8B</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF064AEB291A45E05305991F0A570D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF064AEB281A45E05305991F0A570D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF064AEB281A45E05305991F0A570D</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF064B86081A49E05305991F0A311E</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF064B86081A49E05305991F0A311E</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_12481</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF064B86091A49E05305991F0A311E</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF064B5045769CE05307991F0AA29A:50717703"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>87339ef0-463c-42c0-b9e0-38df8132987c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e41d2809-8fcc-4034-a3ce-b9638760f31c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00009_AccountUserCreate_with_country_IE_111_AccountDelete_107_SUCCESS_P0" searchProperties="true" id="aaac361e-1b23-4e80-b57c-d6a498e9b4e6"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="cef14eb2-291f-44be-a272-aabc6d08190d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="eb79defd-6925-429e-8210-8eace81e81d5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","IE");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="8046c502-2ee4-47a0-b6ce-7ddb68ea1d45"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="409d2bc2-bb37-44a0-bff8-ed5af47424cb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="4c9f590a-fbf5-46f7-91bc-d155941effd1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="5aa18718-47cf-48a1-af20-b4d1b90329b6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZZb+o6EH7vr4jSxypkYQtRQQpbLz1dgZ62vFTGmYB7EifETqD99dcOhAJdLudKSMiT8cw3i7+Zc4bCwHJcxiDhJKLKoNtUXzyv0rBsAzS/Xra1im3b2tQ3ylq1buOab4JRBVtVBoylMKCMI8qbqmWYFc2wNbMxNmtOxXaMWqlarU1U5TckTJgWKiVDVVZhQJmTu22qaUKdCDHCHIpCYA7Hzsi9vnKEpoMKTGrrfI0yd5i05pzHjq7jkgcYggCXcBTq5/qezrnHnBGZUcTTBDY+PdZUN3eXy2VpWS5FyUy3DMPQjYYudDxGZqdq66S4DN6A+tH63EE0ogSjgLwjCeoa+DzyFDeYRQnh8/Ab06ZuGtK0BiusYbNCT1X9w0GO7khLeyAThjQ2R2ZhbAg+JEAxKA/DQVM9Pa6C67vjBFHmR0nIDs5/BwloBkEUg6exIrIC3fEWv0hX6xywM6A4SBnJ4Ea2SYwwMOUuAZ+srggTzecxJS+/smLiR4ouA/w3ZTnXd7EK6PoX2emSGTD+f2q2W6+1ld8oSKHFa2hOfq3eH8+qWWQ+LMxL/XKSlnlYf27mEHaV16C25d6cD5t121ubS8G9PaqevV09ockMh9fTMb1/bsyfVp1/2gYqP5zBxf0i6188jINR7c1GumGFXfjjogkP30l4ltXdzuVFcO+7d2RyQtqTeDa7XERX9+337LmRRdbgcjx8XSQeqcePDX/SJmAgP2gjt9eu3ns2Qenq2vRv+OPsLln2x40pN+pVq3vbOXlc9m+us0o8JbXG4wS94QZufsS0G8O+sKCEUTp9BcyLo2yPQVfpi3oh/jO9SAnxND9XdWLJUYwD5WpL3pLU4qSCgIjniGKuz4bR7xt106h1Kj3TrXR7RrVsVBsNs2+4dsdqFxy0RnEAsRNRn0hfkmXX/fMzQBw6DKgHiZZFKZ4DU3+w2EUcKQM6FI8jogzGkWDx+NVevS4gnYZG2ZwRbiYLa8nfy4K6byJ+S28T1+eQ7FN3Y4+6h4BJTEDyu2xwJjqccZGLBcpSHpilDJUopGICJJKEHatiV3VGwjgAiVQPIy8NoBTP4zwzOlv/WxrCLJcOe+P84X0b1+G3IgVCxyNSgclY2iDKCJ9mUN2pFoF8G7Bl7QZcmHdTj8j3JfLJE4LXSPY/fbSJ7I9tj4iIXjqjF7PAvVU/+vrnm/oPoPTDfGwdeRnZcVsMUzEfBHu0imouUGlRSrMszetXl8yYCPO6IEhTHwFOBb29jaM/QPWtCf2o6bJFfeB5K9/Hl/I5HXHEIRTdpuTHI1aLETC5WgzEM1kdu7fsuRR547DiX8k6gdhAJOIflxTsYKknxHfibxkl3ke5vrC140fEKfYJTuhMnuQcefumKXAkzBJBfFGya/wrA1853xduk7zFwkU3TVMO339RJKM1VYRxlFI+6Kq5YJdlc5z8LQbnQ+mTmZzJN6N5xb4dzU/XVyPBdyFSt7rkv5U1krcLBlVuADmWproSm6ZwTmc7rL4B+InYa/1evWZV6jW3khN7fU3sbq/b2yZwL5LWJ/FnyU5OD99D618=</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF06FE762576A4E05307991F0AAEDE</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF06FE762476A4E05307991F0AAEDE</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF06FE762476A4E05307991F0AAEDE</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF07106C4E1A4DE05305991F0A8C2B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF07106C4E1A4DE05305991F0A8C2B</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_12485</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF07106C4F1A4DE05305991F0A8C2B</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF06FD47221A51E05305991F0AEF0F:CB78A2E5"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>87339ef0-463c-42c0-b9e0-38df8132987c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e41d2809-8fcc-4034-a3ce-b9638760f31c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00010_AccountUserCreate_with_country_AU_111_AccountDelete_107_SUCCESS_P0" searchProperties="true" id="c1ba4601-5bbc-4a8c-9764-c6c048adfb38"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="615513a7-6a09-471c-bf62-e620a3679e2c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="83bb8878-f6a8-40e1-a4c7-384af782406d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AU");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="13ad0d1d-0afd-45f3-a04b-64d545d13bec"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="3dce7d07-53cb-491d-aa23-4e1347558dec"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="8057fc5c-dc8e-4d13-9a60-8ed6c090406e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="cc6fbcad-b2cf-4fc9-8523-ba6d89348139"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSx1WIE66JChLloqUX2iX0+lIZZ0LcJg6NHaD99WuHhgKlPeyRkJAn45lvLv5mTjiOI9ttcw6poAnTBt2m/oQaZexUgrrRQIFvVMqTwHACXDcCbFfrFjQqBDm6NuA8gwHjAjPR1G1kVQzUMCxnbNXcSsO1UAmh6qOu3ULKpWmpUkK6towjxt3cbVPPUuYmmFPuMhwDdwVxvfblhSs1XVxg0lsnK5S5w7QVCjFzTZOUfCAQRaREktg8Mbd0TnzuenTKsMhS+PDp86b+cXexWJQW5VKSTk0bIWQix5Q6PqfTY711VFwGf8CCZHXuYJYwSnBE37ECdQkiTHytHU2TlIow/sa0ZVpImTZgSQxiVdixbn46yNEdaGkLZMqxwUNsFcZGEEAKjIB2Mxo09ePDKri6O04x40GSxnzn/G+QgM0hSmbgG7yIrEB3uMU96WqdAHEHjEQZp3MYqjaZYQJcu04hoMsLymXz+VzLy68tufzRosuA/EtZTsxNrBK6uSc7XToFLv5PzTbrtbJyi6MMWvUzemf9eb4fL8u3pPOWju0psPeug+xFM4ewqbwCtS73x3m3Wde99XHpofG7MqhFw3Pn3q+O74dDR/Re/Mdh1L9ZTIQ3eUW9IbCh59gP87Zz+hw+XM3sdBD8Ok0a7+avs2UYTMM6Kb9eju6P7m46t15yY7ej0DutdMz3x8do2OsEfx475lJ4597dDR7JiGpkgfp302rt7OrxkvQuGvGkTSZw0asNz/uMhvG1Pzo6/U1OrcktqV4+vEX3Xfvt7KX5GdNmDNvCghK8bPIMRBRH1R6DrtaX9cLiZ3pREuobQa7qzhRHcQFM6C11S1GLm0kCor4ri7k6I9Tvo1q/V6+Vq/Vau9JD1TKqO47VR+12r9srOGiFYgdiJ2EBVb4Uy67652eAJHY5MB9SY55kJASu/2CxiwXWBmwkH0fCOIwTyeJWyq3QrmZ2FiNiZRXwrZo/rzpJqGvDRFyxq7QdCEi3udvZ4u4REDqjoAhedTiXLc6FTMYrnmciskpzXGKQyRGQKhZ27UqjanIazyJQUM048bMISrNwlqfG5Kt/28CE59JRb5y/vG8D2/1W5EDq+FQpcBXLKcg6wp4hhIpAvg3YtjcDLsy3M5+qByYTKlJKVki2P332iWqQdZPIiJ463pNV4F6rH3z9603zB1Dmbj7Wjvw53XBbTFM5ICR9tIpqvuLSaymbz7O8fnVFjak0b0qGtEwPSCb57W2cvAAz1ybMg8bLGvWO57V8G18mQuYJLCCW3ablxwN2Cw+42i0G8p0sD11ctlzKvAlYin2yTiRXEIX4xy2FuETpSfG1/Fskqf9Zrj22NvzIOOVCISibqpMaJG/fNAVJpFkqmS9JN43vM7DP+bZwneQ1FiG7aZIJ+P6LpiitqWNCkoyJQVfPBZs0m+MUbzNwP5W+mMmp/GM2L/m3s/n+8sKThBdjfa1L/1vZoHm7ENDVCpBjaepLuWpK52y6QesfAL8wex1Z/X7bkcyONpm97FQ/H/NWJK0v4q+SjZzuvofWXw==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF0701FFAA76A0E05307991F0A3951</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF0701FFA976A0E05307991F0A3951</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF0701FFA976A0E05307991F0A3951</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF06FE763576A4E05307991F0AAEDE</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF06FE763576A4E05307991F0AAEDE</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_12489</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF06FE763676A4E05307991F0AAEDE</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF064AEB461A45E05305991F0A570D:A3858098"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>87339ef0-463c-42c0-b9e0-38df8132987c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e41d2809-8fcc-4034-a3ce-b9638760f31c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00011_AccountUserCreate_with_country_CA_111_AccountDelete_107_SUCCESS_P0" searchProperties="true" id="5697b485-0e28-46dd-8ec2-726bf4b3dd0c"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="d0bb1b18-702e-42d5-90ea-ed12b6ab40a3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="fd5017db-71ec-4d34-9542-6d3c6f69757c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CA");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="b050eb36-7731-46db-8c57-26e8fdaf9aaf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="3ae9090d-5d17-4ed7-830c-7f02e15b2b9c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="ab15a218-fc22-4045-bcc9-f848ec7ad9ba"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="b776b8be-cc33-4e3c-962b-ffecbec10ea2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH1chTggUooIUvrZsv7ihZXd5WbmOA26DncZOSPvrrx1ICpT2sldCQp6MZ87MHB/7nMNVZLse5zgRhFFtPOjof/CZjQFo1w0HI8dwwpZlQKfdNELYfECBHWKn3ta1MecpHlMuIBUd3QaWY4CWYbXvrKbrtFyrXms2G3Ndm+GEy9DSpQZ0LV9FlLtF2o6eJtRlkBPuUrjC3BXInXrXV670dGGJSe+eb1AWCZPuUojYNU1UCzDCUYRqiK3Mc3PP5zzg7pQsKBRpgrc5A97Rt3vX63VtXa+xZGHaAAATtE3pE3Cy+Kp3v5SbcTCmIdus+5AyShCMyCtUoK6xWLJA86IFS4hYrj4IbZkWUKENnCMDWQ79qptvCQp0J0baA5lwaPAltMpgPg5xginC2r0/7uhfT5vgZu9dAikPWbLiB+u/g4RphiMW48DgZWUlutMjHmlX9xwjd0xRlHKS4RtFkxgizLVJgkOSXxEuyRdwrRi/lnP5IyXLMPqbsZybu1gldPNIdwZkgbn4PzPbndcmygxGKe4+id+j+LJJfvs9f1L/NUohuRT+0/OPrNUpIOw6b0BV496uD8lacWu7aVon6YXnJ+tZFKx/TO8QvZmbN5Nkdv2znwyjC+bPbmxgewsvjx8fs29RG8yXP18unWbeu38ws+H3Zn12lazWL1fhF98aZvePy4vrxmxp98OJiVC6IL9HPZZPLhrAn8zCKf3Gsvv56y287aPL2VNwfWZ//2aLVw/8zEeEOWE2Gc7ng8EXPLSt+/ifRdobzEf3PogGw85bTbs17BtLSZimD48YiXKp6DEeaCM5Lyg+lxdlIYERFq5urDSKC0yF3lW7lLS4qRQgErhymJs1AKMROAPWaNTzzpoeGIJGHZy129YIePV2wyo1aIPiAGKf0ZCoXEplN/z5HCBauRzTACdGxlK0xFz/JOIACqiNqS8PB6Mc3zGp4k20iAEngLbYi5U7OSVra8XAY65rN0zc0tvECwVO9qW7vSfdPkYkJljpuyI4lwznQvbiGWapiKxaBmsUp/IGSJQIu7bTapicrOIIK6TmigVphGvxMi46Y/LNv21AxAurP7wrDt6HdR1+K1sgfQKiHLiqpYflGPGROwiUhXxYsG3vFlyG99KAqPMl+ykSgjZI9j+90UTxo+KIrOhPf/qn4kLlfvL29zvNT0CZh/2oEgUZ2UlbXqbyfpDq0S2n+Qxrz7U0y9JifmdKGRMZ3pQCaZlTjFIpby937AlTswphnnS7VKgPMlf2fXypWNKpgAKvJNu0YnnC02KKuXpajOUxyU99t+yllH0TOBfHbP1IvkAU4k8fKchFyk+aJ/JvzZLgbVxHYu3kkXXK94QgdKFW6h55+YAUiMmwRAofS3aDHwtwLPm+sWpyhUVINj2kAn/8RVOK1tEhQiylYjzQC8OuyhY4xUuM3Tend2EKJd9ezTn/8Gr+dX01lXq3gnrlS/7b2SAFXRDW1QugwNLRc/nSlMnpYkfVtwDfCXvT6bWaTsvynHYh7I2tsFvWsGrgXiXdd+b3lp2eHp6H7r8=</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF064B86491A49E05305991F0A311E</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF064B86481A49E05305991F0A311E</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF064B86481A49E05305991F0A311E</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF0701FFBA76A0E05307991F0A3951</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF0701FFBA76A0E05307991F0A3951</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124812</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF0701FFBB76A0E05307991F0A3951</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF064B505F769CE05307991F0AA29A:17873DC3"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>87339ef0-463c-42c0-b9e0-38df8132987c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e41d2809-8fcc-4034-a3ce-b9638760f31c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00012_AccountUserCreate_with_country_GB_111_AccountDelete_107_SUCCESS_P0" searchProperties="true" id="5791ebf7-f36b-4641-96f4-a1d4718a9ed9"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="aa0632ac-5caf-43a2-8eab-a5e2e039c205"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="617fa638-238c-4466-b67d-976ca27ecee3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","GB");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="00d686e5-07a9-4e49-b176-58e5c49dc378"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="301af1bf-03ef-4388-a2c1-7adc1ec4ee93"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="8833d44c-3dde-4933-a484-f342098cdfdb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="d8b52683-47cd-4678-883b-0bd80065776c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSRxSScAkkAiQosEUFygK9bF8q1xnAbeKksQOhv37t0FCg0MMeCQl5Mp755uJvpsaQ7xWcJmMQcRJQpdeuq89mAV5chC3NLtiglezZi4YQnmnlmVUFy4BytWyoSo+xGHqUcUR5XS0YZkkzqpppT03LKVUds5IvWZUnVbmHiAnTQiUvbiW+R5mTuq2rcUSdADHCHIp8YA7HzqQ56DtC00EZJrVR26BMHUaNBeeho+s47wIGz8N5HPh6Td/TqbnMmZA5RTyO4NOny+rq593VapVfFfNBNNcLhmHohq0LHZeR+aXauMgug9ujs2BzvkI0oAQjj3wgCWoAfBG4StObBxHhC/+EaVM3DWlagwRr2CzRS1X/cpCiO9PSHsiIIY0tkJkZG8MMIqAYlLtxr65enlfBzd1phCibBZHPDs7/BgnoErwgBFdjWWQZuvMtHklXowbY6VHsxYwsYSjbJEQYmDKKYEaSPmGi+VympOVXEiZ+JOsywP9Slpq+i1VA149kp03mwPj/qdluvTZW7pEXQ+PjIXkYDuNBZc26w+uqd2uR/q2/1r2xUU8h7CpvQG3L/Xk+bNZtb31ecnNJYWGMRu500A+vkGve8BiGo9FtaZSEERmiXwNe7fNxD61+dUttdNO1bA5vlaU7WCG9RW5D69c09xTn7t4fLtD1R3s+eDSH9M8s52P2+6H6OPFzZLryW69FPu10ypNpN8qtnz5adxaxl3rX1sv2WzXwx81iE+Le49Ds+vcfYbtyMb/uTqNWnBgUtUe5G+v39Z/6V0y7MewLM0qYxC+vgHl2lO3RaytdUS/Ef6YXKSGuNktVnVByFONAudqQtyS1OLEgIOI6opibs2F0u4ZValWtsm02S3bHKBeNsm2bXaNZNM1OxkEbFAcQrwI6I9KXZNlN//wMEPsOA+pCpC2DGC+AqT9YbCOOlB4di8cRUAbTQLD4C/fRK6kUA4sxM1i9GsnadnHlfaYqw4Df0tuoOeMQ7VO3vUfdY8AkJCD5XTY4Ex3OuMjFO1rG3DPzS5SnEIsJEEkSdgqlallnxA89kEh1P3BjD/LhIkwzo7PNf0FDmKXScWeaPryTcR1+y1IgdFwiFZiMpQWijHBkBhlZICcDLhR2A87MN2OXyPcl8skjgjdI9j99tYnsj22PiIierybPZoZ7q3729e839R9A6Yf52Dpyl2THbTZMxXwQ7NHIqvmO8u/5eLmM0/pVJDNGwrwuCNLUJ4BjQW/rafAGVN+a0M+aLlvUB5638n18MV/QCUccfNFtSno8Y7WYAJOrRU88k+TcvWXPpcgbh4Qfk115YgORiH9cUrCDpZ4Qj8TfKojcr3IdsbXjR8Qp9glO6Fye5BxZn2gKHAizRBBfEO0aP2bgmPN94TbJWyxcdNNLzOH0F0UyWl1FGAcx5b22mgp2WTbFydchOF9K38ykTP45mhN2cjQ/DvoTwXc+Ure65L+VNZK2CwZVbgAplrqaiE1TOKfzHVb/BPid2LudcrHTMpvl8i6xd4qt9jaBe5E0vom/S3ZyevgeGn8B</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF06FE53EC1A55E05305991F0AE3BD</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF06FE53EB1A55E05305991F0AE3BD</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF06FE53EB1A55E05305991F0AE3BD</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF064B86591A49E05305991F0A311E</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF064B86591A49E05305991F0A311E</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124816</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF064B865A1A49E05305991F0A311E</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF06FD473C1A51E05305991F0AEF0F:80A31A26"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>87339ef0-463c-42c0-b9e0-38df8132987c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e41d2809-8fcc-4034-a3ce-b9638760f31c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00013_AccountUserCreate_with_country_US_111_AccountDelete_107_SUCCESS_P0" searchProperties="true" id="87fbd6b6-c1cc-4f9f-9ae8-6eb836f85be2"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="d73f6d22-49c7-4fdd-b06f-e749e55a1d52"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="ef208f38-2948-41d8-8435-82a65614270c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","US");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="c71af705-e69e-4df5-b796-3abd851ca53c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="cf171486-ebb5-4de8-b22a-31cce4b5775e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="8fc09a6a-aa6b-423e-897a-68cf8bb30c05"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="354ea11e-7bd5-42be-9cad-71414c54186a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj1XIBQIhKkhcu+z2BqHddl8q15kQdxOHxg4l/fVrB0KB0h72SEjIk/HMNxd/M2cMxZHldhiDlJOEKqN+S33ENvKd4CnQaobpaLUGMjUnAKw59aoFftOxn5CpKiPGMhhRxhHlLdUyzJpmOJrZnJp1t+a4llFp1q3fqnIHKROmhUrFUJVlHFHmFm5bapZSN0GMMJeiGJjLset1Li9coemiEpPaPluhLBym7ZDzuavruOIDhijCFZzE+pm+o3PmM9cjM4p4lsLap89a6vru6+tr5bVaSdKZbhmGoRtNXej4jMy+qe2T8jL4Ixokq3MP0YQSjCLyhiSoS+Bh4iudaJakhIfxJ6ZN3TSkaQ2WWMNmjX5T9XcHBbojLe2ATBnSWCiKsDY2gQBSoBiU28mopX47roKru9MUURYkacz2zv8GCegComQOvsbKyEp0x1s8kK72GWB3RHGUMbKAK9kmc4SBKTcpBGR5QZhoPp8pRfmVJRM/UnYZ4H8py5m+jVVA1w9kp09mwPj/qdl2vVZW7lCUQZtdw6335NWHP+4GxoOBLifs50ujZiR2p1VA2FZegdqUe33eb9ZNb60v5Q9hPp5mfvKUc4fTmZNZHvvz3F0+R1c39a4X+dX4fNyZJpDxn17vPn2wM3I6zbtgVCfO+TjQs3j4cDXqhjk+8Zq3g7lRvbvjw/H4Fr53F5PvQce8vngeL4fWTTqbnj7YWP+Vv4Wh3o/1W+f3qdkZ5M/xDyu6D75HvchOx9557NSiE6L3uovzN6/6ywjzn1C7RqPWe0zbMewKS0rwsqdnwLw8yvYY9ZWhqBfiX9OLlBBfCwpVdy45inGgXG3LW5Ja3EwQEPFdUczV2TCGQ6M+HNjVYc/s2PbAsKuG3WyaQ6MzqHb7JQetUOxB7CU0INKXZNlV/3wNEMcuA+pDqi2SDIfA1C8s9hFHyohOxONIKINpIlg857xeCxcheYO80Xx5XeZ+OKvNkapcJfyaXqedgEO6y9zNHeaeACZzApLeZX8z0eCMi1S8oEXGI7OyQBUKmRgAqeRg16o5ts5IPI9AAtXjxM8iqMzDeZEYna3+LQ1hVkgng2nx7j4Na/9bmQGh4xOpwGQsXRBVhAMjyCwD+TRgy9oOuDTfyXwin5dIJ08JXiHZ/fTeJbI9Ni0iInrseY9miXujfvT1jzf1L0Dp+/nYOPIXZMttOUvFeBDk0S6r+YIqL5VssciK+jUkMabCvC740dQ9wJlgt3ya/AGqb0zoRw2XDeo9zxv5Lr6Mh9TjiEMsuk0pjkdsFh4wuVmMxCtZHru27LgUeeOw5IdkvUgsIBLxlzsKdrHUE+Ib8feapP57uQ7Y2vIj4hTrBCd0Jk9yjOSfNAVOhFkieC9Jt40fMnDI+a5wk+QNFi666Snj8PkXRRJaS0UYJxnlo75aCLZJtsDJ8zm470ofzBREvp7MS/bpZL6/vPAE3cVI3eiS/1bWSNEuGFS5ABRYWupSLJrCOZ1tkfoa4CFeH9rNfqPeHBS83ljxujVsOJsE7kTS/iD+KNnK6f57aP8F</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF06FEF59E769EE05307991F0A2F78</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF06FEF59D769EE05307991F0A2F78</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF06FEF59D769EE05307991F0A2F78</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF06FE53FC1A55E05305991F0AE3BD</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF06FE53FC1A55E05305991F0AE3BD</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124820</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF06FE53FD1A55E05305991F0AE3BD</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FF064AEB601A45E05305991F0A570D:89893127"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>87339ef0-463c-42c0-b9e0-38df8132987c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e41d2809-8fcc-4034-a3ce-b9638760f31c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00014_AccountUserCreate_with_country_AT_107_AccountDelete_111_SUCCESS_P0" searchProperties="true" id="5a277716-90b5-4d7e-9049-ca1e452f7bb4"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="f4ccb269-e2aa-4f57-a22c-0299c7730f8e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="8984c78b-9f93-45c9-a3de-01bda9bbf3a5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AT");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="dcf13fed-306a-4538-895f-a968d40afdd8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="87d264e8-1c65-42eb-93e7-40decb77ef3a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="eb50803c-3df2-4697-819c-8633f5179253"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="30a41bcb-5b3d-485b-b82e-5c7325433ecb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0TpYxXihGuigpRyaTlqCxsovbxsGceAN4kTbCdQvv7YoaFAaQ/7SEjIk/HMmovXzDWHYWC7HueYCRJRrduq678ryJ7YUwAM3/cdo1QrW4YDylXDmpQnyLYryLInutblPMFdygWkoq7bwCoZoGZYzsiquKWaa5cKFRu86doYMy5NS5UC0LV1GFDuZm7resKoG0FOuEthiLkrkDv0Hu5dqenCHJPeuN6izByyxlyI2DVNVPAxwkGACigKzWvzQOfa5+6QzCgUCcMfPn1e1z/urlarwqpYiNjMtAEAJnBMqeNzMrvUGxf5Zex36TTanpuQRpQgGJANVKAesJhHvuYFs4gRMQ+/MW2ZFlCmDbxGBrJK9FI3Px1k6M60dACScWjwObRyYwM8xQxThLWnQbeuX55Xwe3dEYOUTyMW8qPz30HCNMVBFGPf4HlkObrzLZ5IV+MaI7dLUZBwkuJH1SYxRJhrfYanZH1PuGw+n2tZ+bU1lz+SdxlGf1OWa3Mfq4RunshOi8wwF/+nZvv12loZwyDBjaQ6qYw6zSpFrzcvtF1LVx4fb67KT2/tegZhX3kLalfuj/Nxs+566+PSZMPny6vq3b03ehjc9WvLm1EwBDeLu8EzuEqaTyJKirPO4LbXcXqeH62GQVrrDRdPMRpP3zp0vFriF/iKUPm2KS5Y9W5TvLmP+7NksRl3rc27463aNus9dcaVTSqcSaXvhFfPz1UWhv1y0LtKR6XFy+CfWxSun28nxeJoNXn1nn6t8K8LxGblxwd/6bXnzavWImBht/4Z034Mh8KcEobJ5A9GIj+q9ui2tI6sFxQ/04uSEN+YZqpurDiKC0yF3lC3FLW4iSQg4ruymNszAJ12u+05tZoDJN05bVAugqrjWB3g1UCrknPQFsURxGZEp0T5Uiy77Z+fAaLQ5Zj6mBlplKA55voPFltQQK1LB/JxRJTjUSRZ3PIpWKfxe4hrC7x0wiQV8E+8duTzeIxEj/aYNxWYHVK3c0DdA4xITLDid9XgXHY4FzIXS5gmIrAKKSxQnMgJwBQJy3u1sslJGAdYITXDyE8CXIjncZYZk2//bQMinkkH7VH28L6N6/hbngKp4xOlwFUsN1iWEZ+YQVYeyLcB2/Z+wLl5L/GJel8yn4IRtEVy+OmzTVR/7HpERvS7Ofxt5bh36mdf/3rT/AGUeZyPnSM/JXtu82Eq54Nkj0ZezSUsLAtJmiZZ/aqKGZk0b1omqJpDjBJJb++jaIGpuTNhnjVddqiPPO/kh/gSMadDAQUOZbdp2fGM1WKIuVotuvKZrM/dWw5cyrwJvBanZM1AbiAK8Y9LCnKR0pPivvxbRcz/LNcJW3t+ZJxynxCEztRJzZH3b5oCRdIskcQXsX3jpwyccn4o3CV5h0XIbpokAn//RVOMVtchQlFCRbelZ4J9ls1wivcYu59KX8xkTP4xmtf829H88nA/lHwXQn2nS/5b2SBZuyCsqw0gw1LX13LTlM7pbI/VPwB+JfaKB5ptrwgsa5/Y7VLrZpfAg0gaX8RfJXs5PX4PjX8B</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FEEE6A0CEB3011E05307991F0A24DB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FEEE6A0CEA3011E05307991F0A24DB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEE6A0CEA3011E05307991F0A24DB</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEEA988902019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEEA988902019E05307991F0A80D6</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124823</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEEA988912019E05307991F0A80D6</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FEEF58795D3007E05307991F0AB1C2:8611331E"</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00015_AccountUserCreate_with_country_DE_107_AccountDelete_111_SUCCESS_P0" searchProperties="true" id="2ae2dc41-0031-40d3-b14c-13c669170f76"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="14bfc46a-cb2b-4653-b003-add31305166a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="f57e27e0-51ab-415b-b421-b4556df8d431"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","DE");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="4737cc16-218c-45f1-8ccc-89f785ef2ebf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="8761db3d-68d0-4cdf-84ce-219591911bc4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="b3b79318-0387-4678-944d-be778666c75f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="51ad5218-756a-4fa6-8b18-bd41f532627a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7Pr/C4jxnjC+bmCcxQLg3NpSnQhOYlI+Q1KLElR5KB9NdXMjEBQnLomckM0Xq1++1F3+6ZQEnsBW0hgEvCqDHoNs2HcOr6fsWvWmWYOpaP1H91p9KwwJv6UAffdaeRaQyEyGBAhURUNk3PcX3LqVtuY+xWA78eeLVSvdG4N41b4EKZViolxzRWSUxFkLttmhmnAUOCiICiBEQgcTBqX10GSjNABSazdbZGmTvkrbmUaWDbuBQChjjGJcwS+8ze0TkLRTAiM4pkxuHVZyia5uvd5XJZWpZLjM9sz3Ec22nYSicUZPbFbJ0UlyEc0Iitzx1EGSUYxeQP0qCuQM5ZaLTjGeNEzpMPTLu262jTFqywhV2ffjHtNwc5uiMt7YDkAllijtzC2BAi4EAxGL+Gg6b55bgKru+OOaIiYjwRe+d/gwR0ATFLIbREEVmB7niLB9LVOgMcDCiOM0EWcK3bJEUYhHHDISKrSyJU84XCyMtvrIT6I0WXAf6XspzZ21gVdPtAdrpkBkL+n5pt12tt5RbFGbTC096988z9P/T5Jp23R4988u3r7z5zystmDmFbeQ1qU+7X836zbnrr9dLi+TY+hXOIXurV7/LuF5p1fmUTd0imT/iPfVHutx+nk8vKTE7mF4ROaDs+R86yJv1u/Ta8Pb/LuvOkk8oBpOfdk57IGmiC2hdlT67GHP+eP9093VR/es7LeDL8JsLy9eNp/zY6b3/vlh/dxbBcx91VWIme+P1l9UVUvzr86tqNJ8vO48nPu3POl8mSwe/B0+Syi2zWfItpO4ZdYUEJo2z6CFgWR90eg67RV/VC8nN60RISWlGuGqSao4QEKs2WvqWpJcgUAZEwUMVcnx2n3+v1PfWynFrZcSs9p1J2ao2G23favtP3Cw5ao9iD2GE0ItqXZtl1/3wOECeBABoCtxYsw3MQ5icWu0giY0CH6nEwKmDMFIu7YTxdRLycJis8dyMvqhOCV5GTMNO4ZvIH/cHbkQS+y92NHe4eAiYpAU3wusOFanEhVTKe0SKTsVtaoBKFTI0Arlk48Px6xRYkSWPQUO2EhVkMpXSe5qmxxfrXsxAWuXTYG+cv78PA9r8VOVA6IdEKQsfyFVQd4cAQcotAPgzY87YDLsy3s5DoB6YSKjnBayS7n976RDfIpklURA+d0YNb4N6oH339/U37E1D2fj42jsIF2XJbTFM1IBR9tIpqPqPScylbLLK8fjVNjVyZt13bqdkjwJnit5cxewJqb0zYR42XDeo9zxv5Lr5MzulIIgmJ6jYjPx6xW4xA6N1ioN7J6tjFZcelypuElTwk68RqBdGIP91ScIC1nhLfqJ8l4+FbuQ7Y2vKj4lQLhSR0pk96kLx80BSYKbNEMR/j28YPGTjkfFe4SfIGi1TdNM0kfPzF0JTWNBHGLKNy0DVzwTbN5jjlSwrBm9I7MzmVv87mlfhwNk+uLkeK8BJkbnTJfytbJG8XDKZeAXIsTXOlVk3lnM62aP0V4Dtm77UbajZ1VbPVtpm9Wmm8PeadSFrvxO8lWzndfw+tvw==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FEEEA96B0E2017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FEEEA96B0D2017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA96B0D2017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEF2144073015E05307991F0A40F4</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEF2144073015E05307991F0A40F4</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124827</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEF2144083015E05307991F0A40F4</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FEEEA96B282017E05307991F0A6591:14544C3A"</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00016_AccountUserCreate_with_country_CH_107_AccountDelete_111_SUCCESS_P0" searchProperties="true" id="eba80476-8a61-4ed0-90c6-01d485dbb886"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="eec2e076-0cbf-4075-95da-51583df3f28c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="dd0e7f3b-3e92-4c83-ac0e-17569108498d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CH");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="eb7936af-4cec-464a-9ec7-2a79b7fa6f28"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="af00aec8-ab4d-462b-86e8-8d4ef305d2c8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="ea71ab0a-53dd-48be-b365-f703d7158fe6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="ba42b650-eec6-46ef-b930-85d741ad750d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH69CPvgIiQoSBXpvSsu2ULrVvqyMMwS3iQ2xE6C//tqhoUBpL3slJOTJeObMzPGxLzhKYsfvcA6pIIxqQa+l/w4djOxpFRnhtOEatarbMLzQcY1GvVqrNSyAZrOpawHnGQSUC0RFS3csu2ZYTcP2HuyGX2v6VbvSqFm/dO0RUi5DS5eKpWvrJKbcL9K29CylPkOccJ+iBLgvsD/u3N740tNHJSa9fbFFWSRM23MhFr5p4koIGOIYVzBLzAvzwOci5P6YRBSJLIW3nCFv6W97V6tVZVWtsDQyHcuyTMszpU/ISfRdb38rN0MY0BnbrruIMkowiskrUqBuQcxZqHXiiKVEzJNPQtumbanQBqyxge0a/a6b7wkKdGdGOgCZcmTwObLLYCOYQQoUgzYZBS39+3kT3O59SBHlM5Ym/Gj9Z5CA5hCzBYQGLysr0Z0f8US72heA/YDiOOMkh6GiyQJh4NpdCjOyviFcki/kWjF+bc3lj5QsA/wnY7kw97FK6OaJ7vRIBFz8n5ntz2sb5RHFGbSX979eY3P6c2ZO+vlPUo8Gf78MF5e2Xe+0Cgj7zltQu3G/rY/JuuPW2yZR7TyN+OYHi7q3t0nteTi42kTxnDxa1Wn63HwZPj/1ogfqvuSQUW9FrRA/uoO/JpN8XL13q7Ofz92Ur+jwCvWsb6J3nTZWgc29zf1oOXAvefK6eV4tL6/v7y+tXv0q9mBoO0n/bhbXkrwbzDqTeOpONox4q+COLtPazV02+GfU6K2+TZ5obT5YP7GJ7UxZ/Trv37bea9qv4dBYSsI4mz4DFuVS0SPoaVdyXkh8LS/KQkJjVrj6C6VRXAAVelvtUtLiZ1KASOjLYW7XlnXV7/cbbsN2elW1sOpVy/U8+8rquJe2W2rQFsURxC6jM6JyKZXd8udrgDjxOdAQUiNnGZ4D17+I2EMCaQEdycPBKIcHJlV8bVVR5LxYwqaevajP3Ol0GcF0qWtDJn7QH2lnJiA9VG7vQLlHgMmCgJJ3xW8uCc6FbMUS5ZmI7UqOKhQyeQGkSoN9p9asm5wkixgUUDNhYRZDZTFfFI0x+fbfMRDmhXXUfyjO3adlHX8rOyB9QqIcuKrlEuQU4cQV5JSFfFqw4+wXXIbvZCFRx0u2U6QEb5EcfnpniaLHjiKyot/d8W+7xL1zP3v7x53mF6DM437sEoU52Utb3qXyepDi0S6nuUSVZSXL86yYn6uEMZXhTdu0XHMMOJPqtnlgL0DNXQjzrMtlh/oo885+iC8TczoWSEAi2aYVyzNeFmPg6mURyFOyPvfZcpBS9k3AWpyydWP5AFGIv3yjYB8rP2m+k38rlobv4zoRay+PrFM+JwShkVqpa2TzCSkwk2GJ1D2W7gc/FeBU8kPjrsk7LEKyaZoJ+PyLpgStpSOMWUZF0NMLw77IFjjFZgH+u9OHMIWQv93Ma/7pzfx0ezOWcpcgfedL/tvZIAVdMOjqAVBgaelr+dCUyWm0J+pvAD/qesdrNvu2JJu3r+tNq9fYNfCgkvYH80fLXk+Pz0P7Xw==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FEEEA988E22019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FEEEA988E12019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA988E12019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEE67612D300FE05307991F0A7B17</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEE67612D300FE05307991F0A7B17</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124830</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEE67612E300FE05307991F0A7B17</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FEEF1CDC093017E05307991F0A1DD2:D8BF96BB"</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00017_AccountUserCreate_with_country_FR_107_AccountDelete_111_SUCCESS_P0" searchProperties="true" id="6d47fce9-56a9-44d9-bd8c-b20369c39d7a"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="33511149-5e2c-4a09-9bd2-ed08df345cc5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="ff75b511-652b-48d2-98ba-c0a3f001086f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","FR");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="6ba22e8f-4f8b-4336-adc5-49481acdae15"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="24576b62-62c2-4d17-b474-6af49b1c318c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="04adb182-62fa-40e8-9850-c00d652cf3e8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="2adf4fe0-d053-47e1-b359-320c575d9932"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb9pKEH7vr7DcxyPjC+ZiKyBxAkT0JKUFStK8VMt6DEvsNdkLmP76s2tiAoTk0CMhoR3Pznxz2W/miqM08cIO58AEyagx6LbMX1Ucey5ykNWYOWD5QYQsFNd9K3DqM69exW7URKYx4FzCgHKBqGiZnuP6ltO03GDi1kO/GVb9Sr3hPZrGFBhXppVKxTGNPE0oDwu3LVMyGmaIEx5SlAIPBQ7HnbvbUGmGqMRktq92KAuHrL0QYhXaNq5EgCFJcAVnqX1lH+lcRTwckzlFQjJ48Rnxlvlyd7PZVDbVSsbmtuc4ju0EttKJOJl/NtufyssQDWic7c7XiGaUYJSQ30iDugOxyCKjk8wzRsQifce0a7uONm1Bji3s+vSzab86KNBdaOkIJOPI4gvklsZGEAMDisH4MRq0zM+XVXB3d8IQ5XHGUn5y/jNIQNeQZCuILF5GVqK73OKZdLWvAIcDihPJyRq+6jZZIQzc+MYgJvkt4ar5Im4U5Tdyrn6k7DLAf1KWK/sQq4Jun8lOl8yBi/9Ts8N67axMUSKh/XC/zO2vbCs9dPeU9dljLXiQ+caNnp1WAeFQeQdqX+6X82mz7nvr5dLy+y2v/jOU/s1oEKPp9EbeD+/71Xq36cWz2UPvMbe/rKbf0uugtp0NH4JO/rPzZVqLl6NuPf1r9Hiz+X3fJ7PpcIzcT9+by95sWF9f9+IfEzdFneHYfdr2lt3ozmvYS/6Q9nwsN9NbkM6yv4bZ47DGoucs29ykT25VRpOfzUX0GDS//7z/RDzKZHL/JWqMpn9vxpvxyGm9xnQYw7GwpISxnC0Bi/Ko22PQNfqqXkh8TC9aQiIrLlTDleYoLoAKs61vaWoJpSIgEoWqmLuz4/R7vV4naDb7VUV3Qc+pVZ1GELh9p9N0uvWSg3YoTiBeZzQm2pdm2V3/fAwQpyEHGgGz1pnEC+DmBxa7SCBjQEfqcWSUwyRTLI7Xte3TPHFmsZvXF1XJWe2JL1SExtdMDOmQdWIB7Ji5gyPmHgEmKwKa3nV/c9XgXKhUPKO1FIlbWaMKBakGANMcHHp+s2Zzkq4S0EDtNItkApXVYlUkxua7f89CmBfSUW9SvLt3wzr9VmZA6UREK3Ady9+gqghnRpBXBvJuwJ53GHBpviMjop+XSqdgBO+QHH967RLdHvsWURH9uh7/ckvce/WLr7+9aX8Ayj7Nx95RtCYHbstZqsaDIo92Wc1nVHmuyPVaFvVraGJkyrzt2k7DHgOWit22k+wJqL03YV80XPaoTzzv5cf4pFjQsUACUtVtRnG8YLMYA9ebxUC9kvzSteXIpcqbgFyck10nagHRiD/cUXCItZ4Sf1N/m4xFr+U6Y+vAj4pTrROC0Lk+6TGyfacpcKbMEsV7GTs0fs7AOefHwn2S91iE6qaZFPD+F0MTWstEGGeSikHXLASHJFvgFNsVhK9Kb8wURP4ymXP+7mR+uLsdK7pLkbnXJf+tbJGiXTCYegEosLTMXC2ayjmdH5D6C8A3vN73XN/3qlXHrR3yuu/0/X0CjyJpvxG/lRzk9PQ9tP8F</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FEEF2144243015E05307991F0A40F4</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FEEF2144233015E05307991F0A40F4</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEF2144233015E05307991F0A40F4</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEEA988F32019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEEA988F32019E05307991F0A80D6</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124833</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEEA988F42019E05307991F0A80D6</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FEEE6A8BE23009E05307991F0AA538:7261A6B3"</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00018_AccountUserCreate_with_country_NZ_107_AccountDelete_111_SUCCESS_P0" searchProperties="true" id="f922a298-24d6-498b-95a7-9cf92def5131"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="6d87c0ce-3546-4ddf-b07e-61273cb204e0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="f7b52585-f78f-4220-a282-882b94237c46"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","NZ");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="a9a218ac-7f3a-43c7-9277-c5cfd6ef9a8b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="52da4b9b-01ae-4a90-86e9-dccc842b797c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="760260b9-8b7a-40ab-ba90-94c31ce3a800"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="18b8f2d7-1540-4a7a-839c-e7f5b2f2417b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtc6o6EP5+fgVDP55BQLAgU52h1d7aamvFel6+dGJYJacYlATF/vqbYLFqba/nzjjjZNnsPrv75EkuGJrFVc9nDFJOEqp0Wg312UC10A7hXJvU6qFmT5Cjjc8tR7PquOY4zsQeWxNV6TCWQYcyjihvqFXDtDXD1cz60Dz3bNez3ErVNn+ryghSJkILl4qhKvkspswr0jbULKVeghhhHkUzYB7HXuD3up7w9FCJSW1ebFAWCdNmxPnc03VcCQFDHOMKTmb6hb7ncxEyLyBTiniWwlvOkDXUt72r1aqysipJOtWrhmHoRl0XPiEj0zO1+a3cDGGHTpLN+grRhBKMYvKKJKge8CgJFT+eJinh0eyT0KZuGjK0BjnWsGnTM1V/T1CgOzHSHsiUIY1FyCyDDWACKVAMytOg01DPTpvgZu8wRZRNknTGDtZ/BwnoEuJkDqHGyspKdKdHPNKu5gVgr0NxnDGyhHtJkznCwJR+ChOSdwkT5AuZUoxfyZn4kZJlgP9mLBf6LlYBXT/SnRaZAuP/Z2a789pEGaE4g6Zgb8pv10E9Wfd76KWt++3LkKDF9LvfKCDsOm9Abcf9tj4k65Zbb5u4u67mqEVfmT2O44VrtHl3ZA07lxG7tx8Tko+y+95riK3v1mD0kHf9tG/f/H5Kkf+z/mf+I78PfEH+YKy37vJvWId6/Bre3dRaHbYk01E4/tWN+uy2+yN9XN9FMSUGi/Nfo1bXvn2Juquu0RanJniki0WUx/2bhfsPdMlwEo7r38hj8OQ7y97aWT6MbtrIrD013mvarWHfWEpCkI3/AOblUtKj01KuxbwQ/1pepIWE2qRw9eZSoxgHytWm3CWlxcuEAJHQE8PcrA3jut1unzvnZs215MKoWYZTr5vXhu9cmk6pQRsUBxCvEjohMpdU2Q1/vgaIZx4DGkKqLZMMR8DULyK2EEdKhw7E4Ugog2EiVDyKkPs6A0BzyxJKujLquctILpT7PuEP9CH1JxzSfeWu7yn3ADCZE5DyLvnNBMEZF61YoGXGY7OyRBUKmbgAUqnBXtV2azojs3kMEqg+S8Ishso8mheN0dnmv6ohzArroD0szt2nZR1+KzsgfEIiHZis5RLEFOHIFVQtC/m04Gp1t+AyvJ+FRB4v0U6eErxBsv/pnSWSHluKiIqer4Jns8S9dT95+8ed+heg9MN+bBOFS7KTtrxLxfUgxKNZTnOBKotKtlxmxfwcKYypCK+buuHoAeBMqNt6mLwA1bch9JMuly3qg8xb+z6+jEc04IjDTLBNKZYnvCwCYPJl0RGnJD/12bKXUvSNQ86P2a5i8QCRiL98o2APSz9h7ou/VZKG7+M6Emsnj6hTPCc4oVO5ktfI+hNS4ESEJUL3knQ3+LEAx5LvG7dN3mLhgk3jjMPnXxQpaA0VYZxklHdaamHYFdkCJ1/PwXt3+hCmEPK3mzlnn97MP3vdQMjdDKlbX/Lfzhop6IJBlQ+AAktDzcVDUySn0x1RfwP4Udf9c7vquoJsl7u6Xru8srYN3Kuk+cH80bLT08Pz0PwX</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FEEEA64289201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FEEEA64288201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA64288201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEE676158300FE05307991F0A7B17</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEE676158300FE05307991F0A7B17</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124837</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEE676159300FE05307991F0A7B17</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FEEEA642A3201BE05307991F0A5BC3:3CDFB1E6"</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00019_AccountUserCreate_with_country_IE_107_AccountDelete_111_SUCCESS_P0" searchProperties="true" id="5fae5b96-7d37-4fdd-9da0-ac29f92145ca"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="ac9406d2-92c2-473c-99df-43321a5a2a7f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="093de709-7ef4-4ca2-a6e6-f5df7c5017ce"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","IE");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="3d7e2bbf-b4bf-4c0c-8c56-0a80bcdf5206"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="9437a3d9-98f2-4681-965b-7dc41e9e49eb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="15eae602-037b-49d9-ae62-d99798540010"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="81caa100-79a7-49b2-ba48-e1f66be7f877"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH1fB+YACUUFKgarp9pOw3XZfVsYZwGzihNghtL9+7dBQoLSXvRIS8mQ8c2bm+NinHMeR7XqcQyZowjS/39F/txzbBOKMjQnB2KiPsW20Wm3TwGY4rjdxo203HV3zOc/BZ1xgJjq6bVp1w2wZVntknbj1llu3am3H/qVrD5BxGVq61ExdW8UR426ZtqPnGXMTzCl3GY6Bu4K4gXd95UpPF1eY9O7pGmWZMOvOhEhdhEgtBAJRRGokidEp2vE5Dbkb0CnDIs/gNWfIO/rr3qIoaoVTS7Ipsk3TRGYbSZ+Q0+lXvful2gyhzybJet3DLGGU4Ii+YAXqGsQsCTUvmiYZFbP4g9AWskwV2oAVMYhVZ1919JagRHdkpB2QGccGn2GrCjaECWTACGg/hn5H/3rcBNd7RxlmfJJkMd9b/xskYEuIkhRCg1eVVeiOj3igXd1TIK7PSJRzuoQbRZMUE+DaXQYTurqiXJIv5Fo5fm3F5Y9WLAPyL2M5RdtYJXR0oDt9OgUu/s/Mtue1jvKAoxy6q7F4ubh8WBU3Q+vPXbGY3xL7iSD7ZXnfKSFsO69Bbcb9ut4n64Zbr5seJqNoGafmCIL+vDmYxc93S0TFWdD76b/kN7cosWdPvjn6/jDL6+2gyX1yfea16M9FdA7jYbq8KMzn4he98ybNL/Pey1ycneTMfgwuLtOhZ3IezX1+//ir1bev52Rw6V0MkFc8on699/3bU9G4ZPfN3n32dHZmkuBy8q138cB/OFNKvrQGYdC74s+4dx2EV07PgkHnrabtGnaNlSQE+XgORFRLRQ+/r53LeWHxubwoCw2NSenqpkqjuAAm9K7apaTFzaUA0dCVw1yvTfN8MBiceLbjNR3TcgZmwzGb7bZ1bnpOv9GoNGiNYg9iL2ETqnIplV3z53OAJHY5sBAyY5nkZAZc/yRiHwus+WwoD0fCOIwSqeJpYc+z3Obx4k8dGrOiCMUinJCFrt0k4pbdZt5EQLar3O0d5R4CoSkFJe+K31wSnAvZigVe5iKyaktcY5DLCyBTGuza9VYDcRqnESigKE7CPIJaOkvLxiC+/rcNTHhpHQ5G5bn7sKz9b1UHpE9IlQNXtZyBnCIcuIKcqpAPC7bt7YKr8F4eUnW8ZDtFRskaye6nN5YoemwoIiv63Qt+WxXujfvR29/vRJ+AQvv92CQKl3QrbXWXyutBike3muYC1xa1fLnMy/k1lTBmMjyykNlEAZBcqtvzKPkDDG1CoKMulw3qvcwb+y6+XMxYILCAWLJNK5dHvCwC4Opl4ctTsjr22bKTUvZNwEocsvUi+QBRiD99oxCXKD9pvpN/RZKFb+M6EGsrj6xTPicEZVO1UtfI8wekIIkMS6XuJdl28EMBDiXfNW6avMEiJJvGuYCPv2hK0Do6JiTJmfD7emnYFtkSp3hOwX1zehemFPLXm3nFP7yZH6+vAil3MdY3vvS/nQ1a0oWArh4AJZaOvpIPTZmcTbdE/RXge1332q12vS7J1t7W9ZbZP9k0cKeS7jvze8tWT/fPQ/cv</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FEEEA989452019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FEEEA989442019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA989442019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEE6A23A73013E05307991F0A3D55</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEE6A23A73013E05307991F0A3D55</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124841</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEE6A23A83013E05307991F0A3D55</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FEEF58796F3007E05307991F0AB1C2:89235810"</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00020_AccountUserCreate_with_country_AU_107_AccountDelete_111_SUCCESS_P0" searchProperties="true" id="885b8bc6-a608-4f93-8af0-c8152cf444f7"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="bda12b20-e270-4f23-aaf5-54026bb2bd8d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="faf103cd-fed7-4b12-a0d9-4d7f009a22c1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","AU");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="e685bf77-46a2-4dd9-93f5-4236e3aa53eb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="165d3add-e093-42a5-bda1-0b62b27c8bc5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="0d8cc888-ea61-494f-9b2d-2f7c2abc521e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="25ac5704-4460-4a00-8172-72e6781e25c0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4jxkjGwwOnsCMCdBLmzQp0IbkpSPkNaixZUeSgfDrr2RiAoTk0jvDDKP1avfsh87uhcBJXPUDIYBLmjJj0G2ZvxteFLlR6FjgOY7letixzqOQWCRyqrgG0RScpmkMhMhhwITETLbMqu24ln1uOc2x0/Ddc9+tVzzPeTCNX8CFMq1UKrZprJKYCb9w2zJzzvwUCyp8hhMQviT+KLi+8pWmj0tMZvtig7JwyNtzKTMfIVIJgUAckwpJE3SB9nQuQuGP6IxhmXN48RmKlvlyd7lcVpa1SspnqGrbNrKbSOmEgs4+m+1P5WUIByxKN+dLzFJGCY7pGmtQ1yDnaWgE8SzlVM6Td0w7yLG1aQtWKn2Oyz6b6NVBge5ES3sgucCWmGOnNDaECDgwAsbP4aBlfj6tgpu7Y46ZiFKeiIPz30ECtoA4zSC0RBlZie50i0fS1b4A4g8YiXNBF/Bdt0mGCQjjlkNEV1dUqOYLhVGU31gJ9aNllwH5m7JcoF2sCjo6kp0unYGQ/6dmu/XaWPmF4xzaeLhej68n90lzGXy7+RIieLon/X9yTnutAsKu8gbUttwv58Nm3fbWy6XB4/jbDAaimt+Hy3A2wOjxhk8nSXZ3/4T72Sh6qH1ZPvyYZg0WrOfpt6vHmYxvZ87ts6idSW8yOceraf1Pgn7W7j51vwZ4SR6//uLZejHuzPuoeResnyb1qHPG7Zs87d7OF9kZDRaN+pp3pivWlR07mJyF7vX9ZDLMR7w3jtMfD6vL0SeWLEkNNVz64PTv1ldeHbut15h2Y9gXlpQwyqd/gMjyqNtj0DX6ql5YfkwvWkJDKypU/UxzlJDApNnWtzS1+LkiIBr6qpibs233e71e0HCrnaqiu07Prtdsr9l0+nZQ71zWSg7aoDiAeJmyiGpfmmU3/fMxQJL4AlgI3FqkOZmDMD+w2MUSGwM2VI8jZQLGqWJxR5DHaX2Wu81F9dxhS3Ait2ZHf8KpaXxP5Q274UEkge9zd3OPu4dAaEZBE7zucKFaXEiVjCe8yGXsVBa4wiBXI4BrFvar7nkdCZpkMWioKEnDPIZKNs+K1CCx+a9amIhCOuyNi5f3bmCH38ocKJ2QagWhY+mAqiMcGUK1MpB3A65WdwMuzQd5SPUDUwmVnJINkv1Pr32iG2TbJCqi35ej306Je6t+8vW3N9EHoNBhPraOwgXdcVtOUzUgFH20y2o+4cpTJV8s8qJ+nqZGrswjB9keGgFRNCSfx+kjMLQ1gU4aL1vUB5638n18uZyzkcQSEtVtRnE8YbcYgdC7xUC9k9Wpi8ueS5U3CSt5THYZqxVEI/5wSyE+0XpKfKv+likPX8t1xNaOHxWnWigkZTN90oPk+Z2mIKkySxXzpXzX+DEDx5zvC7dJ3mKRqpumuYT3vxia0lomJiTNmRx0zUKwS7MFTvmcgf+q9MZMQeUvs3kl3p3Nk+urkSK8BJtbXfrfyhYt2oWAqVeAAkvLXKlVUzlnsx1afwH4ltkbXsPxFEWqww6zex3H2yZwL5L2G/FbyU5OD99D+18=</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FEEE676175300FE05307991F0A7B17</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FEEE676174300FE05307991F0A7B17</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEE676174300FE05307991F0A7B17</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEEA642B2201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEEA642B2201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124844</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEEA642B3201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FEEE6A0D123011E05307991F0A24DB:CC2F4B84"</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00021_AccountUserCreate_with_country_CA_107_AccountDelete_111_SUCCESS_P0" searchProperties="true" id="4766c0b1-4cc3-45a3-936d-b96cbd76437b"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="2d9f7250-a94a-4681-b867-f5e755473970"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="0f2bc0ab-5a1a-48c8-a325-bc8c5f6bdf4f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","CA");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="ea7642fd-ffaf-48b8-871e-964f3dc68dcd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="ee1b56cc-8edb-4fac-9ab5-0e95d54faad0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="76f22dba-bea2-492a-bd54-5079e0bb20a8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="d29d40bd-d433-481c-baef-3e80a208d299"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o8EH3Pr2Dcx46RL8RgT2CGa+MOuZRLaPuSEfICSm3ZsWQu+fWVTEyAkHz0m8kM0Xq1e3b36EhXHEeh5TU5h1TQmJX8Tl17nBELV6FGdMMkll6Z1kB38QzrOLADq2JfkupsqpV8zjPwGReYibpmGWZFN2q66Y5Mx6vUvIpbNivV31rpAVIuQ0uXsqGV1lHIuJenrWtZyrwYc8o9hiPgniDesHnT96SnhwtMWuNqizJPmDYWQiQeQqQcAIEwJGUSR+gKHfhcBdwb0jnDIkvhNWfA69rr3tVqVV7Z5TidI8swDGS4SPoEnM6/aI2LYjMEPpvF23Ubs5hRgkP6ghWoGxCLOCg1w3mcUrGIPghtItNQoXVYE52YFfZFQ28JcnRnRjoAmXKs8wU2i2ADmEEKjEBpPPDr2pfzJrjdO0ox47M4jfjR+t8gAVtCGCcQ6LyorEB3fsQT7WpcAfF8RsKM0yXcKpokmAAv3acwo+s+5ZJ8AS/l4y+tufyjBcuA/MtYrtA+VgkdnehOh86Bi/8zs/15baM84DCDhj98CsIJJINF52f/eoMGk1+R39lcrxyjnkPYd96C2o37dX1M1h23Xjc9VCbX9stNu2f6zo/ROIHbh/H0t/mN+ZMOejZH1Eo6Trfbf7kZ8f633v0m6veXPww0vhyKX62Ns1lnAW499ScmDS+az5P2vf+9GTit6VO0epkuoDWd2n6bRy+O2/OHl+N5KzDssPP17jt9GoXLQYjR/e1i7tgPf/jXSS/cuHfT4WD807hAt6n9bVG9HvfE0ugOlnd33fpbTfs1HBoLSRhm0ycgolgqevidUk/OC4vP5UVZaKDPclcvURrFBTChNdQuJS1eJgWIBp4c5nZtGL1ut2cZtlFt24bR6hqX8l/XNXtG02q324UGbVEcQWzHbEZVLqWyW/58DpBEHgcWQKov44wsgGufROxggUs+G8jDETMOo1iqOMlsh0a1wF3ba9N1gthxEggdV0r3bSzu2F3anAlID6XbPZDuARCaUFD6rgjOJcO5kL14xstMhGZ5icsMMnkDpEqEPatSu0ScRkkICimK4iALoZwskrwziG9/LR0TnlsH3VF+8D6s6/hb0QLpE1DlwFUtLZBjhBN3kF0U8mHBlrVfcBG+mQVUnS/ZT5FSskVy+OmNJoofO47Iih7bw0ezwL1zP3v7+53oE1DouB+7RMGS7qUtLlN5P0j1aBTTfMbl53K2XGb5/KpKGVMZHpnIqKIhkEzK22YU/wGGdiHQWbfLDvVR5p39EF8mFmwosIBIsq2UL894WgyBq6eFL4/J+tx3y0FK2TcBa3HK1g7lC0Qh/vSRQjyi/KT5Xv6s4jR4G9eJWHt5ZJ3yPSEom6uVukc2H5CCxDIslcIXp/vBTwU4lfzQuGvyDouQbJpmAj7+UlKKVtcwIXHGhN/RcsO+yuY4xSYB783pXZhcyV+v5jX/8Gr+edMfSr2LsLbzpf/trNOcLgQ09QLIsdS1tXxpyuRsvqfqrwDfCXu36dZcpy3J5u4Le83oOLsGHlTSeGd+b9nr6fF5aPwF</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FEEEA9896D2019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FEEEA9896C2019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA9896C2019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEF20307C300BE05307991F0A2CCC</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEF20307C300BE05307991F0A2CCC</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124848</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEF20307D300BE05307991F0A2CCC</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FEEEA96BAF2017E05307991F0A6591:E643DFFD"</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00022_AccountUserCreate_with_country_GB_107_AccountDelete_111_SUCCESS_P0" searchProperties="true" id="e54d2c4f-1db9-472a-ad0f-85d62726b936"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="f42f3e7e-0659-4091-b175-e6d69765f73e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="f6d5caf8-c92f-4e22-b13d-ba1d194a982e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","GB");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="2288aee4-8d12-4884-816d-d9dac6dded3f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="485872e6-b50f-4c32-a1bb-0bf0b4d5e6bd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="a86cc4bd-7c65-405c-a653-e2b62205b90b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="4c8d850c-6c48-4e45-b25c-e9cb6c502d77"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH1fBSfgIRAWJAr2bbYEWum3py8o4hrhN7GA7QPvrrx0aCpT2sldCQp6MZ87MHB/7TMAkdv22EJhLwqgRdJvmn/K0XPPCatmquo5rVbAHLYhg3SrXp14YogpCNcc0AiEyHFAhIZVN07WdimXXLadx69T8St2vuiWvWn80jTvMhQqtXEq2aayTmAo/T9s0M059BgURPoUJFr5E/rjdv/KVpw8LTGbrbIMyT8hbkZSpDwAqhRjhOEYlxBJwBvZ8zkLhj8mcQplx/JYzFE3zbe9qtSqtyiXG58C1bRvYDaB8QkHm383Wt2IzDgM6Y5t1B1JGCYIxeYUaVB/LiIVGO54zTmSUfBLaAY6tQ1t4jSzkVOh3E7wnyNGdGGkPJBfQEhF0imAjPMMcU4SN36OgaX4/bYKbvbccUjFjPBEH67+DhOkSxyzFoSWKygp0p0c80q7WGUZ+QFGcCbLEA02TFCIsjGuOZ2R9RYQiXyiMfPzGWqgfKViG0d+M5QzsYlXQwZHudMkcC/l/ZrY7r02UOxhnuPXjMkU/Lycuvvktuo93cX8u0xGMhgG7aeYQdp03oLbjflsfknXLrbdNslF9uHUue48cpSBuQ4/QeRSwfnB1VX34cZ9N+j8Hv53ryuQiXHWr1/f9ZHDjwZdpe/L8eHk/Ac+LR/iTLhp2pep96z/NZv8kncXk+WE4Eqs18PgSeLXGC2mvhy83dvXuvI4qTzIl2eD8qibTyit9itjz0+N9OGeMZYsx+dF7qNQG0963MIkGQ3cAkgm9exr+qr/az833mnZr2DcWkjDOpk8YyWKp6RF0jQs1Lyi/lhdtIaE1y139VGuUkJhKs6V3aWnxMyVAJPTVMDdr277o9S6cTrfjnJdtx+vZ1bLtNRrOhd12ul230KANigOIHUZnROfSKrvhz9cAUeILTEPMrSXLUISF+UXELpTQCOhIHQ5GBb5lSsX5so5wNJ0KxxZOSKOEMm9q84SbxoDJIR3y9kxivi/djT3pHmFEUoK1vmuCC8VwIVUvFnCZydgpLWGJ4kzdAFyLsO9W6lUgSJLGWCMFCQuzGJfSKM07A8Tm31VaJHLrqHebH7xP6zr8VrRA+YREOwhdyzlWY8RH7qBKUcinBbvubsFF+HYWEn2+VD8lJ2iDZP/TO000P7YcURX96Yz/OAXurfvJ2z/uBF+AAof92CYKl2QnbXGZqvtBqUermOYClhalbLnM8vl5Whm5Cg8cYHtgjFGm5O3llj1jCrYhwEm3yxb1QeatfR9fJiM6llDiRLHNyJcnPC3GWOinRaCOyfrUd8teStU3idfymK0TqxeIRvzlIwX5SPsp87X6WzEevo/rSKydPKpO9Z6QSor1St8jL5+QAjEVlijhY3w3+LEAx5LvG7dN3mKRik3TTOLPvxha0ZomRIhlVAZdMzfsqmyOU76k2H93+hAmV/K3q3ktPr2aH/pXY6V3CTS3vuS/nS2S0wVhU78AcixNc61emio5ne+o+hvAD8LeazfqjUZVka2xK+x1u1vbNnCvktYH80fLTk8Pz0PrXw==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FEEEA989962019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FEEEA989952019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA989952019E05307991F0A80D6</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEF1CDC1B3017E05307991F0A1DD2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEF1CDC1B3017E05307991F0A1DD2</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124852</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEF1CDC1C3017E05307991F0A1DD2</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FEEF58797F3007E05307991F0AB1C2:3658F2AC"</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00023_AccountUserCreate_with_country_US_107_AccountDelete_111_SUCCESS_P0" searchProperties="true" id="36394128-3a6b-4d80-be82-87da73dd1dd5"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="e8bbd4c8-655b-411f-8120-7689092dd40c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="6c36d806-b011-4432-8a51-6364d79fa4c0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","US");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="95134573-ba9c-4992-bd0f-42322c26b3fc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="255600fc-af36-4808-bba0-0992331ddf80"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}


myTC.setPropertyValue("CS","N");
myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="bd522380-2b4d-47d3-bb0c-767e3547cc70"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="9da342ed-2be0-4472-afc3-91bc113e3685"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	
}
else
{
	
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	
}

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+o4EH3vr4jSxyo4CSFAVJDCV5eWtizQ7tW+VK5jwG1ih9gByq+/dmhSoNDlroSEPBnPnJk5PvY1h1Foez7nOBGEUa3faegv1mu5hhAKjJqJXMMJalWjbk4rhmvbdi1wXYjcmq71OU9xn3IBqWjotmk5hlkzrPrEcj2n5lUqJdet/6trzzjhMrR0KZm6to5Cyr0sbUNPE+oxyAn3KIww9wTyxv79wJOeHswx6c3rLcosYdKcCxF7AKBSgBEOQ1RCLALXYM/nOuDemMwoFGmCP3MGvKF/7l2tVqVVucSSGbBN0wRmHUifgJPZpd68yDfjoE+nbLtuQ8ooQTAkG6hA3WMxZ4HmhzOWEDGPToS2gGWq0AZeIwNZDr3UwVeCDN2ZkfZAJhwafA6tPNgIT3GCKcLa06jf0C/Pm+B27ySBlE9ZEvGD9Z9BwnSJQxbjwOB5ZTm68yMeaVfzGiOvT1GYcrLED4omMUSYa8MET8l6QLgkX8C1bPzamssfyVmG0Z+M5RrsYpXQwZHudMgMc/F/ZrY7r22UZximuBnfX/n0Neo83dwth7dXzmJloqtBnbo91Mgg7DpvQRXj/lwfkrXg1uemBVzE43C+qabW5C4RwWJZToXTBnZ4s/Q747/CHumvNlcPTt2/H/kbd4bNqT0NRx/zzXhV+WdY7gNwO+nZ49YGXUxYeTjlbxZdtFc3PWdzk9yNKg6tuOThVxhuhvxx3aLkGbyVg1Fv/f48CAV9oJPb6KHnDt7iZ799f7tYDNkT6iYXf29G74jYvDeaRf5oQFp3rPFV024N+8ZcEsbp6xtGIl8qevQ7Wk/OC4qf5UVZSGBMM1cvVhrFBaZCb6pdSlq8VAoQCTw5zO3aNHvdbtevu61WV8pdtWtWyma1Xrd6pu9W6lauQVsUBxDbjE6JyqVUdsufnwGiyOOYBjgxlixFc8z1HyJ2oIBan47k4WCU4wmTKl4ul1fVatXhmLC5VUveqfMxm0Op3A9MPNLHxJ8KnOwrd31PuUcYkZhgJe+K31wSnAvZigVcpiK0SktYojiVF0CiNNiznVoFcBLFIVZAQcSCNMSleB5njQF8+28bEPHMOupOsnN3sqzDb3kHpE9AlANXtbSwnCI+cgU5eSEnC7bt3YLz8H4aEHW8ZDtFQtAWyf6nL5YoehQUkRW9tMcvBRUK97O3f98JfgAFDvtRJAqWZCdtfpfK60GKRzOf5gKWFqV0uUyz+VWVMCYyPLCAWQVjjFKpbh8T9o4pKEKAsy6XAvVB5sK+jy8VczoWUOBIsk3Llme8LMaYq5dFX56S9bnPlr2Usm8Cr8UxWzuUDxCF+Mc3CvKQ8pPmofxbsST4GteRWDt5ZJ3yOSEInamVukY+TpACMRmWSN1jyW7wYwGOJd83Fk0usAjJptdU4NNfNCVoDR0ixFIq+h09M+yKbIZTfMTY+3L6FiYT8s+bec1P3sy/7gdjKXcR1Atf8t/OBsnogrCuHgAZloa+lg9NmZzOdkT9E+A3Xe/ZluM4ftm0Kru67pg9p2jgXiXNb+bvlp2eHp6H5m8=</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FEEF21444B3015E05307991F0A40F4</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FEEF21444A3015E05307991F0A40F4</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEF21444A3015E05307991F0A40F4</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEEA96BBE2017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEEA96BBE2017E05307991F0A6591</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124854</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEEA96BBF2017E05307991F0A6591</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FEEE6A8C033009E05307991F0AA538:C2E9391F"</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties><con:property><con:name>role</con:name><con:value>nodeIdRTL</con:value></con:property><con:property><con:name>Country</con:name><con:value>AT</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:RET_CS_1</con:value></con:property></con:properties><con:tearDownScript>if(context.expand( '${#Project#runTeardown}' )=='true')
	{
	log.info("Executing TearDown for Suite '" + testSuite.getName() + "'");
	
	for ( testCaseResult in runner.results )
	{
	   currentTestCaseName = testCaseResult.getTestCase().name;  
	   currentTestCase = testCaseResult.getTestCase(); 
	   log.info("Current TestCase : '"+ currentTestCaseName + "'");
	   log.info("Current TestCase Status : '" + testCaseResult.getStatus().toString() + "'");
	   
	   if ( testCaseResult.getStatus().toString() == 'FAILED' )
	   {
	      log.info("Re-executing failed TC");
	      def currentRunnerTC = currentTestCase.run(null, false);
	      log.info("Status on re-execution : '" + currentRunnerTC.status + "'");
	   }
	}
	log.info("Execution of TearDown for Suite '" + testSuite.getName() + "' Completed" );
}</con:tearDownScript><con:reportParameters/></con:testSuite><con:testSuite name="08.UserValidationTokenCreate" id="9b77d0b4-e21d-4159-826b-ba40f58ab70a"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00001_AccountUserCreate_111_UVTC_UserName_RequestorUserFAU_Active_RequesteeSelf_ResetPassword_107_SUCCESS_P0" searchProperties="true" id="e8ec057d-bea6-47ef-a220-b61452ffcc5e"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="8a5a39a0-dfa4-4303-a703-af90367fe20b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="4afddeb7-52bb-4b3d-99c2-30e22601198e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","US");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="92c4a343-97cb-4833-a240-cd08aa6239ef"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="396011b2-6c3e-4d22-a48f-162b27a5bab3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="e9e63bc5-c2be-4112-93b4-cabdf65780f9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("TokenType",URLDecoder.decode(tP.getPropertyValue("TokenType_RP")));
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	myTC.setPropertyValue("NODE_USER_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_USER_ID_FULL1")));
}
else
{
	myTC.setPropertyValue("TokenType",URLEncoder.encode(URLDecoder.decode(tP.getPropertyValue("TokenType_RP"))));
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	myTC.setPropertyValue("NODE_USER_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_USER_ID_FULL1"))));
}



//myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtc6I6FP6+v4JhP+4gL1IRpjqjtXSp2he1ve1+2cFw0LgQlASk/fU3wWLV2l73zjjj5HDynOe85EnOqR9HhtOhFFKGEyJ5vZb824SwYYBhKdDUm4ppT0Gx9XpDsQy9btcNW9cQyJJHaQYeocwnrCUbmm4qWlPR7YnecMymc2bXNMv4JUuPkFIOzV1qmiwVcUSoU4ZtyVlKnMSnmDrEj4E6DDnjznDgcE/HrzjJ7fMNyzJg2p4ztnRUFdUCQBBFqIaSWD1X93zOA+qM8Yz4LEvhLWZAW/Lb3vV6XVvXa0k6Uw1N01TNVrlPQPHsu9z+Vm2GwCNhsllf+CQhGPkRfvUFqSGweRJInWiWpJjN40+gdVXXBLQCBVKQbpLvsvoeoGR3ItIeyZT6Cp37egU2ghBSIAikh5HXkr+f1sHN3knqExomaUwP1n9HCUgOUbKEQKFVZhW70xGPlKt9DsjxCIoyinO4EWOy9BFQ6S6FEBcDTPnwBVQq2y8VlP9wNWWA/qYt5+ouV05dPVKdHp4BZf+nZ7v92qA8+lEGbbMXMGOsZo3F/TQc6j/nw3DFunonv+20Sgq7zhtS23a/rQ+HdTtbb5u8fn91e+c9YFd/utJ/hvaCPr08rq1uuvDuI+3HrADdHfm9M5jQK/fpTn+dL5rDq3pjsujWG+FsHkzXWnF9Z2rF47czZLxe3T+bD3/qyO5PVXdwtXoYFb/yhdlf93/8Mxm4XS8ZDO9/PHWuOyyzzUE/JM3nq1V/trC6gbG66fdurge5xcFuqdnrxZfXzy7M7tL8GSdm6z2n3Rz2jZUkjLPpAhCrlmI8vJ7k8n757Gt5ERYcKGHp6iyFRlEGhMltsUtIi5NxAcKBw5u5WWua62oN99I962pWw7681M7qmmXbuqt1DNdqVhq0YXFA8SIhIRaxhMpu5udrgih2KJAAUiVPMjQHKn+B2POZL3lkxA9HQihMEq7ibArZn5e8WLw26i9T9BoaQTxNirks3STsltymnZBBuq/c9p5yjwDhJQYh72K+KR9wyngpVn6esUiv5X6NQMYvgFRosGOYzTOV4ngZgSCqxkmQRVBbzpdlYVS6+TcUH9HSOrqclOfu07QOv1UV4D4BFg5U5NIF3kU4cgWZVSKfJmwYuwlX8J0swOJ48XKyFKMNk/1P71MixmM7Ijyj3xfj33rFe+t+8vaPO9UvSKmH9dgGCnK8E7a6S/n1wMWjXXVz5ddWtSzPs7J/lhDGlMOrXB91dQwo4+r2Mkn+AFG3EOpJl8uW9UHkrX2fX8bmZMx8BjGfNqlcnvCyGAMVLwuPn5Li1GfLXkheNwYFO2a7iPgDRDD+8o2CHCT8uPmO/62TNHhv1xGsnTg8T/6cYJjMxEpcIy+fDAVKOCzmupeku+DHAI4F3zdui7zlwvg0TTMGn3+RhKC1ZB+hJCPM68mlYVdkS57sZQnOu9MHmFLI327mgn56Mz8NB2Mud7Evb33xfzsruBwX8S7l/iWXllzwhyYPTmY7ov5G8Jiua7prWY2Osavr9a5ubQu4l0n7g/mjZaemh+eh/S8=</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF06FE01F876A2E05307991F0A3B17</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF06FE01F776A2E05307991F0A3B17</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF06FE01F776A2E05307991F0A3B17</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF06FEF5B0769EE05307991F0A2F78</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF06FEF5B0769EE05307991F0A2F78</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124858</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF06FEF5B1769EE05307991F0A2F78</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5da32940-7d64-4cf3-b60e-f7301ffa9e11</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ab000ff-4961-46f4-88fa-1bd1da6ed990</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00002_AccountUserCreate_111_UVTC_UserName_RequestorUserFAU_Active_RequesteeSelf_ValidateEmail_107_SUCCESS_P0" searchProperties="true" id="8b8803c7-c5ea-4475-a34c-56c3f45a0d93"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="c83e7d91-097d-4b09-b406-882c9fd10d52"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="b1cca471-0fac-4fcc-89b3-fc396d5e211b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","US");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="f1eeb897-3f52-4299-8b12-5bbed1a6ca5c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="051786a2-efa9-4ffb-ad18-0b168de7cf44"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="08a008f1-c811-4c11-90bd-383fd26f209a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("TokenType",URLDecoder.decode(tP.getPropertyValue("TokenType_VE")));
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	myTC.setPropertyValue("NODE_USER_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_USER_ID_FULL1")));
}
else
{
	myTC.setPropertyValue("TokenType",URLEncoder.encode(URLDecoder.decode(tP.getPropertyValue("TokenType_VE"))));
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	myTC.setPropertyValue("NODE_USER_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_USER_ID_FULL1"))));
}



//myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4jx0j29iAPYEZl1tpSUq45KR56QhZgFJbciSZQH79kUxMgFwOPTPMMFqvdr+96Nu9EDBN3DASAnNJGDUGnab5O/DcqucFyGrM/arl1WJsBa5TtVzPxTXYqM+rHjaNgRA5HlAhIZVN07Udz7IblhNMnVroBaHtVAK3fmcaN5gLZVqpVGzT2KQJFWHhtmnmnIYMCiJCClMsQonCSXQ5DJVmCEtMZutih7JwyFsrKbMQAFSJMcJJgiqIpeACHOlcxCKckCWFMuf42Wcsmubz3cfHx8pjtcL4Eri2bQM7AEonFmT52Wx9Ki/jeEAXbHduQ8ooQTAhT1CDusRyxWIjSpaME7lK3zHtAMfWpi28QRZyPPrZBC8OCnRnWjoCyQW0xAo6pbExXmCOKcLGbDxomp/Pq+Du7pRDKhaMp+Lk/HeQMF3jhGU4tkQZWYnufItvpKt1gVE4oCjJBVnjK90mGURYGCOOF2QzJEI1XyyMovzGRqgfKbsMo78pywU4xKqggzey0yFLLOT/qdlhvXZWbmCS41YApPtNzH+uFugprd21f/0CvMFHKWCzZgHhUHkHal/u5/Nps+576/lSewbAYvkljxyUE79/fd3Px99mHW/rDPlT/SaKq9P1nfut72fJ3c0s9f60R2w8vPU6ZDiuZUHvcRLNF/Np+7b6nX6aXU23Q6e9/eLGduP69v77ZdbvzwPvT3/URaOVfzV7GjWiRpv+g7hdncjvMY7RfdK5+fpUj1ajFCdeNkWX2x8P2+jTIP7BxHLWZ337Wi6q3Ubfa77EdBjDsbCkhEk+v8dIlkfdHoOO0VP1gvJjetESEluLQjXMNEcJiak0W/qWppYwVwRE4lAVc3e27V7PrnlR92u96kSe37X9qu0HgdOzI79ud0oO2qE4gdhmdEG0L82yu/75GCBKQ4FpjLm1ZjlaYWF+YLEDJTQGdKweB6MCT5licae2trOgds8Y8xtOtobzpwfX53AFTeOKyZ/0J48WEvNj7g6OuHuMEckI1gSvO1yoFhdSJeMBrnOZOJU1rFCcqxHANQuHrtfwgSBplmANFaQszhNcyVZZkRogdv+uBZEopOPutHh57wZ2+q3MgdKJiVYQOpavWNURvxpCjdAvA3k3YNc9DLg0H+Ux0Q9MJVRygnZIjj+99IlukH2TqIh+tye/nRL3Xv3s669vgg9AgdN87B3Fa3LgtpymakAo+miV1XyAlYdKvl7nRf3qmhq5Mg8UQzpgglGu+G07ZX8wBXsT4Kzxskd94nkvP8aXyxWdSChxqrrNKI5n7BYTLPRuMVDvZHPu4nLkUuVN4o18S9ZO1AqiEX+4paAQaT0lHqm/R8bjl3K9YevAj4pTLRSS0KU+6UGyfacpEFNmiWI+xg+Nv2XgLefHwn2S91ik6qZ5LvH7XwxNaU0TIsRyKgcdsxAc0myBU24zHL4ovTJTUPnzbN6Id2fz7eVwoggvheZel/y3skWKdkFqM1X6BZamuVGrpnJOlwe0/gzwNbP3uj2/06nXgm7B7PUds7u9emOfwKNIWq/EryUHOT19D61/AQ==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF06FEF5DE769EE05307991F0A2F78</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF06FEF5DD769EE05307991F0A2F78</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF06FEF5DD769EE05307991F0A2F78</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF064AEB731A45E05305991F0A570D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF064AEB731A45E05305991F0A570D</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_12491</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF064AEB741A45E05305991F0A570D</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7682c85f-32ee-470d-b19a-d7ba6aef935a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>45c2c5d6-838f-431c-bf3a-6403ae602b31</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00003_AccountUserCreate_111_UVTC_UserName_RequestorUserFAU_Active_RequesteeSelf_UnlockMe_107_SUCCESS_P0" searchProperties="true" id="fd5c3f7a-5ec0-4840-851c-1cff9519432d"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 11" id="4f7ea2a8-2a6e-4f71-a875-473b008b8fad"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="84931bf1-ea9e-442c-ba54-1381757f0b34"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","US");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="1e554322-61e6-4c59-9444-27efc1a90860"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 07" id="8a29863f-6389-4ab1-b87b-c01222dd90cc"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="cedeca3b-3641-4d94-8cce-7fb17cfb7c89"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("TokenType",URLDecoder.decode(tP.getPropertyValue("TokenType_UM")));
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	myTC.setPropertyValue("NODE_USER_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_USER_ID_FULL1")));
}
else
{
	myTC.setPropertyValue("TokenType",URLEncoder.encode(URLDecoder.decode(tP.getPropertyValue("TokenType_UM"))));
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	myTC.setPropertyValue("NODE_USER_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_USER_ID_FULL1"))));
}



//myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0TpYxWSQAgQFaS0wBHd0FKg15fKdQZwm9ghdiDt1x87NBTo5bCPhIQ8Gc+suXjNnHIUhWXP5xwSQRjVeu2m/vRcDsBx8dSoWXXXcBrINeoNp2pYdWvquC4K6m5N13qcp9CjXCAqmnrZsh2pYNiNie16TsOznJJbsR517RYSLk1LlZKla1kUUu7lbpt6mlCPIU64R1EE3BPYG/uDvic1PVRg0luna5S5w6Q1FyL2TBOXAsAQhriEWWSemjs6pwH3xmRGkUgT+PAZ8Kb+cXe1WpVWlRJLZmbZsizTaphSJ+Bkdqy3jorLEPTolK3P54gySjAKyTtSoAYg5izQ/HDGEiLm0Q+mbdO2lGkDMmxg26HHuvnpIEd3oKUdkAlHBp8juzA2gikkQDFoN6NeUz8+rILru5MEUT5lScT3zn8HCegSQhZDYPAisgLd4Ra/SVfrFLDXozhMOVnCpWqTGGHg2jCBKcn6hMvmC7iWl1/LuPyRossA/01ZTs1trBK6+U122mQGXPyfmm3Xa23lFoUptKzwbnBbeXl3HtDlbR11zoaD9uXo5O4irjdzCNvKa1Cbcn+c95t101sfl/qNLrom/5ydndDy3UNFzP88O++VO3/ccZz7KzQdPl6cLKr3t5MI+e9j373qu5NF3X5cvLm1bp0trNidU3sYpg4sj/702+HLbNBeZY/Xd10ePsQnKLbfZjeZuL5pRDdXk5vh6jxKB6uh/zwbk9fqjDY6+KRzc37X648644yVR4Pu+8XZxeVRdzDp991p1IGXi5NBHHS40/yMaTuGXWFBCeP0+QWwKI6qPXptrSvrhcTv9KIkJDCmuaoXK47iAqjQW+qWohYvlQREAk8Wc322rG7Xcrttp+ZWbL9qd6xqxao2GnbX8jtdq1tw0BrFHsRzRqdE+VIsu+6f3wHiyONAA0iMJUvxHLj+i8U2Ekjr0ZF8HIxymDDJ4nb9vZIkjM3TtDa1M/c1spi9WJAk07VLJq7oVeJPBSS73N3Y4e4RYBITUASvOpzLFudCJmOBlqkI7dISlSikcgQkioW9slOvmpxEcQgKqhmxIA2hFM/jPDUmX/+XDYR5Lh11JvnL+zGw/W9FDqROQJQCV7GcgawjfBlCda9aBPJjwOXydsCFeT8NiHpgMqEiIXiNZPfTZ5+oBtk0iYzo6Xz8ZBe4N+oHX/960/wFlLmfj42jYEm23BbTVA4ISR+topoLVFqU0uUyzetXU9SYSPOmZEjbHANOJb+9TdgrUHNjwjxovGxQ73neyHfxpWJOxwIJiGS3afnxgN1iDFztFj35TrJDF5cdlzJvAjLxnew8lCuIQvzrloI9rPSkeCj/ViwJPsv1ja0tPzJOuVAIQmfqpAbJ2w9NgZk0SyTzsWTb+HcGvnO+K9wkeYNFyG56TgX8/EVTlNbUEcYspaLX1nPBNs3mOMVbDN6n0hczOZV/zOaM/zib7wf9sSS8COkbXfLfygbJ2wWDrlaAHEtTz+SqKZ3T2RatfwD8yuyO3znzLdt3qtvMXq1Z7U0CdyJpfRF/lWzldP89tP4F</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FF064AEBA11A45E05305991F0A570D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FF064AEBA01A45E05305991F0A570D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FF064AEBA01A45E05305991F0A570D</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FF06FD47631A51E05305991F0AEF0F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FF06FD47631A51E05305991F0AEF0F</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_12493</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FF06FD47641A51E05305991F0AEF0F</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>0e45b3d7-4f7d-4ab3-9f28-2e230e72339e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13079182-300f-4cb8-b7d9-e9319d855cc8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00004_AccountUserCreate_107_UVTC_UserName_RequestorUserFAU_Active_RequesteeSelf_ResetPassword_111_SUCCESS_P0" searchProperties="true" id="a6816490-7c42-49e8-ba50-478a271875bd"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="d62bb801-c4bf-4262-acc9-7959d9a598be"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="fadf63eb-9ece-4a91-9cc7-35034f0c07aa"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","US");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="561af62c-f9d7-45b5-91e7-04db870924e4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="3544c2db-dcda-4b51-b22f-1edad14ba19a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="01c814c8-80f6-4dec-aad3-7b257c0a633a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("TokenType",URLDecoder.decode(tP.getPropertyValue("TokenType_RP")));
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	myTC.setPropertyValue("NODE_USER_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_USER_ID_FULL1")));
}
else
{
	myTC.setPropertyValue("TokenType",URLEncoder.encode(URLDecoder.decode(tP.getPropertyValue("TokenType_RP"))));
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	myTC.setPropertyValue("NODE_USER_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_USER_ID_FULL1"))));
}



//myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGljyjkxi1RQWIJtGxLuyW027MvK+NMgtvESWMHaH/9sUNDgV4OeyQk5Ml45puLv5lThpLYcvuMQc5JSpWx11X/2HZrHlidUJtDq6E1wA40p2MGmjHHgMDAHdMKVGXMWAFjyjiivKtahtnQjI5mOjOz5TYc12jXG07nt6rcQc6EaaFSN1RlncSUuaXbrlrk1E0RI8ylKAHmcuz6/cmlKzRdVGFSe6cblKXDvLfgPHN1HdcDwBDHuI7TRD/V93ROA+b6JKKIFzm8+gxYV329u1qt6iu7nuaRbhmGoRuOLnQCRqITtfetugzBmIbp5jxANKUEo5i8IAlqAnyRBko/jtKc8EXyiWlTNw1pWoM11rDZoCeq/uagRHekpT2QOUMaWyCzMjaFEHKgGJTb6birnhxXwc3dWY4oC9M8YQfnv4MEdAlxmkGgsSqyCt3xFj9IV+8UsDumOC4YWcKVbJMMYWDKzxxCsr4kTDRfwJSy/MqaiR+pugzw35TlVN/FKqDrH2THIxEw/n9qtluvjZU7FBfQC2fWzKc3QWd2cRbS8IbPbu/Wowf862rSLSHsKm9Abcv9ej5s1m1vvV6a3Dz/WLLfS/OM3/1zvrb9fu3BaEyIT+3nzh1KzhvXHhrD5erJfPgdkSnrtJLa8sy7f0JTK6+N7ItrHIVZ5EWT9JtnjWpr3y6SDm55zrCg04l+kTzq7QYf/Yps/ya7uYxm2a/Iu8bFioSPLXr9o3Vr12q3C3LRP7sZzBf3w+z8opb73xr3L2Q5ay0632eO0XoevVw2um8x7cawL6wowS/mD4B5dZTtMfaUkagX4l/Ti5SQQAtLVTeTHMU4UK725C1JLW4hCIgErijm5mwYo+FwZA68gT20DbM9NJq20XYcc2T0Tc+zKg7aoDiAOEhpSKQvybKb/vkaIE5cBjSAXFumBV4AU7+w6CGOlDGdiseRUgazVLC4aSRzp3BYil+ahePkrN0UPpoPL6pylfJrep33Qw75PnU7e9Q9BUwyApLfZYMz0eGMi1w8oWXBY7O+RHUKhZgAuSRh12p0mjojSRaDRKonaVDEUM8WWZkZnW3+LQ1hVkqnw1n58D6N6/BblQKhExCpwGQs30GUEd7NoI7brAL5NGDL2g24Mt8vAiLfl8gnzwneINn/9NYmsj+2PSIi+jPw/5gV7q360dff39S/AKUf5mPrKFiSHbfVMBXzQbBHr6rmE6o/1Yvlsijr15bMmAvzuqkbbd0HXAh6e56lj0D1rQn9qOmyRX3geSvfx1fwBfU54pCIblPK4xGrhQ9MrhZj8UzWx+4tey5F3jis+UeyQSw2EIn4yyUFu1jqCfFP8bdK87fAP7K140fEKfYJTmgkT3KOPH/SFDgVZokgvjTfNf6RgY+c7wu3Sd5i4aKb5gWHz78oktG6KsI4LSgfe2op2GXZEid/zsB9U3pnpmTy19G8Zp+O5vvJpS/4LkHqVpf8t7JGynbBoMoNoMTSVddi0xTOabTD6q8A3xH7sNW37OFAELu9S+y212xuE7gXSe+d+L1kJ6eH76H3Lw==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FEEE6A23ED3013E05307991F0A3D55</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FEEE6A23EC3013E05307991F0A3D55</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEE6A23EC3013E05307991F0A3D55</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEF1CDC3E3017E05307991F0A1DD2</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEF1CDC3E3017E05307991F0A1DD2</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_12496</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEF1CDC3F3017E05307991F0A1DD2</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00005_AccountUserCreate_107_UVTC_UserName_RequestorUserFAU_Active_RequesteeSelf_ValidateEmail_111_SUCCESS_P0" searchProperties="true" id="35350b4d-ea0b-4907-89e8-2241d8b47741"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="41e6ad1b-444f-4d64-8d4d-579e01ed7f60"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="110914c1-d88b-4a7e-a9a7-16497ebfac94"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","US");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="e5bfc74e-3578-4de5-a5d7-993a2d7c9a99"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="43819c55-acd5-42d9-8148-60831ab33052"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="47772cc6-2858-4418-b6a6-31a1bf436cec"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("TokenType",URLDecoder.decode(tP.getPropertyValue("TokenType_VE")));
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	myTC.setPropertyValue("NODE_USER_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_USER_ID_FULL1")));
}
else
{
	myTC.setPropertyValue("TokenType",URLEncoder.encode(URLDecoder.decode(tP.getPropertyValue("TokenType_VE"))));
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	myTC.setPropertyValue("NODE_USER_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_USER_ID_FULL1"))));
}



//myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr0DZxyrkCoWoIKVAKaveabssLyvjTMBtYofY4fbr1w4NBUp72CMhIU/GM99c/M2ccxRHtudzDqkgjJZ67Yb2Z2TbDraQo9uoYuluFUBH4VldrwYVB5l1K3RHplbqcZ5Bj3KBqGhotmm5ulnTrfqTVfXcumeZZdOqDrXSC6RcmpYqZXlrEUeUe7nbhpal1GOIE+5RFAP3BPb6/s21JzU9VGDSmudrlLnDtDkRIvEMA5cDwBBFuIxZbJwbOzrnAff6ZEyRyFJ49xnwhvZ+dz6fl+dOmaVjwzZN0zDrhtQJOBn/0JonxWUIejRk63MLUUYJRhFZIQXqBsSEBSU/GrOUiEn8hWnLsExlWocF1rHl0h+a8eEgR3ekpR2QKUc6nyCrMPYIIaRAMZSeH3sN7cdxFVzffUoR5SFLY753/jdIQGcQsQQCnReRFeiOt3ggXc1zwF6P4ijjZAa3qk0ShIGX7lMIyeKacNl8AS/l5S8tuPyRossA/0tZzo1trBK6cSA7bTIGLv5PzbbrtbbygqIMmgs6MBjyr2M2BHr7nA5a/v2o5tSy6UMjh7CtvAa1Kff7eb9ZN731fgkNaOXV6DLx0j+d3bwNUL3XXTw/VFo8CVar0ZUzdvrJz2gYWzfTpNv5uUpuH4bT5Wnye1gb/h7D73A5bD1ftQOn0j2p+fHlqBNehX6Xnor4/qme3tq/3lD7V9it/7zpmiLu+sY0rN29xNWX9nOrMx253dbybJo8DmqGL2b9iXvXmVruxfLEH7yOVnevravFZHXdd+fP7YfGR0zbMewKC0roZ6NXwKI4qvbotUuXsl5IfE8vSkICPcxVvURxFBdAhdZUtxS1eJkkIBJ4spjrs2ledjodv+o6bkvS3UXHrDjmWb1uXZp+5aLlFBy0RrEHscVoSJQvxbLr/vkeII49DjSAVJ+xDE+Aa99YbCOBSj36KB8HoxyemGRxy+YhmHN3NWdnU2ESEb/VHNdhU610y8QdvUv9UEC6S931Hep+BEwSAorfVYNz2eFcyFxM0SwTkVWeoTKFTE6AVJGwZ7u1isFJnESgkBoxC7IIyskkyTNj8PW/rSPMc+lj5yl/eF/Gtf+tSIHUCYhS4CqWC5BlhAMzyCwC+TJg294OuDDvZwFR70vmU6QEr5HsfvpoE9Ufmx6REf1p9f9YBe6N+tHXP980vgFl7Odj4yiYkS23xTCV80GyR7Oo5hSVp+VsNsvy+p0pZkylecMyzDOjDziT9LZ8Ym9AjY0J46jpskG953kj38WXiQntCyQglt1Wyo9HrBZ94Gq16Mlnsjh2b9lxKfMmYCEOyVqR3EAU4m+XFOxhpSfF9/JvztLgo1wHbG35kXHKfUIQOlYnNUeWXzQFZtIskcTH0m3jhwwccr4r3CR5g0XIbhplAr7+UlKM1tAQxiyjotfWcsE2y+Y4xTIB70Ppk5mcyd9H84J/OZoHN9d9yXcx0ja65L+VdZK3CwZNbQA5loa2kJumdE7HW6z+DvAzsVd9s21XHdOytonddtsXmwTuRNL8JP4s2crp/nto/gU=</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FEEE6A0D273011E05307991F0A24DB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FEEE6A0D263011E05307991F0A24DB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEE6A0D263011E05307991F0A24DB</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEEA6434C201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEEA6434C201BE05307991F0A5BC3</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_12499</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEEA6434D201BE05307991F0A5BC3</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00006_AccountUserCreate_107_UVTC_UserName_RequestorUserFAU_Active_RequesteeSelf_UnlockMe_111_SUCCESS_P0" searchProperties="true" id="19e09e9a-2a11-46c8-b20d-7095706c5e37"><con:settings/><con:testStep type="groovy" name="Set V2 Property to 07" id="f4b3b493-66b7-4698-9b65-b252a437028c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("trailingVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("trailingVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="894feaa5-6342-4014-9e7d-efe462e8113d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tS.setPropertyValue("Country","US");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="b16489e9-77a4-4ab8-8cb5-fd82b0439517"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set V2 Property to 11" id="e2a0c8fe-6139-49c8-a17f-055728cc0d9b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("versionMinor",tP.getPropertyValue("currentVersionMinor"));
tP.setPropertyValue("versionMajor",tP.getPropertyValue("currentVersionMajor"));

tP.setPropertyValue("CoordinatorSchema", tP.getPropertyValue("CoordinatorSchema_"+ tP.getPropertyValue("versionMinor")));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User" id="ed81e7cb-b872-42c4-a994-6b536fbe0f90"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
//myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
//myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

if( tP.getPropertyValue("URLEncode") == "NO")
{
	myTC.setPropertyValue("TokenType",URLDecoder.decode(tP.getPropertyValue("TokenType_UM")));
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"))); 
	myTC.setPropertyValue("NODE_USER_ID_FULL",URLDecoder.decode(tC.getPropertyValue("NODE_USER_ID_FULL1")));
}
else
{
	myTC.setPropertyValue("TokenType",URLEncoder.encode(URLDecoder.decode(tP.getPropertyValue("TokenType_UM"))));
	myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_ACCOUNT_ID_FULL")))); 
	myTC.setPropertyValue("NODE_USER_ID_FULL",URLEncoder.encode(URLDecoder.decode(tC.getPropertyValue("NODE_USER_ID_FULL1"))));
}



//myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+o6EP7ur+jUj0zpK5R2hBkE9OAVVPDo0S9OSJeSc9oUm7SAv/4mxSIgejl3hhkm283us7tPnuSMoTiy/DZjkHKSUKXfbaovgWvbDadR0xoAnubYjbrmmeBorlOzTcet24GHVKXPWAZ9yjiivKlahuloRkMzvXuz7jueb1pV17SeVeUBUiZCC5eqoSrLOKLML9I21SylfoIYYT5FMTCfY3/cHlz7wtNHJSa1dbZGWSRMWzPO576u42oAGKIIV3ES62f6js9ZwPwxCSniWQrvOQPWVN/3LhaL6sKuJmmoW4Zh6IanC5+AkfBUbZ2UmyHo02myXncQTSjBKCJvSIIaAJ8lgdKOwiQlfBZ/EdrUTUOG1mCJNWw69FTVPxIU6I6MtAMyZUhjM2SWwUYwhRQoBuXnqN9UT4+b4HrvfYoomyZpzPbWfwcJaA5RModAY2VlJbrjIx5oV+sMsN+nOMoYyWEoaTJHGJhym8KULK8JE+QLmFKMX1ky8SMlywD/zVjO9G2sArp+oDtdEgLj/2dm2/NaR3lAUQatGn186ps36PYquBvBIM8qThZ6P8IVumsWELad16A2435f75N1w633TW+3kHZdWq88/XwkPERXl96yzl9ZrzN7GF/aee/PgIUTeje4rFjPFXvY0ede52nYeV485+Hd4pL0HvRcv5y5Hbd9Ej6NLCfvDiuRM8iy7Naq2Ytpl3rmr99ueP9EH1L+zOzk93lqEfvqAuKrivd6voKbEbFcaDgsX5337t64kz5MTp57I9uxb4Zu3Hn7Z2k+Tn4Mmh81bdewaywlYZxNfgPm5VLSo99VLsS8EP9eXqSFBNq0cPXnUqMYB8rVltwlpcXPhACRwBfDXK8N46LX67W9ese2hdy5PaNmG67nmRdGu17zzFKD1ij2IHYSOiUyl1TZNX++B4hjnwENINXyJMMzYOo3EbuII6VPR+JwJJTBfSJU3JxA0EAxi+Y1Z2KiKDHrzmq1wO6bqgwTfkNv0vaUQ7qr3d6Odo8AkzkBKfCS4UxQnHHRjFeUZzwyqzmqUsjEFZBKFfYtITk6I/E8AglVj5Mgi6A6n82L1uhs/W9pCLPCOurdFyfvy8L2v5U9ED4BkQ5M1nIOYo5w4BIyykK+LNiytgsuw7ezgMgDJhrKU4LXSHY/ffBEEmRDElHRS2f8siHDxv3o7Z936t+A0vf7sUkU5GQrbXmbigtCyEernOYrqr5WszzPivm5UhpTEV43dcPVx4AzoW+r++QPUH0TQj/qetmg3su8se/iy/iMjjniEAu2KcXyiLfFGJh8W/TFOVke+3DZSSn6xmHJD9k6kXiCSMTfvlKwj6WfMN+Kv0WSBh/jOhBrK4+oUzwoOKGhXMmLZPUFKXAiwhKhfEm6HfxQgEPJd42bJm+wcMGmScbh6y+KlLSmijBOMsr7XbUwbMtsgZOv5uB/OH0KU0j5+928ZF/ezb8G12MheDFSN77kv501UtAFgyqfAAWWproUT02RnIZbsv4O8LCyW+53yr5bSeuT+bNlq6f756H1Lw==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FEEEA96C282017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FEEEA96C272017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FEEEA96C272017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FEEEA96C332017E05307991F0A6591</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FEEEA96C332017E05307991F0A6591</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>ugr4_bc_firstuser20140819_124912</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FEEEA96C342017E05307991F0A6591</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties><con:property><con:name>role</con:name><con:value>nodeIdRTL</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:RET_CS_1</con:value></con:property></con:properties><con:tearDownScript>if(context.expand( '${#Project#runTeardown}' )=='true')
	{
	log.info("Executing TearDown for Suite '" + testSuite.getName() + "'");
	
	for ( testCaseResult in runner.results )
	{
	   currentTestCaseName = testCaseResult.getTestCase().name;  
	   currentTestCase = testCaseResult.getTestCase(); 
	   log.info("Current TestCase : '"+ currentTestCaseName + "'");
	   log.info("Current TestCase Status : '" + testCaseResult.getStatus().toString() + "'");
	   
	   if ( testCaseResult.getStatus().toString() == 'FAILED' )
	   {
	      log.info("Re-executing failed TC");
	      def currentRunnerTC = currentTestCase.run(null, false);
	      log.info("Status on re-execution : '" + currentRunnerTC.status + "'");
	   }
	}
	log.info("Execution of TearDown for Suite '" + testSuite.getName() + "' Completed" );
}</con:tearDownScript><con:reportParameters/></con:testSuite><con:endpointStrategy xsi:type="con:DefaultEndpointStrategy" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:endpoint mode="OVERRIDE">https://qa.p.uvvu.com:7001/${#TestCase#endPoint}</con:endpoint></con:endpointStrategy><con:requirements/><con:properties><con:property><con:name>account_oid</con:name><con:value>E608A05B1095BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>ADULT_DOB</con:name><con:value>29-Jul-94</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-08-17</con:value></con:property><con:property><con:name>ADULT_MIN_AGE</con:name><con:value>18</con:value></con:property><con:property><con:name>ALID</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_241580697.txt</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>APID</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:534576800</con:value></con:property><con:property><con:name>assertionUID</con:name><con:value>E19E3D2D6A904D06E0401F0A05994A7A</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:RET_CS_1</con:value></con:property><con:property><con:name>Batch_HostName</con:name><con:value>https://qa.b.uvvu.com:7001</con:value></con:property><con:property><con:name>cacheDuration</con:name><con:value>86400</con:value></con:property><con:property><con:name>CertMatchesNodeID</con:name><con:value>YES</con:value></con:property><con:property><con:name>CertMatchesNodeName</con:name><con:value>YES</con:value></con:property><con:property><con:name>certsPath_Linux</con:name><con:value>../../Certs/QALP1/</con:value></con:property><con:property><con:name>certsPath_Windows</con:name><con:value>../../Certs/QALP1/</con:value></con:property><con:property><con:name>CHILD_DOB</con:name><con:value>27-Jul-02</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-08-15</con:value></con:property><con:property><con:name>CHILD_MAX_AGE</con:name><con:value>15</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_740255950.txt</con:value></con:property><con:property><con:name>clusterNumber</con:name><con:value>1</con:value></con:property><con:property><con:name>coordinatorSchema</con:name><con:value>http://www.decellc.org/schema/2013/10/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_02</con:name><con:value>http://www.decellc.org/schema/2015/03/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_06</con:name><con:value>http://www.decellc.org/schema/2012/12/coordinator</con:value></con:property><con:property><con:name>CoordinatorSchema_07</con:name><con:value>http://www.decellc.org/schema/2013/06/coordinator</con:value></con:property><con:property><con:name>CoordinatorSchema_11</con:name><con:value>http://www.decellc.org/schema/2013/10/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_21</con:name><con:value>http://www.decellc.org/schema/2013/10/coordinator</con:value></con:property><con:property><con:name>Coordinator_Schema</con:name><con:value>http://www.decellc.org/schema/2013/06/coordinator</con:value></con:property><con:property><con:name>coords</con:name><con:value>FALKY,COORD-10000,COORD-3034,COORD-2999,COORD-2509,COORD-627,UV-135,UV-340,Coord-2180</con:value></con:property><con:property><con:name>Country</con:name><con:value>IE</con:value></con:property><con:property><con:name>currentVersionMajor</con:name><con:value>2015</con:value></con:property><con:property><con:name>currentVersionMinor</con:name><con:value>02</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-08-17</con:value></con:property><con:property><con:name>DateOfBirthXML</con:name><con:value>1999-07-19</con:value></con:property><con:property><con:name>DBHost</con:name><con:value>LP1</con:value></con:property><con:property><con:name>DBIdentifier</con:name><con:value>LP1</con:value></con:property><con:property><con:name>DBPassword</con:name><con:value>lp1db_23</con:value></con:property><con:property><con:name>DBUsername</con:name><con:value>DEQA1_APP</con:value></con:property><con:property><con:name>Device_HostName</con:name><con:value>https://qa.d.uvvu.com:7001</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>enablePriorityScript</con:name><con:value>falsedisablePriority=P3,CHILD,CLG</con:value></con:property><con:property><con:name>encodedUserID</con:name><con:value/></con:property><con:property><con:name>ENV</con:name><con:value>QALP1</con:value></con:property><con:property><con:name>envIdentifier</con:name><con:value>LP1</con:value></con:property><con:property><con:name>eTag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GeoProfile</con:name><con:value>IE</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>user20130716_022720</con:value></con:property><con:property><con:name>JDBCConnStr</con:name><con:value>jdbc:oracle:thin:@stdeqp-clu1-scan.va.neustar.com:2115/stdecqpdb_stdecqa.neustar.com</con:value></con:property><con:property><con:name>JKSAliasName</con:name><con:value>qalp1</con:value></con:property><con:property><con:name>JKSPassword</con:name><con:value>testing</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Language2</con:name><con:value>de</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>maxUserName</con:name><con:value>64</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>minUserName</con:name><con:value>6</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>NODEACCID</con:name><con:value>E1AF78725D9E6410E0401F0A07997B12</con:value></con:property><con:property><con:name>nodeIdAccportal</con:name><con:value>ACCESS</con:value></con:property><con:property><con:name>nodeIdAccportal2</con:name><con:value>ACCESS_2</con:value></con:property><con:property><con:name>nodeIdAccportalCS</con:name><con:value>ACCESCS</con:value></con:property><con:property><con:name>nodeIdAccportalCS2</con:name><con:value>ACCESSCS_2</con:value></con:property><con:property><con:name>nodeIdCON</con:name><con:value>CON</con:value></con:property><con:property><con:name>nodeIdCON2</con:name><con:value>CON_2</con:value></con:property><con:property><con:name>nodeIdCONCS</con:name><con:value>CON_CS_1</con:value></con:property><con:property><con:name>nodeIdCONCS2</con:name><con:value>CON_CS_2</con:value></con:property><con:property><con:name>nodeIdCoo</con:name><con:value>COO</con:value></con:property><con:property><con:name>nodeIdCoo2</con:name><con:value>COO_2</con:value></con:property><con:property><con:name>nodeIdCoordCS</con:name><con:value>coord:cs</con:value></con:property><con:property><con:name>nodeIdDECE</con:name><con:value>DECE</con:value></con:property><con:property><con:name>nodeIdDECECS</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>nodeIdDECECS1</con:name><con:value>truststore-dece-cs</con:value></con:property><con:property><con:name>nodeIdDEV</con:name><con:value>DEV</con:value></con:property><con:property><con:name>nodeIdDEV2</con:name><con:value>DEV_2</con:value></con:property><con:property><con:name>nodeIdDEVCS</con:name><con:value>DEV_CS_1</con:value></con:property><con:property><con:name>nodeIdDEVCS2</con:name><con:value>DEV_CS_2</con:value></con:property><con:property><con:name>nodeIdDLASP</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>nodeIdDLASP2</con:name><con:value>DLASP_2</con:value></con:property><con:property><con:name>nodeIdDLASPCS</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>nodeIdDLASPCS2</con:name><con:value>DLASP_CS_2</con:value></con:property><con:property><con:name>nodeIdDSP</con:name><con:value>DSP</con:value></con:property><con:property><con:name>nodeIdDSP2</con:name><con:value>DSP_2</con:value></con:property><con:property><con:name>nodeIdDSPCS</con:name><con:value>DSP_CS_1</con:value></con:property><con:property><con:name>nodeIdDSPCS2</con:name><con:value>DSP_CS_2</con:value></con:property><con:property><con:name>nodeIdLLASP</con:name><con:value>LLASP</con:value></con:property><con:property><con:name>nodeIdLLASP2</con:name><con:value>LLASP_2</con:value></con:property><con:property><con:name>nodeIdLLASPCS</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>nodeIdLLASPCS2</con:name><con:value>LLASP_CS_2</con:value></con:property><con:property><con:name>nodeIdportal</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>nodeIdportalCS</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>nodeIdRetailerforDeviceAuthToken</con:name><con:value/></con:property><con:property><con:name>nodeIdRTL</con:name><con:value>RET</con:value></con:property><con:property><con:name>nodeIdRTL1</con:name><con:value>sriniretailer</con:value></con:property><con:property><con:name>nodeIdRTL2</con:name><con:value>RET_2</con:value></con:property><con:property><con:name>nodeIdRTLCS</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>nodeIdRTLCS1</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>nodeIdRTLCS2</con:name><con:value>RET_CS_2</con:value></con:property><con:property><con:name>nodeIdSPCLCS</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E19F934C4E6BFA99E0401F0A05993DA2</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E528648B66BDACF7E0401F0A05994DAF</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E19F95D7CFC268C9E0401F0A079952C9</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E151F333D66812AFE0401F0A07996C63</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E528808A600535F3E0401F0A07996230</con:value></con:property><con:property><con:name>OrgID</con:name><con:value>ISC_R1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3ATermsOfUse</con:value></con:property><con:property><con:name>Policy_TOU</con:name><con:value>https://qa.c.uvvu.com:7001/Consent/Text/IE/urn:dece:type:policy:TermsOfUse:20140811/html</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>projectPath</con:name><con:value>C:\Users\rshrivastava\Desktop</con:value></con:property><con:property><con:name>Provision_HostName</con:name><con:value>https://qa.p.uvvu.com:7001</con:value></con:property><con:property><con:name>Query_HostName</con:name><con:value>https://qa.q.uvvu.com:7001</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>RandomPwdFlag</con:name><con:value/></con:property><con:property><con:name>Request_XML</con:name><con:value><![CDATA[<User UserClass="urn:dece:role:user:class:${#TestCase#Privilege}" xmlns="${#TestCase#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#"> 	<Name> 		<GivenName>${#TestCase#GivenName}</GivenName> 		<SurName>${#TestCase#SurName}</SurName> 	</Name> 	<ContactInfo> 		<PrimaryEmail> 			<Value>${#TestCase#PrimaryEmail}</Value> 			</PrimaryEmail> 			<AlternateEmail> 				<Value>${#TestCase#AlternateEmail}</Value> 				</AlternateEmail> 			<Address> 				<PostalAddress>${#TestCase#PostalAddress}</PostalAddress> 				<PostalCode>${#TestCase#PostalCode}</PostalCode> 				<Locality>${#TestCase#Locality}</Locality> 				<StateOrProvince>${#TestCase#StateOrProvince}</StateOrProvince> 				<Country>${#TestCase#Country}</Country> 			</Address> 			<TelephoneNumber>			 					<Value>${#TestCase#TelephoneNumber}</Value> 				</TelephoneNumber> 				<MobileTelephoneNumber> 					<Value>${#TestCase#MobileTelephoneNumber}</Value> 				</MobileTelephoneNumber> 	</ContactInfo> 	<Languages> 		<Language>${#TestCase#Language1}</Language> 	</Languages> 	<!-- <DateOfBirth> depricated </DateOfBirth> --> 	${#TestCase#LegalGuardian} 	<Credentials> 		<Username>${#TestCase#UserName}</Username> 		<Password ${#Project#RandomPwdFlag}>${#TestCase#password}</Password> 	</Credentials> 	<UserRecoveryTokens> 		<RecoveryItem> 			<QuestionID>${#TestCase#QuestionID1}</QuestionID> 			<QuestionResponse>${#TestCase#QuestionResponse1}</QuestionResponse> 		</RecoveryItem> 		<RecoveryItem> 			<QuestionID>${#TestCase#QuestionID2}</QuestionID> 			<QuestionResponse>${#TestCase#QuestionResponse2}</QuestionResponse> 		</RecoveryItem> 	</UserRecoveryTokens> 	${#TestCase#ResourceStatus} </User>]]></con:value></con:property><con:property><con:name>Request_XML_Buffer</con:name><con:value><![CDATA[<User UserClass="urn:dece:role:user:class:${#TestCase#Privilege}" xmlns="${#TestCase#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#"> 	<Name> 		<GivenName>${#TestCase#GivenName}</GivenName> 		<SurName>${#TestCase#SurName}</SurName> 	</Name> 		<ContactInfo> 		<PrimaryEmail> 			<Value>${#TestCase#PrimaryEmail}</Value> 			</PrimaryEmail> 			<AlternateEmail> 				<Value>${#TestCase#AlternateEmail}</Value> 				</AlternateEmail> 			<Address> 				<PostalAddress>${#TestCase#PostalAddress}</PostalAddress> 				<PostalCode>${#TestCase#PostalCode}</PostalCode> 				<Locality>${#TestCase#Locality}</Locality> 				<StateOrProvince>${#TestCase#StateOrProvince}</StateOrProvince> 				<Country>${#TestCase#Country}</Country> 			</Address> 			<TelephoneNumber>			 					<Value>${#TestCase#TelephoneNumber}</Value> 				</TelephoneNumber> 				<MobileTelephoneNumber> 					<Value>${#TestCase#MobileTelephoneNumber}</Value> 				</MobileTelephoneNumber> 	</ContactInfo> 	<Languages> 		<Language>${#TestCase#Language1}</Language> 	</Languages> 	<!-- <DateOfBirth> depricated </DateOfBirth> --> 	${#TestCase#LegalGuardian} 	<Credentials> 		<Username>${#TestCase#UserName}</Username> 		<Password ${#Project#RandomPwdFlag}>${#TestCase#password}</Password> 	</Credentials> 	<UserRecoveryTokens> 		<RecoveryItem> 			<QuestionID>${#TestCase#QuestionID1}</QuestionID> 			<QuestionResponse>${#TestCase#QuestionResponse1}</QuestionResponse> 		</RecoveryItem> 		<RecoveryItem> 			<QuestionID>${#TestCase#QuestionID2}</QuestionID> 			<QuestionResponse>${#TestCase#QuestionResponse2}</QuestionResponse> 		</RecoveryItem> 	</UserRecoveryTokens> 	${#TestCase#ResourceStatus} </User>]]></con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>Rights_ALID</con:name><con:value>urn:dece:alid:file:RTUPDATE_R3_EXAMPLE_ALIDVersion_212395.txt</con:value></con:property><con:property><con:name>Rights_APID</con:name><con:value>urn:dece:apid:file:INTERACTIVE_MetadataDigitalCreate.txt:39983831</con:value></con:property><con:property><con:name>Rights_CID</con:name><con:value>urn:dece:cid:file:RTUPDATE_R3_EXAMPLE_CIDVersion_212395.txt</con:value></con:property><con:property><con:name>runTeardown</con:name><con:value>false</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=null</con:value></con:property><con:property><con:name>SAML1</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8uwqCBWkqphUVFxw5Wbt3AYEGWTAUF//Tto9CQ5yfnyflc6PT3dTy/0PPOMTd9j2wBjFCduGJRV+aXyD2c3OaZlbWst2GjUGk3bqgl1vlFrMS1oNhFqtLhtpaxinCI1wIkZJC8VlmbqNZqvsdycoduM0G7Wn7hmw6iUlyjGxDRReaIr5dz3Aty+un2ppHHQDk3s4nZg+gi3E9jWgTZsE822ecdUeX2+obw6jF93SRK1KQo+WQgiz4NPMPSpZ+qDzrOF27rrBGaSxujNp4VfKm9nsyx7yupPYexQLE3TFC1QRMfCrvOr8lq6H0aWGtjhbS2ZQRi40PTci1mA0lCyC60y8JwwdpOd/41phmLownQN5bAGmUbwq0L9dnBF90NLH0DG2Kzhncncjc2QjWIUQFRezNSXyq+fVfB2dh6bAbbD2Mef1v8NEgpOyAsjZNXwPbI7up9b/CJdr88IttUAeil2T2hUtElkQoTLkxjZbj50MWk+C5ev5S/n+N5hCP6XkjxT73ES2NQXmZFdB+Hk/6nX+1rdrCxNL0Wv8yrPxynfyS7VzoHVu8dcy6U5xeMReLlCeK98A/Uo9dv6c6M++urtkBnTs1BtZkYQ7OvKLGUWikdNxsal1Tx05LS5x+N063p1fEw5WuOwhpWR0jzWca8pBUzmHB2QpvvBuTuaqqWhLrsHLhlBdwH2MBpI7Bo3uvGazT18OOFgXN1EzfRCdRlrPRYPF2AgaiK7k56uVgOOderV1uXgIdh0ZFzqTlLeUcYabycGYIXcndIvv2N6H0MR1wCdr0EW/9dNWpDNxHwspGJS2OTzTNCrpqpSVZYkgCQHZKoIHFUcXsBIdA7H3cHtChktgumiA2Rw1mYgk52NvJxOB0pmLZeesVQ7HVGbNbIe2MglsiEr+VI21n3aXBnRhu3Qhi6K1noWbuv9yOodst4OjrS5lo3m6lnbK/lortCrq8zJyfqi7TVmPF/US6u9KGgzJZOzq0dZyXYjYzWLNgshgxdlqoFGF5D6SDutN/eXDKzPdnCvDDVwuMrFnSYtl1quzMGkJDqjJYltLnWMCPpWtPW93TvjPWJ8bnWX523XS42LstckpSvpx66ubuvyVOmD2WaxXS0P5qpzKsHeCGzvHt2ma67DzDFamTzd9Aehoe5OcASmiihOAUkXDTS12wdhVwRaA7j5RdqLXChZnYzqs7hUFbwutz67xzU2u7RnMq0WsxmuuMmRk5WgagzS7X6n7dadcXWgW6eFkAiXDT5VT5zpMjCP7Ola6SWD3O5N9dJ2Iudr2KtaTp/yLkIn1vg+iC/nnac5s2TFjfF569r2SlyPGx5ve1p9FtmeHZ1xdR5ODzHNiajOUpvzaZCUgKOJAHT3i7041cRWkVRLzaYbTTRBR0lScNmzyYBdHvu9kwc3dRDmg9V4f3grjCVnikhlU4W0lVJqycAqitDTF0pnDxai48Sio3TEKZTBdKMOsg3J16JHlD/nsXPNo6OIQKkbgBN6pfqCFpJxojca4ByIi6Aj7LRjvrI4n+aPSBnqo6iRaXhkB8YqPGi+Gy/iVF8MBqNhvp2n3cOezCqb1genulFSTocIuKPBfHeQQ9mcRJtNElUDGMNEjXxNzS9jA+9b7tan+9UmI05oGfLswt9mi66pGIPY0ZlBbxZM6rxQwql97vnVfStbVec6F/GWFNjy+UwZ8ZIOQdgRZs2jlbPsYbfIhlxm98Fha7Kj3BPEs6AMjDnMZtPBSverzVLzNBz69GVONUbRONO7WUOZTqt1S5z35jiK3U3acvJ4HFjsxky4k0EvOTfyDgKbHuaNqL50fFKsycmKeG1SmjbW0PAdPoJ9akadgMLbQ7V73l7MS+SP4W2Afp4OD+FtflDvJ8uH0XMnHTrpVgST+7K4gFS53CG3gpn8ncAUEteq2VfVdlSwIJygIKm8FqcK8tJOCcVxrTa5Mm5rheVafFPmBZkW6hJHK3SDZjo0oJuCwLF8/c5ybig+QZTCwHYLXwWPu91SfwcI/TZGgYXi2ilM4Q7hyl8sFvkqq8GMXL9hgNE8LHgiLck8kDkZEG4h0S1eYhhREQAjdGSpITOV8ihMxsE4BnaC4o8csf6BI84QdCMXFUSyuE0xuU5xQlJyNE9p4jFPJ/MpQCmhmnHB9tpso9WksOtHHioAU35opR56inbRNUEUvv2yNRPiq3SmzP9Rdel6038b4ue9ezaIjuUWCriIR0SkougLwtu4B/N90Nz7oO/mQWq5xYVOUpvELrwh+bj1u2OKVnm0C4nqDvmh+VnwwSr1OaCHI+vkwkfPP54DhE0SvvF6L8nRfDo+padTei0CX3CpmJinGIrmKR3BlBCi8zw8oIB6mKB+xEUfqD95fsg/4kuTXaAn5Hv2ScuUr8sfPER0hIuHiEpaPv/pK+eDS5K3BOXJVzLJI++VAvFfnzSwDQs9Ip6QnyyMrd/l+sLWOz8kzmKAuYFTrArmef6mKWBIzLpkiIXxe+NfGfjK+UfhI8kPLAnppm2aoO93ysV0eqmYEIZpkKhy5Sp4PzGvOJNzhNq/lf4wc+V+b2Q+x9+S+bU21Mns8s3KQ9f938o199ouEJFT2L1ieank5F1KnAfOuwn9BvDLIS116L8N6Y+RvP4h/lPyLqefv4fXfwE=</con:value></con:property><con:property><con:name>SAML2</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8uwKYqVpGoQUFTcwI2bt3AYFmWTRdBf/w4aPUlOcr6835VOT0/30ws9zzwnhu/RXZAkKE7dMKjKwkvtH8SSu86ubTa4DkSNZqvTanA7kmswLdTptFm2BRFXq8pJkiE5SFIjSF9qNEkxDbLdoFmN5LotskuRTxTd0WvVFYoTbBqrPJG1auF7QdK9un2pZXHQDY3ETbqB4aOkm8KuCpRxF2t2jTum2uvzDeXVYfzqpGnUJQj4ZCKIPA8+wdAnnokPOs9m0lVdOzDSLEZvPs3kpfZ2Ns/zp5x5CmOboEmSJEiOwDpm4tq/aq+V+2FkyoEV3tY9IwgDFxqeezFKUApKndCsAs8OYzd1/G9MUwRFlqYbqIANSDWDXzXit4Mruh9a+gAyToxG4hjU3dgCWShGAUTV5UJ+qf36WQVvZ7XYCBIrjP3k0/q/QULBCXlhhMxGco/sju7nFr9I1+szgl05gF6WuCc0KdskMiBKqrMYWW4xdhPcfGZSvZa/WiT3DkPwv5TkmXiPE8MmvsiM4NooSf+fer2v1c3KyvAy9MoZ7PBiMoRYP5BC33Y7JhGKkj4dLZSXK4T3yjdQj1K/rT836qOv3g4Jq9O6ZRuIopoxtJBKLHb5hLN344MwAgKkDlMjGJvOQmR2RV9vtk6AXuWuUW9FM5bRjxqfGrO1bHBCKsUVx9+01MEyXBfMead47daU5yext6D2LrM6G6Z3aW74DWXZXphLI3CuA53pxQeHXu/HZ28+pRxvns+WoXJ2PYxMG0vrjZtlWYR0werozZffMb2PoYxrhM7XIMv/mxbJCUZqPBa9clJY+PNM0asiy7260OsB1LNBLvPAlvnxBUx4+3B0Dm6fy0kezJcSEMBZWYBcsLfCaj4fibm5Wnn6SpYkXlk08wHYChW8IYjFStA3Q9JY69GWlkhd5Xlzswh3zDAyB4d84MCJoin5RJPPyl4sJppIrq8yu8Dri7JXqKm2ZCrrPc8pCzEX8qtHQcydib5eRNsll8OLOFdAsw+opdhzlIHmryjILBy4F8cKOFzlvKP0ViulEDUwq/D2ZIVj03qSHkHfjHa+57wzPsDGNbO/Ou/6XqZfxL3SE/s99dhX5R0jzMUhWGyXu/XqYKylUwUOJmB39+i2XGMT5rbeyYX5djgKddk5wQmYizw/BzhdJFDk/hCEfR4oTeAWl96eZ8OeKeXEkE4qdc7rs5uze9wkRp/0DKrTobbjNTs7soIY1PVRtts7irORpvWRap6WXMpdtsmpfmINl4JFZM034iAdFdZgrlZ2M6HYwEHdtIeEd+GkWGkPQXw5O55iL9I1O03OO9ey1vxm2vTalqcwi8jyrOic1LVwfohJlkcMTWzPp1FaAbbCA9DfL/f8XOE7ZVJNOZ9vFd4Akphm4LKn0xG9Og4HJw9uGRAWo/V0f3grjCnkIk/kcxG3lVjpCMAsizBQl6K0B0vetmPeFiV+DgUw38qjfIvztRxg5c95lK55tEUeiIwOWG5QYZYkl05TtdkE54BfBhLnKMdibbI+2T4icaxOomauJBMr0NfhQfHdeBln6nI0moyLnZb1D3s8qyxSHZ0YvSKeDhFwJyPNOQihYMyi7TaN6gGMYSpHviIXl6me7DvuzieH9RbFz0gBtumlv8uXfUPUR7GtUqPBIpgxba6SZNZ54Nf3nXxd11Q2apu9wBLOZ0KPV2QIQolbtI5mQdMHZ5mP2dwagsPOoCeFx/FnThzpGswX89Fa9eutSus0HvvkRSOak2iaq/28Kc7ndcbktYGWRLG7zTp2EU8Dk94aKXvSyRXrRt6Bo7OD1oyYle3jYs1OZtRWZpV5cwN1325HcEgsiBMQ29ZY7p93F+MS+VN4G6Cfp8NDeJsfxPvJ8mH03EmHirsVwfS+LC8gWahK+FYw0r8TmFLimg3rqtqNShaUpChIa6/lqZK8dDNMcVyzi6+M21qk2Q4pMjTHdnotlmRFsklSEgnINseRNN27s5wbik8Qe2FguaWvksfdbqm/A4R+N0GBieLGKcygg5LaXyyW+arKwQJfv2GQIC3EPLHTFHoUaDabUpsDFAO4liS12HYbgCbLCz2mVp2E6TSYxsBKUfyBI1L0B464QNCNXFQSyfI2TfB1mqQ4JUfjlKUe9XQyngKUYaoZl2yvSzc7LSJx/chDJWDCD83MQ0+RE10TRCS3X7phwOQqXYjaP7Lau97034b4ee+eDaxjuqVCUsbDI1xR9AXhJe/BfB90633Qd/MgM93yQsepTWMX3pB83PrdMWWrPNoFR3WH/ND8LPhglfgc0MOReXLho+cfzwHMJjHfeL2X5Gg8HZ+y0ym7FqFdcqkYmycogmwTKoIZJkRnLTyggHiYIH7ERR+oP3l+yD/iy1InUFP8Pfu4ZarX5Q8eIipKyoeIjFu++Okr54NLnLcUFelXsp6H3ysl4r8+aWAXlnpYPMM/eRibv8v1ha13fnCc5QBzA7tclczz/E1TwBCbdfEQC+P3xr8y8JXzj8JHkh9YUtxNuyxF3+9Uy+n0UjMgDLMglYXaVfB+Yl5xpucIdX8r/WHmyv3eyHyRfEvmN8pYxbPLN2oPXfd/Kzfca7tAhE8l7hXLS63A71LsPLDfTeg3gF8O6ZbE/m1If4zk9Q/xn5J3Of38Pbz+Cw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Streams_ALID</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_561393521.txt</con:value></con:property><con:property><con:name>Streams_APID</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:242394094</con:value></con:property><con:property><con:name>Streams_CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_344946277.txt</con:value></con:property><con:property><con:name>SurName</con:name><con:value>user20130716_022720</con:value></con:property><con:property><con:name>targerHostd</con:name><con:value>qa.d.uvvu.com</con:value></con:property><con:property><con:name>targetDeviceDomain</con:name><con:value>qa.d.uvvu.com:7001</con:value></con:property><con:property><con:name>targetHost</con:name><con:value>qa.p.uvvu.com</con:value></con:property><con:property><con:name>targetHostb</con:name><con:value>qa.b.uvvu.com:7001</con:value></con:property><con:property><con:name>targetHostC</con:name><con:value>qa.c.uvvu.com:7001</con:value></con:property><con:property><con:name>targetHostd</con:name><con:value>qa.d.uvvu.com</con:value></con:property><con:property><con:name>targetHostP</con:name><con:value>qa.p.uvvu.com:7001</con:value></con:property><con:property><con:name>targetHostq</con:name><con:value>qa.q.uvvu.com</con:value></con:property><con:property><con:name>targetHostS</con:name><con:value>qa.s.uvvu.com:7001</con:value></con:property><con:property><con:name>targetPort</con:name><con:value>7001</con:value></con:property><con:property><con:name>targetPortd</con:name><con:value>7001</con:value></con:property><con:property><con:name>targetPortq</con:name><con:value>7001</con:value></con:property><con:property><con:name>targetSystem</con:name><con:value>LP1</con:value></con:property><con:property><con:name>targetURL</con:name><con:value>qa.p.uvvu.com:7001</con:value></con:property><con:property><con:name>targetUrlSHost</con:name><con:value>qa.s.uvvu.com:7001</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>TokenType_RP</con:name><con:value>urn:dece:type:token:ResetPassword</con:value></con:property><con:property><con:name>TokenType_UM</con:name><con:value>urn:dece:type:token:UnlockMe</con:value></con:property><con:property><con:name>TokenType_VE</con:name><con:value>urn:dece:type:token:ValidateEmail</con:value></con:property><con:property><con:name>TOUUrl</con:name><con:value>qa.c.uvvu.com:7001</con:value></con:property><con:property><con:name>TOUUrl_06</con:name><con:value>qa.uvvu.com</con:value></con:property><con:property><con:name>TOUUrl_07</con:name><con:value>qa.c.uvvu.com</con:value></con:property><con:property><con:name>TOU_AT</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_AU</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_BE</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_CA</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_CH</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_DE</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_FR</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_GB</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_IE</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_LU</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_NL</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_NZ</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_US</con:name><con:value>20140811</con:value></con:property><con:property><con:name>trailingVersionMajor</con:name><con:value>1</con:value></con:property><con:property><con:name>trailingVersionMinor</con:name><con:value>11</con:value></con:property><con:property><con:name>URLEncode</con:name><con:value>NO</con:value></con:property><con:property><con:name>urnaccount</con:name><con:value>urn:dece:accountid:org:dece:</con:value></con:property><con:property><con:name>urnError</con:name><con:value>urn:dece:errorid:org:dece:</con:value></con:property><con:property><con:name>urnNode</con:name><con:value>urn:dece:org:org:dece:</con:value></con:property><con:property><con:name>urntokenType_deviceauthtoken</con:name><con:value>urn:dece:type:tokentype:DeviceAuthToken</con:value></con:property><con:property><con:name>urntokenType_saml</con:name><con:value>urn:dece:type:tokentype:saml2</con:value></con:property><con:property><con:name>urntokenType_userpassword</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130726_035217</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>versionMajor</con:name><con:value>1</con:value></con:property><con:property><con:name>versionMinor</con:name><con:value>11</con:value></con:property><con:property><con:name>YOUTH_DOB</con:name><con:value>28-Jul-99</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>yyyy-MM-dd</con:value></con:property><con:property><con:name>YOUTH_MIN_AGE</con:name><con:value>16</con:value></con:property></con:properties><con:afterLoadScript/><con:wssContainer/><con:databaseConnectionContainer/><con:oAuth2ProfileContainer/><con:reporting><con:reportTemplates/><con:xmlTemplates/><con:parameters/></con:reporting><con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep"><con:script>if(testStepResult.getTestStep().config.type.toString() == "restrequest")
{
	byte [] tempByteArrRequest = testStepResult.getRawRequestData();
	String tempRequest = new String(tempByteArrRequest);

	log.info("-----------------------------&lt;" + testStepResult.getTestStep().getName() + " Request>--------------------------------");
	log.info(tempRequest);
	log.info("-----------------------------&lt;/" + testStepResult.getTestStep().getName() + " Request>--------------------------------");

	byte [] tempByteArrResponse = testStepResult.getRawResponseData();
	String tempResponse = new String(tempByteArrResponse);


	log.info("-----------------------------&lt;" + testStepResult.getTestStep().getName() + " Response>--------------------------------");
	log.info(tempResponse);
	log.info("-----------------------------&lt;/" + testStepResult.getTestStep().getName() + " Response>--------------------------------");
}</con:script></con:eventHandlers><con:eventHandlers type="TestSuiteRunListener.beforeTestCase" name="TestSuiteRunListener.beforeTestCase"><con:script>log.info("################################################################################");</con:script></con:eventHandlers><con:sensitiveInformation/></con:soapui-project>