<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="StreamListView_ISCPortal_ISCPortalCS" resourceRoot="" soapui-version="4.6.1" abortOnError="false" runType="SEQUENTIAL" activeEnvironment="Default" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="&lt;all>"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Print Report" value="true"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value="D:\StreamListView"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.ProTestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="&lt;all>"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="true"/>
  <con:entry key="Enable UI" value="true"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Print Report" value="true"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value="C:\Documents and Settings\ashwin.tikle\Desktop\Reports\Reports 1.0.6 Patch 2\LP1_R3\Stream List View"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="true"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="DECE StreamCreate API" type="rest" id="e8d8593c-70d3-4bdf-a7c5-929bbe22a53e" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:endpoint>${#Project#Query_HostName}</con:endpoint></con:endpoints><con:resource name="StreamView" path="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/{STREAM}" id="7ce2232c-bb0b-4a20-8ea9-b1c96112a425"><con:settings/><con:parameters><con:parameter><con:name>ACCT</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter><con:parameter><con:name>STREAM</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#streamhandleFULL}</con:default></con:parameter><con:parameter><con:name>MAJOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMinor}</con:default></con:parameter></con:parameters><con:method name="GET" method="GET" id="ccee026a-5616-4a8a-8996-dcb7ae4e570c"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Stream</con:element></con:representation><con:request name="StreamView" mediaType="application/xml" id="cfe0247c-3025-41ff-9f65-5ddc9bc841e8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="Tester" value="${#Project#tester}"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="StreamListView" path="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/List" id="6b9feffd-7a70-4246-9aa6-75586d630abf"><con:settings/><con:parameters><con:parameter><con:name>ACCT</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter><con:parameter><con:name>MAJOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMinor}</con:default></con:parameter></con:parameters><con:method name="GET" method="GET" id="86e0c157-4d9a-4138-8ccb-b768e4bf7c39"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>404 500</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200 0</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:Streams</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>500 400 401 404 409 403</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:Errors</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:StreamList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml; charset=UTF-8</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2015/03/coordinator">coor:ErrorList</con:element></con:representation><con:request name="StreamListView" mediaType="application/xml" id="ce70a987-dd34-46f5-99fb-d9b77a22c965"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="Tester" value="${#Project#tester}"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="RightsTokenCreate" path="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/RightsToken" id="45571e64-eda1-494b-8e6f-0c12df3ae165"><con:settings/><con:parameters><con:parameter><con:name>ACCT</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter><con:parameter><con:name>MAJOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMinor}</con:default></con:parameter></con:parameters><con:method name="POST" method="POST" id="582ae345-a288-499c-9b0e-4ddd4c85708b"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>500 404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>201 0</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>400 404 401 500 403</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:Errors</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>500 400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml; charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="RightsTokenCreate" mediaType="application/xml" postQueryString="false" id="7c913954-7a39-45a6-84ff-1f0389b44f63"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="Tester" value="${#Project#tester}"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<ns4:RightsTokenData xsi:schemaLocation="http://www.decellc.org/schema file:/C:/5Work/Workspaces/workspace-sts-2.3.3/dece_api/src/main/webapp/WEB-INF/dece.xsd" ALID="${#Project#alid}" ContentID="${#Project#cid}" xmlns:ns1="http://www.w3.org/2001/04/xmlenc#" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.decellc.org/schema/2010/10/dece" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <ns4:SoldAs>
                <ns4:DisplayName Language="en">Avatar BestBuy Special Packaging</ns4:DisplayName>
                <ns4:ContentID>${#Project#cid}</ns4:ContentID>
<!--                    <ns4:BundleID>urn:dece:cho</ns4:BundleID>-->
            </ns4:SoldAs>
            <ns4:RightsProfiles>
                <ns4:PurchaseProfile ContentProfile="urn:dece:type:mediaprofile:highdefinition">
                    <ns4:DiscreteMediaRightsRemaining DiscreteMediaProfile="urn:dece:type:discretemediaformat:securesd:cprm">1</ns4:DiscreteMediaRightsRemaining>
                    <ns4:CanDownload>true</ns4:CanDownload>
                    <ns4:CanStream>true</ns4:CanStream>
                </ns4:PurchaseProfile>
                <ns4:PurchaseProfile ContentProfile="urn:dece:type:mediaprofile:standarddefinition">
                    <ns4:DiscreteMediaRightsRemaining DiscreteMediaProfile="urn:dece:type:discretemediaformat:securesd:cprm">2</ns4:DiscreteMediaRightsRemaining>
                    <ns4:CanDownload>true</ns4:CanDownload>
                    <ns4:CanStream>true</ns4:CanStream>
                </ns4:PurchaseProfile>                
                <ns4:PurchaseProfile ContentProfile="urn:dece:type:mediaprofile:portabledefinition">
                    <ns4:DiscreteMediaRightsRemaining DiscreteMediaProfile="urn:dece:type:discretemediaformat:securesd:cprm">2</ns4:DiscreteMediaRightsRemaining>
                    <ns4:CanDownload>true</ns4:CanDownload>
                    <ns4:CanStream>true</ns4:CanStream>
                </ns4:PurchaseProfile>
                <ns4:RentalProfile>
                    <ns4:AbsoluteExpiration>2011-09-17T15:12:03</ns4:AbsoluteExpiration>
                    <ns4:DownloadToPlayMax>P5Y2M7DT1H10M0S</ns4:DownloadToPlayMax>
                    <ns4:PlayDurationMax>P2Y1M8DT1H10M0S</ns4:PlayDurationMax>
                </ns4:RentalProfile>
            </ns4:RightsProfiles>
            <ns4:ResourceStatus>
                <ns4:Current CreationDate="2011-02-17T15:12:03" CreatedBy="urn:dece:iby" DeletionDate="2012-02-22T15:12:03" DeletedBy="urn:dece:" ModificationDate="2011-06-29T15:12:03" ModifiedBy="urn:dece:">
                    <ns4:Value>urn:dece:type:status:blocked:eula</ns4:Value>
                    <ns4:Description>dnFu.WQ2R06AV900TAEZEw</ns4:Description>
                </ns4:Current>
                <ns4:History>
                    <ns4:Prior ModificationDate="2011-11-01T15:12:03" ModifiedBy="urn:dece:uq">
                        <ns4:Value>urn:dece:type:status:deleted</ns4:Value>
                        <ns4:Description>RiF67oz2tfdzfJyDq5GM17oEm</ns4:Description>
                    </ns4:Prior>
                    <ns4:Prior ModificationDate="2011-02-18T15:12:03" ModifiedBy="urn:dece:">
                        <ns4:Value>urn:dece:type:status:archived</ns4:Value>
                        <ns4:Description>AXvGDbjiIc9q35QeTtD81-FY</ns4:Description>
                    </ns4:Prior>
                </ns4:History>
            </ns4:ResourceStatus>
    <ns4:LicenseAcqBaseLoc>https://dl.bestbuy.com/p/bb93827398sdjdhds</ns4:LicenseAcqBaseLoc>
            <ns4:FulfillmentWebLoc>
                <ns4:Location>https://dl.bestbuy.com/p/aaa</ns4:Location>
                <ns4:Preference>1</ns4:Preference>
            </ns4:FulfillmentWebLoc>
            <ns4:FulfillmentWebLoc>
                <ns4:Location>https://dl.bestbuy.com/p/bbb</ns4:Location>
                <ns4:Preference>2</ns4:Preference>
            </ns4:FulfillmentWebLoc>
            <ns4:FulfillmentManifestLoc>
                <ns4:Location>https://dl.bestbuy.com/p/ccc</ns4:Location>
                <ns4:Preference>3</ns4:Preference>
            </ns4:FulfillmentManifestLoc>
            <ns4:FulfillmentManifestLoc>
                <ns4:Location>https://dl.bestbuy.com/p/ddd</ns4:Location>
                <ns4:Preference>4</ns4:Preference>
            </ns4:FulfillmentManifestLoc>
        <ns4:PurchaseInfo>
            <ns4:NodeID>urn:dece:org:org:dece:${#TestCase#nodeid}</ns4:NodeID>
            <ns4:RetailerTransaction>RetailerTransaction_1</ns4:RetailerTransaction>
            <ns4:PurchaseAccount>${#TestCase#assertionAccountIdFULL}</ns4:PurchaseAccount>
            <ns4:PurchaseUser>${#TestCase#assertionUserIdFULL}</ns4:PurchaseUser>
            <ns4:PurchaseTime>2011-06-24T15:12:03</ns4:PurchaseTime>
        </ns4:PurchaseInfo>
        <ns4:ViewControl>
            <ns4:AllowedUser>${#TestCase#assertionUserIdFULL}</ns4:AllowedUser>
        </ns4:ViewControl>
</ns4:RightsTokenData>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="StreamCreate" path="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream" id="5d66e029-ad89-492a-814d-5affec81771a"><con:settings/><con:parameters><con:parameter><con:name>ACCT</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter><con:parameter><con:name>MAJOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMinor}</con:default></con:parameter></con:parameters><con:method name="POST" method="POST" id="11d227a0-126b-4cf7-8935-9674af39f79d"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>401 404 400 500 403</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>500 404 502</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>405 400 500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>201 0</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:StreamCreate-resp</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="StreamCreate" mediaType="application/xml" accept="" postQueryString="false" id="a70ad676-bfb9-49b2-8590-943a25c0ed81"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="Tester" value="${#Project#tester}"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Stream xmlns="http://www.decellc.org/schema/2010/10/dece" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
 <StreamClientNickname>${#TestCase#nickname}</StreamClientNickname>
 <RequestingUserID>${#TestCase#assertionUserIdFULL}</RequestingUserID>
 <RightsTokenID>${#TestCase#rightstokenidFULL}</RightsTokenID>
</Stream>

]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="STS" path="/rest/{MAJOR}/{MINOR}/SecurityToken/SecurityTokenExchange" id="a4e06100-336b-485f-9ad1-34f93eed6c23"><con:settings/><con:parameters><con:parameter><con:name>tokentype</con:name><con:value>${#TestCase#tokentype}</con:value><con:style>QUERY</con:style><con:default>${#TestCase#tokentype}</con:default></con:parameter><con:parameter><con:name>MAJOR</con:name><con:value>${#Project#VersionMajor}</con:value><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:value>${#Project#VersionMinor}</con:value><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMinor}</con:default></con:parameter></con:parameters><con:method name="POST" method="POST" id="e8312f3b-c4b6-4d5a-99d8-43fad96876ba"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404 502 500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain</con:mediaType><con:status>201 0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>0</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html</con:mediaType><con:status>0</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="STS" mediaType="application/xml" postQueryString="false" id="2649c135-238d-40b8-a205-9c6f5b73e947"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="STS Get" path="/rest/{MAJOR}/{MINOR}/SecurityToken/Assertion/{ASSERTION}" id="2502de79-5b04-412c-8cc7-9cdf14f6c2be"><con:settings/><con:parameters><con:parameter><con:name>ASSERTION</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionUUID}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:value>${#Project#VersionMinor}</con:value><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMinor}</con:default></con:parameter><con:parameter><con:name>MAJOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter></con:parameters><con:method name="GET" method="GET" id="a57ed856-49a1-4b4a-a72d-40b70a23a2e1"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/xml</con:mediaType><con:status>200 0</con:status><con:params/><con:element xmlns:urn="urn:oasis:names:tc:SAML:2.0:protocol">urn:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="STS Get" mediaType="application/xml" id="faee3374-2407-48ad-ae87-5967131c67aa"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="StreamRenew" path="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/{STREAM}" id="515a7f09-ec21-45a9-a73d-ab063b866759"><con:settings/><con:parameters><con:parameter><con:name>ACCT</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter><con:parameter><con:name>STREAM</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#streamhandleFULL}</con:default></con:parameter><con:parameter><con:name>MAJOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMinor}</con:default></con:parameter></con:parameters><con:method name="PUT" method="PUT" id="fa82caaa-b57e-49b1-aef5-6a48cf10cfc7"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>0</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/06/coordinator">coor:Stream</con:element></con:representation><con:request name="StreamRenew" mediaType="application/xml" postQueryString="false" id="13570ea0-7ea0-479d-9586-05e259a58526"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="GET" method="GET" id="91b2959b-9e30-4e01-9210-dda1d39e980b"><con:settings/><con:parameters/><con:request name="StreamRenew" mediaType="application/xml" id="39376562-9f83-4137-9a1c-3b494c530976"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="StreamListView1" path="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/List" id="b585baeb-08d7-4fd3-961b-50c27a247689"><con:settings/><con:parameters><con:parameter><con:name>ACCT</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter><con:parameter><con:name>MAJOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMinor}</con:default></con:parameter></con:parameters><con:method name="HEAD" method="HEAD" id="16a4ab09-edc8-4429-86ae-5baa9e5d77d9"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200 0</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:Streams</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>500 400 401 404 409 403</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:Errors</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="StreamListView" mediaType="application/xml" id="25a8c3e0-dadb-45a6-97f1-c224a4824827"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="Tester" value="${#Project#tester}"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="StreamListViewQHost" path="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/List" id="3d3546dc-a401-448d-abb2-d02dee678cde"><con:settings/><con:parameters><con:parameter><con:name>ACCT</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter><con:parameter><con:name>MAJOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMinor}</con:default></con:parameter></con:parameters><con:method name="GET" method="GET" id="e7983034-c739-4b87-bb1e-a3b38af88222"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200 0</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:Streams</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>500 400 401 404 409 403</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:Errors</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="StreamListView" mediaType="application/xml" id="9468eac1-532b-4653-a796-596c6bf86d3c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="Tester" value="${#Project#tester}"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Coordinator APIs" type="rest" basePath="" id="1441975b-edb4-4183-add6-0f15f7559f90" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="PolicyGet I" path="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/User/{USER}/Policy/{POLICYCLASS}" id="401858fd-150d-4ba5-a3ff-f7a44a69bebc"><con:settings/><con:parameters><con:parameter><con:name>ACCT</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter><con:parameter><con:name>USER</con:name><con:value>${#TestCase#assertionUserIdFULL}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionUserIdFULL}</con:default></con:parameter><con:parameter><con:name>POLICYCLASS</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#policyClass}</con:default></con:parameter><con:parameter><con:name>MAJOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMinor}</con:default></con:parameter></con:parameters><con:method name="GET" method="GET" id="2f6762f6-43df-4795-be43-074f2b85537a"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200 0</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:PolicyList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:request name="PolicyGet I" mediaType="application/xml" id="2ef57908-05c6-46a0-a76c-88b0bf69814f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://${#Project#targetHost}:${#Projec#targetPort}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="StreamDelete" path="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/{STREAM}" id="e7e54774-cf13-496b-b840-8d6997850906"><con:settings/><con:parameters><con:parameter><con:name>ACCT</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter><con:parameter><con:name>STREAM</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#streamhandleFULL}</con:default></con:parameter><con:parameter><con:name>MAJOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMinor}</con:default></con:parameter></con:parameters><con:method name="Delete" method="DELETE" id="c5ed752c-722c-43ff-ab32-e3472d76034d"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="StreamDelete I" mediaType="application/xml" id="662d5787-a0b9-4b36-bf5f-b5c0d4f1b7b4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="PolicyGet Account" path="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Policy/{POLICYCLASS}" id="098e61f7-4a13-44ad-b656-4637fcbaf6ef"><con:settings/><con:parameters><con:parameter><con:name>ACCT</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter><con:parameter><con:name>POLICYCLASS</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#policyClass}</con:default></con:parameter><con:parameter><con:name>MAJOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMinor}</con:default></con:parameter></con:parameters><con:method name="GET" method="GET" id="11cd2a0f-c888-487e-81b7-45e33946ef20"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200 0</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:PolicyList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:request name="PolicyGet I" mediaType="application/xml" id="973e699a-0e2e-49a1-9ee1-ab2d16cd6e7b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://${#Project#targetHost}:${#Projec#targetPort}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Policy Create" type="rest" basePath="" id="b19aa0ed-0a05-4f9e-8f58-c54715b931b8" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="PolicyCreate Account" path="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Policy/{POLICYCLASS}" id="88174ee8-e536-4b26-8b83-7639e3f3e1b4"><con:settings/><con:parameters><con:parameter><con:name>MAJOR</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#VersionMinor}</con:default></con:parameter><con:parameter><con:name>ACCT</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter><con:parameter><con:name>POLICYCLASS</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#policyClass}</con:default></con:parameter></con:parameters><con:method name="POST" method="POST" id="394c039c-2a6c-45ef-8c8e-cd162ce9bc1d"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>0 201</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/xml</con:mediaType><con:status>0</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml; charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="PolicyCreate I" mediaType="application/xml" postQueryString="false" id="e37725af-7d9c-4720-b8dc-3d7c36a78fa9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="PolicyCreate User" path="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/User/{USER}/Policy/{POLICYCLASS}" id="6557abf6-f58c-480e-9642-973a0367a351"><con:settings/><con:parameters><con:parameter><con:name>MAJOR</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#VersionMinor}</con:default></con:parameter><con:parameter><con:name>ACCT</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter><con:parameter><con:name>USER</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionUserIdFULL}</con:default></con:parameter><con:parameter><con:name>POLICYCLASS</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#policyClass}</con:default></con:parameter></con:parameters><con:method name="POST" method="POST" id="4fcd426c-c1b8-42b9-87bb-7976a86967c9"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>0</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/xml</con:mediaType><con:status>0</con:status><con:params/></con:representation><con:request name="PolicyCreate User" mediaType="application/xml" postQueryString="false" id="3b8441db-ba0c-4f77-ab67-67889879e318"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="StreamDelete" type="rest" id="8da2ee46-9bd1-4a2b-a5b3-5557f32b807b" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="StreamDelete" path="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/{SH}" id="2984b4c4-2ef6-484f-b0e8-98a147773595"><con:settings/><con:parameters><con:parameter><con:name>MAJOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMinor}</con:default></con:parameter><con:parameter><con:name>ACCT</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter><con:parameter><con:name>SH</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#streamhandleFULL}</con:default></con:parameter></con:parameters><con:method name="Delete" method="DELETE" id="b814fb35-dbc0-4f6f-9e7c-0ca8d187f79e"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>0</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/082012/12/coordinator">coor:ErrorList</con:element></con:representation><con:request name="StreamDelete" mediaType="application/xml" id="c45a5338-77f3-401a-b45f-29880b91f317"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Policy Get" type="rest" basePath="" id="b7ca0308-0ac3-4900-a9bf-8e34c285eea1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Query_HostName}</con:endpoint></con:endpoints><con:resource name="PolicyGet User" path="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/User/{USER}/Policy/{POLICYCLASS}" id="24a69715-25b2-4173-bb82-fffb3ee7a2c7"><con:settings/><con:parameters><con:parameter><con:name>MAJOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMinor}</con:default></con:parameter><con:parameter><con:name>ACCT</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter><con:parameter><con:name>USER</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#policyClass}</con:default></con:parameter><con:parameter><con:name>POLICYCLASS</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#policyClass}</con:default></con:parameter></con:parameters><con:method name="GET" method="GET" id="e752c836-423d-4fd7-844a-55936276ea84"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>0</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/06/coordinator">coor:PolicyList</con:element></con:representation><con:request name="PolicyGet User" mediaType="application/xml" id="150768de-6b9f-4aef-ac26-2c603ab192d8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="PolicyGet Account" path="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Policy/{POLICYCLASS}" id="088259a6-4990-471c-90b6-35d74456d7de"><con:settings/><con:parameters><con:parameter><con:name>MAJOR</con:name><con:value>${#Project#VersionMajor}</con:value><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:value>${#Project#VersionMinor}</con:value><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMinor}</con:default></con:parameter><con:parameter><con:name>ACCT</con:name><con:value>${#TestCase#assertionAccountIdFULL}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter><con:parameter><con:name>POLICYCLASS</con:name><con:value>${#TestCase#policyClass}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestCase#policyClass}</con:default></con:parameter></con:parameters><con:method name="GET" method="GET" id="228c8b60-74c2-4928-9b01-f71b3c60b31c"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html</con:mediaType><con:status>0</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>0</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/06/coordinator">coor:PolicyList</con:element></con:representation><con:request name="PolicyGet Account" mediaType="application/xml" id="1c0254a2-027c-4a9c-9f48-64d08dd56ca0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Policy Delete" type="rest" basePath="" id="9fb71725-cb76-4cfe-947b-52d8cb96692c" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="Policy Delete for User" path="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/User/{USER}/Policy/{POLICYCLASS}" id="68ae7e6b-b912-417f-9ae3-9c142bb42777"><con:settings/><con:parameters><con:parameter><con:name>MAJOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMinor}</con:default></con:parameter><con:parameter><con:name>ACCT</con:name><con:value>${#TestCase#assertionAccountIdFULL}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter><con:parameter><con:name>USER</con:name><con:value>${#TestCase#assertionUserIdFULL}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionUserIdFULL}</con:default></con:parameter><con:parameter><con:name>POLICYCLASS</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#policyClass}</con:default></con:parameter></con:parameters><con:method name="DELETE" method="DELETE" id="b54399e4-93bf-4713-98fa-e8cd76f5c7fd"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="PolicyDelete for User" mediaType="application/xml" id="efaee60e-4e77-4edb-b4ba-e8192785f254"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="E2E" type="rest" basePath="" definitionUrl="C:\COmmon\E2E_1.wadl" id="73666e04-048d-4b22-b674-374d266e082c" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT"/><con:endpoints/><con:resource name="AccountCreate" path="rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account" id="cf6ca364-dbc1-44a4-aef8-d13dca44ec7b"><con:settings/><con:parameters/><con:method name="AccountCreate" method="POST" id="b93c5bcc-3563-486f-accd-3c7330e8f529"><con:settings/><con:parameters/><con:request name="Request 1" id="39e8107e-8f75-4f2a-9cd9-8579f6992fa7" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="UserCreate" path="rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account/{AccountID}/User" id="238ee70c-839f-4820-a19b-a6cd514fb242"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:method name="UserCreate" method="POST" id="7792ce37-884c-4233-86b5-dbd4ec9af0c4"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:User</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:User</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="85158d81-1226-4d8a-ad4a-484bf16be2ad" mediaType="application/xml"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="STSCreate" path="rest/${#Project#VersionMajor}/${#Project#VersionMinor}/SecurityToken/SecurityTokenExchange" id="3a9f3e09-e693-4088-8be7-b8884d7ee1db"><con:settings/><con:parameters><con:parameter><con:name>tokentype</con:name><con:value>${#TestCase#tokentype}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#TestCase#tokentype}</con:default></con:parameter><con:parameter><con:name>audience</con:name><con:value>${#TestCase#audienceList}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#TestCase#audienceList}</con:default></con:parameter></con:parameters><con:method name="STSCreate" method="POST" id="152924d7-a23e-435b-a680-861371deca2d"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:Credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:Credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="ab664950-efbc-4858-a34d-43de9543c979" mediaType="application/xml"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="STSGet" path="rest/${#Project#VersionMajor}/${#Project#VersionMinor}/SecurityToken/Assertion/{ASSERTION}" id="942dbbe9-e9ce-429d-9403-c988ca61e444"><con:settings/><con:parameters><con:parameter><con:name>ASSERTION</con:name><con:value>${#TestCase#assertionUUID}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#TestCase#assertionUUID}</con:default></con:parameter></con:parameters><con:method name="STSGet" method="GET" id="592ac52a-e3b3-4ff6-9598-13e6a435633b"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>text/xml;charset=ISO-8859-1</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="45a924b2-bc3e-4785-801d-162ebcf66fab" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="PolicyCreateUser" path="rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" id="086de33e-fad2-465c-aa9a-0d1ce5d0635d"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter><con:parameter><con:name>NodeUserId</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter><con:parameter><con:name>PolicyClass</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:method name="PolicyCreateUser" method="POST" id="30ecd9fc-6c68-49cc-87ee-95e09ee8851d"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:PolicyList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:PolicyList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="e1a449ae-d6f7-47b5-ae5c-14da289a0108" mediaType="application/xml"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="PolicyCreateAccount" path="rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account/{NodeAccountId}/Policy/{PolicyClass}" id="300c46eb-d3ee-4c1e-83e6-ecd4331152e7"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter><con:parameter><con:name>PolicyClass</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:method name="PolicyCreateAccount" method="POST" id="5322098e-1817-4274-b29c-5cecefd9075f"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:PolicyList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:PolicyList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="d685a925-a629-4f05-bc50-13757be1109a" mediaType="application/xml"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="AccountUserCreate" path="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account" id="238ee70c-839f-4820-a19b-a6cd514fb242"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:method name="AccountUserCreate" method="POST" id="7792ce37-884c-4233-86b5-dbd4ec9af0c4"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:User</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:User</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="85158d81-1226-4d8a-ad4a-484bf16be2ad" mediaType="application/xml"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite name="00SetupScripts" id="79fd30b1-8767-488c-bbfa-cf9d51be26a5"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Setup" searchProperties="true" id="26cd9d14-463d-46a6-9d86-d62f34365486"><con:settings/><con:testStep type="groovy" name="Set ENV Properties" id="c8153553-f749-4e01-a903-ede82e16820b"><con:settings/><con:config><script>	def tC = testRunner.getTestCase();
	def tS = tC.getTestSuite();
	def tP = tS.getProject();

	log.info("Set Environment properties!!!");
	def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
	def projectPath = groovyUtils.projectPath
	log.info("Project Path : '" + projectPath + "'");

	def eNV = context.expand( '${#Project#ENV}' )
	log.info("Environment: '" + eNV+ "'");

	def propertiesPath = null;

	if (System.properties['os.name'].toLowerCase().contains('windows')) 
		{
				log.info "it's Windows OS!!";
				File temp = new File( projectPath + "\\..\\..\\..\\Properties\\");
				propertiesPath = temp.getCanonicalPath();
		} 
	else 
		{
				log.info "it's Linux OS!!";
				File temp = new File(projectPath + "/../../../Properties/");
				propertiesPath = temp.getCanonicalPath();
		}
		
	log.info("Properties File Location : '" + propertiesPath+ "'");


	def propMap=[:]
	BufferedReader reader = new BufferedReader(new FileReader(propertiesPath + "/" + eNV +"project.properties"));
	log.info("Load property file : '" + propertiesPath + "/" + eNV +"project.properties"+ "'");
	String line;
	while ((line = reader.readLine()) != null)
		{
			if (line.trim().length()==0) continue;
			if (line.charAt(0)=='#') continue;

			int delimPosition = line.indexOf("=");
			String key = line.substring(0, delimPosition-0).trim();
			String value = line.substring(delimPosition+1).trim();
			propMap.put(key, value);
		}

	propMap.each{ k, v -> tP.setPropertyValue(k,v)}
	
tP.setPropertyValue("APID",tP.getPropertyValue("Streams_APID"));
tP.setPropertyValue("ALID",tP.getPropertyValue("Streams_ALID"));
tP.setPropertyValue("CID",tP.getPropertyValue("Streams_CID"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set_CoordinatorSchema" id="48269ecf-b273-459a-9b42-0e17bd89abe1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

log.info "V2: "+tP.getPropertyValue("VersionMinor");

def v2 = context.expand( '${#Project#VersionMinor}' )
def schema = tP.getPropertyValue("coordinatorSchema_"+v2);

tP.setPropertyValue("coordinatorSchema",schema);
log.info "Setting the coordinatorSchema value ---- "+schema;
</script></con:config></con:testStep><con:testStep type="datasource" name="Country" id="cfaa9b8b-d6b0-4f8d-9b0f-6979985a7db9"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">US&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">GB&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">CA&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">IE&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">AU&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">NZ&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">AT&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">DE&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">CH&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">FR&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">BE&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">NL&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">LU&lt;/con:entry></row></con:configuration></con:dataSource><con:property>Country</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="groovy" name="TOUSetup" id="73bd7507-773f-4e9f-8a22-7701c077c488"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def tP = testSuite.getProject();

def dBHost = context.expand( '${#Project#targetSystem}' )

def country = context.expand( '${Country#Country}' )

def a = new dbUtils.dbUtils(log,dBHost);
String sql = """select consent_version from (select
	            consent_version            
	            from
	            CONSENT
	            where
	            CONSENT_URN = 'urn:dece:type:policy:TermsOfUse'
	            and
	            COUNTRY = '""" + country + """'
	            order by
	            consent_version desc)
	            where rownum &lt; 2""";             
	log.info sql;
        
        results = a.SelectFromDB(sql,dBHost);

//                            a.dbConnClose();
       assert results.length() > 0;
       log.info "results" + results;

       def myXML = new XmlSlurper().parseText(results);   

       log.info myXML.ResultSet.Row.CONSENT_VERSION.text();
                testCase.setPropertyValue("Consent_Version",myXML.ResultSet.Row.CONSENT_VERSION.text());
                

def consent_Version = context.expand( '${#TestCase#Consent_Version}' )

tP.setPropertyValue("TOU_"+country,consent_Version);


</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" disabled="true" id="1866b329-3468-41df-88ad-c6235c6ac808"><con:settings/><con:config><dataSourceStep>Country</dataSourceStep><targetStep>TOUSetup</targetStep></con:config></con:testStep><con:testStep type="groovy" name="Set TOU Policy Resource" id="b3382ec5-28d4-4347-be11-d3a1c0aa9880"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def policy_TOU = context.expand( '${#Project#Policy_TOU}' )


String country = context.expand( '${#Project#Country}' );
def tOUUrl = context.expand( '${#Project#TOUUrl}' )

def touForCountry = "TOU_"+country
def consent_Version =  tP.getPropertyValue(touForCountry);

tP.setPropertyValue("policy_TOU",'https://'+ tOUUrl + '/Consent/Text/' + country + '/urn:dece:type:policy:TermsOfUse:' + consent_Version + '/html');

log.info "Policy TOU from Project level property " + tP.getPropertyValue("policy_TOU");
</script></con:config></con:testStep><con:testStep type="groovy" name="MicroService Enable/Disable Testcases" id="be9322e3-557e-4879-b4fd-c4d7ca754fe6"><con:settings/><con:config><script><![CDATA[
//TestCase
def testCase  = testRunner.getTestCase();
def microService = context.expand( '${#Project#microService}' ).toString();
ArrayList<String> Suit_lst=new ArrayList<String>();
//Get Arguments
 
def project = context.testCase.testSuite.project;

for (suiteName in project.testSuiteList) {
log.info suiteName.name;
Suit_lst.add(suiteName.name);
  
}

//log.info "suit"+Suit_lst.get(1);





ArrayList<String> Tstep=new ArrayList<String>();

def TStep1  = "Remove Account's StreamHandles";
def TStep2 = "Verify STREAM_DATA_HISTORY row";
def TStep3 = "Verify STREAM_DATA, STREAM_HISTORY row counts for the Account";
def TStep4 = "Post Test Cleanup";
def TStep5 ="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts"
def TStep6 ="Verify STREAM_DATA row"
def TStep7 = "Remove account's stream handles"
def TStep8 =  "Post Test Execution cleanup"

Tstep.add(TStep1);
Tstep.add(TStep2);
Tstep.add(TStep3);
Tstep.add(TStep4);
Tstep.add(TStep5);
Tstep.add(TStep6);
Tstep.add(TStep7);
Tstep.add(TStep8);

for (String suit : Suit_lst)
{  def testSuite = suit;
     def TCList  = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
     def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

   for(i = 0; i <= TCCount - 1; i++)
     {                                              
                def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
                testStepList  = targetTestCase.getTestStepList();
                testStepCount = targetTestCase.getTestStepCount();
                if(targetTestCase.isDisabled() == false)
                {
                                for(j = 0; j <= testStepCount - 1; j++)
                                {              
                                	      def q=0;  
                                                try
                                                {     
                                                          for (String T_step : Tstep)	
					                                {
                                                                if (testStepList[j].name == T_step) {
                                                                                
                                                                                targetTestStep = targetTestCase.getTestStepByName(testStepList[j].name);
                                                                                //targetTestCase.removeTestStep(targetTestStep);
                                                                                if(microService=="ON")
																				{  
																				   targetTestStep.setDisabled(true)
																				   log.info "Disabled Step " + testStepList[j].name;
																				}
																				else
																				{  
																				   targetTestStep.setDisabled(false)
																				   log.info "Enabled Step " + testStepList[j].name;
																				}
                                                                         }
													q++;
																  
												}
                                                                
                                                                //stepScript = testStepList[j].getScript();
                                                                //stepScript = stepScript.replace(oldString, newString);
                                                                //targetTestStep.setScript(stepScript);                  
                                                }
                                                catch(Throwable e)
                                                {
                                                                log.info "ERROR:" + e;
                                                }              
                                }
                }
    } 
}                                                                                             
]]></script></con:config></con:testStep><con:testStep type="groovy" name="Identify Flaky Testcases" id="66bfd571-0ec8-4e9d-8896-5e5ba690c482"><con:settings/><con:config><script>//Project Level Variable name – FLAKYSELECTOR.
//Possible Values – all, only_flaky, without_flaky
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tc_condition  = context.expand( '${#Project#FLAKYSELECTOR}' ).toString();
log.info tc_condition

tP.getTestSuiteList().each
{
      if(!it.getName().toLowerCase().contains("setup") &amp;&amp; !it.isDisabled())
       {
                it.getTestCaseList().each
         {
             if(tc_condition.toLowerCase()=="all")
             {
                                
                 if(it.getName().toLowerCase().contains("migrated"))
                       it.setDisabled(true);  
                   else 
                         if (!it.isDisabled()) {
                               it.setDisabled(false);
                           }
                                                                                                              
                }
                                                                
             else if(tc_condition.toLowerCase()=="only_flaky")
               {
                  if(it.getName().toLowerCase().contains("flaky"))
                                                it.setDisabled(false);  
                  else
                         it.setDisabled(true);
                }
                else
                {
                   if(it.getName().toLowerCase().contains("migrated") || it.getName().toLowerCase().contains("flaky"))
                                           it.setDisabled(true);  
                   else
                        if (!it.isDisabled()) {
                                it.setDisabled(false);
                                 }
 
                }
           }
        }
}

</script></con:config></con:testStep><con:properties><con:property><con:name>Consent_Version</con:name><con:value>20140811</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>48eef7a0-e5f2-4926-99bb-c9ecd11b1888</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c0f3550c-c4aa-4ddc-abb8-3d629c23599f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>396d1d6b-33dd-48d6-b41d-40fc4be4bc57</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="P0_StreamListView_ISCPortal_ISCPortalCS" id="c96f87c6-6f49-48ce-a4c8-7b76fd92064c"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_70000 - StreamListView - PORTAL - Test Suite Staging" searchProperties="true" id="d024de00-7520-4d48-9167-0a7ea59c2f24"><con:description>This test case will verify proper response from the StreamCreate API when the supplied SAML assertion references a node account that is in pending status</con:description><con:settings/><con:testStep type="groovy" name="Create Data for retailer,lasp and nonlasp" id="03b86a3c-ca6b-410d-a360-d8d1de478aec"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTS = tP.getTestSuiteByName("E_2_E");

def runnerTC = myTS.run( null , false )

assert runnerTC.status == Status.FINISHED;

tP.setPropertyValue("StreamCreateCount","0");
tP.setPropertyValue("StreamDeleteCount","0");
tP.setPropertyValue("StreamDeleteList","");
tP.setPropertyValue("accountList","");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish TestCase Properties" id="eff07c5f-0c0a-45ad-abcd-476259ac560d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","STREAM_ACCOUNTID_MISMATCH");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","deleted");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");
tP.setPropertyValue("expectDBCreatedByDB",tC.getPropertyValue("nodeid"));
tP.setPropertyValue("expectDBDeletedByDB",tC.getPropertyValue("nodeid"));
tP.setPropertyValue("expectDBUpdatedByDB",tC.getPropertyValue("nodeid"));


tP.setPropertyValue("StreamCreateCount","0");
tP.setPropertyValue("StreamDeleteCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="126b3e26-ef9d-4443-afed-e6fd51abf3c9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT.STATUS to 'active'" id="fb72aeac-338c-4cfe-8dea-ebd11b241236"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"active") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT_USER.STATUS to 'active'" id="bb1d8cbb-8c68-45c5-be86-c02b304f4888"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUser(log,tP.getPropertyValue("targetSystem"));

assert a.userSetStatus(tC.getPropertyValue("useroid"),"active") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="- Remove all Parental Control Policies Clean-up" id="14bb2298-3f55-4505-a80e-cfa018f97ade" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Policy - Remove all Parental Control Policies")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set CIDs Rating to G" id="42370741-1b87-4ab9-ac01-6f9ddc7b3f10"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbCID(log);

String cid     = tP.getPropertyValue("cid");
String region  = "US"
String country = "US"
String system  = "MPAA";
String rating  = "G";

this.log.info "rating[$rating]";

assert a.sqlSetRating(cid,region,country,system,rating) == 1;

</script></con:config></con:testStep><con:testStep type="groovy" name="Purge Account Stream Handles" id="825e3a6b-6d01-4f43-90cb-ca630c118b87" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>errorRespType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamstatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150430_07310</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD382743DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD498043DE8E05305991F0AC941</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZRd6I6EP4rHvZxDwIW1HKq51isXbtWW+3duvdlTwwDpoUESUDrr78JKlVre733iZNhMvPNzJcvueIojmpuh3NIBWG0soojyt3C2tKylLoMccJdimLgrsDupHM/cGtV00W7LVql321pfxxAgBtNrIPt1HTbCSx9VrdsHfwAWwE4polt6cp5Bn3KBaKipdVMy9FNW78wnyzbNU3XMqu1pv23VvkFKZexpUvV1LagVrylzYVIXMNYLpfV5UWVpaFRM03LmN4PJngOMdLaV5uKikRpe+uPqz5giCJcxSw2rowDnyufuxMSUiSyFLa5/M9ymYZ5aUgfn5Pwm1buBb9PA1YsPUQZJRhFZI1Uf+5BzJlf6UQhS4mYx58WYZkqsA4rrGPLpt804xDamYEOEKYc6XyOrG2sMQSQAsVQ+Wvcb2nfzptasfUpRZQHLI354fK/4QGaQ8QS8HW+K2sL7fyAJzrVvgLs9imOMk5yGCqyJggD304T8PmhKg8pBGQ1IFwSdMUVOmMf3tFy040uCYGL/zOgveFsgvxCUQbt75AvRj+99bx2vyL8rr6G+vTXcv674ZitAsC+c2EoR7tZHpGyJNFmB7amt53XZuh8929eb2fPj3yRcjqevQ6bj/XG+Pe4+3368tRgoWiO2HPQqdt36xERQdJ3nNtYXP52rKkzY6PnG+ZNDDYfzziLhw+3wzzpwDpcvtBBPPLGd8PnwbXoROvRc39K6Yu38O56PfrIB80E3U2DQceO8h9dDtait0zqxt1zmN0v/PQt7DUCPvwxiiVLy3L28B/admd+ks1eAIvdUtGg36305JSQ+FrMlIX4elC4uokSHy6ACq2tdintcDMpd8R35Qw3a8vu1RrXXfuyaV9fdG+aN6ZzYTqXl1bP7HiXtrUTmQ2KI4geowFRuZTkbmjzNUAcuxyoD6mes0wqHde+iNhFAlX6dCwPAaMcnpiUZ6s5ezNTVF/nby9BZpmp38hfQsuS6jpkYkRHaScQkB5qcuNAk8eASUJACbfiNZfE5kL2YoHyTERWNUdVCpmU9lSprFuzm47BSZxEoJAaMfOzCKrJPCk6Y/DNt6YjzAtrd9CZPPzxJn9qxaH7tLzjf7tOSB+fKAeuSroGOU04cceYu3o+1F0/eRftwncyn6jzJdsqUoI3SA5/vbNF0aSkynthO+TlhmPDQXDjuK4yn58TXNK+vLylpksVaO+Gs0DVRTXL86wYR8M0a0YqwxuqI4ZcTABnUqfentgrUKOMYpx1KZTAj5KX9kOImZjTiUACYsmfSrE84xUwAa5eAX1J/NW5T4yDlLJ1AlbilM2L5AtGIf7ykYNdrPyk+UF+liz13yd2ItZeHlmnfAQIQkO1UhfC2yf0wEyGJVLKWLof/FSAU8kPjWWTSyxCEmqWCfj8T0VpVEtDGLOMin5XKwz7ulngFG8JuO9OH8IU0ly+1ci/P9Z0UlAAg3zhcVLEV1euq44ADfe0d5v0g/x69eter3dxceNZhfw2NvJbq3vNsikH6NofzB8te3065nj7Hw==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">STREAM_ACCOUNTID_MISMATCH</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD4984B3DE8E05305991F0AC941</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27C6BFFF33EC1E05307991F0A26C8</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD3827B3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14F27BD4984B3DE8E05305991F0AC941</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14F27C6BFFF33EC1E05307991F0A26C8</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80261</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>14F27BD3827B3DE6E05305991F0A3F36</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>0bea6a53-529e-47ba-91fd-6fcb8a816b90</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_76520 - StreamListView - PORTAL - Full User can view stream created by Full User - 200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="ded0d03a-28bb-4b0d-b09b-b4b1964391e1"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="6d31bc7e-bf93-49bc-96c4-4a05fef9afee"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull2Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="055ddb96-a35b-41f8-afd8-c26a46cecc6a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="f8783b32-c19a-467d-9bdc-b1cddf1d7897" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="9f82a986-579d-4810-a1d8-a8e82f869f9e"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="c8100000-2e7d-4966-83e7-795520f40bbb"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTAL" id="1058a0fd-576f-437c-b23b-60c0f1645d23"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="1b3c123b-33d2-4f9e-a1a6-7fc3c7fa6a9c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="36268979-02ab-4881-a060-a1bb5d5d870e" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="de323f21-5b61-44a1-b273-fa454fc2f38b" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="a96af168-0e8b-453e-a3b4-6f28f96f81d8" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportal1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150430_07310</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:AFC110005BCF4A69B672DE3883FCB8C5</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD382743DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD498043DE8E05305991F0AC941</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbZcuI4FP0VynlMGe/EuAJVEELaCUsa6DSdlykhy6DElowls339SAYcICRDz5NL11fnnrvoSLcMxJHpNRhDKceUlFZxRJiXW2tKlhKPAoaZR0CMmMehN2x0O55Z1j2w36KU/FZN+cdxTceydFMNQzBR7Sq0VTe0QxWYpqPfWGbghqZwZSxDPmEcEF5TTN1wVN1WLX1kWJ7jeqZdtqrGq1J6QSkT2MKlrCs7UitWU2acJ56mLZfL8tIq03SqmbpuaONuZwhnKAZK/XabUR4ore/8YTlAEEURLEMaa7fakc9twLwhnhLAsxTtYgVfxdI1vaoJn4Dh6ZVS7EWBT0KaL+8AoQRDEOENkPXpIj6jQakRTWmK+Sz+MglDl8AqWkEVGja5UrRjahcCHTFMGVDZDBg7rAEKUYoIRKVfA7+mXF3WtXzrKAWEhTSN2fHy7/ggskARTVCgsn1aO2qXA56pVP0WQc8nMMoYXqCeHNYEQMR23UTwcqjSc4pCvOpgJgZ0xSQ77ZDeyXJbjRaeIsb/T4MOmrMFeQFRhur3y7e2tpmvmuMlni4faTTu0kpQcQL6s5YTOHTODUVrt8uToSyGaLuj1RuP/enTwyu/j90n8+Fuxl820etD2LOywXy86NKkUXG7ofFm95O2U3kfNLvNhpvwh8eY+MnC6Wza/Zi9mqs/G4Z/x7Ne8rNrLPGgnzUnnevU+VN9sedk/mPdd5+ffsBW/709wL5DOyMIKmBiGb0MLhvZ/XR4vXGnjy92rE/T6/4o+/2rEbyx8KEBgqW9aQZ+rUjngP+xbX/mh9nkDUG+X8ox8FultugS4N+LmbTgQA1zVy+R4sM4Ilypy11SO7xMyB0OPNHD7dqw2+ZNs2VXXd2yWvfuve5YulOtGm29cVe1jb3IbFmcULyjJMQylpTc7dh8TxDGHkMkQKm6oJlQOqZ8g9gCHJR8MhCHgBKGRlTIswFu5u47six3Ul0b72vMo3SRVFlYVUo9yvuknzZCjtJjUa4cifIAQZxgJJVbDjYTk824KMYcLDIeGeUFKBOUCW1PpcyKfa6jMRwnEZJUtZgGWYTKySzJS6Ox7ddUAWS5FTOY0JSDKD90X6Z3+m9fCeETYOnAZEZNJLqJztwxxj6dT2lXzt5Fe/hGFmB5vkRZeYrhlsnxr49pkWNSjEqRVzEUxYa/BIDsDIT2DT/ttDRFxGCBD+LvL3NxLQghqe/bOwfleTlbLLK8oTe6bmqpgNdkUTWxGCKYCalbj+g7IlqBol10rxTET4IX9mOKGZ+RIQccxWICS/nygofEEDH5kPDF2Vld+ko5CilKx9GKn7PdReIRJBl/+06CHpR+wvwsPkuaBh8dO4N1EEfkKd4RHJOpXMk7Zf3FgEAqYLFQQ5oegp8DOBf82FgUueDCxUBNMo6+/lOSMldTAIQ0I9xvKbnhUHpznnydIO/D6RNMru7Fcw//93tPxfkIQCQeiQzn+PLW9uQRINMD+d4FPaPglmveSAWvHCq41bYqRVGO2NU/mT9bDup0OuP1fwE=</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD498033DE8E05305991F0AC941</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD382733DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD3827B3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14F27BD498033DE8E05305991F0AC941</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14F27BD382733DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD45A1D3EC5E05307991F0A16E0</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14F27BD45A1D3EC5E05307991F0A16E0</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">AFC110005BCF4A69B672DE3883FCB8C5</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:AFC110005BCF4A69B672DE3883FCB8C5</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">AFC110005BCF4A69B672DE3883FCB8C5</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/30 14:01:55</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14F27BD4984B3DE8E05305991F0AC941</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14F27BD45A1D3EC5E05307991F0A16E0</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14F27BD4984B3DE8E05305991F0AC941</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14F27BD45A1D3EC5E05307991F0A16E0</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD45A1D3EC5E05307991F0A16E0</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14F27BD45A1D3EC5E05307991F0A16E0</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80312</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD3827B3DE6E05305991F0A3F36</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_86520 - StreamListView - PORTALCS - Full User can view stream created by Full User - 200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="74b22aaf-2a5f-4e65-b941-3e67f8fce15a"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="9d34d3e6-724b-401e-83f7-e6f40598b120"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull2Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="51a6f42f-79c1-4d9b-8b10-a83e257f5e2d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="2b226647-f378-48ce-9bda-16048ec5636e" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="5c96601b-2167-438d-97d2-1a9fd696d4e9"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="0389459d-0657-4c5f-bd7e-c301fb35ed19"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTALCS" id="62571e57-604d-4957-991d-cdefc39f50b9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portalcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="9eadbb3d-825e-4c6b-934d-d6f1b6392656"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="fc32e745-aa34-4e29-b131-152385f49da2" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="7aa64ab6-8bfc-4c30-9da4-83af196aece6" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="9f70b068-54e8-4144-b93d-65a01c39cc68" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportalcs1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150430_07310</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:1B0CE4A34359414FB5561C85C04B8861</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD382743DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD498043DE8E05305991F0AC941</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbZcuI4FP0VynlMGe/EuAJVEELaCUsa6DSdlykhy6DElowls339SAYcICRDz5NL11fnnrvoSLcMxJHpNRhDKceUlFZxRJiXW2tKlhKPAoaZR0CMmMehN2x0O55Z1j2w36KU/FZN+cdxTceydFMNQzBR7Sq0VTe0QxWYpqPfWGbghqZwZSxDPmEcEF5TTN1wVN1WLX1kWJ7jeqZdtqrGq1J6QSkT2MKlrCs7UitWU2acJ56mLZfL8tIq03SqmbpuaONuZwhnKAZK/XabUR4ore/8YTlAEEURLEMaa7fakc9twLwhnhLAsxTtYgVfxdI1vaoJn4Dh6ZVS7EWBT0KaL+8AoQRDEOENkPXpIj6jQakRTWmK+Sz+MglDl8AqWkEVGja5UrRjahcCHTFMGVDZDBg7rAEKUYoIRKVfA7+mXF3WtXzrKAWEhTSN2fHy7/ggskARTVCgsn1aO2qXA56pVP0WQc8nMMoYXqCeHNYEQMR23UTwcqjSc4pCvOpgJgZ0xSQ77ZDeyXJbjRaeIsb/T4MOmrMFeQFRhur3y7e2tpmvmuMlni4faTTu0kpQcQL6s5YTOHTODUVrt8uToSyGaLuj1RuP/enTwyu/j90n8+Fuxl820etD2LOywXy86NKkUXG7ofFm95O2U3kfNLvNhpvwh8eY+MnC6Wza/Zi9mqs/G4Z/x7Ne8rNrLPGgnzUnnevU+VN9sedk/mPdd5+ffsBW/709wL5DOyMIKmBiGb0MLhvZ/XR4vXGnjy92rE/T6/4o+/2rEbyx8KEBgqW9aQZ+rUjngP+xbX/mh9nkDUG+X8ox8FultugS4N+LmbTgQA1zVy+R4sM4Ilypy11SO7xMyB0OPNHD7dqw2+ZNs2VXXd2yWvfuve5YulOtGm29cVe1jb3IbFmcULyjJMQylpTc7dh8TxDGHkMkQKm6oJlQOqZ8g9gCHJR8MhCHgBKGRlTIswFu5u47six3Ul0b72vMo3SRVFlYVUo9yvuknzZCjtJjUa4cifIAQZxgJJVbDjYTk824KMYcLDIeGeUFKBOUCW1PpcyKfa6jMRwnEZJUtZgGWYTKySzJS6Ox7ddUAWS5FTOY0JSDKD90X6Z3+m9fCeETYOnAZEZNJLqJztwxxj6dT2lXzt5Fe/hGFmB5vkRZeYrhlsnxr49pkWNSjEqRVzEUxYa/BIDsDIT2DT/ttDRFxGCBD+LvL3NxLQghqe/bOwfleTlbLLK8oTe6bmqpgNdkUTWxGCKYCalbj+g7IlqBol10rxTET4IX9mOKGZ+RIQccxWICS/nygofEEDH5kPDF2Vld+ko5CilKx9GKn7PdReIRJBl/+06CHpR+wvwsPkuaBh8dO4N1EEfkKd4RHJOpXMk7Zf3FgEAqYLFQQ5oegp8DOBf82FgUueDCxUBNMo6+/lOSMldTAIQ0I9xvKbnhUHpznnydIO/D6RNMru7Fcw//93tPxfkIQCQeiQzn+PLW9uQRINMD+d4FPaPglmveSAWvHCq41bYqRVGO2NU/mT9bDup0OuP1fwE=</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD498033DE8E05305991F0AC941</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD382733DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD3827B3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14F27BD498033DE8E05305991F0AC941</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14F27BD382733DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD498913DE8E05305991F0AC941</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14F27BD498913DE8E05305991F0AC941</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1B0CE4A34359414FB5561C85C04B8861</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:1B0CE4A34359414FB5561C85C04B8861</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1B0CE4A34359414FB5561C85C04B8861</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/30 14:03:12</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14F27BD4984B3DE8E05305991F0AC941</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14F27BD498913DE8E05305991F0AC941</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14F27BD4984B3DE8E05305991F0AC941</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14F27BD498913DE8E05305991F0AC941</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD498913DE8E05305991F0AC941</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14F27BD498913DE8E05305991F0AC941</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80408</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>14F27BD3827B3DE6E05305991F0A3F36</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="Portal Test Cases_P1_P2" id="0435bb6e-7cc6-4f02-836e-a1adf0e0a048"><con:description/><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">D:\Stream reports R3\stream list view</con:setting></con:settings><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_70000 - StreamListView - PORTAL - Test Suite Staging" searchProperties="true" id="0e429f75-7a5d-42df-940d-7858af06595b"><con:description>This test case will verify proper response from the StreamCreate API when the supplied SAML assertion references a node account that is in pending status</con:description><con:settings/><con:testStep type="groovy" name="Create Data for retailer,lasp and nonlasp" id="0bea6a53-529e-47ba-91fd-6fcb8a816b90"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTS = tP.getTestSuiteByName("E_2_E");

def runnerTC = myTS.run( null , false )

assert runnerTC.status == Status.FINISHED;

tP.setPropertyValue("StreamCreateCount","0");
tP.setPropertyValue("StreamDeleteCount","0");
tP.setPropertyValue("StreamDeleteList","");
tP.setPropertyValue("accountList","");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish TestCase Properties" id="92098ead-9ece-4f16-9508-37ecb1aa46d5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","STREAM_ACCOUNTID_MISMATCH");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","deleted");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");
tP.setPropertyValue("expectDBCreatedByDB",tC.getPropertyValue("nodeid"));
tP.setPropertyValue("expectDBDeletedByDB",tC.getPropertyValue("nodeid"));
tP.setPropertyValue("expectDBUpdatedByDB",tC.getPropertyValue("nodeid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="befb4e4a-c670-4bf4-b6af-607ecc144aa2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT.STATUS to 'active'" id="9cf504e5-2251-46bd-933a-a3bd1df37679"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"active") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT_USER.STATUS to 'active'" id="92eeaa1b-537f-4a56-9239-39eddb1f0955"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUser(log,tP.getPropertyValue("targetSystem"));

assert a.userSetStatus(tC.getPropertyValue("useroid"),"active") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="- Remove all Parental Control Policies Clean-up" id="e54f9a15-3e90-43e9-8dfd-56f56a1db2e9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Policy - Remove all Parental Control Policies")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set CIDs Rating to G" id="0b67b9b7-f4bb-4a2d-ab0a-c954b477912b" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbCID(log);

String cid     = tP.getPropertyValue("cid");
String region  = "US"
String country = "US"
String system  = "MPAA";
String rating  = "G";

this.log.info "rating[$rating]";

assert a.sqlSetRating(cid,region,country,system,rating) == 1;

</script></con:config></con:testStep><con:testStep type="groovy" name="Purge Account Stream Handles" id="573533be-1eab-42f1-bddb-8f8214098892"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>errorRespType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamstatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150504_051533</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1540EA15C4827A5AE05305991F0AA5A8</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1540FA93A67D7830E05307991F0A6998</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZrU+o6FP0rTP14pvRBeXWEmQqiKKgH0HP1ixPSlEbbpCZpQX/9SQpUiujl3hlmmOzurL32Iys55SCObNfjHDGBKams4ohwN7d2tJQRlwKOuUtAjLgroDv1xiPXrpou2G7RKsN+R3uew2Z77lhtHVktS3dsM9BBy2zpZtNp1Oe271iNpnTlPEVDwgUgoqPZplXXTflzZpblOo5br1Utp/WkVR4Q4xJbulRNbUNqxTtaKETiGsZyuawua1XKFoZtmpbxz3g0hSGKgdY9XWeUB2LdjT+s+giiKIJVSGPj1Cj5nPrcneIFASJlaBPL/y6WaZhtQ/r4HC9OtGIv8ockoPmyBwglGIIIfwBVnzESIfUrXrSgDIsw/jYJy1TAOlpBHVoOOdGMMrUjgUoMGQc6D4G1wZqgADFEIKrcT4Yd7eS4ruVbZwwQHlAW8/Lyv/FBJEMRTZCv821aG2rHAx6oVPcUQXdIYJRynKEbNawJgIhvuong8VCVO4YCvBphLgd0xRU7Y5fe3nJdjT5eIC7+T4N2mrMGeQBRirqMD27fw8ePt0W4sn1kB436OXvxrkzqdXICu865oWjterk3lMUQrXfgh2WAr9usdXmeXvXa00H25/pq0beibJa1R1Z2vhqf317+ekrTGo3avDZPR5d2Emeg9zCGNny8njR+44mBF+N2EoX2OawvV/z9dTxpfmTxw0XDw8lT/Ta+GY8uPuirFy7nbxe/Z5dLEs+cXyMv+OO93732nzKn3QvvG2ejFy984QG7Jy91FJz58f3jpUkbdWbLc1iks8O/bNue+Wk6f0FQbJdqDIb9ykB2CYifxUxZsK8HuaubKPHhAhGhddUupR1uKuUO+67s4Xpt1R2zZ9a8QaNl1axB79ys18xmu20NTM+Tf1uRWbPYo9ijJMAqlpLc9dj8TBDGLkfER0zPaCqVjms/IPaBAJUhmchDQAlHMyrl2Qpab6HfbKStaLWc80YSN9MFX+C6Vrmh4pbcMi8QiJU12Slp8gRBnGCkhFvNNZeDzYWsxRvIUhFZ1QxUCUqltDOlsq7ttOoGx3ESIcXUiKmfRqiahEleGYOv/20dQJ5b+yNvevfcmz7nB8L4Nr39b9tKSB8fKweuUjpDspvowB3jbPP5knfj4F20hfdSH6vzJcsqGIZrJuVPn9OixqQYlc/EtsyLDfuGErixn1cRz88wLMa+uLylpksV6G6b8was6ls1zbI074fj1Awm4Q1VEcO0jSmCqdSp9xl9RcQoUIyjLoWC+F7wwl6mmIqQTAUQKJbzU8mXR7wCpoirV8BQDv7q2CdGKaQsnUArccjWi+QLRjH+8ZEDXaj8pPlO/i0p8z87dgBrJ47MUz4CBCYLtVIXwvs34wGphMVSyijbBT8EcCh42VgUueAi5EDNU4G+/1JRGtXRAIQ0JWLY13LDrm7mPMV7gtxPpy8wuTQXbzX87481HecjAJF84XGc46sr11VHgCx2tHcT9LD8Ngc/yW+ZXfeL+atlp077M979Cw==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">STREAM_ACCOUNTID_MISMATCH</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1540C03AF68131FCE05307991F0AA991</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1540C03AF67F31FCE05307991F0AA991</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1540EA15C4897A5AE05305991F0AA5A8</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:1540C03AF68131FCE05307991F0AA991</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:1540C03AF67F31FCE05307991F0AA991</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80261</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>1540EA15C4897A5AE05305991F0AA5A8</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>0bea6a53-529e-47ba-91fd-6fcb8a816b90</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_70050 - StreamListView - PORTAL - AccountIdUnmatched - Nodaccountid in URL is NULL - 403 Forbidden" searchProperties="true" id="868e3c57-92ef-4860-adc9-336d7869394d"><con:description>This test case will verify proper response from the StreamCreate API when the supplied SAML assertion references a node account that is in pending status</con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="ce084955-7cae-4c4b-83f0-11f0f006b97b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","STREAM_ACCOUNTID_MISMATCH");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","deleted");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="dc66c185-b7f3-4820-a5ad-8b49eae67d68"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove all the Account's StreamHandles" id="2a9508d2-7deb-46e2-94f5-9292499bfb87"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTAL" id="20a56040-fe60-4913-b872-02ee155a5030"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Change nodeaccountid" id="9d8f2522-4eec-4ac3-9cf8-775acf793488"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();

tC.setPropertyValue("assertionAccountIdFULL","urn:dece:accountid:org:dece:");
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="2762b055-6bbe-4e99-ac58-c64f4b8f5599"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportal1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150430_07310</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD382743DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD498043DE8E05305991F0AC941</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbZcuI4FP0VynlMGe/EuAJVEELaCUsa6DSdlykhy6DElowls339SAYcICRDz5NL11fnnrvoSLcMxJHpNRhDKceUlFZxRJiXW2tKlhKPAoaZR0CMmMehN2x0O55Z1j2w36KU/FZN+cdxTceydFMNQzBR7Sq0VTe0QxWYpqPfWGbghqZwZSxDPmEcEF5TTN1wVN1WLX1kWJ7jeqZdtqrGq1J6QSkT2MKlrCs7UitWU2acJ56mLZfL8tIq03SqmbpuaONuZwhnKAZK/XabUR4ore/8YTlAEEURLEMaa7fakc9twLwhnhLAsxTtYgVfxdI1vaoJn4Dh6ZVS7EWBT0KaL+8AoQRDEOENkPXpIj6jQakRTWmK+Sz+MglDl8AqWkEVGja5UrRjahcCHTFMGVDZDBg7rAEKUYoIRKVfA7+mXF3WtXzrKAWEhTSN2fHy7/ggskARTVCgsn1aO2qXA56pVP0WQc8nMMoYXqCeHNYEQMR23UTwcqjSc4pCvOpgJgZ0xSQ77ZDeyXJbjRaeIsb/T4MOmrMFeQFRhur3y7e2tpmvmuMlni4faTTu0kpQcQL6s5YTOHTODUVrt8uToSyGaLuj1RuP/enTwyu/j90n8+Fuxl820etD2LOywXy86NKkUXG7ofFm95O2U3kfNLvNhpvwh8eY+MnC6Wza/Zi9mqs/G4Z/x7Ne8rNrLPGgnzUnnevU+VN9sedk/mPdd5+ffsBW/709wL5DOyMIKmBiGb0MLhvZ/XR4vXGnjy92rE/T6/4o+/2rEbyx8KEBgqW9aQZ+rUjngP+xbX/mh9nkDUG+X8ox8FultugS4N+LmbTgQA1zVy+R4sM4Ilypy11SO7xMyB0OPNHD7dqw2+ZNs2VXXd2yWvfuve5YulOtGm29cVe1jb3IbFmcULyjJMQylpTc7dh8TxDGHkMkQKm6oJlQOqZ8g9gCHJR8MhCHgBKGRlTIswFu5u47six3Ul0b72vMo3SRVFlYVUo9yvuknzZCjtJjUa4cifIAQZxgJJVbDjYTk824KMYcLDIeGeUFKBOUCW1PpcyKfa6jMRwnEZJUtZgGWYTKySzJS6Ox7ddUAWS5FTOY0JSDKD90X6Z3+m9fCeETYOnAZEZNJLqJztwxxj6dT2lXzt5Fe/hGFmB5vkRZeYrhlsnxr49pkWNSjEqRVzEUxYa/BIDsDIT2DT/ttDRFxGCBD+LvL3NxLQghqe/bOwfleTlbLLK8oTe6bmqpgNdkUTWxGCKYCalbj+g7IlqBol10rxTET4IX9mOKGZ+RIQccxWICS/nygofEEDH5kPDF2Vld+ko5CilKx9GKn7PdReIRJBl/+06CHpR+wvwsPkuaBh8dO4N1EEfkKd4RHJOpXMk7Zf3FgEAqYLFQQ5oegp8DOBf82FgUueDCxUBNMo6+/lOSMldTAIQ0I9xvKbnhUHpznnydIO/D6RNMru7Fcw//93tPxfkIQCQeiQzn+PLW9uQRINMD+d4FPaPglmveSAWvHCq41bYqRVGO2NU/mT9bDup0OuP1fwE=</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">STREAM_ACCOUNTID_MISMATCH</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD498033DE8E05305991F0AC941</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD382733DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD3827B3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14F27BD498033DE8E05305991F0AC941</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80262</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>14F27BD3827B3DE6E05305991F0A3F36</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_70052 - StreamListView - PORTAL - AccountIdUnmatched - nodeaccountid and URL accountId mismatch - 403 Forbidden" searchProperties="true" id="474427be-78ec-4583-bc36-613976e8373f"><con:description>This test case will verify proper response from the StreamCreate API when the supplied SAML assertion references a node account that is in pending status</con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="2b643137-0dc6-4dad-a985-d34b58c72faa"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","STREAM_ACCOUNTID_MISMATCH");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","deleted");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="845be0ce-9750-46f0-bfc1-f9e21a08a00a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove all the Account's StreamHandles" id="5dd79d49-8670-4739-8380-fc1179c38d8b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTAL" id="fd573fb0-4969-42bc-b808-efc543b2ab32"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Change nodeaccountid" id="26eba254-aa28-4c0f-adee-e35853f46bb2"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();

tC.setPropertyValue("assertionAccountIdFULL","urn:dece:accountid:org:dece:1");</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="b712b4ed-40e0-49a7-acb5-f47bf257b162"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>errorRespType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamstatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportal1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150430_07310</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD382743DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD498043DE8E05305991F0AC941</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbZcuI4FP0VynlMGe/EuAJVEELaCUsa6DSdlykhy6DElowls339SAYcICRDz5NL11fnnrvoSLcMxJHpNRhDKceUlFZxRJiXW2tKlhKPAoaZR0CMmMehN2x0O55Z1j2w36KU/FZN+cdxTceydFMNQzBR7Sq0VTe0QxWYpqPfWGbghqZwZSxDPmEcEF5TTN1wVN1WLX1kWJ7jeqZdtqrGq1J6QSkT2MKlrCs7UitWU2acJ56mLZfL8tIq03SqmbpuaONuZwhnKAZK/XabUR4ore/8YTlAEEURLEMaa7fakc9twLwhnhLAsxTtYgVfxdI1vaoJn4Dh6ZVS7EWBT0KaL+8AoQRDEOENkPXpIj6jQakRTWmK+Sz+MglDl8AqWkEVGja5UrRjahcCHTFMGVDZDBg7rAEKUYoIRKVfA7+mXF3WtXzrKAWEhTSN2fHy7/ggskARTVCgsn1aO2qXA56pVP0WQc8nMMoYXqCeHNYEQMR23UTwcqjSc4pCvOpgJgZ0xSQ77ZDeyXJbjRaeIsb/T4MOmrMFeQFRhur3y7e2tpmvmuMlni4faTTu0kpQcQL6s5YTOHTODUVrt8uToSyGaLuj1RuP/enTwyu/j90n8+Fuxl820etD2LOywXy86NKkUXG7ofFm95O2U3kfNLvNhpvwh8eY+MnC6Wza/Zi9mqs/G4Z/x7Ne8rNrLPGgnzUnnevU+VN9sedk/mPdd5+ffsBW/709wL5DOyMIKmBiGb0MLhvZ/XR4vXGnjy92rE/T6/4o+/2rEbyx8KEBgqW9aQZ+rUjngP+xbX/mh9nkDUG+X8ox8FultugS4N+LmbTgQA1zVy+R4sM4Ilypy11SO7xMyB0OPNHD7dqw2+ZNs2VXXd2yWvfuve5YulOtGm29cVe1jb3IbFmcULyjJMQylpTc7dh8TxDGHkMkQKm6oJlQOqZ8g9gCHJR8MhCHgBKGRlTIswFu5u47six3Ul0b72vMo3SRVFlYVUo9yvuknzZCjtJjUa4cifIAQZxgJJVbDjYTk824KMYcLDIeGeUFKBOUCW1PpcyKfa6jMRwnEZJUtZgGWYTKySzJS6Ox7ddUAWS5FTOY0JSDKD90X6Z3+m9fCeETYOnAZEZNJLqJztwxxj6dT2lXzt5Fe/hGFmB5vkRZeYrhlsnxr49pkWNSjEqRVzEUxYa/BIDsDIT2DT/ttDRFxGCBD+LvL3NxLQghqe/bOwfleTlbLLK8oTe6bmqpgNdkUTWxGCKYCalbj+g7IlqBol10rxTET4IX9mOKGZ+RIQccxWICS/nygofEEDH5kPDF2Vld+ko5CilKx9GKn7PdReIRJBl/+06CHpR+wvwsPkuaBh8dO4N1EEfkKd4RHJOpXMk7Zf3FgEAqYLFQQ5oegp8DOBf82FgUueDCxUBNMo6+/lOSMldTAIQ0I9xvKbnhUHpznnydIO/D6RNMru7Fcw//93tPxfkIQCQeiQzn+PLW9uQRINMD+d4FPaPglmveSAWvHCq41bYqRVGO2NU/mT9bDup0OuP1fwE=</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">STREAM_ACCOUNTID_MISMATCH</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD498033DE8E05305991F0AC941</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD382733DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD3827B3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14F27BD498033DE8E05305991F0AC941</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:1</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80263</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>14F27BD3827B3DE6E05305991F0A3F36</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_75106 - StreamListView - PORTAL - Account has single active stream and no deleted streams - 200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="b1251db9-7f79-4f4c-8798-65be1d507e35"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single active stream and no deleted (historical) streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="323321df-6878-4c51-8b2c-46bbcf2517f9"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",null);
tC.setPropertyValue("expectDBRenewedBy",null);
tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="41862ec3-5a5a-47f3-87eb-b41e0c34e76e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="bdeb037d-caf5-41e2-9cf8-2c80848417cc" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="fd24f9c0-c3b0-4415-b398-3db98b6c2ac9"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="3d067d08-b135-4f78-ac76-21d823188c42"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTAL" id="b1e1aa7b-5efb-456c-8c88-cdd34095103c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="1beeb4ec-4542-41d6-a08e-9b8f20856cb6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="8a75e058-ba12-4ff5-84be-60333c121b85" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="28283356-145b-4b87-b640-c647c6a73b4a" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def acct    = tC.getPropertyValue("accountoid");

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == 1;
assert b.streamGetStreamDataHistoryRowCount(acct) == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="2391926b-6d3f-4803-9f6a-6d514f4cc837" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportal1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150430_07310</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:60E2D52484A7438D8647BEA1AEB82FB4</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD382743DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD498043DE8E05305991F0AC941</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbZcuI4FP0VynlMGe/EuAJVEELaCUsa6DSdlykhy6DElowls339SAYcICRDz5NL11fnnrvoSLcMxJHpNRhDKceUlFZxRJiXW2tKlhKPAoaZR0CMmMehN2x0O55Z1j2w36KU/FZN+cdxTceydFMNQzBR7Sq0VTe0QxWYpqPfWGbghqZwZSxDPmEcEF5TTN1wVN1WLX1kWJ7jeqZdtqrGq1J6QSkT2MKlrCs7UitWU2acJ56mLZfL8tIq03SqmbpuaONuZwhnKAZK/XabUR4ore/8YTlAEEURLEMaa7fakc9twLwhnhLAsxTtYgVfxdI1vaoJn4Dh6ZVS7EWBT0KaL+8AoQRDEOENkPXpIj6jQakRTWmK+Sz+MglDl8AqWkEVGja5UrRjahcCHTFMGVDZDBg7rAEKUYoIRKVfA7+mXF3WtXzrKAWEhTSN2fHy7/ggskARTVCgsn1aO2qXA56pVP0WQc8nMMoYXqCeHNYEQMR23UTwcqjSc4pCvOpgJgZ0xSQ77ZDeyXJbjRaeIsb/T4MOmrMFeQFRhur3y7e2tpmvmuMlni4faTTu0kpQcQL6s5YTOHTODUVrt8uToSyGaLuj1RuP/enTwyu/j90n8+Fuxl820etD2LOywXy86NKkUXG7ofFm95O2U3kfNLvNhpvwh8eY+MnC6Wza/Zi9mqs/G4Z/x7Ne8rNrLPGgnzUnnevU+VN9sedk/mPdd5+ffsBW/709wL5DOyMIKmBiGb0MLhvZ/XR4vXGnjy92rE/T6/4o+/2rEbyx8KEBgqW9aQZ+rUjngP+xbX/mh9nkDUG+X8ox8FultugS4N+LmbTgQA1zVy+R4sM4Ilypy11SO7xMyB0OPNHD7dqw2+ZNs2VXXd2yWvfuve5YulOtGm29cVe1jb3IbFmcULyjJMQylpTc7dh8TxDGHkMkQKm6oJlQOqZ8g9gCHJR8MhCHgBKGRlTIswFu5u47six3Ul0b72vMo3SRVFlYVUo9yvuknzZCjtJjUa4cifIAQZxgJJVbDjYTk824KMYcLDIeGeUFKBOUCW1PpcyKfa6jMRwnEZJUtZgGWYTKySzJS6Ox7ddUAWS5FTOY0JSDKD90X6Z3+m9fCeETYOnAZEZNJLqJztwxxj6dT2lXzt5Fe/hGFmB5vkRZeYrhlsnxr49pkWNSjEqRVzEUxYa/BIDsDIT2DT/ttDRFxGCBD+LvL3NxLQghqe/bOwfleTlbLLK8oTe6bmqpgNdkUTWxGCKYCalbj+g7IlqBol10rxTET4IX9mOKGZ+RIQccxWICS/nygofEEDH5kPDF2Vld+ko5CilKx9GKn7PdReIRJBl/+06CHpR+wvwsPkuaBh8dO4N1EEfkKd4RHJOpXMk7Zf3FgEAqYLFQQ5oegp8DOBf82FgUueDCxUBNMo6+/lOSMldTAIQ0I9xvKbnhUHpznnydIO/D6RNMru7Fcw//93tPxfkIQCQeiQzn+PLW9uQRINMD+d4FPaPglmveSAWvHCq41bYqRVGO2NU/mT9bDup0OuP1fwE=</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD498033DE8E05305991F0AC941</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD382733DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD3827B3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14F27BD498033DE8E05305991F0AC941</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14F27BD382733DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD382DB3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14F27BD382DB3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:60E2D52484A7438D8647BEA1AEB82FB4</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">60E2D52484A7438D8647BEA1AEB82FB4</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">60E2D52484A7438D8647BEA1AEB82FB4</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14F27BD4984B3DE8E05305991F0AC941</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/30 14:06:56</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14F27BD382DB3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14F27BD4984B3DE8E05305991F0AC941</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14F27BD382DB3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD382DB3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14F27BD382DB3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80276</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>14F27BD3827B3DE6E05305991F0A3F36</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_75107 - StreamListView - PORTAL - Account has single deleted stream and no active streams - 200 OK - no streams" searchProperties="true" id="5c26a5fc-fbde-4c3d-9b1d-5a312511bd41"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and no active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="bb89e44a-1db6-40ea-8850-bd4a21587274"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS_NO_STREAMS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","deleted");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="5a17ff32-d1cc-4495-ba3a-029fd2ab38d6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="f488349f-564d-4beb-96b7-c0d3efa00d44" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="f05761b9-58dd-4abb-bc2b-05d5f98fa405"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="ea3af6f1-a207-4f81-8985-cfd90a2568d7"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamDelete" id="f7052b2c-45eb-4224-9cb8-877c4e552360"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

int i = tC.getPropertyValue("deletedCreateCount").toInteger();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	i++;
	tC.setPropertyValue("deletedCreateCount",i.toString());
	tC.setPropertyValue("expectDBStatus","deleted");
	tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamDelete")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTAL" id="c4ebfe3b-3ac9-4d0f-b0bd-b664be5a29e8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="e5be9509-59f5-4bc5-be74-c0e36a8c754e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="05c7ee12-1b77-4d60-8295-9ab2241fcc60" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="da08fc32-d119-47e2-b251-1cf87ffe5261" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def acct    = tC.getPropertyValue("accountoid");

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == 1;
assert b.streamGetStreamDataHistoryRowCount(acct) == 2;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="82316488-26ba-4600-9204-1c5b58331d7f" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportal1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150430_07310</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:45F7165E85694D35A3A55C6C36D3BEC8</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD382743DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD498043DE8E05305991F0AC941</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbZcuI4FP0VynlMGe/EuAJVEELaCUsa6DSdlykhy6DElowls339SAYcICRDz5NL11fnnrvoSLcMxJHpNRhDKceUlFZxRJiXW2tKlhKPAoaZR0CMmMehN2x0O55Z1j2w36KU/FZN+cdxTceydFMNQzBR7Sq0VTe0QxWYpqPfWGbghqZwZSxDPmEcEF5TTN1wVN1WLX1kWJ7jeqZdtqrGq1J6QSkT2MKlrCs7UitWU2acJ56mLZfL8tIq03SqmbpuaONuZwhnKAZK/XabUR4ore/8YTlAEEURLEMaa7fakc9twLwhnhLAsxTtYgVfxdI1vaoJn4Dh6ZVS7EWBT0KaL+8AoQRDEOENkPXpIj6jQakRTWmK+Sz+MglDl8AqWkEVGja5UrRjahcCHTFMGVDZDBg7rAEKUYoIRKVfA7+mXF3WtXzrKAWEhTSN2fHy7/ggskARTVCgsn1aO2qXA56pVP0WQc8nMMoYXqCeHNYEQMR23UTwcqjSc4pCvOpgJgZ0xSQ77ZDeyXJbjRaeIsb/T4MOmrMFeQFRhur3y7e2tpmvmuMlni4faTTu0kpQcQL6s5YTOHTODUVrt8uToSyGaLuj1RuP/enTwyu/j90n8+Fuxl820etD2LOywXy86NKkUXG7ofFm95O2U3kfNLvNhpvwh8eY+MnC6Wza/Zi9mqs/G4Z/x7Ne8rNrLPGgnzUnnevU+VN9sedk/mPdd5+ffsBW/709wL5DOyMIKmBiGb0MLhvZ/XR4vXGnjy92rE/T6/4o+/2rEbyx8KEBgqW9aQZ+rUjngP+xbX/mh9nkDUG+X8ox8FultugS4N+LmbTgQA1zVy+R4sM4Ilypy11SO7xMyB0OPNHD7dqw2+ZNs2VXXd2yWvfuve5YulOtGm29cVe1jb3IbFmcULyjJMQylpTc7dh8TxDGHkMkQKm6oJlQOqZ8g9gCHJR8MhCHgBKGRlTIswFu5u47six3Ul0b72vMo3SRVFlYVUo9yvuknzZCjtJjUa4cifIAQZxgJJVbDjYTk824KMYcLDIeGeUFKBOUCW1PpcyKfa6jMRwnEZJUtZgGWYTKySzJS6Ox7ddUAWS5FTOY0JSDKD90X6Z3+m9fCeETYOnAZEZNJLqJztwxxj6dT2lXzt5Fe/hGFmB5vkRZeYrhlsnxr49pkWNSjEqRVzEUxYa/BIDsDIT2DT/ttDRFxGCBD+LvL3NxLQghqe/bOwfleTlbLLK8oTe6bmqpgNdkUTWxGCKYCalbj+g7IlqBol10rxTET4IX9mOKGZ+RIQccxWICS/nygofEEDH5kPDF2Vld+ko5CilKx9GKn7PdReIRJBl/+06CHpR+wvwsPkuaBh8dO4N1EEfkKd4RHJOpXMk7Zf3FgEAqYLFQQ5oegp8DOBf82FgUueDCxUBNMo6+/lOSMldTAIQ0I9xvKbnhUHpznnydIO/D6RNMru7Fcw//93tPxfkIQCQeiQzn+PLW9uQRINMD+d4FPaPglmveSAWvHCq41bYqRVGO2NU/mT9bDup0OuP1fwE=</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS_NO_STREAMS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD498033DE8E05305991F0AC941</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD382733DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD3827B3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14F27BD498033DE8E05305991F0AC941</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14F27BD382733DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD45A303EC5E05307991F0A16E0</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14F27BD45A303EC5E05307991F0A16E0</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:45F7165E85694D35A3A55C6C36D3BEC8</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">45F7165E85694D35A3A55C6C36D3BEC8</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">45F7165E85694D35A3A55C6C36D3BEC8</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14F27BD4984B3DE8E05305991F0AC941</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/30 14:08:35</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14F27BD45A303EC5E05307991F0A16E0</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/30 14:08:46</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14F27BD4984B3DE8E05305991F0AC941</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14F27BD45A303EC5E05307991F0A16E0</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD45A303EC5E05307991F0A16E0</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14F27BD45A303EC5E05307991F0A16E0</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80277</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>14F27BD3827B3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP_CS_2</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_75108 - StreamListView - PORTAL - Account has single deleted stream and a single active stream - 200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="92019007-65d0-4f56-808e-e504078bbf47"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="8aa84c13-0566-4820-94bd-3894665f5c2e"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");
tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="a5e7e3a5-106c-4925-9a88-695be1645e4c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="955fc7b0-af85-406d-a661-763709a81cab" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="c31f1bf6-78e6-4d0d-953c-6c1e447bc679"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="378d3157-1a5f-4caa-b6ae-0726f0afc694"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamDelete" id="1bbc6287-76f8-4bdd-baab-050a028161f5"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

int i = tC.getPropertyValue("deletedCreateCount").toInteger();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	i++;
	tC.setPropertyValue("deletedCreateCount",i.toString());
	tC.setPropertyValue("expectDBStatus","deleted");
	tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamDelete")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Invoke StreamCreate again if Required" id="b1d63225-d6f7-4216-b05d-914cb7407558"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();

def loopuntil = tC.getPropertyValue("loopuntil").toInteger();
def counter   = tC.getPropertyValue("counter").toInteger();

counter++;

if (counter &lt;= loopuntil) {
	tC.setPropertyValue("counter",counter.toString());
	testRunner.gotoStepByName("Call StreamCreate");
} 





</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTAL" id="68437a95-503a-4e24-8c5c-60bc4a0d159b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="1318a7a7-23fb-4026-9797-6caf71899c77"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="4b1082d7-1ed6-47e2-80bc-604a421ea10a" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="7b83cba9-a6a5-41a7-ab7c-8d2ad5278388" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD382743DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbZcuI4FP0VynlMGe/EuAJVEELaCUsa6DSdlykhy6DElowls339SAYcICRDz5NL11fnnrvoSLcMxJHpNRhDKceUlFZxRJiXW2tKlhKPAoaZR0CMmMehN2x0O55Z1j2w36KU/FZN+cdxTceydFMNQzBR7Sq0VTe0QxWYpqPfWGbghqZwZSxDPmEcEF5TTN1wVN1WLX1kWJ7jeqZdtqrGq1J6QSkT2MKlrCs7UitWU2acJ56mLZfL8tIq03SqmbpuaONuZwhnKAZK/XabUR4ore/8YTlAEEURLEMaa7fakc9twLwhnhLAsxTtYgVfxdI1vaoJn4Dh6ZVS7EWBT0KaL+8AoQRDEOENkPXpIj6jQakRTWmK+Sz+MglDl8AqWkEVGja5UrRjahcCHTFMGVDZDBg7rAEKUYoIRKVfA7+mXF3WtXzrKAWEhTSN2fHy7/ggskARTVCgsn1aO2qXA56pVP0WQc8nMMoYXqCeHNYEQMR23UTwcqjSc4pCvOpgJgZ0xSQ77ZDeyXJbjRaeIsb/T4MOmrMFeQFRhur3y7e2tpmvmuMlni4faTTu0kpQcQL6s5YTOHTODUVrt8uToSyGaLuj1RuP/enTwyu/j90n8+Fuxl820etD2LOywXy86NKkUXG7ofFm95O2U3kfNLvNhpvwh8eY+MnC6Wza/Zi9mqs/G4Z/x7Ne8rNrLPGgnzUnnevU+VN9sedk/mPdd5+ffsBW/709wL5DOyMIKmBiGb0MLhvZ/XR4vXGnjy92rE/T6/4o+/2rEbyx8KEBgqW9aQZ+rUjngP+xbX/mh9nkDUG+X8ox8FultugS4N+LmbTgQA1zVy+R4sM4Ilypy11SO7xMyB0OPNHD7dqw2+ZNs2VXXd2yWvfuve5YulOtGm29cVe1jb3IbFmcULyjJMQylpTc7dh8TxDGHkMkQKm6oJlQOqZ8g9gCHJR8MhCHgBKGRlTIswFu5u47six3Ul0b72vMo3SRVFlYVUo9yvuknzZCjtJjUa4cifIAQZxgJJVbDjYTk824KMYcLDIeGeUFKBOUCW1PpcyKfa6jMRwnEZJUtZgGWYTKySzJS6Ox7ddUAWS5FTOY0JSDKD90X6Z3+m9fCeETYOnAZEZNJLqJztwxxj6dT2lXzt5Fe/hGFmB5vkRZeYrhlsnxr49pkWNSjEqRVzEUxYa/BIDsDIT2DT/ttDRFxGCBD+LvL3NxLQghqe/bOwfleTlbLLK8oTe6bmqpgNdkUTWxGCKYCalbj+g7IlqBol10rxTET4IX9mOKGZ+RIQccxWICS/nygofEEDH5kPDF2Vld+ko5CilKx9GKn7PdReIRJBl/+06CHpR+wvwsPkuaBh8dO4N1EEfkKd4RHJOpXMk7Zf3FgEAqYLFQQ5oegp8DOBf82FgUueDCxUBNMo6+/lOSMldTAIQ0I9xvKbnhUHpznnydIO/D6RNMru7Fcw//93tPxfkIQCQeiQzn+PLW9uQRINMD+d4FPaPglmveSAWvHCq41bYqRVGO2NU/mT9bDup0OuP1fwE=</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD382733DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14F27BD382733DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD498033DE8E05305991F0AC941</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14F27BD498033DE8E05305991F0AC941</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14F27BD4984B3DE8E05305991F0AC941</con:value></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14F27BD4984B3DE8E05305991F0AC941</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportal1</con:value></con:property><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD3827B3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD382ED3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14F27BD382ED3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">23373DDE42E1436A98B5CD92A512203A</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:23373DDE42E1436A98B5CD92A512203A</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:9158905155FE44EAAA6E20A0A1098835</con:value></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:23373DDE42E1436A98B5CD92A512203A</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9158905155FE44EAAA6E20A0A1098835</con:value></con:property><con:property><con:name>streamhandle_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">23373DDE42E1436A98B5CD92A512203A</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150430_07310</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD498043DE8E05305991F0AC941</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/30 14:10:23</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14F27BD382ED3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/30 14:10:34</con:value></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/30 14:10:46</con:value></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14F27BD382ED3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14F27BD4984B3DE8E05305991F0AC941</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14F27BD382ED3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD382ED3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14F27BD382ED3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80278</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>14F27BD3827B3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP_CS_2</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_75124 - StreamListView - PORTAL - Active stream associated with RIGHTS_TOKEN.STATUS_ID of deleted is displayed - 200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="6a7b9b84-3bf8-4a64-bd9c-e252f455d901"><con:description> This test case will verify that an active stream associated with a RightsToken that has a status of deleted will still be returned. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="58faa679-ab3e-4ef6-afcb-3c7ccbbe9498"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="8dd1b757-ec24-4a70-bf1c-81871c10c936"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="dfbf3516-7a16-4a48-a7a4-fc93e0333c7c" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="60c7afe3-c301-413d-bce9-7b727ee4b87c"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="823ed469-928c-4d87-b34d-b4308bd7cee8"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Set RIGHTS_TOKEN.STATUS to 'deleted'" id="4f69ef69-c9f7-4630-b5af-dfdb19fff71f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def rt = tC.getPropertyValue("rightstokenid");

a = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

assert a.rightsTokenSetStatusDeleted(rt) == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTAL" id="7a7b4389-8a26-4ab2-b43e-123620875bf2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="a0c02871-2c09-4e42-9d36-69dea636c5fd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="5722264f-4f6d-4770-b355-b978ad0b4be7" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="5dc156c3-6693-4f97-8c23-7d35c05331ee" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="b7cdda93-9cb6-4425-9bd3-ae5f44c6e37d" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportal1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150430_07496</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:406E41A27B8C4419A522008790BDCF88</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD4C1BB3DEAE05305991F0AFEEE</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD45A4A3EC5E05307991F0A16E0</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbcuI4EP0VynlMGV8wN1egigSYeAKEhAyT7MuWkBusxJaMJQPh60cy4AAhWWafXGq3Tp++6EhXHEWh7bY4h0QQRgurKKTczawNLU2oyxAn3KUoAu4K7I5a/Z5rF00X7bZoBa/d0P4FhBxUMrFesu267iCzpE8sKOm4Vpv4NdMB2wTpynkKHuUCUdHQbNMq66ajl8wny3GtilsqF81q7R+tMIaES2zpUjS1LakVb2iBELFrGMvlsrgsFVkyM2zTtIznfm+EA4iQ1rzaZJQFSppbf1z0AUMY4iJmkXFlHPhc+dwdkRlFIk1gG8v/KpZpmHVD+viczC60fC/4Hp2ybHmDKKMEo5CskapPH0TA/EIrnLGEiCD6MgnLVMA6rLCOLYdeaMYhtTOBDhgmHOk8QNYW6xGmkADFUPj16DW0i/O6lm19ShDlU5ZE/HD5d3yALiBkMfg636W1pXY+4IlKNa8Aux7FYcrJAgZqWGOEgW+7Cfh8qMIwgSlZ9QiXA7riip2xT+9oualGm8yAi//ToL3mbEDGKEyhuexejrwHHsYej5bjUeutLwbTu0HwUn5oZAT2nTND3trN8mgo8yHa7Bj2klU8/LmE2+k4JaPu0IvGVm3I0fqhPX9pX48qYAe3k99PRuU18GJYPrfDFvWrotIK6sOB+V4rd67pS2+Cej9/9d+cO9+5nc1t9vKDLaNoMjZMK57zadnr8NsxeUjsh3D9NJzD5HJyv75Zd9F9EHU7L8+9IB2Q35eD9MeiGr3j3sPlHN1OntP+fHA3fae1tYcbeTp7/A9tuzM/SievgMVuqcbAaxe6sktIfC9mykJ8fZq5urESHy6ACq2pdintcFMpd8R3ZQ83a8vp2tXrtlNuOfVS56bcMcsls1qvW12zZVU65k5kNiyOKN4wOiUqlpLczdh8TxBHLgfqQ6IvWCqVjmvfILaRQAWPPspDwCiHJyblmVUoebN8sXYC20rni/i1IurTRUK0woCJe3qftKYCkkNNrh5o8iNgEhNQwq3mmsvB5kLWYo4WqQit4gIVKaRS2hOlsq7t1MoGJ1EcgmJqRMxPQyjGQZxVxuCbr60jzDMr4ThmiUBhdua+zO74364Q0scnyoGrjK5BNhNOXDH2Lp1PaVdOXkU7+FbqE3W8ZFVFQvCGyeGvj2FRU5JPSp6XtWOeb/hLAMxPQBjf8DOOS5NH9BdkL/7uLpe3gtSR5q69c1ScF9PFIs0aWjVN20gkvKGKasjFCHAqle79ib0BNXIU46xrJSd+FDy3H1JMRUBHAgmI5AQWsuUZ74gRcPWO8OTRWZ37SDkIKUsnYCVO2W5C+QZSjL99JmEXKz9pHsrPkiX+R8dOYO3FkXnKZ4QgdKZW6kp5/2JAMJOwRIohS/bBTwGcCn5ozIuccxFyoCapgK//FJTKNTSEMUup8NpaZthX3oyneI/B/XD6BJOJe/7aI//93NNJNgJYviylf4avLm1XHQE621PvbdBTAn5jXbdK7U4rE/DyRsC7nU4nL8oBu+Yn82fLXp2OZ7z5Bw==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14F27BD45A493EC5E05307991F0A16E0</con:value></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD45A493EC5E05307991F0A16E0</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD4C1BA3DEAE05305991F0AFEEE</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD4C1C23DEAE05305991F0AFEEE</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14F27BD4C1BA3DEAE05305991F0AFEEE</con:value></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD499713DE8E05305991F0AC941</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14F27BD499713DE8E05305991F0AC941</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">406E41A27B8C4419A522008790BDCF88</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:406E41A27B8C4419A522008790BDCF88</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">406E41A27B8C4419A522008790BDCF88</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/30 14:22:36</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14F27BD3833A3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14F27BD499713DE8E05305991F0AC941</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14F27BD3833A3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14F27BD499713DE8E05305991F0AC941</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD499713DE8E05305991F0AC941</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14F27BD499713DE8E05305991F0AC941</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80293</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>14F27BD4C1C23DEAE05305991F0AFEEE</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_75150 - StreamListView - PORTAL - &lt;StreamClientNickname> verification when value is NULL - 200 OK" searchProperties="true" id="6cd97dca-d0c9-40bb-b874-992d4e3e3e9f"><con:description> This test case will verify that an active stream associated with a RightsToken that has expired is returned. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="67bd0649-04e6-4065-b446-89730a6df92d"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="b39de193-fb64-4eb1-85ba-62eb4380aad4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="69249c53-180c-4d78-a615-27bf1ababd2b" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="75f9a0b1-9ea1-4479-896f-6fe37a2ed22c"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="5a00f83d-fe38-46b4-bc06-aca052410ef9"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTAL" id="88b906b5-9326-48c8-97ca-92b96fb24a6c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="7a4bb849-7628-4eae-b6a2-28528b533026"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="4e3aa766-c065-446b-a02d-19d9b6260231" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="3bf51945-9d99-42cf-a5b7-798b34b1e402" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="10aa8cd9-9c4c-4848-81eb-eca26f3de0cc" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportal1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150430_07496</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:13D4EC7B631F489285DC29C86C878E8C</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD4C1BB3DEAE05305991F0AFEEE</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD45A4A3EC5E05307991F0A16E0</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbcuI4EP0VynlMGV8wN1egigSYeAKEhAyT7MuWkBusxJaMJQPh60cy4AAhWWafXGq3Tp++6EhXHEWh7bY4h0QQRgurKKTczawNLU2oyxAn3KUoAu4K7I5a/Z5rF00X7bZoBa/d0P4FhBxUMrFesu267iCzpE8sKOm4Vpv4NdMB2wTpynkKHuUCUdHQbNMq66ajl8wny3GtilsqF81q7R+tMIaES2zpUjS1LakVb2iBELFrGMvlsrgsFVkyM2zTtIznfm+EA4iQ1rzaZJQFSppbf1z0AUMY4iJmkXFlHPhc+dwdkRlFIk1gG8v/KpZpmHVD+viczC60fC/4Hp2ybHmDKKMEo5CskapPH0TA/EIrnLGEiCD6MgnLVMA6rLCOLYdeaMYhtTOBDhgmHOk8QNYW6xGmkADFUPj16DW0i/O6lm19ShDlU5ZE/HD5d3yALiBkMfg636W1pXY+4IlKNa8Aux7FYcrJAgZqWGOEgW+7Cfh8qMIwgSlZ9QiXA7riip2xT+9oualGm8yAi//ToL3mbEDGKEyhuexejrwHHsYej5bjUeutLwbTu0HwUn5oZAT2nTND3trN8mgo8yHa7Bj2klU8/LmE2+k4JaPu0IvGVm3I0fqhPX9pX48qYAe3k99PRuU18GJYPrfDFvWrotIK6sOB+V4rd67pS2+Cej9/9d+cO9+5nc1t9vKDLaNoMjZMK57zadnr8NsxeUjsh3D9NJzD5HJyv75Zd9F9EHU7L8+9IB2Q35eD9MeiGr3j3sPlHN1OntP+fHA3fae1tYcbeTp7/A9tuzM/SievgMVuqcbAaxe6sktIfC9mykJ8fZq5urESHy6ACq2pdintcFMpd8R3ZQ83a8vp2tXrtlNuOfVS56bcMcsls1qvW12zZVU65k5kNiyOKN4wOiUqlpLczdh8TxBHLgfqQ6IvWCqVjmvfILaRQAWPPspDwCiHJyblmVUoebN8sXYC20rni/i1IurTRUK0woCJe3qftKYCkkNNrh5o8iNgEhNQwq3mmsvB5kLWYo4WqQit4gIVKaRS2hOlsq7t1MoGJ1EcgmJqRMxPQyjGQZxVxuCbr60jzDMr4ThmiUBhdua+zO74364Q0scnyoGrjK5BNhNOXDH2Lp1PaVdOXkU7+FbqE3W8ZFVFQvCGyeGvj2FRU5JPSp6XtWOeb/hLAMxPQBjf8DOOS5NH9BdkL/7uLpe3gtSR5q69c1ScF9PFIs0aWjVN20gkvKGKasjFCHAqle79ib0BNXIU46xrJSd+FDy3H1JMRUBHAgmI5AQWsuUZ74gRcPWO8OTRWZ37SDkIKUsnYCVO2W5C+QZSjL99JmEXKz9pHsrPkiX+R8dOYO3FkXnKZ4QgdKZW6kp5/2JAMJOwRIohS/bBTwGcCn5ozIuccxFyoCapgK//FJTKNTSEMUup8NpaZthX3oyneI/B/XD6BJOJe/7aI//93NNJNgJYviylf4avLm1XHQE621PvbdBTAn5jXbdK7U4rE/DyRsC7nU4nL8oBu+Yn82fLXp2OZ7z5Bw==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14F27BD45A493EC5E05307991F0A16E0</con:value></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD45A493EC5E05307991F0A16E0</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD4C1BA3DEAE05305991F0AFEEE</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD4C1C23DEAE05305991F0AFEEE</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14F27BD4C1BA3DEAE05305991F0AFEEE</con:value></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD383AF3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14F27BD383AF3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">13D4EC7B631F489285DC29C86C878E8C</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:13D4EC7B631F489285DC29C86C878E8C</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">13D4EC7B631F489285DC29C86C878E8C</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/30 14:24:39</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14F27BD3833A3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14F27BD383AF3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14F27BD3833A3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14F27BD383AF3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD383AF3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14F27BD383AF3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>14F27BD4C1C23DEAE05305991F0AFEEE</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_75151 - StreamListView - PORTAL - &lt;StreamClientNickname> verification when value is single character - 200 OK" searchProperties="true" id="ab6f95c8-7e31-48de-a17b-ee86e355a8d5"><con:description> This test case will verify that an active stream associated with a RightsToken that has expired is returned. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="3fa73583-372a-4582-8283-10f6ee8794c9"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("nickname","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="25b4f2cf-ed4a-425d-a9bf-8e951aa443c2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="b9c30c97-a5ef-4116-bc37-1647f6502a44" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="2542b22c-7b02-4e5c-a532-bd6641ee3912"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="dcd8601a-560d-45cc-b370-bb3db76fc5a6"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


tC.setPropertyValue("nickname","a");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTAL" id="11b10903-52b7-4d76-8069-56ce2288f618"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="1191c70f-ba18-43b0-ba53-8212dbec5743"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="bf142fb2-53b5-455d-9fef-2b2c493fec14" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="f0dedd84-9f46-457e-b41f-d6159b455a5a" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="a1ee56a7-688e-454e-aab0-21c9c0b83593" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD45A4A3EC5E05307991F0A16E0</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150430_07496</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">BD684C98488E4DAEBA0BC6E2D3CF44A5</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:BD684C98488E4DAEBA0BC6E2D3CF44A5</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:BD684C98488E4DAEBA0BC6E2D3CF44A5</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">BD684C98488E4DAEBA0BC6E2D3CF44A5</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14F27BD499833DE8E05305991F0AC941</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD499833DE8E05305991F0AC941</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD4C1C23DEAE05305991F0AFEEE</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportal1</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">a</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14F27BD499833DE8E05305991F0AC941</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14F27BD3833A3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">a</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/30 14:26:48</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14F27BD45A493EC5E05307991F0A16E0</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD45A493EC5E05307991F0A16E0</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14F27BD4C1BA3DEAE05305991F0AFEEE</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD4C1BA3DEAE05305991F0AFEEE</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbcuI4EP0VynlMGV8wN1egigSYeAKEhAyT7MuWkBusxJaMJQPh60cy4AAhWWafXGq3Tp++6EhXHEWh7bY4h0QQRgurKKTczawNLU2oyxAn3KUoAu4K7I5a/Z5rF00X7bZoBa/d0P4FhBxUMrFesu267iCzpE8sKOm4Vpv4NdMB2wTpynkKHuUCUdHQbNMq66ajl8wny3GtilsqF81q7R+tMIaES2zpUjS1LakVb2iBELFrGMvlsrgsFVkyM2zTtIznfm+EA4iQ1rzaZJQFSppbf1z0AUMY4iJmkXFlHPhc+dwdkRlFIk1gG8v/KpZpmHVD+viczC60fC/4Hp2ybHmDKKMEo5CskapPH0TA/EIrnLGEiCD6MgnLVMA6rLCOLYdeaMYhtTOBDhgmHOk8QNYW6xGmkADFUPj16DW0i/O6lm19ShDlU5ZE/HD5d3yALiBkMfg636W1pXY+4IlKNa8Aux7FYcrJAgZqWGOEgW+7Cfh8qMIwgSlZ9QiXA7riip2xT+9oualGm8yAi//ToL3mbEDGKEyhuexejrwHHsYej5bjUeutLwbTu0HwUn5oZAT2nTND3trN8mgo8yHa7Bj2klU8/LmE2+k4JaPu0IvGVm3I0fqhPX9pX48qYAe3k99PRuU18GJYPrfDFvWrotIK6sOB+V4rd67pS2+Cej9/9d+cO9+5nc1t9vKDLaNoMjZMK57zadnr8NsxeUjsh3D9NJzD5HJyv75Zd9F9EHU7L8+9IB2Q35eD9MeiGr3j3sPlHN1OntP+fHA3fae1tYcbeTp7/A9tuzM/SievgMVuqcbAaxe6sktIfC9mykJ8fZq5urESHy6ACq2pdintcFMpd8R3ZQ83a8vp2tXrtlNuOfVS56bcMcsls1qvW12zZVU65k5kNiyOKN4wOiUqlpLczdh8TxBHLgfqQ6IvWCqVjmvfILaRQAWPPspDwCiHJyblmVUoebN8sXYC20rni/i1IurTRUK0woCJe3qftKYCkkNNrh5o8iNgEhNQwq3mmsvB5kLWYo4WqQit4gIVKaRS2hOlsq7t1MoGJ1EcgmJqRMxPQyjGQZxVxuCbr60jzDMr4ThmiUBhdua+zO74364Q0scnyoGrjK5BNhNOXDH2Lp1PaVdOXkU7+FbqE3W8ZFVFQvCGyeGvj2FRU5JPSp6XtWOeb/hLAMxPQBjf8DOOS5NH9BdkL/7uLpe3gtSR5q69c1ScF9PFIs0aWjVN20gkvKGKasjFCHAqle79ib0BNXIU46xrJSd+FDy3H1JMRUBHAgmI5AQWsuUZ74gRcPWO8OTRWZ37SDkIKUsnYCVO2W5C+QZSjL99JmEXKz9pHsrPkiX+R8dOYO3FkXnKZ4QgdKZW6kp5/2JAMJOwRIohS/bBTwGcCn5ozIuccxFyoCapgK//FJTKNTSEMUup8NpaZthX3oyneI/B/XD6BJOJe/7aI//93NNJNgJYviylf4avLm1XHQE621PvbdBTAn5jXbdK7U4rE/DyRsC7nU4nL8oBu+Yn82fLXp2OZ7z5Bw==</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD4C1BB3DEAE05305991F0AFEEE</con:value></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14F27BD3833A3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14F27BD499833DE8E05305991F0AC941</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD499833DE8E05305991F0AC941</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14F27BD499833DE8E05305991F0AC941</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>14F27BD4C1C23DEAE05305991F0AFEEE</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_75152 - StreamListView - PORTAL - &lt;StreamClientNickname> verification when value is max allowed - 200 OK" searchProperties="true" id="dc5867e6-e4aa-444d-9434-3eaea1989d96"><con:description> This test case will verify that an active stream associated with a RightsToken that has expired is returned. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="f5997e36-fc32-460f-a083-14d3d4501628"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("nickname",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="26fa9601-39d5-47c1-bd4b-0b016c0876cb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="6a825598-284c-4f45-9b9e-6fa84908a3a3" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="93eaa5c7-b226-4894-9e26-effbda30a70d"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="33fa8cde-5dc6-410b-a52e-a5bbf40c84e8"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


tC.setPropertyValue("nickname","8888-ertr-8888-ertr-8888-ertr-8888-ertr-8888-ertr-8888-ertr-uuuu");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTAL" id="78a80866-d6a2-4082-b995-f266de88071b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="45a2fe6d-4d3e-4b4b-b3f6-84b152ed50b0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="93fc4cf8-c963-46fb-8b62-d4bbe27390cd" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="dba8c9b3-e4ca-488a-8172-18a4d5575c27" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="9a79e2a1-a4cf-4866-b546-a428ba88b593" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140515_05444</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:F96E09BA07CF72ACE0401F0A07995A94</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F42CF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E10E2ADE61B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbvU+I8EP7uX9HpfbwpbaH8aEeYQap3iKceRc/xixPThUbaFJO0gH/9JcVWQPT13hlmmGw3u8/uPnmSY46SuO71OQcmSEq1od/VH5ohDhF228YUABmOXUdG57HVNpqP7hSD5YbyT9eGnGcwpFwgKrp63bIdw2oadnNiuZ7jeI5d6zSce127BcZlaOlSs3RtlcSUe0Xarp4x6qWIE+5RlAD3BPaC/q8LT3p6qMSk9443KIuErBcJsfBME9dCwBDHuIbTxDw2d3yOQ+4FZEaRyBi85gx5V3/du1wua8tGLWUzs25Zlmm5pvQJOZl903tH5WYIh3SabtYDRFNKMIrJC1KgfoGI0lDrx7OUERElH4S2TdtSoQ1YYQPbDv2mm28JCnRfjLQDknFk8AjZZbAxTIEBxaDdjIdd/dvXJrjZO2GI8mnKEr63/jdIQHOI0wWEBi8rK9F9PeKBdvWOAXtDiuOMkxwuFU0WCAPXrhlMyeqCcEm+kGvF+LUVlz9Ssgzwv4zl2NzGKqGbB7rjkxlw8X9mtj2vTZRbFGfQW6/XoT92/PNRv2mPMhSwKFjh+SSv824BYdt5A6oa9+t6n6wVt143jfLfsDw9m3fiAfX9l6cOOmHrH5fn+JKNWzM6+3N1GVjR+qmNrjo/hhG7PLeSpB3f/LiFiJt/bDLt359MxqeBO789ykdtn8/J/SB+mdsOaQQjarJ8RRujm7Vt3bGX1mqSN3mD3aytxc+bq/nPtn1/d/fUpDfDE3bRObkY3V/74nfCXvDRozl3v+f276er79F1ePqnQzrdt5q2a9g1lpIQZI9PgEW5VPQY+tqZnBcSn8uLspDQmBau3kJpFBdAhd5Tu5S0eJkUIBJ6cpib9ZnbOrVOzuxGp+M2mm7j1HIs+8zqW23XbTfOWqUGbVDsQRykdEpULqWyG/58DhAnHgcaAjPyNMMRcP2TiD4SSBvSsTwcKeUwSaWKo6btLmHOn1oiWsxXlDsWyzmWp+MyFVf0ivWnAtiOctv1HeUeAyYLAkreFb+5JDgXshXPKM9EbNdyVKOQyQuAKQ326k6naXKSLGJQQM0kDbMYaotoUTTG5Jv/uoEwL6z+RT+4fhgED3Zx/D6sbv9b2QjpExLlwFVJJyCHCQduokZZz7u6mwdvrDJ8PwuJOmWyq4IRvEGy++mNLIolFVPeCiuRVxv2DTvBzf26qnxhTnDF+uq6lmovtaBXDucZ1Z5rWZ5nxTjaSueYDG9KubPNAHAmxWo9SedAzSqE+aW7okK9l7my7+LLREQDgQQkkjxasfzCQyEArh4KQ0n61VdfITspZd8ErMQh2yCW7wmF+NMnB/aw8pPma/m3TFn4Nq4DsbbyyDrl60AQOlMrdSusP+AGTmVYImUsZdvBDwU4lHzXWDW5wiIkmx4zAR9/0ZQ+dXWEcZpRMfT1wrCtmQVOsV6A9+b0Lkyhy68X7Yp/eNHe/boIpHolSK98yX87G6SgCwZd3ecFlq6+ku9GmZzOtjT6FeC+TNstx7dPB22/5dT3ZLpTNXCnkt4783vLVk/3z0PvLw==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E164D1EC7D642E0401F0A079973F8</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:F96E164D1EC7D642E0401F0A079973F8</con:value></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D2092BB42DB4E0401F0A07995675</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F950D2092BB42DB4E0401F0A07995675</con:value></con:property><con:property><con:name>nickname</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">900abc-rr 900abc-rr 900abc-rr 900abc-rr 900abc-rr 900abc-rr 0000</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E09BA07CF72ACE0401F0A07995A94</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:F96E09BA07CF72ACE0401F0A07995A94</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">900abc-rr 900abc-rr 900abc-rr 900abc-rr 900abc-rr 900abc-rr 0000</con:value></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">5</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E09BA07CF72ACE0401F0A07995A94</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/05/15 09:50:27</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F950D2092BB42DB4E0401F0A07995675</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F950D2092BB42DB4E0401F0A07995675</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D2092BB42DB4E0401F0A07995675</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F950D2092BB42DB4E0401F0A07995675</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>F950D206F433F7F4E0401F0A07995669</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_75153 - StreamListView - PORTAL - &lt;StreamClientNickname> verification when value contains XML-allowed special characters - 200 OK" searchProperties="true" id="2cee4685-a903-412d-9c09-8fd14a072967"><con:description> This test case will verify that an active stream associated with a RightsToken that has expired is returned. </con:description><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="0527e09b-d188-4d24-89a3-db012498919b"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="5ba25559-1a93-431c-8ae5-5f6b76fbfd94"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="c8a40688-1d66-4c99-b2f8-3ac0877c3cdc" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="31182a96-dddc-442e-86bb-62e3166de402"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="0bc6fff5-d82e-4662-b573-ca345b332a75"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
tC.setPropertyValue("nickname","John &amp;amp; Paul &amp;amp; George &amp;amp; Ringo");
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTAL" id="95852583-c894-4837-9b80-61fb9f2dd230"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="0f45a5a4-0e04-4eff-a76f-ef6c4983c5ea"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="a19f5df6-3446-41b1-aabb-03e416e54b2b" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="9e649225-a4ef-4014-a52b-28ec86860eb9" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="de055bb4-62bb-4de4-8bbb-68f4535f1149" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140515_05444</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:F96E0BF28C222AFFE0401F0A079973EA</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F42CF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E10E2ADE61B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbvU+I8EP7uX9HpfbwpbaH8aEeYQap3iKceRc/xixPThUbaFJO0gH/9JcVWQPT13hlmmGw3u8/uPnmSY46SuO71OQcmSEq1od/VH5ohDhF228YUABmOXUdG57HVNpqP7hSD5YbyT9eGnGcwpFwgKrp63bIdw2oadnNiuZ7jeI5d6zSce127BcZlaOlSs3RtlcSUe0Xarp4x6qWIE+5RlAD3BPaC/q8LT3p6qMSk9443KIuErBcJsfBME9dCwBDHuIbTxDw2d3yOQ+4FZEaRyBi85gx5V3/du1wua8tGLWUzs25Zlmm5pvQJOZl903tH5WYIh3SabtYDRFNKMIrJC1KgfoGI0lDrx7OUERElH4S2TdtSoQ1YYQPbDv2mm28JCnRfjLQDknFk8AjZZbAxTIEBxaDdjIdd/dvXJrjZO2GI8mnKEr63/jdIQHOI0wWEBi8rK9F9PeKBdvWOAXtDiuOMkxwuFU0WCAPXrhlMyeqCcEm+kGvF+LUVlz9Ssgzwv4zl2NzGKqGbB7rjkxlw8X9mtj2vTZRbFGfQW6/XoT92/PNRv2mPMhSwKFjh+SSv824BYdt5A6oa9+t6n6wVt143jfLfsDw9m3fiAfX9l6cOOmHrH5fn+JKNWzM6+3N1GVjR+qmNrjo/hhG7PLeSpB3f/LiFiJt/bDLt359MxqeBO789ykdtn8/J/SB+mdsOaQQjarJ8RRujm7Vt3bGX1mqSN3mD3aytxc+bq/nPtn1/d/fUpDfDE3bRObkY3V/74nfCXvDRozl3v+f276er79F1ePqnQzrdt5q2a9g1lpIQZI9PgEW5VPQY+tqZnBcSn8uLspDQmBau3kJpFBdAhd5Tu5S0eJkUIBJ6cpib9ZnbOrVOzuxGp+M2mm7j1HIs+8zqW23XbTfOWqUGbVDsQRykdEpULqWyG/58DhAnHgcaAjPyNMMRcP2TiD4SSBvSsTwcKeUwSaWKo6btLmHOn1oiWsxXlDsWyzmWp+MyFVf0ivWnAtiOctv1HeUeAyYLAkreFb+5JDgXshXPKM9EbNdyVKOQyQuAKQ326k6naXKSLGJQQM0kDbMYaotoUTTG5Jv/uoEwL6z+RT+4fhgED3Zx/D6sbv9b2QjpExLlwFVJJyCHCQduokZZz7u6mwdvrDJ8PwuJOmWyq4IRvEGy++mNLIolFVPeCiuRVxv2DTvBzf26qnxhTnDF+uq6lmovtaBXDucZ1Z5rWZ5nxTjaSueYDG9KubPNAHAmxWo9SedAzSqE+aW7okK9l7my7+LLREQDgQQkkjxasfzCQyEArh4KQ0n61VdfITspZd8ErMQh2yCW7wmF+NMnB/aw8pPma/m3TFn4Nq4DsbbyyDrl60AQOlMrdSusP+AGTmVYImUsZdvBDwU4lHzXWDW5wiIkmx4zAR9/0ZQ+dXWEcZpRMfT1wrCtmQVOsV6A9+b0Lkyhy68X7Yp/eNHe/boIpHolSK98yX87G6SgCwZd3ecFlq6+ku9GmZzOtjT6FeC+TNstx7dPB22/5dT3ZLpTNXCnkt4783vLVk/3z0PvLw==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E164D1EC7D642E0401F0A079973F8</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:F96E164D1EC7D642E0401F0A079973F8</con:value></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F495F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F950D206F495F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">&amp;apos;</con:value></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E0BF28C222AFFE0401F0A079973EA</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:F96E0BF28C222AFFE0401F0A079973EA</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">&amp;apos;</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E0BF28C222AFFE0401F0A079973EA</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/05/15 09:50:52</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F950D206F495F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F950D206F495F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F495F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F950D206F495F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_76501 - StreamListView - PORTAL - Account single deleted stream and a single active stream as Standard user - 200 OK - no streams" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="a61dcf7f-4460-4ac1-944c-4fe351872a6b"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="39f04519-af4a-4b68-acd1-9190a44c2283"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_SAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userStandard1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS_NO_STREAMS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="cffb713f-f01a-4d5b-b154-a762fe391a55"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="4bf29cf1-27f4-46f8-baea-7929f5af74f6" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="edfdd5ae-ec66-49ce-ba24-46fc89edec31"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="147f7eff-01ac-4d27-91ca-d1e0439c0f15"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamDelete" id="7cfb369f-6e9c-4558-82ab-68895f5540ef"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

int i = tC.getPropertyValue("deletedCreateCount").toInteger();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	i++;
	tC.setPropertyValue("deletedCreateCount",i.toString());
	tC.setPropertyValue("expectDBStatus","deleted");
	tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamDelete")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTAL" id="a17c3bd5-b258-47ee-8f7e-791ba97eef74"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="82c139fe-9bc5-4c2b-b98f-ab2aec58d2ae"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="0ff54982-6f36-4f74-a394-0f192cdb4b46" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="7492b6b0-d825-4537-b208-a3bdbcdfe387" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportal1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140515_05445</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testing</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:F96E0991FCA0F920E0401F0A07995AAA</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F42CF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E099093C861E3E0401F0A07995A9C</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbbuI6FH2fr4gyj1XIhVxIVJAYKHMyLdMWKNPh5ch1NuA22BA7XPr1Y4eGAqU9nSMhIe9sr732xcs+52iWOlGTc8gEYVSL23X9X6h6YRi4gZHYATLcas0xwuDBM4Kxk3ihA361ZutazHkOMeUCUVHXHct2DcszbG9ghZHrRnat4ofVka4NIeMSWrpULF1bz1LKoyJsXc8zGjHECY8omgGPBI76ze5VJD0jVHLSG+dblkXArDEVYh6ZJq4kgCFNcQWzmXluHvicJzzqkwlFIs/gJWbC6/rL3tVqVVlVKyybmI5lWaYVmtIn4WTyVW98KTdDEtMx265biDJKMErJM1KkuiCmLNGa6YRlRExn70Dbpm0paAPW2MC2S7/q5muAgt0nkQ5IZhwZfIrsEqwHY8iAYtDuenFd//q5Dm73DjJE+ZhlM360/jtKQJeQsjkkBi8zK9l9HvFEuRrngKOY4jTnZAk/1ZjMEQau3WQwJusrwuXwJVwr2q+tufyRcsoA/01bzs19rpK6eaI6bTIBLv5Pz/b7tUUZojSHxmpIN/jsuXZ37W8233+5/lV33Lpsnz1ktXpBYd95S2rX7pf18bDuZutl0414dJs+C+hl/h16P7g3hL5/sRgufnsXMb9Lz2rBHWp3/xkRJ6e3t2N6z/uXwaW9HoY1bz24DeLmr8dn6/4m5KMvY8R+3E9+g7lZdcjV6Gp8t7RW7W/38+kozuNbb3RmPY26PXExdOONIM1r4U8WZ4PBUzpCrQGxZtbTJMnP6GrlZF9+PXRNQpb5w2MvDBh6Hjw91V9z2s/h0FhKQl/uBCzKpRqPuK11ZL+Q+FhelIUkxrhwjeZKo7gAKvSG2qWkJcqlAJEkks3crjuhf2GFoRVWW4FvX1QvLNeyO1bTCsLQa4atUoO2LI4othgdExVLqex2fj4miGcRB5pAZixZjqfA9Q8Q20ggLaY9eTgY5TBgUsVtMXdZ9ix8hDxkJwtgj9XH2mY5Fbr2k4lrep01xwKyA+22nQPt7gEmcwJK4NWEczniXMhiLNAyF6ldWaIKhVxeAZlS4chxa57JyWyegqJqzliSp1CZT+dFaUy+/XcMhHlhJRzPWSZQahcH8N38jr+VpZA+CVEOXKX0DWQ74cRdZJX5vMnbO3lnlfDNPCHqnMm6iozgLZPDT6/jouZkNyuviZXMdxv+EgDzExDmB/zM49LsIiZLshe/vF/llSEFpVH2d4Eqi0q+XOZFRwMllpmEN6Vm2mYfcC4VbzNgT0DNHYT5qQtnx/oo8s5+yC8XU9oXSMBMzp9WLD/x2ugDV6+NWJ6c9WefMgchZd0ErMUpWyuVjxLF+MN3C46w8pPmG/m3Ylny2q4TWHtxZJ7yiSEInaiVulo270wHZhKWSC1k2T74KYBTwQ+NuyLvuAg5TQ+5gPe/aErk6jrCmOVUxG29MOwLb8FTbOYQvTq9gSnE/eW2XvN3b+v77lVfSuAM6Ttf8t/OBinGBYOuHgUFl7q+lo9PGZxO9oT+heCh1ntW27H8jut86wQd90DrfT/cFfAgk8Yb81vLXk2Pz0PjDw==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS_NO_STREAMS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E099093C761E3E0401F0A07995A9C</con:value></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E099093C761E3E0401F0A07995A9C</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E0990944561E3E0401F0A07995A9C</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E0990944561E3E0401F0A07995A9C</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E0991FCA0F920E0401F0A07995AAA</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:F96E0991FCA0F920E0401F0A07995AAA</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E0991FCA0F920E0401F0A07995AAA</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/05/15 09:51:00</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E16785A0769E5E0401F0A079973F0</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E0990944561E3E0401F0A07995A9C</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/05/15 09:51:03</con:value></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E16785A0769E5E0401F0A079973F0</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E0990944561E3E0401F0A07995A9C</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E0990944561E3E0401F0A07995A9C</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E0990944561E3E0401F0A07995A9C</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80310</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP_CS_1</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_76520 - StreamListView - PORTAL - Full User can view stream created by Full User - 200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="38b33add-1435-4add-8315-6d3ad2185212"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="9e5746cf-6ecc-41d5-a477-231b5ad1ba71"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull2Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="7224c778-84f4-435e-ac27-6123ca736a54"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="5cb952f2-83e1-4b13-bf39-69e142740eda" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="351a8699-892a-4133-abc1-8ddb5d74b3f9"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="54ad1fde-baec-4b0b-83ba-7c8c74e23378"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTAL" id="46aa326f-6cfa-4039-8b17-76893c38f8e3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="c3c8aea5-1830-4039-aefa-c9ecb5c4d922"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="c871c213-66a0-45d5-aa6b-6f14230e1aa6" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="8fa637ea-9843-4512-9b66-bbdb5fb351d9" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="95f8df42-108c-4660-a182-ec9549685110" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportal1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140515_05444</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:F96E0991FCA2F920E0401F0A07995AAA</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F42CF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E10E2ADE61B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbbuo4FH3vV0Tp4whyadKQqCDRAjrM4UAP9P4yMvYGXBInjR1IztePHRoKlHbakVCQd7bXXvuSZV9wFIV20OYcUkFjpvU7Tf0f4pyRhglebTaVD8f2cK1B5MPzp9bUxO4ZxqBrfc4z6DMuEBNN3TYtp2a6Ncu9Mf3AcQLLqVu286Rrd5ByCS1d6qau5VHIeFCGbepZyoIYccoDhiLggcDBpP1rEEjPAFWc9NbFhmUZMG0thEgCw8B1AhjCENdxHBkXxp7PBeHBhM4ZElkKrzEJb+qve9frdX19Vo/TuWGbpmmYviF9CKfzU711Um0G0mezeLO+QixmFKOQ/kGK1C8Qi5ho7XAep1Qsog+gLcMyFXQNclzDlsNOdeMtQMnui0h7JFOOanyBrApsDDNIgWHQbsf9pn76tQ5u9t6kiPFZnEb8YP09SsBWEMYJkBqvMqvYfR3xSLlaF4CDPsNhxukKhmpMEoSBa9cpzGg+oFwOH+Fa2X4t5/JHqykD/J22XBi7XCV140h1OnQOXPyfnu32a4Nyh8IMWo64XBqjhsF/G+vC83NiPw26hHsTt90sKew6b0ht2/26PhzW7Wy9bnpg5G7kDR6fnq6c5xD5ayfu/xxin4yLxTxxR2H048Gcrvqzq+mN8PHP578KAbPGKExmcD25Q2nj59Dx1y/u/ePdyeTG+23a0f38Kvk7S7qrfIV+LN31o7dAPTLtIiO/vbW8YmnNsqUXp0WvsIe96w4bjadOMRj+uTxH2fqeh23MeieFjDimtz36MrpbDobRS+E033LazWHfWEnCJJs+AxbVUo1Hv6P1ZL+Q+FxelIWS2qx0DRKlUVwAE3pL7VLSEmRSgCgJZDM3655/3rXMrt3udF3rstHumo5p9cy26fm+2760Kw3asDigeBWzGVWxlMpu5udzgjgKODACaW0VZ3gBXP8EsYME0vpsLD+OmHG4iaWK+3zh5g6Z+i7JScbO7MXSR8Uz1rVhLEZslLZnAtI95bbsPeUeA6YJBSXvar65HHAuZCle0CoToVVfoTqDTB4AqdLgwHYarsFplISgiBpRTLIQ6skiKQtj8M2/XUOYl1bKcRKnAoVW+fl9mN3hu6oQ0odQ5cBVSpcgmwlHTiKzyudd3u7RE6uCb2eEqq9MVlWkFG+Y7L96GxY1JdtJeUusYr7d8E0AzI9AGJ/wMw5Ls41IVnQnfnW6ygNDykmr6u8Lqr/Us9UqKzvqKalMJbwhFdMyJoAzqXfFTbwEZmwhjC8dN1vWB5G39n1+mViwiUACIjl/Wrn8wl1jAlzdNfryu8m/epHZCynrJiAXx2xXobySKMaf3lpwgJWfNF/Lv3Wckrd2HcHaiSPzlBcMQdlcrdTBUnwwHTiWsFQqYZzugh8DOBZ837gt8paLkNM0zQR8/EZTEtfUEcZxxkS/o5eGXdkteYoigeDN6R1MKe2vZ3XOPzyrH34NJlIAI6Rvfel/O9doOS7qpir9Sy5NPZdXTxmczXdk/pXgvtK7Zsc2z3uOfdnzes6e0p+f+9sC7mXSemd+b9mp6eH30PoX</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E10E2ADE51B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E10E2ADE51B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E0990945061E3E0401F0A07995A9C</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E0990945061E3E0401F0A07995A9C</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E0991FCA2F920E0401F0A07995AAA</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:F96E0991FCA2F920E0401F0A07995AAA</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E0991FCA2F920E0401F0A07995AAA</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/05/15 09:51:08</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E0990945061E3E0401F0A07995A9C</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E0990945061E3E0401F0A07995A9C</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E0990945061E3E0401F0A07995A9C</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E0990945061E3E0401F0A07995A9C</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80312</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F433F7F4E0401F0A07995669</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_76521 - StreamListView - PORTAL - Full User can view stream created by Standard User - 200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="92d8fcd5-0f63-44f7-9364-4fc732b66920"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="647d101d-93cd-4275-9b60-19c4e946f01d"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_SAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userStandard1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="68be3903-b302-4113-9b90-4961ec625991"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="739f4e59-59f3-4fc0-baa2-38ee67b81642" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="a2cb689d-e935-40d8-b182-2766086821fe"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="d1c8e0ad-96e8-4efc-8947-ab56191dc181"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTAL" id="4f53236a-c4fc-4c71-98eb-e83556c6eb5e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="f4a1d160-76c4-4b29-a476-21c03fda920f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="1334c3d7-8381-4e21-802c-158ab3ed0a84" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="3d0fda43-1ea7-4604-9f38-8fd861a721c5" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportal1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140515_05444</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:F96E0990945B61E3E0401F0A07995A9C</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F42CF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E10E2ADE61B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbbuo4FH3vV0Tp4whyadKQqCDRAjrM4UAP9P4yMvYGXBInjR1IztePHRoKlHbakVCQd7bXXvuSZV9wFIV20OYcUkFjpvU7Tf0f4pyRhglebTaVD8f2cK1B5MPzp9bUxO4ZxqBrfc4z6DMuEBNN3TYtp2a6Ncu9Mf3AcQLLqVu286Rrd5ByCS1d6qau5VHIeFCGbepZyoIYccoDhiLggcDBpP1rEEjPAFWc9NbFhmUZMG0thEgCw8B1AhjCENdxHBkXxp7PBeHBhM4ZElkKrzEJb+qve9frdX19Vo/TuWGbpmmYviF9CKfzU711Um0G0mezeLO+QixmFKOQ/kGK1C8Qi5ho7XAep1Qsog+gLcMyFXQNclzDlsNOdeMtQMnui0h7JFOOanyBrApsDDNIgWHQbsf9pn76tQ5u9t6kiPFZnEb8YP09SsBWEMYJkBqvMqvYfR3xSLlaF4CDPsNhxukKhmpMEoSBa9cpzGg+oFwOH+Fa2X4t5/JHqykD/J22XBi7XCV140h1OnQOXPyfnu32a4Nyh8IMWo64XBqjhsF/G+vC83NiPw26hHsTt90sKew6b0ht2/26PhzW7Wy9bnpg5G7kDR6fnq6c5xD5ayfu/xxin4yLxTxxR2H048Gcrvqzq+mN8PHP578KAbPGKExmcD25Q2nj59Dx1y/u/ePdyeTG+23a0f38Kvk7S7qrfIV+LN31o7dAPTLtIiO/vbW8YmnNsqUXp0WvsIe96w4bjadOMRj+uTxH2fqeh23MeieFjDimtz36MrpbDobRS+E033LazWHfWEnCJJs+AxbVUo1Hv6P1ZL+Q+FxelIWS2qx0DRKlUVwAE3pL7VLSEmRSgCgJZDM3655/3rXMrt3udF3rstHumo5p9cy26fm+2760Kw3asDigeBWzGVWxlMpu5udzgjgKODACaW0VZ3gBXP8EsYME0vpsLD+OmHG4iaWK+3zh5g6Z+i7JScbO7MXSR8Uz1rVhLEZslLZnAtI95bbsPeUeA6YJBSXvar65HHAuZCle0CoToVVfoTqDTB4AqdLgwHYarsFplISgiBpRTLIQ6skiKQtj8M2/XUOYl1bKcRKnAoVW+fl9mN3hu6oQ0odQ5cBVSpcgmwlHTiKzyudd3u7RE6uCb2eEqq9MVlWkFG+Y7L96GxY1JdtJeUusYr7d8E0AzI9AGJ/wMw5Ls41IVnQnfnW6ygNDykmr6u8Lqr/Us9UqKzvqKalMJbwhFdMyJoAzqXfFTbwEZmwhjC8dN1vWB5G39n1+mViwiUACIjl/Wrn8wl1jAlzdNfryu8m/epHZCynrJiAXx2xXobySKMaf3lpwgJWfNF/Lv3Wckrd2HcHaiSPzlBcMQdlcrdTBUnwwHTiWsFQqYZzugh8DOBZ837gt8paLkNM0zQR8/EZTEtfUEcZxxkS/o5eGXdkteYoigeDN6R1MKe2vZ3XOPzyrH34NJlIAI6Rvfel/O9doOS7qpir9Sy5NPZdXTxmczXdk/pXgvtK7Zsc2z3uOfdnzes6e0p+f+9sC7mXSemd+b9mp6eH30PoX</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E10E2ADE51B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E10E2ADE51B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E0BF28C252AFFE0401F0A079973EA</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E0BF28C252AFFE0401F0A079973EA</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E0990945B61E3E0401F0A07995A9C</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:F96E0990945B61E3E0401F0A07995A9C</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E0990945B61E3E0401F0A07995A9C</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/05/15 09:51:15</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E16785A0769E5E0401F0A079973F0</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E0BF28C252AFFE0401F0A079973EA</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E16785A0769E5E0401F0A079973F0</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E0BF28C252AFFE0401F0A079973EA</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E0BF28C252AFFE0401F0A079973EA</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E0BF28C252AFFE0401F0A079973EA</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80313</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>F950D206F433F7F4E0401F0A07995669</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_76530 - StreamListView - PORTAL - Standard User can view stream created by Full User - 200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="7c42d9aa-3644-48a3-9b14-f09197b290f6"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="ed37e993-3e34-4368-be45-a8a5a1eb4a24"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="d79daf63-f34d-4b3c-9c4f-ce627ca0be6b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="d5ae7f99-d403-497f-83ec-c7e447556075" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="fea42481-af6b-4ee0-824d-5337ec3dce1e"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="fb5e30b1-d979-4b61-9295-b0f5ee3a0b94"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTAL" id="a0bae04a-e4e1-4189-b03e-d43b6b21c56c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_SAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userStandard1Org1Password"));

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="75d5e5bb-2a5c-49a4-bdca-2674401c4c61"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="6759cd57-f456-46c0-8340-0a83da5b6bc0" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="d30adbe0-8497-4333-8a32-8b8899cb7d40" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportal1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140515_05445</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testing</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:F96E164D1EFBD642E0401F0A079973F8</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F42CF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E099093C861E3E0401F0A07995A9C</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbbuI6FH2fr4gyj1XIhVxIVJAYKHMyLdMWKNPh5ch1NuA22BA7XPr1Y4eGAqU9nSMhIe9sr732xcs+52iWOlGTc8gEYVSL23X9X6h6YRi4gZHYATLcas0xwuDBM4Kxk3ihA361ZutazHkOMeUCUVHXHct2DcszbG9ghZHrRnat4ofVka4NIeMSWrpULF1bz1LKoyJsXc8zGjHECY8omgGPBI76ze5VJD0jVHLSG+dblkXArDEVYh6ZJq4kgCFNcQWzmXluHvicJzzqkwlFIs/gJWbC6/rL3tVqVVlVKyybmI5lWaYVmtIn4WTyVW98KTdDEtMx265biDJKMErJM1KkuiCmLNGa6YRlRExn70Dbpm0paAPW2MC2S7/q5muAgt0nkQ5IZhwZfIrsEqwHY8iAYtDuenFd//q5Dm73DjJE+ZhlM360/jtKQJeQsjkkBi8zK9l9HvFEuRrngKOY4jTnZAk/1ZjMEQau3WQwJusrwuXwJVwr2q+tufyRcsoA/01bzs19rpK6eaI6bTIBLv5Pz/b7tUUZojSHxmpIN/jsuXZ37W8233+5/lV33Lpsnz1ktXpBYd95S2rX7pf18bDuZutl0414dJs+C+hl/h16P7g3hL5/sRgufnsXMb9Lz2rBHWp3/xkRJ6e3t2N6z/uXwaW9HoY1bz24DeLmr8dn6/4m5KMvY8R+3E9+g7lZdcjV6Gp8t7RW7W/38+kozuNbb3RmPY26PXExdOONIM1r4U8WZ4PBUzpCrQGxZtbTJMnP6GrlZF9+PXRNQpb5w2MvDBh6Hjw91V9z2s/h0FhKQl/uBCzKpRqPuK11ZL+Q+FhelIUkxrhwjeZKo7gAKvSG2qWkJcqlAJEkks3crjuhf2GFoRVWW4FvX1QvLNeyO1bTCsLQa4atUoO2LI4othgdExVLqex2fj4miGcRB5pAZixZjqfA9Q8Q20ggLaY9eTgY5TBgUsVtMXdZ9ix8hDxkJwtgj9XH2mY5Fbr2k4lrep01xwKyA+22nQPt7gEmcwJK4NWEczniXMhiLNAyF6ldWaIKhVxeAZlS4chxa57JyWyegqJqzliSp1CZT+dFaUy+/XcMhHlhJRzPWSZQahcH8N38jr+VpZA+CVEOXKX0DWQ74cRdZJX5vMnbO3lnlfDNPCHqnMm6iozgLZPDT6/jouZkNyuviZXMdxv+EgDzExDmB/zM49LsIiZLshe/vF/llSEFpVH2d4Eqi0q+XOZFRwMllpmEN6Vm2mYfcC4VbzNgT0DNHYT5qQtnx/oo8s5+yC8XU9oXSMBMzp9WLD/x2ugDV6+NWJ6c9WefMgchZd0ErMUpWyuVjxLF+MN3C46w8pPmG/m3Ylny2q4TWHtxZJ7yiSEInaiVulo270wHZhKWSC1k2T74KYBTwQ+NuyLvuAg5TQ+5gPe/aErk6jrCmOVUxG29MOwLb8FTbOYQvTq9gSnE/eW2XvN3b+v77lVfSuAM6Ttf8t/OBinGBYOuHgUFl7q+lo9PGZxO9oT+heCh1ntW27H8jut86wQd90DrfT/cFfAgk8Yb81vLXk2Pz0PjDw==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E099093C761E3E0401F0A07995A9C</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E099093C761E3E0401F0A07995A9C</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E099050922D99E0401F0A07995A98</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E099050922D99E0401F0A07995A98</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E164D1EFBD642E0401F0A079973F8</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:F96E164D1EFBD642E0401F0A079973F8</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E164D1EFBD642E0401F0A079973F8</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/05/15 09:51:21</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E099050922D99E0401F0A07995A98</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E099050922D99E0401F0A07995A98</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E099050922D99E0401F0A07995A98</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E099050922D99E0401F0A07995A98</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80315</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>F950D206F433F7F4E0401F0A07995669</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_76531 - StreamListView - PORTAL - Standard User can view stream created by Standard User - 200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="84914a56-1a47-42f8-a153-e23bb9cab5fa"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="8f2c20f6-c29b-4614-87b2-e3101041db6a"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_SAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userStandard1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="b5cd30fd-c0b5-4baa-8d61-234bdd4dfad8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="d748801a-df11-452a-ad28-b0f77091cfc1" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="5ac1e273-6b88-4dd3-94cf-fcec52404334"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="4c9038f9-5049-4982-925d-5b7b95342279"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTAL" id="61f7fb12-a610-450f-84e0-2f753f9a1ec7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="821ee4d7-f190-4d87-abca-285d6c03d953"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="a563d514-d0e4-4928-99b1-2a266dcc57b6" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="c4d765db-580b-4345-953c-5ee818c6f3e2" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportal1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140515_05445</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testing</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:F96E0990509D2D99E0401F0A07995A98</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F42CF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E099093C861E3E0401F0A07995A9C</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbbuI6FH2fr4gyj1XIhVxIVJAYKHMyLdMWKNPh5ch1NuA22BA7XPr1Y4eGAqU9nSMhIe9sr732xcs+52iWOlGTc8gEYVSL23X9X6h6YRi4gZHYATLcas0xwuDBM4Kxk3ihA361ZutazHkOMeUCUVHXHct2DcszbG9ghZHrRnat4ofVka4NIeMSWrpULF1bz1LKoyJsXc8zGjHECY8omgGPBI76ze5VJD0jVHLSG+dblkXArDEVYh6ZJq4kgCFNcQWzmXluHvicJzzqkwlFIs/gJWbC6/rL3tVqVVlVKyybmI5lWaYVmtIn4WTyVW98KTdDEtMx265biDJKMErJM1KkuiCmLNGa6YRlRExn70Dbpm0paAPW2MC2S7/q5muAgt0nkQ5IZhwZfIrsEqwHY8iAYtDuenFd//q5Dm73DjJE+ZhlM360/jtKQJeQsjkkBi8zK9l9HvFEuRrngKOY4jTnZAk/1ZjMEQau3WQwJusrwuXwJVwr2q+tufyRcsoA/01bzs19rpK6eaI6bTIBLv5Pz/b7tUUZojSHxmpIN/jsuXZ37W8233+5/lV33Lpsnz1ktXpBYd95S2rX7pf18bDuZutl0414dJs+C+hl/h16P7g3hL5/sRgufnsXMb9Lz2rBHWp3/xkRJ6e3t2N6z/uXwaW9HoY1bz24DeLmr8dn6/4m5KMvY8R+3E9+g7lZdcjV6Gp8t7RW7W/38+kozuNbb3RmPY26PXExdOONIM1r4U8WZ4PBUzpCrQGxZtbTJMnP6GrlZF9+PXRNQpb5w2MvDBh6Hjw91V9z2s/h0FhKQl/uBCzKpRqPuK11ZL+Q+FhelIUkxrhwjeZKo7gAKvSG2qWkJcqlAJEkks3crjuhf2GFoRVWW4FvX1QvLNeyO1bTCsLQa4atUoO2LI4othgdExVLqex2fj4miGcRB5pAZixZjqfA9Q8Q20ggLaY9eTgY5TBgUsVtMXdZ9ix8hDxkJwtgj9XH2mY5Fbr2k4lrep01xwKyA+22nQPt7gEmcwJK4NWEczniXMhiLNAyF6ldWaIKhVxeAZlS4chxa57JyWyegqJqzliSp1CZT+dFaUy+/XcMhHlhJRzPWSZQahcH8N38jr+VpZA+CVEOXKX0DWQ74cRdZJX5vMnbO3lnlfDNPCHqnMm6iozgLZPDT6/jouZkNyuviZXMdxv+EgDzExDmB/zM49LsIiZLshe/vF/llSEFpVH2d4Eqi0q+XOZFRwMllpmEN6Vm2mYfcC4VbzNgT0DNHYT5qQtnx/oo8s5+yC8XU9oXSMBMzp9WLD/x2ugDV6+NWJ6c9WefMgchZd0ErMUpWyuVjxLF+MN3C46w8pPmG/m3Ylny2q4TWHtxZJ7yiSEInaiVulo270wHZhKWSC1k2T74KYBTwQ+NuyLvuAg5TQ+5gPe/aErk6jrCmOVUxG29MOwLb8FTbOYQvTq9gSnE/eW2XvN3b+v77lVfSuAM6Ttf8t/OBinGBYOuHgUFl7q+lo9PGZxO9oT+heCh1ntW27H8jut86wQd90DrfT/cFfAgk8Yb81vLXk2Pz0PjDw==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E099093C761E3E0401F0A07995A9C</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E099093C761E3E0401F0A07995A9C</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D2092BC22DB4E0401F0A07995675</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F950D2092BC22DB4E0401F0A07995675</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E0990509D2D99E0401F0A07995A98</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:F96E0990509D2D99E0401F0A07995A98</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E0990509D2D99E0401F0A07995A98</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/05/15 09:51:29</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E16785A0769E5E0401F0A079973F0</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F950D2092BC22DB4E0401F0A07995675</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E16785A0769E5E0401F0A079973F0</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F950D2092BC22DB4E0401F0A07995675</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D2092BC22DB4E0401F0A07995675</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F950D2092BC22DB4E0401F0A07995675</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80316</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>F950D206F433F7F4E0401F0A07995669</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_76700 - StreamListView - PORTAL - API invocation after StreamRenew by Full User - 200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="6390dc29-3c62-4781-83ab-f171a6618b2a"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="5f7548b5-5aa5-46c6-8ecc-d3f7b03bdbe4"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBModifiedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="3120f329-6d96-4f75-a1b1-d5a4ef29e93a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="9f7ee848-3972-4d45-860b-6445757dd500" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="d95b336a-98e7-43ca-b064-fc9509912d8e"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="9e355fc8-9ff9-4d21-88a6-ce9ebb99f5de"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Update STREAM_DATA.EXPIRATION_DATE for renewal" id="fc4df8b0-e6dd-4bde-887b-db695ba046ed"><con:settings/><con:config><script>import org.apache.commons.lang.SystemUtils;
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
Date d;
if (System.properties['os.name'].toLowerCase().contains('windows')) 
	{
d=new Date(new Date().getTime()+7200000);
	}
else
	{
d=new Date(new Date().getTime()+50400000);
	}
	
String s=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'").format(d);
tP.setPropertyValue("ExpirationDateTime",s);</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamRenew" id="f39f1262-3c48-48a3-862d-4a80e947970d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamRenew")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTAL" id="1a30c58d-9575-4a9a-8742-2eafc80bbe52"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="646832fe-74f0-4a09-a377-10f90be14886"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="45ed69fe-8795-49f2-b56f-cef01ef37761" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="7dc5b810-6e9b-48bd-abde-a8dc77415984" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportal1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150505_014857</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:EC8787732F0C4FB298DB1C02829ABE04</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">155207B15BC46DFBE05307991F0A0655</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">155207B15BCF6DFBE05307991F0A0655</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZrb+I4FP0rKPNxFOIEUiAqSFDabbZlYIHptvtlZRwHXBI7+MGjv37sAClQ2mVWQkK+uT733IePfS1gmnhBWwjMJWG0tE4TKoLc2rQUpwGDgoiAwhSLQKJg1O49Bl4ZBHC/xSqF3ab1bw2BOJ7AiY2u4ppdrXg1uwEmng0mAKBGXK3XJw3tKoTCIRUSUtm0POD6NjC/MagH7lVQqZerNf8fq/SEudDY2qUMrB2ptWhaMymzwHFWq1V5VSkzPnU8AFznufc4QjOcQqt1vc0oD8RbO39UjjDCSYLKiKXOtXPkcx2JYESmFErF8S5W9Fks4ICGo30iQabfrGIvjkIas3x5AymjBMGEvEFTnx6WMxaV2smUcSJn6adJuMAA23iNbORW6TfLOaZ2IdARQy6gLWbQ3WENcYw5pgiXfg7DpvXtsq7lW8ccUhEznorj5e/xwXSJE5bhyBb7tHbULgc8U6nWNUZBSFGiBFniH2ZYM4iw2HUTo8uhSgOOY7J+JEIP6FoYds4hvZPlthpdMsVC/p8GHTRnC/IEE4VbG9XffPc3s/j1fjju0EEasvYiVrcdfNvMCRw654aitdvlyVAWQ7Td8YY7d0AMaivZFVUkWY/7btj/OdrU+3OuEHoQ4Ys7GibZsjZ6rK1es7a45ePXfoo6r6D6LAcPlMxRD03/AFT5M5B95wp0nT9fGmDRV/f9p3mqB/+xs9jgYeXBXzy/hbH713O9Un8Gi5so7GbjxiCpzjtofu/p7fc3tbep0xilA/D3phO/3IaM9EX6xnrVZpHOAf9j2/7Mj9TkFSO5X5oxCLulO90lKL8WM2MhkR3nrkFmxEdITKXVMruMdgRKyx2JAt3D7dr1fQ/UOq7fubm96t51boFfAbVGw70DbXDl+3uR2bI4oXjDaExMLCO527H5miBKA4FphLm9ZEornbC+QOxCCUshHepDwKjAY6blOZ1U/XS2irmaeAvKV/NFJULLycoq/WCyT/u8HUvMjyTZdY8keYgRyQg2um3GWui5FlKXYgGXSiZueQnLFCut7NyIbOBV674jSJol2BB1UhapBJezWZYXxhHbf8+GSORWIlDGuIRJfh6cT7M7/bYvhPaJiHEQJqUO1s3EZ64Yb5/Ph7yvzl5Fe/i2iog5XrqqkhO0ZXL86X1YzJQUk/Ke2J55seE3AZA4A+F8wc85LU0RMVqSg/j7u1zfClpHWvv+LqBbXpTVcqnyllarFYdreMcU1QGeM8JIaaXbjNkcU6dAcS66VgriJ8EL+zFFJWd0JKHEqR7BUr684B0xwsK8I0J9dNaXPlKOQurSSbyW52w3iX4DGcZfPpNQgIyfNg/034rx6L1jZ7AO4ug89TNCEjo1K3OlbD4ZEMQ0LNFiyPgh+DmAc8GPjUWRCy5SD9RESfz5l5JRuaYFEWKKyrBr5YZD5c15yk2Gg3enDzC5uBevPfLfzz2b5COAsH4jCpLjm0s7MEeATg/Uexf0EwGvfCXgx+xaH8wfLQd1Op3x1i8=</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">155207B15BCE6DFBE05307991F0A0655</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">155207B15BC36DFBE05307991F0A0655</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">155207B15BCB6DFBE05307991F0A0655</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:155207B15BCE6DFBE05307991F0A0655</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:155207B15BC36DFBE05307991F0A0655</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">15524A820D784A18E05307991F0A9C2F</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:15524A820D784A18E05307991F0A9C2F</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">EC8787732F0C4FB298DB1C02829ABE04</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:EC8787732F0C4FB298DB1C02829ABE04</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">EC8787732F0C4FB298DB1C02829ABE04</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/05/05 08:24:17</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:155207B15C7F6DFBE05307991F0A0655</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:15524A820D784A18E05307991F0A9C2F</con:value></con:property><con:property><con:name>expectDBUpdatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBUpdatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBUpdatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/05/05 08:24:34</con:value></con:property><con:property><con:name>expectDBUpdatedTime</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/05/05 08:24:34</con:value></con:property><con:property><con:name>expectDBRenewedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:155207B15C7F6DFBE05307991F0A0655</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:15524A820D784A18E05307991F0A9C2F</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">15524A820D784A18E05307991F0A9C2F</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:15524A820D784A18E05307991F0A9C2F</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80321</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>155207B15BCB6DFBE05307991F0A0655</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP_CS_1</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_76701 - StreamListView - PORTAL - API invocation after StreamRenew by Standard User - 200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="d497b8d3-f044-4b31-8056-e11a343eb43a"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="03dbb2fe-08ac-44b6-afeb-2fa3a0bfd29e"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_SAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBModifiedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="7e1d1391-6ce5-41d2-9eb9-7ccd1e48b392"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="d9af8e2f-84c7-412f-b70d-d1272507cdcf" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="f5110333-491c-4168-942d-48d67da20da3"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="2c4b223c-7fa6-415a-b008-85e12a448a21"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Update STREAM_DATA.EXPIRATION_DATE for renewal" id="09e72cb2-4c2c-4316-99c6-cafc2b6c59f0"><con:settings/><con:config><script>import org.apache.commons.lang.SystemUtils;
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
Date d;
if (System.properties['os.name'].toLowerCase().contains('windows')) 
	{
d=new Date(new Date().getTime()+7200000);
	}
else
	{
d=new Date(new Date().getTime()+50400000);
	}
	
String s=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'").format(d);
tP.setPropertyValue("ExpirationDateTime",s);</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to Standard User" id="249f8825-1474-49f8-ac13-6e2947839e80"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("username",tP.getPropertyValue("UserName_SAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userStandard1Org1Password"));

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamRenew" id="ecacd495-073c-49c7-9294-9e1f17937866"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamRenew")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTAL" id="6f6c195b-11fd-4afc-8cbd-9d5bfc618877"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="869d100b-54aa-4daa-8e32-18fbf2b99184"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="c8a1ec28-26a5-4abb-b6d2-4fcece7afc5d" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="8a63e139-148a-480e-9456-d645096342bb" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140515_05445</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testing</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:F96E099050AC2D99E0401F0A07995A98</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F42CF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E099093C861E3E0401F0A07995A9C</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZdb+I6EH3fXxFlH69CPggfiQoSBaqbbaEFWrrdl5VxJuA2OCF20tBfv3ZoUqC0t3slJOTJeObMzPGxzxhah5bbYwwSTiKqeIOO+rsdWL4PfqC124Gh2VYdachwGhpYqA6NhVM3sakqHmMpeJRxRHlHtQzT1oyGZjZuDce1bde2ak67/UtV5pAwEVq41AxVydchZW6RtqOmCXUjxAhzKVoDczl2Z73RlSs8XVRiUrtnO5RFwqS74jx2dR3XfMAQhriGo7V+ph/4nPnMnZElRTxN4DWnzzrq697n5+fac70WJUvdMgxDNxxd+PiMLL+r3W/lZvA9GkS7dR/RiBKMQvKCJKgR8FXkK71wGSWEr9YfhDZ105ChNcixhk2bflf1twQFui9GOgCZMKSxFTLLYFMIIAGKQbmbeh31+9cmuNt7myDKgihZs6P130ECmkEYxeBrrKysRPf1iCfa1T0D7HoUhykjGYwlTWKEgSk3CQQkvyJMkM9nSjF+JWfiR0qWAf6bsZzp+1gFdP1EdwZkCYz/n5ntz2sXZY7CFLoPfZwMR/XRaLXNtji3G7Nk/sPMsw1rdwoI+847UNW4X9fHZK249bppetfilw85vefjHpz3vOliwDb65od9jxf/6EtOtnZARlF9vL1kDqw3k/BXsLw8v8vCx+V88Av1LX7N6L19ZY/It8fx4kfmsPh2MnnY2Ly9MHor8+ViPL1owvO/fTJik9bPebJpDRe3dTIOYmLheXLe8O5G99nD5KoZBnNEHf1Jz+vfsstJkE0GPx9WsZFny9bQizpvNe3XcGgsJWGWLh4B83Ip6eENlAsxL8Q/lxdpIb4WFK5uLDWKcaBc7cpdUlrcVAgQ8V0xzN36wmkOzWar3egZraYzbAwN2zAvDLFynFb9wig1aIfiCGI/ogGRuaTK7vjzOUC8dhlQHxIti1K8AqZ+EnGAOFI8OhWHI6IMbiOh4mbTduLceMHIYKkZrwhCT37dfllYqjKO+DW9TnoBh+RAu03rQLungElMQAq8ZDgTFGdcNGODspSHZi1DNQqpuAISqcKuZbcbOiPrOAQJVV9HfhpCLV7FRWt0tvu3NIRZYR1c9WY3v/uz32ZxAD+s7/hb2Qrh4xPpwGRJ5yDGCSfuonpZz7u6GyfvrDJ8L/WJPGeirzwheIfk8NMbXSRPKq68FVYirzYcGw6C68d1Vfn8jOCK99WFLfReqEG3HM4G1Ta1NMvSYhwtqXSJCK8LwTP1GeBUyNX2NnoCqlch9C/dFhXqo8yV/RBfyld0xhGHtSCPUiy/8FSYAZNPBU/QPv/qO+Qgpegbh5yfsvVD8aKQiD99dGAXSz9hvhF/z1Hiv43rRKy9PKJO8T7ghC7lSt4L2w+4gSMRlgghi5L94KcCnEp+aKyaXGHhgk2LlMPHXxSpUB0VYRyllHsDtTDsq2aBk29jcN+c3oUplPn1qs3Zh1ftz9HVTOjXGqmVL/lvZ40UdMGgyhu9wNJRc/FyFMnpck+lXwG+F2p7YA77rUHTto6Eul018KCS7jvze8teT4/PQ/cP</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E16785A0769E5E0401F0A079973F0</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E164D1EC7D642E0401F0A079973F8</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E16785A0769E5E0401F0A079973F0</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:F96E164D1EC7D642E0401F0A079973F8</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E09BA3CAB85E3E0401F0A07995AB4</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E09BA3CAB85E3E0401F0A07995AB4</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E099050AC2D99E0401F0A07995A98</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:F96E099050AC2D99E0401F0A07995A98</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E099050AC2D99E0401F0A07995A98</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/05/15 09:51:54</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E16785A0769E5E0401F0A079973F0</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E09BA3CAB85E3E0401F0A07995AB4</con:value></con:property><con:property><con:name>expectDBUpdatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBUpdatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBUpdatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/12/24 09:15:20</con:value></con:property><con:property><con:name>expectDBUpdatedTime</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/12/24 09:15:20</con:value></con:property><con:property><con:name>expectDBRenewedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E16785A0769E5E0401F0A079973F0</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E09BA3CAB85E3E0401F0A07995AB4</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E09BA3CAB85E3E0401F0A07995AB4</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E09BA3CAB85E3E0401F0A07995AB4</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80322</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP_CS_1</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_76720 - StreamListView - PORTAL - API invocation after two StreamRenew invocations by Full User - 200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="cf4d560c-8ab8-47b6-b14a-9f879e20d44f"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="9b9ef719-80a2-4ca5-aec3-43eb20f915d2"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBModifiedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="950bd2f1-5fd3-408e-b5d5-5e04598e835c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="54285fbd-7dc4-48a4-af19-115545f6c678" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="2a4d8ed8-b80e-4318-ac1f-06e4923d092c"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="d4009b96-fa9c-4d9b-a6f2-9cf2747af03c"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Update STREAM_DATA.EXPIRATION_DATE for renewal" id="7071b996-6ad5-408f-b430-387348e5f4d7"><con:settings/><con:config><script>import org.apache.commons.lang.SystemUtils;
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
Date d;
if (System.properties['os.name'].toLowerCase().contains('windows')) 
	{
d=new Date(new Date().getTime()+7200000);
	}
else
	{
d=new Date(new Date().getTime()+50400000);
	}
	
String s=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'").format(d);
tP.setPropertyValue("ExpirationDateTime",s);</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamRenew" id="a7b1f8fc-41e9-4276-991c-dc563a0ee4d4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamRenew")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Update STREAM_DATA.EXPIRATION_DATE for renewal again" id="1ed16ab6-5c53-4d58-a6f7-7f5055671506"><con:settings/><con:config><script>import org.apache.commons.lang.SystemUtils;
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
Date d;
if (System.properties['os.name'].toLowerCase().contains('windows')) 
	{
d=new Date(new Date().getTime()+10800000);
	}
else
	{
d=new Date(new Date().getTime()+54000000);
	}
	
String s=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'").format(d);
tP.setPropertyValue("ExpirationDateTime",s);</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamRenew II" id="58ae848a-955d-4377-92c8-eb7f4d44314f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamRenew")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTAL" id="465a3e3f-a429-4a15-9cf0-928b74549caf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="6522aee6-2aa8-42d4-bbda-cdb0ff8c9969"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="6a810641-e43f-478f-8138-6fc4aac67196" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="1a983a66-6046-4b30-8441-a9aec44f7666" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140515_05444</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:F96E09BA3CB685E3E0401F0A07995AB4</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F42CF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E10E2ADE61B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbvU+I8EP7uX9HpfbwpbaH8aEeYQap3iKceRc/xixPThUbaFJO0gH/9JcVWQPT13hlmmGw3u8/uPnmSY46SuO71OQcmSEq1od/VH5ohDhF228YUABmOXUdG57HVNpqP7hSD5YbyT9eGnGcwpFwgKrp63bIdw2oadnNiuZ7jeI5d6zSce127BcZlaOlSs3RtlcSUe0Xarp4x6qWIE+5RlAD3BPaC/q8LT3p6qMSk9443KIuErBcJsfBME9dCwBDHuIbTxDw2d3yOQ+4FZEaRyBi85gx5V3/du1wua8tGLWUzs25Zlmm5pvQJOZl903tH5WYIh3SabtYDRFNKMIrJC1KgfoGI0lDrx7OUERElH4S2TdtSoQ1YYQPbDv2mm28JCnRfjLQDknFk8AjZZbAxTIEBxaDdjIdd/dvXJrjZO2GI8mnKEr63/jdIQHOI0wWEBi8rK9F9PeKBdvWOAXtDiuOMkxwuFU0WCAPXrhlMyeqCcEm+kGvF+LUVlz9Ssgzwv4zl2NzGKqGbB7rjkxlw8X9mtj2vTZRbFGfQW6/XoT92/PNRv2mPMhSwKFjh+SSv824BYdt5A6oa9+t6n6wVt143jfLfsDw9m3fiAfX9l6cOOmHrH5fn+JKNWzM6+3N1GVjR+qmNrjo/hhG7PLeSpB3f/LiFiJt/bDLt359MxqeBO789ykdtn8/J/SB+mdsOaQQjarJ8RRujm7Vt3bGX1mqSN3mD3aytxc+bq/nPtn1/d/fUpDfDE3bRObkY3V/74nfCXvDRozl3v+f276er79F1ePqnQzrdt5q2a9g1lpIQZI9PgEW5VPQY+tqZnBcSn8uLspDQmBau3kJpFBdAhd5Tu5S0eJkUIBJ6cpib9ZnbOrVOzuxGp+M2mm7j1HIs+8zqW23XbTfOWqUGbVDsQRykdEpULqWyG/58DhAnHgcaAjPyNMMRcP2TiD4SSBvSsTwcKeUwSaWKo6btLmHOn1oiWsxXlDsWyzmWp+MyFVf0ivWnAtiOctv1HeUeAyYLAkreFb+5JDgXshXPKM9EbNdyVKOQyQuAKQ326k6naXKSLGJQQM0kDbMYaotoUTTG5Jv/uoEwL6z+RT+4fhgED3Zx/D6sbv9b2QjpExLlwFVJJyCHCQduokZZz7u6mwdvrDJ8PwuJOmWyq4IRvEGy++mNLIolFVPeCiuRVxv2DTvBzf26qnxhTnDF+uq6lmovtaBXDucZ1Z5rWZ5nxTjaSueYDG9KubPNAHAmxWo9SedAzSqE+aW7okK9l7my7+LLREQDgQQkkjxasfzCQyEArh4KQ0n61VdfITspZd8ErMQh2yCW7wmF+NMnB/aw8pPma/m3TFn4Nq4DsbbyyDrl60AQOlMrdSusP+AGTmVYImUsZdvBDwU4lHzXWDW5wiIkmx4zAR9/0ZQ+dXWEcZpRMfT1wrCtmQVOsV6A9+b0Lkyhy68X7Yp/eNHe/boIpHolSK98yX87G6SgCwZd3ecFlq6+ku9GmZzOtjT6FeC+TNstx7dPB22/5dT3ZLpTNXCnkt4783vLVk/3z0PvLw==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E164D1EC7D642E0401F0A079973F8</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:F96E164D1EC7D642E0401F0A079973F8</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E164D1F0CD642E0401F0A079973F8</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E164D1F0CD642E0401F0A079973F8</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E09BA3CB685E3E0401F0A07995AB4</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:F96E09BA3CB685E3E0401F0A07995AB4</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E09BA3CB685E3E0401F0A07995AB4</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/05/15 09:52:01</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E164D1F0CD642E0401F0A079973F8</con:value></con:property><con:property><con:name>expectDBUpdatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBUpdatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBUpdatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/12/24 09:22:39</con:value></con:property><con:property><con:name>expectDBUpdatedTime</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/12/24 09:22:39</con:value></con:property><con:property><con:name>expectDBRenewedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E164D1F0CD642E0401F0A079973F8</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E164D1F0CD642E0401F0A079973F8</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E164D1F0CD642E0401F0A079973F8</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80324</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP_CS_1</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>1ed16ab6-5c53-4d58-a6f7-7f5055671506</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_76721 - StreamListView - PORTAL - API invocation after two StreamRenew invocations by Standard User - 200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="0108220f-bb5b-46fc-8168-636c45375433"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="8ffffd36-bb85-4d34-9293-0295f9ac87b0"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_SAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userStandard1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBModifiedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="30692420-3c69-487a-a37b-d4c409b64c47"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="2184428e-9ad7-4b8c-86e5-69dbbd11529b" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="09202cfc-4dee-4bf3-8055-49e530ca896b"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="8927a885-829e-4f9b-9c6c-4464b21449a7"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Update STREAM_DATA.EXPIRATION_DATE for renewal" id="b42337a2-f825-4caf-a978-66865add555f"><con:settings/><con:config><script>import org.apache.commons.lang.SystemUtils;
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
Date d;
if (System.properties['os.name'].toLowerCase().contains('windows')) 
	{
d=new Date(new Date().getTime()+7200000);
	}
else
	{
d=new Date(new Date().getTime()+50400000);
	}
	
String s=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'").format(d);
tP.setPropertyValue("ExpirationDateTime",s);</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamRenew" id="44ab03de-3b27-4f03-bce2-8f0d8c4f037f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamRenew")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Update STREAM_DATA.EXPIRATION_DATE for renewal again" id="20c7021a-530a-4fdc-a4c4-d8430fa612e9"><con:settings/><con:config><script>import org.apache.commons.lang.SystemUtils;
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
Date d;
if (System.properties['os.name'].toLowerCase().contains('windows')) 
	{
d=new Date(new Date().getTime()+10800000);
	}
else
	{
d=new Date(new Date().getTime()+54000000);
	}
	
String s=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'").format(d);
tP.setPropertyValue("ExpirationDateTime",s);</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamRenew II" id="d8994dcb-b28c-451d-a27b-04ae1aa63f83"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamRenew")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTAL" id="1f8086a3-8711-4d97-9ef7-5abc7af7d855"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="29345ae7-fda9-4ecc-8c2d-897c89fc6cfa"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="9b4e6c3c-053d-4893-8ed4-be51c93fd1f1" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="a2177ee6-6cce-4011-abf2-4df24e7ed586" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140515_05445</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testing</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:F96E16785A4569E5E0401F0A079973F0</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F42CF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E099093C861E3E0401F0A07995A9C</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZdb+I6EH3fXxFlH69CPggfiQoSBaqbbaEFWrrdl5VxJuA2OCF20tBfv3ZoUqC0t3slJOTJeObMzPGxzxhah5bbYwwSTiKqeIOO+rsdWL4PfqC124Gh2VYdachwGhpYqA6NhVM3sakqHmMpeJRxRHlHtQzT1oyGZjZuDce1bde2ak67/UtV5pAwEVq41AxVydchZW6RtqOmCXUjxAhzKVoDczl2Z73RlSs8XVRiUrtnO5RFwqS74jx2dR3XfMAQhriGo7V+ph/4nPnMnZElRTxN4DWnzzrq697n5+fac70WJUvdMgxDNxxd+PiMLL+r3W/lZvA9GkS7dR/RiBKMQvKCJKgR8FXkK71wGSWEr9YfhDZ105ChNcixhk2bflf1twQFui9GOgCZMKSxFTLLYFMIIAGKQbmbeh31+9cmuNt7myDKgihZs6P130ECmkEYxeBrrKysRPf1iCfa1T0D7HoUhykjGYwlTWKEgSk3CQQkvyJMkM9nSjF+JWfiR0qWAf6bsZzp+1gFdP1EdwZkCYz/n5ntz2sXZY7CFLoPfZwMR/XRaLXNtji3G7Nk/sPMsw1rdwoI+847UNW4X9fHZK249bppetfilw85vefjHpz3vOliwDb65od9jxf/6EtOtnZARlF9vL1kDqw3k/BXsLw8v8vCx+V88Av1LX7N6L19ZY/It8fx4kfmsPh2MnnY2Ly9MHor8+ViPL1owvO/fTJik9bPebJpDRe3dTIOYmLheXLe8O5G99nD5KoZBnNEHf1Jz+vfsstJkE0GPx9WsZFny9bQizpvNe3XcGgsJWGWLh4B83Ip6eENlAsxL8Q/lxdpIb4WFK5uLDWKcaBc7cpdUlrcVAgQ8V0xzN36wmkOzWar3egZraYzbAwN2zAvDLFynFb9wig1aIfiCGI/ogGRuaTK7vjzOUC8dhlQHxIti1K8AqZ+EnGAOFI8OhWHI6IMbiOh4mbTduLceMHIYKkZrwhCT37dfllYqjKO+DW9TnoBh+RAu03rQLungElMQAq8ZDgTFGdcNGODspSHZi1DNQqpuAISqcKuZbcbOiPrOAQJVV9HfhpCLV7FRWt0tvu3NIRZYR1c9WY3v/uz32ZxAD+s7/hb2Qrh4xPpwGRJ5yDGCSfuonpZz7u6GyfvrDJ8L/WJPGeirzwheIfk8NMbXSRPKq68FVYirzYcGw6C68d1Vfn8jOCK99WFLfReqEG3HM4G1Ta1NMvSYhwtqXSJCK8LwTP1GeBUyNX2NnoCqlch9C/dFhXqo8yV/RBfyld0xhGHtSCPUiy/8FSYAZNPBU/QPv/qO+Qgpegbh5yfsvVD8aKQiD99dGAXSz9hvhF/z1Hiv43rRKy9PKJO8T7ghC7lSt4L2w+4gSMRlgghi5L94KcCnEp+aKyaXGHhgk2LlMPHXxSpUB0VYRyllHsDtTDsq2aBk29jcN+c3oUplPn1qs3Zh1ftz9HVTOjXGqmVL/lvZ40UdMGgyhu9wNJRc/FyFMnpck+lXwG+F2p7YA77rUHTto6Eul018KCS7jvze8teT4/PQ/cP</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E16785A0769E5E0401F0A079973F0</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E164D1EC7D642E0401F0A079973F8</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E16785A0769E5E0401F0A079973F0</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:F96E164D1EC7D642E0401F0A079973F8</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E0991FCADF920E0401F0A07995AAA</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E0991FCADF920E0401F0A07995AAA</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E16785A4569E5E0401F0A079973F0</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:F96E16785A4569E5E0401F0A079973F0</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E16785A4569E5E0401F0A079973F0</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/05/15 09:52:09</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E16785A0769E5E0401F0A079973F0</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E0991FCADF920E0401F0A07995AAA</con:value></con:property><con:property><con:name>expectDBUpdatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBUpdatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBUpdatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/12/24 09:25:41</con:value></con:property><con:property><con:name>expectDBUpdatedTime</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/12/24 09:25:41</con:value></con:property><con:property><con:name>expectDBRenewedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E16785A0769E5E0401F0A079973F0</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E0991FCADF920E0401F0A07995AAA</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E0991FCADF920E0401F0A07995AAA</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E0991FCADF920E0401F0A07995AAA</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80325</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP_CS_1</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>20c7021a-530a-4fdc-a4c4-d8430fa612e9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_79050 - StreamListView - PORTAL - AccountNotActive - ACCOUNT.STATUS of deleted status - 403 Forbidden" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="263e6ade-0b38-4e89-80c8-d8f5aec9d8ac"><con:description>This test case will verify proper response from the StreamCreate API when the supplied SAML assertion references a node account that is in deleted status</con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="04b2a08a-fa30-4120-a677-fd42c59de33d"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
//tC.setPropertyValue("streamhandleFULL","urn:dece:streamhandleid:org:dece:973A15CDA87B7C93E0401F0A059969A1");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("loopuntil","25");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","ACCOUNT_NOT_ACTIVE");
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="db13779e-de2a-4543-80ad-3bce60790748"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="c886c03e-50e1-4add-b361-6d2a2d0a8984" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="84920b96-448b-468f-9732-16c6de5a31aa"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();



	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="2bf7a321-c7de-4330-98db-7a962504469a"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTAL" id="b4575073-0636-4e9e-b124-ada3b56a200a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Update ACCOUNT.STATUS to 'deleted'" id="c212ce05-b7df-439c-b87c-3194c390059b"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"deleted") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="53f1bc4d-966d-469e-a5f9-431258b07bb2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT.STATUS to 'active'" id="2ccc0ff9-51e7-485f-8185-5baa1c00b72a"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"active") == 1;</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>80340</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>portal</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>username</con:name><con:value>stream_list_view_20140515_05444</con:value></con:property><con:property><con:name>password</con:name><con:value/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value>urn:dece:streamhandleid:org:dece:F96E4A0E94CC7930E0401F0A059946C3</con:value></con:property><con:property><con:name>accountoid</con:name><con:value>F950D206F42CF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>useroid</con:name><con:value>F96E10E2ADE61B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>assertid</con:name><con:value/></con:property><con:property><con:name>assert</con:name><con:value>nVbbbuo4FH3vV0Tp4whyadKQqCDRAjrM4UAP9P4yMvYGXBInjR1IztePHRoKlHbakVCQd7bXXvuSZV9wFIV20OYcUkFjpvU7Tf0f4pyRhglebTaVD8f2cK1B5MPzp9bUxO4ZxqBrfc4z6DMuEBNN3TYtp2a6Ncu9Mf3AcQLLqVu286Rrd5ByCS1d6qau5VHIeFCGbepZyoIYccoDhiLggcDBpP1rEEjPAFWc9NbFhmUZMG0thEgCw8B1AhjCENdxHBkXxp7PBeHBhM4ZElkKrzEJb+qve9frdX19Vo/TuWGbpmmYviF9CKfzU711Um0G0mezeLO+QixmFKOQ/kGK1C8Qi5ho7XAep1Qsog+gLcMyFXQNclzDlsNOdeMtQMnui0h7JFOOanyBrApsDDNIgWHQbsf9pn76tQ5u9t6kiPFZnEb8YP09SsBWEMYJkBqvMqvYfR3xSLlaF4CDPsNhxukKhmpMEoSBa9cpzGg+oFwOH+Fa2X4t5/JHqykD/J22XBi7XCV140h1OnQOXPyfnu32a4Nyh8IMWo64XBqjhsF/G+vC83NiPw26hHsTt90sKew6b0ht2/26PhzW7Wy9bnpg5G7kDR6fnq6c5xD5ayfu/xxin4yLxTxxR2H048Gcrvqzq+mN8PHP578KAbPGKExmcD25Q2nj59Dx1y/u/ePdyeTG+23a0f38Kvk7S7qrfIV+LN31o7dAPTLtIiO/vbW8YmnNsqUXp0WvsIe96w4bjadOMRj+uTxH2fqeh23MeieFjDimtz36MrpbDobRS+E033LazWHfWEnCJJs+AxbVUo1Hv6P1ZL+Q+FxelIWS2qx0DRKlUVwAE3pL7VLSEmRSgCgJZDM3655/3rXMrt3udF3rstHumo5p9cy26fm+2760Kw3asDigeBWzGVWxlMpu5udzgjgKODACaW0VZ3gBXP8EsYME0vpsLD+OmHG4iaWK+3zh5g6Z+i7JScbO7MXSR8Uz1rVhLEZslLZnAtI95bbsPeUeA6YJBSXvar65HHAuZCle0CoToVVfoTqDTB4AqdLgwHYarsFplISgiBpRTLIQ6skiKQtj8M2/XUOYl1bKcRKnAoVW+fl9mN3hu6oQ0odQ5cBVSpcgmwlHTiKzyudd3u7RE6uCb2eEqq9MVlWkFG+Y7L96GxY1JdtJeUusYr7d8E0AzI9AGJ/wMw5Ls41IVnQnfnW6ygNDykmr6u8Lqr/Us9UqKzvqKalMJbwhFdMyJoAzqXfFTbwEZmwhjC8dN1vWB5G39n1+mViwiUACIjl/Wrn8wl1jAlzdNfryu8m/epHZCynrJiAXx2xXobySKMaf3lpwgJWfNF/Lv3Wckrd2HcHaiSPzlBcMQdlcrdTBUnwwHTiWsFQqYZzugh8DOBZ837gt8paLkNM0zQR8/EZTEtfUEcZxxkS/o5eGXdkteYoigeDN6R1MKe2vZ3XOPzyrH34NJlIAI6Rvfel/O9doOS7qpir9Sy5NPZdXTxmczXdk/pXgvtK7Zsc2z3uOfdnzes6e0p+f+9sC7mXSemd+b9mp6eH30PoX</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>25</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value>ACCOUNT_NOT_ACTIVE</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:F96E10E2ADE51B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>F96E10E2ADE51B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value>F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>F96E4A99E2357EDCE0401F0A05994858</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value>F96E4A99E2357EDCE0401F0A05994858</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value>urn:dece:rightstokenid:org:dece:F96E4A99E2357EDCE0401F0A05994858</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value>urn:dece:rightstokenid:org:dece:F96E4A99E2357EDCE0401F0A05994858</con:value></con:property><con:property><con:name>userIndex</con:name><con:value>4</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value>F96E4A0E94CC7930E0401F0A059946C3</con:value></con:property><con:property><con:name>streamhandleFULL_null</con:name><con:value>urn:dece:streamhandleid:org:dece:F96E4A0E94CC7930E0401F0A059946C3</con:value></con:property><con:property><con:name>streamhandle_null</con:name><con:value>F96E4A0E94CC7930E0401F0A059946C3</con:value></con:property><con:property><con:name>expectNickname_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_null</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_null</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_null</con:name><con:value>2014/05/15 09:56:01</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value>urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRequestingUser_null</con:name><con:value>urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value>urn:dece:rightstokenid:org:dece:F96E4A99E2357EDCE0401F0A05994858</con:value></con:property><con:property><con:name>expectRightsToken_null</con:name><con:value>urn:dece:rightstokenid:org:dece:F96E4A99E2357EDCE0401F0A05994858</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value>4</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>portal</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_null</con:name><con:value>portal</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c886c03e-50e1-4add-b361-6d2a2d0a8984</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84920b96-448b-468f-9732-16c6de5a31aa</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2bf7a321-c7de-4330-98db-7a962504469a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b4575073-0636-4e9e-b124-ada3b56a200a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_79080 - StreamListView - PORTAL - UserNotActive - User with a suspended status - 403 Forbidden" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="46efe7c8-fb84-4112-ac8b-1e29b179af1a"><con:description>This test case will verify proper response from the StreamCreate API when the supplied SAML assertion references a user that is in suspended status</con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="91b2adc6-a889-4ce7-a86c-2ef620cc9e67"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL","urn:dece:streamhandleid:org:dece:973A15CDA87B7C93E0401F0A059969A1");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("loopuntil","25");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","USER_NOT_ACTIVE");
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="242e1a49-55fe-4be7-b6ae-63eb16dfdedd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="7c187921-7256-4fab-a411-1fec1e5fe81a" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="db863a82-4a00-4031-b46a-0134fc3d64fc"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();



	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="6db44159-9b83-454f-94b6-dd3cbbd4518e"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTAL" id="2d7bb862-6f59-4cb6-b72e-4f440475a799"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT_USER.STATUS to 'suspended'" id="111d1a84-997c-4811-92ef-6bb7de27d974"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUser(log,tP.getPropertyValue("targetSystem"));

assert a.userSetStatus(tC.getPropertyValue("useroid"),"suspended") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="770bb05c-9069-40c0-afed-58e3df7bd6c5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT_USER.STATUS to 'active'" id="7850668b-3cf4-439f-88f4-ccfb7f555ae8"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUser(log,tP.getPropertyValue("targetSystem"));

assert a.userSetStatus(tC.getPropertyValue("useroid"),"active") == 1;</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">portal</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportal1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140515_05444</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:F96E4ABF5853639EE0401F0A059947F5</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F42CF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E10E2ADE61B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbbuo4FH3vV0Tp4whyadKQqCDRAjrM4UAP9P4yMvYGXBInjR1IztePHRoKlHbakVCQd7bXXvuSZV9wFIV20OYcUkFjpvU7Tf0f4pyRhglebTaVD8f2cK1B5MPzp9bUxO4ZxqBrfc4z6DMuEBNN3TYtp2a6Ncu9Mf3AcQLLqVu286Rrd5ByCS1d6qau5VHIeFCGbepZyoIYccoDhiLggcDBpP1rEEjPAFWc9NbFhmUZMG0thEgCw8B1AhjCENdxHBkXxp7PBeHBhM4ZElkKrzEJb+qve9frdX19Vo/TuWGbpmmYviF9CKfzU711Um0G0mezeLO+QixmFKOQ/kGK1C8Qi5ho7XAep1Qsog+gLcMyFXQNclzDlsNOdeMtQMnui0h7JFOOanyBrApsDDNIgWHQbsf9pn76tQ5u9t6kiPFZnEb8YP09SsBWEMYJkBqvMqvYfR3xSLlaF4CDPsNhxukKhmpMEoSBa9cpzGg+oFwOH+Fa2X4t5/JHqykD/J22XBi7XCV140h1OnQOXPyfnu32a4Nyh8IMWo64XBqjhsF/G+vC83NiPw26hHsTt90sKew6b0ht2/26PhzW7Wy9bnpg5G7kDR6fnq6c5xD5ayfu/xxin4yLxTxxR2H048Gcrvqzq+mN8PHP578KAbPGKExmcD25Q2nj59Dx1y/u/ePdyeTG+23a0f38Kvk7S7qrfIV+LN31o7dAPTLtIiO/vbW8YmnNsqUXp0WvsIe96w4bjadOMRj+uTxH2fqeh23MeieFjDimtz36MrpbDobRS+E033LazWHfWEnCJJs+AxbVUo1Hv6P1ZL+Q+FxelIWS2qx0DRKlUVwAE3pL7VLSEmRSgCgJZDM3655/3rXMrt3udF3rstHumo5p9cy26fm+2760Kw3asDigeBWzGVWxlMpu5udzgjgKODACaW0VZ3gBXP8EsYME0vpsLD+OmHG4iaWK+3zh5g6Z+i7JScbO7MXSR8Uz1rVhLEZslLZnAtI95bbsPeUeA6YJBSXvar65HHAuZCle0CoToVVfoTqDTB4AqdLgwHYarsFplISgiBpRTLIQ6skiKQtj8M2/XUOYl1bKcRKnAoVW+fl9mN3hu6oQ0odQ5cBVSpcgmwlHTiKzyudd3u7RE6uCb2eEqq9MVlWkFG+Y7L96GxY1JdtJeUusYr7d8E0AzI9AGJ/wMw5Ls41IVnQnfnW6ygNDykmr6u8Lqr/Us9UqKzvqKalMJbwhFdMyJoAzqXfFTbwEZmwhjC8dN1vWB5G39n1+mViwiUACIjl/Wrn8wl1jAlzdNfryu8m/epHZCynrJiAXx2xXobySKMaf3lpwgJWfNF/Lv3Wckrd2HcHaiSPzlBcMQdlcrdTBUnwwHTiWsFQqYZzugh8DOBZ837gt8paLkNM0zQR8/EZTEtfUEcZxxkS/o5eGXdkteYoigeDN6R1MKe2vZ3XOPzyrH34NJlIAI6Rvfel/O9doOS7qpir9Sy5NPZdXTxmczXdk/pXgvtK7Zsc2z3uOfdnzes6e0p+f+9sC7mXSemd+b9mp6eH30PoX</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">25</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">USER_NOT_ACTIVE</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E10E2ADE51B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E10E2ADE51B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80348</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>F950D206F720F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value>F950D206F720F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value>urn:dece:rightstokenid:org:dece:F950D206F720F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value>urn:dece:rightstokenid:org:dece:F950D206F720F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>userIndex</con:name><con:value>4</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value>F96E4ABF5853639EE0401F0A059947F5</con:value></con:property><con:property><con:name>streamhandleFULL_null</con:name><con:value>urn:dece:streamhandleid:org:dece:F96E4ABF5853639EE0401F0A059947F5</con:value></con:property><con:property><con:name>streamhandle_null</con:name><con:value>F96E4ABF5853639EE0401F0A059947F5</con:value></con:property><con:property><con:name>expectNickname_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_null</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_null</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_null</con:name><con:value>2014/05/15 09:56:10</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value>urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRequestingUser_null</con:name><con:value>urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value>urn:dece:rightstokenid:org:dece:F950D206F720F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>expectRightsToken_null</con:name><con:value>urn:dece:rightstokenid:org:dece:F950D206F720F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value>4</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>portal</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_null</con:name><con:value>portal</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7c187921-7256-4fab-a411-1fec1e5fe81a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db863a82-4a00-4031-b46a-0134fc3d64fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6db44159-9b83-454f-94b6-dd3cbbd4518e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d7bb862-6f59-4cb6-b72e-4f440475a799</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_79052 - StreamListView - PORTAL - AccountNotActive - ACCOUNT.STATUS of Pending status - 403 Forbidden" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="ab2be0e7-2914-424d-817a-faf00c7fa051"><con:description>This test case will verify proper response from the StreamCreate API when the supplied SAML assertion references a node account that is in deleted status</con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="9c2fffe0-a801-47d2-8d56-e4402ac60dbd"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
//tC.setPropertyValue("streamhandleFULL","urn:dece:streamhandleid:org:dece:973A15CDA87B7C93E0401F0A059969A1");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("loopuntil","25");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","ACCOUNT_NOT_ACTIVE");
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="9c1ee1ef-f4c0-4bd6-ba84-a44e83d519b9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="985aecbc-f7e3-4c72-ab0a-6bc2969eb8e9" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="70fb2869-b8da-4978-b103-3faeed040a52"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();



	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="bf869f20-d67d-4327-9066-26da56ecadcd"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTAL" id="db489963-1657-41d1-b506-a34e78d672f9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Update ACCOUNT.STATUS to 'pending'" id="d55e900e-5e8c-449b-8693-5d98771222b2"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"pending") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="5ff979a2-5ac6-4dd6-8810-685a3e1ab253"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT.STATUS to 'active'" id="6f3bcfd6-a3a0-4b68-9d36-acb17f73e45c"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"active") == 1;</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>80340</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>portal</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>username</con:name><con:value>stream_list_view_20140515_05444</con:value></con:property><con:property><con:name>password</con:name><con:value/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value>urn:dece:streamhandleid:org:dece:F96E4A99E3CF7EDCE0401F0A05994858</con:value></con:property><con:property><con:name>accountoid</con:name><con:value>F950D206F42CF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>useroid</con:name><con:value>F96E10E2ADE61B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>assertid</con:name><con:value/></con:property><con:property><con:name>assert</con:name><con:value>nVbbbuo4FH3vV0Tp4whyadKQqCDRAjrM4UAP9P4yMvYGXBInjR1IztePHRoKlHbakVCQd7bXXvuSZV9wFIV20OYcUkFjpvU7Tf0f4pyRhglebTaVD8f2cK1B5MPzp9bUxO4ZxqBrfc4z6DMuEBNN3TYtp2a6Ncu9Mf3AcQLLqVu286Rrd5ByCS1d6qau5VHIeFCGbepZyoIYccoDhiLggcDBpP1rEEjPAFWc9NbFhmUZMG0thEgCw8B1AhjCENdxHBkXxp7PBeHBhM4ZElkKrzEJb+qve9frdX19Vo/TuWGbpmmYviF9CKfzU711Um0G0mezeLO+QixmFKOQ/kGK1C8Qi5ho7XAep1Qsog+gLcMyFXQNclzDlsNOdeMtQMnui0h7JFOOanyBrApsDDNIgWHQbsf9pn76tQ5u9t6kiPFZnEb8YP09SsBWEMYJkBqvMqvYfR3xSLlaF4CDPsNhxukKhmpMEoSBa9cpzGg+oFwOH+Fa2X4t5/JHqykD/J22XBi7XCV140h1OnQOXPyfnu32a4Nyh8IMWo64XBqjhsF/G+vC83NiPw26hHsTt90sKew6b0ht2/26PhzW7Wy9bnpg5G7kDR6fnq6c5xD5ayfu/xxin4yLxTxxR2H048Gcrvqzq+mN8PHP578KAbPGKExmcD25Q2nj59Dx1y/u/ePdyeTG+23a0f38Kvk7S7qrfIV+LN31o7dAPTLtIiO/vbW8YmnNsqUXp0WvsIe96w4bjadOMRj+uTxH2fqeh23MeieFjDimtz36MrpbDobRS+E033LazWHfWEnCJJs+AxbVUo1Hv6P1ZL+Q+FxelIWS2qx0DRKlUVwAE3pL7VLSEmRSgCgJZDM3655/3rXMrt3udF3rstHumo5p9cy26fm+2760Kw3asDigeBWzGVWxlMpu5udzgjgKODACaW0VZ3gBXP8EsYME0vpsLD+OmHG4iaWK+3zh5g6Z+i7JScbO7MXSR8Uz1rVhLEZslLZnAtI95bbsPeUeA6YJBSXvar65HHAuZCle0CoToVVfoTqDTB4AqdLgwHYarsFplISgiBpRTLIQ6skiKQtj8M2/XUOYl1bKcRKnAoVW+fl9mN3hu6oQ0odQ5cBVSpcgmwlHTiKzyudd3u7RE6uCb2eEqq9MVlWkFG+Y7L96GxY1JdtJeUusYr7d8E0AzI9AGJ/wMw5Ls41IVnQnfnW6ygNDykmr6u8Lqr/Us9UqKzvqKalMJbwhFdMyJoAzqXfFTbwEZmwhjC8dN1vWB5G39n1+mViwiUACIjl/Wrn8wl1jAlzdNfryu8m/epHZCynrJiAXx2xXobySKMaf3lpwgJWfNF/Lv3Wckrd2HcHaiSPzlBcMQdlcrdTBUnwwHTiWsFQqYZzugh8DOBZ837gt8paLkNM0zQR8/EZTEtfUEcZxxkS/o5eGXdkteYoigeDN6R1MKe2vZ3XOPzyrH34NJlIAI6Rvfel/O9doOS7qpir9Sy5NPZdXTxmczXdk/pXgvtK7Zsc2z3uOfdnzes6e0p+f+9sC7mXSemd+b9mp6eH30PoX</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>25</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value>ACCOUNT_NOT_ACTIVE</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:F96E10E2ADE51B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>F96E10E2ADE51B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value>F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>F96E1CDF52629E12E0401F0A05997C52</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value>F96E1CDF52629E12E0401F0A05997C52</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value>urn:dece:rightstokenid:org:dece:F96E1CDF52629E12E0401F0A05997C52</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value>urn:dece:rightstokenid:org:dece:F96E1CDF52629E12E0401F0A05997C52</con:value></con:property><con:property><con:name>userIndex</con:name><con:value>4</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value>F96E4A99E3CF7EDCE0401F0A05994858</con:value></con:property><con:property><con:name>streamhandleFULL_null</con:name><con:value>urn:dece:streamhandleid:org:dece:F96E4A99E3CF7EDCE0401F0A05994858</con:value></con:property><con:property><con:name>streamhandle_null</con:name><con:value>F96E4A99E3CF7EDCE0401F0A05994858</con:value></con:property><con:property><con:name>expectNickname_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_null</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_null</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_null</con:name><con:value>2014/05/15 10:01:18</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value>urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRequestingUser_null</con:name><con:value>urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value>urn:dece:rightstokenid:org:dece:F96E1CDF52629E12E0401F0A05997C52</con:value></con:property><con:property><con:name>expectRightsToken_null</con:name><con:value>urn:dece:rightstokenid:org:dece:F96E1CDF52629E12E0401F0A05997C52</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value>4</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>portal</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_null</con:name><con:value>portal</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c886c03e-50e1-4add-b361-6d2a2d0a8984</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84920b96-448b-468f-9732-16c6de5a31aa</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2bf7a321-c7de-4330-98db-7a962504469a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b4575073-0636-4e9e-b124-ada3b56a200a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_79055 - StreamListView - PORTAL - AccountNotActive - ACCOUNT.STATUS of other status - 403 Forbidden" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="65fa9cee-caf1-4334-98cf-681fc3f63391"><con:description>This test case will verify proper response from the StreamCreate API when the supplied SAML assertion references a node account that is in deleted status</con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="af717472-7bbf-4c16-90f1-c79479e160b3"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
//tC.setPropertyValue("streamhandleFULL","urn:dece:streamhandleid:org:dece:973A15CDA87B7C93E0401F0A059969A1");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("loopuntil","25");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","ACCOUNT_NOT_ACTIVE");
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="2a6d3c22-65dd-4d6b-94d7-6d9e3b14b408"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="842064d9-b631-4878-95c8-1cde3f218d74" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="d382ee1d-b458-44bf-b370-49282cb36c76"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();



	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="75cd8ed7-65f1-4df7-9dc7-ef5e8b0b3eb2"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTAL" id="0f5680af-4d95-4597-b469-5ccde3348823"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Update ACCOUNT.STATUS to 'other'" id="f5f64370-8a02-478f-93c3-3d9d17374464"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"other") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="3a2973ef-5eb0-48c6-ad26-0da19874f481"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT.STATUS to 'active'" id="17ad80f4-a37d-48d7-9bcc-0959a9a93c50"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"active") == 1;</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>80340</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>portal</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>username</con:name><con:value>stream_list_view_20140910_053746</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value>urn:dece:streamhandleid:org:dece:02B3CDBA3D525171E05305991F0AFC08</con:value></con:property><con:property><con:name>accountoid</con:name><con:value>02B3CDD687B8516DE05305991F0ABB06</con:value></con:property><con:property><con:name>useroid</con:name><con:value>02B3ABFFA03405E4E05305991F0A8025</con:value></con:property><con:property><con:name>assertid</con:name><con:value/></con:property><con:property><con:name>assert</con:name><con:value>nVbZcuo4EP0Vyvcx5RWzuQJVBkLirBDIxsuUkGVQsCXHklny9SMZcDAhGe48udRunT696EjnDESh5biMoYRjSkqrKCTMyaxNJU2IQwHDzCEgQszh0Bm6d7eOpRkO2G1RSl63qfwzqQbArvl1FQU1W7VN21InwKqJpVGvNapmHRi2cGUsRR5hHBDeVCzDtFWjoZrGyGg45ZpTqWmVhj1WSs8oYQJbuGiGsiW1Yk1lxnns6PpyudSWZY0mU90yDFN/vbsdwhmKgNI632SUBUpaW3+o+QiiMIQapJF+rhd8zn3mDPGUAJ4maBvL/ymWoRsNXfj4DE//KPle5HskoNmyAwglGIIQfwJZnzvEZ9QvueGUJpjPoh+TMA0JrKIVVKFpkz+KXqR2IlCBYcKAymbA3GI9ogAliEBUenr0msqf07qWbR0lgLCAJhErLv+ODyILFNIY+SrbpbWldjrgkUq1zhF0PALDlOEFupfDGgOI2LabCJ4OVeonKMCrW8zEgK6YZKfv0ztYbqrRxVPE+P9p0F5zNiDPIExRq9dvjKPZ4O29staJPbp+GI4H86tB2H+DzYzAvnNmyFu7WR4MZT5Emx24PIj6/XvLnI5M4K0fz669qXt5rU+IGfbGN/NG/6Y9H7vPeHTfTuvzvrXS3U/4MqbJ+3hSaUzf8NV49PpwsYbV9U3a/XgNZ8urt6e4Xk7eVyxaB5fl1bV5/RKdLa7mT8tOO6676cenZeNB4Hbp2cMMzt4G/V6cXlqrmhfiMvUnNy8DRoceXcaN9BJ2q/3OFFn1Zp7OHv+ibXfmh+nkHUG+W8ox8LqlnugS4L+LmbRgXw0yVyeW4sM4IlxpyV1SO5xUyB32HdHDzdqw2mW33eu5RrlsVC7sC6Mivo2G2TPcumFVdiKzYXFAsUNJgGUsKbmbsfmdIIwchoiPEnVBU6F0TPkFsQs4KHnkURwCShgaUSHPpuGnSXUyrc/LPDCD9cSuflbtd98MlNI95Q/kIXEDjpKCKJtWQZQfEcQxRlK55WAzMdmMi2J8gEXKQ1NbAI2gVGh7ImXWsex6RWc4ikMkqeoR9dMQafEszkqjs83XUgFkmRUzGNOEgzA7EfqP+R3+25VC+PhYOjCZUhuJdqIjl4y9y+db3pWjl9EO3k19LA+YqCtPMNwwKf76Ghc5J/msfCW2Y55v+EsAyI5A6L/w0w9Lk0f0F3gv/u42F/eCUJLWrr8fQPvQ0sUizTpak4qZCHhdFks3LH2IYCq0bj2ic0T0HEU/6WLJiR8Ez+1FiimfkSEHHEViBEvZ8oSXxBAx+ZLwxOFZnfpMKYQUpeNoxY/ZOqF4BUnGvz6UoAOlnzD3xWdJE/+rY0ew9uKIPMVDgmMylSt5qax/GBBIBSwWckiTffBjAMeCF415kXMuXAzUJOXo5z8lqXNNBUBIU8K9rpIZ9rU348nXMXK+nL7BZPKev/fwfz/4VJyNAETilchwhi+vbUceATLd0+9t0EMJ73S71XqtXauY1e6+hLfbRjUvSoFd65v5u2WvTocz3voX</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>25</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value>ACCOUNT_NOT_ACTIVE</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:02B3CDD687B7516DE05305991F0ABB06</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>02B3CDD687B7516DE05305991F0ABB06</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:02B3ABFFA03305E4E05305991F0A8025</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>02B3ABFFA03305E4E05305991F0A8025</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>02B3CDD687BF516DE05305991F0ABB06</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value>02B3CDD687BF516DE05305991F0ABB06</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>02B3934FBC4D29B9E05305991F0A70EC</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value>02B3934FBC4D29B9E05305991F0A70EC</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value>urn:dece:rightstokenid:org:dece:02B3934FBC4D29B9E05305991F0A70EC</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value>urn:dece:rightstokenid:org:dece:02B3934FBC4D29B9E05305991F0A70EC</con:value></con:property><con:property><con:name>userIndex</con:name><con:value>5</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value>02B3CDBA3D525171E05305991F0AFC08</con:value></con:property><con:property><con:name>streamhandleFULL_null</con:name><con:value>urn:dece:streamhandleid:org:dece:02B3CDBA3D525171E05305991F0AFC08</con:value></con:property><con:property><con:name>streamhandle_null</con:name><con:value>02B3CDBA3D525171E05305991F0AFC08</con:value></con:property><con:property><con:name>expectNickname_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_null</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_null</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_null</con:name><con:value>2014/09/10 09:42:01</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value>urn:dece:userid:org:dece:02B3B4B57DB93333E05305991F0A804F</con:value></con:property><con:property><con:name>expectRequestingUser_null</con:name><con:value>urn:dece:userid:org:dece:02B3B4B57DB93333E05305991F0A804F</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value>urn:dece:rightstokenid:org:dece:02B3934FBC4D29B9E05305991F0A70EC</con:value></con:property><con:property><con:name>expectRightsToken_null</con:name><con:value>urn:dece:rightstokenid:org:dece:02B3934FBC4D29B9E05305991F0A70EC</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value>5</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>portal</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_null</con:name><con:value>portal</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c886c03e-50e1-4add-b361-6d2a2d0a8984</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84920b96-448b-468f-9732-16c6de5a31aa</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2bf7a321-c7de-4330-98db-7a962504469a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b4575073-0636-4e9e-b124-ada3b56a200a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_75123 - StreamListView - PORTAL - Verify stream order based on STREAM_DATA.CREATED_DATE - 200 OK" searchProperties="true" id="4a81cc38-5c1c-4e31-ad61-42acdebe3841"><con:description> This test case will verify the returned stream list will be order by the stream's STREAM_DATA.CREATED_DATE column; descending order.

1.      All Streams in the list bust be sorted by Stream_Data.created_date in descending order, that is recent one will be first in the returned list. </con:description><con:settings/><con:testStep type="groovy" name="Create Data for retailer,lasp and nonlasp" id="6dedfe67-5cca-4ee2-aa02-0ef6e0c461a4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTS = tP.getTestSuiteByName("E_2_E");

def runnerTC = myTS.run( null , false )

assert runnerTC.status == Status.FINISHED;

tP.setPropertyValue("StreamCreateCount","0");
tP.setPropertyValue("StreamDeleteCount","0");
tP.setPropertyValue("StreamDeleteList","");
tP.setPropertyValue("accountList","");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="6b27a748-4661-4d5d-83e1-83d706ada562"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","12");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish User Context" id="3cd9ea47-a190-488a-b5eb-9918a0db5920" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def uArray = tP.getPropertyValue("userPropertyNameArray").toString().split(",");

if (tC.getPropertyValue("userIndex") == null) {
	tC.setPropertyValue("userIndex","0")
}

int userIndex = tC.getPropertyValue("userIndex").toInteger();

String userPropName = uArray[userIndex];
String userName = tP.getPropertyValue(userPropName);

assert userName.length() > 0;

tC.setPropertyValue("username", userName);
tC.setPropertyValue("password","testing");
tC.setPropertyValue("userIndex",userIndex.toString());

log.info "userPropName[$userPropName] - userName[$userName]";




</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="1d48393c-2254-454d-bfbd-768176a9a9b8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Purge Account Stream Handles" id="813be453-15fa-4246-9e55-1150fccc3e1f" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {
	a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
	a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="9cb4c567-4da2-43fa-9005-ec820edfa33b"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="d152ea14-68ae-42b6-ad99-18cab0819a6b"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Random delay milliseconds" id="4538dce1-cf1d-45ae-9fb8-be38b29ec987"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

Random rand = new Random();

def v = rand.nextInt((10000-5000)+1)+5000;

tC.setPropertyValue("delay",v.toString());


</script></con:config></con:testStep><con:testStep type="delay" name="Delay I" id="7ffd045c-4c84-4b26-a344-c508c6be918f"><con:settings/><con:config><delay>${#TestCase#delay}</delay></con:config></con:testStep><con:testStep type="groovy" name="Increment loop counter &amp; save Stream Handle" id="4d37d04a-9df9-48ce-a940-3d2fbbec76c1"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();

def loopuntil = tC.getPropertyValue("loopuntil").toInteger();
def counter   = tC.getPropertyValue("counter").toInteger();

counter++;

if (counter &lt;= loopuntil) {
	tC.setPropertyValue("counter",counter.toString());
	testRunner.gotoStepByName("Call RightsTokenCreate");
} 





</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTAL" id="b7f4d0d3-a4d1-4b88-8eb1-527a0fa46877"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="2228d7e0-e280-4699-ad5a-aab74d8fef4b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="08999db8-9a31-419b-a238-26c64451913c" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="423fcbe7-573f-4973-881a-a80b1a4194d4" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150504_051533</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:8A79338B9C4B4A3ABB1156A86F8F7FC9</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1540EA15C4827A5AE05305991F0AA5A8</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1540FA93A67D7830E05307991F0A6998</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZrU+o6FP0rTP14pvRBeXWEmQqiKKgH0HP1ixPSlEbbpCZpQX/9SQpUiujl3hlmmOzurL32Iys55SCObNfjHDGBKams4ohwN7d2tJQRlwKOuUtAjLgroDv1xiPXrpou2G7RKsN+R3uew2Z77lhtHVktS3dsM9BBy2zpZtNp1Oe271iNpnTlPEVDwgUgoqPZplXXTflzZpblOo5br1Utp/WkVR4Q4xJbulRNbUNqxTtaKETiGsZyuawua1XKFoZtmpbxz3g0hSGKgdY9XWeUB2LdjT+s+giiKIJVSGPj1Cj5nPrcneIFASJlaBPL/y6WaZhtQ/r4HC9OtGIv8ockoPmyBwglGIIIfwBVnzESIfUrXrSgDIsw/jYJy1TAOlpBHVoOOdGMMrUjgUoMGQc6D4G1wZqgADFEIKrcT4Yd7eS4ruVbZwwQHlAW8/Lyv/FBJEMRTZCv821aG2rHAx6oVPcUQXdIYJRynKEbNawJgIhvuong8VCVO4YCvBphLgd0xRU7Y5fe3nJdjT5eIC7+T4N2mrMGeQBRirqMD27fw8ePt0W4sn1kB436OXvxrkzqdXICu865oWjterk3lMUQrXfgh2WAr9usdXmeXvXa00H25/pq0beibJa1R1Z2vhqf317+ekrTGo3avDZPR5d2Emeg9zCGNny8njR+44mBF+N2EoX2OawvV/z9dTxpfmTxw0XDw8lT/Ta+GY8uPuirFy7nbxe/Z5dLEs+cXyMv+OO93732nzKn3QvvG2ejFy984QG7Jy91FJz58f3jpUkbdWbLc1iks8O/bNue+Wk6f0FQbJdqDIb9ykB2CYifxUxZsK8HuaubKPHhAhGhddUupR1uKuUO+67s4Xpt1R2zZ9a8QaNl1axB79ys18xmu20NTM+Tf1uRWbPYo9ijJMAqlpLc9dj8TBDGLkfER0zPaCqVjms/IPaBAJUhmchDQAlHMyrl2Qpab6HfbKStaLWc80YSN9MFX+C6Vrmh4pbcMi8QiJU12Slp8gRBnGCkhFvNNZeDzYWsxRvIUhFZ1QxUCUqltDOlsq7ttOoGx3ESIcXUiKmfRqiahEleGYOv/20dQJ5b+yNvevfcmz7nB8L4Nr39b9tKSB8fKweuUjpDspvowB3jbPP5knfj4F20hfdSH6vzJcsqGIZrJuVPn9OixqQYlc/EtsyLDfuGErixn1cRz88wLMa+uLylpksV6G6b8was6ls1zbI074fj1Awm4Q1VEcO0jSmCqdSp9xl9RcQoUIyjLoWC+F7wwl6mmIqQTAUQKJbzU8mXR7wCpoirV8BQDv7q2CdGKaQsnUArccjWi+QLRjH+8ZEDXaj8pPlO/i0p8z87dgBrJ47MUz4CBCYLtVIXwvs34wGphMVSyijbBT8EcCh42VgUueAi5EDNU4G+/1JRGtXRAIQ0JWLY13LDrm7mPMV7gtxPpy8wuTQXbzX87481HecjAJF84XGc46sr11VHgCx2tHcT9LD8Ngc/yW+ZXfeL+atlp077M979Cw==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">12</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">12</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:1540C03AF68131FCE05307991F0AA991</con:value></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1540C03AF68131FCE05307991F0AA991</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1540C03AF67F31FCE05307991F0AA991</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1540EA15C4897A5AE05305991F0AA5A8</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:1540C03AF67F31FCE05307991F0AA991</con:value></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">15410F09915842AAE05307991F0A7730</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:15410F09915842AAE05307991F0A7730</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">8A79338B9C4B4A3ABB1156A86F8F7FC9</con:value></con:property><con:property><con:name>delay</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">6217</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:DCB0A245B37B420CA4CF8B716649949C</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:2118C9F5B6EE482B830684549EBD476A</con:value></con:property><con:property><con:name>rightstokenFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:814D9E9A794B49A79FF09D7CEFD25B7F</con:value></con:property><con:property><con:name>rightstokenFULL_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBStatus_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">11</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">11</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DCB0A245B37B420CA4CF8B716649949C</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/05/04 11:51:03</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:1540C03AF68131FCE05307991F0AA991</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:15410F09915842AAE05307991F0A7730</con:value></con:property><con:property><con:name>streamhandle_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2118C9F5B6EE482B830684549EBD476A</con:value></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/05/04 11:51:30</con:value></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:1540C03AF68131FCE05307991F0AA991</con:value></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:15410F09915842AAE05307991F0A7730</con:value></con:property><con:property><con:name>streamhandle_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">814D9E9A794B49A79FF09D7CEFD25B7F</con:value></con:property><con:property><con:name>expectDBCreatedTime_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/05/04 11:52:00</con:value></con:property><con:property><con:name>expectRequestingUser_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:1540C03AF68131FCE05307991F0AA991</con:value></con:property><con:property><con:name>expectRightsToken_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:15410F09915842AAE05307991F0A7730</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:1540C03AF68131FCE05307991F0AA991</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:15410F09915842AAE05307991F0A7730</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">15410F09915842AAE05307991F0A7730</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:15410F09915842AAE05307991F0A7730</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80292</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>1540EA15C4897A5AE05305991F0AA5A8</con:value></con:property><con:property><con:name>streamhandleFULL_4</con:name><con:value>urn:dece:streamhandleid:org:dece:8CF4327E7C614733A0364C280FDD4445</con:value></con:property><con:property><con:name>streamhandle_4</con:name><con:value>8CF4327E7C614733A0364C280FDD4445</con:value></con:property><con:property><con:name>expectNickname_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_4</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy_4</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_4</con:name><con:value>2015/05/04 11:52:28</con:value></con:property><con:property><con:name>expectRequestingUser_4</con:name><con:value>urn:dece:userid:org:dece:1540C03AF68131FCE05307991F0AA991</con:value></con:property><con:property><con:name>expectRightsToken_4</con:name><con:value>urn:dece:rightstokenid:org:dece:15410F09915842AAE05307991F0A7730</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_4</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>streamhandleFULL_5</con:name><con:value>urn:dece:streamhandleid:org:dece:D80ECFDD504243649FDAEF284AE158A6</con:value></con:property><con:property><con:name>streamhandle_5</con:name><con:value>D80ECFDD504243649FDAEF284AE158A6</con:value></con:property><con:property><con:name>expectNickname_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_5</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy_5</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_5</con:name><con:value>2015/05/04 11:52:55</con:value></con:property><con:property><con:name>expectRequestingUser_5</con:name><con:value>urn:dece:userid:org:dece:1540C03AF68131FCE05307991F0AA991</con:value></con:property><con:property><con:name>expectRightsToken_5</con:name><con:value>urn:dece:rightstokenid:org:dece:15410F09915842AAE05307991F0A7730</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_5</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>streamhandleFULL_6</con:name><con:value>urn:dece:streamhandleid:org:dece:BF9B8B1365B14EFE9379303F287E6CA2</con:value></con:property><con:property><con:name>streamhandle_6</con:name><con:value>BF9B8B1365B14EFE9379303F287E6CA2</con:value></con:property><con:property><con:name>expectNickname_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_6</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy_6</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_6</con:name><con:value>2015/05/04 11:53:24</con:value></con:property><con:property><con:name>expectRequestingUser_6</con:name><con:value>urn:dece:userid:org:dece:1540C03AF68131FCE05307991F0AA991</con:value></con:property><con:property><con:name>expectRightsToken_6</con:name><con:value>urn:dece:rightstokenid:org:dece:15410F09915842AAE05307991F0A7730</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_6</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>streamhandleFULL_7</con:name><con:value>urn:dece:streamhandleid:org:dece:8D22F48DB03B46AD913EDB11FB5A558E</con:value></con:property><con:property><con:name>streamhandle_7</con:name><con:value>8D22F48DB03B46AD913EDB11FB5A558E</con:value></con:property><con:property><con:name>expectNickname_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_7</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy_7</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_7</con:name><con:value>2015/05/04 11:53:54</con:value></con:property><con:property><con:name>expectRequestingUser_7</con:name><con:value>urn:dece:userid:org:dece:1540C03AF68131FCE05307991F0AA991</con:value></con:property><con:property><con:name>expectRightsToken_7</con:name><con:value>urn:dece:rightstokenid:org:dece:15410F09915842AAE05307991F0A7730</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_7</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>streamhandleFULL_8</con:name><con:value>urn:dece:streamhandleid:org:dece:DB75672A61E44DEA84287825C53485D3</con:value></con:property><con:property><con:name>streamhandle_8</con:name><con:value>DB75672A61E44DEA84287825C53485D3</con:value></con:property><con:property><con:name>expectNickname_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_8</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy_8</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_8</con:name><con:value>2015/05/04 11:54:24</con:value></con:property><con:property><con:name>expectRequestingUser_8</con:name><con:value>urn:dece:userid:org:dece:1540C03AF68131FCE05307991F0AA991</con:value></con:property><con:property><con:name>expectRightsToken_8</con:name><con:value>urn:dece:rightstokenid:org:dece:15410F09915842AAE05307991F0A7730</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_8</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>streamhandleFULL_9</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:9CBA9A9A41CB49549C59764C64E65AF0</con:value></con:property><con:property><con:name>streamhandle_9</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9CBA9A9A41CB49549C59764C64E65AF0</con:value></con:property><con:property><con:name>expectNickname_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_9</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy_9</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_9</con:name><con:value>2015/05/04 11:54:56</con:value></con:property><con:property><con:name>expectRequestingUser_9</con:name><con:value>urn:dece:userid:org:dece:1540C03AF68131FCE05307991F0AA991</con:value></con:property><con:property><con:name>expectRightsToken_9</con:name><con:value>urn:dece:rightstokenid:org:dece:15410F09915842AAE05307991F0A7730</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_9</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>streamhandleFULL_10</con:name><con:value>urn:dece:streamhandleid:org:dece:F0E59E449D7B489EB3178E20CC6E949A</con:value></con:property><con:property><con:name>streamhandle_10</con:name><con:value>F0E59E449D7B489EB3178E20CC6E949A</con:value></con:property><con:property><con:name>expectNickname_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_10</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy_10</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_10</con:name><con:value>2015/05/04 11:55:20</con:value></con:property><con:property><con:name>expectRequestingUser_10</con:name><con:value>urn:dece:userid:org:dece:1540C03AF68131FCE05307991F0AA991</con:value></con:property><con:property><con:name>expectRightsToken_10</con:name><con:value>urn:dece:rightstokenid:org:dece:15410F09915842AAE05307991F0A7730</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_10</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>streamhandleFULL_11</con:name><con:value>urn:dece:streamhandleid:org:dece:8A79338B9C4B4A3ABB1156A86F8F7FC9</con:value></con:property><con:property><con:name>streamhandle_11</con:name><con:value>8A79338B9C4B4A3ABB1156A86F8F7FC9</con:value></con:property><con:property><con:name>expectNickname_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_11</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy_11</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_11</con:name><con:value>2015/05/04 11:55:48</con:value></con:property><con:property><con:name>expectRequestingUser_11</con:name><con:value>urn:dece:userid:org:dece:1540C03AF68131FCE05307991F0AA991</con:value></con:property><con:property><con:name>expectRightsToken_11</con:name><con:value>urn:dece:rightstokenid:org:dece:15410F09915842AAE05307991F0A7730</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_11</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>streamhandleFULL_12</con:name><con:value>urn:dece:streamhandleid:org:dece:8F33C65E87A648308724737A0E172639</con:value></con:property><con:property><con:name>streamhandle_12</con:name><con:value>8F33C65E87A648308724737A0E172639</con:value></con:property><con:property><con:name>expectNickname_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_12</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy_12</con:name><con:value>DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBCreatedTime_12</con:name><con:value>2015/04/30 14:20:47</con:value></con:property><con:property><con:name>expectRequestingUser_12</con:name><con:value>urn:dece:userid:org:dece:14F27BD3833A3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>expectRightsToken_12</con:name><con:value>urn:dece:rightstokenid:org:dece:14F27BD498A93DE8E05305991F0AC941</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_12</con:name><con:value>dlpcs</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>6dedfe67-5cca-4ee2-aa02-0ef6e0c461a4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_75128 - StreamListView - PORTAL - Active stream associated with RightsToken with RENTAL_ABSOLUTE_EXPIRATION expired - 200 OK_FLAKY" searchProperties="true" id="139728b1-9fa6-4fcd-babe-7f9e6a55f2cc" disabled="true"><con:description> This test case will verify that an active stream associated with a RightsToken that has expired is returned. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="13f2684a-81fd-4658-8d48-b23de25a49f2"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="ae47c285-ae40-4d6b-a067-03311ba2f6ae"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="7ce2abc5-4bdb-45df-a2fa-3efbee448e84" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="fbed2bd4-e58c-4e8f-96da-1617944da179"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="121fe246-77d2-4fbf-9ac5-8ea829283ba8"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Expire the RightsToken" id="163673a9-d1c3-43af-96c1-d2940317ad80"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def rt = tC.getPropertyValue("rightstokenid");

a = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

assert a.rightsTokenExpireHours(rt,1) == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTAL" id="37fc4a0a-a98f-4f8b-b925-b97c20d824bf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="b4024ccc-beb9-4fab-bdd0-c8f1fd5a873d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="5e7effbd-d4e7-48c2-a96d-dc387c93a627" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="21a91317-8259-4bbb-8b63-dfc9b1f91e70" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="1b1de29c-11c5-4961-8a4c-382221ed60b2" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportal1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140515_05444</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:F96E09BA07C272ACE0401F0A07995A94</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F42CF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E10E2ADE61B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbbuo4FH3vV0Tp4whyadKQqCDRAjrM4UAP9P4yMvYGXBInjR1IztePHRoKlHbakVCQd7bXXvuSZV9wFIV20OYcUkFjpvU7Tf0f4pyRhglebTaVD8f2cK1B5MPzp9bUxO4ZxqBrfc4z6DMuEBNN3TYtp2a6Ncu9Mf3AcQLLqVu286Rrd5ByCS1d6qau5VHIeFCGbepZyoIYccoDhiLggcDBpP1rEEjPAFWc9NbFhmUZMG0thEgCw8B1AhjCENdxHBkXxp7PBeHBhM4ZElkKrzEJb+qve9frdX19Vo/TuWGbpmmYviF9CKfzU711Um0G0mezeLO+QixmFKOQ/kGK1C8Qi5ho7XAep1Qsog+gLcMyFXQNclzDlsNOdeMtQMnui0h7JFOOanyBrApsDDNIgWHQbsf9pn76tQ5u9t6kiPFZnEb8YP09SsBWEMYJkBqvMqvYfR3xSLlaF4CDPsNhxukKhmpMEoSBa9cpzGg+oFwOH+Fa2X4t5/JHqykD/J22XBi7XCV140h1OnQOXPyfnu32a4Nyh8IMWo64XBqjhsF/G+vC83NiPw26hHsTt90sKew6b0ht2/26PhzW7Wy9bnpg5G7kDR6fnq6c5xD5ayfu/xxin4yLxTxxR2H048Gcrvqzq+mN8PHP578KAbPGKExmcD25Q2nj59Dx1y/u/ePdyeTG+23a0f38Kvk7S7qrfIV+LN31o7dAPTLtIiO/vbW8YmnNsqUXp0WvsIe96w4bjadOMRj+uTxH2fqeh23MeieFjDimtz36MrpbDobRS+E033LazWHfWEnCJJs+AxbVUo1Hv6P1ZL+Q+FxelIWS2qx0DRKlUVwAE3pL7VLSEmRSgCgJZDM3655/3rXMrt3udF3rstHumo5p9cy26fm+2760Kw3asDigeBWzGVWxlMpu5udzgjgKODACaW0VZ3gBXP8EsYME0vpsLD+OmHG4iaWK+3zh5g6Z+i7JScbO7MXSR8Uz1rVhLEZslLZnAtI95bbsPeUeA6YJBSXvar65HHAuZCle0CoToVVfoTqDTB4AqdLgwHYarsFplISgiBpRTLIQ6skiKQtj8M2/XUOYl1bKcRKnAoVW+fl9mN3hu6oQ0odQ5cBVSpcgmwlHTiKzyudd3u7RE6uCb2eEqq9MVlWkFG+Y7L96GxY1JdtJeUusYr7d8E0AzI9AGJ/wMw5Ls41IVnQnfnW6ygNDykmr6u8Lqr/Us9UqKzvqKalMJbwhFdMyJoAzqXfFTbwEZmwhjC8dN1vWB5G39n1+mViwiUACIjl/Wrn8wl1jAlzdNfryu8m/epHZCynrJiAXx2xXobySKMaf3lpwgJWfNF/Lv3Wckrd2HcHaiSPzlBcMQdlcrdTBUnwwHTiWsFQqYZzugh8DOBZ837gt8paLkNM0zQR8/EZTEtfUEcZxxkS/o5eGXdkteYoigeDN6R1MKe2vZ3XOPzyrH34NJlIAI6Rvfel/O9doOS7qpir9Sy5NPZdXTxmczXdk/pXgvtK7Zsc2z3uOfdnzes6e0p+f+9sC7mXSemd+b9mp6eH30PoX</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E10E2ADE51B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E10E2ADE51B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E0BF28BD92AFFE0401F0A079973EA</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E0BF28BD92AFFE0401F0A079973EA</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E09BA07C272ACE0401F0A07995A94</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:F96E09BA07C272ACE0401F0A07995A94</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E09BA07C272ACE0401F0A07995A94</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/05/15 09:48:26</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E0BF28BD92AFFE0401F0A079973EA</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E0BF28BD92AFFE0401F0A079973EA</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E0BF28BD92AFFE0401F0A079973EA</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E0BF28BD92AFFE0401F0A079973EA</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80297</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>F950D206F433F7F4E0401F0A07995669</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_75127 - StreamListView - PORTAL - Active stream associated with RIGHTS_TOKEN.STATUS_ID of other is displayed - 200 OK_FLAKY" searchProperties="true" id="fbb156d3-c2d6-4a17-89d0-8e80864a9726" disabled="true"><con:description> This test case will verify that an active stream associated with a RightsToken that has a status of other will still be returned. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="88c93b95-bc62-49d7-8467-e891c2a0e119"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="0fde9fd4-146f-430b-aa69-f5c7eaef6546"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="6f5538c8-40b9-4ac7-8b74-2e1c7d4a17cf" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="85f2c941-9caf-4f46-8b17-d6bf98722eba"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="6dffbb6f-500a-4b10-a349-df2f290091ff"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Set RIGHTS_TOKEN.STATUS to 'other'" id="f31325b5-360a-4f2a-b6bb-450c8392a409"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def rt = tC.getPropertyValue("rightstokenid");

a = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

assert a.rightsTokenSetStatusOther(rt) == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTAL" id="d1f6b1e8-c007-4093-b669-19bf2ddf8f95"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="e5faa18e-8c66-40ad-89e9-b53dd1a3bb52"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="89e96c78-4862-4ee5-9b80-d12adb483e0b" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="4953af60-a10e-4cd5-ba70-d8fce816c19b" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="dd6e4e4b-bbd9-4e5b-8a29-008deb332eea" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportal1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140515_05444</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:F96E09BA07C072ACE0401F0A07995A94</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F42CF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E10E2ADE61B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbbuo4FH3vV0Tp4whyadKQqCDRAjrM4UAP9P4yMvYGXBInjR1IztePHRoKlHbakVCQd7bXXvuSZV9wFIV20OYcUkFjpvU7Tf0f4pyRhglebTaVD8f2cK1B5MPzp9bUxO4ZxqBrfc4z6DMuEBNN3TYtp2a6Ncu9Mf3AcQLLqVu286Rrd5ByCS1d6qau5VHIeFCGbepZyoIYccoDhiLggcDBpP1rEEjPAFWc9NbFhmUZMG0thEgCw8B1AhjCENdxHBkXxp7PBeHBhM4ZElkKrzEJb+qve9frdX19Vo/TuWGbpmmYviF9CKfzU711Um0G0mezeLO+QixmFKOQ/kGK1C8Qi5ho7XAep1Qsog+gLcMyFXQNclzDlsNOdeMtQMnui0h7JFOOanyBrApsDDNIgWHQbsf9pn76tQ5u9t6kiPFZnEb8YP09SsBWEMYJkBqvMqvYfR3xSLlaF4CDPsNhxukKhmpMEoSBa9cpzGg+oFwOH+Fa2X4t5/JHqykD/J22XBi7XCV140h1OnQOXPyfnu32a4Nyh8IMWo64XBqjhsF/G+vC83NiPw26hHsTt90sKew6b0ht2/26PhzW7Wy9bnpg5G7kDR6fnq6c5xD5ayfu/xxin4yLxTxxR2H048Gcrvqzq+mN8PHP578KAbPGKExmcD25Q2nj59Dx1y/u/ePdyeTG+23a0f38Kvk7S7qrfIV+LN31o7dAPTLtIiO/vbW8YmnNsqUXp0WvsIe96w4bjadOMRj+uTxH2fqeh23MeieFjDimtz36MrpbDobRS+E033LazWHfWEnCJJs+AxbVUo1Hv6P1ZL+Q+FxelIWS2qx0DRKlUVwAE3pL7VLSEmRSgCgJZDM3655/3rXMrt3udF3rstHumo5p9cy26fm+2760Kw3asDigeBWzGVWxlMpu5udzgjgKODACaW0VZ3gBXP8EsYME0vpsLD+OmHG4iaWK+3zh5g6Z+i7JScbO7MXSR8Uz1rVhLEZslLZnAtI95bbsPeUeA6YJBSXvar65HHAuZCle0CoToVVfoTqDTB4AqdLgwHYarsFplISgiBpRTLIQ6skiKQtj8M2/XUOYl1bKcRKnAoVW+fl9mN3hu6oQ0odQ5cBVSpcgmwlHTiKzyudd3u7RE6uCb2eEqq9MVlWkFG+Y7L96GxY1JdtJeUusYr7d8E0AzI9AGJ/wMw5Ls41IVnQnfnW6ygNDykmr6u8Lqr/Us9UqKzvqKalMJbwhFdMyJoAzqXfFTbwEZmwhjC8dN1vWB5G39n1+mViwiUACIjl/Wrn8wl1jAlzdNfryu8m/epHZCynrJiAXx2xXobySKMaf3lpwgJWfNF/Lv3Wckrd2HcHaiSPzlBcMQdlcrdTBUnwwHTiWsFQqYZzugh8DOBZ837gt8paLkNM0zQR8/EZTEtfUEcZxxkS/o5eGXdkteYoigeDN6R1MKe2vZ3XOPzyrH34NJlIAI6Rvfel/O9doOS7qpir9Sy5NPZdXTxmczXdk/pXgvtK7Zsc2z3uOfdnzes6e0p+f+9sC7mXSemd+b9mp6eH30PoX</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E10E2ADE51B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E10E2ADE51B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E0990D347A2AAE0401F0A07995AA0</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E0990D347A2AAE0401F0A07995AA0</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E09BA07C072ACE0401F0A07995A94</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:F96E09BA07C072ACE0401F0A07995A94</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E09BA07C072ACE0401F0A07995A94</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/05/15 09:48:19</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E0990D347A2AAE0401F0A07995AA0</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E0990D347A2AAE0401F0A07995AA0</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E0990D347A2AAE0401F0A07995AA0</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E0990D347A2AAE0401F0A07995AA0</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80296</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>F950D206F433F7F4E0401F0A07995669</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_75126 - StreamListView - PORTAL - Active stream associated with RIGHTS_TOKEN.STATUS_ID of suspended is displayed - 200 OK_FLAKY" searchProperties="true" id="3d1f4d83-58cb-4e0f-b5eb-56dc31def7b2" disabled="true"><con:description> This test case will verify that an active stream associated with a RightsToken that has a status of suspended will still be returned. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="22a785ac-8b8d-43d4-84cc-f4270c64a343"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="ee3e367a-9605-41cb-9def-06c5636595a3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="adf1637c-7d59-45aa-b285-6cb336c3c063" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="05bef75b-f714-43fc-ac1d-9dc396cda543"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="3f96ef56-a1cc-46bd-9d4e-5a2b82dfe4ba"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Set RIGHTS_TOKEN.STATUS to 'suspended'" id="32592a8f-11bb-4301-838c-3e2a77075330"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def rt = tC.getPropertyValue("rightstokenid");

a = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

assert a.rightsTokenSetStatusSuspended(rt) == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTAL" id="26ebf4e7-6522-4ae2-98b4-2cd643a2bd88"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="54dcde80-a4e8-4029-abaa-35d1a59ad91c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="ec83ceb5-f68b-44a5-9497-2e77913eb275" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="188a209d-c355-4f30-bdb5-c32e1b4d904a" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="8f8e6e7a-d917-450a-9d11-4253a27f7fc8" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportal1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140515_05444</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:F96E09BA07BE72ACE0401F0A07995A94</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F42CF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E10E2ADE61B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbbuo4FH3vV0Tp4whyadKQqCDRAjrM4UAP9P4yMvYGXBInjR1IztePHRoKlHbakVCQd7bXXvuSZV9wFIV20OYcUkFjpvU7Tf0f4pyRhglebTaVD8f2cK1B5MPzp9bUxO4ZxqBrfc4z6DMuEBNN3TYtp2a6Ncu9Mf3AcQLLqVu286Rrd5ByCS1d6qau5VHIeFCGbepZyoIYccoDhiLggcDBpP1rEEjPAFWc9NbFhmUZMG0thEgCw8B1AhjCENdxHBkXxp7PBeHBhM4ZElkKrzEJb+qve9frdX19Vo/TuWGbpmmYviF9CKfzU711Um0G0mezeLO+QixmFKOQ/kGK1C8Qi5ho7XAep1Qsog+gLcMyFXQNclzDlsNOdeMtQMnui0h7JFOOanyBrApsDDNIgWHQbsf9pn76tQ5u9t6kiPFZnEb8YP09SsBWEMYJkBqvMqvYfR3xSLlaF4CDPsNhxukKhmpMEoSBa9cpzGg+oFwOH+Fa2X4t5/JHqykD/J22XBi7XCV140h1OnQOXPyfnu32a4Nyh8IMWo64XBqjhsF/G+vC83NiPw26hHsTt90sKew6b0ht2/26PhzW7Wy9bnpg5G7kDR6fnq6c5xD5ayfu/xxin4yLxTxxR2H048Gcrvqzq+mN8PHP578KAbPGKExmcD25Q2nj59Dx1y/u/ePdyeTG+23a0f38Kvk7S7qrfIV+LN31o7dAPTLtIiO/vbW8YmnNsqUXp0WvsIe96w4bjadOMRj+uTxH2fqeh23MeieFjDimtz36MrpbDobRS+E033LazWHfWEnCJJs+AxbVUo1Hv6P1ZL+Q+FxelIWS2qx0DRKlUVwAE3pL7VLSEmRSgCgJZDM3655/3rXMrt3udF3rstHumo5p9cy26fm+2760Kw3asDigeBWzGVWxlMpu5udzgjgKODACaW0VZ3gBXP8EsYME0vpsLD+OmHG4iaWK+3zh5g6Z+i7JScbO7MXSR8Uz1rVhLEZslLZnAtI95bbsPeUeA6YJBSXvar65HHAuZCle0CoToVVfoTqDTB4AqdLgwHYarsFplISgiBpRTLIQ6skiKQtj8M2/XUOYl1bKcRKnAoVW+fl9mN3hu6oQ0odQ5cBVSpcgmwlHTiKzyudd3u7RE6uCb2eEqq9MVlWkFG+Y7L96GxY1JdtJeUusYr7d8E0AzI9AGJ/wMw5Ls41IVnQnfnW6ygNDykmr6u8Lqr/Us9UqKzvqKalMJbwhFdMyJoAzqXfFTbwEZmwhjC8dN1vWB5G39n1+mViwiUACIjl/Wrn8wl1jAlzdNfryu8m/epHZCynrJiAXx2xXobySKMaf3lpwgJWfNF/Lv3Wckrd2HcHaiSPzlBcMQdlcrdTBUnwwHTiWsFQqYZzugh8DOBZ837gt8paLkNM0zQR8/EZTEtfUEcZxxkS/o5eGXdkteYoigeDN6R1MKe2vZ3XOPzyrH34NJlIAI6Rvfel/O9doOS7qpir9Sy5NPZdXTxmczXdk/pXgvtK7Zsc2z3uOfdnzes6e0p+f+9sC7mXSemd+b9mp6eH30PoX</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E10E2ADE51B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E10E2ADE51B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E0990D33CA2AAE0401F0A07995AA0</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E0990D33CA2AAE0401F0A07995AA0</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E09BA07BE72ACE0401F0A07995A94</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:F96E09BA07BE72ACE0401F0A07995A94</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E09BA07BE72ACE0401F0A07995A94</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/05/15 09:48:11</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E0990D33CA2AAE0401F0A07995AA0</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E0990D33CA2AAE0401F0A07995AA0</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E0990D33CA2AAE0401F0A07995AA0</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E0990D33CA2AAE0401F0A07995AA0</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80295</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>F950D206F433F7F4E0401F0A07995669</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_79056 - StreamListView - PORTAL - AccountNotActive - ACCOUNT.STATUS of blocked:tou status - 403 Forbidden" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="b460042f-6038-41df-8923-cf0f5320933c" disabled="true"><con:description>This test case will verify proper response from the StreamCreate API when the supplied SAML assertion references a node account that is in deleted status</con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="fa7932bd-046d-4596-ab0a-e570eec8d7d3"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
//tC.setPropertyValue("streamhandleFULL","urn:dece:streamhandleid:org:dece:973A15CDA87B7C93E0401F0A059969A1");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("loopuntil","25");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","ACCOUNT_NOT_ACTIVE");
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="bc1d9b28-833f-4e2c-a9b1-ab1c19ba3947"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="c0d4ac9e-387d-4e4e-88e7-f3fb6e70939a" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="97541d4f-772e-4e05-88f9-2642cb65b6a7"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();



	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="ae225420-c761-491a-93e6-43324602e7fe"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTAL" id="d42a74a4-fa56-41a8-8db8-07dd0e782120"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Update ACCOUNT.STATUS to 'blocked:tou'" id="705ce210-7477-436d-b490-91e4163154b1"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"blocked:tou") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="dbdf3286-1e00-4ad4-997a-9c569c0c9ed1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT.STATUS to 'active'" id="ecde4d98-0ca9-4ce5-ab62-2980f58dcb52"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"active") == 1;</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>80340</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>portal</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>username</con:name><con:value>stream_list_view_20140515_05444</con:value></con:property><con:property><con:name>password</con:name><con:value/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value>urn:dece:streamhandleid:org:dece:F96E164BE65895D2E0401F0A05997C44</con:value></con:property><con:property><con:name>accountoid</con:name><con:value>F950D206F42CF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>useroid</con:name><con:value>F96E10E2ADE61B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>assertid</con:name><con:value/></con:property><con:property><con:name>assert</con:name><con:value>nVbbbuo4FH3vV0Tp4whyadKQqCDRAjrM4UAP9P4yMvYGXBInjR1IztePHRoKlHbakVCQd7bXXvuSZV9wFIV20OYcUkFjpvU7Tf0f4pyRhglebTaVD8f2cK1B5MPzp9bUxO4ZxqBrfc4z6DMuEBNN3TYtp2a6Ncu9Mf3AcQLLqVu286Rrd5ByCS1d6qau5VHIeFCGbepZyoIYccoDhiLggcDBpP1rEEjPAFWc9NbFhmUZMG0thEgCw8B1AhjCENdxHBkXxp7PBeHBhM4ZElkKrzEJb+qve9frdX19Vo/TuWGbpmmYviF9CKfzU711Um0G0mezeLO+QixmFKOQ/kGK1C8Qi5ho7XAep1Qsog+gLcMyFXQNclzDlsNOdeMtQMnui0h7JFOOanyBrApsDDNIgWHQbsf9pn76tQ5u9t6kiPFZnEb8YP09SsBWEMYJkBqvMqvYfR3xSLlaF4CDPsNhxukKhmpMEoSBa9cpzGg+oFwOH+Fa2X4t5/JHqykD/J22XBi7XCV140h1OnQOXPyfnu32a4Nyh8IMWo64XBqjhsF/G+vC83NiPw26hHsTt90sKew6b0ht2/26PhzW7Wy9bnpg5G7kDR6fnq6c5xD5ayfu/xxin4yLxTxxR2H048Gcrvqzq+mN8PHP578KAbPGKExmcD25Q2nj59Dx1y/u/ePdyeTG+23a0f38Kvk7S7qrfIV+LN31o7dAPTLtIiO/vbW8YmnNsqUXp0WvsIe96w4bjadOMRj+uTxH2fqeh23MeieFjDimtz36MrpbDobRS+E033LazWHfWEnCJJs+AxbVUo1Hv6P1ZL+Q+FxelIWS2qx0DRKlUVwAE3pL7VLSEmRSgCgJZDM3655/3rXMrt3udF3rstHumo5p9cy26fm+2760Kw3asDigeBWzGVWxlMpu5udzgjgKODACaW0VZ3gBXP8EsYME0vpsLD+OmHG4iaWK+3zh5g6Z+i7JScbO7MXSR8Uz1rVhLEZslLZnAtI95bbsPeUeA6YJBSXvar65HHAuZCle0CoToVVfoTqDTB4AqdLgwHYarsFplISgiBpRTLIQ6skiKQtj8M2/XUOYl1bKcRKnAoVW+fl9mN3hu6oQ0odQ5cBVSpcgmwlHTiKzyudd3u7RE6uCb2eEqq9MVlWkFG+Y7L96GxY1JdtJeUusYr7d8E0AzI9AGJ/wMw5Ls41IVnQnfnW6ygNDykmr6u8Lqr/Us9UqKzvqKalMJbwhFdMyJoAzqXfFTbwEZmwhjC8dN1vWB5G39n1+mViwiUACIjl/Wrn8wl1jAlzdNfryu8m/epHZCynrJiAXx2xXobySKMaf3lpwgJWfNF/Lv3Wckrd2HcHaiSPzlBcMQdlcrdTBUnwwHTiWsFQqYZzugh8DOBZ837gt8paLkNM0zQR8/EZTEtfUEcZxxkS/o5eGXdkteYoigeDN6R1MKe2vZ3XOPzyrH34NJlIAI6Rvfel/O9doOS7qpir9Sy5NPZdXTxmczXdk/pXgvtK7Zsc2z3uOfdnzes6e0p+f+9sC7mXSemd+b9mp6eH30PoX</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>25</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value>ACCOUNT_NOT_ACTIVE</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:F96E10E2ADE51B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>F96E10E2ADE51B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value>F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>F96E0992019FF920E0401F0A07995AAA</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value>F96E0992019FF920E0401F0A07995AAA</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value>urn:dece:rightstokenid:org:dece:F96E0992019FF920E0401F0A07995AAA</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value>urn:dece:rightstokenid:org:dece:F96E0992019FF920E0401F0A07995AAA</con:value></con:property><con:property><con:name>userIndex</con:name><con:value>4</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value>F96E164BE65895D2E0401F0A05997C44</con:value></con:property><con:property><con:name>streamhandleFULL_null</con:name><con:value>urn:dece:streamhandleid:org:dece:F96E164BE65895D2E0401F0A05997C44</con:value></con:property><con:property><con:name>streamhandle_null</con:name><con:value>F96E164BE65895D2E0401F0A05997C44</con:value></con:property><con:property><con:name>expectNickname_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_null</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_null</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_null</con:name><con:value>2014/05/15 10:01:37</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value>urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRequestingUser_null</con:name><con:value>urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value>urn:dece:rightstokenid:org:dece:F96E0992019FF920E0401F0A07995AAA</con:value></con:property><con:property><con:name>expectRightsToken_null</con:name><con:value>urn:dece:rightstokenid:org:dece:F96E0992019FF920E0401F0A07995AAA</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value>4</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>portal</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_null</con:name><con:value>portal</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c886c03e-50e1-4add-b361-6d2a2d0a8984</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84920b96-448b-468f-9732-16c6de5a31aa</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2bf7a321-c7de-4330-98db-7a962504469a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b4575073-0636-4e9e-b124-ada3b56a200a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_75125 - StreamListView - PORTAL - Active stream associated with RIGHTS_TOKEN.STATUS_ID of pending is displayed - 200 OK_FLAKY" searchProperties="true" id="d64ee390-68ec-4c44-ab6a-3bdf89f01a9f" disabled="true"><con:description> This test case will verify that an active stream associated with a RightsToken that has a status of pending will still be returned. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="c54859b6-404f-471e-8f11-e50edcdef6f9"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="1fdbee8e-06c2-4224-bf43-0b67bf721700"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="ea75a7a3-ee8a-48d0-951b-ed7a04ab6a50" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="6df5c7e9-ac3d-4bc5-a621-ddf9f9d6d405"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="5b3680b2-9f39-40fc-807e-2f8ac9803c97"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Set RIGHTS_TOKEN.STATUS to 'pending'" id="6302a881-eb90-4354-b33b-f0da5269e487"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def rt = tC.getPropertyValue("rightstokenid");

a = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

assert a.rightsTokenSetStatusPending(rt) == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTAL" id="b3834b4b-b6fc-4c2a-90e7-7163984415b2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="cf6b7099-00e1-45a7-b712-d2741e926734"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="b7d7a969-3fb7-4b8d-907a-3c22ade17b49" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="14523257-21c0-48cc-ab96-bfd2647a876d" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="80aef57f-4ec4-41bb-a9d1-f5e2c2f524ff" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportal1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140910_053746</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:02B3CD8F9DD85169E05305991F0A27D2</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02B3CDD687B8516DE05305991F0ABB06</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02B3ABFFA03405E4E05305991F0A8025</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbZcuo4EP0Vyvcx5RWzuQJVBkLirBDIxsuUkGVQsCXHklny9SMZcDAhGe48udRunT696EjnDESh5biMoYRjSkqrKCTMyaxNJU2IQwHDzCEgQszh0Bm6d7eOpRkO2G1RSl63qfwzqQbArvl1FQU1W7VN21InwKqJpVGvNapmHRi2cGUsRR5hHBDeVCzDtFWjoZrGyGg45ZpTqWmVhj1WSs8oYQJbuGiGsiW1Yk1lxnns6PpyudSWZY0mU90yDFN/vbsdwhmKgNI632SUBUpaW3+o+QiiMIQapJF+rhd8zn3mDPGUAJ4maBvL/ymWoRsNXfj4DE//KPle5HskoNmyAwglGIIQfwJZnzvEZ9QvueGUJpjPoh+TMA0JrKIVVKFpkz+KXqR2IlCBYcKAymbA3GI9ogAliEBUenr0msqf07qWbR0lgLCAJhErLv+ODyILFNIY+SrbpbWldjrgkUq1zhF0PALDlOEFupfDGgOI2LabCJ4OVeonKMCrW8zEgK6YZKfv0ztYbqrRxVPE+P9p0F5zNiDPIExRq9dvjKPZ4O29staJPbp+GI4H86tB2H+DzYzAvnNmyFu7WR4MZT5Emx24PIj6/XvLnI5M4K0fz669qXt5rU+IGfbGN/NG/6Y9H7vPeHTfTuvzvrXS3U/4MqbJ+3hSaUzf8NV49PpwsYbV9U3a/XgNZ8urt6e4Xk7eVyxaB5fl1bV5/RKdLa7mT8tOO6676cenZeNB4Hbp2cMMzt4G/V6cXlqrmhfiMvUnNy8DRoceXcaN9BJ2q/3OFFn1Zp7OHv+ibXfmh+nkHUG+W8ox8LqlnugS4L+LmbRgXw0yVyeW4sM4IlxpyV1SO5xUyB32HdHDzdqw2mW33eu5RrlsVC7sC6Mivo2G2TPcumFVdiKzYXFAsUNJgGUsKbmbsfmdIIwchoiPEnVBU6F0TPkFsQs4KHnkURwCShgaUSHPpuGnSXUyrc/LPDCD9cSuflbtd98MlNI95Q/kIXEDjpKCKJtWQZQfEcQxRlK55WAzMdmMi2J8gEXKQ1NbAI2gVGh7ImXWsex6RWc4ikMkqeoR9dMQafEszkqjs83XUgFkmRUzGNOEgzA7EfqP+R3+25VC+PhYOjCZUhuJdqIjl4y9y+db3pWjl9EO3k19LA+YqCtPMNwwKf76Ghc5J/msfCW2Y55v+EsAyI5A6L/w0w9Lk0f0F3gv/u42F/eCUJLWrr8fQPvQ0sUizTpak4qZCHhdFks3LH2IYCq0bj2ic0T0HEU/6WLJiR8Ez+1FiimfkSEHHEViBEvZ8oSXxBAx+ZLwxOFZnfpMKYQUpeNoxY/ZOqF4BUnGvz6UoAOlnzD3xWdJE/+rY0ew9uKIPMVDgmMylSt5qax/GBBIBSwWckiTffBjAMeCF415kXMuXAzUJOXo5z8lqXNNBUBIU8K9rpIZ9rU348nXMXK+nL7BZPKev/fwfz/4VJyNAETilchwhi+vbUceATLd0+9t0EMJ73S71XqtXauY1e6+hLfbRjUvSoFd65v5u2WvTocz3voX</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:02B3ABFFA03305E4E05305991F0A8025</con:value></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02B3ABFFA03305E4E05305991F0A8025</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02B3CDD687B7516DE05305991F0ABB06</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02B3CDD687BF516DE05305991F0ABB06</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:02B3CDD687B7516DE05305991F0ABB06</con:value></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02B3934FBB8B29B9E05305991F0A70EC</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:02B3934FBB8B29B9E05305991F0A70EC</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02B3CD8F9DD85169E05305991F0A27D2</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:02B3CD8F9DD85169E05305991F0A27D2</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02B3CD8F9DD85169E05305991F0A27D2</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/09/10 09:39:15</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:02B3B4B57DB93333E05305991F0A804F</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:02B3934FBB8B29B9E05305991F0A70EC</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:02B3B4B57DB93333E05305991F0A804F</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:02B3934FBB8B29B9E05305991F0A70EC</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02B3934FBB8B29B9E05305991F0A70EC</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:02B3934FBB8B29B9E05305991F0A70EC</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80294</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>02B3CDD687BF516DE05305991F0ABB06</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_79057 - StreamListView - PORTAL - AccountNotActive - ACCOUNT.STATUS of blocked status - 403 Forbidden" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="74d33e8b-66ca-410a-a131-b2201e5b45db" disabled="true"><con:description>This test case will verify proper response from the StreamCreate API when the supplied SAML assertion references a node account that is in deleted status</con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="53950dfe-1c1a-41da-b0e0-c38642d5900d"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
//tC.setPropertyValue("streamhandleFULL","urn:dece:streamhandleid:org:dece:973A15CDA87B7C93E0401F0A059969A1");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("loopuntil","25");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","ACCOUNT_NOT_ACTIVE");
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="e1acfc2b-01e7-4bca-8beb-ad9eef37620e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="9484439a-d5c0-481c-b6ad-f1e7f10ee53f" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="f2c9bf16-5d8d-4d39-8708-e62aee3a887e"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();



	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="781e2cf1-e1c4-4bd6-bbdc-ce5e57f68430"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTAL" id="18817913-76bc-402d-a963-bcea8af383e9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Update ACCOUNT.STATUS to 'blocked'" id="040ac2a0-2a60-465b-bbc7-dfeb92153ff1"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"blocked") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="71048404-8c3b-41c0-82d8-f7ccc40bd77a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT.STATUS to 'active'" id="e86d3f61-044a-45b2-9b59-d23c48f7e513"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"active") == 1;</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>80340</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>portal</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>username</con:name><con:value>stream_list_view_20140515_05444</con:value></con:property><con:property><con:name>password</con:name><con:value/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value>urn:dece:streamhandleid:org:dece:F96E4A98A6163875E0401F0A07994E9E</con:value></con:property><con:property><con:name>accountoid</con:name><con:value>F950D206F42CF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>useroid</con:name><con:value>F96E10E2ADE61B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>assertid</con:name><con:value/></con:property><con:property><con:name>assert</con:name><con:value>nVbbbuo4FH3vV0Tp4whyadKQqCDRAjrM4UAP9P4yMvYGXBInjR1IztePHRoKlHbakVCQd7bXXvuSZV9wFIV20OYcUkFjpvU7Tf0f4pyRhglebTaVD8f2cK1B5MPzp9bUxO4ZxqBrfc4z6DMuEBNN3TYtp2a6Ncu9Mf3AcQLLqVu286Rrd5ByCS1d6qau5VHIeFCGbepZyoIYccoDhiLggcDBpP1rEEjPAFWc9NbFhmUZMG0thEgCw8B1AhjCENdxHBkXxp7PBeHBhM4ZElkKrzEJb+qve9frdX19Vo/TuWGbpmmYviF9CKfzU711Um0G0mezeLO+QixmFKOQ/kGK1C8Qi5ho7XAep1Qsog+gLcMyFXQNclzDlsNOdeMtQMnui0h7JFOOanyBrApsDDNIgWHQbsf9pn76tQ5u9t6kiPFZnEb8YP09SsBWEMYJkBqvMqvYfR3xSLlaF4CDPsNhxukKhmpMEoSBa9cpzGg+oFwOH+Fa2X4t5/JHqykD/J22XBi7XCV140h1OnQOXPyfnu32a4Nyh8IMWo64XBqjhsF/G+vC83NiPw26hHsTt90sKew6b0ht2/26PhzW7Wy9bnpg5G7kDR6fnq6c5xD5ayfu/xxin4yLxTxxR2H048Gcrvqzq+mN8PHP578KAbPGKExmcD25Q2nj59Dx1y/u/ePdyeTG+23a0f38Kvk7S7qrfIV+LN31o7dAPTLtIiO/vbW8YmnNsqUXp0WvsIe96w4bjadOMRj+uTxH2fqeh23MeieFjDimtz36MrpbDobRS+E033LazWHfWEnCJJs+AxbVUo1Hv6P1ZL+Q+FxelIWS2qx0DRKlUVwAE3pL7VLSEmRSgCgJZDM3655/3rXMrt3udF3rstHumo5p9cy26fm+2760Kw3asDigeBWzGVWxlMpu5udzgjgKODACaW0VZ3gBXP8EsYME0vpsLD+OmHG4iaWK+3zh5g6Z+i7JScbO7MXSR8Uz1rVhLEZslLZnAtI95bbsPeUeA6YJBSXvar65HHAuZCle0CoToVVfoTqDTB4AqdLgwHYarsFplISgiBpRTLIQ6skiKQtj8M2/XUOYl1bKcRKnAoVW+fl9mN3hu6oQ0odQ5cBVSpcgmwlHTiKzyudd3u7RE6uCb2eEqq9MVlWkFG+Y7L96GxY1JdtJeUusYr7d8E0AzI9AGJ/wMw5Ls41IVnQnfnW6ygNDykmr6u8Lqr/Us9UqKzvqKalMJbwhFdMyJoAzqXfFTbwEZmwhjC8dN1vWB5G39n1+mViwiUACIjl/Wrn8wl1jAlzdNfryu8m/epHZCynrJiAXx2xXobySKMaf3lpwgJWfNF/Lv3Wckrd2HcHaiSPzlBcMQdlcrdTBUnwwHTiWsFQqYZzugh8DOBZ837gt8paLkNM0zQR8/EZTEtfUEcZxxkS/o5eGXdkteYoigeDN6R1MKe2vZ3XOPzyrH34NJlIAI6Rvfel/O9doOS7qpir9Sy5NPZdXTxmczXdk/pXgvtK7Zsc2z3uOfdnzes6e0p+f+9sC7mXSemd+b9mp6eH30PoX</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>25</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value>ACCOUNT_NOT_ACTIVE</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:F96E10E2ADE51B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>F96E10E2ADE51B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value>F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>F96E4AAA6912B59DE0401F0A05994728</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value>F96E4AAA6912B59DE0401F0A05994728</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value>urn:dece:rightstokenid:org:dece:F96E4AAA6912B59DE0401F0A05994728</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value>urn:dece:rightstokenid:org:dece:F96E4AAA6912B59DE0401F0A05994728</con:value></con:property><con:property><con:name>userIndex</con:name><con:value>4</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value>F96E4A98A6163875E0401F0A07994E9E</con:value></con:property><con:property><con:name>streamhandleFULL_null</con:name><con:value>urn:dece:streamhandleid:org:dece:F96E4A98A6163875E0401F0A07994E9E</con:value></con:property><con:property><con:name>streamhandle_null</con:name><con:value>F96E4A98A6163875E0401F0A07994E9E</con:value></con:property><con:property><con:name>expectNickname_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_null</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_null</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_null</con:name><con:value>2014/05/15 10:01:43</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value>urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRequestingUser_null</con:name><con:value>urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value>urn:dece:rightstokenid:org:dece:F96E4AAA6912B59DE0401F0A05994728</con:value></con:property><con:property><con:name>expectRightsToken_null</con:name><con:value>urn:dece:rightstokenid:org:dece:F96E4AAA6912B59DE0401F0A05994728</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value>4</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>portal</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_null</con:name><con:value>portal</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c886c03e-50e1-4add-b361-6d2a2d0a8984</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84920b96-448b-468f-9732-16c6de5a31aa</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2bf7a321-c7de-4330-98db-7a962504469a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b4575073-0636-4e9e-b124-ada3b56a200a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_79081 - StreamListView - PORTAL - UserNotActive - User with a deleted status - 403 Forbidden" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="d15f1a95-596d-42c0-adaa-0dca25a71039" disabled="true"><con:description>This test case will verify proper response from the StreamCreate API when the supplied SAML assertion references a user that is in suspended status</con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="b802b320-d0c0-4ec3-9f53-8f613c0022ac"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL","urn:dece:streamhandleid:org:dece:973A15CDA87B7C93E0401F0A059969A1");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("loopuntil","25");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","USER_NOT_ACTIVE");
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="81babec2-02fd-4587-9e1d-adbca159035b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="eed6a8b5-f7b3-4a49-a4d9-4b21f52dcf9a" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="abb9a6ee-04c8-44fe-8c1c-380b5de81d37"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();



	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="bd9ca658-7e35-4c92-afe0-a996b81506fc"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTAL" id="37047b03-c469-4ec8-a3ef-fd35c2cdfebe"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT_USER.STATUS to 'deleted'" id="f43d6220-ab74-43f6-b69b-a8a0e7adc486"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUser(log,tP.getPropertyValue("targetSystem"));

assert a.userSetStatus(tC.getPropertyValue("useroid"),"deleted") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="367c8e23-e3d7-456d-ba16-522ba7630d23"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT_USER.STATUS to 'active'" id="f5a3a32a-d464-4400-a8a3-a2a7115742ab"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUser(log,tP.getPropertyValue("targetSystem"));

assert a.userSetStatus(tC.getPropertyValue("useroid"),"active") == 1;</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">portal</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportal1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140515_05444</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:F96E0990994D61E3E0401F0A07995A9C</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F42CF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E10E2ADE61B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbbuo4FH3vV0Tp4whyadKQqCDRAjrM4UAP9P4yMvYGXBInjR1IztePHRoKlHbakVCQd7bXXvuSZV9wFIV20OYcUkFjpvU7Tf0f4pyRhglebTaVD8f2cK1B5MPzp9bUxO4ZxqBrfc4z6DMuEBNN3TYtp2a6Ncu9Mf3AcQLLqVu286Rrd5ByCS1d6qau5VHIeFCGbepZyoIYccoDhiLggcDBpP1rEEjPAFWc9NbFhmUZMG0thEgCw8B1AhjCENdxHBkXxp7PBeHBhM4ZElkKrzEJb+qve9frdX19Vo/TuWGbpmmYviF9CKfzU711Um0G0mezeLO+QixmFKOQ/kGK1C8Qi5ho7XAep1Qsog+gLcMyFXQNclzDlsNOdeMtQMnui0h7JFOOanyBrApsDDNIgWHQbsf9pn76tQ5u9t6kiPFZnEb8YP09SsBWEMYJkBqvMqvYfR3xSLlaF4CDPsNhxukKhmpMEoSBa9cpzGg+oFwOH+Fa2X4t5/JHqykD/J22XBi7XCV140h1OnQOXPyfnu32a4Nyh8IMWo64XBqjhsF/G+vC83NiPw26hHsTt90sKew6b0ht2/26PhzW7Wy9bnpg5G7kDR6fnq6c5xD5ayfu/xxin4yLxTxxR2H048Gcrvqzq+mN8PHP578KAbPGKExmcD25Q2nj59Dx1y/u/ePdyeTG+23a0f38Kvk7S7qrfIV+LN31o7dAPTLtIiO/vbW8YmnNsqUXp0WvsIe96w4bjadOMRj+uTxH2fqeh23MeieFjDimtz36MrpbDobRS+E033LazWHfWEnCJJs+AxbVUo1Hv6P1ZL+Q+FxelIWS2qx0DRKlUVwAE3pL7VLSEmRSgCgJZDM3655/3rXMrt3udF3rstHumo5p9cy26fm+2760Kw3asDigeBWzGVWxlMpu5udzgjgKODACaW0VZ3gBXP8EsYME0vpsLD+OmHG4iaWK+3zh5g6Z+i7JScbO7MXSR8Uz1rVhLEZslLZnAtI95bbsPeUeA6YJBSXvar65HHAuZCle0CoToVVfoTqDTB4AqdLgwHYarsFplISgiBpRTLIQ6skiKQtj8M2/XUOYl1bKcRKnAoVW+fl9mN3hu6oQ0odQ5cBVSpcgmwlHTiKzyudd3u7RE6uCb2eEqq9MVlWkFG+Y7L96GxY1JdtJeUusYr7d8E0AzI9AGJ/wMw5Ls41IVnQnfnW6ygNDykmr6u8Lqr/Us9UqKzvqKalMJbwhFdMyJoAzqXfFTbwEZmwhjC8dN1vWB5G39n1+mViwiUACIjl/Wrn8wl1jAlzdNfryu8m/epHZCynrJiAXx2xXobySKMaf3lpwgJWfNF/Lv3Wckrd2HcHaiSPzlBcMQdlcrdTBUnwwHTiWsFQqYZzugh8DOBZ837gt8paLkNM0zQR8/EZTEtfUEcZxxkS/o5eGXdkteYoigeDN6R1MKe2vZ3XOPzyrH34NJlIAI6Rvfel/O9doOS7qpir9Sy5NPZdXTxmczXdk/pXgvtK7Zsc2z3uOfdnzes6e0p+f+9sC7mXSemd+b9mp6eH30PoX</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">25</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">USER_NOT_ACTIVE</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E10E2ADE51B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E10E2ADE51B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80348</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>F954622181497F81E0401F0A05995CDE</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value>F954622181497F81E0401F0A05995CDE</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value>urn:dece:rightstokenid:org:dece:F954622181497F81E0401F0A05995CDE</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value>urn:dece:rightstokenid:org:dece:F954622181497F81E0401F0A05995CDE</con:value></con:property><con:property><con:name>userIndex</con:name><con:value>4</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value>F96E0990994D61E3E0401F0A07995A9C</con:value></con:property><con:property><con:name>streamhandleFULL_null</con:name><con:value>urn:dece:streamhandleid:org:dece:F96E0990994D61E3E0401F0A07995A9C</con:value></con:property><con:property><con:name>streamhandle_null</con:name><con:value>F96E0990994D61E3E0401F0A07995A9C</con:value></con:property><con:property><con:name>expectNickname_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_null</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_null</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_null</con:name><con:value>2014/05/15 10:01:47</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value>urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRequestingUser_null</con:name><con:value>urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value>urn:dece:rightstokenid:org:dece:F954622181497F81E0401F0A05995CDE</con:value></con:property><con:property><con:name>expectRightsToken_null</con:name><con:value>urn:dece:rightstokenid:org:dece:F954622181497F81E0401F0A05995CDE</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value>4</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>portal</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_null</con:name><con:value>portal</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7c187921-7256-4fab-a411-1fec1e5fe81a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db863a82-4a00-4031-b46a-0134fc3d64fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6db44159-9b83-454f-94b6-dd3cbbd4518e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d7bb862-6f59-4cb6-b72e-4f440475a799</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_55092 - StreamListView - Portal - Stream view by portal_ManageAccountConsentNotPresent_DifferentOrg" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="76a56d37-1589-481e-adce-ebe5edbecb67" disabled="true"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="f84a0fd6-9b2e-41f4-b2b0-6881c923ed92"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");
tC.setPropertyValue("streamAccountActiveCount","0");					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="d0f33610-2b2a-4865-8235-b7e452c564fe"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="03267ece-d455-4604-9fc1-6b9358e36fce" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def dbUtils;

try {
	dbUtils = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
}
catch(Throwable e) {
	log.info "ERROR - dbUtils.dbStreams - $e";
	assert 1 == 2;
}
finally {
	dbUtils.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Manage account consent" disabled="true" id="14847f7c-6d45-4a0d-88f4-938ec39af52e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Policy - Establish Manage account consent policy")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove Manage account consent" id="7bb738d5-757f-4848-ad0d-b0377830e5c9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Policy - Remove Manage account consent policy")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="e599948c-12fe-4ed0-b027-4894932d3bf9"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="efb2d365-1ae4-4a0b-8778-50350afbafd0"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="delay" name="Delay I" id="d1c4f7b8-6d29-427f-a6ad-b0b430225079" disabled="true"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="groovy" name="Call StreamDelete" id="f5e382da-a83b-4874-9a88-ddc993d105f4" disabled="true"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

int i = tC.getPropertyValue("deletedCreateCount").toInteger();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	i++;
	tC.setPropertyValue("deletedCreateCount",i.toString());
	tC.setPropertyValue("expectDBStatus","deleted");
	tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamDelete")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="delay" name="Delay II" id="bab4fbbf-d037-46fb-a7e5-5d78c257140e" disabled="true"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="groovy" name="Invoke StreamCreate again if Required" id="c93aa4fc-2560-4be5-9790-69a5f06269d1" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();

def loopuntil = tC.getPropertyValue("loopuntil").toInteger();
def counter   = tC.getPropertyValue("counter").toInteger();

counter++;

if (counter &lt;= loopuntil) {
	tC.setPropertyValue("counter",counter.toString());
	testRunner.gotoStepByName("Call StreamCreate");
} 





</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to portal" id="65e855e8-5ff4-4dee-a857-11ee9f1662eb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Manage account consent1" disabled="true" id="7c37b45c-e9b1-4587-8820-3934559510a7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Policy - Establish Manage account consent policy")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="71faa34d-d7e8-4178-ae48-18ac101ba064"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="dc7a27af-6a3e-4ecb-9535-f4b772be912a" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="5943fb49-3b55-42d8-bfc5-278cabfa0a05" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F42CF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbbuo4FH3vV0Tp4whyadKQqCDRAjrM4UAP9P4yMvYGXBInjR1IztePHRoKlHbakVCQd7bXXvuSZV9wFIV20OYcUkFjpvU7Tf0f4pyRhglebTaVD8f2cK1B5MPzp9bUxO4ZxqBrfc4z6DMuEBNN3TYtp2a6Ncu9Mf3AcQLLqVu286Rrd5ByCS1d6qau5VHIeFCGbepZyoIYccoDhiLggcDBpP1rEEjPAFWc9NbFhmUZMG0thEgCw8B1AhjCENdxHBkXxp7PBeHBhM4ZElkKrzEJb+qve9frdX19Vo/TuWGbpmmYviF9CKfzU711Um0G0mezeLO+QixmFKOQ/kGK1C8Qi5ho7XAep1Qsog+gLcMyFXQNclzDlsNOdeMtQMnui0h7JFOOanyBrApsDDNIgWHQbsf9pn76tQ5u9t6kiPFZnEb8YP09SsBWEMYJkBqvMqvYfR3xSLlaF4CDPsNhxukKhmpMEoSBa9cpzGg+oFwOH+Fa2X4t5/JHqykD/J22XBi7XCV140h1OnQOXPyfnu32a4Nyh8IMWo64XBqjhsF/G+vC83NiPw26hHsTt90sKew6b0ht2/26PhzW7Wy9bnpg5G7kDR6fnq6c5xD5ayfu/xxin4yLxTxxR2H048Gcrvqzq+mN8PHP578KAbPGKExmcD25Q2nj59Dx1y/u/ePdyeTG+23a0f38Kvk7S7qrfIV+LN31o7dAPTLtIiO/vbW8YmnNsqUXp0WvsIe96w4bjadOMRj+uTxH2fqeh23MeieFjDimtz36MrpbDobRS+E033LazWHfWEnCJJs+AxbVUo1Hv6P1ZL+Q+FxelIWS2qx0DRKlUVwAE3pL7VLSEmRSgCgJZDM3655/3rXMrt3udF3rstHumo5p9cy26fm+2760Kw3asDigeBWzGVWxlMpu5udzgjgKODACaW0VZ3gBXP8EsYME0vpsLD+OmHG4iaWK+3zh5g6Z+i7JScbO7MXSR8Uz1rVhLEZslLZnAtI95bbsPeUeA6YJBSXvar65HHAuZCle0CoToVVfoTqDTB4AqdLgwHYarsFplISgiBpRTLIQ6skiKQtj8M2/XUOYl1bKcRKnAoVW+fl9mN3hu6oQ0odQ5cBVSpcgmwlHTiKzyudd3u7RE6uCb2eEqq9MVlWkFG+Y7L96GxY1JdtJeUusYr7d8E0AzI9AGJ/wMw5Ls41IVnQnfnW6ygNDykmr6u8Lqr/Us9UqKzvqKalMJbwhFdMyJoAzqXfFTbwEZmwhjC8dN1vWB5G39n1+mViwiUACIjl/Wrn8wl1jAlzdNfryu8m/epHZCynrJiAXx2xXobySKMaf3lpwgJWfNF/Lv3Wckrd2HcHaiSPzlBcMQdlcrdTBUnwwHTiWsFQqYZzugh8DOBZ837gt8paLkNM0zQR8/EZTEtfUEcZxxkS/o5eGXdkteYoigeDN6R1MKe2vZ3XOPzyrH34NJlIAI6Rvfel/O9doOS7qpir9Sy5NPZdXTxmczXdk/pXgvtK7Zsc2z3uOfdnzes6e0p+f+9sC7mXSemd+b9mp6eH30PoX</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E10E2ADE51B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E10E2ADE51B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:EE6AF5629D16080FE0401F0A07993E36</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportal1</con:value></con:property><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E164C0126F9CAE0401F0A05997C46</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E164C0126F9CAE0401F0A05997C46</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E4A2E7D94D6F3E0401F0A07994EA4</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:F96E4A2E7D94D6F3E0401F0A07994EA4</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:F96E4A2E7D94D6F3E0401F0A07994EA4</con:value></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:EE6AF562AA17080FE0401F0A07993E36</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E4A2E7D94D6F3E0401F0A07994EA4</con:value></con:property><con:property><con:name>streamhandle_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">EE6AF562AA17080FE0401F0A07993E36</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140515_05444</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E10E2ADE61B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/05/15 09:56:14</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E164C0126F9CAE0401F0A05997C46</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/12/26 10:44:43</con:value></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/12/26 10:45:00</con:value></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:EE6B2D04D0EB9636E0401F0A07994A79</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E164C0126F9CAE0401F0A05997C46</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79691</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value>F96E164C0126F9CAE0401F0A05997C46</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value>urn:dece:rightstokenid:org:dece:F96E164C0126F9CAE0401F0A05997C46</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_2</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP_CS_1</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>515727f8-a3ef-4d9b-b7c7-2f5f3eae9968</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>55d1533e-db88-4f69-94ac-c8dbacee678e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2612d590-4e41-4806-bcc3-86275ee34584</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db295cf1-ada5-4262-9aa7-1d3cb4e13390</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_55091 - StreamListView - Portal - Stream view by portal_ManageAccountConsentPresent_DifferentOrg" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="d53dc2cf-692a-4fdd-88a8-d20cf884ecf6" disabled="true"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="9b5fd1f6-7f1c-422d-b63f-aadc6b12c8ef"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");
tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="73133626-bcbb-4abf-bb17-43f690136455"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="018b5c2b-9736-470d-b7a5-3e4d9fc7e88d" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def dbUtils;

try {
	dbUtils = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
}
catch(Throwable e) {
	log.info "ERROR - dbUtils.dbStreams - $e";
	assert 1 == 2;
}
finally {
	dbUtils.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Manage account consent" disabled="true" id="4052d1a6-bcaf-477e-bda5-ea683e318f51"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Policy - Establish Manage account consent policy")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="0707fa18-a5b4-430d-905f-823097947db3"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="2bc6f297-09f5-47bf-8aa5-2f8c2e462319"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="delay" name="Delay I" id="4ce00a05-0dab-42ad-97e2-f98277e55e08" disabled="true"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="groovy" name="Call StreamDelete" id="f59891b8-522b-4649-b3df-067b248f38b7" disabled="true"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

int i = tC.getPropertyValue("deletedCreateCount").toInteger();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	i++;
	tC.setPropertyValue("deletedCreateCount",i.toString());
	tC.setPropertyValue("expectDBStatus","deleted");
	tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamDelete")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="delay" name="Delay II" id="6e445520-d6c0-4a3d-86ae-6eb99bfc8b86" disabled="true"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="groovy" name="Invoke StreamCreate again if Required" id="d1c73795-7450-4610-8a4a-b6024d8d2c52" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();

def loopuntil = tC.getPropertyValue("loopuntil").toInteger();
def counter   = tC.getPropertyValue("counter").toInteger();

counter++;

if (counter &lt;= loopuntil) {
	tC.setPropertyValue("counter",counter.toString());
	testRunner.gotoStepByName("Call StreamCreate");
} 





</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to Portal" id="4255bd36-0a50-41c4-9da9-d60fbf045cca"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid20").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove Manage account consent" id="b465d995-fe8d-4a9f-a376-dfdd28b98350"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Policy - Remove Manage account consent policy")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Manage account consent1" id="9d774ab8-4642-47c9-8857-7e6a188c7570"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Policy - Establish Manage account consent policy")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="100bcf2a-3e2f-4749-947e-2443df7f8e58"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="cd04734e-1dd1-416d-b8a0-e96a25b2e6be" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="f5c4fa7e-5569-4d4d-9914-0a010906fbb7" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F42CF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZdb+I6EH3vr4jSxyrkg/AVFSRaSje7bbcl0Fv6sjLOAN5NnDR2QuDXXzs0KVDa270SEvJkPHNm5vjY5wyFgeX0GYOEk4gq7qCr/vLNlolNy9fqPqprdsvuaO12q64ZfseeG3hmmravKi5jKbiUcUR5V7UM09aMhmY2xkbHsW2nbtfsduNZVR4hYSK0cKkZqpKHAWVOkbarpgl1IsQIcygKgTkcO17/9sYRng4qMam98y3KImHSW3IeO7qOaz5gCAJcw1Gon+t7Puc+czyyoIinCbzm9FlXfd27Wq1qq3otSha6ZRiGbnR04eMzsjhVeyflZvBdOo+260tEI0owCsgGSVC3wJeRr/SDRZQQvgw/CG3qpiFDa5BjDZs2PVX1twQFui9G2gOZMKSxJTLLYCOYQwIUgzIZuV319GsT3O4dJ4iyeZSE7GD9d5CAZhBEMfgaKysr0X094pF29c4BOy7FQcpIBneSJjHCwJT7BOYkvyFMkM9nSjF+JWfiR0qWAf6bsZzru1gFdP1IdwZkAYz/n5ntzmsb5REFKfTuWv7Fn8idX6eN/uT2Pvv24+rZuA3h21O7W0DYdd6Cqsb9uj4ka8Wt1008mqZ367o3RKNg9dhPF0//vKxvHqaEd2ZPD1cPzeUma6xu+rbRbs4zq7O5mSSL1e9ZjiYBzg1jbIXfG/kcP+XXzZNgGlx4cd/wklgfR+nFtP7yYzS+xa1r1j97iFvGRae5nK42L/242b5uTu8Gy/W3CYwt7C2HZ431ZjO4XrHgKX2uuydeZtyl1tkk193p4GHye9k2um817dawbywlwUtnvwHzcinp4Q6UoZgX4p/Li7QQX5sXrk4sNYpxoFztyV1SWpxUCBDxHTHM7XrYaV4ZF0Oz3m536o1O/cqwDXNo9I1Wp9OqD5ulBm1RHEC8jOicyFxSZbf8+RwgDh0G1IdEy6IUL4Gpn0QcII4Ul47E4Ygog3EkVHyGW7OwybKIWyasN+Fs1W6ugDZU5S7iP+nPpD/nkOwpt2ntKfcIMIkJSHmX/GaC4IyLVrygLOWBWctQjUIqLoBEarBjiV06I2EcgASqh5GfBlCLl3HRGJ1t/y0NYVZYR1fjX5feL7M4fB/WdvitbIPw8Yl0YLKgCxCjhCP3kFVW867qxtH7qgzfT30iz5joKU8I3iLZ//RGFcmRiidlWSXuyv3QsBdaP6yqyuZnBFeMr65qofRCB3rlYF5Q7aWWZllajKIlNS4R4XUhdabuAU6FUK3H0R+gehVC/9I9UaE+yFzZ9/GlfEk9jjiEgjhKsfzCI8EDJh8JriB8/tUXyF5K0TcOOT9muwzEW0Ii/vS5gR0s/YT5XvytouSt8GOxdvKIOsXLgBO6kCt5I6w/YAaORFgiJCxKdoMfC3As+b6xanKFhQs2zVIOH39RpDZ1VYRxlFLuDtTCsKuXBU6+jsF5c3oXptDk10s2Zx9esk+3N55QrhCplS/5b2eNFHTBoMq7vMDSVXPxZhTJ6WJHn18BHkq02bQH5tVla9C0rQOJblcN3Kuk98783rLT08Pz0PsX</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E164D1EC7D642E0401F0A079973F8</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:F96E164D1EC7D642E0401F0A079973F8</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:EE44587CFBBFB70CE0401F0A05995EDA</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">RET_CS_1</con:value></con:property><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E09BA3EEF85E3E0401F0A07995AB4</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E09BA3EEF85E3E0401F0A07995AB4</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E0BECC455BD79E0401F0A079973F4</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:F96E0BECC455BD79E0401F0A079973F4</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:F96E0BECC455BD79E0401F0A079973F4</con:value></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:EE456EA980F6D65AE0401F0A07996C84</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E0BECC455BD79E0401F0A079973F4</con:value></con:property><con:property><con:name>streamhandle_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">EE456EA980F6D65AE0401F0A07996C84</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140515_05444</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E10E2ADE61B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/05/15 09:56:24</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E09BA3EEF85E3E0401F0A07995AB4</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/12/24 09:33:32</con:value></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/12/24 09:33:49</con:value></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:EE456EA980E8D65AE0401F0A07996C84</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F96E09BA3EEF85E3E0401F0A07995AB4</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79691</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value>F96E09BA3EEF85E3E0401F0A07995AB4</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value>urn:dece:rightstokenid:org:dece:F96E09BA3EEF85E3E0401F0A07995AB4</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_2</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP_CS_1</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>515727f8-a3ef-4d9b-b7c7-2f5f3eae9968</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>55d1533e-db88-4f69-94ac-c8dbacee678e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2612d590-4e41-4806-bcc3-86275ee34584</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b465d995-fe8d-4a9f-a376-dfdd28b98350</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_79081 - StreamListView - PORTAL - UserNotActive - User with a pending status - 403 Forbidden" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="d051dd49-4811-4a9e-9d8f-476b7489564c" disabled="true"><con:description>This test case will verify proper response from the StreamCreate API when the supplied SAML assertion references a user that is in suspended status</con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="3ab3d6aa-0ecc-42b7-aafd-74b400e9de3b"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL","urn:dece:streamhandleid:org:dece:973A15CDA87B7C93E0401F0A059969A1");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("loopuntil","25");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","USER_NOT_ACTIVE");
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="0a20c93c-6a21-42bc-826b-ef4847377212"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="c7b82ccb-ccbe-4e3e-b941-2d68f856286e" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="f3953b58-b316-4634-914a-43f9e6b68bfe"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();



	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="dede77f1-3781-4ce9-ad83-36e44237e3e3"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTAL" id="786d0cc1-ce2d-4342-9011-07540c7537f0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT_USER.STATUS to 'pending'" id="c1829c03-0a36-4220-9a10-4a6b6f2246c2"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUser(log,tP.getPropertyValue("targetSystem"));

assert a.userSetStatus(tC.getPropertyValue("useroid"),"pending") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="837d1611-6325-4c8b-89b0-61960afc9445"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT_USER.STATUS to 'active'" id="3e2fe6e1-2aa3-4ce3-a471-1f8cf7edd3d7"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUser(log,tP.getPropertyValue("targetSystem"));

assert a.userSetStatus(tC.getPropertyValue("useroid"),"active") == 1;</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">portal</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportal1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140515_05444</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:F95107A1E34E1761E0401F0A0799554A</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F42CF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E10E2ADE61B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbbuo4FH3vV0Tp4whyadKQqCDRAjrM4UAP9P4yMvYGXBInjR1IztePHRoKlHbakVCQd7bXXvuSZV9wFIV20OYcUkFjpvU7Tf0f4pyRhglebTaVD8f2cK1B5MPzp9bUxO4ZxqBrfc4z6DMuEBNN3TYtp2a6Ncu9Mf3AcQLLqVu286Rrd5ByCS1d6qau5VHIeFCGbepZyoIYccoDhiLggcDBpP1rEEjPAFWc9NbFhmUZMG0thEgCw8B1AhjCENdxHBkXxp7PBeHBhM4ZElkKrzEJb+qve9frdX19Vo/TuWGbpmmYviF9CKfzU711Um0G0mezeLO+QixmFKOQ/kGK1C8Qi5ho7XAep1Qsog+gLcMyFXQNclzDlsNOdeMtQMnui0h7JFOOanyBrApsDDNIgWHQbsf9pn76tQ5u9t6kiPFZnEb8YP09SsBWEMYJkBqvMqvYfR3xSLlaF4CDPsNhxukKhmpMEoSBa9cpzGg+oFwOH+Fa2X4t5/JHqykD/J22XBi7XCV140h1OnQOXPyfnu32a4Nyh8IMWo64XBqjhsF/G+vC83NiPw26hHsTt90sKew6b0ht2/26PhzW7Wy9bnpg5G7kDR6fnq6c5xD5ayfu/xxin4yLxTxxR2H048Gcrvqzq+mN8PHP578KAbPGKExmcD25Q2nj59Dx1y/u/ePdyeTG+23a0f38Kvk7S7qrfIV+LN31o7dAPTLtIiO/vbW8YmnNsqUXp0WvsIe96w4bjadOMRj+uTxH2fqeh23MeieFjDimtz36MrpbDobRS+E033LazWHfWEnCJJs+AxbVUo1Hv6P1ZL+Q+FxelIWS2qx0DRKlUVwAE3pL7VLSEmRSgCgJZDM3655/3rXMrt3udF3rstHumo5p9cy26fm+2760Kw3asDigeBWzGVWxlMpu5udzgjgKODACaW0VZ3gBXP8EsYME0vpsLD+OmHG4iaWK+3zh5g6Z+i7JScbO7MXSR8Uz1rVhLEZslLZnAtI95bbsPeUeA6YJBSXvar65HHAuZCle0CoToVVfoTqDTB4AqdLgwHYarsFplISgiBpRTLIQ6skiKQtj8M2/XUOYl1bKcRKnAoVW+fl9mN3hu6oQ0odQ5cBVSpcgmwlHTiKzyudd3u7RE6uCb2eEqq9MVlWkFG+Y7L96GxY1JdtJeUusYr7d8E0AzI9AGJ/wMw5Ls41IVnQnfnW6ygNDykmr6u8Lqr/Us9UqKzvqKalMJbwhFdMyJoAzqXfFTbwEZmwhjC8dN1vWB5G39n1+mViwiUACIjl/Wrn8wl1jAlzdNfryu8m/epHZCynrJiAXx2xXobySKMaf3lpwgJWfNF/Lv3Wckrd2HcHaiSPzlBcMQdlcrdTBUnwwHTiWsFQqYZzugh8DOBZ837gt8paLkNM0zQR8/EZTEtfUEcZxxkS/o5eGXdkteYoigeDN6R1MKe2vZ3XOPzyrH34NJlIAI6Rvfel/O9doOS7qpir9Sy5NPZdXTxmczXdk/pXgvtK7Zsc2z3uOfdnzes6e0p+f+9sC7mXSemd+b9mp6eH30PoX</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">25</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">USER_NOT_ACTIVE</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E10E2ADE51B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E10E2ADE51B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80348</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>F96E0990D6C2A2AAE0401F0A07995AA0</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value>F96E0990D6C2A2AAE0401F0A07995AA0</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value>urn:dece:rightstokenid:org:dece:F96E0990D6C2A2AAE0401F0A07995AA0</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value>urn:dece:rightstokenid:org:dece:F96E0990D6C2A2AAE0401F0A07995AA0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value>4</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value>F95107A1E34E1761E0401F0A0799554A</con:value></con:property><con:property><con:name>streamhandleFULL_null</con:name><con:value>urn:dece:streamhandleid:org:dece:F95107A1E34E1761E0401F0A0799554A</con:value></con:property><con:property><con:name>streamhandle_null</con:name><con:value>F95107A1E34E1761E0401F0A0799554A</con:value></con:property><con:property><con:name>expectNickname_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_null</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_null</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_null</con:name><con:value>2014/05/15 10:01:53</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value>urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRequestingUser_null</con:name><con:value>urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value>urn:dece:rightstokenid:org:dece:F96E0990D6C2A2AAE0401F0A07995AA0</con:value></con:property><con:property><con:name>expectRightsToken_null</con:name><con:value>urn:dece:rightstokenid:org:dece:F96E0990D6C2A2AAE0401F0A07995AA0</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value>4</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>portal</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_null</con:name><con:value>portal</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7c187921-7256-4fab-a411-1fec1e5fe81a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db863a82-4a00-4031-b46a-0134fc3d64fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6db44159-9b83-454f-94b6-dd3cbbd4518e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d7bb862-6f59-4cb6-b72e-4f440475a799</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_79085 - StreamListView - PORTAL - UserNotActive - User with a blocked:tou status - 403 Forbidden" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="e49617f8-5cde-4e29-a2e4-6bfd0c625d56" disabled="true"><con:description>This test case will verify proper response from the StreamCreate API when the supplied SAML assertion references a user that is in suspended status</con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="434f7864-3143-4ad7-a734-b539d56444a0"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL","urn:dece:streamhandleid:org:dece:973A15CDA87B7C93E0401F0A059969A1");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("loopuntil","25");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","USER_NOT_ACTIVE");
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="4997aaeb-a105-406e-a017-e8dab0308820"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="c8976c3e-6a0f-4c2f-a9df-dbe7ab4994e1" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="871f7b17-25f2-4490-8e1e-9e500b07726d"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();



	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="5755fb28-aaa4-4a29-acb4-e8ab80bfdf22"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTAL" id="17bf356a-5d43-4d9b-b44a-7fba03498ef2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT_USER.STATUS to 'blocked:tou'" id="c887fb14-a3ee-461e-8f57-6406f4c3d26e"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUser(log,tP.getPropertyValue("targetSystem"));

assert a.userSetStatus(tC.getPropertyValue("useroid"),"blocked:tou") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="1930364f-0741-4805-9a73-90bdfd4dbcc5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT_USER.STATUS to 'active'" id="1e37b3b7-b68b-454c-95e4-67a1ea03eb0c"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUser(log,tP.getPropertyValue("targetSystem"));

assert a.userSetStatus(tC.getPropertyValue("useroid"),"active") == 1;</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">portal</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportal1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140515_05444</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:F95107A1E3501761E0401F0A0799554A</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F42CF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E10E2ADE61B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbbuo4FH3vV0Tp4whyadKQqCDRAjrM4UAP9P4yMvYGXBInjR1IztePHRoKlHbakVCQd7bXXvuSZV9wFIV20OYcUkFjpvU7Tf0f4pyRhglebTaVD8f2cK1B5MPzp9bUxO4ZxqBrfc4z6DMuEBNN3TYtp2a6Ncu9Mf3AcQLLqVu286Rrd5ByCS1d6qau5VHIeFCGbepZyoIYccoDhiLggcDBpP1rEEjPAFWc9NbFhmUZMG0thEgCw8B1AhjCENdxHBkXxp7PBeHBhM4ZElkKrzEJb+qve9frdX19Vo/TuWGbpmmYviF9CKfzU711Um0G0mezeLO+QixmFKOQ/kGK1C8Qi5ho7XAep1Qsog+gLcMyFXQNclzDlsNOdeMtQMnui0h7JFOOanyBrApsDDNIgWHQbsf9pn76tQ5u9t6kiPFZnEb8YP09SsBWEMYJkBqvMqvYfR3xSLlaF4CDPsNhxukKhmpMEoSBa9cpzGg+oFwOH+Fa2X4t5/JHqykD/J22XBi7XCV140h1OnQOXPyfnu32a4Nyh8IMWo64XBqjhsF/G+vC83NiPw26hHsTt90sKew6b0ht2/26PhzW7Wy9bnpg5G7kDR6fnq6c5xD5ayfu/xxin4yLxTxxR2H048Gcrvqzq+mN8PHP578KAbPGKExmcD25Q2nj59Dx1y/u/ePdyeTG+23a0f38Kvk7S7qrfIV+LN31o7dAPTLtIiO/vbW8YmnNsqUXp0WvsIe96w4bjadOMRj+uTxH2fqeh23MeieFjDimtz36MrpbDobRS+E033LazWHfWEnCJJs+AxbVUo1Hv6P1ZL+Q+FxelIWS2qx0DRKlUVwAE3pL7VLSEmRSgCgJZDM3655/3rXMrt3udF3rstHumo5p9cy26fm+2760Kw3asDigeBWzGVWxlMpu5udzgjgKODACaW0VZ3gBXP8EsYME0vpsLD+OmHG4iaWK+3zh5g6Z+i7JScbO7MXSR8Uz1rVhLEZslLZnAtI95bbsPeUeA6YJBSXvar65HHAuZCle0CoToVVfoTqDTB4AqdLgwHYarsFplISgiBpRTLIQ6skiKQtj8M2/XUOYl1bKcRKnAoVW+fl9mN3hu6oQ0odQ5cBVSpcgmwlHTiKzyudd3u7RE6uCb2eEqq9MVlWkFG+Y7L96GxY1JdtJeUusYr7d8E0AzI9AGJ/wMw5Ls41IVnQnfnW6ygNDykmr6u8Lqr/Us9UqKzvqKalMJbwhFdMyJoAzqXfFTbwEZmwhjC8dN1vWB5G39n1+mViwiUACIjl/Wrn8wl1jAlzdNfryu8m/epHZCynrJiAXx2xXobySKMaf3lpwgJWfNF/Lv3Wckrd2HcHaiSPzlBcMQdlcrdTBUnwwHTiWsFQqYZzugh8DOBZ837gt8paLkNM0zQR8/EZTEtfUEcZxxkS/o5eGXdkteYoigeDN6R1MKe2vZ3XOPzyrH34NJlIAI6Rvfel/O9doOS7qpir9Sy5NPZdXTxmczXdk/pXgvtK7Zsc2z3uOfdnzes6e0p+f+9sC7mXSemd+b9mp6eH30PoX</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">25</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">USER_NOT_ACTIVE</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E10E2ADE51B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F96E10E2ADE51B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950D206F433F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80348</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>F96E0BF28F692AFFE0401F0A079973EA</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value>F96E0BF28F692AFFE0401F0A079973EA</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value>urn:dece:rightstokenid:org:dece:F96E0BF28F692AFFE0401F0A079973EA</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value>urn:dece:rightstokenid:org:dece:F96E0BF28F692AFFE0401F0A079973EA</con:value></con:property><con:property><con:name>userIndex</con:name><con:value>4</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value>F95107A1E3501761E0401F0A0799554A</con:value></con:property><con:property><con:name>streamhandleFULL_null</con:name><con:value>urn:dece:streamhandleid:org:dece:F95107A1E3501761E0401F0A0799554A</con:value></con:property><con:property><con:name>streamhandle_null</con:name><con:value>F95107A1E3501761E0401F0A0799554A</con:value></con:property><con:property><con:name>expectNickname_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_null</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_null</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_null</con:name><con:value>2014/05/15 10:02:18</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value>urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRequestingUser_null</con:name><con:value>urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value>urn:dece:rightstokenid:org:dece:F96E0BF28F692AFFE0401F0A079973EA</con:value></con:property><con:property><con:name>expectRightsToken_null</con:name><con:value>urn:dece:rightstokenid:org:dece:F96E0BF28F692AFFE0401F0A079973EA</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value>4</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>portal</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_null</con:name><con:value>portal</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7c187921-7256-4fab-a411-1fec1e5fe81a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db863a82-4a00-4031-b46a-0134fc3d64fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6db44159-9b83-454f-94b6-dd3cbbd4518e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d7bb862-6f59-4cb6-b72e-4f440475a799</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>QC_TestPlanDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestLabDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestSet</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Portal Customer Support Test Cases_P1_P2" id="f780c9ce-3ce3-4da0-97c8-cadd9ba0739d"><con:description/><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\ashwin.tikle\Desktop\Reports\reports 1.0.6.1.P\LP1_R3\Stream List View</con:setting></con:settings><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_80000 - StreamListView - PORTALCS - Test Suite Staging" searchProperties="true" id="13cd1cc1-7860-4e9b-86ae-37baed37cb23"><con:description>This test case will verify proper response from the StreamCreate API when the supplied SAML assertion references a node account that is in pending status</con:description><con:settings/><con:testStep type="groovy" name="Create Data for retailer,lasp and nonlasp" id="c20f75bc-bc6d-4ab4-984c-960de0da5ca9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTS = tP.getTestSuiteByName("E_2_E");

def runnerTC = myTS.run( null , false )

assert runnerTC.status == Status.FINISHED;

tP.setPropertyValue("StreamCreateCount","0");
tP.setPropertyValue("StreamDeleteCount","0");
tP.setPropertyValue("StreamDeleteList","");
tP.setPropertyValue("accountList","");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish TestCase Properties" id="9f90493f-08e4-44ee-97f9-00d903886ca2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","STREAM_ACCOUNTID_MISMATCH");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","deleted");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="74fdd650-daa8-409a-94a4-d10c11ad493b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT.STATUS to 'active'" id="863e61dd-1cce-4405-bb2d-678ef3e30c5c"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"active") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT_USER.STATUS to 'active'" id="107861ab-aa84-40ca-95ea-699833cc42d4"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUser(log,tP.getPropertyValue("targetSystem"));

assert a.userSetStatus(tC.getPropertyValue("useroid"),"active") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="- Remove all Parental Control Policies Clean-up" id="5990c511-8980-4682-90a1-eb955d3de423" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Policy - Remove all Parental Control Policies")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set CIDs Rating to G" id="6efb84c2-f399-481f-bfc4-2c5b96646d09"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbCID(log);

String cid     = tP.getPropertyValue("cid");
String region  = "US"
String country = "US"
String system  = "MPAA";
String rating  = "G";

this.log.info "rating[$rating]";

assert a.sqlSetRating(cid,region,country,system,rating) == 1;

</script></con:config></con:testStep><con:testStep type="groovy" name="Purge Account Stream Handles" id="3f735957-dc46-47bd-966d-b013663331bd" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>errorRespType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamstatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150505_081519</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">15575C84AC6237B6E05305991F0A686D</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">155797F0818C36D6E05305991F0A1D1C</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZrb+I4FP0rKPMRhTwIhEQFiVcHZqGdKbQ7M19GrnMBl8RJbQfS/vq1A6SE0i67EhLyzfW55z587CuOotD2u5wDEySmlSwKKfdza1tLGfVjxAn3KYqA+wL7s+504ts100eHLVplPGhrf+pmHbstE/RHy/Z0pwWe7qFHpAfYQrbbdLzmoiFdOU9hTLlAVLQ127Qauql+c8vxHce33ZrZqv/WKg/AuMSWLjVT25PKeFtbCZH4hrHdbmvbei1mS8M2Tcv4OZ3M8AoipHWudhnlgVhn749rAWAIQ1zDcWRcGSWfq4D7M7KkSKQM9rGCj2KZhukZ0ifgZPlFK/ZCMKaLOF/2EY0pwSgkr0jVZwpiFQeVbriMGRGr6MMkLFMB65BhHVsO/aIZZWoXApUYMo50vkLWHusOFsCAYqjc343b2pfLupZvnTNE+SJmES8v/xsfoBsI4wQCnR/S2lO7HPBMpTpXgP0xxWHKyQZu1LAmCAPfdxPw5VCV7wwWJJsQLgc044qdcUzvZLmrxoAsgYv/06Cj5uxAHlCYQud50EN/ffVufqbr4Ww0sgfsbjR+WBted93OCRw754aitbvlyVAWQ7TbwVssMVevT6O0Om/8+jqxxPpXr/dQnY7Gi5EVimo0m95z2M6eU+xurtHkSQSk5TkvNHuYb71YxgoRI6P+N7crfty/Tib4+XfzW3++bk1vbqt1WGTVXjehQtw+znsZHoXZyzDuPz5VJ27z9X6Y/b1qJI1sykbNBf0xr9ZHt41hMFz1Y+ZlUzoaeo47rN7+dvvjdpHOEf+y7XDmZ+njE2BxWKoxGA8q17JLSHwuZspCAn2Ru/qJEh8ugAqto3Yp7fBTKXck8GUPd2ur0XA999rpN+2uZbve0GzUTdfzrGuz69q9+kFkdixOKPZjuiAqlpLc3dh8ThBHPgcaANM3cSqVjmufIA6QQJUxvZOHIKYc5rGUZytdEyd6dSF62WysjQlhK8qyeishWuUmFrf0lnUXAlhZlN2SKN8BJgkBpdxqsLmcbC5kMZ7RJhWhVdugGoVUajtTMuvbTqthcBIlISiqRhQHaQi1ZJXkpTH47t/WEea5dTDpzr7/6c/+5CfC+DC/02+HUkifgCgHrlLqgWwnnLlkrEM+7/Junr2MDvDdNCDqgMm6Ckbwjkn509u4qDkpZuUtsQPzYsOpoQRunOZVxAs2BBdzX9zeUtSlDHQOzXlGVu25lm42ad4Px6kbTMIbqiKGaRszwKkUqpd5vAZqFCjGRbdCQfwkeGEvU0zFis4EEhDJ+ankywueATPg6hkwlpOfXfrGKIWUpROQiXO2fiifMIrxp68c7GPlJ83f5d82ZsFbx85gHcWRecpXgCB0qVbqRnj5YDxwLGGJ1LKYHYOfAzgXvGwsilxwEXKgHlMBH3+pKJFqawjjOKViPNByw7Fw5jzFSwL+m9M7mFybi8ca+ffXmk7yEcAgn3ic5PjqzvXVEaDLI/HdB/1Af1uf6W+ZXeed+b3lqE6nM975Bw==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">STREAM_ACCOUNTID_MISMATCH</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">155797F4C62A1279E05307991F0A72B3</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">155797F4C6281279E05307991F0A72B3</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">15575C84AC6937B6E05305991F0A686D</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:155797F4C62A1279E05307991F0A72B3</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:155797F4C6281279E05307991F0A72B3</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80357</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>15575C84AC6937B6E05305991F0A686D</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c20f75bc-bc6d-4ab4-984c-960de0da5ca9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_80050 - StreamListView - PORTALCS - AccountIdUnmatched - Nodaccountid in URL is NULL - 403 Forbidden" searchProperties="true" id="15f6d2e2-61a2-4382-b67e-efc752dd6807"><con:description>This test case will verify proper response from the StreamCreate API when the supplied SAML assertion references a node account that is in pending status</con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="0df0e07f-45b0-44fb-8300-ddfdcfaa374e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","STREAM_ACCOUNTID_MISMATCH");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","deleted");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="fe77bbb6-6e13-4797-a7d7-35af596b4f27"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove all the Account's StreamHandles" id="8c82347d-02ce-49bb-964e-9eefe5d691d0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTALCS" id="28243623-eabf-4543-82b7-859898026018"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portalcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Change nodeaccountid" id="fa840820-353f-4db0-b31d-04ac2eb2dede"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();

tC.setPropertyValue("assertionAccountIdFULL","urn:dece:accountid:org:dece:");
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="38309061-3aba-43af-9f0a-2bfdb0d0b529"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportalcs1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140131_04592</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9AA79C9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4BA7894005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZbc9o4FH7vr/C4jx3jC+ZiT2DGENi6CaQFGrp52RHyAZTYkmPJhvTXr2RiAoRk053JDNHx0Xe+c9EnXXCUxI4fcA6ZIIxq4WVH/8ezPORGi7rhLequ4doOMhZWq2k0LWeBHIiakePpWsh5DiHlAlHR0R3Ldg3LNur2zLH9hufb9ZprN+907RYyLqGlS83StW0SU+6XYTt6nlGfIU64T1EC3BfYnwaja196+qjipHcvdizLgFl3LUTqmyauRYAhjnENs8S8MI98LiLuT8mKIpFn8Bwz4h39ee9ms6lt6jWWrUzHsizT8kzpE3Gy+qx3P1WbIQrpku3WfUQZJRjF5DdSpEYg1izSgnjFMiLWyRvQtmlbCtqALTaw7dLPuvkSoGT3QaQjkhlHBl8juwKbwBIyoBi0n5Owo3/+WAd3e2cZonzJsoSfrP+MEtACYpZCZPAqs4rdxxHPlKt7AdgPKY5zTgoYqzFJEQaufc9gSbbXhMvhi7hWtl/bcvlHqikD/CdtuTAPuUrq5pnqXJIVcPF/enbYrx3KLYpz6PKN18NXM9Rixe+52edhHv8MsnHbGbNOSeHQeUdq3+7n9emw7mfreRNdTFI0gK/f6n/h+4f7X8Mp6f8cJeRq4VwTvB303OGiWDYak+LbfW+bXw0Gt7P8S5FR/KOP5sP29MENN3/d3bfmN+NP4ddogbN131nb3uXD1ygK2Ow6TacwvPnGHptj8Tt1fy0fH2/F+Cm8J1ejxGqZC9Foinl/8qPwHkZfNumykd4N6/knMc9HUX/w1IT531d3c3rbXnVecjrM4dhYScI0X9wDFtVSjUd4qQ1lv5B4X16UhUTGsnT1U6VRXAAVelftUtLi51KASOTLZu7W9V7QanquZTWCQd21La/nug35n+e27aEXtCsN2rE4odhndElULKWyu/l5nyBOfA40gswoWI7XwPV3EC+RQFpIJ/JwMMphxqSKt61mM3CavUZQdwO3V++3mz1r4ASB1xr0vb6ja2MmbuhNFiwFZJWCO1LEZ5Z1pOATwCQloGRezTmXg86FLMkjKnIR27UC1Sjk8iLIlBb7jttumJwkaQyKsJmwKI+hlq7TskAm3/06BsK8tBKOU5YJFNvlMXwzy9NvVUGkT0SUA1cp9UA2Fc7cSFaVz6u8G2dvrgo+yCOiTpusrsgI3jE5/vQyNGpa9hPzkljFfL/hDwEwPwNhvsPPPC3NPmJUkIP41S0rLw4pK92qv4+o9ljLiyIvO9pSkplJeNM2HducAs6l7j3N2ANQcw9hfuja2bM+iby3H/PLxZpOBRKQyPnTyuUH3hxT4OrNEcrzs/3og+YopKybgK04Z+vH8mmiGL/7esE+Vn7S/F3+bFgWvbTrDNZBHJmnfGgIQldqpS6YpzemAzMJS6QisuwQ/BzAueDHxn2R91yEnKZFLuDtL5qSuo6OMGY5FeGlXhoO5bfkKZ5S8F+cXsGUEv98Z2/5m3f2r9H1VAphgvS9L/lvZ4OU44JBV0+DkktH38onqAxOVwdy/0zwUPHbQdByet5g6L6v+MeZdF+ZX1sOanp6Hrr/Ag==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">STREAM_ACCOUNTID_MISMATCH</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80358</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_80052 - StreamListView - PORTALCS - AccountIdUnmatched - nodeaccountid and URL accountId mismatch - 403 Forbidden" searchProperties="true" id="308f270b-fcef-4536-92c2-0b3b0a154266"><con:description>This test case will verify proper response from the StreamCreate API when the supplied SAML assertion references a node account that is in pending status</con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="163cd4d4-9f9c-4271-a482-5a599278a9cb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","STREAM_ACCOUNTID_MISMATCH");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","deleted");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="e7d9be59-59de-430f-be2e-d31334fc0286"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove all the Account's StreamHandles" id="91385016-6d4a-4c17-a35d-2a6ff5da33bd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTALCS" id="a0dd55bd-07af-434a-81c0-27f226ba6120"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portalcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Change nodeaccountid" id="2af1af51-95fe-47dd-9c01-9bd700ac657c"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();

tC.setPropertyValue("assertionAccountIdFULL","urn:dece:accountid:org:dece:1");</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="49153c5a-e095-4779-ab3d-680b0ff357a9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>errorRespType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamstatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportalcs1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140131_04592</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9AA79C9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4BA7894005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZbc9o4FH7vr/C4jx3jC+ZiT2DGENi6CaQFGrp52RHyAZTYkmPJhvTXr2RiAoRk053JDNHx0Xe+c9EnXXCUxI4fcA6ZIIxq4WVH/8ezPORGi7rhLequ4doOMhZWq2k0LWeBHIiakePpWsh5DiHlAlHR0R3Ldg3LNur2zLH9hufb9ZprN+907RYyLqGlS83StW0SU+6XYTt6nlGfIU64T1EC3BfYnwaja196+qjipHcvdizLgFl3LUTqmyauRYAhjnENs8S8MI98LiLuT8mKIpFn8Bwz4h39ee9ms6lt6jWWrUzHsizT8kzpE3Gy+qx3P1WbIQrpku3WfUQZJRjF5DdSpEYg1izSgnjFMiLWyRvQtmlbCtqALTaw7dLPuvkSoGT3QaQjkhlHBl8juwKbwBIyoBi0n5Owo3/+WAd3e2cZonzJsoSfrP+MEtACYpZCZPAqs4rdxxHPlKt7AdgPKY5zTgoYqzFJEQaufc9gSbbXhMvhi7hWtl/bcvlHqikD/CdtuTAPuUrq5pnqXJIVcPF/enbYrx3KLYpz6PKN18NXM9Rixe+52edhHv8MsnHbGbNOSeHQeUdq3+7n9emw7mfreRNdTFI0gK/f6n/h+4f7X8Mp6f8cJeRq4VwTvB303OGiWDYak+LbfW+bXw0Gt7P8S5FR/KOP5sP29MENN3/d3bfmN+NP4ddogbN131nb3uXD1ygK2Ow6TacwvPnGHptj8Tt1fy0fH2/F+Cm8J1ejxGqZC9Foinl/8qPwHkZfNumykd4N6/knMc9HUX/w1IT531d3c3rbXnVecjrM4dhYScI0X9wDFtVSjUd4qQ1lv5B4X16UhUTGsnT1U6VRXAAVelftUtLi51KASOTLZu7W9V7QanquZTWCQd21La/nug35n+e27aEXtCsN2rE4odhndElULKWyu/l5nyBOfA40gswoWI7XwPV3EC+RQFpIJ/JwMMphxqSKt61mM3CavUZQdwO3V++3mz1r4ASB1xr0vb6ja2MmbuhNFiwFZJWCO1LEZ5Z1pOATwCQloGRezTmXg86FLMkjKnIR27UC1Sjk8iLIlBb7jttumJwkaQyKsJmwKI+hlq7TskAm3/06BsK8tBKOU5YJFNvlMXwzy9NvVUGkT0SUA1cp9UA2Fc7cSFaVz6u8G2dvrgo+yCOiTpusrsgI3jE5/vQyNGpa9hPzkljFfL/hDwEwPwNhvsPPPC3NPmJUkIP41S0rLw4pK92qv4+o9ljLiyIvO9pSkplJeNM2HducAs6l7j3N2ANQcw9hfuja2bM+iby3H/PLxZpOBRKQyPnTyuUH3hxT4OrNEcrzs/3og+YopKybgK04Z+vH8mmiGL/7esE+Vn7S/F3+bFgWvbTrDNZBHJmnfGgIQldqpS6YpzemAzMJS6QisuwQ/BzAueDHxn2R91yEnKZFLuDtL5qSuo6OMGY5FeGlXhoO5bfkKZ5S8F+cXsGUEv98Z2/5m3f2r9H1VAphgvS9L/lvZ4OU44JBV0+DkktH38onqAxOVwdy/0zwUPHbQdByet5g6L6v+MeZdF+ZX1sOanp6Hrr/Ag==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">STREAM_ACCOUNTID_MISMATCH</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:1</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80359</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_85106 - StreamListView - PORTALCS - Account has single active stream and no deleted streams - 200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="db61e487-0a42-4e26-bf1e-2e7bd8a26c98"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single active stream and no deleted (historical) streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="7a289cdb-2635-4cd6-b5f4-4073c1c20d77"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",null);
tC.setPropertyValue("expectDBRenewedBy",null);
tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="6af15461-b125-4f0b-a988-4db20d66b912"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="f9a38e4c-f948-461d-8529-80d167fc4162" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="edeee784-fcc4-44b9-8861-752a66dd2dfa"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="91e31ad6-12c9-47f0-bb53-b5db3d44d387"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTALCS" id="4a6551d3-2b1a-4587-a0f9-c6bcc9d26c2c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portalcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="82727b6b-9f6d-43bb-8f8f-cde00e89c0c7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="a848bbff-a96b-42b2-936c-e533dd163303" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="cdfbcfb3-61ed-4837-a649-9b2957c1034e" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def acct    = tC.getPropertyValue("accountoid");

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == 1;
assert b.streamGetStreamDataHistoryRowCount(acct) == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="65c6d494-dc4c-46c1-a470-2b191052727c" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportalcs1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140131_04592</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:3640D02526AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9AA79C9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4BA7894005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZbc9o4FH7vr/C4jx3jC+ZiT2DGENi6CaQFGrp52RHyAZTYkmPJhvTXr2RiAoRk053JDNHx0Xe+c9EnXXCUxI4fcA6ZIIxq4WVH/8ezPORGi7rhLequ4doOMhZWq2k0LWeBHIiakePpWsh5DiHlAlHR0R3Ldg3LNur2zLH9hufb9ZprN+907RYyLqGlS83StW0SU+6XYTt6nlGfIU64T1EC3BfYnwaja196+qjipHcvdizLgFl3LUTqmyauRYAhjnENs8S8MI98LiLuT8mKIpFn8Bwz4h39ee9ms6lt6jWWrUzHsizT8kzpE3Gy+qx3P1WbIQrpku3WfUQZJRjF5DdSpEYg1izSgnjFMiLWyRvQtmlbCtqALTaw7dLPuvkSoGT3QaQjkhlHBl8juwKbwBIyoBi0n5Owo3/+WAd3e2cZonzJsoSfrP+MEtACYpZCZPAqs4rdxxHPlKt7AdgPKY5zTgoYqzFJEQaufc9gSbbXhMvhi7hWtl/bcvlHqikD/CdtuTAPuUrq5pnqXJIVcPF/enbYrx3KLYpz6PKN18NXM9Rixe+52edhHv8MsnHbGbNOSeHQeUdq3+7n9emw7mfreRNdTFI0gK/f6n/h+4f7X8Mp6f8cJeRq4VwTvB303OGiWDYak+LbfW+bXw0Gt7P8S5FR/KOP5sP29MENN3/d3bfmN+NP4ddogbN131nb3uXD1ygK2Ow6TacwvPnGHptj8Tt1fy0fH2/F+Cm8J1ejxGqZC9Foinl/8qPwHkZfNumykd4N6/knMc9HUX/w1IT531d3c3rbXnVecjrM4dhYScI0X9wDFtVSjUd4qQ1lv5B4X16UhUTGsnT1U6VRXAAVelftUtLi51KASOTLZu7W9V7QanquZTWCQd21La/nug35n+e27aEXtCsN2rE4odhndElULKWyu/l5nyBOfA40gswoWI7XwPV3EC+RQFpIJ/JwMMphxqSKt61mM3CavUZQdwO3V++3mz1r4ASB1xr0vb6ja2MmbuhNFiwFZJWCO1LEZ5Z1pOATwCQloGRezTmXg86FLMkjKnIR27UC1Sjk8iLIlBb7jttumJwkaQyKsJmwKI+hlq7TskAm3/06BsK8tBKOU5YJFNvlMXwzy9NvVUGkT0SUA1cp9UA2Fc7cSFaVz6u8G2dvrgo+yCOiTpusrsgI3jE5/vQyNGpa9hPzkljFfL/hDwEwPwNhvsPPPC3NPmJUkIP41S0rLw4pK92qv4+o9ljLiyIvO9pSkplJeNM2HducAs6l7j3N2ANQcw9hfuja2bM+iby3H/PLxZpOBRKQyPnTyuUH3hxT4OrNEcrzs/3og+YopKybgK04Z+vH8mmiGL/7esE+Vn7S/F3+bFgWvbTrDNZBHJmnfGgIQldqpS6YpzemAzMJS6QisuwQ/BzAueDHxn2R91yEnKZFLuDtL5qSuo6OMGY5FeGlXhoO5bfkKZ5S8F+cXsGUEv98Z2/5m3f2r9H1VAphgvS9L/lvZ4OU44JBV0+DkktH38onqAxOVwdy/0zwUPHbQdByet5g6L6v+MeZdF+ZX1sOanp6Hrr/Ag==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">8540100526AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:8540100526AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:3640D02526AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3640D02526AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3640D02526AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/01/31 22:19:08</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:8540100526AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:8540100526AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">8540100526AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:8540100526AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80372</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_85107 - StreamListView - PORTALCS - Account has single deleted stream and no active streams - 200 OK - no streams" searchProperties="true" id="75439e52-8acc-4a68-8587-a8d837923529"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and no active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="f793717e-2d68-4404-9d0c-7b100b55d478"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS_NO_STREAMS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","deleted");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="bb988c47-35ca-4020-8da1-49b1e8c445a5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="ee6bb706-bdb0-40af-9854-2863b1452ffc" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="eb10778b-3eba-47d2-b8e2-ba7968a0b562"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="7e9fffd1-52b2-4253-aad1-beceb08222d3"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamDelete" id="85e006cf-0d0f-470f-a1d2-2c61342054c1"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

int i = tC.getPropertyValue("deletedCreateCount").toInteger();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	i++;
	tC.setPropertyValue("deletedCreateCount",i.toString());
	tC.setPropertyValue("expectDBStatus","deleted");
	tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamDelete")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTALCS" id="ff4f6566-7002-4672-9ee4-ac0e5039c465"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portalcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="788ae0c2-6ea7-4ccf-aeca-010920ba767d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="fd0b870f-9a3c-4d19-a473-9215837a1031" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="b8898127-4962-41a0-8a3e-6d6ba6fa9b26" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def acct    = tC.getPropertyValue("accountoid");

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == 1;
assert b.streamGetStreamDataHistoryRowCount(acct) == 2;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="5239abcb-957c-45d8-9168-d33b423bbe3a" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportalcs1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140131_04592</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:0740723726AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9AA79C9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4BA7894005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZbc9o4FH7vr/C4jx3jC+ZiT2DGENi6CaQFGrp52RHyAZTYkmPJhvTXr2RiAoRk053JDNHx0Xe+c9EnXXCUxI4fcA6ZIIxq4WVH/8ezPORGi7rhLequ4doOMhZWq2k0LWeBHIiakePpWsh5DiHlAlHR0R3Ldg3LNur2zLH9hufb9ZprN+907RYyLqGlS83StW0SU+6XYTt6nlGfIU64T1EC3BfYnwaja196+qjipHcvdizLgFl3LUTqmyauRYAhjnENs8S8MI98LiLuT8mKIpFn8Bwz4h39ee9ms6lt6jWWrUzHsizT8kzpE3Gy+qx3P1WbIQrpku3WfUQZJRjF5DdSpEYg1izSgnjFMiLWyRvQtmlbCtqALTaw7dLPuvkSoGT3QaQjkhlHBl8juwKbwBIyoBi0n5Owo3/+WAd3e2cZonzJsoSfrP+MEtACYpZCZPAqs4rdxxHPlKt7AdgPKY5zTgoYqzFJEQaufc9gSbbXhMvhi7hWtl/bcvlHqikD/CdtuTAPuUrq5pnqXJIVcPF/enbYrx3KLYpz6PKN18NXM9Rixe+52edhHv8MsnHbGbNOSeHQeUdq3+7n9emw7mfreRNdTFI0gK/f6n/h+4f7X8Mp6f8cJeRq4VwTvB303OGiWDYak+LbfW+bXw0Gt7P8S5FR/KOP5sP29MENN3/d3bfmN+NP4ddogbN131nb3uXD1ygK2Ow6TacwvPnGHptj8Tt1fy0fH2/F+Cm8J1ejxGqZC9Foinl/8qPwHkZfNumykd4N6/knMc9HUX/w1IT531d3c3rbXnVecjrM4dhYScI0X9wDFtVSjUd4qQ1lv5B4X16UhUTGsnT1U6VRXAAVelftUtLi51KASOTLZu7W9V7QanquZTWCQd21La/nug35n+e27aEXtCsN2rE4odhndElULKWyu/l5nyBOfA40gswoWI7XwPV3EC+RQFpIJ/JwMMphxqSKt61mM3CavUZQdwO3V++3mz1r4ASB1xr0vb6ja2MmbuhNFiwFZJWCO1LEZ5Z1pOATwCQloGRezTmXg86FLMkjKnIR27UC1Sjk8iLIlBb7jttumJwkaQyKsJmwKI+hlq7TskAm3/06BsK8tBKOU5YJFNvlMXwzy9NvVUGkT0SUA1cp9UA2Fc7cSFaVz6u8G2dvrgo+yCOiTpusrsgI3jE5/vQyNGpa9hPzkljFfL/hDwEwPwNhvsPPPC3NPmJUkIP41S0rLw4pK92qv4+o9ljLiyIvO9pSkplJeNM2HducAs6l7j3N2ANQcw9hfuja2bM+iby3H/PLxZpOBRKQyPnTyuUH3hxT4OrNEcrzs/3og+YopKybgK04Z+vH8mmiGL/7esE+Vn7S/F3+bFgWvbTrDNZBHJmnfGgIQldqpS6YpzemAzMJS6QisuwQ/BzAueDHxn2R91yEnKZFLuDtL5qSuo6OMGY5FeGlXhoO5bfkKZ5S8F+cXsGUEv98Z2/5m3f2r9H1VAphgvS9L/lvZ4OU44JBV0+DkktH38onqAxOVwdy/0zwUPHbQdByet5g6L6v+MeZdF+ZX1sOanp6Hrr/Ag==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS_NO_STREAMS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">5640C61726AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:5640C61726AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:0740723726AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0740723726AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0740723726AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/01/31 22:19:17</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:5640C61726AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/01/31 22:19:19</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:5640C61726AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">5640C61726AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:5640C61726AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80373</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP_CS_1</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_85108 - StreamListView - PORTALCS - Account has single deleted stream and a single active stream - 200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="4b1796a8-585f-4264-a7ba-d8a39f3e2557"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="cee69fe6-29aa-4c8d-a29e-c846490fe654"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");
tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="d9118600-46e9-4c4a-aa14-3f589157b294"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="bb4ffa34-5230-4efa-8263-415f45c7ebea" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="678d75dd-1e2b-4996-b3e0-bd4998b2bf88"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="ed99e71d-3076-40da-b684-355cbef6e6ba"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamDelete" id="46420f42-ac56-4077-89f9-2a7dd023e519"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

int i = tC.getPropertyValue("deletedCreateCount").toInteger();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	i++;
	tC.setPropertyValue("deletedCreateCount",i.toString());
	tC.setPropertyValue("expectDBStatus","deleted");
	tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamDelete")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Invoke StreamCreate again if Required" id="ac207395-1f3a-4404-9a0d-3448a2c5b960"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();

def loopuntil = tC.getPropertyValue("loopuntil").toInteger();
def counter   = tC.getPropertyValue("counter").toInteger();

counter++;

if (counter &lt;= loopuntil) {
	tC.setPropertyValue("counter",counter.toString());
	testRunner.gotoStepByName("Call StreamCreate");
} 





</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTALCS" id="11f7569b-143b-4d00-8136-fc7b127cedcf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portalcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="0492aa03-8f8d-4933-acc7-a800d05b1823"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="31f2ca7c-bfd0-449d-b30d-84116e6f4e45" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="0e6eaf1a-9d0a-46a9-bdb5-c4b1f46f2db0" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9AA79C9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZbc9o4FH7vr/C4jx3jC+ZiT2DGENi6CaQFGrp52RHyAZTYkmPJhvTXr2RiAoRk053JDNHx0Xe+c9EnXXCUxI4fcA6ZIIxq4WVH/8ezPORGi7rhLequ4doOMhZWq2k0LWeBHIiakePpWsh5DiHlAlHR0R3Ldg3LNur2zLH9hufb9ZprN+907RYyLqGlS83StW0SU+6XYTt6nlGfIU64T1EC3BfYnwaja196+qjipHcvdizLgFl3LUTqmyauRYAhjnENs8S8MI98LiLuT8mKIpFn8Bwz4h39ee9ms6lt6jWWrUzHsizT8kzpE3Gy+qx3P1WbIQrpku3WfUQZJRjF5DdSpEYg1izSgnjFMiLWyRvQtmlbCtqALTaw7dLPuvkSoGT3QaQjkhlHBl8juwKbwBIyoBi0n5Owo3/+WAd3e2cZonzJsoSfrP+MEtACYpZCZPAqs4rdxxHPlKt7AdgPKY5zTgoYqzFJEQaufc9gSbbXhMvhi7hWtl/bcvlHqikD/CdtuTAPuUrq5pnqXJIVcPF/enbYrx3KLYpz6PKN18NXM9Rixe+52edhHv8MsnHbGbNOSeHQeUdq3+7n9emw7mfreRNdTFI0gK/f6n/h+4f7X8Mp6f8cJeRq4VwTvB303OGiWDYak+LbfW+bXw0Gt7P8S5FR/KOP5sP29MENN3/d3bfmN+NP4ddogbN131nb3uXD1ygK2Ow6TacwvPnGHptj8Tt1fy0fH2/F+Cm8J1ejxGqZC9Foinl/8qPwHkZfNumykd4N6/knMc9HUX/w1IT531d3c3rbXnVecjrM4dhYScI0X9wDFtVSjUd4qQ1lv5B4X16UhUTGsnT1U6VRXAAVelftUtLi51KASOTLZu7W9V7QanquZTWCQd21La/nug35n+e27aEXtCsN2rE4odhndElULKWyu/l5nyBOfA40gswoWI7XwPV3EC+RQFpIJ/JwMMphxqSKt61mM3CavUZQdwO3V++3mz1r4ASB1xr0vb6ja2MmbuhNFiwFZJWCO1LEZ5Z1pOATwCQloGRezTmXg86FLMkjKnIR27UC1Sjk8iLIlBb7jttumJwkaQyKsJmwKI+hlq7TskAm3/06BsK8tBKOU5YJFNvlMXwzy9NvVUGkT0SUA1cp9UA2Fc7cSFaVz6u8G2dvrgo+yCOiTpusrsgI3jE5/vQyNGpa9hPzkljFfL/hDwEwPwNhvsPPPC3NPmJUkIP41S0rLw4pK92qv4+o9ljLiyIvO9pSkplJeNM2HducAs6l7j3N2ANQcw9hfuja2bM+iby3H/PLxZpOBRKQyPnTyuUH3hxT4OrNEcrzs/3og+YopKybgK04Z+vH8mmiGL/7esE+Vn7S/F3+bFgWvbTrDNZBHJmnfGgIQldqpS6YpzemAzMJS6QisuwQ/BzAueDHxn2R91yEnKZFLuDtL5qSuo6OMGY5FeGlXhoO5bfkKZ5S8F+cXsGUEv98Z2/5m3f2r9H1VAphgvS9L/lvZ4OU44JBV0+DkktH38onqAxOVwdy/0zwUPHbQdByet5g6L6v+MeZdF+ZX1sOanp6Hrr/Ag==</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportalcs1</con:value></con:property><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3740EC4926AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:3740EC4926AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">18409A0A26AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:18409A0A26AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:E740166926AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:18409A0A26AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E740166926AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">18409A0A26AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140131_04592</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4BA7894005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/01/31 22:19:26</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:3740EC4926AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/01/31 22:19:28</con:value></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/01/31 22:19:28</con:value></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:3740EC4926AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:3740EC4926AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3740EC4926AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:3740EC4926AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80374</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP_CS_1</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_85123 - StreamListView - PORTALCS - Verify stream order based on STREAM_DATA.CREATED_DATE - 200 OK_Duplicate" searchProperties="true" id="91551d7a-4326-4a55-bcc3-eba80f892b0f" disabled="true"><con:description> This test case will verify the returned stream list will be order by the stream's STREAM_DATA.CREATED_DATE column; descending order.

1.      All Streams in the list bust be sorted by Stream_Data.created_date in descending order, that is recent one will be first in the returned list. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="84dde8f3-344d-4979-900d-de5c5380eb22"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","12");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish User Context" id="df97b69e-5fb2-4bff-9574-50ce1704c5d7" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def uArray = tP.getPropertyValue("userPropertyNameArray").toString().split(",");

if (tC.getPropertyValue("userIndex") == null) {
	tC.setPropertyValue("userIndex","0")
}

int userIndex = tC.getPropertyValue("userIndex").toInteger();

String userPropName = uArray[userIndex];
String userName = tP.getPropertyValue(userPropName);

assert userName.length() > 0;

tC.setPropertyValue("username", userName);
tC.setPropertyValue("password","testing");
tC.setPropertyValue("userIndex",userIndex.toString());

log.info "userPropName[$userPropName] - userName[$userName]";




</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="6f008b21-6030-4ee5-bab9-3b1986fab6f9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Purge Account Stream Handles" id="9ff1ec21-e7a2-41d0-93d4-9ac828d406b9" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {
	a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
	a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="0b80b9b8-1834-4870-b166-c5f2ab975770"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="485451cb-1a33-4a70-9859-69a3e59a15f8"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Random delay milliseconds" id="bf22e800-beab-4149-b5cd-7793e3c9ceb2"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

Random rand = new Random();

def v = rand.nextInt((10000-5000)+1)+5000;

tC.setPropertyValue("delay",v.toString());


</script></con:config></con:testStep><con:testStep type="delay" name="Delay I" id="96919445-dccf-4ce9-8d24-5ceb46a06fb8"><con:settings/><con:config><delay>${#TestCase#delay}</delay></con:config></con:testStep><con:testStep type="groovy" name="Increment loop counter &amp; save Stream Handle" id="4ea02a1e-cd66-4a92-b802-37c51874adfb"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();

def loopuntil = tC.getPropertyValue("loopuntil").toInteger();
def counter   = tC.getPropertyValue("counter").toInteger();

counter++;

if (counter &lt;= loopuntil) {
	tC.setPropertyValue("counter",counter.toString());
	testRunner.gotoStepByName("Call RightsTokenCreate");
} 





</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTALCS" id="6fe801d6-22ca-4d38-b8bf-b359a671256d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","portalcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="f1988899-3472-4994-8dfb-65922ededc8a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="29e87828-67e8-4bf7-8c0c-b6bcb01dc246" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="bc62aa40-4fc5-4a46-a3c1-8360845741b8" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportalcs1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140131_04592</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:8D400CAD46AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9AA79C9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4BA7894005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZbc9o4FH7vr/C4jx3jC+ZiT2DGENi6CaQFGrp52RHyAZTYkmPJhvTXr2RiAoRk053JDNHx0Xe+c9EnXXCUxI4fcA6ZIIxq4WVH/8ezPORGi7rhLequ4doOMhZWq2k0LWeBHIiakePpWsh5DiHlAlHR0R3Ldg3LNur2zLH9hufb9ZprN+907RYyLqGlS83StW0SU+6XYTt6nlGfIU64T1EC3BfYnwaja196+qjipHcvdizLgFl3LUTqmyauRYAhjnENs8S8MI98LiLuT8mKIpFn8Bwz4h39ee9ms6lt6jWWrUzHsizT8kzpE3Gy+qx3P1WbIQrpku3WfUQZJRjF5DdSpEYg1izSgnjFMiLWyRvQtmlbCtqALTaw7dLPuvkSoGT3QaQjkhlHBl8juwKbwBIyoBi0n5Owo3/+WAd3e2cZonzJsoSfrP+MEtACYpZCZPAqs4rdxxHPlKt7AdgPKY5zTgoYqzFJEQaufc9gSbbXhMvhi7hWtl/bcvlHqikD/CdtuTAPuUrq5pnqXJIVcPF/enbYrx3KLYpz6PKN18NXM9Rixe+52edhHv8MsnHbGbNOSeHQeUdq3+7n9emw7mfreRNdTFI0gK/f6n/h+4f7X8Mp6f8cJeRq4VwTvB303OGiWDYak+LbfW+bXw0Gt7P8S5FR/KOP5sP29MENN3/d3bfmN+NP4ddogbN131nb3uXD1ygK2Ow6TacwvPnGHptj8Tt1fy0fH2/F+Cm8J1ejxGqZC9Foinl/8qPwHkZfNumykd4N6/knMc9HUX/w1IT531d3c3rbXnVecjrM4dhYScI0X9wDFtVSjUd4qQ1lv5B4X16UhUTGsnT1U6VRXAAVelftUtLi51KASOTLZu7W9V7QanquZTWCQd21La/nug35n+e27aEXtCsN2rE4odhndElULKWyu/l5nyBOfA40gswoWI7XwPV3EC+RQFpIJ/JwMMphxqSKt61mM3CavUZQdwO3V++3mz1r4ASB1xr0vb6ja2MmbuhNFiwFZJWCO1LEZ5Z1pOATwCQloGRezTmXg86FLMkjKnIR27UC1Sjk8iLIlBb7jttumJwkaQyKsJmwKI+hlq7TskAm3/06BsK8tBKOU5YJFNvlMXwzy9NvVUGkT0SUA1cp9UA2Fc7cSFaVz6u8G2dvrgo+yCOiTpusrsgI3jE5/vQyNGpa9hPzkljFfL/hDwEwPwNhvsPPPC3NPmJUkIP41S0rLw4pK92qv4+o9ljLiyIvO9pSkplJeNM2HducAs6l7j3N2ANQcw9hfuja2bM+iby3H/PLxZpOBRKQyPnTyuUH3hxT4OrNEcrzs/3og+YopKybgK04Z+vH8mmiGL/7esE+Vn7S/F3+bFgWvbTrDNZBHJmnfGgIQldqpS6YpzemAzMJS6QisuwQ/BzAueDHxn2R91yEnKZFLuDtL5qSuo6OMGY5FeGlXhoO5bfkKZ5S8F+cXsGUEv98Z2/5m3f2r9H1VAphgvS9L/lvZ4OU44JBV0+DkktH38onqAxOVwdy/0zwUPHbQdByet5g6L6v+MeZdF+ZX1sOanp6Hrr/Ag==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">12</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">12</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">7B403BC236AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:7B403BC236AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">8D400CAD46AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>delay</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9442</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:2C4090E236AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:4C40066536AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:6C40216736AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenFULL_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBStatus_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">12</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">12</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2C4090E236AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/01/31 22:20:05</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:7B403BC236AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4C40066536AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/01/31 22:20:15</con:value></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:7B403BC236AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">6C40216736AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedTime_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/01/31 22:20:23</con:value></con:property><con:property><con:name>expectRequestingUser_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:7B403BC236AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:7B403BC236AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">7B403BC236AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:7B403BC236AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80388</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandleFULL_4</con:name><con:value>urn:dece:streamhandleid:org:dece:8C40583A36AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle_4</con:name><con:value>8C40583A36AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectNickname_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_4</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy_4</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_4</con:name><con:value>2014/01/31 22:20:35</con:value></con:property><con:property><con:name>expectRequestingUser_4</con:name><con:value>urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_4</con:name><con:value>urn:dece:rightstokenid:org:dece:7B403BC236AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_4</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>streamhandleFULL_5</con:name><con:value>urn:dece:streamhandleid:org:dece:AC40703C36AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle_5</con:name><con:value>AC40703C36AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectNickname_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_5</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy_5</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_5</con:name><con:value>2014/01/31 22:20:43</con:value></con:property><con:property><con:name>expectRequestingUser_5</con:name><con:value>urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_5</con:name><con:value>urn:dece:rightstokenid:org:dece:7B403BC236AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_5</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>streamhandleFULL_6</con:name><con:value>urn:dece:streamhandleid:org:dece:CC406EDE36AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle_6</con:name><con:value>CC406EDE36AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectNickname_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_6</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy_6</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_6</con:name><con:value>2014/01/31 22:20:54</con:value></con:property><con:property><con:name>expectRequestingUser_6</con:name><con:value>urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_6</con:name><con:value>urn:dece:rightstokenid:org:dece:7B403BC236AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_6</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>streamhandleFULL_7</con:name><con:value>urn:dece:streamhandleid:org:dece:EC40FE5146AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle_7</con:name><con:value>EC40FE5146AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectNickname_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_7</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy_7</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_7</con:name><con:value>2014/01/31 22:21:04</con:value></con:property><con:property><con:name>expectRequestingUser_7</con:name><con:value>urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_7</con:name><con:value>urn:dece:rightstokenid:org:dece:7B403BC236AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_7</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>streamhandleFULL_8</con:name><con:value>urn:dece:streamhandleid:org:dece:0D40A55346AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle_8</con:name><con:value>0D40A55346AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectNickname_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_8</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy_8</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_8</con:name><con:value>2014/01/31 22:21:12</con:value></con:property><con:property><con:name>expectRequestingUser_8</con:name><con:value>urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_8</con:name><con:value>urn:dece:rightstokenid:org:dece:7B403BC236AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_8</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>streamhandleFULL_9</con:name><con:value>urn:dece:streamhandleid:org:dece:2D40BC2646AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle_9</con:name><con:value>2D40BC2646AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectNickname_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_9</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy_9</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_9</con:name><con:value>2014/01/31 22:21:24</con:value></con:property><con:property><con:name>expectRequestingUser_9</con:name><con:value>urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_9</con:name><con:value>urn:dece:rightstokenid:org:dece:7B403BC236AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_9</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>streamhandleFULL_10</con:name><con:value>urn:dece:streamhandleid:org:dece:4D40906846AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle_10</con:name><con:value>4D40906846AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectNickname_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_10</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy_10</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_10</con:name><con:value>2014/01/31 22:21:33</con:value></con:property><con:property><con:name>expectRequestingUser_10</con:name><con:value>urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_10</con:name><con:value>urn:dece:rightstokenid:org:dece:7B403BC236AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_10</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>streamhandleFULL_11</con:name><con:value>urn:dece:streamhandleid:org:dece:6D4083EA46AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle_11</con:name><con:value>6D4083EA46AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectNickname_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_11</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy_11</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_11</con:name><con:value>2014/01/31 22:21:43</con:value></con:property><con:property><con:name>expectRequestingUser_11</con:name><con:value>urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_11</con:name><con:value>urn:dece:rightstokenid:org:dece:7B403BC236AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_11</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>streamhandleFULL_12</con:name><con:value>urn:dece:streamhandleid:org:dece:8D400CAD46AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle_12</con:name><con:value>8D400CAD46AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectNickname_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_12</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy_12</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_12</con:name><con:value>2014/01/31 22:21:54</con:value></con:property><con:property><con:name>expectRequestingUser_12</con:name><con:value>urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_12</con:name><con:value>urn:dece:rightstokenid:org:dece:7B403BC236AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_12</con:name><con:value>dlpcs</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_85124 - StreamListView - PORTALCS - Active stream associated with RIGHTS_TOKEN.STATUS_ID of deleted is displayed - 200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="88cc00cb-9398-45aa-b659-d08fb712b0a7"><con:description> This test case will verify that an active stream associated with a RightsToken that has a status of deleted will still be returned. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="9d3fe85b-75d0-49f6-a2b4-79ab9c3b037c"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="bc49a8ff-e297-475b-814b-2b5d627000a6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="507c23b2-7c39-4611-8586-cb48bead0f30" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="c5bab3aa-0dbf-4cca-b1f2-ce7831d27f2f"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="d7eea2dd-4abe-48ed-91b0-5b11544bc1f6"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Set RIGHTS_TOKEN.STATUS to 'deleted'" id="d85c879d-5d55-4a43-af6f-a182c372ab9d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def rt = tC.getPropertyValue("rightstokenid");

a = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

assert a.rightsTokenSetStatusDeleted(rt) == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTALCS" id="9b90c932-4afd-4256-b871-8ed218e4765d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portalcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="b51a3f6e-474e-46be-b05d-c6b27f967c6c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="a66c6e8f-a1fa-4997-beb9-12c20272314d" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="be3b64ac-113c-49bd-bbe4-7bc1f8a4a159" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="f4d4393f-44ff-498b-a653-98553271b5e0" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportalcs1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140131_04592</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:5E40FB1256AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9AA79C9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4BA7894005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZbc9o4FH7vr/C4jx3jC+ZiT2DGENi6CaQFGrp52RHyAZTYkmPJhvTXr2RiAoRk053JDNHx0Xe+c9EnXXCUxI4fcA6ZIIxq4WVH/8ezPORGi7rhLequ4doOMhZWq2k0LWeBHIiakePpWsh5DiHlAlHR0R3Ldg3LNur2zLH9hufb9ZprN+907RYyLqGlS83StW0SU+6XYTt6nlGfIU64T1EC3BfYnwaja196+qjipHcvdizLgFl3LUTqmyauRYAhjnENs8S8MI98LiLuT8mKIpFn8Bwz4h39ee9ms6lt6jWWrUzHsizT8kzpE3Gy+qx3P1WbIQrpku3WfUQZJRjF5DdSpEYg1izSgnjFMiLWyRvQtmlbCtqALTaw7dLPuvkSoGT3QaQjkhlHBl8juwKbwBIyoBi0n5Owo3/+WAd3e2cZonzJsoSfrP+MEtACYpZCZPAqs4rdxxHPlKt7AdgPKY5zTgoYqzFJEQaufc9gSbbXhMvhi7hWtl/bcvlHqikD/CdtuTAPuUrq5pnqXJIVcPF/enbYrx3KLYpz6PKN18NXM9Rixe+52edhHv8MsnHbGbNOSeHQeUdq3+7n9emw7mfreRNdTFI0gK/f6n/h+4f7X8Mp6f8cJeRq4VwTvB303OGiWDYak+LbfW+bXw0Gt7P8S5FR/KOP5sP29MENN3/d3bfmN+NP4ddogbN131nb3uXD1ygK2Ow6TacwvPnGHptj8Tt1fy0fH2/F+Cm8J1ejxGqZC9Foinl/8qPwHkZfNumykd4N6/knMc9HUX/w1IT531d3c3rbXnVecjrM4dhYScI0X9wDFtVSjUd4qQ1lv5B4X16UhUTGsnT1U6VRXAAVelftUtLi51KASOTLZu7W9V7QanquZTWCQd21La/nug35n+e27aEXtCsN2rE4odhndElULKWyu/l5nyBOfA40gswoWI7XwPV3EC+RQFpIJ/JwMMphxqSKt61mM3CavUZQdwO3V++3mz1r4ASB1xr0vb6ja2MmbuhNFiwFZJWCO1LEZ5Z1pOATwCQloGRezTmXg86FLMkjKnIR27UC1Sjk8iLIlBb7jttumJwkaQyKsJmwKI+hlq7TskAm3/06BsK8tBKOU5YJFNvlMXwzy9NvVUGkT0SUA1cp9UA2Fc7cSFaVz6u8G2dvrgo+yCOiTpusrsgI3jE5/vQyNGpa9hPzkljFfL/hDwEwPwNhvsPPPC3NPmJUkIP41S0rLw4pK92qv4+o9ljLiyIvO9pSkplJeNM2HducAs6l7j3N2ANQcw9hfuja2bM+iby3H/PLxZpOBRKQyPnTyuUH3hxT4OrNEcrzs/3og+YopKybgK04Z+vH8mmiGL/7esE+Vn7S/F3+bFgWvbTrDNZBHJmnfGgIQldqpS6YpzemAzMJS6QisuwQ/BzAueDHxn2R91yEnKZFLuDtL5qSuo6OMGY5FeGlXhoO5bfkKZ5S8F+cXsGUEv98Z2/5m3f2r9H1VAphgvS9L/lvZ4OU44JBV0+DkktH38onqAxOVwdy/0zwUPHbQdByet5g6L6v+MeZdF+ZX1sOanp6Hrr/Ag==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">AD40900256AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:AD40900256AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">5E40FB1256AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:5E40FB1256AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">5E40FB1256AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/01/31 22:22:13</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:AD40900256AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:AD40900256AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">AD40900256AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:AD40900256AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80389</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_85128 - StreamListView - PORTALCS - Active stream associated with RightsToken with RENTAL_ABSOLUTE_EXPIRATION expired - 200 OK" searchProperties="true" id="f8b2bdca-279f-4447-ba28-39f4182b6fa2"><con:description> This test case will verify that an active stream associated with a RightsToken that has expired is returned. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="9b472d42-b5b4-4ad7-b0b7-a3958ad95c0a"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="38d4d5c9-09af-44f0-a3c4-c2d0aed8708e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="6cc8436e-5a2f-48dc-a3b6-2279475b81e8" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="cf1eedf4-ea34-49d9-ac39-ccac9543e8ee"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="8867c90d-5f2f-4a83-a9e7-118b7d2e43c2"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Expire the RightsToken" id="0217211a-dbda-4171-9eac-56cd55ee2c69"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def rt = tC.getPropertyValue("rightstokenid");

a = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

assert a.rightsTokenExpireHours(rt,1) == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTALCS" id="5819af9c-56f1-4230-acf0-0ed15f50500a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portalcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="a05faf9c-045a-4329-b3c9-48089bf53436"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="7c072d29-e586-4575-ac87-b866b38e0eea" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="fa8b6df9-9386-44d8-a26a-ac0c6c0ae070" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="ac54ab59-d4e2-410f-947c-8f1abbcf1e19" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportalcs1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140131_04592</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:9150A11A56AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9AA79C9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4BA7894005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZbc9o4FH7vr/C4jx3jC+ZiT2DGENi6CaQFGrp52RHyAZTYkmPJhvTXr2RiAoRk053JDNHx0Xe+c9EnXXCUxI4fcA6ZIIxq4WVH/8ezPORGi7rhLequ4doOMhZWq2k0LWeBHIiakePpWsh5DiHlAlHR0R3Ldg3LNur2zLH9hufb9ZprN+907RYyLqGlS83StW0SU+6XYTt6nlGfIU64T1EC3BfYnwaja196+qjipHcvdizLgFl3LUTqmyauRYAhjnENs8S8MI98LiLuT8mKIpFn8Bwz4h39ee9ms6lt6jWWrUzHsizT8kzpE3Gy+qx3P1WbIQrpku3WfUQZJRjF5DdSpEYg1izSgnjFMiLWyRvQtmlbCtqALTaw7dLPuvkSoGT3QaQjkhlHBl8juwKbwBIyoBi0n5Owo3/+WAd3e2cZonzJsoSfrP+MEtACYpZCZPAqs4rdxxHPlKt7AdgPKY5zTgoYqzFJEQaufc9gSbbXhMvhi7hWtl/bcvlHqikD/CdtuTAPuUrq5pnqXJIVcPF/enbYrx3KLYpz6PKN18NXM9Rixe+52edhHv8MsnHbGbNOSeHQeUdq3+7n9emw7mfreRNdTFI0gK/f6n/h+4f7X8Mp6f8cJeRq4VwTvB303OGiWDYak+LbfW+bXw0Gt7P8S5FR/KOP5sP29MENN3/d3bfmN+NP4ddogbN131nb3uXD1ygK2Ow6TacwvPnGHptj8Tt1fy0fH2/F+Cm8J1ejxGqZC9Foinl/8qPwHkZfNumykd4N6/knMc9HUX/w1IT531d3c3rbXnVecjrM4dhYScI0X9wDFtVSjUd4qQ1lv5B4X16UhUTGsnT1U6VRXAAVelftUtLi51KASOTLZu7W9V7QanquZTWCQd21La/nug35n+e27aEXtCsN2rE4odhndElULKWyu/l5nyBOfA40gswoWI7XwPV3EC+RQFpIJ/JwMMphxqSKt61mM3CavUZQdwO3V++3mz1r4ASB1xr0vb6ja2MmbuhNFiwFZJWCO1LEZ5Z1pOATwCQloGRezTmXg86FLMkjKnIR27UC1Sjk8iLIlBb7jttumJwkaQyKsJmwKI+hlq7TskAm3/06BsK8tBKOU5YJFNvlMXwzy9NvVUGkT0SUA1cp9UA2Fc7cSFaVz6u8G2dvrgo+yCOiTpusrsgI3jE5/vQyNGpa9hPzkljFfL/hDwEwPwNhvsPPPC3NPmJUkIP41S0rLw4pK92qv4+o9ljLiyIvO9pSkplJeNM2HducAs6l7j3N2ANQcw9hfuja2bM+iby3H/PLxZpOBRKQyPnTyuUH3hxT4OrNEcrzs/3og+YopKybgK04Z+vH8mmiGL/7esE+Vn7S/F3+bFgWvbTrDNZBHJmnfGgIQldqpS6YpzemAzMJS6QisuwQ/BzAueDHxn2R91yEnKZFLuDtL5qSuo6OMGY5FeGlXhoO5bfkKZ5S8F+cXsGUEv98Z2/5m3f2r9H1VAphgvS9L/lvZ4OU44JBV0+DkktH38onqAxOVwdy/0zwUPHbQdByet5g6L6v+MeZdF+ZX1sOanp6Hrr/Ag==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E05010F956AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:E05010F956AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9150A11A56AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:9150A11A56AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9150A11A56AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/01/31 22:22:45</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:E05010F956AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:E05010F956AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E05010F956AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:E05010F956AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80393</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_85150 - StreamListView - PORTALCS - &lt;StreamClientNickname> verification when value is NULL - 200 OK" searchProperties="true" id="c51145ff-2170-40cd-9fe0-06af805490de"><con:description> This test case will verify that an active stream associated with a RightsToken that has expired is returned. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="2c967e76-36c9-48ab-ba69-da49c03855a6"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="3696465c-20bf-4f4c-8430-9582e9c27089"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="be3a1ad8-b741-4643-a646-7adb16fad725" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="530223a0-c597-4e75-bf52-084de92dd656"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="5d20cad4-1d06-47ca-942b-695eb42d6f53"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTALCS" id="aafcc08e-f2c7-49be-827e-99dc11f77641"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portalcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="5412671d-4715-4a17-adc9-d8f7d6a325eb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="620068af-684d-49e3-8e2b-092e8e10fb0d" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="6127bd67-d270-44fd-a1b7-24b08e5c28c5" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="0eaae734-3471-4a9d-9890-34f23db65762" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportalcs1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140131_04592</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:D450246266AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9AA79C9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4BA7894005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZbc9o4FH7vr/C4jx3jC+ZiT2DGENi6CaQFGrp52RHyAZTYkmPJhvTXr2RiAoRk053JDNHx0Xe+c9EnXXCUxI4fcA6ZIIxq4WVH/8ezPORGi7rhLequ4doOMhZWq2k0LWeBHIiakePpWsh5DiHlAlHR0R3Ldg3LNur2zLH9hufb9ZprN+907RYyLqGlS83StW0SU+6XYTt6nlGfIU64T1EC3BfYnwaja196+qjipHcvdizLgFl3LUTqmyauRYAhjnENs8S8MI98LiLuT8mKIpFn8Bwz4h39ee9ms6lt6jWWrUzHsizT8kzpE3Gy+qx3P1WbIQrpku3WfUQZJRjF5DdSpEYg1izSgnjFMiLWyRvQtmlbCtqALTaw7dLPuvkSoGT3QaQjkhlHBl8juwKbwBIyoBi0n5Owo3/+WAd3e2cZonzJsoSfrP+MEtACYpZCZPAqs4rdxxHPlKt7AdgPKY5zTgoYqzFJEQaufc9gSbbXhMvhi7hWtl/bcvlHqikD/CdtuTAPuUrq5pnqXJIVcPF/enbYrx3KLYpz6PKN18NXM9Rixe+52edhHv8MsnHbGbNOSeHQeUdq3+7n9emw7mfreRNdTFI0gK/f6n/h+4f7X8Mp6f8cJeRq4VwTvB303OGiWDYak+LbfW+bXw0Gt7P8S5FR/KOP5sP29MENN3/d3bfmN+NP4ddogbN131nb3uXD1ygK2Ow6TacwvPnGHptj8Tt1fy0fH2/F+Cm8J1ejxGqZC9Foinl/8qPwHkZfNumykd4N6/knMc9HUX/w1IT531d3c3rbXnVecjrM4dhYScI0X9wDFtVSjUd4qQ1lv5B4X16UhUTGsnT1U6VRXAAVelftUtLi51KASOTLZu7W9V7QanquZTWCQd21La/nug35n+e27aEXtCsN2rE4odhndElULKWyu/l5nyBOfA40gswoWI7XwPV3EC+RQFpIJ/JwMMphxqSKt61mM3CavUZQdwO3V++3mz1r4ASB1xr0vb6ja2MmbuhNFiwFZJWCO1LEZ5Z1pOATwCQloGRezTmXg86FLMkjKnIR27UC1Sjk8iLIlBb7jttumJwkaQyKsJmwKI+hlq7TskAm3/06BsK8tBKOU5YJFNvlMXwzy9NvVUGkT0SUA1cp9UA2Fc7cSFaVz6u8G2dvrgo+yCOiTpusrsgI3jE5/vQyNGpa9hPzkljFfL/hDwEwPwNhvsPPPC3NPmJUkIP41S0rLw4pK92qv4+o9ljLiyIvO9pSkplJeNM2HducAs6l7j3N2ANQcw9hfuja2bM+iby3H/PLxZpOBRKQyPnTyuUH3hxT4OrNEcrzs/3og+YopKybgK04Z+vH8mmiGL/7esE+Vn7S/F3+bFgWvbTrDNZBHJmnfGgIQldqpS6YpzemAzMJS6QisuwQ/BzAueDHxn2R91yEnKZFLuDtL5qSuo6OMGY5FeGlXhoO5bfkKZ5S8F+cXsGUEv98Z2/5m3f2r9H1VAphgvS9L/lvZ4OU44JBV0+DkktH38onqAxOVwdy/0zwUPHbQdByet5g6L6v+MeZdF+ZX1sOanp6Hrr/Ag==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2450E74266AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:2450E74266AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">D450246266AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:D450246266AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">D450246266AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/01/31 22:23:19</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:2450E74266AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:2450E74266AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2450E74266AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:2450E74266AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_85151 - StreamListView - PORTALCS - &lt;StreamClientNickname> verification when value is single character - 200 OK" searchProperties="true" id="1b0de479-db05-4434-bd44-8fa3debe0444"><con:description> This test case will verify that an active stream associated with a RightsToken that has expired is returned. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="e5211c75-6cdd-4bda-b9ca-ed4e1567645b"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("nickname","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="366787c8-8743-4a4e-bbd6-126974c0d617"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="8ec6bab6-666d-4e3a-bc7d-461804169387" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="378f136c-acd3-406c-a50d-b9966634b592"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="11a79f32-76fb-417b-8d04-86e2cd411c04"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
tC.setPropertyValue("nickname","a");
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTALCS" id="18739d4d-db64-4234-9e41-e6b03a36a7bc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portalcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="00803b9b-72da-46c9-bcbc-d8dc16823149"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="bd0e29ba-c0af-44c7-97e5-e31c749a5ce3" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="6e887258-ff6b-4cc2-9c17-d75bd8354130" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="5ff4534f-7f85-4682-a0eb-cd4aa842b6c7" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4BA7894005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140131_04592</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">10</con:value></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">C6500A9376AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C6500A9376AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C6500A9376AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">C6500A9376AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F450611566AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F450611566AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">,</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F450611566AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">,</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/01/31 22:24:30</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:ECB7ABA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ECB7ABA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZhc6I8EP5+v4KhHzsYUKjAVGdQ9D162nbEdq790okhaO4gKAlq++svwULV2l7vnemMzbLZfTb75NlcMpgmTddjDOecZFQJ/I761G7HcTQzZpo5m8WaGRm2BhGMtdaFFbV1y4pbqK0qAWMFDijjkPKO2tQNU9MNrWVMm4ZrOa6lN+y2/agq9zhnIrRwaeiqsk0TytwybUctcupmkBHmUphi5nLkht545ApPF1aY1O7lDmWZMO8uOF+6AKBGhBFOEtRAWQouwYHPZcTckMwp5EWOX3NGrKO+7t1sNo1Nq5Hlc9DUdR3oDhA+ESPzM7X7rdqMo4DG2W7dhzSjBMGEvEAJaoz5IosUL5lnOeGL9IPQBjB0GVrDW6Qhw6RnKnhLUKL7YqQDkDmDGltAowo2wTHOMUVYuZsEHfXsax3c7Z3mkLI4y1N2tP43SJiucZItcaSxqrIK3dcjnjiu7iVGbkBRUjCyxteSJkuIMFNucxyT7YgwQb6IKWX7lS0Tf6RiGUb/0pZLsI9VQAcnTscnc8z4/+nZfr92Ue5hUuCuxV+mqZ5PiKEn8OV5SV9G4WTtBw4ad0oI+847UHW7X9fHZK259brpPg34Q5sO47F957/0m/p2yl6Ig4k9+uGc/8zw98EEzuD3lJDzx6sr55aNLKQLBi05c8YPtOXPL3ogX26aj5NvKNn8DkM0Au2h9WCdXxf+dmJfB/ZVcP1wMR5ezVfPv/h1MfvVIr3obrUenjvbHGzu2tD7AVa+TaMBGNxsb6bhwv52bzxMHi+Q6UT/oazHbuP5oPNW034Nh8ZKEkKRByNeLSU9Al8Zin5B/rm8SAuJtLh0dZdSoxjHlKtduUtKi1sIASKRK5q5W+t+r90aeuL+eIOWaehOzzQt8Z9j2sbQ8exKg3YojiD2MxoTmUuq7I4/nwNEqcswjXCurbMCLTBTP4noQw6VgE7E5cgow9NMqLjXtwyzfTEcXAz6rUG/r/d0x/KbltFvej3T9lTlOuM39Cb3Yo7zSsGbQsSnun6g4BOMyJJgKfOS50wQnXFxJCu4LnhiNNawQXEhBkEutdhtmrYFGEmXCZaAQZpFRYIby8WyPCDAdr9NIUmstPojL7x96odPRnkNP6zy+Ft1IMInItKByZJ6WDQVn5hIZlXPu7qtk5OrCu8VEZG3TZwuzwnaITn89EYayZaaMW+FVcjrDceGg+DguK46X7QmqGZ/PbaF6gtN6FbNWcHGqlGs10XZjrbUu1yEBwZoGiDEqBCi9TzNfmMK6hDgSzOjRn2UubYf4iv4goYccpwK8ijl8gsPhhAz+WAIBPm3X32NHKQU58bxlp+y9RPxrpCIP316IBdJP2G+FT+bLI/e2nUi1l4eUad4JXBC53Ilp8PzB9xAmQhLhJxl+X7wUwFOJT801odcY+GCTbOC44+/KFKnOipEKCsoD3y1NOxrZ4mTPy+x++b0Lkypz68Dd8s+HLg/x6NQqFgK1dqX/N1ZIyVdEFblXC+xdNSteD+K5HS+p9WvAPfletDvtb3e3+X6sJLuO/N7y96ZHt+H7h8=</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9AA79C9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F450611566AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F450611566AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:F450611566AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_85152 - StreamListView - PORTALCS - &lt;StreamClientNickname> verification when value is max allowed - 200 OK" searchProperties="true" id="e2dfb134-e582-4e22-bca5-d8873b0f076a"><con:description> This test case will verify that an active stream associated with a RightsToken that has expired is returned. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="dc2c2eca-6c32-4110-8ca4-fbcf6a202c0f"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("nickname",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="b59fb49b-dcbf-4589-b621-d37275ecf8b2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="f209f251-a7f2-427b-b728-07cdfa2d5891" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="7bb2a22e-498c-4fd7-a1fc-75e99f489fc1"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="74d9ce29-e9b8-47d1-a700-3d8f7324209e"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
tC.setPropertyValue("nickname","8888-ertr-8888-ertr-8888-ertr-8888-ertr-8888-ertr-8888-ertr-uuuu");
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTALCS" id="f3c601a2-0a54-497d-a1a7-7aa8aef70268"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portalcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="f6704a5a-a855-41b3-9008-246e7b477eaa"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="f605a88c-8a4c-45fb-9f83-eb292a38279c" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="289b0106-384a-4e58-89b1-495d3d7e6f3f" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="536caf49-66fe-4366-b0d2-629ca9be0533" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140131_04592</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:1850924C76AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9AA79C9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4BA7894005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZhc6I8EP5+v4KhHzsYUKjAVGdQ9D162nbEdq790okhaO4gKAlq++svwULV2l7vnemMzbLZfTb75NlcMpgmTddjDOecZFQJ/I761G7HcTQzZpo5m8WaGRm2BhGMtdaFFbV1y4pbqK0qAWMFDijjkPKO2tQNU9MNrWVMm4ZrOa6lN+y2/agq9zhnIrRwaeiqsk0TytwybUctcupmkBHmUphi5nLkht545ApPF1aY1O7lDmWZMO8uOF+6AKBGhBFOEtRAWQouwYHPZcTckMwp5EWOX3NGrKO+7t1sNo1Nq5Hlc9DUdR3oDhA+ESPzM7X7rdqMo4DG2W7dhzSjBMGEvEAJaoz5IosUL5lnOeGL9IPQBjB0GVrDW6Qhw6RnKnhLUKL7YqQDkDmDGltAowo2wTHOMUVYuZsEHfXsax3c7Z3mkLI4y1N2tP43SJiucZItcaSxqrIK3dcjnjiu7iVGbkBRUjCyxteSJkuIMFNucxyT7YgwQb6IKWX7lS0Tf6RiGUb/0pZLsI9VQAcnTscnc8z4/+nZfr92Ue5hUuCuxV+mqZ5PiKEn8OV5SV9G4WTtBw4ad0oI+847UHW7X9fHZK259brpPg34Q5sO47F957/0m/p2yl6Ig4k9+uGc/8zw98EEzuD3lJDzx6sr55aNLKQLBi05c8YPtOXPL3ogX26aj5NvKNn8DkM0Au2h9WCdXxf+dmJfB/ZVcP1wMR5ezVfPv/h1MfvVIr3obrUenjvbHGzu2tD7AVa+TaMBGNxsb6bhwv52bzxMHi+Q6UT/oazHbuP5oPNW034Nh8ZKEkKRByNeLSU9Al8Zin5B/rm8SAuJtLh0dZdSoxjHlKtduUtKi1sIASKRK5q5W+t+r90aeuL+eIOWaehOzzQt8Z9j2sbQ8exKg3YojiD2MxoTmUuq7I4/nwNEqcswjXCurbMCLTBTP4noQw6VgE7E5cgow9NMqLjXtwyzfTEcXAz6rUG/r/d0x/KbltFvej3T9lTlOuM39Cb3Yo7zSsGbQsSnun6g4BOMyJJgKfOS50wQnXFxJCu4LnhiNNawQXEhBkEutdhtmrYFGEmXCZaAQZpFRYIby8WyPCDAdr9NIUmstPojL7x96odPRnkNP6zy+Ft1IMInItKByZJ6WDQVn5hIZlXPu7qtk5OrCu8VEZG3TZwuzwnaITn89EYayZaaMW+FVcjrDceGg+DguK46X7QmqGZ/PbaF6gtN6FbNWcHGqlGs10XZjrbUu1yEBwZoGiDEqBCi9TzNfmMK6hDgSzOjRn2UubYf4iv4goYccpwK8ijl8gsPhhAz+WAIBPm3X32NHKQU58bxlp+y9RPxrpCIP316IBdJP2G+FT+bLI/e2nUi1l4eUad4JXBC53Ilp8PzB9xAmQhLhJxl+X7wUwFOJT801odcY+GCTbOC44+/KFKnOipEKCsoD3y1NOxrZ4mTPy+x++b0Lkypz68Dd8s+HLg/x6NQqFgK1dqX/N1ZIyVdEFblXC+xdNSteD+K5HS+p9WvAPfletDvtb3e3+X6sJLuO/N7y96ZHt+H7h8=</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ECB7ABA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:ECB7ABA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E65064C576AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:E65064C576AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>nickname</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">900abc-rr 900abc-rr 900abc-rr 900abc-rr 900abc-rr 900abc-rr 0000</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1850924C76AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:1850924C76AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">900abc-rr 900abc-rr 900abc-rr 900abc-rr 900abc-rr 900abc-rr 0000</con:value></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">5</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1850924C76AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/01/31 22:25:05</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:E65064C576AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:E65064C576AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E65064C576AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:E65064C576AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_85153 - StreamListView - PORTALCS - &lt;StreamClientNickname> verification when value contains XML-allowed special characters - 200 OK" searchProperties="true" id="15d7c28c-c721-42a3-a17e-03dadca0ae40"><con:description> This test case will verify that an active stream associated with a RightsToken that has expired is returned. </con:description><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="9dcdb739-cee8-440f-a069-db6fbb00eaf1"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="95e8f8fb-d82f-49eb-8f50-ccb2aeb6fc82"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="0d9388f2-dacf-4a27-80b8-831b8fcc3254" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="ab13f225-2a8b-44b3-9721-0b81afe043f9"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="a599f58b-c4b8-452f-9f66-b271a0078d9c"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
tC.setPropertyValue("nickname","John &amp;amp; Paul &amp;amp; George &amp;amp; Ringo");
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTALCS" id="7c654ad4-1acd-486c-a515-c2c049ce794c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portalcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="5aaca34f-8f3b-4ac5-9f76-694358630179"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" id="a146f7b7-b241-4d8c-bb12-6298fa0f1f3b"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="039fa15b-73f2-4831-a6c1-ec1d19059fb1" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="ed3e6093-21c3-4dcf-b1b9-19bf4b9873af" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="3ccd8875-56fa-4045-8d95-af5b77874499" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140131_04592</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:49501C7486AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9AA79C9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4BA7894005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZhc6I8EP5+v4KhHzsYUKjAVGdQ9D162nbEdq790okhaO4gKAlq++svwULV2l7vnemMzbLZfTb75NlcMpgmTddjDOecZFQJ/I761G7HcTQzZpo5m8WaGRm2BhGMtdaFFbV1y4pbqK0qAWMFDijjkPKO2tQNU9MNrWVMm4ZrOa6lN+y2/agq9zhnIrRwaeiqsk0TytwybUctcupmkBHmUphi5nLkht545ApPF1aY1O7lDmWZMO8uOF+6AKBGhBFOEtRAWQouwYHPZcTckMwp5EWOX3NGrKO+7t1sNo1Nq5Hlc9DUdR3oDhA+ESPzM7X7rdqMo4DG2W7dhzSjBMGEvEAJaoz5IosUL5lnOeGL9IPQBjB0GVrDW6Qhw6RnKnhLUKL7YqQDkDmDGltAowo2wTHOMUVYuZsEHfXsax3c7Z3mkLI4y1N2tP43SJiucZItcaSxqrIK3dcjnjiu7iVGbkBRUjCyxteSJkuIMFNucxyT7YgwQb6IKWX7lS0Tf6RiGUb/0pZLsI9VQAcnTscnc8z4/+nZfr92Ue5hUuCuxV+mqZ5PiKEn8OV5SV9G4WTtBw4ad0oI+847UHW7X9fHZK259brpPg34Q5sO47F957/0m/p2yl6Ig4k9+uGc/8zw98EEzuD3lJDzx6sr55aNLKQLBi05c8YPtOXPL3ogX26aj5NvKNn8DkM0Au2h9WCdXxf+dmJfB/ZVcP1wMR5ezVfPv/h1MfvVIr3obrUenjvbHGzu2tD7AVa+TaMBGNxsb6bhwv52bzxMHi+Q6UT/oazHbuP5oPNW034Nh8ZKEkKRByNeLSU9Al8Zin5B/rm8SAuJtLh0dZdSoxjHlKtduUtKi1sIASKRK5q5W+t+r90aeuL+eIOWaehOzzQt8Z9j2sbQ8exKg3YojiD2MxoTmUuq7I4/nwNEqcswjXCurbMCLTBTP4noQw6VgE7E5cgow9NMqLjXtwyzfTEcXAz6rUG/r/d0x/KbltFvej3T9lTlOuM39Cb3Yo7zSsGbQsSnun6g4BOMyJJgKfOS50wQnXFxJCu4LnhiNNawQXEhBkEutdhtmrYFGEmXCZaAQZpFRYIby8WyPCDAdr9NIUmstPojL7x96odPRnkNP6zy+Ft1IMInItKByZJ6WDQVn5hIZlXPu7qtk5OrCu8VEZG3TZwuzwnaITn89EYayZaaMW+FVcjrDceGg+DguK46X7QmqGZ/PbaF6gtN6FbNWcHGqlGs10XZjrbUu1yEBwZoGiDEqBCi9TzNfmMK6hDgSzOjRn2UubYf4iv4goYccpwK8ijl8gsPhhAz+WAIBPm3X32NHKQU58bxlp+y9RPxrpCIP316IBdJP2G+FT+bLI/e2nUi1l4eUad4JXBC53Ilp8PzB9xAmQhLhJxl+X7wUwFOJT801odcY+GCTbOC44+/KFKnOipEKCsoD3y1NOxrZ4mTPy+x++b0Lkypz68Dd8s+HLg/x6NQqFgK1dqX/N1ZIyVdEFblXC+xdNSteD+K5HS+p9WvAPfletDvtb3e3+X6sJLuO/N7y96ZHt+H7h8=</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ECB7ABA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:ECB7ABA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3850CFDD76AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:3850CFDD76AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">&amp;apos;</con:value></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">49501C7486AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:49501C7486AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">&amp;apos;</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">49501C7486AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/01/31 22:25:39</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:3850CFDD76AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:3850CFDD76AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3850CFDD76AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:3850CFDD76AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_86500 - StreamListView - PORTALCS - Account single deleted stream as Full user - 200 OK - no streams" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="9f8a2175-6bd4-4b89-a9fb-07b354bdc854"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="8663e2fe-b566-46e3-acfa-31454a4e90ba"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS_NO_STREAMS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="80e3dc18-2717-446d-8dab-0e6863d0a513"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="11369eef-6797-406f-ae5d-a69eb6646df0" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="560ac613-4987-4119-81bb-5316d52c4006"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="72d1027c-2f96-470d-886c-8b2094bb6d36"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamDelete" id="5eee6919-8ebd-4c70-8b08-1058a1ef0d4d"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

int i = tC.getPropertyValue("deletedCreateCount").toInteger();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	i++;
	tC.setPropertyValue("deletedCreateCount",i.toString());
	tC.setPropertyValue("expectDBStatus","deleted");
	tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamDelete")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTALCS" id="bf3fb1cc-22ad-4cff-aaa5-c258529f91dd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portalcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="f12b9d9f-0ad0-4e31-be54-0fa604afc7b9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="ce71cf7a-66cd-4bcd-a134-02c3b43f3d96" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="b7f7047f-7af2-433f-b435-3daf94f8a5fc" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="e19508ed-3446-41fa-a47a-7042ac5a95f0"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbSysConfig(log,tP.getPropertyValue("targetSystem"));

this.log.info a.sysconfGetRow("dece.testing.generate.unique.SYS_CONFIG_OID");


</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="f8c2ee6c-e82d-42f0-bf50-20731be15bc5" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportalcs1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140131_04592</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:1A50CAA686AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9AA79C9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4BA7894005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZbc9o4FH7vr/C4jx3jC+ZiT2DGENi6CaQFGrp52RHyAZTYkmPJhvTXr2RiAoRk053JDNHx0Xe+c9EnXXCUxI4fcA6ZIIxq4WVH/8ezPORGi7rhLequ4doOMhZWq2k0LWeBHIiakePpWsh5DiHlAlHR0R3Ldg3LNur2zLH9hufb9ZprN+907RYyLqGlS83StW0SU+6XYTt6nlGfIU64T1EC3BfYnwaja196+qjipHcvdizLgFl3LUTqmyauRYAhjnENs8S8MI98LiLuT8mKIpFn8Bwz4h39ee9ms6lt6jWWrUzHsizT8kzpE3Gy+qx3P1WbIQrpku3WfUQZJRjF5DdSpEYg1izSgnjFMiLWyRvQtmlbCtqALTaw7dLPuvkSoGT3QaQjkhlHBl8juwKbwBIyoBi0n5Owo3/+WAd3e2cZonzJsoSfrP+MEtACYpZCZPAqs4rdxxHPlKt7AdgPKY5zTgoYqzFJEQaufc9gSbbXhMvhi7hWtl/bcvlHqikD/CdtuTAPuUrq5pnqXJIVcPF/enbYrx3KLYpz6PKN18NXM9Rixe+52edhHv8MsnHbGbNOSeHQeUdq3+7n9emw7mfreRNdTFI0gK/f6n/h+4f7X8Mp6f8cJeRq4VwTvB303OGiWDYak+LbfW+bXw0Gt7P8S5FR/KOP5sP29MENN3/d3bfmN+NP4ddogbN131nb3uXD1ygK2Ow6TacwvPnGHptj8Tt1fy0fH2/F+Cm8J1ejxGqZC9Foinl/8qPwHkZfNumykd4N6/knMc9HUX/w1IT531d3c3rbXnVecjrM4dhYScI0X9wDFtVSjUd4qQ1lv5B4X16UhUTGsnT1U6VRXAAVelftUtLi51KASOTLZu7W9V7QanquZTWCQd21La/nug35n+e27aEXtCsN2rE4odhndElULKWyu/l5nyBOfA40gswoWI7XwPV3EC+RQFpIJ/JwMMphxqSKt61mM3CavUZQdwO3V++3mz1r4ASB1xr0vb6ja2MmbuhNFiwFZJWCO1LEZ5Z1pOATwCQloGRezTmXg86FLMkjKnIR27UC1Sjk8iLIlBb7jttumJwkaQyKsJmwKI+hlq7TskAm3/06BsK8tBKOU5YJFNvlMXwzy9NvVUGkT0SUA1cp9UA2Fc7cSFaVz6u8G2dvrgo+yCOiTpusrsgI3jE5/vQyNGpa9hPzkljFfL/hDwEwPwNhvsPPPC3NPmJUkIP41S0rLw4pK92qv4+o9ljLiyIvO9pSkplJeNM2HducAs6l7j3N2ANQcw9hfuja2bM+iby3H/PLxZpOBRKQyPnTyuUH3hxT4OrNEcrzs/3og+YopKybgK04Z+vH8mmiGL/7esE+Vn7S/F3+bFgWvbTrDNZBHJmnfGgIQldqpS6YpzemAzMJS6QisuwQ/BzAueDHxn2R91yEnKZFLuDtL5qSuo6OMGY5FeGlXhoO5bfkKZ5S8F+cXsGUEv98Z2/5m3f2r9H1VAphgvS9L/lvZ4OU44JBV0+DkktH38onqAxOVwdy/0zwUPHbQdByet5g6L6v+MeZdF+ZX1sOanp6Hrr/Ag==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS_NO_STREAMS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">6950D88686AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:6950D88686AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1A50CAA686AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:1A50CAA686AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1A50CAA686AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/01/31 22:25:48</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:6950D88686AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/01/31 22:25:50</con:value></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:6950D88686AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">6950D88686AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:6950D88686AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80405</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP_CS_1</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_86501 - StreamListView - PORTALCS - Account single deleted stream as Standard user - 200 OK - no streams" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="06f8e68c-1949-4fca-a326-8cfde018130c"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="4e009be1-9567-4a2f-86cb-ef2cb6cb05e0"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_SAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userStandard1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS_NO_STREAMS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="408b56fe-c468-4728-ad04-ca339bc218fa"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="28f3fecf-0bd5-4257-9730-3f023e7b78c4" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="05b0bdee-ede4-4e0a-aceb-dc3293d9ac6a"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="d722a7c7-1423-42ef-a909-f21447e1793d"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamDelete" id="f0aad446-d087-4256-8b00-357c01ed182a"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

int i = tC.getPropertyValue("deletedCreateCount").toInteger();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	i++;
	tC.setPropertyValue("deletedCreateCount",i.toString());
	tC.setPropertyValue("expectDBStatus","deleted");
	tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamDelete")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTALCS" id="543b7290-2a19-45af-a0e5-bb89de66650a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portalcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="ad3a4ed1-f087-4452-b543-40b93a572bf9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="6fb0737e-0a04-4295-9a0c-2d37df6b9956" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="5e058f86-8f5f-440f-bba4-93b18156430c" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportalcs1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140131_04593</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testing</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:FA5067A886AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9AA79C9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">7EA70EA105AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZtU+I6FP6+v6LT/bhT0pQCbUeYKRS87IqroqvrlzshDRBtk9qkUO+vv0mxCIhe9844gzk9ec5zXvIkJwKliROEQpBcUs6McdQ1//bbbrMFbWg52O9YLvI8C8Xe3Jp7TiduYwe1PGIaYyEKMmZCIia7pmND11JbmvDagUHLD6DX8KFzbxq/SC4UtHJp2KZRpgkTQRW2axY5CzgSVAQMpUQEEgfTcHIWKM8A1ZzM3smGZRUw7y2lzAIAcCMmmCQJbmCeghOw53MSi2BKFwzJIicvMWPRNV/2rtfrxrrZ4PkCOLZtA9sHyicWdPHV7H2pN5N4zOZ8sx4gxhnFKKH/IE1qQuSSx0aYLHhO5TJ9BxoCaGtoi5TYwtBlX03wGqBi90mkPZK5QJZYIliDXZE5yQnDxLi5GnfNr5/r4GbvdY6YmPM8FQfrP6NE2IokPCOxJerManafRzxSrt4JwcGY4aQQdEXO9ZhkCBNhXORkTsszKtTwxcKo2m+UQv3ResoI/pO2nIBdroo6OFKdiC6IkP+nZ7v92qD8QklBeh779jQ5XYIzuhqfLmJ5MXg4H3i/EZI33YrCrvOG1LbdL+vDYd3O1sumRXZvI2cywkP4eDErKYeP32b5t7ubKborzx4G48y+5Pe37YvnH5eDbBrPU5deLp5YeRP1beo4t7i8bd9Ofjzag+svs6YTJfCvy7zV9M8W+D78zn23ZJN+HLfdYtIEoyEYzh6LosiyNWjns9Nlx3ZX9tw/zX5Hd/7DfTtqZdTlD9Hpl1854aPZVcGGKbj3Hr3+ZN19zWk3h31jLQnTYvZAsKyXejzGkTFS/ULyY3nRFhpb88o1yLRGCUmYNHt6l5aWoFACRONANXOzbg/DzigKod0Kh00X2n7fdVvqP9/14MgPvVqDNiwOKA44m1MdS6vsZn4+JojTQBAWk9xa8QIviTA/QIyQRMaYXanDwZkg11ypeDjqeOHAicK+7bvQ9+HQ73SaTc8dQuiMIsc0zrn8yX7m4VySvFZwR4n4tW3vKfgVwTSjRMu8nnOhBl1IVZIntCpkAhsr1GCkUBdBrrU4cFyvBQRNs4RowiDlcZGQRrbMqgIBsfl1LIRFZaUCZzyXKIHVMXw3y8NvdUGUT0y1g9Ap9YlqKjlyI9l1Pm/ybh29uWr4sIipPm2qujKneMNk/9Pr0Ohp2U7Ma2I18+2GPwTA4ggE+IAfOCzNNmK8ojvx61tWXRxKVnp1f59Q46lRrFZF1dGOlsxcwQMIHAimBBdK956v+SNhYAsBPnXtbFkfRN7a9/kVcsmmEkmSqvkzquUn3hxTIvSbY6zOT/nZB81eSFU3SUp5zDZI1NNEM/7w9YIDrP2U+UL9rHkev7brCNZOHJWnemhIyhZ6pS+Y53emA3MFS5Ui8nwX/BjAseD7xm2Rt1ykmqZZIcn7XwwtdV0TYcwLJseRWRl25bfiKZ8zErw6vYGpJP7lzi7Fu3f23eRsqoQwRebWl/63s0WrccHqxar8Ky5ds1RPUBWcLXbk/oXgruJ7Ydhx+v5w5H6s+PuZ9N6Y31p2anp4Hnr/Ag==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS_NO_STREAMS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:6EA7FDA105AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">6EA7FDA105AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4A50B28886AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:4A50B28886AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FA5067A886AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:FA5067A886AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FA5067A886AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/01/31 22:25:56</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:BEB7F35805AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:4A50B28886AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/01/31 22:25:58</con:value></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:BEB7F35805AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:4A50B28886AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4A50B28886AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:4A50B28886AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80406</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP_CS_1</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_86520 - StreamListView - PORTALCS - Full User can view stream created by Full User - 200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="2b4de65a-0025-4a98-ac9a-85c2db71b1b9"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="5cfdfcb0-96fc-449f-8f55-e9a14e0e688a"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull2Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="4e0e4317-7893-4a02-998c-4dddc3dcbf4e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="8675b3db-299a-4279-8a4d-debfc5d0e9f9" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="d7589c90-82c2-4ac2-bbcb-0a5a24cd3f4c"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="3e4ebe4e-c91d-4bdf-8ad3-49935589ba45"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTALCS" id="5d696248-83f9-4631-8d29-b591bee72062"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portalcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="04dd9a1d-f53f-4f47-882e-e662a3d13fe3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="2d66e331-8ec4-462b-a126-6904b5dae065" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="b614f4af-1367-4f09-8731-0462994be8c9" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="d02cadf8-1b46-48bc-b101-d0a501fbdc66" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportalcs1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140131_04592</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:DB503E5A86AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9AA79C9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4BA7894005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZbc9o4FH7vr/C4jx3jC+ZiT2DGENi6CaQFGrp52RHyAZTYkmPJhvTXr2RiAoRk053JDNHx0Xe+c9EnXXCUxI4fcA6ZIIxq4WVH/8ezPORGi7rhLequ4doOMhZWq2k0LWeBHIiakePpWsh5DiHlAlHR0R3Ldg3LNur2zLH9hufb9ZprN+907RYyLqGlS83StW0SU+6XYTt6nlGfIU64T1EC3BfYnwaja196+qjipHcvdizLgFl3LUTqmyauRYAhjnENs8S8MI98LiLuT8mKIpFn8Bwz4h39ee9ms6lt6jWWrUzHsizT8kzpE3Gy+qx3P1WbIQrpku3WfUQZJRjF5DdSpEYg1izSgnjFMiLWyRvQtmlbCtqALTaw7dLPuvkSoGT3QaQjkhlHBl8juwKbwBIyoBi0n5Owo3/+WAd3e2cZonzJsoSfrP+MEtACYpZCZPAqs4rdxxHPlKt7AdgPKY5zTgoYqzFJEQaufc9gSbbXhMvhi7hWtl/bcvlHqikD/CdtuTAPuUrq5pnqXJIVcPF/enbYrx3KLYpz6PKN18NXM9Rixe+52edhHv8MsnHbGbNOSeHQeUdq3+7n9emw7mfreRNdTFI0gK/f6n/h+4f7X8Mp6f8cJeRq4VwTvB303OGiWDYak+LbfW+bXw0Gt7P8S5FR/KOP5sP29MENN3/d3bfmN+NP4ddogbN131nb3uXD1ygK2Ow6TacwvPnGHptj8Tt1fy0fH2/F+Cm8J1ejxGqZC9Foinl/8qPwHkZfNumykd4N6/knMc9HUX/w1IT531d3c3rbXnVecjrM4dhYScI0X9wDFtVSjUd4qQ1lv5B4X16UhUTGsnT1U6VRXAAVelftUtLi51KASOTLZu7W9V7QanquZTWCQd21La/nug35n+e27aEXtCsN2rE4odhndElULKWyu/l5nyBOfA40gswoWI7XwPV3EC+RQFpIJ/JwMMphxqSKt61mM3CavUZQdwO3V++3mz1r4ASB1xr0vb6ja2MmbuhNFiwFZJWCO1LEZ5Z1pOATwCQloGRezTmXg86FLMkjKnIR27UC1Sjk8iLIlBb7jttumJwkaQyKsJmwKI+hlq7TskAm3/06BsK8tBKOU5YJFNvlMXwzy9NvVUGkT0SUA1cp9UA2Fc7cSFaVz6u8G2dvrgo+yCOiTpusrsgI3jE5/vQyNGpa9hPzkljFfL/hDwEwPwNhvsPPPC3NPmJUkIP41S0rLw4pK92qv4+o9ljLiyIvO9pSkplJeNM2HducAs6l7j3N2ANQcw9hfuja2bM+iby3H/PLxZpOBRKQyPnTyuUH3hxT4OrNEcrzs/3og+YopKybgK04Z+vH8mmiGL/7esE+Vn7S/F3+bFgWvbTrDNZBHJmnfGgIQldqpS6YpzemAzMJS6QisuwQ/BzAueDHxn2R91yEnKZFLuDtL5qSuo6OMGY5FeGlXhoO5bfkKZ5S8F+cXsGUEv98Z2/5m3f2r9H1VAphgvS9L/lvZ4OU44JBV0+DkktH38onqAxOVwdy/0zwUPHbQdByet5g6L6v+MeZdF+ZX1sOanp6Hrr/Ag==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2B506B3A86AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:2B506B3A86AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DB503E5A86AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:DB503E5A86AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DB503E5A86AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/01/31 22:26:03</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:2B506B3A86AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:2B506B3A86AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2B506B3A86AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:2B506B3A86AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80408</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_86521 - StreamListView - PORTALCS - Full User can view stream created by Standard User - 200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="6b2cbfce-0565-413a-9ca6-b7ab4e7612c7"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="fc752b6d-d57f-42df-a072-dac4c3708e00"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_SAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userStandard1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="6a3f4346-7b1b-451a-bd66-71787bd43588"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="65168e3c-331a-4750-a647-a8e684c3a3cf" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="56be6af8-5f6c-490e-9c74-cc527e58730a"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="548fde39-a5f2-4c03-934e-358031dc37ae"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTALCS" id="c2d1727a-c977-49b1-9adb-145d5bac816d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portalcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="b4c7eb81-cd35-4b2e-91c4-e4dd9ef15aef"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="416e92f3-eaa3-4a5c-a385-4bddeb0f9745" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="823e549f-37d1-4a2d-bbb7-e9e0f9cd7ce8" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportalcs1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140131_04592</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:AC50D66D86AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9AA79C9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4BA7894005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZbc9o4FH7vr/C4jx3jC+ZiT2DGENi6CaQFGrp52RHyAZTYkmPJhvTXr2RiAoRk053JDNHx0Xe+c9EnXXCUxI4fcA6ZIIxq4WVH/8ezPORGi7rhLequ4doOMhZWq2k0LWeBHIiakePpWsh5DiHlAlHR0R3Ldg3LNur2zLH9hufb9ZprN+907RYyLqGlS83StW0SU+6XYTt6nlGfIU64T1EC3BfYnwaja196+qjipHcvdizLgFl3LUTqmyauRYAhjnENs8S8MI98LiLuT8mKIpFn8Bwz4h39ee9ms6lt6jWWrUzHsizT8kzpE3Gy+qx3P1WbIQrpku3WfUQZJRjF5DdSpEYg1izSgnjFMiLWyRvQtmlbCtqALTaw7dLPuvkSoGT3QaQjkhlHBl8juwKbwBIyoBi0n5Owo3/+WAd3e2cZonzJsoSfrP+MEtACYpZCZPAqs4rdxxHPlKt7AdgPKY5zTgoYqzFJEQaufc9gSbbXhMvhi7hWtl/bcvlHqikD/CdtuTAPuUrq5pnqXJIVcPF/enbYrx3KLYpz6PKN18NXM9Rixe+52edhHv8MsnHbGbNOSeHQeUdq3+7n9emw7mfreRNdTFI0gK/f6n/h+4f7X8Mp6f8cJeRq4VwTvB303OGiWDYak+LbfW+bXw0Gt7P8S5FR/KOP5sP29MENN3/d3bfmN+NP4ddogbN131nb3uXD1ygK2Ow6TacwvPnGHptj8Tt1fy0fH2/F+Cm8J1ejxGqZC9Foinl/8qPwHkZfNumykd4N6/knMc9HUX/w1IT531d3c3rbXnVecjrM4dhYScI0X9wDFtVSjUd4qQ1lv5B4X16UhUTGsnT1U6VRXAAVelftUtLi51KASOTLZu7W9V7QanquZTWCQd21La/nug35n+e27aEXtCsN2rE4odhndElULKWyu/l5nyBOfA40gswoWI7XwPV3EC+RQFpIJ/JwMMphxqSKt61mM3CavUZQdwO3V++3mz1r4ASB1xr0vb6ja2MmbuhNFiwFZJWCO1LEZ5Z1pOATwCQloGRezTmXg86FLMkjKnIR27UC1Sjk8iLIlBb7jttumJwkaQyKsJmwKI+hlq7TskAm3/06BsK8tBKOU5YJFNvlMXwzy9NvVUGkT0SUA1cp9UA2Fc7cSFaVz6u8G2dvrgo+yCOiTpusrsgI3jE5/vQyNGpa9hPzkljFfL/hDwEwPwNhvsPPPC3NPmJUkIP41S0rLw4pK92qv4+o9ljLiyIvO9pSkplJeNM2HducAs6l7j3N2ANQcw9hfuja2bM+iby3H/PLxZpOBRKQyPnTyuUH3hxT4OrNEcrzs/3og+YopKybgK04Z+vH8mmiGL/7esE+Vn7S/F3+bFgWvbTrDNZBHJmnfGgIQldqpS6YpzemAzMJS6QisuwQ/BzAueDHxn2R91yEnKZFLuDtL5qSuo6OMGY5FeGlXhoO5bfkKZ5S8F+cXsGUEv98Z2/5m3f2r9H1VAphgvS9L/lvZ4OU44JBV0+DkktH38onqAxOVwdy/0zwUPHbQdByet5g6L6v+MeZdF+ZX1sOanp6Hrr/Ag==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FB506D4D86AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FB506D4D86AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">AC50D66D86AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:AC50D66D86AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">AC50D66D86AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/01/31 22:26:15</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:BEB7F35805AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FB506D4D86AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:BEB7F35805AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FB506D4D86AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FB506D4D86AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FB506D4D86AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80409</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_86530 - StreamListView - PORTALCS - Standard User can view stream created by Full User - 200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="924495b7-50ce-46d9-8a89-05e0b1198b14"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="c1be2c98-d458-4c15-96b0-9ddad52d0cfd"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="411576e4-f351-4f6f-93dd-40022f8c4f5c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="fd8c3c04-66d2-4032-88fb-5899aa245b63" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="055c03e1-53a0-4335-a4d1-c92d2fb6213a"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="3ac9ac42-f372-4e80-96b5-37bf3a492381"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTALCS" id="e44b24f4-d411-4047-9363-a9f5b2aa2bb7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portalcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_SAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userStandard1Org1Password"));

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="a6a92c67-c778-4ccc-a4fc-78e40eb10898"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="3ebad47c-6a29-4ea3-a7e5-a982d881ab2b" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="be28ee8f-8519-40cc-92c9-3dc1565db3e7" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportalcs1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140131_04593</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testing</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:7D509F1F86AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9AA79C9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">7EA70EA105AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZtU+I6FP6+v6LT/bhT0pQCbUeYKRS87IqroqvrlzshDRBtk9qkUO+vv0mxCIhe9844gzk9ec5zXvIkJwKliROEQpBcUs6McdQ1//bbbrMFbWg52O9YLvI8C8Xe3Jp7TiduYwe1PGIaYyEKMmZCIia7pmND11JbmvDagUHLD6DX8KFzbxq/SC4UtHJp2KZRpgkTQRW2axY5CzgSVAQMpUQEEgfTcHIWKM8A1ZzM3smGZRUw7y2lzAIAcCMmmCQJbmCeghOw53MSi2BKFwzJIicvMWPRNV/2rtfrxrrZ4PkCOLZtA9sHyicWdPHV7H2pN5N4zOZ8sx4gxhnFKKH/IE1qQuSSx0aYLHhO5TJ9BxoCaGtoi5TYwtBlX03wGqBi90mkPZK5QJZYIliDXZE5yQnDxLi5GnfNr5/r4GbvdY6YmPM8FQfrP6NE2IokPCOxJerManafRzxSrt4JwcGY4aQQdEXO9ZhkCBNhXORkTsszKtTwxcKo2m+UQv3ResoI/pO2nIBdroo6OFKdiC6IkP+nZ7v92qD8QklBeh779jQ5XYIzuhqfLmJ5MXg4H3i/EZI33YrCrvOG1LbdL+vDYd3O1sumRXZvI2cywkP4eDErKYeP32b5t7ubKborzx4G48y+5Pe37YvnH5eDbBrPU5deLp5YeRP1beo4t7i8bd9Ofjzag+svs6YTJfCvy7zV9M8W+D78zn23ZJN+HLfdYtIEoyEYzh6LosiyNWjns9Nlx3ZX9tw/zX5Hd/7DfTtqZdTlD9Hpl1854aPZVcGGKbj3Hr3+ZN19zWk3h31jLQnTYvZAsKyXejzGkTFS/ULyY3nRFhpb88o1yLRGCUmYNHt6l5aWoFACRONANXOzbg/DzigKod0Kh00X2n7fdVvqP9/14MgPvVqDNiwOKA44m1MdS6vsZn4+JojTQBAWk9xa8QIviTA/QIyQRMaYXanDwZkg11ypeDjqeOHAicK+7bvQ9+HQ73SaTc8dQuiMIsc0zrn8yX7m4VySvFZwR4n4tW3vKfgVwTSjRMu8nnOhBl1IVZIntCpkAhsr1GCkUBdBrrU4cFyvBQRNs4RowiDlcZGQRrbMqgIBsfl1LIRFZaUCZzyXKIHVMXw3y8NvdUGUT0y1g9Ap9YlqKjlyI9l1Pm/ybh29uWr4sIipPm2qujKneMNk/9Pr0Ohp2U7Ma2I18+2GPwTA4ggE+IAfOCzNNmK8ojvx61tWXRxKVnp1f59Q46lRrFZF1dGOlsxcwQMIHAimBBdK956v+SNhYAsBPnXtbFkfRN7a9/kVcsmmEkmSqvkzquUn3hxTIvSbY6zOT/nZB81eSFU3SUp5zDZI1NNEM/7w9YIDrP2U+UL9rHkev7brCNZOHJWnemhIyhZ6pS+Y53emA3MFS5Ui8nwX/BjAseD7xm2Rt1ykmqZZIcn7XwwtdV0TYcwLJseRWRl25bfiKZ8zErw6vYGpJP7lzi7Fu3f23eRsqoQwRebWl/63s0WrccHqxar8Ky5ds1RPUBWcLXbk/oXgruJ7Ydhx+v5w5H6s+PuZ9N6Y31p2anp4Hnr/Ag==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">6EA7FDA105AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:6EA7FDA105AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">CC509DFE86AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:CC509DFE86AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">7D509F1F86AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:7D509F1F86AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">7D509F1F86AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/01/31 22:26:23</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:CC509DFE86AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:CC509DFE86AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">CC509DFE86AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:CC509DFE86AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80411</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_86531 - StreamListView - PORTALCS - Standard User can view stream created by Standard User - 200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="2815db47-99de-4497-852c-5000099e9ffc"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="c92b1055-97a8-445c-a2b8-97f6bdc049d7"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_SAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userStandard1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="37637ee0-9683-4424-bf8b-8cac5833536f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="43e9acd3-f30a-4eae-9b61-aa00e66a4b72" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="9f03b01e-5333-4749-986b-5425f60767d1"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="b750e58d-1730-4016-a924-0218a1db8a28"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTALCS" id="ce8d97a9-07d9-4ef3-bba5-dfbf0d4a9bb0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","portalcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_SAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userStandard1Org1Password"));

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="31ce096a-de1f-4a17-9f5f-ca6a9c6b9941"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="ac10c8a2-5b15-4a1a-b5e5-0b29362076e2" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="9e9246ff-9fc8-4528-ab10-f504d9de4435" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">portalcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportalcs1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150505_081521</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testing</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:5C681E40846F4867B699471B18ED62E0</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">15575C84AC6237B6E05305991F0A686D</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">15576504994F2A58E05307991F0AB1D9</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZrb+I4FP0rKPM5OAkJJFFBgjLtsqXtTGk7jy8r49wQt8EG2wHaX792gBQo7TIrISHfXJ977sPHPpN4mntxV0oQinJWW01zJuPS2rYKwWKOJZUxw1OQsSLxqHs9jL26E+PtFqs26Letf6LEbbgpadmuRzzbj4LUxs0m2MSL0jRqJbgZudpVygIGTCrMVNvyHDewHfO7d/3Yb8SuUw9897dVewQhNbZ2qTvWhtRKtq1MqVmM0HK5rC8bdS4myHMcF/28Ho5IBlNsdc7WGZWBRGfjT+oJEMhzUid8is7Qns9ZIuMRnTCsCgGbWMlHsRzkREj7JJJOvljVXkgGLOXl8hwzzijBOX3Fpj7XoDKe1Lr5hAuqsumHSbiOAbZhRWzi+uyLhfapnQi0x1BIbMsMuxusO0hBACNQe7gbtK0vp3Wt3HovMJMpF1O5v/wzPsAWkPMZJLbcprWhdjrgkUp1zoDEA0byQtIF3JhhnWECctNNIKdD1b4JSOlqSKUe0JU07NAuvYPluhp9OgGp/k+DdpqzBnnEeQEd34HLkI8uSRDOQ5I1i7ufKXmcX11fXrdLArvOpaFq7Xp5MJTVEK13zPjTxWSMVTYcPpLvg+KZqisYfF8BLbqt9FvgZMPMv8DfCzX+HYibv8cNvz9ysuUrfh2GDkp7t+Rh0nxuNaj/cDEmr8Ofd08tFo0v2O2ysfzVF1PHe+C9Ue/H0wpf5RGOzq8YRzfz+S265CPxV/9mMaS/wh+Nm+Ejo0EoHthg/iB6/WgyTp6z3o/0STTG6Vcatqt0dvjv27ZnflSMn4Co7dKMwaBfu9BdwupzMTMWmthp6RrPjPhIBUxZHbPLaEdcaLmjSax7uF67QdBqBo4fRf5XrxuEX52g4bSiyL1wuj23H21FZs3igOI5Zyk1sYzkrsfmc4JkGktgCQh7wQutdNL6BLGPFa4N2J0+BJxJuOdanl32/LxqhkkYKIfOcuERnjmFH42t2g1Xt+xWdFMFYl+TW3uafAeEzigY4TZzLfVgS6VrMceLQuVufYHrDAot7cKobOz5YYAknc5yMEzRlCdFDvVZNisrg+T637MxkaWVSjLjQuG8PBDow/QOv20roX0SahykSakHuptw5I5xtvm8y7t59C7awneLhJrzpcuqBCVrJvuf3qbFjEk1Km+JbZlXG/4QgMgjEOgTfuiwNFXEZEF34m8vc30taCHpbPs7x259Xi8Wi6Jsqe83kNDwyBQVOR4aASm01L3c82dgqEJBJ90rFfGD4JV9n2KhMjZSWMFUj2CtXJ7wkBiBNA+JgT47q1NfKXshdekUrNQx23muH0GG8afvJBIT46fN3/TfkovkrWNHsHbi6Dz1O0JRNjErc6e8fDAghGtYqtWQi13wYwDHgu8bqyJXXJQeqHGh4OMvNSNzbQsTwgumBn2rNOxKb8lTvcwgfnN6B1Oqe/Xco//93rNpOQIE9CNR0hLf3NqxOQJssiPfm6CHCh6ch373vOk2Wr1mqeDBWsGbYbNfFWWPXeed+b1lp06HM975Fw==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">15576504994E2A58E05307991F0AB1D9</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">15575C84AC6137B6E05305991F0A686D</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">15575C84AC6937B6E05305991F0A686D</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:15576504994E2A58E05307991F0AB1D9</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:15575C84AC6137B6E05305991F0A686D</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">155797F08C9F36D6E05305991F0A1D1C</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:155797F08C9F36D6E05305991F0A1D1C</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">5C681E40846F4867B699471B18ED62E0</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:5C681E40846F4867B699471B18ED62E0</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">5C681E40846F4867B699471B18ED62E0</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/05/05 14:48:08</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:15575C863ADE37BCE05305991F0AF436</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:155797F08C9F36D6E05305991F0A1D1C</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:15575C863ADE37BCE05305991F0AF436</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:155797F08C9F36D6E05305991F0A1D1C</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">155797F08C9F36D6E05305991F0A1D1C</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:155797F08C9F36D6E05305991F0A1D1C</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80412</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>15575C84AC6937B6E05305991F0A686D</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_86700 - StreamListView - PORTALCS - API invocation after StreamRenew by Full User - 200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="ec302c79-2099-4d0e-b153-c9ca2fa94686"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="c52d5130-8d51-4c26-a59b-1e53920dcddb"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBModifiedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="7e03771b-d6c8-4b1c-af2d-fece434545fb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="2b658d00-bea4-4e1f-b45b-ccdddbb5b8a0" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="09e944d2-1475-40a4-a8b9-75b30915319f"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="e17c4902-b1a6-406b-871d-35cae7ed3dd1"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Update STREAM_DATA.EXPIRATION_DATE for renewal" id="d6e07c41-4432-4781-983d-a1b392691fda"><con:settings/><con:config><script>import org.apache.commons.lang.SystemUtils;
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
Date d;
if (System.properties['os.name'].toLowerCase().contains('windows')) 
	{
d=new Date(new Date().getTime()+7200000);
	}
else
	{
d=new Date(new Date().getTime()+50400000);
	}
	
String s=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'").format(d);
tP.setPropertyValue("ExpirationDateTime",s);</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamRenew" id="af61d9ff-4720-4111-b0ec-d739a0f0e904"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamRenew")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTALCS" id="8df7a7d2-eaf0-4392-aa89-275a87d098bd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","portalcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="8a9b9690-9314-474d-848e-559a2883e897"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="c4360574-0601-4cba-944c-b8c013d7416f" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="f9bc1a6b-2c2d-4c24-8fb9-d0333707a576" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140131_04592</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:B060EC7696AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9AA79C9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4BA7894005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZhc6I8EP5+v4KhHzsYUKjAVGdQ9D162nbEdq790okhaO4gKAlq++svwULV2l7vnemMzbLZfTb75NlcMpgmTddjDOecZFQJ/I761G7HcTQzZpo5m8WaGRm2BhGMtdaFFbV1y4pbqK0qAWMFDijjkPKO2tQNU9MNrWVMm4ZrOa6lN+y2/agq9zhnIrRwaeiqsk0TytwybUctcupmkBHmUphi5nLkht545ApPF1aY1O7lDmWZMO8uOF+6AKBGhBFOEtRAWQouwYHPZcTckMwp5EWOX3NGrKO+7t1sNo1Nq5Hlc9DUdR3oDhA+ESPzM7X7rdqMo4DG2W7dhzSjBMGEvEAJaoz5IosUL5lnOeGL9IPQBjB0GVrDW6Qhw6RnKnhLUKL7YqQDkDmDGltAowo2wTHOMUVYuZsEHfXsax3c7Z3mkLI4y1N2tP43SJiucZItcaSxqrIK3dcjnjiu7iVGbkBRUjCyxteSJkuIMFNucxyT7YgwQb6IKWX7lS0Tf6RiGUb/0pZLsI9VQAcnTscnc8z4/+nZfr92Ue5hUuCuxV+mqZ5PiKEn8OV5SV9G4WTtBw4ad0oI+847UHW7X9fHZK259brpPg34Q5sO47F957/0m/p2yl6Ig4k9+uGc/8zw98EEzuD3lJDzx6sr55aNLKQLBi05c8YPtOXPL3ogX26aj5NvKNn8DkM0Au2h9WCdXxf+dmJfB/ZVcP1wMR5ezVfPv/h1MfvVIr3obrUenjvbHGzu2tD7AVa+TaMBGNxsb6bhwv52bzxMHi+Q6UT/oazHbuP5oPNW034Nh8ZKEkKRByNeLSU9Al8Zin5B/rm8SAuJtLh0dZdSoxjHlKtduUtKi1sIASKRK5q5W+t+r90aeuL+eIOWaehOzzQt8Z9j2sbQ8exKg3YojiD2MxoTmUuq7I4/nwNEqcswjXCurbMCLTBTP4noQw6VgE7E5cgow9NMqLjXtwyzfTEcXAz6rUG/r/d0x/KbltFvej3T9lTlOuM39Cb3Yo7zSsGbQsSnun6g4BOMyJJgKfOS50wQnXFxJCu4LnhiNNawQXEhBkEutdhtmrYFGEmXCZaAQZpFRYIby8WyPCDAdr9NIUmstPojL7x96odPRnkNP6zy+Ft1IMInItKByZJ6WDQVn5hIZlXPu7qtk5OrCu8VEZG3TZwuzwnaITn89EYayZaaMW+FVcjrDceGg+DguK46X7QmqGZ/PbaF6gtN6FbNWcHGqlGs10XZjrbUu1yEBwZoGiDEqBCi9TzNfmMK6hDgSzOjRn2UubYf4iv4goYccpwK8ijl8gsPhhAz+WAIBPm3X32NHKQU58bxlp+y9RPxrpCIP316IBdJP2G+FT+bLI/e2nUi1l4eUad4JXBC53Ilp8PzB9xAmQhLhJxl+X7wUwFOJT801odcY+GCTbOC44+/KFKnOipEKCsoD3y1NOxrZ4mTPy+x++b0Lkypz68Dd8s+HLg/x6NQqFgK1dqX/N1ZIyVdEFblXC+xdNSteD+K5HS+p9WvAPfletDvtb3e3+X6sJLuO/N7y96ZHt+H7h8=</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ECB7ABA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:ECB7ABA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">00605B5696AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:00605B5696AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">B060EC7696AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:B060EC7696AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">B060EC7696AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/01/31 22:26:53</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:00605B5696AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBUpdatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBUpdatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBUpdatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/12/24 10:00:24</con:value></con:property><con:property><con:name>expectDBUpdatedTime</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/12/24 10:00:24</con:value></con:property><con:property><con:name>expectDBRenewedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:00605B5696AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">00605B5696AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:00605B5696AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80417</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP_CS_1</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_86701 - StreamListView - PORTALCS - API invocation after StreamRenew by Standard User - 200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="57179a0b-dac0-47b2-ac92-8a7f68ded740"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="458f1f86-e233-4c3a-828e-7c9a380c8790"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_SAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBModifiedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="8ec78aca-3750-4e32-aca9-fa078501b756"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="e9166cb5-2506-4861-a999-b94c0b82fd6c" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="1761019b-9754-46e3-a29d-671b62815e7d"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="e9f9df84-556a-49b7-aed2-0c21ea08be75"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Update STREAM_DATA.EXPIRATION_DATE for renewal" id="9ec4752f-a791-409c-a2f8-d6b64d212de2"><con:settings/><con:config><script>import org.apache.commons.lang.SystemUtils;
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
Date d;
if (System.properties['os.name'].toLowerCase().contains('windows')) 
	{
d=new Date(new Date().getTime()+7200000);
	}
else
	{
d=new Date(new Date().getTime()+50400000);
	}
	
String s=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'").format(d);
tP.setPropertyValue("ExpirationDateTime",s);</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to Standard User" id="00b8e245-4490-4dd9-892e-01bdddeaa8f5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("username",tP.getPropertyValue("UserName_SAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userStandard1Org1Password"));

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamRenew" id="b0adcd6b-2816-46ac-82c0-cd38376260cf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamRenew")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTALCS" id="8109c794-e917-4a8c-9a43-fce6aa6f4f85"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portalcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="7fbbe2bd-d3f3-401f-b545-ae6090d03aa0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="8f3bc72e-787c-4dff-94db-18acd43f2bb0" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="5f3f6657-ba64-42d6-956b-3edb111f9760" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportalcs1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150505_014858</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testing</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:CC3019C82C774FB2B8088A22F73B8F27</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">155207B15BC46DFBE05307991F0A0655</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">155207B15C026DFBE05307991F0A0655</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZpb+I6FP0rKP1YQRYIS1SQApQhw9KyDH3tlyfXuYCniQ2xw9JfP3aAFCjtY56EBL5cn3vu4mPfcRQGluNyDpEgjGY2YUC5k1irWhxRhyFOuENRCNwR2Bm5va5j5QwHHbZoGa9Z1f7FdgFXKpViFvzSNCt/29lKEcryF5h4+orBKJSlK+cxeJQLREVVswzTzhrqMzbKjll07FKuZJRetMwEIi6xpUvO0PakNryqzYVYOLq+Xq9z63yORTPdMgxT/6fXHeE5hEir3e0ySgJFtb0/zvmAIQhwDrNQv9NPfO587ozIjCIRR7CP5X8Vy9CNii59fE5mN1q6F3yPTlmybCDKKMEoIO9I1acHYs78jBvMWETEPPwyCdNQwFnY4Cw2C/RG00+pXQl0wjDiKMvnyNxjDWEKEVAMmV9Dr6rdXNe1ZOs4QpRPWRTy0+Xf8QG6goAtwM/yQ1p7atcDXqhU7Q6w41EcxJysoK+GdYEw8H03AV8PlXmMYEo2XcLlgG64Yqcf0ztb7qrRJDPg4v806Kg5O5AJCmKoDWJrXbH9DnSWnZLfbfHwKf+w2fzs/hhUEwLHzokhbe1ueTaU6RDtdvTv+9snazApDyzyu/n4PmClCnMr02g19txxs7fox+L5Z2fe5tv7lWfZ9V+37vP742psecPWQH9DrFOy+4Olu2q/dPT6G3sooQJDxZlhd6A+eFn33GW/Xa63XD4pFrrtNXuq3zcsc0Qeeqy1Xd6yl/yE5gdmu3LrmT+aJdbG8fMEmDus+93Avm/781uoN4zGWzVN54j/qe1w5kfx62/A4rBUY+A1My3ZJSS+FzNlIX52mrg6CyU+XAAVWk3tUtrhxFLuiO/IHu7Wpm1bRqlu2g3DLDZb9XvDzhulSsVsGa5RtO2DyOxYnFFsMDolKpaS3N3YfE8Qhw4H6kOUXbFYKh3XvkFsIoEyHh3KQ8AohzGT8mz+No0ZWr9TNI9Da1Ex8hsclsqmqWX6TDzQh8idCohONNk0TzR5CJgsCCjhVnPN5WBzIWuxRKtYBGZuhXIUYintkVJZxyqUbZ2TcBGAYqqHzI8DyC3mi6QyOt99W1mEeWIlHC9YJFCQHAj9y/TO/ztUQvr4RDlwlVIdZDfhwh1TOOTzKe/ixbvoAO/GPlHnS5ZVRATvmJz+9TEtakzSUflI7MA83fCXAJhfgNC/4aeflyaN6K/IUfzDZS6vBSkktUN/l8jMLXPxahUnLS0U8nok4XVVVN2w9BHgWErddszegOopin7VvZISPwue2k8pxmJORwIJCOUIZpLlFQ+JEXD1kPDk2dlc+0o5CSlLJ2AjLtkagXwEKcbfvpOwg5WfND/KrzWL/I+OXcA6iiPzlO8IQehMrdSdsv1iQDCTsESqIYuOwS8BXAp+akyLnHIRcqBeYwFf/5NRMlfVEMYspsJraonhWHoTnmK7AOfD6RNMou7pc4/893svS5IRwCAfiZwk+OrWdtQRoLMj+d4Hvajg9Ub+OwU/ZVf7ZP5sOarT+YzX/gA=</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">155207B15C016DFBE05307991F0A0655</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">155207B15BC36DFBE05307991F0A0655</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">155207B15BCB6DFBE05307991F0A0655</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:155207B15C016DFBE05307991F0A0655</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:155207B15BC36DFBE05307991F0A0655</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">155207B15D866DFBE05307991F0A0655</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:155207B15D866DFBE05307991F0A0655</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">CC3019C82C774FB2B8088A22F73B8F27</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:CC3019C82C774FB2B8088A22F73B8F27</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">CC3019C82C774FB2B8088A22F73B8F27</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/05/05 08:21:48</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:155207B15CD46DFBE05307991F0A0655</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:155207B15D866DFBE05307991F0A0655</con:value></con:property><con:property><con:name>expectDBUpdatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBUpdatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBUpdatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/05/05 08:22:16</con:value></con:property><con:property><con:name>expectDBUpdatedTime</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/05/05 08:22:16</con:value></con:property><con:property><con:name>expectDBRenewedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:155207B15CD46DFBE05307991F0A0655</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:155207B15D866DFBE05307991F0A0655</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">155207B15D866DFBE05307991F0A0655</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:155207B15D866DFBE05307991F0A0655</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80418</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>155207B15BCB6DFBE05307991F0A0655</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP_CS_1</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_86720 - StreamListView - PORTALCS - API invocation after two StreamRenew invocations by Full User - 200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="115a73b1-bb49-43a3-ada8-92f8e09633bc"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="d0f0673a-9478-4cb7-a307-81a8b0f68154"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBModifiedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="e9930bb7-1298-4a0e-a8f8-9680832a0a2a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="26031754-8e7a-42e4-98f9-fed11a20d9e4" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="c75836c3-28bb-4ba5-ac3f-5b15891d6ab4"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="3ec05422-905e-474d-a9d3-4d65f510bf2f"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Update STREAM_DATA.EXPIRATION_DATE for renewal" id="bc06cbd3-34d3-4249-9af6-e6f62b927ba2"><con:settings/><con:config><script>import org.apache.commons.lang.SystemUtils;
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
Date d;
if (System.properties['os.name'].toLowerCase().contains('windows')) 
	{
d=new Date(new Date().getTime()+7200000);
	}
else
	{
d=new Date(new Date().getTime()+50400000);
	}
	
String s=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'").format(d);
tP.setPropertyValue("ExpirationDateTime",s);</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamRenew" id="5c7d78b8-4501-42fb-ac3e-c43d7e51814b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamRenew")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Update STREAM_DATA.EXPIRATION_DATE for renewal again" id="9b3c088e-8cc7-4101-bcea-078340736e1b"><con:settings/><con:config><script>import org.apache.commons.lang.SystemUtils;
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
Date d;
if (System.properties['os.name'].toLowerCase().contains('windows')) 
	{
d=new Date(new Date().getTime()+10800000);
	}
else
	{
d=new Date(new Date().getTime()+54000000);
	}
	
String s=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'").format(d);
tP.setPropertyValue("ExpirationDateTime",s);</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamRenew II" id="fdc54a3f-97b2-427e-92c4-ddfaa217c77a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamRenew")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTALCS" id="0d9a7de6-1e3d-4819-bea0-4196e4c05017"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portalcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="b26ad3dd-4cf4-4f26-87bd-72a5e814927f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="c6beb44b-09eb-4db9-8e88-7a2d3cbd14b3" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="689367e8-bb5a-403e-a384-d2c0b0a6a26f" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140131_04592</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:72600DC896AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9AA79C9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4BA7894005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZhc6I8EP5+v4KhHzsYUKjAVGdQ9D162nbEdq790okhaO4gKAlq++svwULV2l7vnemMzbLZfTb75NlcMpgmTddjDOecZFQJ/I761G7HcTQzZpo5m8WaGRm2BhGMtdaFFbV1y4pbqK0qAWMFDijjkPKO2tQNU9MNrWVMm4ZrOa6lN+y2/agq9zhnIrRwaeiqsk0TytwybUctcupmkBHmUphi5nLkht545ApPF1aY1O7lDmWZMO8uOF+6AKBGhBFOEtRAWQouwYHPZcTckMwp5EWOX3NGrKO+7t1sNo1Nq5Hlc9DUdR3oDhA+ESPzM7X7rdqMo4DG2W7dhzSjBMGEvEAJaoz5IosUL5lnOeGL9IPQBjB0GVrDW6Qhw6RnKnhLUKL7YqQDkDmDGltAowo2wTHOMUVYuZsEHfXsax3c7Z3mkLI4y1N2tP43SJiucZItcaSxqrIK3dcjnjiu7iVGbkBRUjCyxteSJkuIMFNucxyT7YgwQb6IKWX7lS0Tf6RiGUb/0pZLsI9VQAcnTscnc8z4/+nZfr92Ue5hUuCuxV+mqZ5PiKEn8OV5SV9G4WTtBw4ad0oI+847UHW7X9fHZK259brpPg34Q5sO47F957/0m/p2yl6Ig4k9+uGc/8zw98EEzuD3lJDzx6sr55aNLKQLBi05c8YPtOXPL3ogX26aj5NvKNn8DkM0Au2h9WCdXxf+dmJfB/ZVcP1wMR5ezVfPv/h1MfvVIr3obrUenjvbHGzu2tD7AVa+TaMBGNxsb6bhwv52bzxMHi+Q6UT/oazHbuP5oPNW034Nh8ZKEkKRByNeLSU9Al8Zin5B/rm8SAuJtLh0dZdSoxjHlKtduUtKi1sIASKRK5q5W+t+r90aeuL+eIOWaehOzzQt8Z9j2sbQ8exKg3YojiD2MxoTmUuq7I4/nwNEqcswjXCurbMCLTBTP4noQw6VgE7E5cgow9NMqLjXtwyzfTEcXAz6rUG/r/d0x/KbltFvej3T9lTlOuM39Cb3Yo7zSsGbQsSnun6g4BOMyJJgKfOS50wQnXFxJCu4LnhiNNawQXEhBkEutdhtmrYFGEmXCZaAQZpFRYIby8WyPCDAdr9NIUmstPojL7x96odPRnkNP6zy+Ft1IMInItKByZJ6WDQVn5hIZlXPu7qtk5OrCu8VEZG3TZwuzwnaITn89EYayZaaMW+FVcjrDceGg+DguK46X7QmqGZ/PbaF6gtN6FbNWcHGqlGs10XZjrbUu1yEBwZoGiDEqBCi9TzNfmMK6hDgSzOjRn2UubYf4iv4goYccpwK8ijl8gsPhhAz+WAIBPm3X32NHKQU58bxlp+y9RPxrpCIP316IBdJP2G+FT+bLI/e2nUi1l4eUad4JXBC53Ilp8PzB9xAmQhLhJxl+X7wUwFOJT801odcY+GCTbOC44+/KFKnOipEKCsoD3y1NOxrZ4mTPy+x++b0Lkypz68Dd8s+HLg/x6NQqFgK1dqX/N1ZIyVdEFblXC+xdNSteD+K5HS+p9WvAPfletDvtb3e3+X6sJLuO/N7y96ZHt+H7h8=</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ECB7ABA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:ECB7ABA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">C16021B896AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:C16021B896AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">72600DC896AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:72600DC896AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">72600DC896AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/01/31 22:27:02</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:C16021B896AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBUpdatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBUpdatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBUpdatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/12/24 10:12:53</con:value></con:property><con:property><con:name>expectDBUpdatedTime</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/12/24 10:12:53</con:value></con:property><con:property><con:name>expectDBRenewedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:C16021B896AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">C16021B896AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:C16021B896AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80420</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP_CS_1</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9b3c088e-8cc7-4101-bcea-078340736e1b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_86721 - StreamListView - PORTALCS - API invocation after two StreamRenew invocations by Standard User - 200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="3ae63336-f61a-476b-9ae1-21c115a10096"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="4973a6a6-a89c-4928-b914-ef7c8bc1608a"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_SAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userStandard1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBModifiedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="2da5b62e-b554-4538-b9b7-03609b83d4d5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="bfc553c7-7e22-48a8-8842-eb572870ea65" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="e9027f43-ccd5-4cd9-a3d5-8c345e605fe0"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="3430627e-060d-4064-8a22-d539897be12c"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Update STREAM_DATA.EXPIRATION_DATE for renewal" id="6267f871-b1a1-47f5-885c-7a3836c39530"><con:settings/><con:config><script>import org.apache.commons.lang.SystemUtils;
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
Date d;
if (System.properties['os.name'].toLowerCase().contains('windows')) 
	{
d=new Date(new Date().getTime()+7200000);
	}
else
	{
d=new Date(new Date().getTime()+50400000);
	}
	
String s=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'").format(d);
tP.setPropertyValue("ExpirationDateTime",s);</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamRenew" id="afc76edd-a43d-4d82-99e9-f035d3e7a9a0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamRenew")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Update STREAM_DATA.EXPIRATION_DATE for renewal again" id="520afab0-2d8b-4431-b76d-fe9e266206f5"><con:settings/><con:config><script>import org.apache.commons.lang.SystemUtils;
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
Date d;
if (System.properties['os.name'].toLowerCase().contains('windows')) 
	{
d=new Date(new Date().getTime()+10800000);
	}
else
	{
d=new Date(new Date().getTime()+54000000);
	}
	
String s=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'").format(d);
tP.setPropertyValue("ExpirationDateTime",s);</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamRenew II" id="89594c47-bd4e-4ea0-bd70-4c60a45ecff9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamRenew")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTALCS" id="f4e6d5c2-7592-44f9-a682-51a2ebf59d0b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portalcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="a3b46b49-b9cf-4b35-b7fd-5d60f165d65d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="9a87ce92-8c88-4fc9-9be5-5d896ea34466" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="0e8f69ce-617c-403d-a3b7-a7ddbc5315ac" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140131_04593</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testing</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:5360C40A96AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9AA79C9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">7EA70EA105AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZdc9o6EH3vr/C4jxnjD2wMnsCMwZDShoQGmpvy0hHyAmqM7FgyOPn1lUzsACFpemeYMVqvds/uHh/pnKF1ZHk+Y5ByElNlGLTVX9htNS3bdrXQbLqa3bJb2ryBsIYboWvUm8051G1VGTKWwZAyjihvq5Zh2pphanVzapme0/Icq2aa9Zmq3ELKRGjhUjNUJV9HlHlF2raapdSLESPMo2gNzOPYm/ijS094eqjEpHbOdyiLhGlnxXni6TquhYAhinANx2v9XD/wOQ+ZNyFLiniWwnPOkLXV573b7ba2rdfidKlbhmHoRksXPiEjy89q51O5GcIhXcS7dQ/RmBKMIvKEJKgR8FUcKn60jFPCV+s3Qpu6acjQGuSifaZNP6v6S4IC3QcjHYBMGdLYCpllsBtYQAoUg/LjZthWP39sgru90xRRtojTNTta/xskoBuI4gRCjZWVleg+HvFEuzrngL0hxVHGyAauJE0ShIEp4xQWJL8kTJAvZEoxfiVn4kdKlgH+l7Gc6/tYBXT9RHcCsgTG/8/M9ue1i3KLogw6d6a/uc9u81GI+872Ysaz7+MLK7i4D3+2Cwj7zjtQ1bif18dkrbj1vOlpyp3tE8b9JPm2MdhsNcqDUZh9efoJk2hu4YtZ35rpc542bpLNHUIUjQPjMdgGkwcLOw337G4QXIeJH0277NPaX8wv4Oqre2aeOYB6rXC8bXy/RV1G7d/3t7PUWDyQ1hcrh/+eePMHBmfzLRv1WzGaDSfdfmPJ5k/5NGz4W/3sE49dGG1bX01nOe79HObXX7btl5r2azg0lpIwyea/AfNyKekxDJSBmBfi78uLtJBQWxSuXiI1inGgXO3IXVJavEwIEAk9MczdutvvuoO60zQcv1+3TaPVtW1H/GvZTXPQ8pulBu1QHEHsxXRBZC6psjv+vA8Qrz0GNIRU28QZXgFT34kYII6UIb0RH0dMGUxjoeK21R10rcC3nbo1GLimOXAaZrPZ6Bt2z3etQFWuYn5Nr1N/wSEtFdwSIj41jAMFvwFMEgJS5iXPmSA646IlD2iT8cisbVCNQiYOglRqsWfZTUdnZJ1EIAHr6zjMIqglq6RokM52T0tDmBXW4NKfjH/1Jr/M4jN8s8rjd2VDhE9IpAOTJXVBDBVOnEh2Wc+rup2TJ1cZ3s9CIr820V2eErxDcvjqhTSSLRVjXgorkVcbjg0HwfXjuqp84Ybgiv3VsS1UX2hCpxzOA6o91LLNJivG4Uq9S0V43dQtU58AzoRoPU7je6B6FUL/0JlRoT7KXNkP8WV8RScccVgL8ijF8gMXhgkweWEYCvLnH72NHKQUfeOQ81O2XiTuFRLxu1cP7GHpJ8xj8djGafgyrhOx9vKIOsUtgRO6lCt5Ojy+wQ0ci7BEyFmc7gc/FeBU8kNj1eQKCxdsmmcc3n6jSJ1qqwjjOKN8KPVAGPa1s8DJHxPwXpxehSn0+fnAzdmbB+7d6HIiVGyN1MqX/N1ZIwVdMKjyXC+wtNVc3B9Fcrrc0+pngPty3e91Xb/ru3+T68NKOq/Mry17PT3+Hjp/AA==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">BEB7F35805AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ECB7ABA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:BEB7F35805AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:ECB7ABA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">A260BAD996AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:A260BAD996AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">5360C40A96AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:5360C40A96AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">5360C40A96AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/01/31 22:27:07</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:BEB7F35805AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:A260BAD996AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBUpdatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBUpdatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBUpdatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/12/24 10:16:55</con:value></con:property><con:property><con:name>expectDBUpdatedTime</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/12/24 10:16:55</con:value></con:property><con:property><con:name>expectDBRenewedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:BEB7F35805AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:A260BAD996AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">A260BAD996AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:A260BAD996AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80421</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP_CS_1</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>520afab0-2d8b-4431-b76d-fe9e266206f5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_79050 - StreamListView - PORTALCS - AccountNotActive - ACCOUNT.STATUS of deleted status - 403 Forbidden" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="d42970ae-95e4-4385-8d23-6a4962395152"><con:description>This test case will verify proper response from the StreamCreate API when the supplied SAML assertion references a node account that is in deleted status</con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="41e6481f-12b1-466a-b3e3-ce5b3126d0b2"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
//tC.setPropertyValue("streamhandleFULL","urn:dece:streamhandleid:org:dece:973A15CDA87B7C93E0401F0A059969A1");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("loopuntil","25");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","ACCOUNT_NOT_ACTIVE");
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="56fd3650-9257-4d8e-a714-d061fb3fd785"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="a4f10819-c5c6-4384-93e7-79a36f00592d" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="b42738f6-0e3a-4bf8-a428-7904cd63f339"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();



	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="f493d609-a7a1-4959-b88f-1b764bfd9154"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTALCS" id="a95ea771-3446-4b89-b462-4108dc1563f9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Update ACCOUNT.STATUS to 'deleted'" id="507bda2e-303e-44e2-8347-368b462962ba"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"deleted") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="4bf69720-92d2-453e-8307-8d01e4cc0e7a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT.STATUS to 'active'" id="80b40520-6feb-4690-b1fb-3358d7e824d6"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"active") == 1;</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>80340</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>portal</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>username</con:name><con:value>stream_list_view_20140131_04592</con:value></con:property><con:property><con:name>password</con:name><con:value/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value>urn:dece:streamhandleid:org:dece:CBB0E8DE17AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>accountoid</con:name><con:value>9AA79C9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>useroid</con:name><con:value>4BA7894005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertid</con:name><con:value/></con:property><con:property><con:name>assert</con:name><con:value>nVZbc9o4FH7vr/C4jx3jC+ZiT2DGENi6CaQFGrp52RHyAZTYkmPJhvTXr2RiAoRk053JDNHx0Xe+c9EnXXCUxI4fcA6ZIIxq4WVH/8ezPORGi7rhLequ4doOMhZWq2k0LWeBHIiakePpWsh5DiHlAlHR0R3Ldg3LNur2zLH9hufb9ZprN+907RYyLqGlS83StW0SU+6XYTt6nlGfIU64T1EC3BfYnwaja196+qjipHcvdizLgFl3LUTqmyauRYAhjnENs8S8MI98LiLuT8mKIpFn8Bwz4h39ee9ms6lt6jWWrUzHsizT8kzpE3Gy+qx3P1WbIQrpku3WfUQZJRjF5DdSpEYg1izSgnjFMiLWyRvQtmlbCtqALTaw7dLPuvkSoGT3QaQjkhlHBl8juwKbwBIyoBi0n5Owo3/+WAd3e2cZonzJsoSfrP+MEtACYpZCZPAqs4rdxxHPlKt7AdgPKY5zTgoYqzFJEQaufc9gSbbXhMvhi7hWtl/bcvlHqikD/CdtuTAPuUrq5pnqXJIVcPF/enbYrx3KLYpz6PKN18NXM9Rixe+52edhHv8MsnHbGbNOSeHQeUdq3+7n9emw7mfreRNdTFI0gK/f6n/h+4f7X8Mp6f8cJeRq4VwTvB303OGiWDYak+LbfW+bXw0Gt7P8S5FR/KOP5sP29MENN3/d3bfmN+NP4ddogbN131nb3uXD1ygK2Ow6TacwvPnGHptj8Tt1fy0fH2/F+Cm8J1ejxGqZC9Foinl/8qPwHkZfNumykd4N6/knMc9HUX/w1IT531d3c3rbXnVecjrM4dhYScI0X9wDFtVSjUd4qQ1lv5B4X16UhUTGsnT1U6VRXAAVelftUtLi51KASOTLZu7W9V7QanquZTWCQd21La/nug35n+e27aEXtCsN2rE4odhndElULKWyu/l5nyBOfA40gswoWI7XwPV3EC+RQFpIJ/JwMMphxqSKt61mM3CavUZQdwO3V++3mz1r4ASB1xr0vb6ja2MmbuhNFiwFZJWCO1LEZ5Z1pOATwCQloGRezTmXg86FLMkjKnIR27UC1Sjk8iLIlBb7jttumJwkaQyKsJmwKI+hlq7TskAm3/06BsK8tBKOU5YJFNvlMXwzy9NvVUGkT0SUA1cp9UA2Fc7cSFaVz6u8G2dvrgo+yCOiTpusrsgI3jE5/vQyNGpa9hPzkljFfL/hDwEwPwNhvsPPPC3NPmJUkIP41S0rLw4pK92qv4+o9ljLiyIvO9pSkplJeNM2HducAs6l7j3N2ANQcw9hfuja2bM+iby3H/PLxZpOBRKQyPnTyuUH3hxT4OrNEcrzs/3og+YopKybgK04Z+vH8mmiGL/7esE+Vn7S/F3+bFgWvbTrDNZBHJmnfGgIQldqpS6YpzemAzMJS6QisuwQ/BzAueDHxn2R91yEnKZFLuDtL5qSuo6OMGY5FeGlXhoO5bfkKZ5S8F+cXsGUEv98Z2/5m3f2r9H1VAphgvS9L/lvZ4OU44JBV0+DkktH38onqAxOVwdy/0zwUPHbQdByet5g6L6v+MeZdF+ZX1sOanp6Hrr/Ag==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>25</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value>ACCOUNT_NOT_ACTIVE</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value>0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>1BB0F1CE17AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value>1BB0F1CE17AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value>urn:dece:rightstokenid:org:dece:1BB0F1CE17AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value>urn:dece:rightstokenid:org:dece:1BB0F1CE17AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>userIndex</con:name><con:value>4</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value>CBB0E8DE17AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandleFULL_null</con:name><con:value>urn:dece:streamhandleid:org:dece:CBB0E8DE17AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle_null</con:name><con:value>CBB0E8DE17AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectNickname_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_null</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_null</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_null</con:name><con:value>2014/01/31 22:36:11</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value>urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRequestingUser_null</con:name><con:value>urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value>urn:dece:rightstokenid:org:dece:1BB0F1CE17AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_null</con:name><con:value>urn:dece:rightstokenid:org:dece:1BB0F1CE17AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value>4</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>portal</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_null</con:name><con:value>portal</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c886c03e-50e1-4add-b361-6d2a2d0a8984</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84920b96-448b-468f-9732-16c6de5a31aa</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2bf7a321-c7de-4330-98db-7a962504469a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b4575073-0636-4e9e-b124-ada3b56a200a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_85125 - StreamListView - PORTALCS - Active stream associated with RIGHTS_TOKEN.STATUS_ID of pending is displayed - 200 OK" searchProperties="true" id="82211e9c-a466-48d8-8f0e-a2adfcc29213" disabled="true"><con:description> This test case will verify that an active stream associated with a RightsToken that has a status of pending will still be returned. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="1820b3ba-ef5b-45ef-a024-8265a1adedf4"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="78d5be52-50fb-409c-8288-a06a293a9a73"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="de73d1e4-d0d4-4148-9756-6ce1e6d79e6a" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="126e1d21-4249-4510-94ad-1e46dfbb94be"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="ab8487b2-7050-4997-b107-21a551d14198"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Set RIGHTS_TOKEN.STATUS to 'pending'" id="47a04780-b67e-47cd-bf40-642be9522a1b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def rt = tC.getPropertyValue("rightstokenid");

a = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

assert a.rightsTokenSetStatusPending(rt) == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTALCS" id="9a08768b-1b8c-4348-af59-7541f9a148b6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portalcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="861bf20f-ebe2-44e2-b641-73cb6eef7cbe"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="893d246f-72aa-442a-8c1f-0db404050ed5" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="789612c1-86ce-42ad-848e-eacfa166062b" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="db7fa416-d8c5-4c35-b611-bc7d62d73f23" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportalcs1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140131_04592</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:2F40F74456AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9AA79C9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4BA7894005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZbc9o4FH7vr/C4jx3jC+ZiT2DGENi6CaQFGrp52RHyAZTYkmPJhvTXr2RiAoRk053JDNHx0Xe+c9EnXXCUxI4fcA6ZIIxq4WVH/8ezPORGi7rhLequ4doOMhZWq2k0LWeBHIiakePpWsh5DiHlAlHR0R3Ldg3LNur2zLH9hufb9ZprN+907RYyLqGlS83StW0SU+6XYTt6nlGfIU64T1EC3BfYnwaja196+qjipHcvdizLgFl3LUTqmyauRYAhjnENs8S8MI98LiLuT8mKIpFn8Bwz4h39ee9ms6lt6jWWrUzHsizT8kzpE3Gy+qx3P1WbIQrpku3WfUQZJRjF5DdSpEYg1izSgnjFMiLWyRvQtmlbCtqALTaw7dLPuvkSoGT3QaQjkhlHBl8juwKbwBIyoBi0n5Owo3/+WAd3e2cZonzJsoSfrP+MEtACYpZCZPAqs4rdxxHPlKt7AdgPKY5zTgoYqzFJEQaufc9gSbbXhMvhi7hWtl/bcvlHqikD/CdtuTAPuUrq5pnqXJIVcPF/enbYrx3KLYpz6PKN18NXM9Rixe+52edhHv8MsnHbGbNOSeHQeUdq3+7n9emw7mfreRNdTFI0gK/f6n/h+4f7X8Mp6f8cJeRq4VwTvB303OGiWDYak+LbfW+bXw0Gt7P8S5FR/KOP5sP29MENN3/d3bfmN+NP4ddogbN131nb3uXD1ygK2Ow6TacwvPnGHptj8Tt1fy0fH2/F+Cm8J1ejxGqZC9Foinl/8qPwHkZfNumykd4N6/knMc9HUX/w1IT531d3c3rbXnVecjrM4dhYScI0X9wDFtVSjUd4qQ1lv5B4X16UhUTGsnT1U6VRXAAVelftUtLi51KASOTLZu7W9V7QanquZTWCQd21La/nug35n+e27aEXtCsN2rE4odhndElULKWyu/l5nyBOfA40gswoWI7XwPV3EC+RQFpIJ/JwMMphxqSKt61mM3CavUZQdwO3V++3mz1r4ASB1xr0vb6ja2MmbuhNFiwFZJWCO1LEZ5Z1pOATwCQloGRezTmXg86FLMkjKnIR27UC1Sjk8iLIlBb7jttumJwkaQyKsJmwKI+hlq7TskAm3/06BsK8tBKOU5YJFNvlMXwzy9NvVUGkT0SUA1cp9UA2Fc7cSFaVz6u8G2dvrgo+yCOiTpusrsgI3jE5/vQyNGpa9hPzkljFfL/hDwEwPwNhvsPPPC3NPmJUkIP41S0rLw4pK92qv4+o9ljLiyIvO9pSkplJeNM2HducAs6l7j3N2ANQcw9hfuja2bM+iby3H/PLxZpOBRKQyPnTyuUH3hxT4OrNEcrzs/3og+YopKybgK04Z+vH8mmiGL/7esE+Vn7S/F3+bFgWvbTrDNZBHJmnfGgIQldqpS6YpzemAzMJS6QisuwQ/BzAueDHxn2R91yEnKZFLuDtL5qSuo6OMGY5FeGlXhoO5bfkKZ5S8F+cXsGUEv98Z2/5m3f2r9H1VAphgvS9L/lvZ4OU44JBV0+DkktH38onqAxOVwdy/0zwUPHbQdByet5g6L6v+MeZdF+ZX1sOanp6Hrr/Ag==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">7E40A12456AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:7E40A12456AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2F40F74456AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:2F40F74456AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2F40F74456AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/01/31 22:22:21</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:7E40A12456AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:7E40A12456AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">7E40A12456AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:7E40A12456AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80390</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_85126 - StreamListView - PORTALCS - Active stream associated with RIGHTS_TOKEN.STATUS_ID of suspended is displayed - 200 OK" searchProperties="true" id="5ed3a949-8f10-4309-bae4-891b51d61d89" disabled="true"><con:description> This test case will verify that an active stream associated with a RightsToken that has a status of suspended will still be returned. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="b1c4cfe3-f3bd-410e-9e55-fe0bb073d0fe"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="a80a912c-8807-4b7f-8758-2c64a52f9e5b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="9ed87e90-0c93-490c-8ad5-3b38056ea16f" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="fe6f3e8f-f8a1-493e-823e-a91456e8fe6d"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="2cd8b611-130e-4182-ac03-cb14885d8243"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Set RIGHTS_TOKEN.STATUS to 'suspended'" id="946abc63-9098-4128-9ade-e6e456258fc5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def rt = tC.getPropertyValue("rightstokenid");

a = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

assert a.rightsTokenSetStatusSuspended(rt) == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTALCS" id="5febbfb8-d0f3-48ea-8b9b-1e3b33e3390d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portalcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="9bf33d61-8185-4b95-bc5c-c2650f281941"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="702674f2-096a-49cb-831a-5fdd0a40e89c" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="e73c7945-24e6-4f9a-aa7f-790f25c358f7" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="79f95a38-abfe-4704-aec1-81cd5ae196c8" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportalcs1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140131_04592</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:FF40A33656AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9AA79C9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4BA7894005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZbc9o4FH7vr/C4jx3jC+ZiT2DGENi6CaQFGrp52RHyAZTYkmPJhvTXr2RiAoRk053JDNHx0Xe+c9EnXXCUxI4fcA6ZIIxq4WVH/8ezPORGi7rhLequ4doOMhZWq2k0LWeBHIiakePpWsh5DiHlAlHR0R3Ldg3LNur2zLH9hufb9ZprN+907RYyLqGlS83StW0SU+6XYTt6nlGfIU64T1EC3BfYnwaja196+qjipHcvdizLgFl3LUTqmyauRYAhjnENs8S8MI98LiLuT8mKIpFn8Bwz4h39ee9ms6lt6jWWrUzHsizT8kzpE3Gy+qx3P1WbIQrpku3WfUQZJRjF5DdSpEYg1izSgnjFMiLWyRvQtmlbCtqALTaw7dLPuvkSoGT3QaQjkhlHBl8juwKbwBIyoBi0n5Owo3/+WAd3e2cZonzJsoSfrP+MEtACYpZCZPAqs4rdxxHPlKt7AdgPKY5zTgoYqzFJEQaufc9gSbbXhMvhi7hWtl/bcvlHqikD/CdtuTAPuUrq5pnqXJIVcPF/enbYrx3KLYpz6PKN18NXM9Rixe+52edhHv8MsnHbGbNOSeHQeUdq3+7n9emw7mfreRNdTFI0gK/f6n/h+4f7X8Mp6f8cJeRq4VwTvB303OGiWDYak+LbfW+bXw0Gt7P8S5FR/KOP5sP29MENN3/d3bfmN+NP4ddogbN131nb3uXD1ygK2Ow6TacwvPnGHptj8Tt1fy0fH2/F+Cm8J1ejxGqZC9Foinl/8qPwHkZfNumykd4N6/knMc9HUX/w1IT531d3c3rbXnVecjrM4dhYScI0X9wDFtVSjUd4qQ1lv5B4X16UhUTGsnT1U6VRXAAVelftUtLi51KASOTLZu7W9V7QanquZTWCQd21La/nug35n+e27aEXtCsN2rE4odhndElULKWyu/l5nyBOfA40gswoWI7XwPV3EC+RQFpIJ/JwMMphxqSKt61mM3CavUZQdwO3V++3mz1r4ASB1xr0vb6ja2MmbuhNFiwFZJWCO1LEZ5Z1pOATwCQloGRezTmXg86FLMkjKnIR27UC1Sjk8iLIlBb7jttumJwkaQyKsJmwKI+hlq7TskAm3/06BsK8tBKOU5YJFNvlMXwzy9NvVUGkT0SUA1cp9UA2Fc7cSFaVz6u8G2dvrgo+yCOiTpusrsgI3jE5/vQyNGpa9hPzkljFfL/hDwEwPwNhvsPPPC3NPmJUkIP41S0rLw4pK92qv4+o9ljLiyIvO9pSkplJeNM2HducAs6l7j3N2ANQcw9hfuja2bM+iby3H/PLxZpOBRKQyPnTyuUH3hxT4OrNEcrzs/3og+YopKybgK04Z+vH8mmiGL/7esE+Vn7S/F3+bFgWvbTrDNZBHJmnfGgIQldqpS6YpzemAzMJS6QisuwQ/BzAueDHxn2R91yEnKZFLuDtL5qSuo6OMGY5FeGlXhoO5bfkKZ5S8F+cXsGUEv98Z2/5m3f2r9H1VAphgvS9L/lvZ4OU44JBV0+DkktH38onqAxOVwdy/0zwUPHbQdByet5g6L6v+MeZdF+ZX1sOanp6Hrr/Ag==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4F40431656AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:4F40431656AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FF40A33656AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:FF40A33656AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FF40A33656AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/01/31 22:22:29</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:4F40431656AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:4F40431656AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4F40431656AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:4F40431656AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80391</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_85127 - StreamListView - PORTALCS - Active stream associated with RIGHTS_TOKEN.STATUS_ID of other is displayed - 200 OK" searchProperties="true" id="72d8d027-7473-45b8-b447-31cf4e01ac87" disabled="true"><con:description> This test case will verify that an active stream associated with a RightsToken that has a status of other will still be returned. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="112fcb54-228c-4702-b5a7-907e00852184"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="723e11db-3909-40a3-bfcc-0f0ba0caa66f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="d7b98b02-9eef-4c35-a247-e681879a4bf7" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="5c3d6b26-320f-421d-836b-06c6e354bbcc"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="d0946e31-4085-4b99-b6cb-4a497184093d"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Set RIGHTS_TOKEN.STATUS to 'other'" id="3fd9f6ec-ae83-4f35-8088-5c14d58b6805"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def rt = tC.getPropertyValue("rightstokenid");

a = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

assert a.rightsTokenSetStatusOther(rt) == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTALCS" id="b6adce00-a70f-4e86-a9f3-c15d4d4f7e91"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portalcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="e36835de-870e-4f07-b5a0-33103e06e2e3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="78a695d9-bfb7-4e1e-9cd6-5cfb2f2ae767" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="e8073334-322a-4110-935b-56977635da57" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="84ad608e-6f98-4a90-9dd3-ba5697a52dee" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportalcs1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140131_04592</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C050B52856AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9AA79C9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4BA7894005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZbc9o4FH7vr/C4jx3jC+ZiT2DGENi6CaQFGrp52RHyAZTYkmPJhvTXr2RiAoRk053JDNHx0Xe+c9EnXXCUxI4fcA6ZIIxq4WVH/8ezPORGi7rhLequ4doOMhZWq2k0LWeBHIiakePpWsh5DiHlAlHR0R3Ldg3LNur2zLH9hufb9ZprN+907RYyLqGlS83StW0SU+6XYTt6nlGfIU64T1EC3BfYnwaja196+qjipHcvdizLgFl3LUTqmyauRYAhjnENs8S8MI98LiLuT8mKIpFn8Bwz4h39ee9ms6lt6jWWrUzHsizT8kzpE3Gy+qx3P1WbIQrpku3WfUQZJRjF5DdSpEYg1izSgnjFMiLWyRvQtmlbCtqALTaw7dLPuvkSoGT3QaQjkhlHBl8juwKbwBIyoBi0n5Owo3/+WAd3e2cZonzJsoSfrP+MEtACYpZCZPAqs4rdxxHPlKt7AdgPKY5zTgoYqzFJEQaufc9gSbbXhMvhi7hWtl/bcvlHqikD/CdtuTAPuUrq5pnqXJIVcPF/enbYrx3KLYpz6PKN18NXM9Rixe+52edhHv8MsnHbGbNOSeHQeUdq3+7n9emw7mfreRNdTFI0gK/f6n/h+4f7X8Mp6f8cJeRq4VwTvB303OGiWDYak+LbfW+bXw0Gt7P8S5FR/KOP5sP29MENN3/d3bfmN+NP4ddogbN131nb3uXD1ygK2Ow6TacwvPnGHptj8Tt1fy0fH2/F+Cm8J1ejxGqZC9Foinl/8qPwHkZfNumykd4N6/knMc9HUX/w1IT531d3c3rbXnVecjrM4dhYScI0X9wDFtVSjUd4qQ1lv5B4X16UhUTGsnT1U6VRXAAVelftUtLi51KASOTLZu7W9V7QanquZTWCQd21La/nug35n+e27aEXtCsN2rE4odhndElULKWyu/l5nyBOfA40gswoWI7XwPV3EC+RQFpIJ/JwMMphxqSKt61mM3CavUZQdwO3V++3mz1r4ASB1xr0vb6ja2MmbuhNFiwFZJWCO1LEZ5Z1pOATwCQloGRezTmXg86FLMkjKnIR27UC1Sjk8iLIlBb7jttumJwkaQyKsJmwKI+hlq7TskAm3/06BsK8tBKOU5YJFNvlMXwzy9NvVUGkT0SUA1cp9UA2Fc7cSFaVz6u8G2dvrgo+yCOiTpusrsgI3jE5/vQyNGpa9hPzkljFfL/hDwEwPwNhvsPPPC3NPmJUkIP41S0rLw4pK92qv4+o9ljLiyIvO9pSkplJeNM2HducAs6l7j3N2ANQcw9hfuja2bM+iby3H/PLxZpOBRKQyPnTyuUH3hxT4OrNEcrzs/3og+YopKybgK04Z+vH8mmiGL/7esE+Vn7S/F3+bFgWvbTrDNZBHJmnfGgIQldqpS6YpzemAzMJS6QisuwQ/BzAueDHxn2R91yEnKZFLuDtL5qSuo6OMGY5FeGlXhoO5bfkKZ5S8F+cXsGUEv98Z2/5m3f2r9H1VAphgvS9L/lvZ4OU44JBV0+DkktH38onqAxOVwdy/0zwUPHbQdByet5g6L6v+MeZdF+ZX1sOanp6Hrr/Ag==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1050290856AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:1050290856AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">C050B52856AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C050B52856AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">C050B52856AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/01/31 22:22:37</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:1050290856AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:1050290856AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1050290856AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:1050290856AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80392</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_55091 - StreamListView - PORTALCS - Stream view by portalcs_ManageAccountConsentPresent_DifferentOrg" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="7974eec3-afc5-40c3-bcde-2a1ed942ab6d" disabled="true"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="e019de3d-53e9-4671-8430-a90773d93c21"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");
tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="04babbc0-8194-4fa4-b075-1e533a2d63ca"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="c307bb34-870b-436c-9686-ba83796bf20a" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def dbUtils;

try {
	dbUtils = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
}
catch(Throwable e) {
	log.info "ERROR - dbUtils.dbStreams - $e";
	assert 1 == 2;
}
finally {
	dbUtils.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Manage account consent" id="8e2b04b2-3644-4d52-83e5-584a3bce5866" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Policy - Establish Manage account consent policy")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="8976435d-cb14-4241-86a7-0173d96d80b4"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="83588468-ef60-47f2-844f-676bbaf28da1"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="delay" name="Delay I" id="fcd8ae76-69fc-46c2-9d83-18b03b5b8e8d" disabled="true"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="groovy" name="Call StreamDelete" id="65d943d8-cfbd-45ad-bced-3e45db2e599f" disabled="true"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

int i = tC.getPropertyValue("deletedCreateCount").toInteger();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	i++;
	tC.setPropertyValue("deletedCreateCount",i.toString());
	tC.setPropertyValue("expectDBStatus","deleted");
	tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamDelete")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="delay" name="Delay II" id="d03cc38f-02bf-4b5d-82a7-216d93e134fe" disabled="true"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="groovy" name="Invoke StreamCreate again if Required" id="d3bca7d6-6244-4f42-af1e-71b1f15f82d0" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();

def loopuntil = tC.getPropertyValue("loopuntil").toInteger();
def counter   = tC.getPropertyValue("counter").toInteger();

counter++;

if (counter &lt;= loopuntil) {
	tC.setPropertyValue("counter",counter.toString());
	testRunner.gotoStepByName("Call StreamCreate");
} 





</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to Portalcs" id="3d1d353a-9489-4547-b3ec-2acc2fd38fb9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove Manage account consent" id="c3bb92a4-0bef-4a7e-815d-83ed6204a762"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Policy - Remove Manage account consent policy")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Manage account consent1" id="36757c00-542d-438d-a2e2-4a3f63c69e5f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Policy - Establish Manage account consent policy")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="760dcda1-ba38-4535-9b23-36be2fa2e948"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="eec85076-b9e5-48bc-9b46-7f0a934bd63a" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="8336b971-234f-43ef-95b5-5a33cdb1bd25" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9AA79C9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZhc6I8EP5+v4KhHzsYUKjAVGdQ9D162nbEdq790okhaO4gKAlq++svwULV2l7vnemMzbLZfTb75NlcMpgmTddjDOecZFQJ/I761G7HcTQzZpo5m8WaGRm2BhGMtdaFFbV1y4pbqK0qAWMFDijjkPKO2tQNU9MNrWVMm4ZrOa6lN+y2/agq9zhnIrRwaeiqsk0TytwybUctcupmkBHmUphi5nLkht545ApPF1aY1O7lDmWZMO8uOF+6AKBGhBFOEtRAWQouwYHPZcTckMwp5EWOX3NGrKO+7t1sNo1Nq5Hlc9DUdR3oDhA+ESPzM7X7rdqMo4DG2W7dhzSjBMGEvEAJaoz5IosUL5lnOeGL9IPQBjB0GVrDW6Qhw6RnKnhLUKL7YqQDkDmDGltAowo2wTHOMUVYuZsEHfXsax3c7Z3mkLI4y1N2tP43SJiucZItcaSxqrIK3dcjnjiu7iVGbkBRUjCyxteSJkuIMFNucxyT7YgwQb6IKWX7lS0Tf6RiGUb/0pZLsI9VQAcnTscnc8z4/+nZfr92Ue5hUuCuxV+mqZ5PiKEn8OV5SV9G4WTtBw4ad0oI+847UHW7X9fHZK259brpPg34Q5sO47F957/0m/p2yl6Ig4k9+uGc/8zw98EEzuD3lJDzx6sr55aNLKQLBi05c8YPtOXPL3ogX26aj5NvKNn8DkM0Au2h9WCdXxf+dmJfB/ZVcP1wMR5ezVfPv/h1MfvVIr3obrUenjvbHGzu2tD7AVa+TaMBGNxsb6bhwv52bzxMHi+Q6UT/oazHbuP5oPNW034Nh8ZKEkKRByNeLSU9Al8Zin5B/rm8SAuJtLh0dZdSoxjHlKtduUtKi1sIASKRK5q5W+t+r90aeuL+eIOWaehOzzQt8Z9j2sbQ8exKg3YojiD2MxoTmUuq7I4/nwNEqcswjXCurbMCLTBTP4noQw6VgE7E5cgow9NMqLjXtwyzfTEcXAz6rUG/r/d0x/KbltFvej3T9lTlOuM39Cb3Yo7zSsGbQsSnun6g4BOMyJJgKfOS50wQnXFxJCu4LnhiNNawQXEhBkEutdhtmrYFGEmXCZaAQZpFRYIby8WyPCDAdr9NIUmstPojL7x96odPRnkNP6zy+Ft1IMInItKByZJ6WDQVn5hIZlXPu7qtk5OrCu8VEZG3TZwuzwnaITn89EYayZaaMW+FVcjrDceGg+DguK46X7QmqGZ/PbaF6gtN6FbNWcHGqlGs10XZjrbUu1yEBwZoGiDEqBCi9TzNfmMK6hDgSzOjRn2UubYf4iv4goYccpwK8ijl8gsPhhAz+WAIBPm3X32NHKQU58bxlp+y9RPxrpCIP316IBdJP2G+FT+bLI/e2nUi1l4eUad4JXBC53Ilp8PzB9xAmQhLhJxl+X7wUwFOJT801odcY+GCTbOC44+/KFKnOipEKCsoD3y1NOxrZ4mTPy+x++b0Lkypz68Dd8s+HLg/x6NQqFgK1dqX/N1ZIyVdEFblXC+xdNSteD+K5HS+p9WvAPfletDvtb3e3+X6sJLuO/N7y96ZHt+H7h8=</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ECB7ABA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:ECB7ABA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">CCE44AF42FD2063BE0401F0A07991776</con:value></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:EE6AF5629D16080FE0401F0A07993E36</con:value></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:E242D56E3CB97378E0401F0A07997BD4</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">EE6CDCAA046DC229E0401F0A07992EF1</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:EE6CDCAA046DC229E0401F0A07992EF1</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">EE6E226B40E5424EE0401F0A0799254E</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:EE6E226B40E5424EE0401F0A0799254E</con:value></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:E2A88D8691FDB519E0401F0A07995A68</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">EE6E226B40E5424EE0401F0A0799254E</con:value></con:property><con:property><con:name>streamhandle_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E2A88D8691FDB519E0401F0A07995A68</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140131_04592</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4BA7894005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/12/26 11:01:01</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:EE6CDCAA046DC229E0401F0A07992EF1</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/07/29 14:46:02</con:value></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/07/29 14:46:19</con:value></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:E2A888050EAC0EC9E0401F0A0799497A</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:EE6AF5629D16080FE0401F0A07993E36</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:EE6CDCAA046DC229E0401F0A07992EF1</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79691</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value>EE6CDCAA046DC229E0401F0A07992EF1</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value>urn:dece:rightstokenid:org:dece:EE6CDCAA046DC229E0401F0A07992EF1</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_2</con:name><con:value>dlpcs</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>515727f8-a3ef-4d9b-b7c7-2f5f3eae9968</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>55d1533e-db88-4f69-94ac-c8dbacee678e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2612d590-4e41-4806-bcc3-86275ee34584</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3bb92a4-0bef-4a7e-815d-83ed6204a762</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_55092 - StreamListView - PORTALCS - Stream view by portalcs_ManageAccountConsentNotPresent_DifferentOrg" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="20c92c6f-3774-46c3-854e-28cdedd2e8a9" disabled="true"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="14fb0ba0-97bb-40e6-8c68-f2089ed46078"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");
tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="277bd48d-6c32-4f58-9a25-59488c78c05b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="4d6e5b47-c65d-4fb5-9e5c-946c0605cd31" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def dbUtils;

try {
	dbUtils = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
}
catch(Throwable e) {
	log.info "ERROR - dbUtils.dbStreams - $e";
	assert 1 == 2;
}
finally {
	dbUtils.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Manage account consent" disabled="true" id="cfe46cae-c40c-4109-abde-766afb7896b9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Policy - Establish Manage account consent policy")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove Manage account consent" id="33e3938b-7a1e-4079-ab6f-9c97f5c6c172"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Policy - Remove Manage account consent policy")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="7125e371-0aea-4a60-8ed0-1dc851b997d2"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="119b603d-11e5-40e6-a072-13bc2a449d67"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="delay" name="Delay I" id="a059865e-804f-4f6e-ae45-2d04c128b112" disabled="true"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="groovy" name="Call StreamDelete" id="33bb7570-f528-43aa-8fe4-7d812cb712f7" disabled="true"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

int i = tC.getPropertyValue("deletedCreateCount").toInteger();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	i++;
	tC.setPropertyValue("deletedCreateCount",i.toString());
	tC.setPropertyValue("expectDBStatus","deleted");
	tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamDelete")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="delay" name="Delay II" id="c4ec9f50-d047-4f73-86c0-38b33b9cf185" disabled="true"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="groovy" name="Invoke StreamCreate again if Required" id="d79241bf-654b-4857-a101-eca39dafee2c" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();

def loopuntil = tC.getPropertyValue("loopuntil").toInteger();
def counter   = tC.getPropertyValue("counter").toInteger();

counter++;

if (counter &lt;= loopuntil) {
	tC.setPropertyValue("counter",counter.toString());
	testRunner.gotoStepByName("Call StreamCreate");
} 





</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to portalcs" id="1c362739-45ae-47ab-9340-564f99a0d551"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Manage account consent1" disabled="true" id="f572d4ce-27f6-4964-b504-08d597886f78"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Policy - Establish Manage account consent policy")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="ce23b60a-4ba9-4d44-8dfc-502c22e71343"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="53e87962-bb1e-4fc8-91b6-c0c1bc6755f8" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="26c5dd9b-dcb5-47f4-aeaa-be405b780993" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9AA79C9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZhc6I8EP5+v4KhHzsYUKjAVGdQ9D162nbEdq790okhaO4gKAlq++svwULV2l7vnemMzbLZfTb75NlcMpgmTddjDOecZFQJ/I761G7HcTQzZpo5m8WaGRm2BhGMtdaFFbV1y4pbqK0qAWMFDijjkPKO2tQNU9MNrWVMm4ZrOa6lN+y2/agq9zhnIrRwaeiqsk0TytwybUctcupmkBHmUphi5nLkht545ApPF1aY1O7lDmWZMO8uOF+6AKBGhBFOEtRAWQouwYHPZcTckMwp5EWOX3NGrKO+7t1sNo1Nq5Hlc9DUdR3oDhA+ESPzM7X7rdqMo4DG2W7dhzSjBMGEvEAJaoz5IosUL5lnOeGL9IPQBjB0GVrDW6Qhw6RnKnhLUKL7YqQDkDmDGltAowo2wTHOMUVYuZsEHfXsax3c7Z3mkLI4y1N2tP43SJiucZItcaSxqrIK3dcjnjiu7iVGbkBRUjCyxteSJkuIMFNucxyT7YgwQb6IKWX7lS0Tf6RiGUb/0pZLsI9VQAcnTscnc8z4/+nZfr92Ue5hUuCuxV+mqZ5PiKEn8OV5SV9G4WTtBw4ad0oI+847UHW7X9fHZK259brpPg34Q5sO47F957/0m/p2yl6Ig4k9+uGc/8zw98EEzuD3lJDzx6sr55aNLKQLBi05c8YPtOXPL3ogX26aj5NvKNn8DkM0Au2h9WCdXxf+dmJfB/ZVcP1wMR5ezVfPv/h1MfvVIr3obrUenjvbHGzu2tD7AVa+TaMBGNxsb6bhwv52bzxMHi+Q6UT/oazHbuP5oPNW034Nh8ZKEkKRByNeLSU9Al8Zin5B/rm8SAuJtLh0dZdSoxjHlKtduUtKi1sIASKRK5q5W+t+r90aeuL+eIOWaehOzzQt8Z9j2sbQ8exKg3YojiD2MxoTmUuq7I4/nwNEqcswjXCurbMCLTBTP4noQw6VgE7E5cgow9NMqLjXtwyzfTEcXAz6rUG/r/d0x/KbltFvej3T9lTlOuM39Cb3Yo7zSsGbQsSnun6g4BOMyJJgKfOS50wQnXFxJCu4LnhiNNawQXEhBkEutdhtmrYFGEmXCZaAQZpFRYIby8WyPCDAdr9NIUmstPojL7x96odPRnkNP6zy+Ft1IMInItKByZJ6WDQVn5hIZlXPu7qtk5OrCu8VEZG3TZwuzwnaITn89EYayZaaMW+FVcjrDceGg+DguK46X7QmqGZ/PbaF6gtN6FbNWcHGqlGs10XZjrbUu1yEBwZoGiDEqBCi9TzNfmMK6hDgSzOjRn2UubYf4iv4goYccpwK8ijl8gsPhhAz+WAIBPm3X32NHKQU58bxlp+y9RPxrpCIP316IBdJP2G+FT+bLI/e2nUi1l4eUad4JXBC53Ilp8PzB9xAmQhLhJxl+X7wUwFOJT801odcY+GCTbOC44+/KFKnOipEKCsoD3y1NOxrZ4mTPy+x++b0Lkypz68Dd8s+HLg/x6NQqFgK1dqX/N1ZIyVdEFblXC+xdNSteD+K5HS+p9WvAPfletDvtb3e3+X6sJLuO/N7y96ZHt+H7h8=</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ECB7ABA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:ECB7ABA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">CCE44AF42FD2063BE0401F0A07991776</con:value></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:EE6AF5629D16080FE0401F0A07993E36</con:value></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:E242D56E3CB97378E0401F0A07997BD4</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">EE6EE8810E16AC35E0401F0A07990368</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:EE6EE8810E16AC35E0401F0A07990368</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">EE6E974D0BF2F978E0401F0A07994287</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:EE6E974D0BF2F978E0401F0A07994287</con:value></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:E2A88D869227B519E0401F0A07995A68</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">EE6E974D0BF2F978E0401F0A07994287</con:value></con:property><con:property><con:name>streamhandle_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E2A88D869227B519E0401F0A07995A68</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140131_04592</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4BA7894005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/12/26 11:05:44</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:EE6EE8810E16AC35E0401F0A07990368</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/07/29 14:47:40</con:value></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/07/29 14:48:00</con:value></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:E2A88D869208B519E0401F0A07995A68</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:EE6AF5629D16080FE0401F0A07993E36</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:EE6EE8810E16AC35E0401F0A07990368</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79691</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value>EE6EE8810E16AC35E0401F0A07990368</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value>urn:dece:rightstokenid:org:dece:EE6EE8810E16AC35E0401F0A07990368</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_2</con:name><con:value>dlpcs</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>515727f8-a3ef-4d9b-b7c7-2f5f3eae9968</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>55d1533e-db88-4f69-94ac-c8dbacee678e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2612d590-4e41-4806-bcc3-86275ee34584</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db295cf1-ada5-4262-9aa7-1d3cb4e13390</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_79052 - StreamListView - PORTALCS - AccountNotActive - ACCOUNT.STATUS of Pending status - 403 Forbidden" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="126c49da-9c1b-46a2-82d3-ca0c59575ea8" disabled="true"><con:description>This test case will verify proper response from the StreamCreate API when the supplied SAML assertion references a node account that is in deleted status</con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="251ccb64-0713-4b30-b0b9-9d64c4051043"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
//tC.setPropertyValue("streamhandleFULL","urn:dece:streamhandleid:org:dece:973A15CDA87B7C93E0401F0A059969A1");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("loopuntil","25");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","ACCOUNT_NOT_ACTIVE");
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="c1b1cfd0-1381-44e7-b1d1-813a7b0b4680"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="2c4c5a70-68ca-491e-be51-09f842f6a2c5" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="9888e0ab-0060-4545-ac6b-120856c60d67"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();



	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="8ea0b72c-4221-4981-8569-e5f789e1b018"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTALCS" id="339f75b1-90a7-4efd-b92d-cbc748761293"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Update ACCOUNT.STATUS to 'pending'" id="90b881f2-7b87-40c2-9096-921e87206623"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"pending") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="56cd013f-d88d-4683-b8e5-5a8581f8bd2c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT.STATUS to 'active'" id="cba1b226-540a-4971-be32-2bf863dce43a"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"active") == 1;</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>80340</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>portal</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>username</con:name><con:value>stream_list_view_20140131_04592</con:value></con:property><con:property><con:name>password</con:name><con:value/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value>urn:dece:streamhandleid:org:dece:6DB0EF7127AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>accountoid</con:name><con:value>9AA79C9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>useroid</con:name><con:value>4BA7894005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertid</con:name><con:value/></con:property><con:property><con:name>assert</con:name><con:value>nVZbc9o4FH7vr/C4jx3jC+ZiT2DGENi6CaQFGrp52RHyAZTYkmPJhvTXr2RiAoRk053JDNHx0Xe+c9EnXXCUxI4fcA6ZIIxq4WVH/8ezPORGi7rhLequ4doOMhZWq2k0LWeBHIiakePpWsh5DiHlAlHR0R3Ldg3LNur2zLH9hufb9ZprN+907RYyLqGlS83StW0SU+6XYTt6nlGfIU64T1EC3BfYnwaja196+qjipHcvdizLgFl3LUTqmyauRYAhjnENs8S8MI98LiLuT8mKIpFn8Bwz4h39ee9ms6lt6jWWrUzHsizT8kzpE3Gy+qx3P1WbIQrpku3WfUQZJRjF5DdSpEYg1izSgnjFMiLWyRvQtmlbCtqALTaw7dLPuvkSoGT3QaQjkhlHBl8juwKbwBIyoBi0n5Owo3/+WAd3e2cZonzJsoSfrP+MEtACYpZCZPAqs4rdxxHPlKt7AdgPKY5zTgoYqzFJEQaufc9gSbbXhMvhi7hWtl/bcvlHqikD/CdtuTAPuUrq5pnqXJIVcPF/enbYrx3KLYpz6PKN18NXM9Rixe+52edhHv8MsnHbGbNOSeHQeUdq3+7n9emw7mfreRNdTFI0gK/f6n/h+4f7X8Mp6f8cJeRq4VwTvB303OGiWDYak+LbfW+bXw0Gt7P8S5FR/KOP5sP29MENN3/d3bfmN+NP4ddogbN131nb3uXD1ygK2Ow6TacwvPnGHptj8Tt1fy0fH2/F+Cm8J1ejxGqZC9Foinl/8qPwHkZfNumykd4N6/knMc9HUX/w1IT531d3c3rbXnVecjrM4dhYScI0X9wDFtVSjUd4qQ1lv5B4X16UhUTGsnT1U6VRXAAVelftUtLi51KASOTLZu7W9V7QanquZTWCQd21La/nug35n+e27aEXtCsN2rE4odhndElULKWyu/l5nyBOfA40gswoWI7XwPV3EC+RQFpIJ/JwMMphxqSKt61mM3CavUZQdwO3V++3mz1r4ASB1xr0vb6ja2MmbuhNFiwFZJWCO1LEZ5Z1pOATwCQloGRezTmXg86FLMkjKnIR27UC1Sjk8iLIlBb7jttumJwkaQyKsJmwKI+hlq7TskAm3/06BsK8tBKOU5YJFNvlMXwzy9NvVUGkT0SUA1cp9UA2Fc7cSFaVz6u8G2dvrgo+yCOiTpusrsgI3jE5/vQyNGpa9hPzkljFfL/hDwEwPwNhvsPPPC3NPmJUkIP41S0rLw4pK92qv4+o9ljLiyIvO9pSkplJeNM2HducAs6l7j3N2ANQcw9hfuja2bM+iby3H/PLxZpOBRKQyPnTyuUH3hxT4OrNEcrzs/3og+YopKybgK04Z+vH8mmiGL/7esE+Vn7S/F3+bFgWvbTrDNZBHJmnfGgIQldqpS6YpzemAzMJS6QisuwQ/BzAueDHxn2R91yEnKZFLuDtL5qSuo6OMGY5FeGlXhoO5bfkKZ5S8F+cXsGUEv98Z2/5m3f2r9H1VAphgvS9L/lvZ4OU44JBV0+DkktH38onqAxOVwdy/0zwUPHbQdByet5g6L6v+MeZdF+ZX1sOanp6Hrr/Ag==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>25</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value>ACCOUNT_NOT_ACTIVE</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value>0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>BCB0846127AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value>BCB0846127AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value>urn:dece:rightstokenid:org:dece:BCB0846127AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value>urn:dece:rightstokenid:org:dece:BCB0846127AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>userIndex</con:name><con:value>4</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value>6DB0EF7127AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandleFULL_null</con:name><con:value>urn:dece:streamhandleid:org:dece:6DB0EF7127AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle_null</con:name><con:value>6DB0EF7127AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectNickname_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_null</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_null</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_null</con:name><con:value>2014/01/31 22:36:22</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value>urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRequestingUser_null</con:name><con:value>urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value>urn:dece:rightstokenid:org:dece:BCB0846127AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_null</con:name><con:value>urn:dece:rightstokenid:org:dece:BCB0846127AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value>4</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>portal</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_null</con:name><con:value>portal</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c886c03e-50e1-4add-b361-6d2a2d0a8984</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84920b96-448b-468f-9732-16c6de5a31aa</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2bf7a321-c7de-4330-98db-7a962504469a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b4575073-0636-4e9e-b124-ada3b56a200a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_79056 - StreamListView - PORTALCS - AccountNotActive - ACCOUNT.STATUS of blocked:tou status - 403 Forbidden" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="a2d3b562-9041-4de8-bf19-60a6851d448a" disabled="true"><con:description>This test case will verify proper response from the StreamCreate API when the supplied SAML assertion references a node account that is in deleted status</con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="e0ca9199-77d0-427c-a7b7-e7c8ddff667d"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
//tC.setPropertyValue("streamhandleFULL","urn:dece:streamhandleid:org:dece:973A15CDA87B7C93E0401F0A059969A1");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("loopuntil","25");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","ACCOUNT_NOT_ACTIVE");
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="928620f7-80f8-45b1-b1a8-1eff49033ad9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="2d69e37e-af8c-4b47-aaf0-42dda83af4b3" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="45e36113-2501-4b21-8d1a-7921a9a2ced1"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();



	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="04772064-bd08-4f94-92e2-32eed2243834"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTALCS" id="8399ab4c-5a88-428b-9094-08878ef9316b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Update ACCOUNT.STATUS to 'blocked:tou'" id="b8262a31-48a5-446c-867e-525003e8e82d"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"blocked:tou") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="4cb9eaae-8a96-4e36-b960-e103821d92a8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT.STATUS to 'active'" id="c1f9b264-f310-4d4a-ab09-7232bc536da3"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"active") == 1;</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>80340</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>portal</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>username</con:name><con:value>stream_list_view_20140131_04592</con:value></con:property><con:property><con:name>password</con:name><con:value/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value>urn:dece:streamhandleid:org:dece:A0C077A527AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>accountoid</con:name><con:value>9AA79C9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>useroid</con:name><con:value>4BA7894005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertid</con:name><con:value/></con:property><con:property><con:name>assert</con:name><con:value>nVZbc9o4FH7vr/C4jx3jC+ZiT2DGENi6CaQFGrp52RHyAZTYkmPJhvTXr2RiAoRk053JDNHx0Xe+c9EnXXCUxI4fcA6ZIIxq4WVH/8ezPORGi7rhLequ4doOMhZWq2k0LWeBHIiakePpWsh5DiHlAlHR0R3Ldg3LNur2zLH9hufb9ZprN+907RYyLqGlS83StW0SU+6XYTt6nlGfIU64T1EC3BfYnwaja196+qjipHcvdizLgFl3LUTqmyauRYAhjnENs8S8MI98LiLuT8mKIpFn8Bwz4h39ee9ms6lt6jWWrUzHsizT8kzpE3Gy+qx3P1WbIQrpku3WfUQZJRjF5DdSpEYg1izSgnjFMiLWyRvQtmlbCtqALTaw7dLPuvkSoGT3QaQjkhlHBl8juwKbwBIyoBi0n5Owo3/+WAd3e2cZonzJsoSfrP+MEtACYpZCZPAqs4rdxxHPlKt7AdgPKY5zTgoYqzFJEQaufc9gSbbXhMvhi7hWtl/bcvlHqikD/CdtuTAPuUrq5pnqXJIVcPF/enbYrx3KLYpz6PKN18NXM9Rixe+52edhHv8MsnHbGbNOSeHQeUdq3+7n9emw7mfreRNdTFI0gK/f6n/h+4f7X8Mp6f8cJeRq4VwTvB303OGiWDYak+LbfW+bXw0Gt7P8S5FR/KOP5sP29MENN3/d3bfmN+NP4ddogbN131nb3uXD1ygK2Ow6TacwvPnGHptj8Tt1fy0fH2/F+Cm8J1ejxGqZC9Foinl/8qPwHkZfNumykd4N6/knMc9HUX/w1IT531d3c3rbXnVecjrM4dhYScI0X9wDFtVSjUd4qQ1lv5B4X16UhUTGsnT1U6VRXAAVelftUtLi51KASOTLZu7W9V7QanquZTWCQd21La/nug35n+e27aEXtCsN2rE4odhndElULKWyu/l5nyBOfA40gswoWI7XwPV3EC+RQFpIJ/JwMMphxqSKt61mM3CavUZQdwO3V++3mz1r4ASB1xr0vb6ja2MmbuhNFiwFZJWCO1LEZ5Z1pOATwCQloGRezTmXg86FLMkjKnIR27UC1Sjk8iLIlBb7jttumJwkaQyKsJmwKI+hlq7TskAm3/06BsK8tBKOU5YJFNvlMXwzy9NvVUGkT0SUA1cp9UA2Fc7cSFaVz6u8G2dvrgo+yCOiTpusrsgI3jE5/vQyNGpa9hPzkljFfL/hDwEwPwNhvsPPPC3NPmJUkIP41S0rLw4pK92qv4+o9ljLiyIvO9pSkplJeNM2HducAs6l7j3N2ANQcw9hfuja2bM+iby3H/PLxZpOBRKQyPnTyuUH3hxT4OrNEcrzs/3og+YopKybgK04Z+vH8mmiGL/7esE+Vn7S/F3+bFgWvbTrDNZBHJmnfGgIQldqpS6YpzemAzMJS6QisuwQ/BzAueDHxn2R91yEnKZFLuDtL5qSuo6OMGY5FeGlXhoO5bfkKZ5S8F+cXsGUEv98Z2/5m3f2r9H1VAphgvS9L/lvZ4OU44JBV0+DkktH38onqAxOVwdy/0zwUPHbQdByet5g6L6v+MeZdF+ZX1sOanp6Hrr/Ag==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>25</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value>ACCOUNT_NOT_ACTIVE</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value>0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>FFB0DF8527AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value>FFB0DF8527AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value>urn:dece:rightstokenid:org:dece:FFB0DF8527AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value>urn:dece:rightstokenid:org:dece:FFB0DF8527AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>userIndex</con:name><con:value>4</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value>A0C077A527AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandleFULL_null</con:name><con:value>urn:dece:streamhandleid:org:dece:A0C077A527AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle_null</con:name><con:value>A0C077A527AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectNickname_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_null</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_null</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_null</con:name><con:value>2014/01/31 22:36:39</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value>urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRequestingUser_null</con:name><con:value>urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value>urn:dece:rightstokenid:org:dece:FFB0DF8527AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_null</con:name><con:value>urn:dece:rightstokenid:org:dece:FFB0DF8527AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value>4</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>portal</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_null</con:name><con:value>portal</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c886c03e-50e1-4add-b361-6d2a2d0a8984</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84920b96-448b-468f-9732-16c6de5a31aa</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2bf7a321-c7de-4330-98db-7a962504469a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b4575073-0636-4e9e-b124-ada3b56a200a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_79057 - StreamListView - PORTALCS - AccountNotActive - ACCOUNT.STATUS of blocked status - 403 Forbidden" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="a2b49dd3-8820-4512-a7ff-7be20d623ff1" disabled="true"><con:description>This test case will verify proper response from the StreamCreate API when the supplied SAML assertion references a node account that is in deleted status</con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="91ded0d8-ff89-45dc-9619-3694bb6de42d"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
//tC.setPropertyValue("streamhandleFULL","urn:dece:streamhandleid:org:dece:973A15CDA87B7C93E0401F0A059969A1");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("loopuntil","25");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","ACCOUNT_NOT_ACTIVE");
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="f89f9386-b5ef-4a9d-8f71-561f21d6a005"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="41c70387-d31b-4b57-8cf4-71251f12a747" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="40d2a25b-625b-4adf-a55f-2536c4b33ad0"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();



	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="e0cee36c-9a35-47aa-bcf3-5e8c45e7fa3f"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTALCS" id="62ca2aa5-f7c0-4bc0-b02e-7bb0ebc1ec22"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Update ACCOUNT.STATUS to 'blocked'" id="ab05bbf0-a2a9-4fa9-8af4-ab993caf65fa"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"blocked") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="ea1ce8d7-eb33-4a74-b513-ec7e948b0367"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT.STATUS to 'active'" id="13a9de25-90c6-4577-add3-22af4f6af497"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"active") == 1;</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>80340</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>portal</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>username</con:name><con:value>stream_list_view_20140131_04592</con:value></con:property><con:property><con:name>password</con:name><con:value/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value>urn:dece:streamhandleid:org:dece:71C0A7B627AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>accountoid</con:name><con:value>9AA79C9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>useroid</con:name><con:value>4BA7894005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertid</con:name><con:value/></con:property><con:property><con:name>assert</con:name><con:value>nVZbc9o4FH7vr/C4jx3jC+ZiT2DGENi6CaQFGrp52RHyAZTYkmPJhvTXr2RiAoRk053JDNHx0Xe+c9EnXXCUxI4fcA6ZIIxq4WVH/8ezPORGi7rhLequ4doOMhZWq2k0LWeBHIiakePpWsh5DiHlAlHR0R3Ldg3LNur2zLH9hufb9ZprN+907RYyLqGlS83StW0SU+6XYTt6nlGfIU64T1EC3BfYnwaja196+qjipHcvdizLgFl3LUTqmyauRYAhjnENs8S8MI98LiLuT8mKIpFn8Bwz4h39ee9ms6lt6jWWrUzHsizT8kzpE3Gy+qx3P1WbIQrpku3WfUQZJRjF5DdSpEYg1izSgnjFMiLWyRvQtmlbCtqALTaw7dLPuvkSoGT3QaQjkhlHBl8juwKbwBIyoBi0n5Owo3/+WAd3e2cZonzJsoSfrP+MEtACYpZCZPAqs4rdxxHPlKt7AdgPKY5zTgoYqzFJEQaufc9gSbbXhMvhi7hWtl/bcvlHqikD/CdtuTAPuUrq5pnqXJIVcPF/enbYrx3KLYpz6PKN18NXM9Rixe+52edhHv8MsnHbGbNOSeHQeUdq3+7n9emw7mfreRNdTFI0gK/f6n/h+4f7X8Mp6f8cJeRq4VwTvB303OGiWDYak+LbfW+bXw0Gt7P8S5FR/KOP5sP29MENN3/d3bfmN+NP4ddogbN131nb3uXD1ygK2Ow6TacwvPnGHptj8Tt1fy0fH2/F+Cm8J1ejxGqZC9Foinl/8qPwHkZfNumykd4N6/knMc9HUX/w1IT531d3c3rbXnVecjrM4dhYScI0X9wDFtVSjUd4qQ1lv5B4X16UhUTGsnT1U6VRXAAVelftUtLi51KASOTLZu7W9V7QanquZTWCQd21La/nug35n+e27aEXtCsN2rE4odhndElULKWyu/l5nyBOfA40gswoWI7XwPV3EC+RQFpIJ/JwMMphxqSKt61mM3CavUZQdwO3V++3mz1r4ASB1xr0vb6ja2MmbuhNFiwFZJWCO1LEZ5Z1pOATwCQloGRezTmXg86FLMkjKnIR27UC1Sjk8iLIlBb7jttumJwkaQyKsJmwKI+hlq7TskAm3/06BsK8tBKOU5YJFNvlMXwzy9NvVUGkT0SUA1cp9UA2Fc7cSFaVz6u8G2dvrgo+yCOiTpusrsgI3jE5/vQyNGpa9hPzkljFfL/hDwEwPwNhvsPPPC3NPmJUkIP41S0rLw4pK92qv4+o9ljLiyIvO9pSkplJeNM2HducAs6l7j3N2ANQcw9hfuja2bM+iby3H/PLxZpOBRKQyPnTyuUH3hxT4OrNEcrzs/3og+YopKybgK04Z+vH8mmiGL/7esE+Vn7S/F3+bFgWvbTrDNZBHJmnfGgIQldqpS6YpzemAzMJS6QisuwQ/BzAueDHxn2R91yEnKZFLuDtL5qSuo6OMGY5FeGlXhoO5bfkKZ5S8F+cXsGUEv98Z2/5m3f2r9H1VAphgvS9L/lvZ4OU44JBV0+DkktH38onqAxOVwdy/0zwUPHbQdByet5g6L6v+MeZdF+ZX1sOanp6Hrr/Ag==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>25</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value>ACCOUNT_NOT_ACTIVE</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value>0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>C0C0AA9627AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value>C0C0AA9627AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value>urn:dece:rightstokenid:org:dece:C0C0AA9627AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value>urn:dece:rightstokenid:org:dece:C0C0AA9627AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>userIndex</con:name><con:value>4</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value>71C0A7B627AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandleFULL_null</con:name><con:value>urn:dece:streamhandleid:org:dece:71C0A7B627AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle_null</con:name><con:value>71C0A7B627AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectNickname_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_null</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_null</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_null</con:name><con:value>2014/01/31 22:36:43</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value>urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRequestingUser_null</con:name><con:value>urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value>urn:dece:rightstokenid:org:dece:C0C0AA9627AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_null</con:name><con:value>urn:dece:rightstokenid:org:dece:C0C0AA9627AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value>4</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>portal</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_null</con:name><con:value>portal</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c886c03e-50e1-4add-b361-6d2a2d0a8984</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84920b96-448b-468f-9732-16c6de5a31aa</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2bf7a321-c7de-4330-98db-7a962504469a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b4575073-0636-4e9e-b124-ada3b56a200a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_79081 - StreamListView - PORTALCS - UserNotActive - User with a deleted status - 403 Forbidden" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="bcff7897-e36d-4f23-aac4-febee1406f57" disabled="true"><con:description>This test case will verify proper response from the StreamCreate API when the supplied SAML assertion references a user that is in suspended status</con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="cce13f54-7902-4823-9a5c-84146692e540"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL","urn:dece:streamhandleid:org:dece:973A15CDA87B7C93E0401F0A059969A1");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("loopuntil","25");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","USER_NOT_ACTIVE");
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="2b100a91-c330-4f0b-a884-3f370d8be0cb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="f7996cc1-23b5-4fa8-8552-9d9b4b581045" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="dd0e6542-6ab7-497b-acba-c8c87e91e74a"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();



	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="1bbfced6-3a3b-4b46-8cd2-bc8ef6d38fd9"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTALCS" id="8216f85c-624c-4649-9cbe-172eeb8bd058"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT_USER.STATUS to 'deleted'" id="2173dc0d-8ad3-44ca-aa9f-8e4aaeb712b9"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUser(log,tP.getPropertyValue("targetSystem"));

assert a.userSetStatus(tC.getPropertyValue("useroid"),"deleted") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="506b7522-4121-4bcf-8f4b-b66039321d56"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT_USER.STATUS to 'active'" id="68e16e3c-3596-4336-835e-fb61d89b1928"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUser(log,tP.getPropertyValue("targetSystem"));

assert a.userSetStatus(tC.getPropertyValue("useroid"),"active") == 1;</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">portal</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportalcs1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140131_04592</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:13C039D827AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9AA79C9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4BA7894005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZbc9o4FH7vr/C4jx3jC+ZiT2DGENi6CaQFGrp52RHyAZTYkmPJhvTXr2RiAoRk053JDNHx0Xe+c9EnXXCUxI4fcA6ZIIxq4WVH/8ezPORGi7rhLequ4doOMhZWq2k0LWeBHIiakePpWsh5DiHlAlHR0R3Ldg3LNur2zLH9hufb9ZprN+907RYyLqGlS83StW0SU+6XYTt6nlGfIU64T1EC3BfYnwaja196+qjipHcvdizLgFl3LUTqmyauRYAhjnENs8S8MI98LiLuT8mKIpFn8Bwz4h39ee9ms6lt6jWWrUzHsizT8kzpE3Gy+qx3P1WbIQrpku3WfUQZJRjF5DdSpEYg1izSgnjFMiLWyRvQtmlbCtqALTaw7dLPuvkSoGT3QaQjkhlHBl8juwKbwBIyoBi0n5Owo3/+WAd3e2cZonzJsoSfrP+MEtACYpZCZPAqs4rdxxHPlKt7AdgPKY5zTgoYqzFJEQaufc9gSbbXhMvhi7hWtl/bcvlHqikD/CdtuTAPuUrq5pnqXJIVcPF/enbYrx3KLYpz6PKN18NXM9Rixe+52edhHv8MsnHbGbNOSeHQeUdq3+7n9emw7mfreRNdTFI0gK/f6n/h+4f7X8Mp6f8cJeRq4VwTvB303OGiWDYak+LbfW+bXw0Gt7P8S5FR/KOP5sP29MENN3/d3bfmN+NP4ddogbN131nb3uXD1ygK2Ow6TacwvPnGHptj8Tt1fy0fH2/F+Cm8J1ejxGqZC9Foinl/8qPwHkZfNumykd4N6/knMc9HUX/w1IT531d3c3rbXnVecjrM4dhYScI0X9wDFtVSjUd4qQ1lv5B4X16UhUTGsnT1U6VRXAAVelftUtLi51KASOTLZu7W9V7QanquZTWCQd21La/nug35n+e27aEXtCsN2rE4odhndElULKWyu/l5nyBOfA40gswoWI7XwPV3EC+RQFpIJ/JwMMphxqSKt61mM3CavUZQdwO3V++3mz1r4ASB1xr0vb6ja2MmbuhNFiwFZJWCO1LEZ5Z1pOATwCQloGRezTmXg86FLMkjKnIR27UC1Sjk8iLIlBb7jttumJwkaQyKsJmwKI+hlq7TskAm3/06BsK8tBKOU5YJFNvlMXwzy9NvVUGkT0SUA1cp9UA2Fc7cSFaVz6u8G2dvrgo+yCOiTpusrsgI3jE5/vQyNGpa9hPzkljFfL/hDwEwPwNhvsPPPC3NPmJUkIP41S0rLw4pK92qv4+o9ljLiyIvO9pSkplJeNM2HducAs6l7j3N2ANQcw9hfuja2bM+iby3H/PLxZpOBRKQyPnTyuUH3hxT4OrNEcrzs/3og+YopKybgK04Z+vH8mmiGL/7esE+Vn7S/F3+bFgWvbTrDNZBHJmnfGgIQldqpS6YpzemAzMJS6QisuwQ/BzAueDHxn2R91yEnKZFLuDtL5qSuo6OMGY5FeGlXhoO5bfkKZ5S8F+cXsGUEv98Z2/5m3f2r9H1VAphgvS9L/lvZ4OU44JBV0+DkktH38onqAxOVwdy/0zwUPHbQdByet5g6L6v+MeZdF+ZX1sOanp6Hrr/Ag==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">25</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">USER_NOT_ACTIVE</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80348</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>62C07FB827AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value>62C07FB827AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value>urn:dece:rightstokenid:org:dece:62C07FB827AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value>urn:dece:rightstokenid:org:dece:62C07FB827AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>userIndex</con:name><con:value>4</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value>13C039D827AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandleFULL_null</con:name><con:value>urn:dece:streamhandleid:org:dece:13C039D827AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle_null</con:name><con:value>13C039D827AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectNickname_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_null</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_null</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_null</con:name><con:value>2014/01/31 22:36:52</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value>urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRequestingUser_null</con:name><con:value>urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value>urn:dece:rightstokenid:org:dece:62C07FB827AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_null</con:name><con:value>urn:dece:rightstokenid:org:dece:62C07FB827AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value>4</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>portal</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_null</con:name><con:value>portal</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7c187921-7256-4fab-a411-1fec1e5fe81a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db863a82-4a00-4031-b46a-0134fc3d64fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6db44159-9b83-454f-94b6-dd3cbbd4518e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d7bb862-6f59-4cb6-b72e-4f440475a799</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_79081 - StreamListView - PORTALCS - UserNotActive - User with a pending status - 403 Forbidden" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="d33f2b11-1059-4379-ba31-9fa0edbf2bd6" disabled="true"><con:description>This test case will verify proper response from the StreamCreate API when the supplied SAML assertion references a user that is in suspended status</con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="7e3f4373-15c9-4ec5-afed-cb9377a6cbfd"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL","urn:dece:streamhandleid:org:dece:973A15CDA87B7C93E0401F0A059969A1");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("loopuntil","25");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","USER_NOT_ACTIVE");
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="c752bd5f-e98b-4825-b1eb-eb117eddc72b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="73c26f18-da02-4aa1-9f56-4194f8a490d7" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="36912b96-0097-4402-80f2-8b89704f3802"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();



	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="0bb6e994-8b8a-4944-aa97-9dba60d511eb"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTALCS" id="35cd9959-6391-46dc-954f-624f53534523"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT_USER.STATUS to 'pending'" id="2a35997a-202b-45a8-aed4-463c47e77431"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUser(log,tP.getPropertyValue("targetSystem"));

assert a.userSetStatus(tC.getPropertyValue("useroid"),"pending") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="0a7695be-5e2f-46b3-8694-6f7f96653c42"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT_USER.STATUS to 'active'" id="70d63abe-9c25-4d4c-856a-625e0a5b9444"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUser(log,tP.getPropertyValue("targetSystem"));

assert a.userSetStatus(tC.getPropertyValue("useroid"),"active") == 1;</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">portal</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportalcs1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140131_04592</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:E3C0ABE927AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9AA79C9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4BA7894005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZbc9o4FH7vr/C4jx3jC+ZiT2DGENi6CaQFGrp52RHyAZTYkmPJhvTXr2RiAoRk053JDNHx0Xe+c9EnXXCUxI4fcA6ZIIxq4WVH/8ezPORGi7rhLequ4doOMhZWq2k0LWeBHIiakePpWsh5DiHlAlHR0R3Ldg3LNur2zLH9hufb9ZprN+907RYyLqGlS83StW0SU+6XYTt6nlGfIU64T1EC3BfYnwaja196+qjipHcvdizLgFl3LUTqmyauRYAhjnENs8S8MI98LiLuT8mKIpFn8Bwz4h39ee9ms6lt6jWWrUzHsizT8kzpE3Gy+qx3P1WbIQrpku3WfUQZJRjF5DdSpEYg1izSgnjFMiLWyRvQtmlbCtqALTaw7dLPuvkSoGT3QaQjkhlHBl8juwKbwBIyoBi0n5Owo3/+WAd3e2cZonzJsoSfrP+MEtACYpZCZPAqs4rdxxHPlKt7AdgPKY5zTgoYqzFJEQaufc9gSbbXhMvhi7hWtl/bcvlHqikD/CdtuTAPuUrq5pnqXJIVcPF/enbYrx3KLYpz6PKN18NXM9Rixe+52edhHv8MsnHbGbNOSeHQeUdq3+7n9emw7mfreRNdTFI0gK/f6n/h+4f7X8Mp6f8cJeRq4VwTvB303OGiWDYak+LbfW+bXw0Gt7P8S5FR/KOP5sP29MENN3/d3bfmN+NP4ddogbN131nb3uXD1ygK2Ow6TacwvPnGHptj8Tt1fy0fH2/F+Cm8J1ejxGqZC9Foinl/8qPwHkZfNumykd4N6/knMc9HUX/w1IT531d3c3rbXnVecjrM4dhYScI0X9wDFtVSjUd4qQ1lv5B4X16UhUTGsnT1U6VRXAAVelftUtLi51KASOTLZu7W9V7QanquZTWCQd21La/nug35n+e27aEXtCsN2rE4odhndElULKWyu/l5nyBOfA40gswoWI7XwPV3EC+RQFpIJ/JwMMphxqSKt61mM3CavUZQdwO3V++3mz1r4ASB1xr0vb6ja2MmbuhNFiwFZJWCO1LEZ5Z1pOATwCQloGRezTmXg86FLMkjKnIR27UC1Sjk8iLIlBb7jttumJwkaQyKsJmwKI+hlq7TskAm3/06BsK8tBKOU5YJFNvlMXwzy9NvVUGkT0SUA1cp9UA2Fc7cSFaVz6u8G2dvrgo+yCOiTpusrsgI3jE5/vQyNGpa9hPzkljFfL/hDwEwPwNhvsPPPC3NPmJUkIP41S0rLw4pK92qv4+o9ljLiyIvO9pSkplJeNM2HducAs6l7j3N2ANQcw9hfuja2bM+iby3H/PLxZpOBRKQyPnTyuUH3hxT4OrNEcrzs/3og+YopKybgK04Z+vH8mmiGL/7esE+Vn7S/F3+bFgWvbTrDNZBHJmnfGgIQldqpS6YpzemAzMJS6QisuwQ/BzAueDHxn2R91yEnKZFLuDtL5qSuo6OMGY5FeGlXhoO5bfkKZ5S8F+cXsGUEv98Z2/5m3f2r9H1VAphgvS9L/lvZ4OU44JBV0+DkktH38onqAxOVwdy/0zwUPHbQdByet5g6L6v+MeZdF+ZX1sOanp6Hrr/Ag==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">25</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">USER_NOT_ACTIVE</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80348</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>33C01BC927AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value>33C01BC927AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value>urn:dece:rightstokenid:org:dece:33C01BC927AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value>urn:dece:rightstokenid:org:dece:33C01BC927AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>userIndex</con:name><con:value>4</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value>E3C0ABE927AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandleFULL_null</con:name><con:value>urn:dece:streamhandleid:org:dece:E3C0ABE927AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle_null</con:name><con:value>E3C0ABE927AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectNickname_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_null</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_null</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_null</con:name><con:value>2014/01/31 22:36:57</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value>urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRequestingUser_null</con:name><con:value>urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value>urn:dece:rightstokenid:org:dece:33C01BC927AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_null</con:name><con:value>urn:dece:rightstokenid:org:dece:33C01BC927AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value>4</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>portal</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_null</con:name><con:value>portal</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7c187921-7256-4fab-a411-1fec1e5fe81a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db863a82-4a00-4031-b46a-0134fc3d64fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6db44159-9b83-454f-94b6-dd3cbbd4518e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d7bb862-6f59-4cb6-b72e-4f440475a799</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_79085 - StreamListView - PORTALCS - UserNotActive - User with a blocked status - 403 Forbidden" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="f2262f00-4c75-4adc-b3ca-6545a999f5e1" disabled="true"><con:description>This test case will verify proper response from the StreamCreate API when the supplied SAML assertion references a user that is in suspended status</con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="35187d35-6edf-4a0a-9792-f99380ef8cf7"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL","urn:dece:streamhandleid:org:dece:973A15CDA87B7C93E0401F0A059969A1");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("loopuntil","25");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","USER_NOT_ACTIVE");
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="3b399455-d0f2-4100-a098-17858f3a73d1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="f29f3a17-a7bd-4f43-8060-9b099fb855e5" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="680fabb8-e8c9-4676-bfd9-7b0dfba462e4"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();



	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="598328c7-4a54-4406-9af5-7c583537cb93"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTALCS" id="c4d0304b-d63f-4466-b858-4e17f88ea2dd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT_USER.STATUS to 'blocked'" id="c87398bd-59ff-476b-b37b-7e3e4a3993a9"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUser(log,tP.getPropertyValue("targetSystem"));

assert a.userSetStatus(tC.getPropertyValue("useroid"),"blocked") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="4fe919f5-a92a-4dc4-b537-6db68829ace7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT_USER.STATUS to 'active'" id="d2de3f47-f4b0-4e86-9ed7-f25411f3a15c"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUser(log,tP.getPropertyValue("targetSystem"));

assert a.userSetStatus(tC.getPropertyValue("useroid"),"active") == 1;</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">portal</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportalcs1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140131_04592</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:56C0B61D27AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9AA79C9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4BA7894005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZbc9o4FH7vr/C4jx3jC+ZiT2DGENi6CaQFGrp52RHyAZTYkmPJhvTXr2RiAoRk053JDNHx0Xe+c9EnXXCUxI4fcA6ZIIxq4WVH/8ezPORGi7rhLequ4doOMhZWq2k0LWeBHIiakePpWsh5DiHlAlHR0R3Ldg3LNur2zLH9hufb9ZprN+907RYyLqGlS83StW0SU+6XYTt6nlGfIU64T1EC3BfYnwaja196+qjipHcvdizLgFl3LUTqmyauRYAhjnENs8S8MI98LiLuT8mKIpFn8Bwz4h39ee9ms6lt6jWWrUzHsizT8kzpE3Gy+qx3P1WbIQrpku3WfUQZJRjF5DdSpEYg1izSgnjFMiLWyRvQtmlbCtqALTaw7dLPuvkSoGT3QaQjkhlHBl8juwKbwBIyoBi0n5Owo3/+WAd3e2cZonzJsoSfrP+MEtACYpZCZPAqs4rdxxHPlKt7AdgPKY5zTgoYqzFJEQaufc9gSbbXhMvhi7hWtl/bcvlHqikD/CdtuTAPuUrq5pnqXJIVcPF/enbYrx3KLYpz6PKN18NXM9Rixe+52edhHv8MsnHbGbNOSeHQeUdq3+7n9emw7mfreRNdTFI0gK/f6n/h+4f7X8Mp6f8cJeRq4VwTvB303OGiWDYak+LbfW+bXw0Gt7P8S5FR/KOP5sP29MENN3/d3bfmN+NP4ddogbN131nb3uXD1ygK2Ow6TacwvPnGHptj8Tt1fy0fH2/F+Cm8J1ejxGqZC9Foinl/8qPwHkZfNumykd4N6/knMc9HUX/w1IT531d3c3rbXnVecjrM4dhYScI0X9wDFtVSjUd4qQ1lv5B4X16UhUTGsnT1U6VRXAAVelftUtLi51KASOTLZu7W9V7QanquZTWCQd21La/nug35n+e27aEXtCsN2rE4odhndElULKWyu/l5nyBOfA40gswoWI7XwPV3EC+RQFpIJ/JwMMphxqSKt61mM3CavUZQdwO3V++3mz1r4ASB1xr0vb6ja2MmbuhNFiwFZJWCO1LEZ5Z1pOATwCQloGRezTmXg86FLMkjKnIR27UC1Sjk8iLIlBb7jttumJwkaQyKsJmwKI+hlq7TskAm3/06BsK8tBKOU5YJFNvlMXwzy9NvVUGkT0SUA1cp9UA2Fc7cSFaVz6u8G2dvrgo+yCOiTpusrsgI3jE5/vQyNGpa9hPzkljFfL/hDwEwPwNhvsPPPC3NPmJUkIP41S0rLw4pK92qv4+o9ljLiyIvO9pSkplJeNM2HducAs6l7j3N2ANQcw9hfuja2bM+iby3H/PLxZpOBRKQyPnTyuUH3hxT4OrNEcrzs/3og+YopKybgK04Z+vH8mmiGL/7esE+Vn7S/F3+bFgWvbTrDNZBHJmnfGgIQldqpS6YpzemAzMJS6QisuwQ/BzAueDHxn2R91yEnKZFLuDtL5qSuo6OMGY5FeGlXhoO5bfkKZ5S8F+cXsGUEv98Z2/5m3f2r9H1VAphgvS9L/lvZ4OU44JBV0+DkktH38onqAxOVwdy/0zwUPHbQdByet5g6L6v+MeZdF+ZX1sOanp6Hrr/Ag==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">25</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">USER_NOT_ACTIVE</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80348</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>A5C04AFC27AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value>A5C04AFC27AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value>urn:dece:rightstokenid:org:dece:A5C04AFC27AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value>urn:dece:rightstokenid:org:dece:A5C04AFC27AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>userIndex</con:name><con:value>4</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value>56C0B61D27AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandleFULL_null</con:name><con:value>urn:dece:streamhandleid:org:dece:56C0B61D27AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle_null</con:name><con:value>56C0B61D27AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectNickname_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_null</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_null</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_null</con:name><con:value>2014/01/31 22:37:10</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value>urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRequestingUser_null</con:name><con:value>urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value>urn:dece:rightstokenid:org:dece:A5C04AFC27AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_null</con:name><con:value>urn:dece:rightstokenid:org:dece:A5C04AFC27AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value>4</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>portal</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_null</con:name><con:value>portal</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7c187921-7256-4fab-a411-1fec1e5fe81a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db863a82-4a00-4031-b46a-0134fc3d64fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6db44159-9b83-454f-94b6-dd3cbbd4518e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d7bb862-6f59-4cb6-b72e-4f440475a799</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_79085 - StreamListView - PORTALCS - UserNotActive - User with a blocked:tou status - 403 Forbidden" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="2d179c69-7e73-4d6a-8fc4-cfdbfd42c261" disabled="true"><con:description>This test case will verify proper response from the StreamCreate API when the supplied SAML assertion references a user that is in suspended status</con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="339d3a4e-b715-4d13-894e-9d26713b0fde"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid30").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL","urn:dece:streamhandleid:org:dece:973A15CDA87B7C93E0401F0A059969A1");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("loopuntil","25");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","USER_NOT_ACTIVE");
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="c2939b38-e384-4c89-9f63-2e936b3f9a11"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="63c5eea4-c58c-49d5-9d03-5d79af1f0d54" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="f7e60225-9c3c-485d-abf5-2737093c23a2"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();



	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="188ea1dd-d882-4abd-bc72-de6c8ea30c90"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to PORTALCS" id="2a3d2ff0-f001-4fac-b94e-81dabaed280d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("nodetype","portal");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT_USER.STATUS to 'blocked:tou'" id="b5ce3ee8-7c72-4c0a-95f0-d9ef13989589"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUser(log,tP.getPropertyValue("targetSystem"));

assert a.userSetStatus(tC.getPropertyValue("useroid"),"blocked:tou") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="0a8c18f5-d4ce-4fbd-89b5-6fc86a26a2e0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT_USER.STATUS to 'active'" id="8092d31e-6d5d-4de9-8dc8-67ddc6b35cc1"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUser(log,tP.getPropertyValue("targetSystem"));

assert a.userSetStatus(tC.getPropertyValue("useroid"),"active") == 1;</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">portal</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportalcs1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140131_04592</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:27C0C28E27AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9AA79C9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4BA7894005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZbc9o4FH7vr/C4jx3jC+ZiT2DGENi6CaQFGrp52RHyAZTYkmPJhvTXr2RiAoRk053JDNHx0Xe+c9EnXXCUxI4fcA6ZIIxq4WVH/8ezPORGi7rhLequ4doOMhZWq2k0LWeBHIiakePpWsh5DiHlAlHR0R3Ldg3LNur2zLH9hufb9ZprN+907RYyLqGlS83StW0SU+6XYTt6nlGfIU64T1EC3BfYnwaja196+qjipHcvdizLgFl3LUTqmyauRYAhjnENs8S8MI98LiLuT8mKIpFn8Bwz4h39ee9ms6lt6jWWrUzHsizT8kzpE3Gy+qx3P1WbIQrpku3WfUQZJRjF5DdSpEYg1izSgnjFMiLWyRvQtmlbCtqALTaw7dLPuvkSoGT3QaQjkhlHBl8juwKbwBIyoBi0n5Owo3/+WAd3e2cZonzJsoSfrP+MEtACYpZCZPAqs4rdxxHPlKt7AdgPKY5zTgoYqzFJEQaufc9gSbbXhMvhi7hWtl/bcvlHqikD/CdtuTAPuUrq5pnqXJIVcPF/enbYrx3KLYpz6PKN18NXM9Rixe+52edhHv8MsnHbGbNOSeHQeUdq3+7n9emw7mfreRNdTFI0gK/f6n/h+4f7X8Mp6f8cJeRq4VwTvB303OGiWDYak+LbfW+bXw0Gt7P8S5FR/KOP5sP29MENN3/d3bfmN+NP4ddogbN131nb3uXD1ygK2Ow6TacwvPnGHptj8Tt1fy0fH2/F+Cm8J1ejxGqZC9Foinl/8qPwHkZfNumykd4N6/knMc9HUX/w1IT531d3c3rbXnVecjrM4dhYScI0X9wDFtVSjUd4qQ1lv5B4X16UhUTGsnT1U6VRXAAVelftUtLi51KASOTLZu7W9V7QanquZTWCQd21La/nug35n+e27aEXtCsN2rE4odhndElULKWyu/l5nyBOfA40gswoWI7XwPV3EC+RQFpIJ/JwMMphxqSKt61mM3CavUZQdwO3V++3mz1r4ASB1xr0vb6ja2MmbuhNFiwFZJWCO1LEZ5Z1pOATwCQloGRezTmXg86FLMkjKnIR27UC1Sjk8iLIlBb7jttumJwkaQyKsJmwKI+hlq7TskAm3/06BsK8tBKOU5YJFNvlMXwzy9NvVUGkT0SUA1cp9UA2Fc7cSFaVz6u8G2dvrgo+yCOiTpusrsgI3jE5/vQyNGpa9hPzkljFfL/hDwEwPwNhvsPPPC3NPmJUkIP41S0rLw4pK92qv4+o9ljLiyIvO9pSkplJeNM2HducAs6l7j3N2ANQcw9hfuja2bM+iby3H/PLxZpOBRKQyPnTyuUH3hxT4OrNEcrzs/3og+YopKybgK04Z+vH8mmiGL/7esE+Vn7S/F3+bFgWvbTrDNZBHJmnfGgIQldqpS6YpzemAzMJS6QisuwQ/BzAueDHxn2R91yEnKZFLuDtL5qSuo6OMGY5FeGlXhoO5bfkKZ5S8F+cXsGUEv98Z2/5m3f2r9H1VAphgvS9L/lvZ4OU44JBV0+DkktH38onqAxOVwdy/0zwUPHbQdByet5g6L6v+MeZdF+ZX1sOanp6Hrr/Ag==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">25</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">USER_NOT_ACTIVE</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">8AA72B9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3BA7694005AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0BA7AC9EF4AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80348</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>76C0D31E27AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value>76C0D31E27AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value>urn:dece:rightstokenid:org:dece:76C0D31E27AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value>urn:dece:rightstokenid:org:dece:76C0D31E27AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>userIndex</con:name><con:value>4</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value>27C0C28E27AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandleFULL_null</con:name><con:value>urn:dece:streamhandleid:org:dece:27C0C28E27AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamhandle_null</con:name><con:value>27C0C28E27AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectNickname_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_null</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_null</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_null</con:name><con:value>2014/01/31 22:37:15</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value>urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRequestingUser_null</con:name><con:value>urn:dece:userid:org:dece:0DB73FA705AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value>urn:dece:rightstokenid:org:dece:76C0D31E27AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>expectRightsToken_null</con:name><con:value>urn:dece:rightstokenid:org:dece:76C0D31E27AE34109B445E349481F9A8</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value>4</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>portal</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_null</con:name><con:value>portal</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7c187921-7256-4fab-a411-1fec1e5fe81a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db863a82-4a00-4031-b46a-0134fc3d64fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6db44159-9b83-454f-94b6-dd3cbbd4518e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d7bb862-6f59-4cb6-b72e-4f440475a799</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>QC_TestPlanDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestLabDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestSet</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Setup" disabled="true" id="40d8ae89-87f0-4f92-98e0-24f0a131d54c"><con:description/><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Node_Setup" searchProperties="true" id="c43e59e6-f17c-44b3-a93f-7abf2ea8443e"><con:settings/><con:testStep type="jdbc" name="Update_Node_Role" id="38a511eb-08d0-4076-be58-87f7b92da5c2"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" maxRows="" fetchSize="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName xsi:nil="true"/><con:driver>${#Project#JDBCDriver}</con:driver><con:connectionString>${#Project#JDBCConnStr}</con:connectionString><con:password/><con:query>update NODE_ROLE set ROLE = '${#TestCase#Node_Value}' where NODE_OID = '${#TestCase#Node_OID}'</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status"/><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>Node_Value</con:name><con:value>${#Project#NodeValueRetailer}</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>Node_OID</con:name><con:value>${#Project#Node_OID}</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AccName_Gen" searchProperties="true" id="c19e470b-c5fb-4bef-ae93-d31d4bda6c1c"><con:settings/><con:testStep type="datagen" name="AccName" id="aa260f2c-9631-4adb-910b-75099fa2c941"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Script"><con:configuration><script>def today= "Ashwin_Acc_Create_" + new Date().format( 'yyyyMMdd_hhmms' );

return today; 
</script></con:configuration><con:name>AccName</con:name><con:mode>READ</con:mode><con:shared>true</con:shared></con:property></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="0fd47861-cd60-4705-a6b9-2420df75e133"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>DisplayName</con:name><con:sourceType>AccName</con:sourceType><con:sourceStep>AccName</con:sourceStep><con:targetType>AccountDisplayName</con:targetType><con:targetStep>#Project#</con:targetStep></con:transfers></con:config></con:testStep><con:properties><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>tName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>sName</con:name><con:value>E_2_E</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Account_Delete" searchProperties="true" id="dc7b5f1c-c5b9-4598-99cd-1ebdf5c1c9d8"><con:settings/><con:testStep type="jdbc" name="Delete_Account" id="bc68271d-a184-48ee-8d66-fed0933070d3"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" maxRows="" fetchSize="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName xsi:nil="true"/><con:driver>${#Project#JDBCDriver}</con:driver><con:connectionString>${#Project#JDBCConnStr}</con:connectionString><con:password/><con:query>DECLARE
accountid ACCOUNT.ACCOUNT_OID%TYPE;
newsfeedid NEWSFEED_EVENT.NEWSFEED_EVENT_OID%TYPE;
BEGIN
select ACCOUNT_OID into accountid from NODE_ACCOUNT where NODE_ACCOUNT_ID = '${#Project#NODEACCID}';
--select NEWSFEED_EVENT_OID into newsfeedid from NEWSFEED_EVENT where ACCOUNT_OID = accountid;
delete from RIGHTS_LOCKER where ACCOUNT_OID = accountid;
delete from NODE_ACCOUNT where ACCOUNT_OID = accountid;
delete from DRM_DOMAIN where ACCOUNT_OID = accountid;
delete from ACCOUNT_STATUS_HISTORY where ACCOUNT_OID = accountid;
--delete from NEWSFEED_PARM_VAL where NEWSFEED_EVENT_OID = newsfeedid;
--delete from NEWSFEED_EVENT where ACCOUNT_OID = accountid;
delete from ACCOUNT where ACCOUNT_OID = accountid;
END;</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status"/><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>ACCID</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_User_Details" searchProperties="true" id="3a8ae8c3-474f-4e3b-9a5e-9903d57d017c"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="d5ce8217-db55-46eb-b8c5-c3c200a6cdf0"><con:settings/><con:config><script>String userid;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

//def targetHost = testProject.getPropertyValue("targetHost");
//def nodeaccountId = testCase.getPropertyValue("nodertraccountid");

def a = testRunner.testCase.getTestStepByName('User_Create').httpRequest.response.responseHeaders["Content-Location"];
def b = a.toURL();
def urlStr = b.getPath();

//Assert the hostname in the URL is correct
//assert b.getHost().matches(targetHost.toString());
//Assert the protocol is correct
//assert b.getProtocol().matches("https");
//Assert the URI is correct
//assert b.getPath().matches("/dece/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9]*" );
//this.log.info "b is " + b.getPath();


//this.log.info "urlStr is " +urlStr;

int lastSlash = urlStr.lastIndexOf(':');
accountid = urlStr.substring(lastSlash + 1);

//this.log.info "lastSlash is " +lastSlash + "and user id is " + userid ;

testProject.setPropertyValue("NODEUSERID",userid);
</script></con:config></con:testStep><con:properties><con:property><con:name>synced</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserName_Gen" searchProperties="true" id="bc9c9b20-6afd-4014-bc46-c13e91c6ff98"><con:settings/><con:testStep type="datagen" name="UserName" id="7e37f8bd-81b6-4411-9936-eb9b9b103a79"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Script"><con:configuration><script>def today= "stream_list_view_" + new Date().format( 'yyyyMMdd_hhmms' );

return today; 
</script></con:configuration><con:name>UserName</con:name><con:mode>READ</con:mode><con:shared>true</con:shared></con:property></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="a9fb3d0a-4d24-4f74-b42b-468e34f3aa7d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>DisplayName</con:name><con:sourceType>UserName</con:sourceType><con:sourceStep>UserName</con:sourceStep><con:targetType>UserName</con:targetType><con:targetStep>#Project#</con:targetStep></con:transfers></con:config></con:testStep><con:properties><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>Node_Value</con:name><con:value>urn:dece:role:dece</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="User_Delete" searchProperties="true" id="852d0bb0-0cd4-4367-9cf3-abfd429a7110"><con:settings/><con:testStep type="jdbc" name="Delete_User" id="066563ce-2ab2-401e-838f-358040ade5b7"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" maxRows="" fetchSize="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName xsi:nil="true"/><con:driver>${#Project#JDBCDriver}</con:driver><con:connectionString>${#Project#JDBCConnStr}</con:connectionString><con:password/><con:query>DECLARE
MyAccount ACCOUNT.ACCOUNT_OID%TYPE;
MyUser ACCOUNT_USER.USER_OID% TYPE;
num NUMBER;
BEGIN
SELECT count(*) into num FROM ACCOUNT_USER where ACCOUNT_OID = (select ACCOUNT_OID from NODE_ACCOUNT where NODE_ACCOUNT_ID = '${#Project#NODEACCID}');
IF (num > 0)
THEN
for MyUser in (SELECT USER_OID FROM ACCOUNT_USER where ACCOUNT_OID= (select ACCOUNT_OID from NODE_ACCOUNT where NODE_ACCOUNT_ID = '${#Project#NODEACCID}'))
LOOP
Select ACCOUNT_OID into MyAccount from ACCOUNT_USER where USER_OID = MyUser.USER_OID;
--delete from node_user_saml_assertion where NODE_USER_OID = (select NODE_USER_OID from node_user where USER_OID = MyUser.USER_OID) ;
delete from node_user where USER_OID = MyUser.USER_OID;
delete from user_address where USER_OID = MyUser.USER_OID;
delete from user_alt_email where USER_OID = MyUser.USER_OID;
delete from user_language where USER_OID = MyUser.USER_OID;  
delete from user_status_history where USER_OID = MyUser.USER_OID;
delete from user_security_questions where USER_OID = MyUser.USER_OID;
delete from email_notification where USER_OID = MyUser.USER_OID;
delete from account_user_avatar where USER_OID = MyUser.USER_OID;
delete from NEWSFEED_PARM_VAL where NEWSFEED_EVENT_OID in (select NEWSFEED_EVENT_OID from NEWSFEED_EVENT where ACCOUNT_OID = 
MyAccount);
delete from NEWSFEED_EVENT where ACCOUNT_OID = MyAccount;
delete from account_user where USER_OID = MyUser.USER_OID;
commit;
END LOOP;
END IF;
END;
</con:query><con:storedProcedure>false</con:storedProcedure><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>synced</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Set_PEM" searchProperties="true" id="46cb959b-d106-4f38-afe4-5a372cc2661a"><con:settings/><con:testStep type="groovy" name="Set_Pem_File" id="65558a66-b63e-4572-8ad6-f3f07e1d68c5"><con:settings/><con:config><script/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Node_Setup for streams" searchProperties="true" id="14758f7a-e55e-4692-97f7-9c42a10ee3e5"><con:settings/><con:testStep type="jdbc" name="Update_Node_Role" id="ea2ba5f1-5d3c-4b13-8d92-23a7eac05c62"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" maxRows="" fetchSize="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName xsi:nil="true"/><con:driver>${#Project#JDBCDriver}</con:driver><con:connectionString>${#Project#JDBCConnStr}</con:connectionString><con:password/><con:query>update NODE_ROLE set ROLE = '${#TestCase#Node_Value}' where NODE_OID = '${#TestCase#Node_OID}'</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status"/><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>Node_Value</con:name><con:value>urn:dece:role:lasp:linked</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>Node_OID</con:name><con:value>C381F9C22E4A41E6E0401F0A0599030B</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties><con:property><con:name>QC_TestPlanDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestLabDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestSet</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Test Cases Containing APIs" disabled="true" id="7d0c689e-9049-4abd-a39b-ac6717f0a382"><con:description/><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RightsTokenCreate" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="deb847aa-fa6d-4e72-9e60-88a631186668"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="355fdba3-4079-4cff-988c-47b1e671c8c6"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid20").toString());
tC.setPropertyValue("rtrnodeid",tP.getPropertyValue("nodeoid20").toString());
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("counter",null);
tC.setPropertyValue("cid",null);
tC.setPropertyValue("alid",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="55c378f9-54d8-4daa-8c43-1419f7b301b3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("counter",callTC.getPropertyValue("counter"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("cid",callTC.getPropertyValue("cid"));
tC.setPropertyValue("alid",callTC.getPropertyValue("alid"));
/*
*  Mapping this call only to a retailer node.
*/
//if (tC.getPropertyValue("nodeid") != "1912") {
//	tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());
//}
if (tC.getPropertyValue("counter") == null) {
	tC.setPropertyValue("counter","1");
}
if (tC.getPropertyValue("alid") == null) {
	tC.setPropertyValue("alid",tP.getPropertyValue("alid"));
}
if (tC.getPropertyValue("cid") == null) {
	tC.setPropertyValue("cid",tP.getPropertyValue("cid"));
}</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="05f27a6f-cfbb-4610-acf1-af1e9158b36e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
def assertionAccountIdFULLEncoded = URLEncoder.encode(tC.getPropertyValue("assertionAccountIdFULL"),"UTF-8");
tC.setPropertyValue("assertionAccountIdFULLEncoded",assertionAccountIdFULLEncoded)
</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="631634bd-85d4-4d9f-b2c6-d8765852071f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("POST - RightsTokenCreate");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - RightsTokenCreate" id="059e286b-9b41-4ee9-b180-422ea0c06222"><con:settings/><con:config service="DECE StreamCreate API" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/RightsToken" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - RightsTokenCreate" mediaType="application/xml" postQueryString="false" sslKeystore="RET_CS_1_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="Tester" value="${#Project#tester}"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<ns4:RightsTokenData xmlns:ns1="http://www.w3.org/2001/04/xmlenc#"  xmlns:ns2="http://www.movielabs.com/md"  xmlns:ns3="http://www.w3.org/2000/09/xmldsig#"  xmlns:ns4="${#Project#coordinatorSchema}"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  xsi:schemaLocation="http://www.decellc.org/schema file:/C:/5Work/Workspaces/workspace-sts-2.3.3/dece_api/src/main/webapp/schemas/dece.xsd"   ALID="${#Project#alid}" ContentID="${#Project#cid}">
                <ns4:SoldAs>
                                <ns4:DisplayName Language="en">Avatar BestBuy Special Packaging</ns4:DisplayName>
                                <ns4:ContentID>${#Project#cid}</ns4:ContentID>
                </ns4:SoldAs>
                <ns4:RightsProfiles>
                                <ns4:PurchaseProfile MediaProfile="urn:dece:type:mediaprofile:hd">
                                                <ns4:CanDownload>true</ns4:CanDownload>
                                                <ns4:CanStream>true</ns4:CanStream>
                                </ns4:PurchaseProfile>
                                <ns4:PurchaseProfile MediaProfile="urn:dece:type:mediaprofile:sd">
                                                <ns4:CanDownload>true</ns4:CanDownload>
                                                <ns4:CanStream>true</ns4:CanStream>
                                </ns4:PurchaseProfile>
                                
                </ns4:RightsProfiles>
                <ns4:LicenseAcqBaseLoc>ns3.google.com</ns4:LicenseAcqBaseLoc>
                <ns4:FulfillmentWebLoc MediaProfile="urn:dece:type:mediaprofile:hd" xsi:type="ns4:ResourceLocation-type">
                                <ns4:Location>https://dl.bestbuy.com/p/aaa</ns4:Location>
                                <ns4:Preference>1</ns4:Preference>
                </ns4:FulfillmentWebLoc>
                <ns4:FulfillmentWebLoc MediaProfile="urn:dece:type:mediaprofile:hd" xsi:type="ns4:ResourceLocation-type">
                                <ns4:Location>https://dl.bestbuy.com/p/bbb</ns4:Location>
                                <ns4:Preference>1</ns4:Preference>
                </ns4:FulfillmentWebLoc>
                <ns4:FulfillmentManifestLoc MediaProfile="urn:dece:type:mediaprofile:hd" xsi:type="ns4:ResourceLocation-type">
                                <ns4:Location>https://dl.bestbuy.com/p/ccc</ns4:Location>
                                <ns4:Preference>3</ns4:Preference>
                </ns4:FulfillmentManifestLoc>
                <ns4:FulfillmentManifestLoc MediaProfile="urn:dece:type:mediaprofile:hd" xsi:type="ns4:ResourceLocation-type">
                                <ns4:Location>https://dl.bestbuy.com/p/ddd</ns4:Location>
                                <ns4:Preference>1</ns4:Preference>
                </ns4:FulfillmentManifestLoc>
				<ns4:StreamWebLoc MediaProfile="urn:dece:type:mediaprofile:hd" xsi:type="ns4:ResourceLocation-type">   
                                <ns4:Location>https://dl.bestbuy.com/p/streaminglink</ns4:Location>                                
                                <ns4:Preference>3</ns4:Preference> 
</ns4:StreamWebLoc> 
<ns4:StreamWebLoc MediaProfile="urn:dece:type:mediaprofile:sd" xsi:type="ns4:ResourceLocation-type">    
                                <ns4:Location>https://dl.bestbuy.com/p/streaminglink</ns4:Location>                                
                                <ns4:Preference>3</ns4:Preference> 
</ns4:StreamWebLoc>

                <ns4:PurchaseInfo>
                                <ns4:NodeID>urn:dece:org:org:dece:${#TestCase#nodeid}</ns4:NodeID>
                                <ns4:RetailerTransaction>RetailerTransaction_1_node0799_RetailerNode</ns4:RetailerTransaction>
                                <ns4:PurchaseAccount>urn:dece:accountid:org:dece:${#TestCase#assertionAccountId}</ns4:PurchaseAccount>
                                <ns4:PurchaseUser>urn:dece:userid:org:dece:${#TestCase#assertionUserId}</ns4:PurchaseUser>
                                <ns4:PurchaseTime>2011-06-24T15:12:03.000</ns4:PurchaseTime>
                </ns4:PurchaseInfo>
</ns4:RightsTokenData>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract RightsToken Handle from API Result" id="479aef88-e808-4caa-b3bc-effc26b24123"><con:settings/><con:config><script>import java.net.URLDecoder;
import java.net.URLEncoder;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def tStep  = testCase.getTestStepByName('POST - RightsTokenCreate');
def targetHost = testProject.getPropertyValue("targetHost");
def nodeaccountId = testCase.getPropertyValue("assertionAccountIdFULL");
def urnRightsToken = testProject.getPropertyValue("urnRightsToken");
def urnAcct = testProject.getPropertyValue("urnaccount");

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = testProject.getPropertyValue("VersionMajor");
String minor = testProject.getPropertyValue("VersionMinor");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}
//def a = contentLocation.toURL();
def b = contentLocation;
def urlStr = b;

//Assert the hostname in the URL is correct
//assert b.getHost().matches(targetHost.toString());
//Assert the protocol is correct
//assert b.getProtocol().matches("https");
//Assert the URI is correct
//assert b.getPath().matches("/rest/$major/$minor/Account/$nodeaccountId/RightsToken/$urnRightsToken[0-9, A-F]*")
//contentLocation == urlStr;

//this.log.info "b is " + b.getPath();


//this.log.info "urlStr is " +urlStr;

if(testProject.getPropertyValue("V2") == testProject.getPropertyValue("versionUrlEncode"))
{
int lastColon = urlStr.lastIndexOf('%');
int lastSlash = urlStr.lastIndexOf('/');
rightsid = urlStr.substring(lastColon + 3);
rightsidFULL = urlStr.substring(lastSlash + 1);
testCase.setPropertyValue("rightstokenid",rightsid);
testCase.setPropertyValue("rightstokenidFULL",rightsidFULL);
}
else
{
int lastColon = urlStr.lastIndexOf(':');
int lastSlash = urlStr.lastIndexOf('/');
rightsid = urlStr.substring(lastColon + 1);
rightsidFULL = urlStr.substring(lastSlash + 1);
testCase.setPropertyValue("rightstokenid",rightsid);
testCase.setPropertyValue("rightstokenidFULL",rightsidFULL);
}



</script></con:config></con:testStep><con:testStep type="groovy" name="Return RightsToken to calling Test Case" id="8c996bb4-6c38-4330-9187-d9d126b1fc9b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def count = tC.getPropertyValue("counter");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("rightstokenid",tC.getPropertyValue("rightstokenid"));
callTC.setPropertyValue("rightstokenid_" + count,tC.getPropertyValue("rightstokenid"));
callTC.setPropertyValue("rightstokenidFULL",tC.getPropertyValue("rightstokenidFULL"));
callTC.setPropertyValue("rightstokenidFULL_" + count,tC.getPropertyValue("rightstokenidFULL"));</script></con:config></con:testStep><con:properties><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">15575C84AC6237B6E05305991F0A686D</con:value></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZrb+I6EP0rKPuxCs4TSFSQKJRtbmm3PLbt3S8r40zA28SB2OHRX3/tACnQx+VeCQl5Mp45M3N87EuOk9jy25xDJmjKKuskZtwvrE0tz5ifYk65z3AC3BfEH7Xv+r5VNXy836JVgm5T++1ZTtQgMNFhYmLdCb2a7mHb0et1iBqmBTWP2NKV8xwCxgVmoqlZhunqhvqNTcd3HN8wqqbX+KVVHiHjMrZ0qRraDtSaN7WZEHMfodVqVV3Z1TSbIsswTPR81x+RGSRYa11uKyoSZa2dP6mGQCCOSZWkCbpERz6XIfdHdMqwyDPY5Qo/y2Ugw0PSJ+R0+k0r90IYsCgtlh3MUkYJjukrVv25AzFLw0o7nqYZFbPk0yJMQwXWYU10Yjrsm4aOoZ0Z6AhhxrHOZ9jcxRpCBBkwApWfw6CpfTtvasXWcYYZj9Is4cfL/4YH2BLidA6hzvdl7aCdH/CDTrUugfgBI3HO6RLuFVnnmADfTRPI+aEqDxlEdN2nXBJ0zRU6dAjvZLntRpdOgYv/M6CD4WyDPOI4h9YCCSu4+OkIYhlP9ngwmqxu76Mb43stbRYADp0LQzna7fKElCWJtjvalN6MOjdB++IVrYaL2bB/301gw147d3c/u7XEDIJ4scrd/iCzH9zIHQ+67ZljeLWrRETp7dOvnmmy2rM5aZDsdbyZu3Ln+PZpeOON7fub+/6LO42Qffv3oBsOeo2o92wSk8fox6ZTnzS+z7zAfGSb4GH2gjJr/dR2o9vaxV/O+uXu4tdmfTFwUf/mYnDN+pNNo1mWc4D/2LY/86N88geI2C8VDYJupSenhMXXYqYsNNSjwtWfK/HhApjQWmqX0g4/l3JHQ1/OcLs2Xbfudho1u929tutXnWvDtQ3X88ye0e45dm0vMlsUJxA7KYuoyqUkd0ubrwGSxOfAQsj0ZZpLpePaFxG7WOBKwIbyEKSMwziV8rwQddelk8nr7I9j5ZOJwaIFeLGU5PtU/GA/snYkIDuW5PqRJA+B0DkFpduK1lzymgvZigVe5iI2q0tcZZBLZc+UyPqW03ARp8k8BgUUJWmYx1Cdz+ZFYxDf/ls6JrywDq/Hvzuj38VpQJ/Wdvpt3wbpE1LlwFVBVyBHCe8uGNt399W8q7r24UW0D9/OQ6oOl+ypyCjZIjn+9EYVxZGSJ/uy9rhL91PDUWh0WlWZLVxSUjK+vLelnEsBaO0Hs8BmdVHNl8u8mIXj2CiT4ZHqBzIsNAKSS4najNMXYKiMgs66D0rgJ8lL+zHEXMzYSGABieROpVie8QAYAVcPgEByfn3u6+IopWydgLX4yNaJ5eNFIf7yfUN8ovyk+UH+rdIsfJvYB7EO8sg65f0vKJuqlboLNp+Qg6QyLJUqlmaHwT8K8FHyY2PZ5BKLkISa5AI+/1JR8tTUMCFpzkTQ1QrDoWQWOMVmDv6b07swhSqXzzT67+80nRYUICAfd5wW8dVt66sjwKYHsrtLeqq8Xr3ndGqWHH3dK5S3vlXeunX1xs8jdK135veWgz6dcrz1Dw==</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:155797F4C6281279E05307991F0A72B3</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:15575C863ADE37BCE05305991F0AF436</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testing</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">155797F08C9F36D6E05305991F0A1D1C</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:155797F08C9F36D6E05305991F0A1D1C</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">RET_CS_1</con:value></con:property><con:property><con:name>sName</con:name><con:value>Portal Customer Support Test Cases_P1_P2</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_86531 - StreamListView - PORTALCS - Standard User can view stream created by Standard User - 200 OK_FLAKY</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value>stream_list_view_20150505_081521</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">15576504994F2A58E05307991F0AB1D9</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value>15575C863ADE37BCE05305991F0AF436</con:value></con:property><con:property><con:name>userrowid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value>155797F4C6281279E05307991F0A72B3</con:value></con:property><con:property><con:name>alid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:alid:file:EXAMPLE_ALID_Version_561393521.txt</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value>15575C84AC6937B6E05305991F0A686D</con:value></con:property><con:property><con:name>assertId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:cid:file:A_File_Name_with_NUMBERS_344946277.txt</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>counter</con:name><con:value>1</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>15575C84AC6937B6E05305991F0A686D</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79609</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A155797F4C6281279E05307991F0A72B3</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/RET_CS_1_concat.pem</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StreamView" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="4740e88d-ca4f-4799-a6da-b675f731ddc3"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="53a0f0ca-d09f-4003-af24-f680db80a24c"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("nodetype",null);
tC.setPropertyValue("streamhandle",null);
tC.setPropertyValue("streamhandleFULL",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("expectErrTypeStreamView",null);
tC.setPropertyValue("expectDBCreatedBy",null);
tC.setPropertyValue("expectDBDeletedBy",null);
tC.setPropertyValue("expectDBStatus",null);
tC.setPropertyValue("expectNickname",null);
tC.setPropertyValue("expectGenericRightsToken",null);
tC.setPropertyValue("recvCreationDate",null);
tC.setPropertyValue("recvExpirationDateTime",null);
tC.setPropertyValue("streamViewIgnoreDateDiff",null);
tC.setPropertyValue("streamViewIgnoreCreateDateDiff",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="5ec56ad9-c85b-45eb-995d-464a1db04eb7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("nodetype",callTC.getPropertyValue("nodetype"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("rightstokenidFULL",callTC.getPropertyValue("rightstokenidFULL"));
tC.setPropertyValue("streamhandleFULL",callTC.getPropertyValue("streamhandleFULL"));
tC.setPropertyValue("streamhandle",callTC.getPropertyValue("streamhandle"));
tC.setPropertyValue("expectErrTypeStreamView",callTC.getPropertyValue("expectErrTypeStreamView"));
tC.setPropertyValue("expectDBCreatedBy",callTC.getPropertyValue("expectDBCreatedBy"));
tC.setPropertyValue("expectDBDeletedBy",callTC.getPropertyValue("expectDBDeletedBy"));
tC.setPropertyValue("expectDBStatus",callTC.getPropertyValue("expectDBStatus"));
tC.setPropertyValue("expectNickname",callTC.getPropertyValue("nickname"));
tC.setPropertyValue("expectGenericRightsToken",callTC.getPropertyValue("expectGenericRightsToken"));
tC.setPropertyValue("streamViewIgnoreDateDiff",callTC.getPropertyValue("streamViewIgnoreDateDiff"));
tC.setPropertyValue("streamViewIgnoreCreateDateDiff",callTC.getPropertyValue("streamViewIgnoreCreateDateDiff"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));

if (tC.getPropertyValue("expectErrTypeStreamView") == null || tC.getPropertyValue("expectErrTypeStreamView") == "") {
	tC.setPropertyValue("expectErrTypeStreamView","SUCCESS")
}
if (tC.getPropertyValue("expectDBStatus") == null || tC.getPropertyValue("expectDBStatus") == "") {
	tC.setPropertyValue("expectDBStatus","active")
}
if (tC.getPropertyValue("expectGenericRightsToken") == null || tC.getPropertyValue("expectGenericRightsToken") == "") {
	tC.setPropertyValue("expectGenericRightsToken","false")
}
if (tC.getPropertyValue("streamViewIgnoreDateDiff") == null || tC.getPropertyValue("streamViewIgnoreDateDiff") == "null") {
	tC.setPropertyValue("streamViewIgnoreDateDiff","false")
}
if (tC.getPropertyValue("streamViewIgnoreCreateDateDiff") == null || tC.getPropertyValue("streamViewIgnoreCreateDateDiff") == "null") {
	tC.setPropertyValue("streamViewIgnoreCreateDateDiff","false")
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract STREAM_DATA_HISTORY row if Required" id="024d116e-d081-49d4-af0b-030c7b4e89d8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("expectErrTypeStreamView") == "SUCCESS") {
	a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());

	String sh = tC.getPropertyValue("streamhandle");
	String results = null;
	String sql = """select 
 	 to_char(rawtohex(a.STREAM_HISTORY_OID)) STREAM_HISTORY_OID,
	  to_char(rawtohex(a.STREAM_HANDLE_OID)) STREAM_HANDLE_OID,
	  to_char(rawtohex(a.RIGHTS_TOKEN_OID)) RIGHTS_TOKEN_OID,
	  to_char(rawtohex(a.ACCOUNT_OID)) ACCOUNT_OID,
	  to_char(rawtohex(a.CREATED_BY_USER_OID)) CREATED_BY_USER_OID,
 	 TRANSACTION_ID,
	  STATUS,
	  STREAM_CLIENT_NICKNAME,
	  EXPIRATION_DATE,
	  CLOSED_DATE,
	  CLOSED_BY_ORG_ID,
	  CREATED_DATE,
	  to_char(rawtohex(a.CREATED_BY_NODE_OID)) CREATED_BY_NODE_OID 
	  from STREAM_DATA_HISTORY a where STREAM_HANDLE_OID =hextoraw( '$hsh')""";

	  log.info "sql is $sql";

	results = a.SelectFromDB(sql,tP.getPropertyValue("targetSystem").toString());
	log.info results;

	/*
	*  If zero length, no need to continue;
	*/
	assert results.length() > 0;

	try {
		def myXML = new XmlSlurper().parseText(results);
		log.info "myXML.ResultSet.Row.size() is [" + myXML.ResultSet.Row.size() + "]";
		assert myXML.ResultSet.Row.size() >= 1;
	}
	catch(Throwable e) {
		log.info e; 
		assert 1 == 2;
	}
	finally {
		tC.setPropertyValue("streamHistoryRows", results);
	}
}

</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="438d2cb5-7843-435b-8cfc-148e46eb22b8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("GET - StreamView");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - StreamView" id="d9fd7358-d541-4f82-a9c9-fe4a755f0676"><con:settings/><con:config service="DECE StreamCreate API" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/{STREAM}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - StreamView" mediaType="application/xml" sslKeystore="914_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="7f312f47-faf2-4fc3-96c2-3ad632d2224c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - StreamView');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract ERROR table information" id="c4859709-14a8-4e51-ad8a-a33db2cf978c"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def a = new dbUtils.dbErrors(log,tP.getPropertyValue("targetSystem"));

tC.setPropertyValue("errorStatusCode",null);
tC.setPropertyValue("errorReason",null);
tC.setPropertyValue("errorID",null);

String xmlData = "";
String errId = "";

log.info "expectErrTypeStreamView[" + tC.getPropertyValue("expectErrTypeStreamView") + "]";

switch (tC.getPropertyValue("expectErrTypeStreamView")) {
	case "ADULT_CONTENT_NOT_ALLOWED":
		errId = "Policy:AdultContentNotAllowed";
		break;
	case "ACCOUNT_NOT_ACTIVE":
		errId = "AccountNotActive";
		break;
	case "API_NOT_AUTH":
		errId = "Security:RoleInvalid";
		break;
	case "BLOCKED_ACCESS_UNRATED":
		errId = "Policy:UnratedContentBlocked";
		break;
	case "CID_NOT_ACTIVE":
		errId = "ContentIDNotActive";
		break;
	case "CID_NOT_FOUND":
		errId = "ContentIDNotFound";
		break;
	case "LOGICAL_ASSET_NOT_ACTIVE":
		errId = "AssetLogicalIDNotActive";
		break;
	case "RT_RENT_EXPIRED":
		errId = "RightsTokenRentalExpired";
		break;
	case "RT_NOT_FOUND":
		errId = "RightsTokenNotFound";
		break;
	case "RT_NOT_ACTIVE":
		errId = "RightsTokenNotActive";
		break;
	case "RATING_POLICY":
		errId = "RatingPolicyExists";
		break;
	case "CID_NOT_GRANTED":
	case "STREAM_RIGHTS_NOT_GRANTED":
		errId = "StreamRightsNotGranted";
		break;
	case "STREAM_COUNT_EXCEEDED":
		errId = "AccountStreamCountExceedMaxLimit";
		break;
	case "STREAM_COUNT_EXCEEDED_USER":
		errId = "UserStreamCountExceedMaxLimit";
		break;
	case "STREAM_INVALID_TRANS":
		errId = "StreamTransactionIdInvalid";
		break;
	case "STREAM_ACCOUNTID_MISMATCH":
		errId = "AccountIdUnmatched";
		break;		
	case "STREAM_NICKNAME_TOO_LONG":
		errId = "StreamClientNicknameTooLong";
		break;		
	case "STREAM_WINDOW_NOT_ALLOWED":
		errId = "StreamAssetWindowNotAllowed";
		break;
	case "STREAM_OWNER_MISMATCH":
		errId = "StreamOwnerMismatch";
		break;
	case "STREAM_NOT_FOUND":
		errId = "StreamNotFound";
		break;
	case "STREAM_NOT_ACTIVE":
		errId = "StreamNotActive";
		break;
	case "USER_NOT_MATCH_TOKEN":
		errId = "UserIdUnmatched";
		break;
	case "USER_NOT_ACTIVE":
		errId = "UserNotActive";
		break;
	case "USER_NOT_SUPPLIED":
		errId = "UserNotSpecified";
		break;
	case	"USER_PRIVILEGE_ACCESS_RESTRICTED"
	     errId = "UserPrivilegeAccessRestricted";
		break;

}

try {
	xmlData = a.errGetIdInfo(errId);
	
	assert xmlData.trim().length() > 1;

	def myXML = new XmlSlurper().parseText(xmlData);

	log.info myXML.ResultSet.Row.size();
	tC.setPropertyValue("errorStatusCode", myXML.ResultSet.Row[0].STATUS_CODE.toString());
	tC.setPropertyValue("errorReason", myXML.ResultSet.Row[0].REASON.toString());
	tC.setPropertyValue("errorID", myXML.ResultSet.Row[0].ERROR_ID.toString());

	/*
	*  The DB does not contain the complete HTTP status
	*  string, only the code.  Thus, we must adjust.
	*/
	switch (tC.getPropertyValue("errorStatusCode")) {
		case "400":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 400 Bad Request");
			break;
		case "403":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 403 Forbidden");
			break;
		case "404":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 404 Not Found");
			break;
		case "409":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 409 Conflict");
			break;
	}
}
catch (Throwable e) {
	log.info "STEP FAILURE! --- " + e;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="983f0c13-3d54-4178-9815-e51e17a22c6d"><con:settings/><con:config><script><![CDATA[import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Calendar;
import java.text.SimpleDateFormat;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def formatDate(recvDate) {
	try {
		String dateHolder = "";
		Pattern datePattern = Pattern.compile("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})");
		Matcher cdateMatcher = datePattern.matcher(recvDate);
		if (cdateMatcher.find()) {
			dateHolder = cdateMatcher.group(1) + "-" + cdateMatcher.group(2) + "-" +
				cdateMatcher.group(3) + " " + cdateMatcher.group(4) + ":" +
				cdateMatcher.group(5) + ":" + cdateMatcher.group(6);
			log.info "dateHolder[$dateHolder]";	
		}
	} 
	catch (Throwable e) {
		log.info "Matcher Failure!  recvDate[$recvDate] ERROR - " + e;
	} 
	finally {
		return dateHolder;	
	}
}


def url = tP.getPropertyValue("targetHost");
def urnacct = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def urnnode = tP.getPropertyValue("urnNode");
def urnErr = tP.getPropertyValue("urnError");
def acct = tC.getPropertyValue("nodeaccountid");
def sh = tC.getPropertyValue("streamhandleFULL");
def account         = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType   = tC.getPropertyValue("expectErrTypeStreamView");
def XMLbody         = tC.getPropertyValue("XMLbody");
def expectCreatedBy = urnnode + tC.getPropertyValue("expectDBCreatedBy");
def expectDeletedBy = urnnode + tC.getPropertyValue("expectDBDeletedBy");
def expectStatus    = tC.getPropertyValue("expectDBStatus");
def expectRT        = tC.getPropertyValue("rightstokenidFULL");
def expectSH        = tC.getPropertyValue("streamhandleFULL");
def expectNickname  = tC.getPropertyValue("expectNickname");
def expectGenericRightsToken = tC.getPropertyValue("expectGenericRightsToken");

String expectDescription = "";
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");
String errorHost  = "https://" + tP.getPropertyValue("targetHostq") + ":" + tP.getPropertyValue("targetPort");
String errorLinkBase = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#";
boolean errorIDFlag = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag = true;
boolean processXMLFlag = true;
boolean XMLbodynull = false;


switch (expectStatus) {
	case "active":
		expectDescription = "active";
	break;
	default:
		expectDescription = "deleted";
	break;
}

/*
*  Change the expectRH value if policies should result
*  in the generic rightstoken being displayed
*/
if (expectGenericRightsToken == "true") {
	expectRT = tP.getPropertyValue("urnGenericRightsToken");
}

String errorID = "";
String errorReason = "";
String errorLink  = "";
String orgRequest = url + "/rest/$major/$minor/Account/$account/Stream/$sh";
String expectHTTPstatus = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection = "Keep-Alive";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";

this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = false;
		httpLocationHeader = false;
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "Node_status_inactive":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = true;
		errorID = "Bad_Request";
		errorReason = "Node_status_inactive";
		errorLink = "";
	break;

	case "XML_PARSING_ERROR":
		errorLinkFlag = true;
		errorReasonFlag = false;
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID = "urn:dece:errorid:org:dece:SaxParserException";
		errorLink  = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;
	
	default:
		errorReasonFlag = true;
		expectHTTPstatus = tC.getPropertyValue("errorStatusCode");
		errorID     = urnErr + tC.getPropertyValue("errorID");
		errorReason = tC.getPropertyValue("errorReason");
		errorLink   = "$errorLinkBase" + tC.getPropertyValue("errorID");
	break;
}

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;

// Connection
if(tC.getPropertyValue("httpStatus") == "HTTP/1.1 400 Bad Request")
{
	expectHTTPconnection = "close";
}
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert tC.getPropertyValue("httpConnect") == expectHTTPconnection;

//Content-Length
////assert tC.getPropertyValue("httpContentLength").toInteger() > 0;

//No Content-Location
assert tC.getPropertyValue("httpContentLocation") == null;

//Content-Type
assert tC.getPropertyValue("httpContentType") == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {
	assert XMLbody == null;
}

this.log.info "XMLBody Length [" + XMLbody.length() + "] processXMLFlag[$processXMLFlag]";
if (XMLbody != null && processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	if (errorRespType != "SUCCESS") {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;

		// ErrorCode
		this.log.info "Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorLink [" + myXML.Error.ErrorLink.toString() + "] errorLink[$errorLink]";
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} else {
		/*
		* Do expected element sizes first.
		*/
		def ResourceStatusSize = myXML.ResourceStatus.size();
		def CurrentSize = myXML.ResourceStatus.Current.size();
		def ValueSize = myXML.ResourceStatus.Current.Value.size();
		def DescriptionSize = myXML.ResourceStatus.Current.Description.size();
		def RightsTokenIDSize = myXML.RightsTokenID.size();
		def ExpirationDateTimeSize = myXML.ExpirationDateTime.size();
		def recvCreationDate = myXML.ResourceStatus.Current.@CreationDate.text();
		def recvExpirationDateTime = myXML.ExpirationDateTime.toString();
		def recvDeletionDateTime = myXML.ResourceStatus.Current.@DeletionDate.text();
		
		this.log.info "ResourceStatusSize [$ResourceStatusSize] Expect 1";
		this.log.info "CurrentSize [$CurrentSize] Expect 1";
		this.log.info "ValueSize [$ValueSize] Expect 1";
		this.log.info "DescriptionSize [$DescriptionSize] Expect 1";
		this.log.info "RightsTokenIDSize [$RightsTokenIDSize] Expect 1";
		this.log.info "ExpirationDateTimeSize [$ExpirationDateTimeSize] Expect 1";
		assert ResourceStatusSize == 1;
		assert CurrentSize == 1;
		assert ValueSize == 1;
		assert DescriptionSize == 1;
		assert RightsTokenIDSize == 1;
		assert ExpirationDateTimeSize == 1;

		/*
		*  Save the returned values as TC properities for validations
		*  outside this script.
		*/
		tC.setPropertyValue("recvCreationDate",recvCreationDate);
		tC.setPropertyValue("recvDeletionDateTime",recvDeletionDateTime);
		tC.setPropertyValue("recvExpirationDateTime",recvExpirationDateTime);
		
		/*
		*   Lengths
		*/
		assert myXML.ExpirationDateTime.text().length() > 0;
		assert myXML.ResourceStatus.Current.@CreationDate.toString().length() > 0;

		/*  StreamHandle */
		def StreamHandleID = myXML.@StreamHandleID.toString();
		this.log.info "StreamHandleID[$StreamHandleID] - expectSH[$expectSH]";
		assert expectSH == StreamHandleID;

		/*  DeletedBy  */
		def DeletedByValue = myXML.ResourceStatus.Current.@DeletedBy.toString();
		if (expectStatus != "active") {
			this.log.info "DeletedByValue[$DeletedByValue] - expectDeletedBy[$expectDeletedBy]";
			assert expectDeletedBy == DeletedByValue;
		} else {
			this.log.info "Assert no DeletedBy Exists";
			assert DeletedByValue == "";
		}

		/*  CreatedBy  */
		def CreatedByValue = myXML.ResourceStatus.Current.@CreatedBy.toString();
		this.log.info "CreatedByValue[$CreatedByValue] - expectCreatedBy[$expectCreatedBy]";
		assert expectCreatedBy == CreatedByValue;

		/*  status value */
		def Value = myXML.ResourceStatus.Current.Value.text().toString();
		this.log.info "Value[$Value] - expectStatus[$expectStatus]";
		assert expectStatus == Value;

		/*  Description */
		def Description = myXML.ResourceStatus.Current.Description.text().toString();
		this.log.info "Description[$Description] - expectDescription[$expectDescription]";
		assert Description == expectDescription;

		/*  RightsToken */
		def RightsTokenID = myXML.RightsTokenID.text().toString();
		this.log.info "RightsTokenID[$RightsTokenID] - expectRT[$expectRT]";
		assert expectRT == RightsTokenID;

		/*  Stream Nickname  */
		def StreamClientNicknameSize = myXML.StreamClientNickname.size();
		def expectNickSize = 0;
		if (expectNickname != null && expectNickname.length() > 0) {
			expectNickSize = 1;
			StreamClientNickname = myXML.StreamClientNickname.text();
		} else {
			StreamClientNickname = null;
		}
		this.log.info "StreamClientNicknameSize[$StreamClientNicknameSize] - expectNickSize[$expectNickSize]";
		this.log.info "StreamClientNickname[$StreamClientNickname] - expectNickname[$expectNickname]";
		assert StreamClientNicknameSize == expectNickSize;
		assert StreamClientNickname == expectNickname;

		/*
		*
		*  History validation
		*/
		def myHistoryXML = new XmlSlurper().parseText(tC.getPropertyValue("streamHistoryRows"));

		int rCnt = myHistoryXML.ResultSet.Row.size();

		log.info "-------------HISTORY-----------------";
		log.info "History Row Count[$rCnt] - <History> Count [" + myXML.ResourceStatus.History.size() + "]";
		if (tC.getPropertyValue("expectDBDeletedBy") != "1") {
			rCnt -= 1;
		} 
		assert myXML.ResourceStatus.History.Prior.size() == rCnt;
		
		for (int i = 0; i < rCnt; i++) {
			String hrecvModifiedBy = myXML.ResourceStatus.History.Prior[i].@ModifiedBy.text();
			String hexpectModifiedBy = urnnode + myHistoryXML.ResultSet.Row[i].CREATED_BY_NODE_OID.text();
			log.info "$i --> hrecvModifiedBy[$hrecvModifiedBy] - hexpectModifiedBy[$hexpectModifiedBy]";
			assert hrecvModifiedBy == hexpectModifiedBy;

			String hrecvStatus = myXML.ResourceStatus.History.Prior[i].Value;
			String hexpectStatus = myHistoryXML.ResultSet.Row[i].STATUS.text();
			log.info "$i --> hrecvStatus[$hrecvStatus] - hexpectStatus[$hexpectStatus]";
			assert hrecvStatus == hexpectStatus;

			String hrecvDescription = myXML.ResourceStatus.History.Prior[i].Description;
			switch (hexpectStatus) {
				case "active": hexpectDescription = "active"; break;
				case "deleted": hexpectDescription = "deleted"; break;
				default: hexpectDescription = "deleted"; break;
			}
			log.info "$i --> hrecvDescription[$hrecvDescription] - hexpectDescription[$hexpectDescription]";
			assert hrecvDescription == hexpectDescription;

			String hrecvModificationDate = formatDate(myXML.ResourceStatus.History.Prior[i].@ModificationDate.text());
			int subSec = myHistoryXML.ResultSet.Row[i].EXPIRATION_DATE.text().indexOf(".");
			String hexpectModificationDate = myHistoryXML.ResultSet.Row[i].CREATED_DATE.text().substring(0, subSec);
			log.info "$i --> hrecvModificationDate[$hrecvModificationDate] - hexpectModificationDate[$hexpectModificationDate]";
			assert hrecvModificationDate == hexpectModificationDate;
		}
	}
} 

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Verify difference between CreationDate and sysDate() less than 5 minutes" disabled="true" id="aebc7848-c6db-4719-98f3-c2ae0c3f4021"><con:settings/><con:config><script>import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Calendar;
import java.text.SimpleDateFormat;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def formatDate(recvDate) {
	try {
		String dateHolder = "";
		Pattern datePattern = Pattern.compile("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})");
		Matcher cdateMatcher = datePattern.matcher(recvDate);
		if (cdateMatcher.find()) {
			dateHolder = cdateMatcher.group(1) + "/" + cdateMatcher.group(2) + "/" +
				cdateMatcher.group(3) + " " + cdateMatcher.group(4) + ":" +
				cdateMatcher.group(5) + ":" + cdateMatcher.group(6);
			log.info "dateHolder[$dateHolder]";	
		}
	} 
	catch (Throwable e) {
		log.info "Matcher Failure!  recvDate[$recvDate] ERROR - " + e;
	} 
	finally {
		return dateHolder;	
	}
}

log.info "expectErrTypeStreamView is " + tC.getPropertyValue("expectErrTypeStreamView");

if (tC.getPropertyValue("expectErrTypeStreamView") == "SUCCESS" &amp;&amp;
	tC.getPropertyValue("streamViewIgnoreCreateDateDiff") != "true") {
	String recvCdate = tC.getPropertyValue("recvCreationDate").toString();
	String sql = "SELECT TO_CHAR(sysdate, 'YYYY/MM/DD HH24:mi:ss') as TOD from dual";
	String sqlResultXML = "";
	String cDate = "";
	String tod = "";

	try {
		a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());
		sqlResultXML = a.SelectFromDB(sql,tP.getPropertyValue("targetSystem"));
		log.info "sqlResultXML[$sqlResultXML]";

		if (sqlResultXML.length() > 0) {
			def myXML = new XmlSlurper().parseText(sqlResultXML);
			tod = myXML.ResultSet.Row.TOD;
			log.info "tod[$tod]";
		}
	}
	catch (Throwable e) {
		log.info "sql[$sql]";
		log.info "dbUtils request failed! - " + e;
		assert 1 == 2;
	}

	try {
	
		log.info "recvCdate[$recvCdate]";
		log.info "tod[$tod]";
	
		cDate = formatDate(recvCdate);
	
		def a = new generalUtils.generalUtils(log);
		def j = a.dateDiff(cDate,tod,"seconds");
	
		log.info "cDate[$cDate]";
		log.info "tod[$tod]";
		log.info "j[$j]";
	}
	catch (Throwable e) {
		log.info "Matcher Failure: " + e;
	}
	finally {
		/*
		*  Assert the difference between Creation Time and sysdate
		*  is less than 5 minutes.
		*/
		assert j &lt;= 300;
	}
}</script></con:config></con:testStep><con:testStep type="groovy" name="Verify difference between DeletedDate and sysDate() less than 5 minutes" disabled="true" id="fd425bfe-b1a4-4388-8b7d-e8372e8be6bf"><con:settings/><con:config><script>import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Calendar;
import java.text.SimpleDateFormat;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def formatDate(recvDate) {
	try {
		String dateHolder = "";
		Pattern datePattern = Pattern.compile("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})");
		Matcher cdateMatcher = datePattern.matcher(recvDate);
		if (cdateMatcher.find()) {
			dateHolder = cdateMatcher.group(1) + "/" + cdateMatcher.group(2) + "/" +
				cdateMatcher.group(3) + " " + cdateMatcher.group(4) + ":" +
				cdateMatcher.group(5) + ":" + cdateMatcher.group(6);
			log.info "dateHolder[$dateHolder]";	
		}
	} 
	catch (Throwable e) {
		log.info "Matcher Failure!  recvDate[$recvDate] ERROR - " + e;
	} 
	finally {
		return dateHolder;	
	}
}

log.info "expectErrTypeStreamView is " + tC.getPropertyValue("expectErrTypeStreamView");


if ( tC.getPropertyValue("expectDBStatus") == "deleted" &amp;&amp;
	tC.getPropertyValue("expectErrTypeStreamView") == "SUCCESS" &amp;&amp;
	tC.getPropertyValue("streamViewIgnoreDeletionDateDiff") != "true") {
	String recvDdate = tC.getPropertyValue("recvDeletionDateTime").toString();
	String sql = "SELECT TO_CHAR(sysdate, 'YYYY/MM/DD HH24:mi:ss') as TOD from dual";
	String sqlResultXML = "";
	String cDate = "";
	String tod = "";

	try {
		a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());
		sqlResultXML = a.SelectFromDB(sql,tP.getPropertyValue("targetSystem"));
		log.info "sqlResultXML[$sqlResultXML]";

		if (sqlResultXML.length() > 0) {
			def myXML = new XmlSlurper().parseText(sqlResultXML);
			tod = myXML.ResultSet.Row.TOD;
			log.info "tod[$tod]";
		}
	}
	catch (Throwable e) {
		log.info "sql[$sql]";
		log.info "dbUtils request failed! - " + e;
		assert 1 == 2;
	}

	try {
	
		log.info "recvDdate[$recvDdate]";
		log.info "tod[$tod]";
	
		cDate = formatDate(recvDdate);
	
		def a = new generalUtils.generalUtils(log);
		def j = a.dateDiff(cDate,tod,"seconds");
	
		log.info "cDate[$cDate]";
		log.info "tod[$tod]";
		log.info "j[$j]";
	}
	catch (Throwable e) {
		log.info "Matcher Failure: " + e;
	}
	finally {
		/*
		*  Assert the difference between Deletion Time and sysdate
		*  is less than 5 minutes.
		*/
		assert j &lt;= 300;
	}
}</script></con:config></con:testStep><con:testStep type="groovy" name="Verify difference between returned Create/Expire time less than 24 hours" id="aeb180ed-f3ee-47d2-a742-2e24361d40b0"><con:settings/><con:config><script>import java.util.regex.Matcher;
import java.util.regex.Pattern;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

String recvCdate = tC.getPropertyValue("recvCreationDate").toString();
String recvEdate = tC.getPropertyValue("recvExpirationDateTime");
String cDate = "";
String eDate = "";
int streamMaxCreateExpireTimeDiffhours = tP.getPropertyValue("streamMaxCreateExpireTimeDiffhours").toInteger();


def formatDate(recvDate) {
	try {
		String dateHolder = "";
		Pattern datePattern = Pattern.compile("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})");
		Matcher cdateMatcher = datePattern.matcher(recvDate);
		if (cdateMatcher.find()) {
			dateHolder = cdateMatcher.group(1) + "/" + cdateMatcher.group(2) + "/" +
				cdateMatcher.group(3) + " " + cdateMatcher.group(4) + ":" +
				cdateMatcher.group(5) + ":" + cdateMatcher.group(6);
			log.info "dateHolder[$dateHolder]";	
		}
	} 
	catch (Throwable e) {
		log.info "Matcher Failure!  recvDate[$recvDate] ERROR - " + e;
	} 
	finally {
		return dateHolder;	
	}
}
log.info "expectErrTypeStreamView is " + tC.getPropertyValue("expectErrTypeStreamView");

if (tC.getPropertyValue("expectErrTypeStreamView") == "SUCCESS" &amp;&amp;
    tC.getPropertyValue("streamViewIgnoreDateDiff") == "false") {
	try {
	
		log.info "recvCdate[$recvCdate]";
		log.info "recvEdate[$recvEdate]";
		
		cDate = formatDate(recvCdate);
		eDate = formatDate(recvEdate);

		def a = new generalUtils.generalUtils(log);
		def j = a.dateDiff(cDate,eDate);
	
		log.info "cDate[$cDate]";
		log.info "eDate[$eDate]";
		log.info "j[$j]";
	}
	catch (Throwable e) {
		log.info "Matcher Failure: " + e;
	}
	finally {
		/*
		*  Assert the difference between Creation Time and Expire Time
		*  is less than 24 hours.
		*/
		assert j &lt;= streamMaxCreateExpireTimeDiffhours;
	}
}</script></con:config></con:testStep><con:properties><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVdbc6rKEn73V1iux1TCRVGxklQNFwkqKojXl1M4DBdFUAYE/fV7wGhMVlb22uchZabpy9fdH03PM7Z2AdsBGKM48aOwqkovNYu2G5B1+Mc2yzqPjSayHy3INh5thndaVqvBsiysVVWMU6SGOLHC5KXG0gzzSPOPdMtk6h2O6TCNpxbDrGrVGYox8UxUnuhaNd8FIe6UUV9qaRx2Igv7uBNaO4Q7CexMgDboEM2OdYVUe32+gCwDxq9ekuw7FAWfbARREMAnGO2oZ+qTzrONOxPfDa0kjdF7TBu/1N5tsyx7yupPUexSLE3TFM1TRMfGvvur9lq5GiNbDZ3ochatMAp9aAX+2SpAaSjxIrsKAjeK/cTb/cE1QzF04foR5fARMo3wV436CFCi+0tPn0DG2HrEnsVcnRnIQTEKIapODfWl9uuvGngxNWMrxE4U7/CX839DhMIjCqI9CYSviV3B/b3Hb6r1+oxgRw1hkGL/iIYFS/YWRLg6jpHj5wMfE+7ZuFp2v5rjK8EQ/C8deabucRLY1DeVkXwX4eT/add9qy5eZlaQolepZa9EFA/646Hsb/J5DCjs1I1NNti+lBDulS+gbp1+P3/l6Y1W70aG2j1ogI+msS9J3aa76Q353allPfSoTM7rjYHQ6Odis7lyFpM1m8JdLq9Hmjb2Hto8o2Vn77x2egnn6aqBKlOTaS7sdKU/tI7twZrmt5KapFtL2KVjmk1O4lydwJXn9VbytM7hhA8P+/Z6zGVLPoq5xcBqJ2c/o0DC0eMKx+Ntn15GcZs6bie83YX45SOn+xyKvProVCZZ/L/gaF6yEut2EItB4ZC3M0GvmqpK6VkUwWnigkwVgEv+NmAouNuDt/UVPqMFoOtdIIlCsJEHGtgqgJnKgqeJs5mWi2fQE9zhjBiaFRCsBM2QMylbSjNdf5Mzz7SV2WmtBOnqLA81gEtj0dNkQ55JhilrGoguslyT1kq+0SZapupLqUIcSHK+P9sKnyAl9yGrctqEY5cTLl0tZkTePQ12w+PalANN1BRxclAm6rou6XIPGMs5ZLspsT0PdvuospwKd0a9PdoA1M1oEhOcNXObaeaUHUqGVcrMzzJNVXqajjNRL7NSKnLWm03PH7UQBU20d3Ium2B8qQU0xe6QXi162JpzoWaATHJL476c2aMrEE2ns4p4qdVAzgzZmA67mqFmMihlkpwFeM0OvbXiHWFdz3sm2Nw3RtTleTckz0PjCE/coWIpXbDezRhYNzzoc761iDJ31c4kfdnrRyuVuBkCXRYEHRBANChSI/UXwECYcaO9z7M+GjjdaIe8uKIxUX97POd026+P3PFwzknOtjVW/HHdsj1KDSC7qW+BqiK7z3i6ZRtLypBC/9wc9acL5MfLczLkdKbpt7mKMU+nCykKWvbbYjntP+RLqJuj8WQ6H5/zfHjYtM9B8jYS3uJJT5Pc0RChMYYPFG11BbMtceLybUP45Bg04irA1QQAlI3ryj4hsPC2uZDwzdBkQl6giZkizkVlAhTlQVYFSdedrseMoTJLp8xQU2U7IGU6LRdGUFmJgkQ6RVvz1X7JdumVCezSmd6Qu64+5R56C7TSh4E5S0C2nzkhw9DKXn9ztMyFWsEAW80mAnmLhEqqgqk12vfovD9r0sxBt4PehAfTej5ht/nIc1enrbvakqYs716dpQmCmXnHMZVQbF7RTdnQQPvyvuWaOq0bAZk4+/UO5pJJelYaR6YgG12dnuaSBPoXGTYBm+PlWd5oolzaV0CuWYQWx/XCw8tw6I9MOSWkTe/oslmz9L9yrKBY5TPHDiLQwVeOyReOycA5PKhticFcU9zjeeYKinzQW7NBj9/T+mKwrQgPXcpN/KAxCtuZ2X+YM6es5W30+ZxXJU98CJ2lV18nAm2doY5625biG1spbDaCkzbQdG7qU8GJ3qBDhgeVocqEcj05dyk+Th+E3crfnc/1BjvdjSfpUZ1afcycvPVhzmeb8VuTomLlxJ1bq6PeXURwefmOfB2SN+FljFL3A/bTBL6uXpN0vUEwuR6L77AqVbvk42glP69xhcS3H51StbMvdkGcoDCpvRZWxQrXScmi59sd8uW8nHmh2eRYTgDdZotmOEGmGzTTpQHN8XyDFcF117ug+AJRjELHL2IVy+zlY/0zQLjrrJEVo7j2g6eiTlU1NMj2EYUYmdFL7X88XDNraDf4ZttCjTVjOXa9bvOQ4bl6y2m0Oc6CLbveatZr1WGUjMJRDJwExXe7cvvrrmwg6O99VCzU72sFTkhNDtYxTQL26Wg9hSglG3dcLL2dFk2zFPZ3+wAVyKldZKcBetp7+7JCFL78smT5w6WU5plGue78MdGvz641ITq2XyjgIhcBkX6ib5Z++prIbwmz314Oru5BavvFVkMKnMQ+vCD5/OiDLwVRPsjCMM0r5pvq35kW1fjdlPoBEfW1GLdI9tG/i3u9upBtnCxs5Y0Fk14erKfDU3o8ph/di4l7iqHIfxMEU7JRnsxoi0Lq5oL6m13+BvpL4Jv8M7w08cJJQgbBjjCtWh7//R73yZpUIEF58p1MDMjNrQj+4+UOdmChR8Rj8pNFsf1R+G983cUhkIsh5oducSqW8NPn/r6/IR0YEa8+mWNRfO/7O/vvYn8W3sp1g5IQWqzTBP35SbUYUOQ2DWGUhokq1UrB/dAsMSenPep8KP3mptyC3681+Z/usAy10AYT6KGdVbvp+v+u/OiXjYeIWGG/xPJSy8kFnQQP3bsh/Q7wD3Oa+2lOf87k9Tfx75K7mn5l9us/</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:9B66525BAF65015BE0401F0A059942CA</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">a0d4c2f9-822f-46ed-ac24-d19f7a74222c</con:value></con:property><con:property><con:name>errorID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorReason</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorStatusCode</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrTypeStreamView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectGenericRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">true</con:value></con:property><con:property><con:name>expectNickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">873</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testing</con:value></con:property><con:property><con:name>recvCreationDate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2011-09-09T20:14:39.086Z</con:value></con:property><con:property><con:name>recvExpirationDateTime</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2011-09-10T20:14:39.086Z</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:AC8852DAF5E376A5E0401F0A079921B3</con:value></con:property><con:property><con:name>sName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LASP Dynamic Test Cases</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">AC8852DAF5EF76A5E0401F0A079921B3</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:AC8852DAF5EF76A5E0401F0A079921B3</con:value></con:property><con:property><con:name>streamViewIgnoreDateDiff</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">false</con:value></con:property><con:property><con:name>tName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">TC_DECE_18400 - StreamListListView - DLP - Policy - prohibitexplicitlyrics - US - Cannot view rightstoken when policy present</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">pjgorg1full1</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<Stream StreamHandleID="urn:dece:streamhandleid:org:dece:AC8852DAF5EF76A5E0401F0A079921B3" xmlns="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.07/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <RequestingUserID>urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</RequestingUserID>
   <RightsTokenID>urn:dece:rightstokenid:org:dece:AC8852DAF5E376A5E0401F0A079921B3</RightsTokenID>
   <ExpirationDateTime>2011-09-10T20:14:39.086Z</ExpirationDateTime>
   <ResourceStatus>
      <Current CreatedBy="urn:dece:org:org:dece:0914" CreationDate="2011-09-09T20:14:39.086Z">
         <Value>active</Value>
         <Description>active</Description>
      </Current>
   </ResourceStatus>
</Stream>]]></con:value></con:property><con:property><con:name>streamViewIgnoreCreateDateDiff</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">false</con:value></con:property><con:property><con:name>streamHistoryRows</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <STREAM_HISTORY_OID>AC8852DAF5F076A5E0401F0A079921B3</STREAM_HISTORY_OID>
      <STREAM_HANDLE_OID>AC8852DAF5EF76A5E0401F0A079921B3</STREAM_HANDLE_OID>
      <RIGHTS_TOKEN_OID>AC8852DAF5E376A5E0401F0A079921B3</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>0900</ACCOUNT_OID>
      <CREATED_BY_USER_OID>0600</CREATED_BY_USER_OID>
      <TRANSACTION_ID>null</TRANSACTION_ID>
      <STATUS>active</STATUS>
      <STREAM_CLIENT_NICKNAME>null</STREAM_CLIENT_NICKNAME>
      <EXPIRATION_DATE>2011-09-10 20:14:39.86</EXPIRATION_DATE>
      <CLOSED_DATE>null</CLOSED_DATE>
      <CLOSED_BY_ORG_ID>null</CLOSED_BY_ORG_ID>
      <CREATED_DATE>2011-09-09 20:14:39.86</CREATED_DATE>
      <CREATED_BY_NODE_OID>0914</CREATED_BY_NODE_OID>
    </Row>
  </ResultSet>
</Results>]]></con:value></con:property><con:property><con:name>recvDeletionDateTime</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79612</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StreamRenew" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="ed811c62-cbcc-4855-951f-a3333f98a347"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="ab4ed0b2-880b-4b32-8cf4-c3167f7a5a75"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("streamhandle",null);
tC.setPropertyValue("streamhandleFULL",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("expectErrTypeStreamRenew",null);
tC.setPropertyValue("expectDBStatus",null);
tC.setPropertyValue("expectDBCreatedBy",null);
tC.setPropertyValue("expectDBUpdatedBy",null);
tC.setPropertyValue("expectDBModifiedBy",null);
tC.setPropertyValue("streamHistoryRows",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="926fe2db-e056-4d4a-ae16-d6369b237067"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("counter",callTC.getPropertyValue("counter"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("rightstokenidFULL",callTC.getPropertyValue("rightstokenidFULL"));
tC.setPropertyValue("streamhandleFULL",callTC.getPropertyValue("streamhandleFULL"));
tC.setPropertyValue("streamhandle",callTC.getPropertyValue("streamhandle"));
tC.setPropertyValue("expectErrTypeStreamRenew",callTC.getPropertyValue("expectErrTypeStreamRenew"));
tC.setPropertyValue("expectDBStatus",callTC.getPropertyValue("expectDBStatus"));
tC.setPropertyValue("expectDBCreatedBy",callTC.getPropertyValue("expectDBCreatedBy"));
tC.setPropertyValue("expectDBUpdatedBy",callTC.getPropertyValue("expectDBUpdatedBy"));
tC.setPropertyValue("expectDBModifiedBy",callTC.getPropertyValue("expectDBModifiedBy"));
tC.setPropertyValue("expectDBCreatedByNodeType",callTC.getPropertyValue("expectDBCreatedByNodeType"));
def streamhandleFULLEncoded = URLEncoder.encode(tC.getPropertyValue("streamhandleFULL"),"UTF-8");
tC.setPropertyValue("streamhandleFULLEncoded",streamhandleFULLEncoded)

def assertionAccountIdFULLEncoded = URLEncoder.encode(tC.getPropertyValue("assertionAccountIdFULL"),"UTF-8");
tC.setPropertyValue("assertionAccountIdFULLEncoded",assertionAccountIdFULLEncoded)
if (tC.getPropertyValue("expectDBStatus") == null || tC.getPropertyValue("expectDBStatus") == "null") {
	tC.setPropertyValue("expectDBStatus","active");
} 
if (tC.getPropertyValue("expectDBUpdatedBy") == null || tC.getPropertyValue("expectDBUpdatedBy") != "1") {
	tC.setPropertyValue("expectDBUpdatedBy",tC.getPropertyValue("nodeid"));
} 

if (tC.getPropertyValue("expectErrTypeStreamRenew") == null || tC.getPropertyValue("expectErrTypeStreamRenew") == "null") {
	tC.setPropertyValue("expectErrTypeStreamRenew","SUCCESS");
} </script></con:config></con:testStep><con:testStep type="groovy" name="Extract STREAM_DATA_HISTORY row if Required" id="0bea70de-5745-4185-8ee3-1ae588b0bbc4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("expectErrTypeStreamRenew") == "SUCCESS") {
	a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());

	String sh = tC.getPropertyValue("streamhandle");
	String results = null;
	String sql = """select 
 	 to_char(rawtohex(a.STREAM_HISTORY_OID)) STREAM_HISTORY_OID,
	  to_char(rawtohex(a.STREAM_HANDLE_OID)) STREAM_HANDLE_OID,
	  to_char(rawtohex(a.RIGHTS_TOKEN_OID)) RIGHTS_TOKEN_OID,
	  to_char(rawtohex(a.ACCOUNT_OID)) ACCOUNT_OID,
	  to_char(rawtohex(a.CREATED_BY_USER_OID)) CREATED_BY_USER_OID,
 	 TRANSACTION_ID,
	  STATUS,
	  STREAM_CLIENT_NICKNAME,
	  EXPIRATION_DATE,
	  CLOSED_DATE,
	  CLOSED_BY_ORG_ID,
	  CREATED_DATE,
	  to_char(rawtohex(a.CREATED_BY_NODE_OID)) CREATED_BY_NODE_OID 
	  from STREAM_DATA_HISTORY a where STREAM_HANDLE_OID =hextoraw( '$sh')""";

	results = a.SelectFromDB(sql,tP.getPropertyValue("targetSystem").toString());
	log.info results;

	/*
	*  If zero length, no need to continue;
	*/
	assert results.length() > 0;

	try {
		def myXML = new XmlSlurper().parseText(results);
		log.info "myXML.ResultSet.Row.size() is [" + myXML.ResultSet.Row.size() + "]";
		assert myXML.ResultSet.Row.size() >= 1;
	}
	catch(Throwable e) {
		log.info e; 
		assert 1 == 2;
	}
	finally {
		tC.setPropertyValue("streamHistoryRows", results);
	}
}

</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="f5fa3afd-3388-462d-b252-762e4ee6a2ef"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("GET - StreamView");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - StreamRenew" id="18104ee2-2e37-4133-a34f-e25e7a471603"><con:settings/><con:config service="DECE StreamCreate API" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/{STREAM}" methodName="PUT" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - StreamRenew" mediaType="application/xml" postQueryString="false" sslKeystore="0910_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Stream xmlns="${#Project#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md"       xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#" StreamHandleID="${#TestCase#streamhandleFULL}">             
<RequestingUserID>${#TestCase#assertionUserIdFULL}</RequestingUserID>       
<RightsTokenID>${#TestCase#rightstokenidFULL}</RightsTokenID>   
<ExpirationDateTime>${#Project#ExpirationDateTime}</ExpirationDateTime>            
<SubDividedGeolocation ViaProxy="urn:dece:type:true" Confidence="1" CalculationMethod="urn:dece:type:geoloc:networkaddress">US 20148</SubDividedGeolocation> </Stream>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Capture Current DB sysdate()" id="55a2a9cc-9e62-4a8a-94ef-87a9b271e132"><con:settings/><con:config><script>import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Calendar;
import java.text.SimpleDateFormat;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("currentDBTOD",null);

def formatDate(recvDate) {
	try {
		String dateHolder = "";
		Pattern datePattern = Pattern.compile("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})");
		Matcher cdateMatcher = datePattern.matcher(recvDate);
		if (cdateMatcher.find()) {
			dateHolder = cdateMatcher.group(1) + "/" + cdateMatcher.group(2) + "/" +
				cdateMatcher.group(3) + " " + cdateMatcher.group(4) + ":" +
				cdateMatcher.group(5) + ":" + cdateMatcher.group(6);
			log.info "dateHolder[$dateHolder]";	
		}
	} 
	catch (Throwable e) {
		log.info "Matcher Failure!  recvDate[$recvDate] ERROR - " + e;
	} 
	finally {
		return dateHolder;	
	}
}

String recvCdate = tC.getPropertyValue("recvCreationDate").toString();
String sql = "SELECT TO_CHAR(sysdate, 'YYYY/MM/DD HH24:mi:ss') as TOD from dual";
String sqlResultXML = "";
String cDate = "";
String tod = "";

try {
	a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());
	sqlResultXML = a.SelectFromDB(sql,tP.getPropertyValue("targetSystem"));
	log.info "sqlResultXML[$sqlResultXML]";

	if (sqlResultXML.length() > 0) {
		def myXML = new XmlSlurper().parseText(sqlResultXML);
		tod = myXML.ResultSet.Row.TOD;
		log.info "tod[$tod]";
	}

}
catch (Throwable e) {
	log.info "sql[$sql]";
	log.info "dbUtils request failed! - " + e;
	assert 1 == 2;
}
finally {
	if (tod.length() > 0) {
		tC.setPropertyValue("currentDBTOD", tod);
	}
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="c0aadfa6-5645-44c2-9cd9-6992d90d9b98"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('PUT - StreamRenew');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract ERROR table information" id="bb91893d-5f09-43b1-973a-0cc028a1a41e"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def a = new dbUtils.dbErrors(log,tP.getPropertyValue("targetSystem"));

tC.setPropertyValue("errorStatusCode",null);
tC.setPropertyValue("errorReason",null);
tC.setPropertyValue("errorID",null);

String xmlData = "";
String errId = "";

log.info "expectErrTypeStreamView[" + tC.getPropertyValue("expectErrTypeStreamRenew") + "]";

switch (tC.getPropertyValue("expectErrTypeStreamRenew")) {
	case "ADULT_CONTENT_NOT_ALLOWED":
		errId = "Policy:AdultContentNotAllowed";
		break;
	case "ACCOUNT_NOT_ACTIVE":
		errId = "AccountNotActive";
		break;
	case "API_NOT_AUTH":
		errId = "Security:RoleInvalid";
		break;
	case "BLOCKED_ACCESS_UNRATED":
		errId = "Policy:UnratedContentBlocked";
		break;
	case "CID_NOT_ACTIVE":
		errId = "ContentIDNotActive";
		break;
	case "CID_NOT_FOUND":
		errId = "ContentIDNotFound";
		break;
	case "LOGICAL_ASSET_NOT_ACTIVE":
		errId = "AssetLogicalIDNotActive";
		break;
	case "RT_RENT_EXPIRED":
		errId = "RightsTokenRentalExpired";
		break;
	case "RT_NOT_FOUND":
		errId = "RightsTokenNotFound";
		break;
	case "RT_NOT_ACTIVE":
		errId = "RightsTokenNotActive";
		break;
	case "RATING_POLICY":
		errId = "RatingPolicyExists";
		break;
	case "RENEW_EXCEED_MAX_TIME":
		errId = "StreamRenewExceedsMaximumTime";
		break;
	case "CID_NOT_GRANTED":
	case "STREAM_RIGHTS_NOT_GRANTED":
		errId = "StreamRightsNotGranted";
		break;
	case "STREAM_COUNT_EXCEEDED":
		errId = "AccountStreamCountExceedMaxLimit";
		break;
	case "STREAM_COUNT_EXCEEDED_USER":
		errId = "UserStreamCountExceedMaxLimit";
		break;
	case "STREAM_INVALID_TRANS":
		errId = "StreamTransactionIdInvalid";
		break;
	case "STREAM_ACCOUNTID_MISMATCH":
		errId = "AccountIdUnmatched";
		break;		
	case "STREAM_NICKNAME_TOO_LONG":
		errId = "StreamClientNicknameTooLong";
		break;		
	case "STREAM_WINDOW_NOT_ALLOWED":
		errId = "StreamAssetWindowNotAllowed";
		break;
	case "STREAM_OWNER_MISMATCH":
		errId = "StreamOwnerMismatch";
		break;
	case "STREAM_NOT_FOUND":
		errId = "StreamNotFound";
		break;
	case "STREAM_NOT_ACTIVE":
		errId = "StreamNotActive";
		break;
	case "USER_NOT_MATCH_TOKEN":
		errId = "UserIdUnmatched";
		break;
	case "USER_NOT_ACTIVE":
		errId = "UserNotActive";
		break;
	case "USER_NOT_SUPPLIED":
		errId = "UserNotSpecified";
		break;
	case "USER_PRIVILEGE_ACCESS_RESTRICTED":
		errId = "UserPrivilegeAccessRestricted";
	break;
}

try {
	xmlData = a.errGetIdInfo(errId);
	
	assert xmlData.trim().length() > 1;

	def myXML = new XmlSlurper().parseText(xmlData);

	log.info myXML.ResultSet.Row.size();
	tC.setPropertyValue("errorStatusCode", myXML.ResultSet.Row[0].STATUS_CODE.toString());
	tC.setPropertyValue("errorReason", myXML.ResultSet.Row[0].REASON.toString());
	tC.setPropertyValue("errorID", myXML.ResultSet.Row[0].ERROR_ID.toString());

	/*
	*  The DB does not contain the complete HTTP status
	*  string, only the code.  Thus, we must adjust.
	*/
	switch (tC.getPropertyValue("errorStatusCode")) {
		case "400":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 400 Bad Request");
			break;
		case "403":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 403 Forbidden");
			break;
		case "404":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 404 Not Found");
			break;
		case "409":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 409 Conflict");
			break;
	}
}
catch (Throwable e) {
	log.info "STEP FAILURE! --- " + e;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="f8bb948b-32b3-4780-8b4f-b273643f93c3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("recvCreationDate",null);
tC.setPropertyValue("recvExpirationDateTime",null);

def url = tP.getPropertyValue("targetHost");
def urnacct = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct = tC.getPropertyValue("nodeaccountid");
def urnnode = tP.getPropertyValue("urnNode");
def urnErr = tP.getPropertyValue("urnError");
def sh = tC.getPropertyValue("streamhandleFULL");
def nodeid  = tC.getPropertyValue("nodeid");
def account = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrTypeStreamRenew");
def XMLbody = tC.getPropertyValue("XMLbody");
def nodetype = tC.getPropertyValue("nodetype");

boolean errorIDFlag = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag = false;
boolean XMLbodynull = false;
boolean httpLocationHeader = false;
boolean processXMLFlag = true;
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");
String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "https://" + tP.getPropertyValue("targetHostq") + ":" + tP.getPropertyValue("targetPort");
String errorLinkBase = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#";
String orgRequest = url + "/rest/$major/$minor/Account/$account/Stream/$sh";
String expectDescription = "";
String expectHTTPstatus = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";
String expectStreamStatus = tC.getPropertyValue("expectDBStatus");
String received;


switch (expectStreamStatus) {
	case "active":
		expectDescription = "active"; break;
	case "deleted":
		expectDescription = "deleted"; break;
	default:
		expectDescription = "active"; break;
}		


this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 200 OK";
		XMLbodynull = false;
		httpLocationHeader = false;
	break;
	
	case "Node_status_inactive":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = true;
		errorID = "Bad_Request";
		errorReason = "Node_status_inactive";
		errorLink = "";
	break;

	case "Assertion_Not_Found":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = true;
		errorID = "Invalid Assertion";
		errorReason = "Assertion_Not_Found";
		errorLink = "";
	break;

	case "XML_PARSING_ERROR":
		errorLinkFlag = true;
		errorReasonFlag = false;
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID = "urn:dece:errorid:org:dece:SaxParserException";
		errorLink  = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;
	
	default:
		errorReasonFlag = true;
		expectHTTPstatus = tC.getPropertyValue("errorStatusCode");
		errorID     = urnErr + tC.getPropertyValue("errorID");
		errorReason = tC.getPropertyValue("errorReason");
		errorLink   = "$errorLinkBase" + tC.getPropertyValue("errorID");
	break;
}

log.info "errorID[$errorID]";
log.info "errorReason[$errorReason]";
log.info "errorLink[$errorLink]";

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert tC.getPropertyValue("httpConnect") == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + tC.getPropertyValue("httpContentLength").toInteger();
if (XMLbodynull) {
	//assert tC.getPropertyValue("httpContentLength").toInteger() == 0;
} else {
	//assert tC.getPropertyValue("httpContentLength").toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert tC.getPropertyValue("httpLocation") != null;

	def a = tC.getPropertyValue("httpLocation");
	def b = a.toURL();
	def urlStr = b.getPath();

	assert b.getPath().matches("/rest/$major/$minor/Account/${account}/Stream/$urnstream[0-9, A-F]*");
	
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	streamid     = urlStr.substring(lastColon + 1);
	streamidFULL = urlStr.substring(lastSlash + 1);

	this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

	tC.setPropertyValue("streamhandle",streamid);
	tC.setPropertyValue("streamhandleFULL",streamidFULL);
} else {
	assert tC.getPropertyValue("httpLocation") == null;
}

//Content-Type
assert tC.getPropertyValue("httpContentType") == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {
	assert XMLbody == null;
}

if (XMLbody != null &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
				
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		if (errorReasonFlag) {
			this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
			assert myXML.Error.Reason.toString() == errorReason;
		} else {
			log.info "ErrorReason IS NOT NULL";
			assert myXML.Error.Reason.toString().length() > 0;
		}

		// ErrorLink
		if (!errorLinkFlag) {
			assert myXML.Error.ErrorLink.size() == 1;
			log.info "ErrorLink:[" + myXML.Error.ErrorLink.toString() + "] Expected[$errorLink]";
			assert myXML.Error.ErrorLink.toString() == errorLink;
		}
	} else {
		String recvStreamHandle = myXML.@StreamHandleID.text();
		String RequestingUserID = myXML.RequestingUserID;
		String RightsTokenID = myXML.RightsTokenID;
		String recvExpirationDateTime = myXML.ExpirationDateTime;
		String Value = myXML.ResourceStatus.Current.Value;
		String recvDescription = myXML.ResourceStatus.Current.Description;
		String recvCreatedBy = myXML.ResourceStatus.Current.@CreatedBy.text();
		String recvModifiedBy = myXML.ResourceStatus.Current.@ModifiedBy.text();
		String recvCreationDate = myXML.ResourceStatus.Current.@CreationDate.text();

		tC.setPropertyValue("recvCreationDate",recvCreationDate);
		tC.setPropertyValue("recvExpirationDateTime",recvExpirationDateTime);
		
		// StreamHandle ID
		log.info "recvStreamHandle[$recvStreamHandle] - Expect[" + tC.getPropertyValue("streamhandleFULL") + "]";
		assert recvStreamHandle == tC.getPropertyValue("streamhandleFULL");
		//RequestingUserID
		if (tC.getPropertyValue("expectDBCreatedByNodeType") == "llpcs" || tC.getPropertyValue("expectDBCreatedByNodeType") == "dlpcs") {
			log.info "RequestingUserID - expectDBCreatedByNodeType[" + tC.getPropertyValue("expectDBCreatedByNodeType") + "] asserting element not present";
//			assert myXML.RequestingUserID.size() == 0;
//			assert RequestingUserID == "";
		} else {
			log.info "RequestingUserID[$RequestingUserID] - Expect[" + tC.getPropertyValue("assertionUserIdFULL") + "]";
			assert RequestingUserID == tC.getPropertyValue("assertionUserIdFULL");
		}
		//RightsTokenID
		log.info "RightsTokenID[$RightsTokenID] - Expect[" + tC.getPropertyValue("rightstokenidFULL") + "]";
		assert RightsTokenID == tC.getPropertyValue("rightstokenidFULL");
		//ExpirationDate
		log.info "recvExpirationDateTime[$recvExpirationDateTime] - Size is " + recvExpirationDateTime.size();
		assert recvExpirationDateTime.size() > 0;

		//Value (Status)
		log.info "Value[$Value] - Expect[" + tC.getPropertyValue("expectDBStatus") + "]";
		if (tC.getPropertyValue("expectDBStatus") == "active") {
			assert Value == "urn:dece:type:status:active";
		} else {
			assert Value == "urn:dece:type:status:deleted";
		}
		
		log.info "recvDescription[$recvDescription] - Expect[$expectDescription]";
		assert recvDescription == expectDescription;
		log.info "recvCreatedBy[$recvCreatedBy] - Expect[" + urnnode + tC.getPropertyValue("expectDBCreatedBy") + "]";
		assert recvCreatedBy == urnnode + tC.getPropertyValue("expectDBCreatedBy");
		log.info "recvModifiedBy[$recvModifiedBy] - Expect[" + urnnode + tC.getPropertyValue("expectDBUpdatedBy") + "]";
		assert recvModifiedBy == urnnode + tC.getPropertyValue("expectDBUpdatedBy");

		/*
		*  History validation
		*/
		def myHistoryXML = new XmlSlurper().parseText(tC.getPropertyValue("streamHistoryRows"));

		int rCnt = myHistoryXML.ResultSet.Row.size();

		log.info "-------------HISTORY-----------------";
		log.info "Row Count is $rCnt";
		log.info "&lt;History> Row Count is " + myXML.ResourceStatus.History.size();

//		assert myXML.ResourceStatus.History.Prior.size() == rCnt;

		for (int i = 0; i &lt; rCnt; i++) {
			String hrecvModifiedBy = myXML.ResourceStatus.History.Prior[i].@ModifiedBy.text();
			String hexpectModifiedBy = urnnode + tC.getPropertyValue("expectDBModifiedBy");
			log.info "$i --> hrecvModifiedBy[$hrecvModifiedBy] - hexpectModifiedBy[$hexpectModifiedBy]";
//			assert hrecvModifiedBy == hexpectModifiedBy;

			String hrecvStatus = myXML.ResourceStatus.History.Prior[i].Value;
			String hexpectStatus = myHistoryXML.ResultSet.Row[i].STATUS.text();
			log.info "$i --> hrecvStatus[$hrecvStatus] - hexpectStatus[$hexpectStatus]";
			if (hexpectStatus == "active") {
//				assert hrecvStatus == "urn:dece:type:status:active";
			} else {
//				assert hrecvStatus == "urn:dece:type:status:deleted";
			}

			String hrecvDescription = myXML.ResourceStatus.History.Prior[i].Description;
			switch (hexpectStatus) {
				case "active": hexpectDescription = "active"; break;
				case "deleted": hexpectDescription = "deleted"; break;
				default: hexpectDescription = "deleted"; break;
			}
			log.info "$i --> hrecvDescription[$hrecvDescription] - hexpectDescription[$hexpectDescription]";
//			assert hrecvDescription == hexpectDescription;
		}
	}
} 

</script></con:config></con:testStep><con:testStep type="groovy" name="Assert different between returned Create/Expire time less than 24 hours" disabled="true" id="141d4416-5fc0-4dc6-a8fb-65638a9d5b92"><con:settings/><con:config><script>import java.util.regex.Matcher;
import java.util.regex.Pattern;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

String recvCdate = tC.getPropertyValue("recvCreationDate").toString();
String recvEdate = tC.getPropertyValue("recvExpirationDateTime");
String cDate = "";
String eDate = "";
int streamMaxCreateExpireTimeDiffhours = tP.getPropertyValue("streamMaxCreateExpireTimeDiffhours").toInteger();

//if(tC.getPropertyValue("expectErrTypeStreamRenew") != "USER_PRIVILEGE_ACCESS_RESTRICTED"){
def formatDate(recvDate) {
	try {
		String dateHolder = "";
		Pattern datePattern = Pattern.compile("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})");
		Matcher cdateMatcher = datePattern.matcher(recvDate);
		if (cdateMatcher.find()) {
			dateHolder = cdateMatcher.group(1) + "/" + cdateMatcher.group(2) + "/" +
				cdateMatcher.group(3) + " " + cdateMatcher.group(4) + ":" +
				cdateMatcher.group(5) + ":" + cdateMatcher.group(6);
			log.info "dateHolder[$dateHolder]";	
		}
	} 
	catch (Throwable e) {
		log.info "Matcher Failure!  recvDate[$recvDate] ERROR - " + e;
	} 
	finally {
		return dateHolder;	
	}
}

try {
	
	log.info "recvCdate[$recvCdate]";
	log.info "recvEdate[$recvEdate]";
	
	cDate = formatDate(recvCdate);
	eDate = formatDate(recvEdate);

	def a = new generalUtils.generalUtils(log);
	def j = a.dateDiff(cDate,eDate);
	
	log.info "cDate[$cDate]";
	log.info "eDate[$eDate]";
	log.info "j[$j]";
}
catch (Throwable e) {
	log.info "Matcher Failure: " + e;
}
finally {
	/*
	*  Assert the difference between Creation Time and Expire Time
	*  is less than 24 hours.
	*/
	assert j &lt;= streamMaxCreateExpireTimeDiffhours;
}

//}
/*
try {
	log.info "recvCdate[$recvCdate]";
	log.info "recvEdate[$recvEdate]";
	Pattern datePattern = Pattern.compile("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})");
	Matcher cdateMatcher = datePattern.matcher(recvCdate);
	if (cdateMatcher.find()) {
		cDate = cdateMatcher.group(1) + "/" + cdateMatcher.group(2) + "/" +
			cdateMatcher.group(3) + " " + cdateMatcher.group(4) + ":" +
			cdateMatcher.group(5) + ":" + cdateMatcher.group(6);
		log.info "cDate[$cDate]";
	} 
	Matcher edateMatcher = datePattern.matcher(recvEdate);
	if (edateMatcher.find()) {
		cDate = edateMatcher.group(1) + "/" + edateMatcher.group(2) + "/" +
			edateMatcher.group(3) + " " + edateMatcher.group(4) + ":" +
			edateMatcher.group(5) + ":" + edateMatcher.group(6);
		log.info "eDate[$eDate]";
	} 
}
catch (Throwable e) {
	log.info "Matcher Failure: " + e;
}
log.info "cDate[$cDate]";

public class DateMatcher
{
  public DateMatcher()
  {
    String aDate = "date: 12-15-2003";
    Pattern datePattern = Pattern.compile("date: (\\d{2})-(\\d{2})-(\\d{4})");
    Matcher dateMatcher = datePattern.matcher(aDate);
    if (dateMatcher.find())
    {
      System.out.println("Month is: " + dateMatcher.group(1));
      System.out.println("Day is:   " + dateMatcher.group(2));
      System.out.println("Year is:  " + dateMatcher.group(3));
    }
  }

  public static void main(String[] args)
  {
    new DateMatcher();
  }
}
*/</script></con:config></con:testStep><con:testStep type="groovy" name="Return attributes to calling Test Case" id="d75ea2c5-b684-47d7-8040-49776c3cd142"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

String count = tC.getPropertyValue("counter").toString();


tC.setPropertyValue("expectDBUpdatedBy_" + count,tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBUpdatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy_" + count,tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBModifiedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBModifiedBy_" + count,tC.getPropertyValue("nodeid"));

callTC.setPropertyValue("expectDBUpdatedBy_" + count,tC.getPropertyValue("expectDBUpdatedBy_" + count));
callTC.setPropertyValue("expectDBUpdatedBy",tC.getPropertyValue("expectDBUpdatedBy"));
callTC.setPropertyValue("expectDBUpdatedTime_" + count,tC.getPropertyValue("currentDBTOD"));
callTC.setPropertyValue("expectDBUpdatedTime",tC.getPropertyValue("currentDBTOD"));
callTC.setPropertyValue("expectDBRenewedBy",tC.getPropertyValue("expectDBRenewedBy"));
callTC.setPropertyValue("expectDBRenewedBy_" + count,tC.getPropertyValue("expectDBRenewedBy_" + count));
callTC.setPropertyValue("expectDBModifiedBy",tC.getPropertyValue("expectDBModifiedBy"));
callTC.setPropertyValue("expectDBModifiedBy_" + count,tC.getPropertyValue("expectDBModifiedBy_" + count));</script></con:config></con:testStep><con:testStep type="delay" name="Delay" id="5a333309-67c0-43c3-b59a-89803d5b78eb"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:properties><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<Stream StreamHandleID="urn:dece:streamhandleid:org:dece:EC8787732F0C4FB298DB1C02829ABE04" xmlns="http://www.decellc.org/schema/2015/03/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.2/md" xmlns:ns3="http://www.w3.org/2001/04/xmlenc#" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#">
   <RequestingUserID>urn:dece:userid:org:dece:155207B15C7F6DFBE05307991F0A0655</RequestingUserID>
   <RightsTokenID>urn:dece:rightstokenid:org:dece:15524A820D784A18E05307991F0A9C2F</RightsTokenID>
   <ExpirationDateTime>2015-05-05T15:57:09.576Z</ExpirationDateTime>
   <SubDividedGeolocation Confidence="1" CalculationMethod="urn:dece:type:geoloc:networkaddress" ViaProxy="urn:dece:type:true">US 20148</SubDividedGeolocation>
   <ResourceStatus>
      <Current CreationDate="2015-05-05T08:24:12.708Z" CreatedBy="urn:dece:org:org:dece:DLASP_CS_1" ModificationDate="2015-05-05T08:24:29.800Z" ModifiedBy="urn:dece:org:org:dece:DLASP_CS_1">
         <Value>urn:dece:type:status:active</Value>
         <Description>active</Description>
      </Current>
   </ResourceStatus>
</Stream>]]></con:value></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150505_014857</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">TC_DECE_76700 - StreamListView - PORTAL - API invocation after StreamRenew by Full User - 200 OK_FLAKY</con:value></con:property><con:property><con:name>streamHistoryRows</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <STREAM_HISTORY_OID>15526727F1742B66E05307991F0A8CDD</STREAM_HISTORY_OID>
      <STREAM_HANDLE_OID>EC8787732F0C4FB298DB1C02829ABE04</STREAM_HANDLE_OID>
      <RIGHTS_TOKEN_OID>15524A820D784A18E05307991F0A9C2F</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>155207B15BC46DFBE05307991F0A0655</ACCOUNT_OID>
      <CREATED_BY_USER_OID>155207B15BCF6DFBE05307991F0A0655</CREATED_BY_USER_OID>
      <TRANSACTION_ID>1.0.1.3.S</TRANSACTION_ID>
      <STATUS>active</STATUS>
      <STREAM_CLIENT_NICKNAME>null</STREAM_CLIENT_NICKNAME>
      <EXPIRATION_DATE>2015-05-05 14:24:12.763</EXPIRATION_DATE>
      <CLOSED_DATE>null</CLOSED_DATE>
      <CLOSED_BY_ORG_ID>null</CLOSED_BY_ORG_ID>
      <CREATED_DATE>2015-05-05 08:24:12.763</CREATED_DATE>
      <CREATED_BY_NODE_OID>CCE44AF42FD2063BE0401F0A07991776</CREATED_BY_NODE_OID>
    </Row>
  </ResultSet>
</Results>]]></con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:EC8787732F0C4FB298DB1C02829ABE04</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">EC8787732F0C4FB298DB1C02829ABE04</con:value></con:property><con:property><con:name>sName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Portal Test Cases_P1_P2</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:15524A820D784A18E05307991F0A9C2F</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>recvExpirationDateTime</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015-05-05T15:57:09.576Z</con:value></con:property><con:property><con:name>recvCreationDate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015-05-05T08:24:12.708Z</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>expectErrTypeStreamRenew</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBUpdatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBUpdatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBRenewedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>errorStatusCode</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorReason</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>currentDBTOD</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/05/05 08:24:34</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:155207B15C7F6DFBE05307991F0A0655</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:155207B15C7D6DFBE05307991F0A0655</con:value></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZrU+o6FP0rTP14pjQtlEdHmOGhHgSUC76OX5yYbmi0TWuTFvDXn6RIpYhe7p1hhsnuztprP7KSU44D33I6nEMsaMhKq8Bn3MmsLS2JmRNiTrnDcADcEcSZdcYjxyojB2+3aKVBv6U91Vxi1ayGpVdxZa5Xq7W5/myZDb1ZR6Q5N3ENXCRdOU9gwLjATLQ0C5m2jtTvBjUcs+FYZrnaRI9a6Q5iLrGlS1nu2pBa8ZbmCRE5hrFcLsvLSjmMF4aFkGk8jEcz4kGAtfbpJqMsUNz+8CdlFwj4PimTMDBOjYLPqcudGV0wLJIYPmK538VCBmoa0sfldHGi5XvBHbB5mC17mIWMEuzTd6zqMwbhhW6p4y/CmAov+DYJEylgHVZEJ2aVnWhGkdqRQAWGMcc697D5gTWFOcTACJRup4OWdnJc17KtNzFmfB7GAS8u/xsfYCn4YQSuzrdpfVA7HvBApdqnQJwBI37CaQpXalgjTIB/dBPI8VClSQxzuhpRLgd0xRU7Y5fe3nJTjT5dABf/p0E7zdmA3GE/gfZ4hNJx9WaYTm3+z2I6xPyu8tteEhGPWxmBXefMkLd2s9wbynyINjv8twc7iJov6wAhL+maD4vOubucdW+XvfH1++9aI25e3UwW9T8jD95n9Yu113sJz6oTXLsbRK+v/XvW6XiPw+vRddoJA/uuic7mTTRuDIb3aaV3/1hFk+HFuNKdd8jt7TCq1y4vL9KHlfn2Mr2ycfXxvut6wcto1Dgz0bLZo3/Ir7vLZw60LzhqBiysiOHZqv7r8R218nR2+Bdt2zM/S55fgIjtUo3BoF86l13C4mcxUxbq6vPM1YmU+HABTGhttUtph5NIuaOuI3u4WZu2baF617R79fNa/7x7huwKqjeb5jnqoJptb0Vmw2KPYi9kc6piKcndjM3PBEngcGAuxHoaJlLpuPYDYh8LXBqwqTwEIeNwE0p5tp69WpAS7gfUpxSC+rtFll681kpXobhm13FnLiAuSLJpFiR5CoRGFJRuq7Hmcq65kKV4w2kifLOc4jKDRCp7rETWsaoN2+A0iHxQRI0gdBMfypEXZYUx+Obf0jHhmbU/6swmT73ZU3YejG+z2/+2LYT0caly4CqlLshmwoErxtzm8yXv2sGraAvfSVyqjpesqogp2TApfvocFjUl+aR8JrZlnm/YNxTAjf288nhuSkk+9fndLSVdikB725w3bJbfykmaJlk/qtWKEUt4Q1XEQJYxA5JImVrfhK/AjBzFOOpOyInvBc/tRYqJ8NhMYAGBnJ9StjziETADrh4BAzn3q2NfGIWQsnQCVuKQrefLB4xi/OMbhzhE+UnzRP4tw9j97NgBrJ04Mk/5BhCULdRK3Qfrb8aDhBKWSiUL413wQwCHgheNeZFzLkIO1HMi4PsvJSVRLQ0TEiZMDPpaZtiVzYynWEfgfDp9gcmUOX+q0X9/q+k0GwEC8oHHaYavblxHHQG22JHej6DfqG//J/Utsmt/MX+17NRpf8bbfwE=</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79614</con:value></con:property><con:property><con:name>streamhandleFULLEncoded</con:name><con:value>urn%3Adece%3Astreamhandleid%3Aorg%3Adece%3AEC8787732F0C4FB298DB1C02829ABE04</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A155207B15C7D6DFBE05307991F0A0655</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/DLASP_CS_1_concat.pem</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP_CS_1</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreate for User" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="ebcfcb31-8a0a-40c8-b393-9069b40495b6"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="10007f35-e981-4f65-bf33-ef4d6530d839"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("policyStatus","urn:dece:type:status:active");
tC.setPropertyValue("policyAuthority","urn:dece:role:coordinator");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("streamhandleFULL",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("policyResource",null);
tC.setPropertyValue("policyRequestEntity",null);
tC.setPropertyValue("policyAuthority",null);
tC.setPropertyValue("policyCreator",null);
tC.setPropertyValue("policyStatus",null);
tC.setPropertyValue("policyResourceXML",null);
tC.setPropertyValue("expectErrTypePolicyCreate",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="c10ece56-7038-403c-8bcc-0624ea7d7f67"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("policyClass",callTC.getPropertyValue("policyClass"));
tC.setPropertyValue("policyResource",callTC.getPropertyValue("policyResource"));
tC.setPropertyValue("policyRequestEntity",callTC.getPropertyValue("policyRequestEntity"));
tC.setPropertyValue("policyAuthority",callTC.getPropertyValue("policyAuthority"));
tC.setPropertyValue("policyCreator",callTC.getPropertyValue("policyCreator"));
tC.setPropertyValue("policyStatus",callTC.getPropertyValue("policyStatus"));
tC.setPropertyValue("expectErrTypePolicyCreate",callTC.getPropertyValue("expectErrTypePolicyCreate"));
tC.setPropertyValue("policyAuthority", "urn:dece:role:type:coordinator");

if (tC.getPropertyValue("expectErrTypePolicyCreate") == null || tC.getPropertyValue("expectErrTypePolicyCreate") == "") {
		tC.setPropertyValue("expectErrTypePolicyCreate","SUCCESS");
}
if (tC.getPropertyValue("policyCreator") == null || tC.getPropertyValue("policyCreator") == "") {
		tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
}

switch (tC.getPropertyValue("policyClass")) {
	case "urn:dece:type:policy:EndUserLicenseAgreement":
		tC.setPropertyValue("policyResource","urn:dece:agreement:enduserlicenseagreement:10");
	break;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Policy &lt;dece:Resource> XML" id="0e6f687a-0dcd-4114-9793-eb2c70b06b9f"><con:settings/><con:config><script><![CDATA[def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

	
mmpaRatingsUS = ["us:mpaa:g","us:mpaa:pg","us:mpaa:pg-13","us:mpaa:r","us:mpaa:nc-17"];
tvpgRatingsUS = ["us:tvpg:tv-y","us:tvpg:tv-y7","us:tvpg:tv-g","us:tvpg:tv-pg","us:tvpg:tv-14","us:tvpg:tv-ma"];
tvpgRatingsreasoncodesUS = ["us:tvpg:v","us:tvpg:s","us:tvpg:l","us:tvpg:d","us:tvpg:fv"];
fabUS = ["us:fab:c","us:fab:f","us:fab:pd","us:fab:pd-m","us:fab:em","us:fab:ao"];
fabreasoncodesUS = ["us:fab:violence","us:fab:frightening","us:fab:sexual","us:fab:mildlang","us:fab:stronglang","us:fab:substance","us:fab:intense","us:fab:bnudity","us:fab:fnudity","us:fab:explicit","us:fab:erotica"];
esrbgamesUS = ["us:esrb:ec","us:esrb:e","us:esrb:e10+","us:esrb:t","us:esrb:m","us:esrb:ao","us:esrb:rp"];
mpaattrailersUS = ["us:mpaat:gb","us:mpaat:rb"];
tvmovieRatingsGB = ["gb:bbfc:u","gb:bbfc:pg","gb:bbfc:12","gb:bbfc:15","gb:bbfc:18","gb:bbfc:r18"];
chvrsRatingsCA = ["ca:chvrs:g","ca:chvrs:pg","ca:chvrs:14a","ca:chvrs:18a","ca:chvrs:r"];
cbscRatingsCA = ["ca:cbsc:c","ca:cbsc:c8","ca:cbsc:g","ca:cbsc:pg","ca:cbsc:14+","ca:cbsc:18+"];
filmtvifcoIE = ["ie:ifco:g","ie:ifco:pg","ie:ifco:12","ie:ifco:15","ie:ifco:18"];
filmtvncsAU = ["au:ncs:g","au:ncs:pg","au:ncs:m","au:ncs:ma15","au:ncs:r18"];
filmtvoflcNZ = ["nz:oflc:g","nz:oflc:pg","nz:oflc:m","nz:oflc:rp13","nz:oflc:r13","nz:oflc:r15","nz:oflc:rp16","nz:oflc:r16","nz:oflc:r18","nz:oflc:r"];
MocRatingFR = ["FR:MOC:U","FR:MOC:10","FR:MOC:12","FR:MOC:16","FR:MOC:18"];
FSKRatingDE = ["DE:FSK:0","DE:FSK:6","DE:FSK:12","DE:FSK:16","DE:FSK:18"];
FSKRatingAT = ["AT:FSK:0","AT:FSK:6","AT:FSK:12","AT:FSK:16","AT:FSK:18"];
FSKRatingCH = ["CH:FSK:0","CH:FSK:6","CH:FSK:12","CH:FSK:16","CH:FSK:18"];

String resourceXml = "";
String urnRating   = testProject.getPropertyValue("urnRating");

def resource = testCase.getPropertyValue("policyResource");

switch (resource) {
	case "${urnRating}us:mpaa:g":
	case "${urnRating}us:mpaa:pg":
	case "${urnRating}us:mpaa:pg-13":
	case "${urnRating}us:mpaa:r":
	case "${urnRating}us:mpaa:nc-17":
		for (rating in mmpaRatingsUS) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				break;
			}
		}
		break;
	case "${urnRating}us:tvpg:tv-y":
	case "${urnRating}us:tvpg:tv-y7":
	//case "${urnRating}us:tvpg:tv-y7-fv":
	case "${urnRating}us:tvpg:tv-g":
	case "${urnRating}us:tvpg:tv-pg":
	case "${urnRating}us:tvpg:tv-14":
	case "${urnRating}us:tvpg:tv-ma":
		for (rating in tvpgRatingsUS) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;
        case "${urnRating}us:tvpg:v":
	case "${urnRating}us:tvpg:s":
	case "${urnRating}us:tvpg:l":
	case "${urnRating}us:tvpg:d":
	case "${urnRating}us:tvpg:fv":
		for (rating in tvpgRatingsreasoncodesUS) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				break;
			}
		}
		break;
        case "${urnRating}us:fab:c":
	case "${urnRating}us:fab:f":
	case "${urnRating}us:fab:pd":
	case "${urnRating}us:fab:pd-m":
	case "${urnRating}us:fab:em":
	case "${urnRating}us:fab:ao":
        	for (rating in fabUS) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				break;
			}
		}
		break;
        case "${urnRating}us:fab:violence":
	case "${urnRating}us:fab:frightening":
	case "${urnRating}us:fab:sexual":
	case "${urnRating}us:fab:mildlang":
	case "${urnRating}us:fab:stronglang":
        case "${urnRating}us:fab:substance":
	case "${urnRating}us:fab:intense":
	case "${urnRating}us:fab:bnudity":
	case "${urnRating}us:fab:fnudity":
	case "${urnRating}us:fab:explicit":
	case "${urnRating}us:fab:erotica":
		for (rating in fabreasoncodesUS) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				break;
			}
		}
		break;

        case "${urnRating}us:esrb:ec":
	case "${urnRating}us:esrb:e":
	case "${urnRating}us:esrb:e10+":
	case "${urnRating}us:esrb:t":
	case "${urnRating}us:esrb:m":
	case "${urnRating}us:esrb:ao":
        case "${urnRating}us:esrb:rp":
        	for (rating in esrbgamesUS) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				break;
			}
		}
		break;

        case "${urnRating}us:mpaat:gb":
        case "${urnRating}us:mpaat:rb":
        	for (rating in mpaattrailersUS) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				break;
			}
		}
		break;
   
     //case "${urnRating}gb:bbfc:e":  
	case "${urnRating}gb:bbfc:u":
	case "${urnRating}gb:bbfc:pg":
	case "${urnRating}gb:bbfc:12":
	case "${urnRating}gb:bbfc:15":
	case "${urnRating}gb:bbfc:18":
	case "${urnRating}gb:bbfc:r18":
		for (rating in tvmovieRatingsGB) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>" + rating.replaceAll("&","&amp;") + "</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;

        //case "${urnRating}ca:chvrs:e":   
        case "${urnRating}ca:chvrs:g":
	case "${urnRating}ca:chvrs:pg":
	case "${urnRating}ca:chvrs:14a":
	case "${urnRating}ca:chvrs:18a":
	case "${urnRating}ca:chvrs:r": 
	
		for (rating in chvrsRatingsCA) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;

        //case "${urnRating}ca:cbsc:e": 
        case "${urnRating}ca:cbsc:c":
	case "${urnRating}ca:cbsc:c8":
	case "${urnRating}ca:cbsc:g":
	case "${urnRating}ca:cbsc:pg":
	case "${urnRating}ca:cbsc:14+":
        case "${urnRating}ca:cbsc:18+":
      		for (rating in cbscRatingsCA) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;
        //case "${urnRating}ie:ifco:e": 
        case "${urnRating}ie:ifco:g":
	case "${urnRating}ie:ifco:pg":
	case "${urnRating}ie:ifco:12":
	case "${urnRating}ie:ifco:15":
	case "${urnRating}ie:ifco:18":
      		for (rating in filmtvifcoIE) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;
        //case "${urnRating}au:ncs:e": 
        case "${urnRating}au:ncs:g":
	case "${urnRating}au:ncs:pg":
	case "${urnRating}au:ncs:m":
	case "${urnRating}au:ncs:ma15":
	case "${urnRating}au:ncs:r18":
      		for (rating in filmtvncsAU) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;
        
        //case "${urnRating}nz:oflc:e": 
        case "${urnRating}nz:oflc:g":
	case "${urnRating}nz:oflc:pg":
	case "${urnRating}nz:oflc:m":
	case "${urnRating}nz:oflc:rp13":
	case "${urnRating}nz:oflc:r13":
	case "${urnRating}nz:oflc:r15":
	case "${urnRating}nz:oflc:rp16":
        case "${urnRating}nz:oflc:r16": 
        case "${urnRating}nz:oflc:r18":
	case "${urnRating}nz:oflc:r":
	      		for (rating in filmtvoflcNZ) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;
        
       case "${urnRating}FR:MOC:U":
	case "${urnRating}FR:MOC:10":
	case "${urnRating}FR:MOC:12":
	case "${urnRating}FR:MOC:16":
	case "${urnRating}FR:MOC:18":
      		for (rating in MocRatingFR) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;

	case "${urnRating}DE:FSK:0":
	case "${urnRating}DE:FSK:6":
	case "${urnRating}DE:FSK:12":
	case "${urnRating}DE:FSK:16":
	case "${urnRating}DE:FSK:18":
      		for (rating in FSKRatingDE) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;

      case "${urnRating}AT:FSK:0":
	case "${urnRating}AT:FSK:6":
	case "${urnRating}AT:FSK:12":
	case "${urnRating}AT:FSK:16":
	case "${urnRating}AT:FSK:18":
      		for (rating in FSKRatingAT) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;

		case "${urnRating}CH:FSK:0":
	case "${urnRating}CH:FSK:6":
	case "${urnRating}CH:FSK:12":
	case "${urnRating}CH:FSK:16":
	case "${urnRating}CH:FSK:18":
      		for (rating in FSKRatingCH) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;
   
	default:
		resourceXml = "<dece:Resource>$resource</dece:Resource>";
		break;
}

this.log.info "resource [$resource]";
this.log.info "resourceXml [$resourceXml]";

testCase.setPropertyValue("policyResourceXML", resourceXml);
]]></script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="3f05ea9b-a55a-43b0-b8f3-dfeccd5ae590"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("POST - PolicyCreate User");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - PolicyCreate User" id="f808fcc6-750d-4bcf-852c-e19035e327eb"><con:settings/><con:config service="Policy Create" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/User/{USER}/Policy/{POLICYCLASS}" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - PolicyCreate User" mediaType="application/xml" postQueryString="false" sslKeystore="DLASP_CS_1_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="${#Project#coordinatorSchema} dece.xsd" xmlns:dece="${#Project#coordinatorSchema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:${#TestCase#policyClass}</dece:PolicyClass>
      ${#TestCase#policyResourceXML}
      <!--<dece:Resource>${#TestCase#policyResource}</dece:Resource>-->
      <dece:RequestingEntity>${#TestCase#policyRequestEntity}</dece:RequestingEntity>
      <dece:PolicyAuthority>${#TestCase#policyAuthority}</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#assertionUserId}">
            <dece:Value>${#TestCase#policyStatus}</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="MINOR" value="${#Project#VersionMinor}"/>
  <con:entry key="MAJOR" value="${#Project#VersionMajor}"/>
  <con:entry key="POLICYCLASS" value="${#Project#urnPolicy}${#TestCase#policyClass}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="3f7634e6-14e8-4e88-a377-f3ad8472e251"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('POST - PolicyCreate User');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;
/*

def expXML = tStep.httpRequest.response.getResponseContent();
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/
tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="e57d4323-3e35-4e2a-8f33-a07dc2f486a3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrTypePolicyCreate");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";

/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 201 Created";
	break;
}
	
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;
</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Policy - Establish High-Level Policies for User/Account/Node</con:value></con:property><con:property><con:name>sName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Test Configuration/Setup</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>policyStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:status:active</con:value></con:property><con:property><con:name>policyAuthority</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:type:coordinator</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbcuI4EP0VyvM4ZSSbuytQBQGm2CGXgSRL5iUlyw0WsWVjyUDm61cy4GBCsuzyQqndOn36oiNdCRIGttMVAhLJIl7ahgEXTmZtG2nCnYgIJhxOQhCOpM60ezN27DJ2yGGLURr128ZLc+6CW4eG2SK1ilmtNYnZauG62cS4aldcu1GvVZSrECmMuJCEy7ZhY6tq4pZp4QfccipNx2qU643Wb6P0BIlQ2MqljI09qa1oG76UsYPQZrMpbyrlKFkgG2MLzW7GU+pDSIzO1S6jLFDS2fvTsgcUgoCWaRSiK1TwufKEM2ULTmSawD6W91ksjHALKR9PsMU3I98L3ojPo2x5TXjEGSUB+0N0fW5A+pFX6gaLKGHSDz9NwsIa2IQtNalV5d8MVKR2IVCBYSKIKXxi7bEmMIcEOIXS42TUNr5d1rVs60NCuJhHSSiKy//GB/gagigGzxSHtPbULgc8U6nOFVBnxGmQCraGWz2sMaEg9t0EejlU6T6BOduOmVADuhWaHTqmd7LcVaPPFiDk/2nQUXN2IE8kSKEjZ+z7jOP4cQ09RFePyd3ad2+JN1iO2hmBY+fMkLd2tzwZynyIdjt+Tm4C6zeaLkW4fXXTJYXpz+e+6y5XW94f2FYtWk4n/EnGsQ9PrdGtRO6v7uTJ/RW/DYbzdfP78MHuJat7f7Rc3k0fv49vU7v7l/Uzth+f7yxfzlzr73BJx5v627DvA02XybZ679dd1Ei96/jHIFytZs/R/SP6TX/cjSuzZLx8sAbxRMzYa33xvEButTFbo3Udt/N0jvgXbYczP03dJVB5WOoxGPVLQ9UlIr8WM21hnjnPXJ1Yi4+QwKXR0bu0djipkjvmOaqHuzW2e5VetVdr9HutivoNcK2Ca62WNcTdJq4ODyKzY3FC8Tric6Zjacndjc3XBGnoCOAeJOY6SpXSCeMLxD6RpDTiE3UIIi7gIVLy7M5rVYvX0+1byjd/Fk1M7Wa0kJZRuo3kHb9LunMJSUGSLbsgyROgLGagdVuPtVBzLaQqxYqsUxlY5TUpc0iVsidaZB272qwhwcI4AE0UhZGXBlCO/TgrDBK7f9skVGTW/rg7vX+5nr5k5wF9mt3pt0MhlI/HtIPQKfVANRPOXDH4kM+HvGtnr6IDfDf1mD5eqqoyYXTHpPjpfVj0lOST8p7YgXm+4dRQAEeneeXxvDWj+dTnd7eSdCUCnUNzVqS8KqfrdZq1o6HFLlHwSGeKsI2m6lgqmXp7iF6BoxwFXXQn5MRPguf2IsVU+nwqiYRQzU8pW17wCJiC0I+AkZr77aUvjEJIVToJW3nOdh2oB4xm/OUbhzpU+ynzvfrbRIn33rEzWEdxVJ7qDSAZX+iVvg/ePhkPGilYppQsSo7BzwGcC1405kXOuUg1UG4q4fMvJS1RbYNQGqVcjvpGZjiWzYynfIvBeXf6AJMpc/5UY//+VjNZNgIU1ANPsAxf37iOPgJ8cSS9+6Cn6tvtDQeNBm7g2gAfq+9w0OrnRSmw63wwf7Qc1el0xjv/AA==</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:02B3ABFE770705E0E05305991F0AFE9D</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:02B3B4B57DB93333E05305991F0A804F</con:value></con:property><con:property><con:name>policyClass</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">UserDataUsageConsent</con:value></con:property><con:property><con:name>policyResource</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:02B3B4B57DB93333E05305991F0A804F</con:value></con:property><con:property><con:name>policyRequestEntity</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:org:org:dece:DLASP_CS_1</con:value></con:property><con:property><con:name>policyCreator</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:02B3B4B57DB93333E05305991F0A804F</con:value></con:property><con:property><con:name>policyResourceXML</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">&lt;dece:Resource>urn:dece:userid:org:dece:02B3B4B57DB93333E05305991F0A804F&lt;/dece:Resource></con:value></con:property><con:property><con:name>expectErrTypePolicyCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/2015/02/Account/urn:dece:accountid:org:dece:02B3ABFE770705E0E05305991F0AFE9D/User/urn:dece:userid:org:dece:02B3B4B57DB93333E05305991F0A804F/Policy/urn:dece:type:policy:UserDataUsageConsent</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79615</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE072E24F73ADE4DBE0401F0A05994C9A</con:value></con:property><con:property><con:name>assertionUserIdFULLEncoded</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE072E24F73AFE4DBE0401F0A05994C9A</con:value></con:property><con:property><con:name>policyClassEncoded</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AParentalControl%3ARatingPolicy</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>02B3ABFE770705E0E05305991F0AFE9D</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>02B3B4B57DB93333E05305991F0A804F</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/DLASP_CS_1_concat.pem</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyGet for User" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="15aa1c07-0d35-4613-b46a-394c879c1175"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="a62d3b54-e1cc-4108-acc6-17eaeea7831b"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("streamhandleFULL",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("expectErrTypePolicyCreate",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="bcea5e38-6825-43ed-9145-5dfa91d0e4d4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("policyClass",callTC.getPropertyValue("policyClass"));
tC.setPropertyValue("expectErrTypePolicyCreate",callTC.getPropertyValue("expectErrTypePolicyCreate"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="90809717-cdc3-4b54-816c-e8a0892a7cd8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("GET - PolicyGet User");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - PolicyGet User" id="a54d49c1-54a0-4e45-bf42-4788dc3dafbb"><con:settings/><con:config service="Policy Get" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/User/{USER}/Policy/{POLICYCLASS}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - PolicyGet User" mediaType="application/xml" sslKeystore="DLASP_CS_1_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ACCT" value="${#TestCase#assertionAccountIdFULL}"/>
  <con:entry key="POLICYCLASS" value="${#Project#urnPolicy}${#TestCase#policyClass}"/>
  <con:entry key="USER" value="${#TestCase#assertionUserIdFULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="e8f297ed-b9f9-44bf-8157-92c211453526"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - PolicyGet User');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process response body and headers" id="c56943e9-adb5-44d9-994e-11585a713077"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def XMLbody    = tC.getPropertyValue("XMLbody");
def httpStatus = tC.getPropertyValue("httpStatus");

String policyWasFound = "false";
String xmlPolicyClass = "";
String tcPolicyClass  = tC.getPropertyValue("policyClass");

/*
*  We can assume that if we get returned an HTTP status 
*  of 'HTTP/1.1 200 OK' the policy was found.  However,
*  it is never a bad idea to doublecheck.
*/

/*
*  The body should not be null...something should be
*  there.
*/
assert XMLbody.size() > 0;

if (XMLbody != null) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	xmlPolicyClass = myXML.Policy[0].PolicyClass.text();
}

log.info "xmlPolicyClass [$xmlPolicyClass] - tcPolicyClass[$tcPolicyClass]";
		
if (httpStatus == "HTTP/1.1 200 OK") {
	def myXML1 = new XmlSlurper().parseText(XMLbody);
	def PolicyIDFull = myXML1.Policy.@PolicyID.text().toString();
	int lastColon = PolicyIDFull.lastIndexOf(':');
	PolicyID     = PolicyIDFull.substring(lastColon + 1);
	log.info"=========="+PolicyID
	policyWasFound = "true";
	tC.setPropertyValue("PolicyID",PolicyID);
}



tC.setPropertyValue("policyExists", policyWasFound);</script></con:config></con:testStep><con:testStep type="groovy" name="Return policyExists to calling test case" id="4dba1e02-580c-4e9e-8560-d6c63204a2db"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("policyExists",tC.getPropertyValue("policyExists"));
callTC.setPropertyValue("PolicyID",tC.getPropertyValue("PolicyID"));

if (tC.getPropertyValue("returnXMLResult") == "true") {
	callTC.setPropertyValue("policyGetXML",tC.getPropertyValue("XMLbody"));
}
</script></con:config></con:testStep><con:properties><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value>nVbbcuI4EP0VyvM4ZSSbuytQBQGm2CGXgSRL5iUlyw0WsWVjyUDm61cy4GBCsuzyQqndOn36oiNdCRIGttMVAhLJIl7ahgEXTmZtG2nCnYgIJhxOQhCOpM60ezN27DJ2yGGLURr128ZLc+6CW4eG2SK1ilmtNYnZauG62cS4aldcu1GvVZSrECmMuJCEy7ZhY6tq4pZp4QfccipNx2qU643Wb6P0BIlQ2MqljI09qa1oG76UsYPQZrMpbyrlKFkgG2MLzW7GU+pDSIzO1S6jLFDS2fvTsgcUgoCWaRSiK1TwufKEM2ULTmSawD6W91ksjHALKR9PsMU3I98L3ojPo2x5TXjEGSUB+0N0fW5A+pFX6gaLKGHSDz9NwsIa2IQtNalV5d8MVKR2IVCBYSKIKXxi7bEmMIcEOIXS42TUNr5d1rVs60NCuJhHSSiKy//GB/gagigGzxSHtPbULgc8U6nOFVBnxGmQCraGWz2sMaEg9t0EejlU6T6BOduOmVADuhWaHTqmd7LcVaPPFiDk/2nQUXN2IE8kSKEjZ+z7jOP4cQ09RFePyd3ad2+JN1iO2hmBY+fMkLd2tzwZynyIdjt+Tm4C6zeaLkW4fXXTJYXpz+e+6y5XW94f2FYtWk4n/EnGsQ9PrdGtRO6v7uTJ/RW/DYbzdfP78MHuJat7f7Rc3k0fv49vU7v7l/Uzth+f7yxfzlzr73BJx5v627DvA02XybZ679dd1Ei96/jHIFytZs/R/SP6TX/cjSuzZLx8sAbxRMzYa33xvEButTFbo3Udt/N0jvgXbYczP03dJVB5WOoxGPVLQ9UlIr8WM21hnjnPXJ1Yi4+QwKXR0bu0djipkjvmOaqHuzW2e5VetVdr9HutivoNcK2Ca62WNcTdJq4ODyKzY3FC8Tric6Zjacndjc3XBGnoCOAeJOY6SpXSCeMLxD6RpDTiE3UIIi7gIVLy7M5rVYvX0+1byjd/Fk1M7Wa0kJZRuo3kHb9LunMJSUGSLbsgyROgLGagdVuPtVBzLaQqxYqsUxlY5TUpc0iVsidaZB272qwhwcI4AE0UhZGXBlCO/TgrDBK7f9skVGTW/rg7vX+5nr5k5wF9mt3pt0MhlI/HtIPQKfVANRPOXDH4kM+HvGtnr6IDfDf1mD5eqqoyYXTHpPjpfVj0lOST8p7YgXm+4dRQAEeneeXxvDWj+dTnd7eSdCUCnUNzVqS8KqfrdZq1o6HFLlHwSGeKsI2m6lgqmXp7iF6BoxwFXXQn5MRPguf2IsVU+nwqiYRQzU8pW17wCJiC0I+AkZr77aUvjEJIVToJW3nOdh2oB4xm/OUbhzpU+ynzvfrbRIn33rEzWEdxVJ7qDSAZX+iVvg/ePhkPGilYppQsSo7BzwGcC1405kXOuUg1UG4q4fMvJS1RbYNQGqVcjvpGZjiWzYynfIvBeXf6AJMpc/5UY//+VjNZNgIU1ANPsAxf37iOPgJ8cSS9+6Cn6tvtDQeNBm7g2gAfq+9w0OrnRSmw63wwf7Qc1el0xjv/AA==</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:02B3ABFE770705E0E05305991F0AFE9D</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:02B3B4B57DB93333E05305991F0A804F</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrTypePolicyCreate</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>UserDataUsageConsent</con:value></con:property><con:property><con:name>policyExists</con:name><con:value>true</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value>Test Configuration/Setup</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>Policy - Establish High-Level Policies for User/Account/Node</con:value></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<dece:PolicyList xmlns:dece="http://www.decellc.org/schema/2015/03/coordinator" xmlns:md="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#">
   <dece:Policy PolicyID="urn:dece:policyid:org:dece:02B3CDD6886C516DE05305991F0ABB06">
      <dece:PolicyClass>urn:dece:type:policy:UserDataUsageConsent</dece:PolicyClass>
      <dece:Resource>urn:dece:userid:org:dece:02B3B4B57DB93333E05305991F0A804F</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:DLASP_CS_1</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:role:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreationDate="2014-09-10T09:39:52.000Z" CreatedBy="urn:dece:userid:org:dece:02B3B4B57DB93333E05305991F0A804F">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>]]></con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79616</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>02B3CDD6886C516DE05305991F0ABB06</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE072E24F73ADE4DBE0401F0A05994C9A</con:value></con:property><con:property><con:name>assertionUserIdFULLEncoded</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE072E24F73AFE4DBE0401F0A05994C9A</con:value></con:property><con:property><con:name>policyClassEncoded</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AParentalControl%3ARatingPolicy</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>02B3ABFE770705E0E05305991F0AFE9D</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>02B3B4B57DB93333E05305991F0A804F</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\GIT\uv-coordinator-api-regression\Certs\QALP1/DLASP_CS_1_concat.pem</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyDelete for User" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="d0f6c2d7-66f5-4556-b30a-f4a5f302e2cb"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="29e91165-241c-4d2e-a276-915994969932"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("expectErrTypePolicyGet",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="626b08bd-0bd3-4ef6-9452-899dda2f565f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("policyClass",callTC.getPropertyValue("policyClass"));
tC.setPropertyValue("PolicyID",callTC.getPropertyValue("PolicyID"));
tC.setPropertyValue("expectErrTypePolicyGet",callTC.getPropertyValue("expectErrTypePolicyGet"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));

if (tC.getPropertyValue("expectErrTypePolicyGet") == null || tC.getPropertyValue("expectErrTypePolicyGet") == "") {
		tC.setPropertyValue("expectErrTypePolicyGet","SUCCESS");
}</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="ce819a16-3bfc-4e57-8141-3e6dfcd2c8bb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("DELETE - PolicyDelete for User");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - PolicyDelete for User" id="0a3a7263-97f9-4bf2-bfbb-880331c29f87"><con:settings/><con:config service="Policy Delete" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/User/{USER}/Policy/{POLICYCLASS}" methodName="DELETE" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - PolicyDelete for User" mediaType="application/xml" sslKeystore="dececs_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="POLICYCLASS" value="${#Project#urnPolicy}${#TestCase#PolicyID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="ae5a171f-a238-4306-a151-1068d0d33f41"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('DELETE - PolicyDelete for User');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;

/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/
tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}
tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process response body and headers" id="e1b31635-3894-4025-8e27-c3d60b7a9727"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def XMLbody    = tC.getPropertyValue("XMLbody");
def httpStatus = tC.getPropertyValue("httpStatus");

String policyWasFound = "false";
String xmlPolicyClass = "";
String tcPolicyClass  = tC.getPropertyValue("policyClass");

/*
*  We can assume that if we get returned an HTTP status 
*  of 'HTTP/1.1 200 OK' the policy was found.  However,
*  it is never a bad idea to doublecheck.
*/

if (XMLbody != null) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	xmlPolicyClass = myXML.Policy.PolicyClass.text();
}

		
if (httpStatus == "HTTP/1.1 200 OK" &amp;&amp; xmlPolicyClass == tcPolicyClass) {
	policyWasFound = "true";
}


tC.setPropertyValue("policyExists", policyWasFound);</script></con:config></con:testStep><con:testStep type="groovy" name="Return policyExists to calling test case" id="7b0819e9-9a0a-4eb1-bb78-1390ffd727ec"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("policyExists",tC.getPropertyValue("policyExists"));
</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Policy - Remove all Parental Control Policies</con:value></con:property><con:property><con:name>sName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Test Configuration/Setup</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">40</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVdpc6rMEv7ur7B8P1qGRRSxklQNAoqKK65fbuEwLMomw6a//g4mepKcnHPz3ipLnaan++mFnmeeseF7bBdgjOLEDYOqKr3U/tOCjNVi+VajQ1tMg+MssyGYdLtBc60m7FgML9DNWlXFOEVqgBMjSF5qLM00GzTfoBmdYbqtTpduPzGd1r5WXaMYE9NE5YmuVQvfC3D35vallsZBNzSwi7uB4SPcTWB3CbRxl2h2jTum2uvzG8qbw/jVSZKoS1HwyUQQeR58gqFPPVOfdJ5N3F26dmAkaYzefZr4pfa+N8/zp7z5FMY2xdI0TdECRXRM7Nr/1F4r983IVAMrfFv3jCAMXGh47tUoQWkocUKzCjw7jN3E8f9gmqEYujTdQAVsQIYL/qlRvxzc0P3Q0ieQMTYa2DGYu7EFslCMAoiqq4X6UvvnZxV826vHRoCtMPbxl/W/g4SCDHlhhMwGvkd2R/dzi9+k6/UZwa4aQC/FboYmZZtEBkS4OouR5RZjF5PmM3H1Vv5qge8dhuC/Kckz9REngU19kxnJtRFO/p96fazVm5W14aXodT5GZy698h0csUohMvLUVm1p4kwL9eUG4aPyG6hHqd/XXxv10Vfvm/y+dhi1pgm90yxEZwp29PWw7dZd/7Lh/X6+SHZLNRPRZBse6fGxXxQL5zDN1UFw5VpsIuoTQ2Bbg1Nn5UiVReCdde2ATzs7nmXwuLsiJIzqgTNOO2ndGGx2xxYzuwBuYkhNuLHChYrchFnVXbazXZpZno3r/omq63JnVVGu0zzfTXSxdRiLrcIhqX35FdPHGMq4RuhyC7L8v23RgmQkxmPRKyeFRV7PBL1qqtqrS70eQD0b5KoIbFUcX8FEtE9n5+T2hZwWwXylAAlctAXIJXsnrefzkZyb67W3X6uKImoLLh+AnVQhDyS5WEv77ZA2Nvtoxyr0fimK5nYRHprDyByc8oEDJ5qu5RNdvWhHuZjoMr25yeyCrK/aUWOm+qpZ2RxFQVvIuZTfPEpy7kz2m0W0Wwk5vMpzDXB9wKzknqMNdH/NwObCgUd5rIHTTS46Wm+91gpZB7OKaE/WJDa9p+wj6JvRwfecD8YHxLhu9teXQ99L91f5qPXkfm957i/VQ1Oay0Ow2K0Om/XJ2ChZBQ4m4HD36LZcYxvm9r6TS/PdcBTuVSeDEzCXRXEOSLpooKn9IQj7ItA44BbX3lFshz1Tyakhiyt1weu3txf3vMVGn/YMptNhduNNe3ZuS3JQ34/Sw9HRnK0yrY9IT6yERLjucFbP2obLwCKy5lt5kIwKazBfVg4zqdjCQd20h5R3FZRY44cgvl4cT7MXyaY9xZeDa1kbcTvlPN7ytOYisjwruuC6Hs5PMd0WUZOldpdslFSArYkA9I+rozjXxE6ZVFPN5ztNNIAiJym4HtlkxK7Pw0HmwV0ThMVoMz2e3gtjSrksUvlcJm0lVzoSMMsiDJYrWTmClWjbsWjLijiHEpjv1FG+I/laDYjy1zwqtzzasgjk5h60hUGluaKFZJosOQ5cAnEVKIKjnYuN2fZp/ozk8XIScbmGJ1aw34QnzXfjVZwuV6PRZFwc9LR/OpJZZdHLUdbcV+TsFAF3MtKdkxRKxiza7ZKoHsAYJmrka2pxne7xseMefHpYbzHijJYgz678Q77qG/J+FNtLZjRYBLMmL1Rwal0Gfv3YyTd1fdmOeLMXWNLlQu3jNR2CUBEWrbNZsOzJWeXjdm4NwelgsJPCE8SLII/2OswX89Fm6ddblVY2Hvv0Vae4STTNl/2ck+fzetMU9YGOo9jdpR27iKeBye6MpJ3t6XXbjbyTwKYnnYuaa9snxZplZsRrs8qc28K9b/MRHFILKgMyb43V/uVwNa6RP4VvA/TrdHgI3+YH9XGyfBo9d9KxJN2KYHJflgeQKlUVcioYyd8JTClxzYZ1U+1GJQvCCQqS2mu5qyQv3ZRQHNfskiPjbS3TPCvRvEI+ggB6nExzNKPQgOYFoSnyrTvLeUPxBWIvDCy39FXyuLdT6u8Aod/FKDBR3MjCFDoI1/5iscxXVQ0W5PgNA4z0kPBEuakIbV7gmqADWpwo8522xDI8x/V4pcN32Fp1EibTYBoDK0HxZ47IfeKICwTdyEUlkSxPU0yOU5yQlJyNLE085ikzngKUEqoZl2yvy3KdFoVdP/JQCZjyQzP10FPkRLcEUfjtl20YEN+kZXYhvh30f4zw67N7MoiO6ZYKuAxHRKSg6De+y3db91h+i5n7lhffzYPUdMvznGQ2iV34huTzo18NU3bKo1tuXxDfYT+0vwo+Waa+BvVwZmYufLT940ZACCWhHK/3qpyNp/NTmmXprQ58SadiYp5iKLpNLRFMCSe66OEJBdTDBPUjOvpA/cXzQ/4ZX5o4wTIhr7RPuqZ6W/7gLrJEuLyLqKTri59edD65JHlLUJF8J+t55MpSIv7rrQZ2YalHxDPyk4ex+atc39j64IfEWc4wN7DLVUk+L39oDBgSsy6ZY2H80fh3Br5z/ln4SPIDS0K66ZAm6M9PquWAeqkZEIZpkKhS7Sb4ODRvOJNLhLq/lH4zc6N/73y+wH/k81ttvCTjyzdqD133fys33Fu7QER2YfeG5aVWkKspcR7YH4b0O8Dv57Sk/G1Of47k9Tfx75IPOf36Prz+Fw==</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:E072D07F07DF9AC4E0401F0A07993B75</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:E072D07F07F99AC4E0401F0A07993B75</con:value></con:property><con:property><con:name>policyClass</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:policy:ParentalControl:BlockUnratedContent</con:value></con:property><con:property><con:name>expectErrTypePolicyGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>policyExists</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">false</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79617</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>urn:dece:policyid:org:dece:E075DAD98C281310E0401F0A0799477E</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE072D07F07DF9AC4E0401F0A07993B75</con:value></con:property><con:property><con:name>assertionUserIdFULLEncoded</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE072D07F07F99AC4E0401F0A07993B75</con:value></con:property><con:property><con:name>PolicyIDEncoded</con:name><con:value>urn%3Adece%3Apolicyid%3Aorg%3Adece%3AE075DAD98C281310E0401F0A0799477E</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreate for Account" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="b4825ff3-f686-4135-a319-4b7fb0896824"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="cfddbdc7-1fb9-43dd-b4c3-796376da75fb"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("policyStatus","urn:dece:type:status:active");
tC.setPropertyValue("policyAuthority","urn:dece:role:coordinator");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("streamhandleFULL",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("policyResource",null);
tC.setPropertyValue("policyRequestEntity",null);
tC.setPropertyValue("policyAuthority",null);
tC.setPropertyValue("policyCreator",null);
tC.setPropertyValue("policyStatus",null);
tC.setPropertyValue("policyResourceXML",null);
tC.setPropertyValue("expectErrTypePolicyCreate",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="da3a0c30-7933-4875-abe8-6b0ba5dff59a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("policyClass",callTC.getPropertyValue("policyClass"));
tC.setPropertyValue("policyResource",callTC.getPropertyValue("policyResource"));
tC.setPropertyValue("policyRequestEntity",callTC.getPropertyValue("policyRequestEntity"));
tC.setPropertyValue("policyAuthority",callTC.getPropertyValue("policyAuthority"));
tC.setPropertyValue("policyCreator",callTC.getPropertyValue("policyCreator"));
tC.setPropertyValue("policyStatus",callTC.getPropertyValue("policyStatus"));
tC.setPropertyValue("expectErrTypePolicyCreate",callTC.getPropertyValue("expectErrTypePolicyCreate"));
tC.setPropertyValue("policyAuthority", "urn:dece:role:type:coordinator");
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));

if (tC.getPropertyValue("expectErrTypePolicyCreate") == null || tC.getPropertyValue("expectErrTypePolicyCreate") == "") {
		tC.setPropertyValue("expectErrTypePolicyCreate","SUCCESS");
}
if (tC.getPropertyValue("policyCreator") == null || tC.getPropertyValue("policyCreator") == "") {
		tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
}

switch (tC.getPropertyValue("policyClass")) {
	case "urn:dece:type:policy:EndUserLicenseAgreement":
		tC.setPropertyValue("policyResource","urn:dece:agreement:enduserlicenseagreement:10");
	break;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Policy &lt;dece:Resource> XML" id="0b4f67a7-fcb6-4430-9be6-eb254b899ba8"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
/*
*  Complete rating set which doesn't appear to work
mmpaRatingsUS = ["US:MPAA:G", "US:MPAA:PG", "US:MPAA:PG-13","US:MPAA:R", "US:MPAA:NC-17", "US:MPAA:NR",
	"US:MPAA:M", "US:MPAA:GP", "US:MPAA:SMA","US:MPAA:X"];
*/
	
mmpaRatingsUS = ["US:MPAA:G", "US:MPAA:PG", "US:MPAA:PG-13","US:MPAA:R", "US:MPAA:NC-17", "US:MPAA:X"];

String resourceXml = "";
String urnRating   = testProject.getPropertyValue("urnRating");

def resource = testCase.getPropertyValue("policyResource");

switch (resource) {
	case "${urnRating}US:MPAA:M":
	case "${urnRating}US:MPAA:NC-17":
	case "${urnRating}US:MPAA:R":
	case "${urnRating}US:MPAA:PG-13":
	case "${urnRating}US:MPAA:PG":
		for (rating in mmpaRatingsUS) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "&lt;dece:Resource>$rating&lt;/dece:Resource>\n";
			if (rating == resource) {
				break;
			}
		}
	break;
	default:
		resourceXml = "&lt;dece:Resource>$resource&lt;/dece:Resource>";
	break;
}

this.log.info "resource [$resource]";
this.log.info "resourceXml [$resourceXml]";

testCase.setPropertyValue("policyResourceXML", resourceXml);


</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="03ad0b91-ffde-4c07-b058-6c6320761bdd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("POST - PolicyCreate Account");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - PolicyCreate Account" id="f06925e2-6b3e-4f20-b95a-a92a545c37aa"><con:settings/><con:config service="Policy Create" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Policy/{POLICYCLASS}" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - PolicyCreate Account" mediaType="application/xml" postQueryString="false" sslKeystore="iscportal1_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="${#Project#coordinatorSchema} dece.xsd" xmlns:dece="${#Project#coordinatorSchema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:${#TestCase#policyClass}</dece:PolicyClass>
      ${#TestCase#policyResourceXML}
      <!--<dece:Resource>${#TestCase#policyResource}</dece:Resource>-->
      <dece:RequestingEntity>${#TestCase#policyRequestEntity}</dece:RequestingEntity>
      <dece:PolicyAuthority>${#TestCase#policyAuthority}</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#assertionUserId}">
            <dece:Value>${#TestCase#policyStatus}</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="MINOR" value="${#Project#VersionMinor}"/>
  <con:entry key="MAJOR" value="${#Project#VersionMajor}"/>
  <con:entry key="POLICYCLASS" value="${#Project#urnPolicy}${#TestCase#policyClass}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="39f27773-b578-4eb0-a73f-b6ccd38f0873"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('POST - PolicyCreate Account');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;
/*

def expXML = tStep.httpRequest.response.getResponseContent();
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/
tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="44cffb91-301a-40f8-9ea0-a561eff505df"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrTypePolicyCreate");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";

/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 201 Created";
	break;
}
	
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;
</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Policy - Establish Manage account consent policy</con:value></con:property><con:property><con:name>sName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Test Configuration/Setup</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportal1</con:value></con:property><con:property><con:name>policyStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:status:active</con:value></con:property><con:property><con:name>policyAuthority</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:type:coordinator</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbZcuo4EP0Vyvcx5RWzuQJVBkLirBDIxsuUkGVQsCXHklny9SMZcDAhGe48udRunT696EjnDESh5biMoYRjSkqrKCTMyaxNJU2IQwHDzCEgQszh0Bm6d7eOpRkO2G1RSl63qfwzqQbArvl1FQU1W7VN21InwKqJpVGvNapmHRi2cGUsRR5hHBDeVCzDtFWjoZrGyGg45ZpTqWmVhj1WSs8oYQJbuGiGsiW1Yk1lxnns6PpyudSWZY0mU90yDFN/vbsdwhmKgNI632SUBUpaW3+o+QiiMIQapJF+rhd8zn3mDPGUAJ4maBvL/ymWoRsNXfj4DE//KPle5HskoNmyAwglGIIQfwJZnzvEZ9QvueGUJpjPoh+TMA0JrKIVVKFpkz+KXqR2IlCBYcKAymbA3GI9ogAliEBUenr0msqf07qWbR0lgLCAJhErLv+ODyILFNIY+SrbpbWldjrgkUq1zhF0PALDlOEFupfDGgOI2LabCJ4OVeonKMCrW8zEgK6YZKfv0ztYbqrRxVPE+P9p0F5zNiDPIExRq9dvjKPZ4O29staJPbp+GI4H86tB2H+DzYzAvnNmyFu7WR4MZT5Emx24PIj6/XvLnI5M4K0fz669qXt5rU+IGfbGN/NG/6Y9H7vPeHTfTuvzvrXS3U/4MqbJ+3hSaUzf8NV49PpwsYbV9U3a/XgNZ8urt6e4Xk7eVyxaB5fl1bV5/RKdLa7mT8tOO6676cenZeNB4Hbp2cMMzt4G/V6cXlqrmhfiMvUnNy8DRoceXcaN9BJ2q/3OFFn1Zp7OHv+ibXfmh+nkHUG+W8ox8LqlnugS4L+LmbRgXw0yVyeW4sM4IlxpyV1SO5xUyB32HdHDzdqw2mW33eu5RrlsVC7sC6Mivo2G2TPcumFVdiKzYXFAsUNJgGUsKbmbsfmdIIwchoiPEnVBU6F0TPkFsQs4KHnkURwCShgaUSHPpuGnSXUyrc/LPDCD9cSuflbtd98MlNI95Q/kIXEDjpKCKJtWQZQfEcQxRlK55WAzMdmMi2J8gEXKQ1NbAI2gVGh7ImXWsex6RWc4ikMkqeoR9dMQafEszkqjs83XUgFkmRUzGNOEgzA7EfqP+R3+25VC+PhYOjCZUhuJdqIjl4y9y+db3pWjl9EO3k19LA+YqCtPMNwwKf76Ghc5J/msfCW2Y55v+EsAyI5A6L/w0w9Lk0f0F3gv/u42F/eCUJLWrr8fQPvQ0sUizTpak4qZCHhdFks3LH2IYCq0bj2ic0T0HEU/6WLJiR8Ez+1FiimfkSEHHEViBEvZ8oSXxBAx+ZLwxOFZnfpMKYQUpeNoxY/ZOqF4BUnGvz6UoAOlnzD3xWdJE/+rY0ew9uKIPMVDgmMylSt5qax/GBBIBSwWckiTffBjAMeCF415kXMuXAzUJOXo5z8lqXNNBUBIU8K9rpIZ9rU348nXMXK+nL7BZPKev/fwfz/4VJyNAETilchwhi+vbUceATLd0+9t0EMJ73S71XqtXauY1e6+hLfbRjUvSoFd65v5u2WvTocz3voX</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:02B3CDD687B7516DE05305991F0ABB06</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:02B3ABFFA03305E4E05305991F0A8025</con:value></con:property><con:property><con:name>policyClass</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ManageAccountConsent</con:value></con:property><con:property><con:name>policyResource</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:02B3CDD687B7516DE05305991F0ABB06</con:value></con:property><con:property><con:name>policyRequestEntity</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:org:org:dece:iscportal1</con:value></con:property><con:property><con:name>policyCreator</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:02B3ABFFA03305E4E05305991F0A8025</con:value></con:property><con:property><con:name>policyResourceXML</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">&lt;dece:Resource>urn:dece:accountid:org:dece:02B3CDD687B7516DE05305991F0ABB06&lt;/dece:Resource></con:value></con:property><con:property><con:name>expectErrTypePolicyCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/2015/02/Account/urn:dece:accountid:org:dece:02B3CDD687B7516DE05305991F0ABB06/Policy/urn:dece:type:policy:ManageAccountConsent</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79618</con:value></con:property><con:property><con:name>V2</con:name><con:value>06</con:value></con:property><con:property><con:name>V1</con:name><con:value>1</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE072D07F07DF9AC4E0401F0A07993B75</con:value></con:property><con:property><con:name>policyClassEncoded</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AManageAccountConsent</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>02B3CDD687B7516DE05305991F0ABB06</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>02B3ABFFA03305E4E05305991F0A8025</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\GIT\uv-coordinator-api-regression\Certs\QALP1/iscportal1_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>d497d5ec-b6fb-4d74-86a8-2ddaf55fa864</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e8edf7b-19c2-4017-a782-1d475e29534b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8a72545c-64f7-44de-8125-7a001d334334</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StreamListView" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="fff6522e-1737-4c60-a7b6-705d8f92abdc"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("nodetype",null);
tC.setPropertyValue("streamhandleFULL",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("expectErrTypeStreamListView",null);
tC.setPropertyValue("expectDBCreatedBy",null);
tC.setPropertyValue("expectDBDeletedBy",null);
tC.setPropertyValue("expectDBModifiedBy",null);
tC.setPropertyValue("expectDBStatus",null);
tC.setPropertyValue("expectNickname",null);
tC.setPropertyValue("expectStreamActiveCnt",null);
tC.setPropertyValue("httpContentEncoding",null);
tC.setPropertyValue("streamAccountActiveCount",null);
tC.setPropertyValue("streamHistoryRows",null);
tC.setPropertyValue("streamFlagCreateDateOld",null);
tC.setPropertyValue("streamFlagIgnoreCreatedDate",null);
tC.setPropertyValue("expectDBModifiedBy",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

int counter;
String sh;
String rt;
String shCreatedBy;
String shValue;
String shExpireDate;
String nickname;
String expectGenericRightsToken;
String expectRequestingUser;
String expectDBDeletedTime;
String expectDBCreatedTime;
String streamFlagCreateDateOld;
String streamFlagIgnoreCreatedDate;
String streamFlagIgnoreDeletedDate;
String expectDBCreatedByNodeType;

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("nodetype",callTC.getPropertyValue("nodetype"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("rightstokenid",callTC.getPropertyValue("rightstokenid"));
tC.setPropertyValue("rightstokenidFULL",callTC.getPropertyValue("rightstokenidFULL"));
tC.setPropertyValue("streamhandleFULL",callTC.getPropertyValue("streamhandleFULL"));
tC.setPropertyValue("expectErrTypeStreamListView",callTC.getPropertyValue("expectErrTypeStreamListView"));
tC.setPropertyValue("expectDBCreatedBy",callTC.getPropertyValue("expectDBCreatedBy"));
tC.setPropertyValue("expectDBDeletedBy",callTC.getPropertyValue("expectDBDeletedBy"));
tC.setPropertyValue("expectDBModifiedBy",callTC.getPropertyValue("expectDBModifiedBy"));
tC.setPropertyValue("expectDBStatus",callTC.getPropertyValue("expectDBStatus"));
tC.setPropertyValue("expectNickname",callTC.getPropertyValue("nickname"));
tC.setPropertyValue("counter",callTC.getPropertyValue("counter"));
tC.setPropertyValue("expectGenericRightsToken",callTC.getPropertyValue("expectGenericRightsToken"));
tC.setPropertyValue("expectStreamAvailCnt",callTC.getPropertyValue("expectStreamAvailCnt"));
tC.setPropertyValue("expectStreamActiveCnt",callTC.getPropertyValue("expectStreamActiveCnt"));
tC.setPropertyValue("expectRequestingUser",callTC.getPropertyValue("expectRequestingUser"));
tC.setPropertyValue("streamAccountActiveCount",callTC.getPropertyValue("streamAccountActiveCount"));
tC.setPropertyValue("streamFlagCreateDateOld",callTC.getPropertyValue("streamFlagCreateDateOld"));
tC.setPropertyValue("streamFlagIgnoreCreatedDate",callTC.getPropertyValue("streamFlagIgnoreCreatedDate"));
tC.setPropertyValue("expectDBCreatedByNodeType",callTC.getPropertyValue("expectDBCreatedByNodeType"));



if (tC.getPropertyValue("expectErrTypeStreamListView") == null || tC.getPropertyValue("expectErrTypeStreamListView") == "") {
	tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS")
}
if (tC.getPropertyValue("expectDBStatus") == null || tC.getPropertyValue("expectDBStatus") == "") {
	tC.setPropertyValue("expectDBStatus","active")
}
if (tC.getPropertyValue("expectGenericRightsToken") == null || tC.getPropertyValue("expectGenericRightsToken") == "") {
	tC.setPropertyValue("expectGenericRightsToken","false")
}
if (tC.getPropertyValue("expectStreamAvailCnt") == null || tC.getPropertyValue("expectStreamAvailCnt") == "") {
	tC.setPropertyValue("expectStreamAvailCnt",tP.getPropertyValue("streamlimit"))
}
if (tC.getPropertyValue("expectStreamActiveCnt") == null || tC.getPropertyValue("expectStreamActiveCnt") == "") {
	tC.setPropertyValue("expectStreamActiveCnt","0")
}
if (tC.getPropertyValue("streamAccountActiveCount") == null || tC.getPropertyValue("streamAccountActiveCount") == "") {
	tC.setPropertyValue("streamAccountActiveCount","0")
}
if (tC.getPropertyValue("streamFlagIgnoreCreatedDate") == null || tC.getPropertyValue("streamFlagIgnoreCreatedDate") == "") {
	tC.setPropertyValue("streamFlagIgnoreCreatedDate","false")
}

if (tC.getPropertyValue("counter") == null ||
    tC.getPropertyValue("counter") == "") {
    		tC.setPropertyValue("counter","1");
    }
    
counter = tC.getPropertyValue("counter").toInteger();

for (int i = 0; i &lt;= counter; i++) {
	
	sh           = "streamhandleFULL_"  + (i + 1);
	rt           = "rightstokenidFULL_"   + (i + 1);
	shid           = "streamhandle_"  + (i + 1);
	shCreatedBy  = "expectDBCreatedBy_" + (i + 1);
	shDeletedBy  = "expectDBDeletedBy_" + (i + 1);	
	shModifiedBy  = "expectDBModifiedBy_" + (i + 1);
	shValue      = "expectDBStatus_"    + (i + 1);
	nickname     = "expectNickname_"    + (i + 1);
	expectRequestingUser = "expectRequestingUser_" + (i + 1);
	expectGenericRightsToken = "expectGenericRightsToken_" + (i + 1);
	expectDBDeletedTime = "expectDBDeletedTime_" + (i + 1);
	expectDBCreatedTime = "expectDBCreatedTime_" + (i + 1);
	streamFlagCreateDateOld = "streamFlagCreateDateOld_" + (i + 1);
	streamFlagIgnoreCreatedDate = "streamFlagIgnoreCreatedDate_" + (i + 1);
	streamFlagIgnoreDeletedDate = "streamFlagIgnoreDeletedDate_" + (i + 1);
	expectDBCreatedByNodeType = "expectDBCreatedByNodeType_" + (i + 1);

     tC.setPropertyValue(shid,callTC.getPropertyValue(shid));     		
	tC.setPropertyValue(sh,callTC.getPropertyValue(sh));
	tC.setPropertyValue(rt,callTC.getPropertyValue(rt));
	tC.setPropertyValue(shValue,callTC.getPropertyValue(shValue));
	tC.setPropertyValue(shCreatedBy,callTC.getPropertyValue(shCreatedBy));
	tC.setPropertyValue(shDeletedBy,callTC.getPropertyValue(shDeletedBy));
	tC.setPropertyValue(shModifiedBy,callTC.getPropertyValue(shModifiedBy));
	tC.setPropertyValue(nickname,callTC.getPropertyValue(nickname));
	tC.setPropertyValue(expectGenericRightsToken,callTC.getPropertyValue(expectGenericRightsToken));
	tC.setPropertyValue(expectRequestingUser,callTC.getPropertyValue(expectRequestingUser));
	tC.setPropertyValue(expectDBDeletedTime,callTC.getPropertyValue(expectDBDeletedTime));
	tC.setPropertyValue(expectDBCreatedTime,callTC.getPropertyValue(expectDBCreatedTime));
	tC.setPropertyValue(streamFlagCreateDateOld,callTC.getPropertyValue(streamFlagCreateDateOld));
	tC.setPropertyValue(streamFlagIgnoreCreatedDate,callTC.getPropertyValue(streamFlagIgnoreCreatedDate));
	tC.setPropertyValue(streamFlagIgnoreDeletedDate,callTC.getPropertyValue(streamFlagIgnoreDeletedDate));
	tC.setPropertyValue(expectDBCreatedByNodeType,callTC.getPropertyValue(expectDBCreatedByNodeType));
}
</script></con:config></con:testStep><con:testStep type="groovy" name="pem set"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("GET - StreamListView");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - StreamListView"><con:settings/><con:config service="DECE StreamCreate API" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/List" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - StreamListView" mediaType="application/xml" sslKeystore="iscportalcs1_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="Tester" value="${#Project#tester}"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('GET - StreamListView');

/*
*  Get the XML body raw 
*/
//rawResp = new ByteArrayOutputStream();
//rawResp = tStep.httpRequest.response.getRawResponseData();
//def expXML  = new String(rawResp);

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String contentEncoding = null;

expXML     = tStep.httpRequest.response.getResponseContent();

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			contentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
tC.setPropertyValue("httpContentEncoding", contentEncoding);

def testStep = testRunner.testCase.getTestStepByName( "Validation of List of Streams get as per Details stored at StreamCreate for all" )
 log.info status
if(status=="HTTP/1.1 200 OK")
{  log.info status
   testStep.disabled = false;
}
else
{
	 testStep.disabled = true;
	}
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract ERROR table information"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def a = new dbUtils.dbErrors(log,tP.getPropertyValue("targetSystem"));

tC.setPropertyValue("errorStatusCode",null);
tC.setPropertyValue("errorReason",null);
tC.setPropertyValue("errorID",null);

String xmlData = "";
String errId = "";

log.info "expectErrTypeStreamView[" + tC.getPropertyValue("expectErrTypeStreamListView") + "]";

switch (tC.getPropertyValue("expectErrTypeStreamListView")) {
	case "ADULT_CONTENT_NOT_ALLOWED":
		errId = "Policy:AdultContentNotAllowed";
		break;
	case "ACCOUNT_NOT_ACTIVE":
		errId = "AccountNotActive";
		break;
	case "API_NOT_AUTH":
		errId = "Security:RoleInvalid";
		break;
	case "BLOCKED_ACCESS_UNRATED":
		errId = "Policy:UnratedContentBlocked";
		break;
	case "CID_NOT_ACTIVE":
		errId = "ContentIDNotActive";
		break;
	case "CID_NOT_FOUND":
		errId = "ContentIDNotFound";
		break;
	case "LOGICAL_ASSET_NOT_ACTIVE":
		errId = "AssetLogicalIDNotActive";
		break;
	case "RT_RENT_EXPIRED":
		errId = "RightsTokenRentalExpired";
		break;
	case "RT_NOT_FOUND":
		errId = "RightsTokenNotFound";
		break;
	case "RT_NOT_ACTIVE":
		errId = "RightsTokenNotActive";
		break;
	case "RATING_POLICY":
		errId = "RatingPolicyExists";
		break;
	case "CID_NOT_GRANTED":
	case "STREAM_RIGHTS_NOT_GRANTED":
		errId = "StreamRightsNotGranted";
		break;
	case "STREAM_COUNT_EXCEEDED":
		errId = "AccountStreamCountExceedMaxLimit";
		break;
	case "STREAM_COUNT_EXCEEDED_USER":
		errId = "UserStreamCountExceedMaxLimit";
		break;
	case "STREAM_INVALID_TRANS":
		errId = "StreamTransactionIdInvalid";
		break;
	case "STREAM_ACCOUNTID_MISMATCH":
		errId = "AccountIdUnmatched";
		break;		
	case "STREAM_NICKNAME_TOO_LONG":
		errId = "StreamClientNicknameTooLong";
		break;		
	case "STREAM_WINDOW_NOT_ALLOWED":
		errId = "StreamAssetWindowNotAllowed";
		break;
	case "STREAM_OWNER_MISMATCH":
		errId = "StreamOwnerMismatch";
		break;
	case "STREAM_NOT_FOUND":
		errId = "StreamNotFound";
		break;
	case "STREAM_NOT_ACTIVE":
		errId = "StreamNotActive";
		break;
	case "USER_NOT_MATCH_TOKEN":
		errId = "UserIdUnmatched";
		break;
	case "USER_NOT_ACTIVE":
		errId = "UserNotActive";
		break;
	case "USER_NOT_SUPPLIED":
		errId = "UserNotSpecified";
		break;
	default:
		errId = tC.getPropertyValue("expectErrTypeStreamListView").toString();
		break;
}


try {
	xmlData = a.errGetIdInfo(errId);
	
	assert xmlData.trim().length() > 1;

	def myXML = new XmlSlurper().parseText(xmlData);

	log.info myXML.ResultSet.Row.size();
	tC.setPropertyValue("errorStatusCode", myXML.ResultSet.Row[0].STATUS_CODE.toString());
	tC.setPropertyValue("errorReason", myXML.ResultSet.Row[0].REASON.toString());
	tC.setPropertyValue("errorID", myXML.ResultSet.Row[0].ERROR_ID.toString());

	/*
	*  The DB does not contain the complete HTTP status
	*  string, only the code.  Thus, we must adjust.
	*/
	switch (tC.getPropertyValue("errorStatusCode")) {
		case "400":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 400 Bad Request");
			break;
		case "403":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 403 Forbidden");
			break;
		case "404":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 404 Not Found");
			break;
		case "409":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 409 Conflict");
			break;
	}
}
catch (Throwable e) {
	log.info "STEP FAILURE! --- " + e;
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" disabled="true"><con:settings/><con:config><script><![CDATA[import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Calendar;
import java.text.SimpleDateFormat;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
//------------------------------------------------------//
def formatDate(recvDate) {
	try {
		String dateHolder = "";
		Pattern datePattern = Pattern.compile("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})");
		Matcher cdateMatcher = datePattern.matcher(recvDate);
		if (cdateMatcher.find()) {
			dateHolder = cdateMatcher.group(1) + "/" + cdateMatcher.group(2) + "/" +
				cdateMatcher.group(3) + " " + cdateMatcher.group(4) + ":" +
				cdateMatcher.group(5) + ":" + cdateMatcher.group(6);
			log.info "dateHolder[$dateHolder]";	
		}
	} 
	catch (Throwable e) {
		log.info "Matcher Failure!  recvDate[$recvDate] ERROR - " + e;
	} 
	finally {
		return dateHolder;	
	}
}
//------------------------------------------------------//
def getHistoryRecords(sh) {
	def tC = testRunner.getTestCase();
	def tS = tC.getTestSuite();
	def tP = tS.getProject();
	
	log.info "---------IN getHistoryRecords sh[$sh]";
	
	a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());
     String hsh;
     if(tP.getPropertyValue("V2") == tP.getPropertyValue("versionUrlEncode"))
     {
	int lastColon = sh.lastIndexOf('%');
     hsh = sh.substring(lastColon +3,sh.length());
     }
     else
     {
     int lastColon = sh.lastIndexOf(':');
     hsh = sh.substring(lastColon +1,sh.length());
     }
	String hresults = null;
	String hsql = """select 
 	 to_char(rawtohex(a.STREAM_HISTORY_OID)) STREAM_HISTORY_OID,
	  to_char(rawtohex(a.STREAM_HANDLE_OID)) STREAM_HANDLE_OID,
	  to_char(rawtohex(a.RIGHTS_TOKEN_OID)) RIGHTS_TOKEN_OID,
	  to_char(rawtohex(a.ACCOUNT_OID)) ACCOUNT_OID,
	  to_char(rawtohex(a.CREATED_BY_USER_OID)) CREATED_BY_USER_OID,
 	 TRANSACTION_ID,
	  STATUS,
	  STREAM_CLIENT_NICKNAME,
	  EXPIRATION_DATE,
	  CLOSED_DATE,
	  CLOSED_BY_ORG_ID,
	  CREATED_DATE,
	  to_char(rawtohex(a.CREATED_BY_NODE_OID)) CREATED_BY_NODE_OID 
	  from STREAM_DATA_HISTORY a where STREAM_HANDLE_OID =hextoraw( '$hsh') 
	  order by STATUS
	  """;

	  log.info "hsql is $hsql";

	hresults = a.SelectFromDB(hsql,tP.getPropertyValue("targetSystem").toString());
	log.info hresults;

	/*
	*  If zero length, no need to continue;
	*/
	assert hresults.length() > 0;

	try {
		def hmyXML = new XmlSlurper().parseText(hresults);
		log.info "hmyXML.ResultSet.Row.size() is [" + hmyXML.ResultSet.Row.size() + "]";
		assert hmyXML.ResultSet.Row.size() >= 1;
	}
	catch(Throwable e) {
		log.info e; 
		assert 1 == 2;
	}
	finally {
		tC.setPropertyValue("streamHistoryRows", hresults);
	}
}
//------------------------------------------------------//


def a = new generalUtils.generalUtils(log);

def url = tP.getPropertyValue("targetHost");
def urnacct = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def urnnode = tP.getPropertyValue("urnNode");
def urnErr = tP.getPropertyValue("urnerror");
def urnGenericRightsToken = tP.getPropertyValue("urnGenericRightsToken");
def streamMaxDisplayCount = tP.getPropertyValue("streamMaxDisplayCount");
def streamlimit  = tP.getPropertyValue("streamlimit");
def acct  = tC.getPropertyValue("nodeaccountid");
def sh = tC.getPropertyValue("streamhandleFULL");
def counter = tC.getPropertyValue("counter").toInteger();
def account = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrTypeStreamListView");
def XMLbody = tC.getPropertyValue("XMLbody");
def expectCreatedBy = urnnode + tC.getPropertyValue("expectDBCreatedBy");
def expectDeletedBy = urnnode + tC.getPropertyValue("expectDBDeletedBy");
def expectModifiedBy = urnnode + tC.getPropertyValue("expectDBModifiedBy");
def expectStatus = tC.getPropertyValue("expectDBStatus");
def expectRT = tC.getPropertyValue("rightstokenidFULL");
def expectSH = tC.getPropertyValue("streamhandleFULL");
def expectNickname = tC.getPropertyValue("expectNickname");
def expectStreamActiveCnt = tC.getPropertyValue("streamAccountActiveCount");
def expectStreamAvailCnt = streamlimit.toInteger() - expectStreamActiveCnt.toInteger();
def expectGenericRightsToken = tC.getPropertyValue("expectGenericRightsToken");

String errorID     = "";
String errorReason = "";
String errorLink   = "";
String errorHost   = "https://" + tP.getPropertyValue("targetHostq") + ":" + tP.getPropertyValue("targetPort");
String availStreamsCnt = "";
String major = tP.getPropertyValue("V1").toString();
String minor = tP.getPropertyValue("V2").toString();
String errorLinkBase = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#";
String orgRequest = url + "/rest/$major/$minor/Account/$account/Stream/$sh";
String expectHTTPstatus = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";
String expectDescription = "";
boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean processXMLFlag  = true;
boolean XMLbodynull     = false;
boolean doValidations   = true;
int displayStreamCount = 0;
int xmlIndex = 0;
int g = 0;
int streamAccountActiveCount = tC.getPropertyValue("streamAccountActiveCount").toInteger();


/*
*  Change the expectRH value if policies should result
*  in the generic rightstoken being displayed
*/
if (expectGenericRightsToken == "true") {
	expectRT = tP.getPropertyValue("urnGenericRightsToken");
}

/*
*  Added this override with the 7.7 drop.  They change the name
*  of the <ErrorLink> host.
*/
if (tP.getPropertyValue("targetURL").length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = "https://qa.q.uvvu.com:" + tP.getPropertyValue("targetPort");
}

switch (errorRespType) {
	case "SUCCESS_NO_STREAMS":
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = false;
		httpLocationHeader = false;
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	

	case "Node_status_inactive":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                processXMLFlag  = true;
                                errorID = "urn:dece:errorid:org:dece:securitycontext:Bad_Request";
                                errorReason = "node_status_inactive";
                                errorLink = "$errorHost/deceerrors/error/error_response.html";
break;


	case "XML_PARSING_ERROR":
		errorLinkFlag = true;
		errorReasonFlag = false;
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID = "urn:dece:errorid:org:dece:SaxParserException";
		errorLink  = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;
	
	default:
		errorReasonFlag = true;
		expectHTTPstatus = tC.getPropertyValue("errorStatusCode");
		errorID     = urnErr + tC.getPropertyValue("errorID");
		errorReason = tC.getPropertyValue("errorReason");
		errorLink   = "$errorLinkBase" + tC.getPropertyValue("errorID");
	break;
}

log.info "errorRespType[$errorRespType]";

/*
*   HTTP HEADER CHECKS
*/
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;

// Connection
if(tC.getPropertyValue("httpStatus") == "HTTP/1.1 400 Bad Request")
{
	expectHTTPconnection = "close";
}
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert tC.getPropertyValue("httpConnect") == expectHTTPconnection;

/*
* Content-Length
*/
String httpContentEncoding = tC.getPropertyValue("httpContentEncoding");
String contentLength = tC.getPropertyValue("httpContentLength");
log.info "httpContentEncoding[$httpContentEncoding]";
log.info "contentLength[$contentLength]";
if (httpContentEncoding == "null" || httpContentEncoding == null) {
	log.info "Asserting contentLength.length() > 0";
	assert contentLength.toInteger() > 0;
} else {
	log.info "Asserting httpContentEncoding is chunked";
	assert tC.getPropertyValue("httpContentEncoding") == "chunked";
}

//No Content-Location
assert tC.getPropertyValue("httpContentLocation") == null;

//Content-Type
//if(tC.getPropertyValue("nodetype")== "llp" )
this.log.info "HTTP Content-Type:  Expect: $expectHTTPcontenttype - Received: " + tC.getPropertyValue("httpContentType");
assert tC.getPropertyValue("httpContentType") == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {
	assert XMLbody == null;
}

this.log.info "XMLBody Length [" + XMLbody.length() + "] processXMLFlag[$processXMLFlag]";

if (XMLbody != null && processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	if (errorRespType != "SUCCESS" && errorRespType != "SUCCESS_NO_STREAMS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;

		// ErrorCode
		this.log.info "Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorLink [" + myXML.Error.ErrorLink.toString() + "] errorLink[$errorLink]";
		//assert myXML.Error.ErrorLink.toString() == errorLink;
		
	} else if (errorRespType == "SUCCESS_NO_STREAMS") {
		log.info "--------------SUCCESS NO STREAMS---------------";
		availStreamsCnt = myXML.@AvailableStreams.text();
		activeStreamCnt = myXML.@ActiveStreamCount.text();

		log.info "AvailableStreams[$availStreamsCnt] lte System Limit of [" + tP.getPropertyValue("streamlimit") + "]";
		assert availStreamsCnt <= tP.getPropertyValue("streamlimit");

		if (tC.getPropertyValue("streamFlagCreateDateOld") != "true") {
			log.info "Assert ActiveStreamCount == 0 -- streamFlagCreateDateOld[" + tC.getPropertyValue("streamFlagCreateDateOld") + "]";
			assert activeStreamCnt.toInteger() == 0;
			log.info "AvailableStreams - recv[$availStreamsCnt] - expect[" + streamlimit.toInteger() + "]";
			assert availStreamsCnt.toInteger() == streamlimit.toInteger();
		} else {
			log.info "ActiveStreamCount[$activeStreamCnt] == expectStreamActiveCnt[$expectStreamActiveCnt]";
			assert activeStreamCnt.toInteger() == expectStreamActiveCnt.toInteger();
			log.info "ActiveStreamCount[$availStreamsCnt] == " + streamlimit.toInteger() - activeStreamCnt.toInteger() + "]";
			assert availStreamsCnt.toInteger() == streamlimit.toInteger() - activeStreamCnt.toInteger();
		}
		
		log.info "Assert NO <Stream> Rows Present";
		assert myXML.Stream.size() == myXML.Stream.size();
		log.info "Assert NO <Stream>.<ResourceStatus> Rows Present";
		assert myXML.Stream.ResourceStatus.size() == 0;
		log.info "Assert NO <Stream>.<RightsTokenID> Rows Present";
		assert myXML.Stream.RightsTokenID.size() == 0;
		log.info "Assert NO <Stream>.<ExpirationDateTime> Rows Present";
		assert myXML.Stream.ExpirationDateTime.size() == 0;
			
		/*  AvailableStreams */
		log.info "availStreamsCnt[$availStreamsCnt] - expectStreamAvailCnt[$expectStreamAvailCnt]";
		assert availStreamsCnt.toInteger() == expectStreamAvailCnt.toInteger();

		/* ActiveStreamCount */
		log.info "activeStreamCnt[$activeStreamCnt] - expectStreamActiveCnt[$expectStreamActiveCnt]";
		assert activeStreamCnt.toInteger() == expectStreamActiveCnt.toInteger();
	} else {
		log.info "--------------STREAM DATA VERIFICATION-----------------";
		availStreamsCnt = myXML.@AvailableStreams.text();
		
		activeStreamCnt = myXML.@ActiveStreamCount.text();

		this.log.info "AvailableStreams[$availStreamsCnt] lte System Limit of [" + tP.getPropertyValue("streamlimit")  + "]";
		assert availStreamsCnt.toInteger() <= tP.getPropertyValue("streamlimit").toInteger();

		log.info "Assert ActiveStreamCount == $streamAccountActiveCount";
		assert activeStreamCnt.toInteger() == streamAccountActiveCount;
		log.info "AvailableStreams - recv[$availStreamsCnt] - expect[" + streamlimit.toInteger() - streamAccountActiveCount + "]";
		assert availStreamsCnt.toInteger() == streamlimit.toInteger() - streamAccountActiveCount;
				
		/*
		*  Due to stream ordering we must work backwards from the 
		*  total number of streams created.  The newest created
		*  stream will be the first in the list.
		*/
		g = counter;

		log.info "g[$g] - counter[$counter]";

		/*
		*  By design, we never return more than 30 streams.   
		*  
		*/
		this.log.info "Recv Stream Count [" + myXML.Stream.size() + "] lessThan [$streamMaxDisplayCount]";;
		assert myXML.Stream.size() <= streamMaxDisplayCount.toInteger();

		
		while (g != 0) {
			String expectValue = tC.getPropertyValue("expectDBStatus_" + g);
			String expectcb = urnnode + tC.getPropertyValue("expectDBCreatedBy_" + g);
			String expectdb = urnnode + tC.getPropertyValue("expectDBDeletedBy_" + g);
			String expectmb = urnnode + tC.getPropertyValue("expectDBModifiedBy_" + g);
			String expectsh = tC.getPropertyValue("streamhandleFULL_" + g);
			String expectNick = tC.getPropertyValue("expectNickname_" + g);
			String expectrt  = tC.getPropertyValue("rightstokenFULL_" + g);
			String expectGeneric = tC.getPropertyValue("expectGenericRightsToken_" + g);
			String expectRequestingUser = tC.getPropertyValue("expectRequestingUser_" + g);
			String expectCDate = tC.getPropertyValue("expectDBCreatedTime_" + g);
			String expectDDate = tC.getPropertyValue("expectDBDeletedTime_" + g);
			String streamFlagIgnoreCreatedDate = tC.getPropertyValue("streamFlagIgnoreCreatedDate_" + g);
			String streamFlagIgnoreDeletedDate = tC.getPropertyValue("streamFlagIgnoreDeletedDate_" + g);
			String expectDBCreatedByNodeType = tC.getPropertyValue("expectDBCreatedByNodeType_" + g);
			String baseRightsToken = tC.getPropertyValue("rightstokenidFULL");

			log.info "g[$g]";

			getHistoryRecords(expectsh);

			/* ---------HACKIE SMACKIE 
			*  The requestinguser displayed in streamview is NOT the 
			*  requestinguser supplied during streamcreation.  It is the 
			*  userid associated with security context (saml) which
			*  invoked the request.  Thus, all requestingusers in all
			*  streams displayed will be the same.  We will override
			*  that NOW!  LLP and LLPCS do not display the requestinguser
			*  element.
			*/
			//if (tC.getPropertyValue("nodetype") == "llp" || tC.getPropertyValue("nodetype") == "llpcs") {
			//	expectRequestingUser = "";
			//} else {
				expectRequestingUser = tC.getPropertyValue("assertionUserIdFULL");
			//}
						
			/*
			*  if the nodetype is 'dlp' or 'llp' streams in 'deleted' status
			*   are not displayed.  Thus, we must adjust accordingly.
			*/
			if (tC.getPropertyValue("nodetype") == "llp" || tC.getPropertyValue("nodetype") == "dlp") {
				//if (	expectValue == "active") {
				//	doValidations = true;
				//} else {
				//	doValidations = false;
				//}
			//} else {
				doValidations = true;
			}

			/*
			*  Special processing is required for nickname just
			*  incase it contains special xml characters.
			*/
			if (expectNick != null) {
				if (expectNick.length() > 0) {
					expectNick = expectNick.replace('&amp;','&');
					expectNick = expectNick.replace('&lt;','<');
					expectNick = expectNick.replace('&gt;','>');
					expectNick = expectNick.replace('&apos;','\'');
				}
			}

			/*
			*  There maybe one or more rightstokens created by the test
			*  case.  Thus multiple streams maybe have the same 
			*  rights token.  We will assume that if we get a null
			*  rightstokenFULL_count value that only one rightstoken
			*  was created for the test and that will be contained 
			*  in rightstokenfull.
			*/
			if (expectrt == null) {
				log.info "RIGHTSTOKENFULL - Override to the baseRightsToken value [$baseRightsToken]";
				expectrt = baseRightsToken;
			}
			log.info "g[$g] - doValidations [$doValidations] - nodetype[" + tC.getPropertyValue("nodetype") + "] - expectValue[$expectValue]";
			
			if (doValidations) {
				displayStreamCount++;
				log.info "****************************************"+displayStreamCount+"************************************"

				/*  StreamHandleID */
				
				String recvsh = myXML.Stream[xmlIndex].@StreamHandleID.text();
				log.info "xmlIndex[$xmlIndex] - StreamHandleID - recvsh[$recvsh] - expect[$expectsh]";
				assert recvsh == expectsh;
				
				//StreamClientNickname
				if (expectNick != null) {
					String recvnick = myXML.Stream[xmlIndex].StreamClientNickname;
					log.info "xmlIndex[$xmlIndex] - StreamClientNickname - recv[$recvnick] - expect[$expectNick]";
					assert expectNick == recvnick;
				} else {
					log.info "xmlIndex[$xmlIndex] - StreamClientNickname - Element NOT present";
					assert myXML.Stream[xmlIndex].StreamClientNickname.size() == 0;
				}
				
				// RequestingUserID
				String recvru = myXML.Stream[xmlIndex].RequestingUserID;
				//log.info "xmlIndex[$xmlIndex] - RequestingUserID - recv[$recvru] - expect[$expectRequestingUser] - expectDBCreatedByNodeType[$expectDBCreatedByNodeType]";
				//assert recvru == expectRequestingUser;
		
				//RightsTokenID
				String recvrt = myXML.Stream[xmlIndex].RightsTokenID.text();
				if (expectGeneric == "true") {
					expectrt = urnGenericRightsToken;
				}
				log.info "xmlIndex[$xmlIndex] - RightsTokenID - recvrt[$recvrt] - expectrt[$expectrt] - expectGeneric[$expectGeneric]";
				assert recvrt == expectrt;
				
				//ExpirationDateTime
				String recvet = myXML.Stream[xmlIndex].ExpirationDateTime;
				log.info "xmlIndex[$xmlIndex] - ExpirationDateTime - is NOT null";
				assert recvet.length() > 0;

				//CreatedBy
				String recvcb   = myXML.Stream[xmlIndex].ResourceStatus.Current.@CreatedBy.text();
				log.info "xmlIndex[$xmlIndex] - CreatedBy - recvcb[$recvcb] - expectcb[$expectcb]";
				assert recvcb == expectcb;

				//CreationDate
				if (streamFlagIgnoreCreatedDate != "true") {
					log.info "xmlIndex[$xmlIndex] - CreationDate - is NOT null";
					String recvDate = "";
					String recvcd = myXML.Stream[xmlIndex].ResourceStatus.Current.@CreationDate.text();
					recvDate = formatDate(recvcd);
					def j = a.dateDiff(recvDate,expectCDate,"seconds");
					log.info "xmlIndex[$xmlIndex] - CreationDate - recvDate[$recvDate] - expectCDate[$expectCDate] DIFF [$j]";
					assert recvcd.length() > 0;
					log.info "xmlIndex[$xmlIndex] - CreationDate - Differences less that 10 seconds";
					//assert j <= 10;
				} else {
					log.info "xmlIndex[$xmlIndex] - CreationDate - IGNORED DUE TO streamFlagIgnoreCreatedDate" ;
				}

				//Value
				String recvValue = myXML.Stream[xmlIndex].ResourceStatus.Current.Value;
				log.info "xmlIndex[$xmlIndex] - Value - recvValue[$recvValue] - expectValue[$expectValue]";
				if (expectValue == "active") {
					assert recvValue == "urn:dece:type:status:active";
				} else {
					assert recvValue == "urn:dece:type:status:deleted";
				}

				//Description
				switch (expectValue) {
					case "active":
						expectDescription = "active";
						break;
					default:
						expectDescription = "deleted";
						break;
				}
				String recvDesc = myXML.Stream[xmlIndex].ResourceStatus.Current.Description;
				log.info "xmlIndex[$xmlIndex] - Description - recvDesc[$recvDesc] - expectDesc[$expectDescription]";
				assert recvDesc == expectDescription;

				/*  Nickname validation */
				if (expectNick == null || expectNick == "") {
					log.info "Asserting no <StreamClientNickname> element exists";
					assert myXML.Stream[xmlIndex].StreamClientNickname.size() == 0;
					assert myXML.Stream[xmlIndex].StreamClientNickname.text() == "";
				} else {
					assert myXML.Stream[xmlIndex].StreamClientNickname.size() == 1;
					String recvNick = myXML.Stream[xmlIndex].StreamClientNickname.text();
					log.info "xmlIndex[$xmlIndex] - recvNick[$recvNick] - expectNick[$expectNick]";
					assert recvNick == expectNick;
				}
									
				/*
				*  If the stream is deleted....
				*/
				log.info "DeletedBy length: " + myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletedBy.toString().length();
				log.info "DeletionDate length: " + myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletionDate.toString().length();
				
				if (	expectValue == "deleted") {
					String recvDeletedBy = myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletedBy.toString();
					String recvDeletionDate = myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletionDate.toString();
					
					//DeletedBy
					this.log.info "recvDeletedBy[$recvDeletedBy] - expectdb[$expectdb]";
					assert recvDeletedBy == expectdb;
					
					//DeletionDate
					if (streamFlagIgnoreDeletedDate != "true") {
						String recvDate = formatDate(recvDeletionDate);
						def j = a.dateDiff(expectDDate,recvDate,"seconds");
						log.info "xmlIndex[$xmlIndex] - DeletionDate - recvDate[$recvDate] - expectDDate[$expectDDate] DIFF [$j]";
						assert recvDate.length() > 0;
						log.info "xmlIndex[$xmlIndex] - DeletionDate - Difference less that 10 seconds";
						assert j <= 10;
					} else {
						log.info "xmlIndex[$xmlIndex] - DeletionDate - IGNORED DUE TO streamFlagIgnoreDeletedDate" ;
					}
				} else {
					assert myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletedBy.toString().length()    == 0;
					assert myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletionDate.toString().length() == 0;
				}
				/*
				*
				*  History validation
				*
				*/
				def myHistoryXML = new XmlSlurper().parseText(tC.getPropertyValue("streamHistoryRows"));

				int rCnt = myHistoryXML.ResultSet.Row.size();

				log.info "-------------HISTORY-----------------";
				log.info "History Row Count[$rCnt] - <History> Count [" + myXML.ResourceStatus.History.size() + "]";
				if (tC.getPropertyValue("expectDBDeletedBy") != "1") {
					rCnt -= 1;
				} 
				assert myXML.Stream[xmlIndex].ResourceStatus.History.Prior.size() == rCnt;
		
				for (int i = 0; i < rCnt; i++) {
					String hrecvModifiedBy = myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].@ModifiedBy.text();
					String hexpectModifiedBy = urnnode + myHistoryXML.ResultSet.Row[i].CREATED_BY_NODE_OID.text();
					log.info "$i --> hrecvModifiedBy[$hrecvModifiedBy] - hexpectModifiedBy[$hexpectModifiedBy]";
					assert hrecvModifiedBy == expectmb;

					String hrecvStatus = myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].Value;
					String hexpectStatus = myHistoryXML.ResultSet.Row[i].STATUS.text();
					log.info "$i --> hrecvStatus[$hrecvStatus] - hexpectStatus[$hexpectStatus]";
					if (hexpectStatus == "active") {
						assert hrecvStatus == "urn:dece:type:status:active";
					} else {
						assert hrecvStatus == "urn:dece:type:status:deleted";
					}
					
					String hrecvDescription = myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].Description;
					switch (hexpectStatus) {
						case "active": hexpectDescription = "active"; break;
						case "deleted": hexpectDescription = "deleted"; break;
						default: hexpectDescription = "deleted"; break;
					}
					log.info "$i --> hrecvDescription[$hrecvDescription] - hexpectDescription[$hexpectDescription]";
					assert hrecvDescription == hexpectDescription;
	
					String hrecvModificationDate = formatDate(myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].@ModificationDate.text());
					int subSec = myHistoryXML.ResultSet.Row[i].EXPIRATION_DATE.text().indexOf(".");
					String hexpectModificationDate = myHistoryXML.ResultSet.Row[i].CREATED_DATE.text().substring(0, subSec);
					log.info "$i --> hrecvModificationDate[$hrecvModificationDate] - hexpectModificationDate[$hexpectModificationDate]";
					assert hrecvModificationDate.replace("/","-") == hexpectModificationDate;
					
				}
			
				xmlIndex++;
			}

			/*
			*  By design, we never return more than 30 streams.   So
			*  if we encounter our 30th stream we will break out of 
			*  the XML validation routines and allow size() 
			*  invocations on the xml body to verify no additional
			*  streams were returned.
			*/
			if (displayStreamCount == streamMaxDisplayCount.toInteger()) {
				break;
			}
			
			g--;
		}

		log.info "--------------------FINAL XML size() Validations -------------------";
		log.info "ResourceStatus size: "  + myXML.Stream.ResourceStatus.size();
		log.info "ResourceStatus.Current size: " + myXML.Stream.ResourceStatus.Current.size();
		log.info "ResourceStatus.Value size: " + myXML.Stream.ResourceStatus.Current.Value.size();
		log.info "ResourceStatus.Description size: " + myXML.Stream.ResourceStatus.Current.Description.size();
		log.info "RightsTokenID size: "  + myXML.Stream.RightsTokenID.size();
		log.info "ExpirationDateTime size: " + myXML.Stream.ExpirationDateTime.size();

		log.info "Stream.size() LTE MAX allowed of " + streamMaxDisplayCount.toInteger();
		assert myXML.Stream.size() <= streamMaxDisplayCount.toInteger();
		
		log.info "Stream.size() IS -- recv[" + myXML.Stream.size() + "] Expect[$displayStreamCount]";
		assert myXML.Stream.size() == displayStreamCount;
		
		assert myXML.Stream.ResourceStatus.size() == displayStreamCount;
		assert myXML.Stream.ResourceStatus.Current.size() == displayStreamCount;
		assert myXML.Stream.ResourceStatus.Current.Value.size() == displayStreamCount;
		assert myXML.Stream.ResourceStatus.Current.Description.size() == displayStreamCount;
		assert myXML.Stream.RightsTokenID.size()  == displayStreamCount;
		assert myXML.Stream.ExpirationDateTime.size() == displayStreamCount;
	}
} 

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Validation of List of Streams get as per Details stored at StreamCreate for all"><con:settings/><con:config><script><![CDATA[def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def commonTC = testRunner.testCase.testSuite.project.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName('StreamCreate');
def delete_streamTC = testRunner.testCase.testSuite.project.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName('StreamDelete');

tC.setPropertyValue("StreamDeleted",delete_streamTC.getPropertyValue("StreamDeleted"));

tC.setPropertyValue("StreamList",commonTC.getPropertyValue("StreamList"));

def TpstreamDeleteList = context.expand( '${#Project#StreamDeleteList}' )
int TpStreamDeleteCount=Integer.parseInt(tP.getPropertyValue("StreamDeleteCount"));

def streamCreateCount = context.expand( '${#Project#StreamCreateCount}' )
tC.setPropertyValue("accountList",commonTC.getPropertyValue("accountList"));

tC.setPropertyValue("streamCreateCount",streamCreateCount);

def xMLbody = context.expand( '${#TestCase#XMLbody}' )

def nodeid = context.expand( '${#TestCase#nodeid}' )
def node_flag=true;
def assertionAccountIdFULL = context.expand( '${#TestCase#assertionAccountIdFULL}' ).toString();
def StreamList=context.expand( '${#TestCase#StreamList}' ).toString();
def accountList=context.expand( '${#TestCase#accountList}' ).toString();
log.info "accountList :$accountList"
log.info "assertionAccountIdFULL :$assertionAccountIdFULL"
def rawRequest = context.expand( '${GET - StreamListView#RawRequest}' )

String[] List=StreamList.split("#",2);

String ExpectedAcct=List[0];

String[] ExpStreamLL=List[1].split(";");

HashMap Expstrm = new HashMap();

ArrayList<StreamObj> StmObj=new ArrayList<StreamObj>();
int j=0;


if(nodeid=="LLASP_CS_1" || nodeid=="DLASP" || nodeid=="DLASP_CS_1" || nodeid=="LLASP_CS_2"|| nodeid=="DLASP_CS_2" || nodeid=="LLASP"  || nodeid=="LLASP_2" || nodeid=="DLASP_CS_2")
{
  node_flag=true;
}
else
{ node_flag=false  }

while(j<ExpStreamLL.length)
{   
	String[] str= ExpStreamLL[j].split("!");
	    
	  Expstrm.put(str[0], str[1]);
	  String[] val=str[1].split(",");
//	  log.info "handle id"+str[0] +";" +"property"+ str[1]
	  j++;
//	  log.info val.length;
//	  log.info "Rights :"+val[0]+", User:"+val[1]//+",user:"+val[2]
	  StmObj.add(new StreamObj(str[0],val[0],val[1]));
	
}
//log.info "object :"+StmObj.get(1).getStreamHandleID();
def response = context.expand( '${GET - StreamListView#Response}' )
def myXML;
HashMap Actstrm = new HashMap();

int streamDeleteCount = Integer.parseInt(context.expand( '${#Project#StreamDeleteCount}' ))

def streamDeleted = context.expand( '${#Project#StreamDeleteList}' )
String[] DeletedStream=streamDeleted.split(";");



def ActualStreamHandleIDList="";

log.info "##############  $ActualStreamHandleIDList  #########################"


if(response!="")
{
myXML = new XmlSlurper().parseText(response).declareNamespace('dece':tP.getPropertyValue("coordinatorSchema"));;
  
  int ActualStreamCount=myXML.Stream.size();
  log.info "Expected StreamCount $streamCreateCount plus, Deleted Stream Count $TpStreamDeleteCount ,Actual StreamCount $ActualStreamCount"
  if(node_flag==true)
    {  assert ActualStreamCount==Integer.parseInt(streamCreateCount)+TpStreamDeleteCount;} 
  else
    {  assert ActualStreamCount==Integer.parseInt(streamCreateCount);
    	}
  log.info "ActualStreamCount :"+ ActualStreamCount

  log.info "############## ActualStreamHandleIDList:  $ActualStreamHandleIDList"
   int count=0;
  for(int i=0;i<ActualStreamCount;i++)
  {  
  	def ActualStreamHandleID=myXML.Stream[i].@StreamHandleID.text();
  	def ActualRghtsTokenID=myXML.Stream[i].RightsTokenID.text();
  	def ActualRequestingUserID=myXML.Stream[i].RequestingUserID.text();
  	def ActExpirationDateTime=myXML.Stream[i].ExpirationDateTime.text();
  	def ResourceStatus=myXML.Stream[i].ResourceStatus.Current.Value.text(); 
  	def Description=myXML.Stream[i].ResourceStatus.Current.Description.text(); 
  	def CreationDate=myXML.Stream[i].ResourceStatus.Current.@CreationDate.text();
  	
  if(Description=="active")
    { ActualStreamHandleIDList=ActualStreamHandleIDList+ActualStreamHandleID+";"
    }
  	              	         
  	
  	
  	if(i+1<ActualStreamCount)
  	{
  	def Next_CreationDate=myXML.Stream[i+1].ResourceStatus.Current.@CreationDate.text();
  	
  	log.info "################# CreationDate :$CreationDate  , CreationDate of Next stream in listView: $Next_CreationDate ########################### "
  	log.info "check Streams Order , should be as per  Streams’ created datetime value, in descending order"
  	 assert CreationDate > Next_CreationDate ;
  	}


  	
//  	log.info "ResourceStatus"+Description
  	//urn:dece:type:status:active
     
//     <Value>urn:dece:type:status:deleted</Value>
//                <Description>deleted</Description>
       
     
  	 
  	     for(int s=0; s<StmObj.size();s++)
  	     {
  	         if (ActualStreamHandleID==StmObj.get(s).getStreamHandleID())
  	         {
  	         	
  	           count++;

  	           log.info " Count :$count and  ActualStreamHandleID $ActualStreamHandleID"
   	          def ExpectUser= StmObj.get(s).getUserid()
  	          def ExpectRght= StmObj.get(s).getRightstokenidFULL() ;

                log.info "For StreamID :'$ActualStreamHandleID' Expected rightId :'$ExpectRght' ,ActualRights:'$ActualRghtsTokenID'"
  	           assert ExpectRght==ActualRghtsTokenID;
  	   	     log.info "For StreamID :'$ActualStreamHandleID' Expected USERID :'$ExpectUser' ,Actual userID:'$ActualRequestingUserID '"  	           
  	   	     assert ExpectUser==ActualRequestingUserID;
  	   	   
  	           }  	

  	           int flag=0;
  	              for(int x=0;x<DeletedStream.length;x++)
  	              {
  	              	  if (ActualStreamHandleID==DeletedStream[x])
  	              	     {  
  	              	     	log.info "For StreamID :'$ActualStreamHandleID' expected ResourceStatus :'urn:dece:type:status:deleted' ,Actual resource status:'$ResourceStatus'"
  	              	        assert ResourceStatus=="urn:dece:type:status:deleted"
  	              	         log.info "For StreamID :'$ActualStreamHandleID' expected Description :'deleted' ,Actual Description :'$Description'"
  	              	         assert Description=="deleted"
  	              	          
  	              	         flag=1;
  	              	         break;
  	              	     	}
  	               	}

  	               if(flag==0)
  	               {
  	               	 log.info "For StreamID :'$ActualStreamHandleID' expected ResourceStatus :'urn:dece:type:status:active' ,Actual resource status:'$ResourceStatus'"
  	               	assert ResourceStatus=="urn:dece:type:status:active"
  	              	      log.info "For StreamID :'$ActualStreamHandleID' expected Description :'active' ,Actual Description :'$Description'"  
  	              	      assert Description=="active"
  	              	         
  	               	}
  	   }
  	   tC.setPropertyValue("ActualStreamHandleIDList",ActualStreamHandleIDList);
     }  
  	   if(node_flag==true && count==ActualStreamCount)
  	   {   log.info "nodeid :'$nodeid' will get list of all active and deleted streams"
  	   	 log.info "All streams validated active and deleted streams";
  	   	 assert count==ActualStreamCount;
  	   	}
  	   else if(node_flag==false && streamCreateCount==count.toString())
  	   {
           log.info "nodeid :'$nodeid' not able to get deleted streams"
  	   	log.info "All streams validated  expect deleted streams , Total count of streams details in response $ActualStreamCount";
  	   	log.info " Actual Stream count to be validate '$streamCreateCount' ,expected Stream count :$ActualStreamCount "
  	   	log.error " total Streams validated $count";
  	   	 assert streamCreateCount==ActualStreamCount.toString();
  	   	 assert streamCreateCount==count.toString()

  	   }
  	   else{
  	   	  log.info "nodeid :'$nodeid'"
  	   	 log.error "List view don't have all streams in Account $accountList ";
  	   	 assert count==ActualStreamCount;
  	   	}
  
  
}



class StreamObj
{ 
	private String StreamHandleID;
	private String rightstokenidFULL;
	private String Userid;
	private static int keyLs;

	StreamObj(String StreamHandleID,String rightstokenidFULL,String Userid){
		if(keyLs>0)
		   keyLs++;
		   else
		   keyLs=1;

		   this.StreamHandleID = StreamHandleID;
		   this.rightstokenidFULL = rightstokenidFULL;
		   this.Userid = Userid;
		}

		public String getStreamHandleID() {
		return StreamHandleID;
	}
	public void setStreamHandleID(String StreamHandleID) {
		this.StreamHandleID = StreamHandleID;
	}
	public String getRightstokenidFULL() {
		return rightstokenidFULL;
	}
	public void setRightstokenidFULL(String rightstokenidFULL) {
		this.rightstokenidFULL = rightstokenidFULL;
	}
	public String getUserid() {
		return Userid;
	}
	public void setUserid(String Userid) {
		this.Userid = Userid;
	}
	
	
		

}

]]></script></con:config></con:testStep><con:properties><con:property><con:name>accountList</con:name><con:value>urn:dece:accountid:org:dece:12CCC9E2591E637FE05305991F0A1A08</con:value></con:property><con:property><con:name>ActualStreamHandleIDList</con:name><con:value>urn:dece:streamhandleid:org:dece:5C681E40846F4867B699471B18ED62E0;urn:dece:streamhandleid:org:dece:C8B1D2A7F9C748EFA43B90FE415EC69A;</con:value></con:property><con:property><con:name>assert</con:name><con:value>nVZrb+I4FP0rKPM5OAkJJFFBgjLtsqXtTGk7jy8r49wQt8EG2wHaX792gBQo7TIrISHfXJ977sPHPpN4mntxV0oQinJWW01zJuPS2rYKwWKOJZUxw1OQsSLxqHs9jL26E+PtFqs26Letf6LEbbgpadmuRzzbj4LUxs0m2MSL0jRqJbgZudpVygIGTCrMVNvyHDewHfO7d/3Yb8SuUw9897dVewQhNbZ2qTvWhtRKtq1MqVmM0HK5rC8bdS4myHMcF/28Ho5IBlNsdc7WGZWBRGfjT+oJEMhzUid8is7Qns9ZIuMRnTCsCgGbWMlHsRzkREj7JJJOvljVXkgGLOXl8hwzzijBOX3Fpj7XoDKe1Lr5hAuqsumHSbiOAbZhRWzi+uyLhfapnQi0x1BIbMsMuxusO0hBACNQe7gbtK0vp3Wt3HovMJMpF1O5v/wzPsAWkPMZJLbcprWhdjrgkUp1zoDEA0byQtIF3JhhnWECctNNIKdD1b4JSOlqSKUe0JU07NAuvYPluhp9OgGp/k+DdpqzBnnEeQEd34HLkI8uSRDOQ5I1i7ufKXmcX11fXrdLArvOpaFq7Xp5MJTVEK13zPjTxWSMVTYcPpLvg+KZqisYfF8BLbqt9FvgZMPMv8DfCzX+HYibv8cNvz9ysuUrfh2GDkp7t+Rh0nxuNaj/cDEmr8Ofd08tFo0v2O2ysfzVF1PHe+C9Ue/H0wpf5RGOzq8YRzfz+S265CPxV/9mMaS/wh+Nm+Ejo0EoHthg/iB6/WgyTp6z3o/0STTG6Vcatqt0dvjv27ZnflSMn4Co7dKMwaBfu9BdwupzMTMWmthp6RrPjPhIBUxZHbPLaEdcaLmjSax7uF67QdBqBo4fRf5XrxuEX52g4bSiyL1wuj23H21FZs3igOI5Zyk1sYzkrsfmc4JkGktgCQh7wQutdNL6BLGPFa4N2J0+BJxJuOdanl32/LxqhkkYKIfOcuERnjmFH42t2g1Xt+xWdFMFYl+TW3uafAeEzigY4TZzLfVgS6VrMceLQuVufYHrDAot7cKobOz5YYAknc5yMEzRlCdFDvVZNisrg+T637MxkaWVSjLjQuG8PBDow/QOv20roX0SahykSakHuptw5I5xtvm8y7t59C7awneLhJrzpcuqBCVrJvuf3qbFjEk1Km+JbZlXG/4QgMgjEOgTfuiwNFXEZEF34m8vc30taCHpbPs7x259Xi8Wi6Jsqe83kNDwyBQVOR4aASm01L3c82dgqEJBJ90rFfGD4JV9n2KhMjZSWMFUj2CtXJ7wkBiBNA+JgT47q1NfKXshdekUrNQx23muH0GG8afvJBIT46fN3/TfkovkrWNHsHbi6Dz1O0JRNjErc6e8fDAghGtYqtWQi13wYwDHgu8bqyJXXJQeqHGh4OMvNSNzbQsTwgumBn2rNOxKb8lTvcwgfnN6B1Oqe/Xco//93rNpOQIE9CNR0hLf3NqxOQJssiPfm6CHCh6ch373vOk2Wr1mqeDBWsGbYbNfFWWPXeed+b1lp06HM975Fw==</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>15575C84AC6137B6E05305991F0A686D</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:15575C84AC6137B6E05305991F0A686D</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%253Adece%253Aaccountid%253Aorg%253Adece%253AEAF5550F8FC462E6E0401F0A059939D6</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>15576504994E2A58E05307991F0AB1D9</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:15576504994E2A58E05307991F0AB1D9</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value/></con:property><con:property><con:name>counter</con:name><con:value>1</con:value></con:property><con:property><con:name>errorID</con:name><con:value/></con:property><con:property><con:name>errorReason</con:name><con:value/></con:property><con:property><con:name>errorStatusCode</con:name><con:value/></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_10</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_11</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_12</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_14</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_15</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_16</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_17</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_19</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_20</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_21</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_22</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_23</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_24</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_25</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_26</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_27</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_28</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_29</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_30</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_31</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_32</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_33</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_35</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_36</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_37</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_38</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_39</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_40</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_5</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_6</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_7</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_8</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_9</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_10</con:name><con:value>DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBCreatedBy_11</con:name><con:value>DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBCreatedBy_12</con:name><con:value>DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBCreatedBy_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_14</con:name><con:value>LLASP_2</con:value></con:property><con:property><con:name>expectDBCreatedBy_15</con:name><con:value>LLASP_2</con:value></con:property><con:property><con:name>expectDBCreatedBy_16</con:name><con:value>LLASP_2</con:value></con:property><con:property><con:name>expectDBCreatedBy_17</con:name><con:value>0914</con:value></con:property><con:property><con:name>expectDBCreatedBy_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_19</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_20</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_21</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_22</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_23</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_24</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_25</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_26</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_27</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_28</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_29</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBCreatedBy_30</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_31</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_32</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_33</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_35</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_36</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_37</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_38</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_39</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBCreatedBy_40</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_5</con:name><con:value>DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBCreatedBy_6</con:name><con:value>DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBCreatedBy_7</con:name><con:value>DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBCreatedBy_8</con:name><con:value>DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBCreatedBy_9</con:name><con:value>DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value>2015/05/05 14:48:08</con:value></con:property><con:property><con:name>expectDBCreatedTime_10</con:name><con:value>2015/04/30 14:19:51</con:value></con:property><con:property><con:name>expectDBCreatedTime_11</con:name><con:value>2015/04/30 14:20:17</con:value></con:property><con:property><con:name>expectDBCreatedTime_12</con:name><con:value>2015/04/30 14:20:47</con:value></con:property><con:property><con:name>expectDBCreatedTime_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_14</con:name><con:value>2015/04/30 10:14:13</con:value></con:property><con:property><con:name>expectDBCreatedTime_15</con:name><con:value>2015/04/30 10:14:41</con:value></con:property><con:property><con:name>expectDBCreatedTime_16</con:name><con:value>2015/04/30 10:15:11</con:value></con:property><con:property><con:name>expectDBCreatedTime_17</con:name><con:value>2012/11/21 07:50:08</con:value></con:property><con:property><con:name>expectDBCreatedTime_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_19</con:name><con:value>2012/11/02 17:45:50</con:value></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_20</con:name><con:value>2012/11/02 17:46:22</con:value></con:property><con:property><con:name>expectDBCreatedTime_21</con:name><con:value>2012/11/02 17:46:56</con:value></con:property><con:property><con:name>expectDBCreatedTime_22</con:name><con:value>2012/11/02 17:47:29</con:value></con:property><con:property><con:name>expectDBCreatedTime_23</con:name><con:value>2012/11/02 17:48:01</con:value></con:property><con:property><con:name>expectDBCreatedTime_24</con:name><con:value>2012/11/02 17:48:38</con:value></con:property><con:property><con:name>expectDBCreatedTime_25</con:name><con:value>2012/11/02 17:49:10</con:value></con:property><con:property><con:name>expectDBCreatedTime_26</con:name><con:value>2012/11/02 17:49:45</con:value></con:property><con:property><con:name>expectDBCreatedTime_27</con:name><con:value>2012/11/02 17:50:21</con:value></con:property><con:property><con:name>expectDBCreatedTime_28</con:name><con:value>2012/11/02 17:50:55</con:value></con:property><con:property><con:name>expectDBCreatedTime_29</con:name><con:value>2012/11/02 17:51:31</con:value></con:property><con:property><con:name>expectDBCreatedTime_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/30 14:13:36</con:value></con:property><con:property><con:name>expectDBCreatedTime_30</con:name><con:value>2012/11/02 17:52:05</con:value></con:property><con:property><con:name>expectDBCreatedTime_31</con:name><con:value>2012/11/02 17:52:41</con:value></con:property><con:property><con:name>expectDBCreatedTime_32</con:name><con:value>2012/11/02 17:53:02</con:value></con:property><con:property><con:name>expectDBCreatedTime_33</con:name><con:value>2012/11/02 17:53:23</con:value></con:property><con:property><con:name>expectDBCreatedTime_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_35</con:name><con:value>2012/11/02 17:32:23</con:value></con:property><con:property><con:name>expectDBCreatedTime_36</con:name><con:value>2012/11/02 17:32:51</con:value></con:property><con:property><con:name>expectDBCreatedTime_37</con:name><con:value>2012/11/02 17:33:18</con:value></con:property><con:property><con:name>expectDBCreatedTime_38</con:name><con:value>2012/11/02 17:33:49</con:value></con:property><con:property><con:name>expectDBCreatedTime_39</con:name><con:value>2012/11/02 17:34:16</con:value></con:property><con:property><con:name>expectDBCreatedTime_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/30 14:14:04</con:value></con:property><con:property><con:name>expectDBCreatedTime_40</con:name><con:value>2012/11/02 17:34:45</con:value></con:property><con:property><con:name>expectDBCreatedTime_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_5</con:name><con:value>2015/04/30 14:14:32</con:value></con:property><con:property><con:name>expectDBCreatedTime_6</con:name><con:value>2015/04/30 14:14:59</con:value></con:property><con:property><con:name>expectDBCreatedTime_7</con:name><con:value>2015/04/30 14:15:26</con:value></con:property><con:property><con:name>expectDBCreatedTime_8</con:name><con:value>2015/04/30 14:15:52</con:value></con:property><con:property><con:name>expectDBCreatedTime_9</con:name><con:value>2015/04/30 14:19:23</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_14</con:name><con:value>LLASP_2</con:value></con:property><con:property><con:name>expectDBDeletedBy_15</con:name><con:value>LLASP_2</con:value></con:property><con:property><con:name>expectDBDeletedBy_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_19</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_20</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_21</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_22</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_23</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_24</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_25</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_26</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_27</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_28</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_29</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_30</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_35</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_36</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_37</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_38</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_39</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_40</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_14</con:name><con:value>2015/04/30 10:14:27</con:value></con:property><con:property><con:name>expectDBDeletedTime_15</con:name><con:value>2015/04/30 10:14:58</con:value></con:property><con:property><con:name>expectDBDeletedTime_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_19</con:name><con:value>2012/11/02 17:46:00</con:value></con:property><con:property><con:name>expectDBDeletedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_20</con:name><con:value>2012/11/02 17:46:33</con:value></con:property><con:property><con:name>expectDBDeletedTime_21</con:name><con:value>2012/11/02 17:47:05</con:value></con:property><con:property><con:name>expectDBDeletedTime_22</con:name><con:value>2012/11/02 17:47:39</con:value></con:property><con:property><con:name>expectDBDeletedTime_23</con:name><con:value>2012/11/02 17:48:14</con:value></con:property><con:property><con:name>expectDBDeletedTime_24</con:name><con:value>2012/11/02 17:48:48</con:value></con:property><con:property><con:name>expectDBDeletedTime_25</con:name><con:value>2012/11/02 17:49:20</con:value></con:property><con:property><con:name>expectDBDeletedTime_26</con:name><con:value>2012/11/02 17:49:58</con:value></con:property><con:property><con:name>expectDBDeletedTime_27</con:name><con:value>2012/11/02 17:50:32</con:value></con:property><con:property><con:name>expectDBDeletedTime_28</con:name><con:value>2012/11/02 17:51:05</con:value></con:property><con:property><con:name>expectDBDeletedTime_29</con:name><con:value>2012/11/02 17:51:41</con:value></con:property><con:property><con:name>expectDBDeletedTime_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_30</con:name><con:value>2012/11/02 17:52:15</con:value></con:property><con:property><con:name>expectDBDeletedTime_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_35</con:name><con:value>2012/11/02 17:32:34</con:value></con:property><con:property><con:name>expectDBDeletedTime_36</con:name><con:value>2012/11/02 17:33:02</con:value></con:property><con:property><con:name>expectDBDeletedTime_37</con:name><con:value>2012/11/02 17:33:31</con:value></con:property><con:property><con:name>expectDBDeletedTime_38</con:name><con:value>2012/11/02 17:34:00</con:value></con:property><con:property><con:name>expectDBDeletedTime_39</con:name><con:value>2012/11/02 17:34:29</con:value></con:property><con:property><con:name>expectDBDeletedTime_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_40</con:name><con:value>2012/11/02 17:34:56</con:value></con:property><con:property><con:name>expectDBDeletedTime_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_14</con:name><con:value>LLASP_2</con:value></con:property><con:property><con:name>expectDBModifiedBy_15</con:name><con:value>LLASP_2</con:value></con:property><con:property><con:name>expectDBModifiedBy_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_10</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_11</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_12</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_14</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_15</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_16</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_17</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_19</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_20</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_21</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_22</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_23</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_24</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_25</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_26</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_27</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_28</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_29</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBStatus_30</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_31</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_32</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_33</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_35</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_36</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_37</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_38</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_39</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBStatus_40</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_5</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_6</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_7</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_8</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_9</con:name><con:value>active</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectGenericRightsToken</con:name><con:value>false</con:value></con:property><con:property><con:name>expectGenericRightsToken_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value>urn:dece:userid:org:dece:15575C863ADE37BCE05305991F0AF436</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value>urn:dece:userid:org:dece:15575C863ADE37BCE05305991F0AF436</con:value></con:property><con:property><con:name>expectRequestingUser_10</con:name><con:value>urn:dece:userid:org:dece:14F27BD3833A3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>expectRequestingUser_11</con:name><con:value>urn:dece:userid:org:dece:14F27BD3833A3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>expectRequestingUser_12</con:name><con:value>urn:dece:userid:org:dece:14F27BD3833A3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>expectRequestingUser_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_14</con:name><con:value>urn:dece:userid:org:dece:14EF2D25D23A19EDE05307991F0A4BA6</con:value></con:property><con:property><con:name>expectRequestingUser_15</con:name><con:value>urn:dece:userid:org:dece:14EF2D25D23A19EDE05307991F0A4BA6</con:value></con:property><con:property><con:name>expectRequestingUser_16</con:name><con:value>urn:dece:userid:org:dece:14EF2D25D23A19EDE05307991F0A4BA6</con:value></con:property><con:property><con:name>expectRequestingUser_17</con:name><con:value>urn:dece:userid:org:dece:9B65694912BBFE26E0401F0A07996B66</con:value></con:property><con:property><con:name>expectRequestingUser_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_19</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_20</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_21</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_22</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_23</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_24</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_25</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_26</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_27</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_28</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_29</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14F27BD4984B3DE8E05305991F0AC941</con:value></con:property><con:property><con:name>expectRequestingUser_30</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_31</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_32</con:name><con:value>urn:dece:userid:org:dece:9B7969EE9EA1770CE0401F0A079930AA</con:value></con:property><con:property><con:name>expectRequestingUser_33</con:name><con:value>urn:dece:userid:org:dece:9DD0CB55ED027BCEE0401F0A07993B89</con:value></con:property><con:property><con:name>expectRequestingUser_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_35</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_36</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_37</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_38</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_39</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14F27BD4984B3DE8E05305991F0AC941</con:value></con:property><con:property><con:name>expectRequestingUser_40</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_5</con:name><con:value>urn:dece:userid:org:dece:14F27BD4984B3DE8E05305991F0AC941</con:value></con:property><con:property><con:name>expectRequestingUser_6</con:name><con:value>urn:dece:userid:org:dece:14F27BD4984B3DE8E05305991F0AC941</con:value></con:property><con:property><con:name>expectRequestingUser_7</con:name><con:value>urn:dece:userid:org:dece:14F27BD4984B3DE8E05305991F0AC941</con:value></con:property><con:property><con:name>expectRequestingUser_8</con:name><con:value>urn:dece:userid:org:dece:14F27BD4984B3DE8E05305991F0AC941</con:value></con:property><con:property><con:name>expectRequestingUser_9</con:name><con:value>urn:dece:userid:org:dece:14F27BD4984B3DE8E05305991F0AC941</con:value></con:property><con:property><con:name>expectStreamActiveCnt</con:name><con:value>0</con:value></con:property><con:property><con:name>expectStreamAvailCnt</con:name><con:value>12</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentEncoding</con:name><con:value>chunked</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/iscportalcs1_concat.pem</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>1</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>portalcs</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testing</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79611</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>155797F08C9F36D6E05305991F0A1D1C</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value>urn:dece:rightstokenid:org:dece:155797F08C9F36D6E05305991F0A1D1C</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value>urn:dece:rightstokenid:org:dece:155797F08C9F36D6E05305991F0A1D1C</con:value></con:property><con:property><con:name>rightstokenidFULL_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value>Portal Customer Support Test Cases_P1_P2</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value>1</con:value></con:property><con:property><con:name>streamCreateCount</con:name><con:value>2</con:value></con:property><con:property><con:name>StreamDeleted</con:name><con:value>urn:dece:streamhandleid:org:dece:45F7165E85694D35A3A55C6C36D3BEC8;urn:dece:streamhandleid:org:dece:9158905155FE44EAAA6E20A0A1098835;</con:value></con:property><con:property><con:name>streamFlagCreateDateOld</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate</con:name><con:value>false</con:value></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value>urn:dece:streamhandleid:org:dece:5C681E40846F4867B699471B18ED62E0</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value>urn:dece:streamhandleid:org:dece:5C681E40846F4867B699471B18ED62E0</con:value></con:property><con:property><con:name>streamhandleFULL_10</con:name><con:value>urn:dece:streamhandleid:org:dece:08FA4A7659B34B8F9DCBB5324858E7BB</con:value></con:property><con:property><con:name>streamhandleFULL_11</con:name><con:value>urn:dece:streamhandleid:org:dece:2624AAF88D69492197B39C7D22DE4407</con:value></con:property><con:property><con:name>streamhandleFULL_12</con:name><con:value>urn:dece:streamhandleid:org:dece:8F33C65E87A648308724737A0E172639</con:value></con:property><con:property><con:name>streamhandleFULL_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_14</con:name><con:value>urn:dece:streamhandleid:org:dece:86FE554E211B42C1B013E066789175AA</con:value></con:property><con:property><con:name>streamhandleFULL_15</con:name><con:value>urn:dece:streamhandleid:org:dece:DBA5D25318644B5EA0C703384FE6D6A0</con:value></con:property><con:property><con:name>streamhandleFULL_16</con:name><con:value>urn:dece:streamhandleid:org:dece:E9576239081F4D7A8F7438EA2C6F48C3</con:value></con:property><con:property><con:name>streamhandleFULL_17</con:name><con:value>urn:dece:streamhandleid:org:dece:CEFD90E77819B152E0401F0A07995384</con:value></con:property><con:property><con:name>streamhandleFULL_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_19</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87AA799E2FD317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_20</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87AA799E34D317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandleFULL_21</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87AA799E39D317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandleFULL_22</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87AA799E3ED317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandleFULL_23</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87BC6F0FEF438EE0401F0A05996C3E</con:value></con:property><con:property><con:name>streamhandleFULL_24</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87BC6F0FF4438EE0401F0A05996C3E</con:value></con:property><con:property><con:name>streamhandleFULL_25</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87BC6F0FF9438EE0401F0A05996C3E</con:value></con:property><con:property><con:name>streamhandleFULL_26</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87BC6F0FFE438EE0401F0A05996C3E</con:value></con:property><con:property><con:name>streamhandleFULL_27</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87C4C234467FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandleFULL_28</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87C4C2344B7FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandleFULL_29</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87C4C234507FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandleFULL_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:83D5F95CB77542D98DDC174D7749B9AE</con:value></con:property><con:property><con:name>streamhandleFULL_30</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87C4C234557FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandleFULL_31</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87C4C2345A7FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandleFULL_32</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87CE58313FD124E0401F0A05990DAA</con:value></con:property><con:property><con:name>streamhandleFULL_33</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87CF9B9FB89952E0401F0A079947F1</con:value></con:property><con:property><con:name>streamhandleFULL_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_35</con:name><con:value>urn:dece:streamhandleid:org:dece:CD877D48FF2B0318E0401F0A079928C0</con:value></con:property><con:property><con:name>streamhandleFULL_36</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87862FA8AE0BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandleFULL_37</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87862FA8B30BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandleFULL_38</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87862FA8B80BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandleFULL_39</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87862FA8BD0BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandleFULL_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C1DDCBFBBC344510A4A2AA51D4A73C45</con:value></con:property><con:property><con:name>streamhandleFULL_40</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87862FA8C20BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandleFULL_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_5</con:name><con:value>urn:dece:streamhandleid:org:dece:B1703AC97BDD46E182E132FC28758CF3</con:value></con:property><con:property><con:name>streamhandleFULL_6</con:name><con:value>urn:dece:streamhandleid:org:dece:4876449CD9494E60AC62D09B22DD60BC</con:value></con:property><con:property><con:name>streamhandleFULL_7</con:name><con:value>urn:dece:streamhandleid:org:dece:324E137061EB4A159065F81C47203744</con:value></con:property><con:property><con:name>streamhandleFULL_8</con:name><con:value>urn:dece:streamhandleid:org:dece:1A444B8F099840D1BB48E98DAED9552C</con:value></con:property><con:property><con:name>streamhandleFULL_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_1</con:name><con:value>5C681E40846F4867B699471B18ED62E0</con:value></con:property><con:property><con:name>streamhandle_10</con:name><con:value>08FA4A7659B34B8F9DCBB5324858E7BB</con:value></con:property><con:property><con:name>streamhandle_11</con:name><con:value>2624AAF88D69492197B39C7D22DE4407</con:value></con:property><con:property><con:name>streamhandle_12</con:name><con:value>8F33C65E87A648308724737A0E172639</con:value></con:property><con:property><con:name>streamhandle_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_14</con:name><con:value>86FE554E211B42C1B013E066789175AA</con:value></con:property><con:property><con:name>streamhandle_15</con:name><con:value>DBA5D25318644B5EA0C703384FE6D6A0</con:value></con:property><con:property><con:name>streamhandle_16</con:name><con:value>E9576239081F4D7A8F7438EA2C6F48C3</con:value></con:property><con:property><con:name>streamhandle_17</con:name><con:value>CEFD90E77819B152E0401F0A07995384</con:value></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">83D5F95CB77542D98DDC174D7749B9AE</con:value></con:property><con:property><con:name>streamhandle_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">C1DDCBFBBC344510A4A2AA51D4A73C45</con:value></con:property><con:property><con:name>streamhandle_5</con:name><con:value>B1703AC97BDD46E182E132FC28758CF3</con:value></con:property><con:property><con:name>streamhandle_6</con:name><con:value>4876449CD9494E60AC62D09B22DD60BC</con:value></con:property><con:property><con:name>streamhandle_7</con:name><con:value>324E137061EB4A159065F81C47203744</con:value></con:property><con:property><con:name>streamhandle_8</con:name><con:value>1A444B8F099840D1BB48E98DAED9552C</con:value></con:property><con:property><con:name>streamhandle_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamHistoryRows</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>StreamList</con:name><con:value>urn:dece:accountid:org:dece:155797F4C6281279E05307991F0A72B3#urn:dece:streamhandleid:org:dece:C8B1D2A7F9C748EFA43B90FE415EC69A!urn:dece:rightstokenid:org:dece:155797F0866936D6E05305991F0A1D1C,urn:dece:userid:org:dece:15575C863ADE37BCE05305991F0AF436;urn:dece:streamhandleid:org:dece:5C681E40846F4867B699471B18ED62E0!urn:dece:rightstokenid:org:dece:155797F08C9F36D6E05305991F0A1D1C,urn:dece:userid:org:dece:15575C863ADE37BCE05305991F0AF436;</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_86531 - StreamListView - PORTALCS - Standard User can view stream created by Standard User - 200 OK_FLAKY</con:value></con:property><con:property><con:name>username</con:name><con:value>stream_list_view_20150505_081521</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<StreamList ActiveStreamCount="2" AvailableStreams="10" xmlns="http://www.decellc.org/schema/2015/03/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.2/md" xmlns:ns3="http://www.w3.org/2001/04/xmlenc#" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#">
   <Stream StreamHandleID="urn:dece:streamhandleid:org:dece:5C681E40846F4867B699471B18ED62E0">
      <RequestingUserID>urn:dece:userid:org:dece:15575C863ADE37BCE05305991F0AF436</RequestingUserID>
      <RightsTokenID>urn:dece:rightstokenid:org:dece:155797F08C9F36D6E05305991F0A1D1C</RightsTokenID>
      <TransactionID>1.0.1.3.S</TransactionID>
      <ExpirationDateTime>2015-05-05T20:48:03.403Z</ExpirationDateTime>
      <SubDividedGeolocation CalculationMethod="urn:dece:type:geoloc:other" ViaProxy="urn:dece:type:unknown">US 20148</SubDividedGeolocation>
      <ResourceStatus>
         <Current CreationDate="2015-05-05T14:48:03.403Z" CreatedBy="urn:dece:org:org:dece:DLASP_CS_1">
            <Value>urn:dece:type:status:active</Value>
            <Description>active</Description>
         </Current>
      </ResourceStatus>
   </Stream>
   <Stream StreamHandleID="urn:dece:streamhandleid:org:dece:C8B1D2A7F9C748EFA43B90FE415EC69A">
      <RequestingUserID>urn:dece:userid:org:dece:15575C863ADE37BCE05305991F0AF436</RequestingUserID>
      <RightsTokenID>urn:dece:rightstokenid:org:dece:155797F0866936D6E05305991F0A1D1C</RightsTokenID>
      <TransactionID>1.0.1.3.S</TransactionID>
      <ExpirationDateTime>2015-05-05T20:46:30.615Z</ExpirationDateTime>
      <SubDividedGeolocation CalculationMethod="urn:dece:type:geoloc:other" ViaProxy="urn:dece:type:unknown">US 20148</SubDividedGeolocation>
      <ResourceStatus>
         <Current CreationDate="2015-05-05T14:46:30.615Z" CreatedBy="urn:dece:org:org:dece:DLASP_CS_1">
            <Value>urn:dece:type:status:active</Value>
            <Description>active</Description>
         </Current>
      </ResourceStatus>
   </Stream>
</StreamList>]]></con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StreamDelete" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="50392f64-5e38-4389-9ef7-c5a675f8eeee"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("streamhandleFULL",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("deletedCreateCount",null);
tC.setPropertyValue("userIndex",null);
tC.setPropertyValue("currentDBTOD",null);
tC.setPropertyValue("streamAccountActiveCount",null);
tC.setPropertyValue("expectErrTypeStreamDelete",null);
tC.setPropertyValue("deletedCreateCount",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("counter",callTC.getPropertyValue("counter"));
tC.setPropertyValue("deletedCreateCount",callTC.getPropertyValue("deletedCreateCount"));
tC.setPropertyValue("streamAccountActiveCount",callTC.getPropertyValue("streamAccountActiveCount"));
tC.setPropertyValue("userIndex",callTC.getPropertyValue("userIndex"));
tC.setPropertyValue("rightstokenidFULL",callTC.getPropertyValue("rightstokenidFULL"));
tC.setPropertyValue("streamhandleFULL",callTC.getPropertyValue("streamhandleFULL"));
tC.setPropertyValue("expectErrTypeStreamDelete",callTC.getPropertyValue("expectErrTypeStreamDelete"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));

if (tC.getPropertyValue("expectErrTypeStreamDelete") == null || tC.getPropertyValue("expectErrTypeStreamDelete") == "null") {
	tC.setPropertyValue("expectErrTypeStreamDelete", "SUCCESS");
}
if (tC.getPropertyValue("deletedCreateCount") == null || tC.getPropertyValue("deletedCreateCount") == "null") {
	tC.setPropertyValue("deletedCreateCount", "0");
}
if (tC.getPropertyValue("streamAccountActiveCount") == null || tC.getPropertyValue("streamAccountActiveCount") == "null") {
	tC.setPropertyValue("streamAccountActiveCount", "0");
}
if (tC.getPropertyValue("userIndex") == null || tC.getPropertyValue("userIndex") == "null") {
	tC.setPropertyValue("userIndex", "0");
}
</script></con:config></con:testStep><con:testStep type="groovy" name="pem set"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("Delete - StreamDelete");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="groovy" name="Capture Current DB sysdate()"><con:settings/><con:config><script>import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Calendar;
import java.text.SimpleDateFormat;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("currentDBTOD",null);

def formatDate(recvDate) {
	try {
		String dateHolder = "";
		Pattern datePattern = Pattern.compile("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})");
		Matcher cdateMatcher = datePattern.matcher(recvDate);
		if (cdateMatcher.find()) {
			dateHolder = cdateMatcher.group(1) + "/" + cdateMatcher.group(2) + "/" +
				cdateMatcher.group(3) + " " + cdateMatcher.group(4) + ":" +
				cdateMatcher.group(5) + ":" + cdateMatcher.group(6);
			log.info "dateHolder[$dateHolder]";	
		}
	} 
	catch (Throwable e) {
		log.info "Matcher Failure!  recvDate[$recvDate] ERROR - " + e;
	} 
	finally {
		return dateHolder;	
	}
}

String recvCdate = tC.getPropertyValue("recvCreationDate").toString();
String sql = "SELECT TO_CHAR(sysdate, 'YYYY/MM/DD HH24:mi:ss') as TOD from dual";
String sqlResultXML = "";
String cDate = "";
String tod = "";

try {
	a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());
	sqlResultXML = a.SelectFromDB(sql,tP.getPropertyValue("targetSystem"));
	log.info "sqlResultXML[$sqlResultXML]";

	if (sqlResultXML.length() > 0) {
		def myXML = new XmlSlurper().parseText(sqlResultXML);
		tod = myXML.ResultSet.Row.TOD;
		log.info "tod[$tod]";
	}

}
catch (Throwable e) {
	log.info "sql[$sql]";
	log.info "dbUtils request failed! - " + e;
	assert 1 == 2;
}
finally {
	if (tod.length() > 0) {
		tC.setPropertyValue("currentDBTOD", tod);
	}
}
</script></con:config></con:testStep><con:testStep type="restrequest" name="Delete - StreamDelete"><con:settings/><con:config service="StreamDelete" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/{SH}" methodName="Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete - StreamDelete" mediaType="application/xml" sslKeystore="DLASP_CS_2_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('Delete - StreamDelete');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}
tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract ERROR table information"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def a = new dbUtils.dbErrors(log,tP.getPropertyValue("targetSystem"));

tC.setPropertyValue("errorStatusCode",null);
tC.setPropertyValue("errorReason",null);
tC.setPropertyValue("errorID",null);

String xmlData = "";
String errId = "";

log.info "expectErrTypeStreamDelete[" + tC.getPropertyValue("expectErrTypeStreamDelete") + "]";

switch (tC.getPropertyValue("expectErrTypeStreamDelete")) {
	case "ADULT_CONTENT_NOT_ALLOWED":
		errId = "Policy:AdultContentNotAllowed";
		break;
	case "ACCOUNT_NOT_ACTIVE":
		errId = "AccountNotActive";
		break;
	case "API_NOT_AUTH":
		errId = "Security:RoleInvalid";
		break;
	case "BLOCKED_ACCESS_UNRATED":
		errId = "Policy:UnratedContentBlocked";
		break;
	case "CID_NOT_ACTIVE":
		errId = "ContentIDNotActive";
		break;
	case "CID_NOT_FOUND":
		errId = "ContentIDNotFound";
		break;
	case "LOGICAL_ASSET_NOT_ACTIVE":
		errId = "AssetLogicalIDNotActive";
		break;
	case "RT_RENT_EXPIRED":
		errId = "RightsTokenRentalExpired";
		break;
	case "RT_NOT_FOUND":
		errId = "RightsTokenNotFound";
		break;
	case "RT_NOT_ACTIVE":
		errId = "RightsTokenNotActive";
		break;
	case "RATING_POLICY":
		errId = "RatingPolicyExists";
		break;
	case "CID_NOT_GRANTED":
	case "STREAM_RIGHTS_NOT_GRANTED":
		errId = "StreamRightsNotGranted";
		break;
	case "STREAM_COUNT_EXCEEDED":
		errId = "AccountStreamCountExceedMaxLimit";
		break;
	case "STREAM_COUNT_EXCEEDED_USER":
		errId = "UserStreamCountExceedMaxLimit";
		break;
	case "STREAM_INVALID_TRANS":
		errId = "StreamTransactionIdInvalid";
		break;
	case "STREAM_ACCOUNTID_MISMATCH":
		errId = "AccountIdUnmatched";
		break;		
	case "STREAM_NICKNAME_TOO_LONG":
		errId = "StreamClientNicknameTooLong";
		break;		
	case "STREAM_WINDOW_NOT_ALLOWED":
		errId = "StreamAssetWindowNotAllowed";
		break;
	case "STREAM_OWNER_MISMATCH":
		errId = "StreamOwnerMismatch";
		break;
	case "STREAM_NOT_FOUND":
		errId = "StreamNotFound";
		break;
	case "STREAM_NOT_ACTIVE":
		errId = "StreamNotActive";
		break;
	case "USER_NOT_MATCH_TOKEN":
		errId = "UserIdUnmatched";
		break;
	case "USER_NOT_ACTIVE":
		errId = "UserNotActive";
		break;
	case "USER_NOT_SUPPLIED":
		errId = "UserNotSpecified";
		break;
}

try {
	xmlData = a.errGetIdInfo(errId);
	
	assert xmlData.trim().length() > 1;

	def myXML = new XmlSlurper().parseText(xmlData);

	log.info myXML.ResultSet.Row.size();
	tC.setPropertyValue("errorStatusCode", myXML.ResultSet.Row[0].STATUS_CODE.toString());
	tC.setPropertyValue("errorReason", myXML.ResultSet.Row[0].REASON.toString());
	tC.setPropertyValue("errorID", myXML.ResultSet.Row[0].ERROR_ID.toString());

	/*
	*  The DB does not contain the complete HTTP status
	*  string, only the code.  Thus, we must adjust.
	*/
	switch (tC.getPropertyValue("errorStatusCode")) {
		case "400":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 400 Bad Request");
			break;
		case "403":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 403 Forbidden");
			break;
		case "404":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 404 Not Found");
			break;
		case "409":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 409 Conflict");
			break;
	}
}
catch (Throwable e) {
	log.info "STEP FAILURE! --- " + e;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Extract and Store Stream Deleted for Listview"><con:settings/><con:config><script><![CDATA[def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def TpstreamDeleteList = context.expand( '${#Project#StreamDeleteList}' )
int StreamDeleteCount=Integer.parseInt(tP.getPropertyValue("StreamDeleteCount"));
def httpStatus = context.expand( '${#TestCase#httpStatus}' )
def streamDeleted = context.expand( '${#TestCase#StreamDeleted}' )
def assertionAccountIdFULL = context.expand( '${#TestCase#assertionAccountIdFULL}' )
int StreamCreateCount=Integer.parseInt(tP.getPropertyValue("StreamCreateCount"));

log.info httpStatus
def StreamDeleted = context.expand( '${#TestCase#StreamDeleted}' )

if (httpStatus=="HTTP/1.1 200 OK" ) 
{     def streamhandleFULL = context.expand( '${#TestCase#streamhandleFULL}' )
                
            def accountListDLT = context.expand( '${#Project#accountListDLT}' )
               


                 if(accountListDLT==assertionAccountIdFULL && httpStatus=="HTTP/1.1 200 OK" && StreamCreateCount>0)
                 {
                    StreamDeleted= StreamDeleted+streamhandleFULL +";"
                    
                     TpstreamDeleteList=TpstreamDeleteList+streamhandleFULL +";"
                    tC.setPropertyValue("StreamDeleted",StreamDeleted);
                    tP.setPropertyValue("StreamDeleteList",TpstreamDeleteList);
                    
                    StreamCreateCount--;
  				log.info "StreamCreateCount if ; "+StreamCreateCount;
  				 tP.setPropertyValue("StreamCreateCount", StreamCreateCount.toString());
  				 
  				 StreamDeleteCount++;
  				 log.info "StreamDeleteCount if  : "+StreamDeleteCount;
  				 tP.setPropertyValue("StreamDeleteCount", StreamDeleteCount.toString()); 

                      log.info "StreamDeleteList for if  : "+tP.getPropertyValue("StreamDeleteList");
  				

                 	}
                 	
                 else if(httpStatus=="HTTP/1.1 200 OK" && StreamCreateCount>0)
                 {   
                 	tP.setPropertyValue("accountListDLT",assertionAccountIdFULL);
                 	StreamDeleted=streamhandleFULL +";"
                  
                    tC.setPropertyValue("StreamDeleted",StreamDeleted);
                    
                       TpstreamDeleteList=streamhandleFULL +";"
                    tP.setPropertyValue("StreamDeleteList",TpstreamDeleteList);
                    
                    StreamCreateCount--;
  				log.info "StreamCreateCount for else if  : "+StreamCreateCount;
  				log.info "StreamDeleteList for else if  : "+tP.getPropertyValue("StreamDeleteList");
  				 tP.setPropertyValue("StreamCreateCount", StreamCreateCount.toString());
  				  
  				 tP.setPropertyValue("StreamDeleteCount","1");
  				 
  			}
                 else
                 	{ log.info "else block Script issue"
                 		}

    }
//
//log.info "StreamDeleteList for Normal StreamDelete : "  tP.getPropertyValue("StreamDeleteList")]]></script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url = tP.getPropertyValue("targetHost");
def urnacct = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct = tC.getPropertyValue("nodeaccountid");
def urnnode = tP.getPropertyValue("urnNode");
def urnErr = tP.getPropertyValue("urnError");
def sh = tC.getPropertyValue("streamhandleFULL");
def nodeid = tC.getPropertyValue("nodeid");
def account = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrTypeStreamDelete");
def XMLbody = tC.getPropertyValue("XMLbody");
def nodetype = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = false;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");
String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "https://" + tP.getPropertyValue("targetHostq") + ":" + tP.getPropertyValue("targetPort");
String errorLinkBase = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#";
String orgRequest = url + "/rest/$major/$minor/Account/$account/Stream/$sh";
String expectHTTPstatus = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";
String expected;
String received;
String description;


this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = true;
		httpLocationHeader = false;

	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "Node_status_inactive":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = true;
		errorID = "Bad_Request";
		errorReason = "Node_status_inactive";
		errorLink = "";
	break;

	case "XML_PARSING_ERROR":
		errorLinkFlag = true;
		errorReasonFlag = false;
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID = "urn:dece:errorid:org:dece:SaxParserException";
		errorLink  = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

	case "METHOD_NOT_ALLOWED":
		expectHTTPstatus   = "HTTP/1.1 405 Method Not Allowed";
		XMLbodynull        = false;
		httpLocationHeader = false;

	break;
	
	default:
		errorReasonFlag = true;
		expectHTTPstatus = tC.getPropertyValue("errorStatusCode");
		errorID     = urnErr + tC.getPropertyValue("errorID");
		errorReason = tC.getPropertyValue("errorReason");
		errorLink   = "$errorLinkBase" + tC.getPropertyValue("errorID");
	break;
}

log.info "errorID[$errorID]";
log.info "errorReason[$errorReason]";
log.info "errorLink[$errorLink]";

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;

// Connection
if(tC.getPropertyValue("httpStatus") == "HTTP/1.1 400 Bad Request")
{
	expectHTTPconnection = "close";
}
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert tC.getPropertyValue("httpConnect") == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + tC.getPropertyValue("httpContentLength").toInteger();
if (XMLbodynull) {
	//assert tC.getPropertyValue("httpContentLength").toInteger() == 0;
} else {
	//assert tC.getPropertyValue("httpContentLength").toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert tC.getPropertyValue("httpLocation") != null;

	def a = tC.getPropertyValue("httpLocation");
	def b = a;
	//def urlStr = b.getPath();
	def urlStr = b;

	
	if(tP.getPropertyValue("V2") == tP.getPropertyValue("versionUrlEncode"))
	{
	int lastColon = urlStr.lastIndexOf('%');
	int lastSlash = urlStr.lastIndexOf('/');
	streamid     = urlStr.substring(lastColon + 3);
	streamidFULL = urlStr.substring(lastSlash + 1);

	this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

	tC.setPropertyValue("streamhandle",streamid);
	tC.setPropertyValue("streamhandleFULL",streamidFULL);
	}
	else
	{
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	streamid     = urlStr.substring(lastColon + 1);
	streamidFULL = urlStr.substring(lastSlash + 1);

	this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

	tC.setPropertyValue("streamhandle",streamid);
	tC.setPropertyValue("streamhandleFULL",streamidFULL);
	}
} else {
	assert tC.getPropertyValue("httpLocation") == null;
}

//Content-Type
if(errorRespType == "METHOD_NOT_ALLOWED")
{
	expectHTTPcontenttype = "text/plain; charset=UTF-8"
}
assert tC.getPropertyValue("httpContentType") == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {
	assert XMLbody == null;
}

if(errorRespType != "METHOD_NOT_ALLOWED"){

if (XMLbody != null &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;

		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		if (errorReasonFlag) {
			this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
			assert myXML.Error.Reason.toString() == errorReason;
		} else {
			log.info "ErrorReason IS NOT NULL";
			assert myXML.Error.Reason.toString().length() > 0;
		}

		// ErrorLink
		if (!errorLinkFlag) {
			assert myXML.Error.ErrorLink.size() == 1;
			log.info "ErrorLink:[" + myXML.Error.ErrorLink.toString() + "] Expected[$errorLink]";
			assert myXML.Error.ErrorLink.toString() == errorLink;
		}
	} 
} 
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Return attributes to calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

int deletedCreateCount = tC.getPropertyValue("deletedCreateCount").toInteger()++;
int userIndex = tC.getPropertyValue("userIndex").toInteger();
int streamAccountActiveCount = tC.getPropertyValue("streamAccountActiveCount").toInteger();
String count = tC.getPropertyValue("counter").toString();

if (userIndex > 0) {
	userIndex--;
}
if (streamAccountActiveCount > 0) {
	streamAccountActiveCount--;
}

tC.setPropertyValue("expectDBDeletedBy_" + count,tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBModifiedBy_" + count,tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBStatus_" + count,"deleted");
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBModifiedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("deletedCreateCount",deletedCreateCount.toString());
tC.setPropertyValue("expectDBStatus","deleted");

callTC.setPropertyValue("deletedCreateCount",tC.getPropertyValue("deletedCreateCount"));
callTC.setPropertyValue("streamAccountActiveCount",streamAccountActiveCount.toString());
callTC.setPropertyValue("userIndex",userIndex.toString());
callTC.setPropertyValue("expectDBStatus_" + count,tC.getPropertyValue("expectDBStatus_" + count));
callTC.setPropertyValue("expectDBStatus" + count,tC.getPropertyValue("expectDBStatus"));
callTC.setPropertyValue("expectDBDeletedBy_" + count,tC.getPropertyValue("expectDBDeletedBy_" + count));
callTC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("expectDBDeletedBy"));
callTC.setPropertyValue("expectDBDeletedTime_" + count,tC.getPropertyValue("currentDBTOD"));
callTC.setPropertyValue("expectDBModifiedBy_" + count,tC.getPropertyValue("expectDBModifiedBy_" + count));
callTC.setPropertyValue("expectDBModifiedBy",tC.getPropertyValue("expectDBModifiedBy"));</script></con:config></con:testStep><con:properties><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZRd6I6EP4rHvZxDwIW1HKq51isXbtWW+3duvdlTwwDpoUESUDrr78JKlVre733iZNhMvPNzJcvueIojmpuh3NIBWG0soojyt3C2tKylLoMccJdimLgrsDupHM/cGtV00W7LVql321pfxxAgBtNrIPt1HTbCSx9VrdsHfwAWwE4polt6cp5Bn3KBaKipdVMy9FNW78wnyzbNU3XMqu1pv23VvkFKZexpUvV1LagVrylzYVIXMNYLpfV5UWVpaFRM03LmN4PJngOMdLaV5uKikRpe+uPqz5giCJcxSw2rowDnyufuxMSUiSyFLa5/M9ymYZ5aUgfn5Pwm1buBb9PA1YsPUQZJRhFZI1Uf+5BzJlf6UQhS4mYx58WYZkqsA4rrGPLpt804xDamYEOEKYc6XyOrG2sMQSQAsVQ+Wvcb2nfzptasfUpRZQHLI354fK/4QGaQ8QS8HW+K2sL7fyAJzrVvgLs9imOMk5yGCqyJggD304T8PmhKg8pBGQ1IFwSdMUVOmMf3tFy040uCYGL/zOgveFsgvxCUQbt75AvRj+99bx2vyL8rr6G+vTXcv674ZitAsC+c2EoR7tZHpGyJNFmB7amt53XZuh8929eb2fPj3yRcjqevQ6bj/XG+Pe4+3368tRgoWiO2HPQqdt36xERQdJ3nNtYXP52rKkzY6PnG+ZNDDYfzziLhw+3wzzpwDpcvtBBPPLGd8PnwbXoROvRc39K6Yu38O56PfrIB80E3U2DQceO8h9dDtait0zqxt1zmN0v/PQt7DUCPvwxiiVLy3L28B/admd+ks1eAIvdUtGg36305JSQ+FrMlIX4elC4uokSHy6ACq2tdintcDMpd8R35Qw3a8vu1RrXXfuyaV9fdG+aN6ZzYTqXl1bP7HiXtrUTmQ2KI4geowFRuZTkbmjzNUAcuxyoD6mes0wqHde+iNhFAlX6dCwPAaMcnpiUZ6s5ezNTVF/nby9BZpmp38hfQsuS6jpkYkRHaScQkB5qcuNAk8eASUJACbfiNZfE5kL2YoHyTERWNUdVCpmU9lSprFuzm47BSZxEoJAaMfOzCKrJPCk6Y/DNt6YjzAtrd9CZPPzxJn9qxaH7tLzjf7tOSB+fKAeuSroGOU04cceYu3o+1F0/eRftwncyn6jzJdsqUoI3SA5/vbNF0aSkynthO+TlhmPDQXDjuK4yn58TXNK+vLylpksVaO+Gs0DVRTXL86wYR8M0a0YqwxuqI4ZcTABnUqfentgrUKOMYpx1KZTAj5KX9kOImZjTiUACYsmfSrE84xUwAa5eAX1J/NW5T4yDlLJ1AlbilM2L5AtGIf7ykYNdrPyk+UF+liz13yd2ItZeHlmnfAQIQkO1UhfC2yf0wEyGJVLKWLof/FSAU8kPjWWTSyxCEmqWCfj8T0VpVEtDGLOMin5XKwz7ulngFG8JuO9OH8IU0ly+1ci/P9Z0UlAAg3zhcVLEV1euq44ADfe0d5v0g/x69eter3dxceNZhfw2NvJbq3vNsikH6NofzB8te3065nj7Hw==</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14F27C6BFFF33EC1E05307991F0A26C8</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14F27BD4984B3DE8E05305991F0AC941</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>currentDBTOD</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/30 14:10:34</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>errorID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorReason</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorStatusCode</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBDeletedBy_10</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_2</con:value></con:property><con:property><con:name>expectDBDeletedBy_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_2</con:value></con:property><con:property><con:name>expectDBDeletedBy_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_2</con:value></con:property><con:property><con:name>expectDBDeletedBy_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_2</con:value></con:property><con:property><con:name>expectDBDeletedBy_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_2</con:value></con:property><con:property><con:name>expectDBDeletedBy_15</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_2</con:value></con:property><con:property><con:name>expectDBDeletedBy_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_2</con:value></con:property><con:property><con:name>expectDBDeletedBy_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_21</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_25</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_2</con:value></con:property><con:property><con:name>expectDBDeletedBy_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_31</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_32</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_33</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_34</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_38</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_2</con:value></con:property><con:property><con:name>expectDBDeletedBy_40</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_5</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_2</con:value></con:property><con:property><con:name>expectDBDeletedBy_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_2</con:value></con:property><con:property><con:name>expectDBDeletedBy_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_2</con:value></con:property><con:property><con:name>expectDBDeletedBy_8</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_2</con:value></con:property><con:property><con:name>expectDBDeletedBy_9</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_2</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_10</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_15</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_21</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_25</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_31</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_32</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_33</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_34</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_38</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_40</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_5</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_8</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_9</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14F27BD382ED3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>sName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Portal Test Cases_P1_P2</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:9158905155FE44EAAA6E20A0A1098835</con:value></con:property><con:property><con:name>tName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">TC_DECE_75108 - StreamListView - PORTAL - Account has single deleted stream and a single active stream - 200 OK_FLAKY</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150430_07310</con:value></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79613</con:value></con:property><con:property><con:name>streamhandleFULLEncoded</con:name><con:value>urn%3Adece%3Astreamhandleid%3Aorg%3Adece%3ADBD14C92C6289A31E0401F0A07995885</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A9B66525BAF65015BE0401F0A059942CA</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27C6BFFF33EC1E05307991F0A26C8</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14F27BD4984B3DE8E05305991F0AC941</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP2/DLASP_CS_2_concat.pem</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBModifiedBy_2</con:name><con:value>LLASP_2</con:value></con:property><con:property><con:name>expectDBModifiedBy_3</con:name><con:value>LLASP_2</con:value></con:property><con:property><con:name>expectDBModifiedBy_4</con:name><con:value>LLASP_2</con:value></con:property><con:property><con:name>expectDBModifiedBy_5</con:name><con:value>LLASP_2</con:value></con:property><con:property><con:name>expectDBModifiedBy_6</con:name><con:value>LLASP_2</con:value></con:property><con:property><con:name>expectDBModifiedBy_7</con:name><con:value>LLASP_2</con:value></con:property><con:property><con:name>expectDBModifiedBy_8</con:name><con:value>LLASP_2</con:value></con:property><con:property><con:name>expectDBModifiedBy_9</con:name><con:value>LLASP_2</con:value></con:property><con:property><con:name>expectDBModifiedBy_10</con:name><con:value>LLASP_2</con:value></con:property><con:property><con:name>expectDBModifiedBy_11</con:name><con:value>LLASP_2</con:value></con:property><con:property><con:name>expectDBModifiedBy_12</con:name><con:value>LLASP_2</con:value></con:property><con:property><con:name>expectDBModifiedBy_13</con:name><con:value>LLASP_2</con:value></con:property><con:property><con:name>expectDBModifiedBy_14</con:name><con:value>LLASP_2</con:value></con:property><con:property><con:name>expectDBModifiedBy_15</con:name><con:value>LLASP_2</con:value></con:property><con:property><con:name>accountListDLT</con:name><con:value>urn:dece:accountid:org:dece:14EE5CCF51F65117E05307991F0A296C</con:value></con:property><con:property><con:name>StreamDeleted</con:name><con:value>urn:dece:streamhandleid:org:dece:45F7165E85694D35A3A55C6C36D3BEC8;urn:dece:streamhandleid:org:dece:9158905155FE44EAAA6E20A0A1098835;</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>8379645a-d20c-4d86-93a7-ef56b5e60b75</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StreamCreate" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="3dd97687-515f-4849-b69a-c19dd20b1f48"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("nodetype",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("userIndex",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("streamhandle",null);
tC.setPropertyValue("streamhandleFULL",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("nickname",null);
//tC.setPropertyValue("transactionid",null);
tC.setPropertyValue("requestBody",null);
tC.setPropertyValue("sCbodyRequestingUserSetting",null);
tC.setPropertyValue("sCbodyStreamClientNickname",null);
tC.setPropertyValue("expectErrTypeStreamCreate",null);
tC.setPropertyValue("expectDBCreatedByNodeType",null);
tC.setPropertyValue("rightstokenid",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("counter",callTC.getPropertyValue("counter"));
tC.setPropertyValue("streamAccountActiveCount",callTC.getPropertyValue("streamAccountActiveCount"));
tC.setPropertyValue("userIndex",callTC.getPropertyValue("userIndex"));
tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("nickname",callTC.getPropertyValue("nickname"));
//tC.setPropertyValue("transactionid",callTC.getPropertyValue("transactionid"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("nodetype",callTC.getPropertyValue("nodetype"));
tC.setPropertyValue("rightstokenidFULL",callTC.getPropertyValue("rightstokenidFULL"));
tC.setPropertyValue("expectErrTypeStreamCreate",callTC.getPropertyValue("expectErrTypeStreamCreate"));
tC.setPropertyValue("sCbodyRequestingUserSetting",callTC.getPropertyValue("sCbodyRequestingUserSetting"));
tC.setPropertyValue("sCbodyStreamClientNickname",callTC.getPropertyValue("sCbodyStreamClientNickname"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("rightstokenid",callTC.getPropertyValue("rightstokenid"));
if (tC.getPropertyValue("expectErrTypeStreamCreate") == null || tC.getPropertyValue("expectErrTypeStreamCreate") == "") {
	tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
}
if (tC.getPropertyValue("nodetype") == null || tC.getPropertyValue("nodetype") == "") {
	tC.setPropertyValue("nodetype","dlp");
}
if (tC.getPropertyValue("streamAccountActiveCount") == null || tC.getPropertyValue("streamAccountActiveCount") == "") {
	tC.setPropertyValue("streamAccountActiveCount","0");
}
if (tC.getPropertyValue("userIndex") == null || tC.getPropertyValue("userIndex") == "") {
	tC.setPropertyValue("userIndex","0");
}
String count = tC.getPropertyValue("counter").toString();

tC.setPropertyValue("streamhandleFULL_" + count,null);
tC.setPropertyValue("streamhandle_" + count,null);
tC.setPropertyValue("streamhandleFULL_" + count,null);
tC.setPropertyValue("streamhandle_" + count,null);
tC.setPropertyValue("expectNickname_" + count,null);
tC.setPropertyValue("expectDBStatus_" + count,null);
tC.setPropertyValue("expectDBCreatedBy_" + count,null);
tC.setPropertyValue("expectRequestingUser_" + count,null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Construct the StreamCreate request Body"><con:settings/><con:config><script><![CDATA[def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

String b = "";
String coordinatorSchema = tP.getPropertyValue("coordinatorSchema").toString();
String assertionUserIdFULL = tC.getPropertyValue("assertionUserIdFULL").toString();
String assertionUserId = tC.getPropertyValue("assertionUserId").toString();
String rightstokenidFULL = tC.getPropertyValue("rightstokenidFULL").toString();
String rightstokenid= tC.getPropertyValue("rightstokenid").toString();
String transactionid = tC.getPropertyValue("transactionid").toString();
String nickname = tC.getPropertyValue("nickname").toString();
String sCbodyRequestingUserSetting = tC.getPropertyValue("sCbodyRequestingUserSetting");
String sCbodyTransactionidSetting = tC.getPropertyValue("sCbodyTransactionidSetting");
String sCbodyStreamClientNickname = tC.getPropertyValue("sCbodyStreamClientNickname");
String sCbodyRightsTokenID = tC.getPropertyValue("sCbodyRightsTokenID");
String subDivided = tC.getPropertyValue("subDivided").toString();
String calculationmethod = tC.getPropertyValue("calculationmethod").toString();


if (transactionid == "null") {
	transactionid = "";
}
if (nickname == "null") {
	nickname = "";
}
if (rightstokenidFULL == "null") {
	rightstokenidFULL = "";
}
if (assertionUserIdFULL == "null") {
	assertionUserIdFULL = "";
}

/*
String xmlBody = """<Stream xmlns="http://www.decellc.org/schema/2010/10/dece" xmlns:ns2="http://www.movielabs.com/md" 
     xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
      <StreamClientNickname>$nickname</StreamClientNickname> 
      %%REQUESTINGUSER%%
      <RightsTokenID>$rightstokenidFULL</RightsTokenID>
      %%TRANSACTIONID%%
</Stream>""";
*/

String xmlBody = """<Stream xmlns="$coordinatorSchema" xmlns:ns2="http://www.movielabs.com/md" 
     xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">\n\n""";

log.info "sCbodyRequestingUserSetting[$sCbodyRequestingUserSetting]";
log.info "sCbodyTransactionidSetting[$sCbodyTransactionidSetting]";
log.info "sCbodyStreamClientNickname[$sCbodyStreamClientNickname]";
log.info "sCbodyRightsTokenID[$sCbodyRightsTokenID]";
log.info "subDivided[$subDivided]";

switch (sCbodyStreamClientNickname) {
	case "exclude":
		b = "";
		break;
	case "nullContent":
		b = "    <StreamClientNickname></StreamClientNickname>";
		break;
	default:
		b = "    <StreamClientNickname>$nickname</StreamClientNickname>";
		break;
}

xmlBody = xmlBody + b + "\n";

switch (sCbodyRequestingUserSetting) {
	case "exclude":
		b = "";
		break;
	case "nullContent":
		b = "    <RequestingUserID></RequestingUserID>";
		break;
	default:
		b = "    <RequestingUserID>urn:dece:userid:org:dece:$assertionUserId</RequestingUserID>";
		break;
}

xmlBody = xmlBody + b + "\n";

switch (sCbodyRightsTokenID) {
	case "exclude":
		b = "";
		break;
	case "nullContent":
		b = "    <RightsTokenID>$rightstokenidFULL</RightsTokenID>";
		break;
	default:
		b = "    <RightsTokenID>urn:dece:rightstokenid:org:dece:$rightstokenid</RightsTokenID>";
		break;
}

xmlBody = xmlBody + b + "\n";

switch (sCbodyTransactionidSetting) {
	case "exclude":
		b = "";
		break;
	case "nullContent":
		b = "    <TransactionID></TransactionID>";
		break;
	default:
		b = "    <TransactionID>" + transactionid + "</TransactionID>";
		break;
}

xmlBody = xmlBody + b + "\n";

switch (subDivided) {
	

	case "exclude":
		b = "";
		break;
	case "nullContent":
	     //String calculationmethod = "urn:dece:type:geoloc:other";
		b = """<SubDividedGeolocation CalculationMethod="$calculationmethod">$subDivided</SubDividedGeolocation>""";
		break;
		
	default:
	    // String calculationmethod = "urn:dece:type:geoloc:other";
		b = """<SubDividedGeolocation CalculationMethod="$calculationmethod">$subDivided</SubDividedGeolocation>""";
		break;
}

xmlBody = xmlBody + b + "\n";


xmlBody = xmlBody + "\n" + "\n\n</Stream>";

log.info xmlBody;

tC.setPropertyValue("requestBody", xmlBody);

]]></script></con:config></con:testStep><con:testStep type="groovy" name="pem set"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("POST - StreamCreate");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - StreamCreate"><con:settings/><con:config service="DECE StreamCreate API" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - StreamCreate" mediaType="application/xml" postQueryString="false" sslKeystore="DLASP_CS_1_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="Tester" value="${#Project#tester}"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request>${#TestCase#requestBody}</con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Capture Current DB sysdate()"><con:settings/><con:config><script>import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Calendar;
import java.text.SimpleDateFormat;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("currentDBTOD",null);

def formatDate(recvDate) {
	try {
		String dateHolder = "";
		Pattern datePattern = Pattern.compile("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})");
		Matcher cdateMatcher = datePattern.matcher(recvDate);
		if (cdateMatcher.find()) {
			dateHolder = cdateMatcher.group(1) + "/" + cdateMatcher.group(2) + "/" +
				cdateMatcher.group(3) + " " + cdateMatcher.group(4) + ":" +
				cdateMatcher.group(5) + ":" + cdateMatcher.group(6);
			log.info "dateHolder[$dateHolder]";	
		}
	} 
	catch (Throwable e) {
		log.info "Matcher Failure!  recvDate[$recvDate] ERROR - " + e;
	} 
	finally {
		return dateHolder;	
	}
}

String recvCdate = tC.getPropertyValue("recvCreationDate").toString();
String sql = "SELECT TO_CHAR(sysdate, 'YYYY/MM/DD HH24:mi:ss') as TOD from dual";
String sqlResultXML = "";
String cDate = "";
String tod = "";

try {
	a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());
	sqlResultXML = a.SelectFromDB(sql,tP.getPropertyValue("targetSystem"));
	log.info "sqlResultXML[$sqlResultXML]";

	if (sqlResultXML.length() > 0) {
		def myXML = new XmlSlurper().parseText(sqlResultXML);
		tod = myXML.ResultSet.Row.TOD;
		log.info "tod[$tod]";
	}

}
catch (Throwable e) {
	log.info "sql[$sql]";
	log.info "dbUtils request failed! - " + e;
	assert 1 == 2;
}
finally {
	if (tod.length() > 0) {
		tC.setPropertyValue("currentDBTOD", tod);
	}
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('POST - StreamCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);

    if(status=="HTTP/1.1 201 Created")
  {  int StreamCreateCount=Integer.parseInt(tP.getPropertyValue("StreamCreateCount"));
   log.info "StreamCreateCount : "+StreamCreateCount;
   StreamCreateCount++;
    log.info "StreamCreateCount : "+StreamCreateCount;
     tP.setPropertyValue("StreamCreateCount", StreamCreateCount.toString());
  }
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract ERROR table information"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def a = new dbUtils.dbErrors(log,tP.getPropertyValue("targetSystem"));

tC.setPropertyValue("errorStatusCode",null);
tC.setPropertyValue("errorReason",null);
tC.setPropertyValue("errorID",null);

String xmlData = "";
String errId = "";

log.info "expectErrTypeStreamCreate[" + tC.getPropertyValue("expectErrTypeStreamCreate") + "]";

switch (tC.getPropertyValue("expectErrTypeStreamCreate")) {
	case "ADULT_CONTENT_NOT_ALLOWED":
		errId = "Policy:AdultContentNotAllowed";
		break;
	case "ACCOUNT_NOT_ACTIVE":
		errId = "AccountNotActive";
		break;
	case "API_NOT_AUTH":
		errId = "Security:RoleInvalid";
		break;
	case "BLOCKED_ACCESS_UNRATED":
		errId = "Policy:UnratedContentBlocked";
		break;
	case "CID_NOT_ACTIVE":
		errId = "ContentIDNotActive";
		break;
	case "CID_NOT_FOUND":
		errId = "ContentIDNotFound";
		break;
	case "LOGICAL_ASSET_NOT_ACTIVE":
		errId = "AssetLogicalIDNotActive";
		break;
	case "RT_RENT_EXPIRED":
		errId = "RightsTokenRentalExpired";
		break;
	case "RT_NOT_FOUND":
		errId = "RightsTokenNotFound";
		break;
	case "RT_NOT_ACTIVE":
		errId = "RightsTokenNotActive";
		break;
	case "RATING_POLICY":
		errId = "RatingPolicyExists";
		break;
	case "CID_NOT_GRANTED":
	case "STREAM_RIGHTS_NOT_GRANTED":
		errId = "StreamRightsNotGranted";
		break;
	case "STREAM_COUNT_EXCEEDED":
		errId = "AccountStreamCountExceedMaxLimit";
		break;
	case "STREAM_COUNT_EXCEEDED_USER":
		errId = "UserStreamCountExceedMaxLimit";
		break;
	case "STREAM_INVALID_TRANS":
		errId = "StreamTransactionIdInvalid";
		break;
	case "STREAM_ACCOUNTID_MISMATCH":
		errId = "AccountIdUnmatched";
		break;		
	case "STREAM_NICKNAME_TOO_LONG":
		errId = "StreamClientNicknameTooLong";
		break;		
	case "STREAM_WINDOW_NOT_ALLOWED":
		errId = "StreamAssetWindowNotAllowed";
		break;
	case "USER_NOT_MATCH_TOKEN":
		errId = "UserIdUnmatched";
		break;
	case "USER_NOT_ACTIVE":
		errId = "UserNotActive";
		break;
	case "USER_NOT_SUPPLIED":
		errId = "UserNotSpecified";
		break;
	case "USER_PRIVILEGE_ACCESS_RESTRICTED":
		errId = "UserPrivilegeAccessRestricted";
	break;
}

try {
	xmlData = a.errGetIdInfo(errId);
	
	assert xmlData.trim().length() > 1;

	def myXML = new XmlSlurper().parseText(xmlData);

	log.info myXML.ResultSet.Row.size();
	tC.setPropertyValue("errorStatusCode", myXML.ResultSet.Row[0].STATUS_CODE.toString());
	tC.setPropertyValue("errorReason", myXML.ResultSet.Row[0].REASON.toString());
	tC.setPropertyValue("errorID", myXML.ResultSet.Row[0].ERROR_ID.toString());

	/*
	*  The DB does not contain the complete HTTP status
	*  string, only the code.  Thus, we must adjust.
	*/
	switch (tC.getPropertyValue("errorStatusCode")) {
		case "400":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 400 Bad Request");
			break;
		case "403":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 403 Forbidden");
			break;
		case "404":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 404 Not Found");
			break;
		case "409":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 409 Conflict");
			break;
	}
}
catch (Throwable e) {
	log.info "STEP FAILURE! --- " + e;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Extract and Store Stream Details for List&amp; view"><con:settings/><con:config><script><![CDATA[import java.util.*;
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

// countOf_Fullfilment =  Gives count of no of AuthorizedFulfillmentMethod
//List_FullfilmentMethod = List of sorted List_AuthorizedFulfillmentMethod

//StreamClientNickname
//RequestingUserID
//RightsTokenID
//ExpirationDateTime
//SubDividedGeolocation
//streamhandleid

def rawRequest = context.expand( '${POST - StreamCreate#RawRequest}' )
def assertionAccountIdFULL = context.expand( '${#TestCase#assertionAccountIdFULL}' )
String coordinatorSchema = tP.getPropertyValue("coordinatorSchema").toString();
String assertionUserIdFULL = tC.getPropertyValue("assertionUserIdFULL").toString();

String rightstokenidFULL = tC.getPropertyValue("rightstokenidFULL").toString();
String transactionid = tC.getPropertyValue("transactionid").toString();
String nickname = tC.getPropertyValue("nickname").toString();



def httpStatus = context.expand( '${#TestCase#httpStatus}' )
String httpLocation = context.expand( '${#TestCase#httpLocation}' ).toString();
def accountList = context.expand( '${#Project#accountList}' ).toString();
int StreamCreateCount = Integer.parseInt(context.expand( '${#Project#StreamCreateCount}' ))

String[] Httplist=httpLocation.split("/");

String StreamHandleID=Httplist[Httplist.length -1];
log.info "StreamHandleID : $StreamHandleID"

//StreamList  testcase property will store list of STREAMS

log.info rawRequest
def StreamList = context.expand( '${#TestCase#StreamList}' ).toString()

if (rawRequest != "" ) 
    {
                
                def myXML = new XmlSlurper().parseText(rawRequest).declareNamespace('dece':tP.getPropertyValue("coordinatorSchema"));
                 log.info "myXML:" + myXML;


                 if(accountList==assertionAccountIdFULL && httpStatus=="HTTP/1.1 201 Created" && StreamCreateCount<=12)
                 {
                    StreamList= StreamList+StreamHandleID+"!"+rightstokenidFULL+","+assertionUserIdFULL+";";
                  
                    tC.setPropertyValue("StreamList",StreamList);
                 	
                 	}
                 else if(httpStatus=="HTTP/1.1 201 Created" && StreamCreateCount<=12)
                 {   
                 	tP.setPropertyValue("accountList",assertionAccountIdFULL);
                 	
                 	StreamList= assertionAccountIdFULL+"#"+StreamHandleID+"!"+rightstokenidFULL+","+assertionUserIdFULL+";";
                  
                 	 tC.setPropertyValue("StreamList",StreamList);
                     	
                 	}
                 else
                 	{ log.info "else block Script issue"
                 		}

    }]]></script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body"><con:settings/><con:config><script><![CDATA[def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");
def urnnode   = tP.getPropertyValue("urnNode");

def sh            = tC.getPropertyValue("streamhandleFULL");
def nodeid        = tC.getPropertyValue("nodeid");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrTypeStreamCreate");
def XMLbody       = tC.getPropertyValue("XMLbody");
def nodetype      = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = false;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");
String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "https://" + tP.getPropertyValue("targetHostq") + ":" + tP.getPropertyValue("targetPort");
String errorLinkBase = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#";
String orgRequest = url + "/rest/$major/$minor/Account/$account/Stream/$sh";
String expectHTTPstatus = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";
String expected;
String received;
String description;
String urnErr = tP.getPropertyValue("urnError");





this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "Node_status_inactive":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = true;
		errorID = "Bad_Request";
		errorReason = "Node_status_inactive";
		errorLink = "";
	break;

	case "XML_PARSING_ERROR":
		errorLinkFlag = true;
		errorReasonFlag = false;
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID = "urn:dece:errorid:org:dece:SaxParserException";
		errorLink  = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;
	
	default:
		errorReasonFlag = true;
		expectHTTPstatus = tC.getPropertyValue("errorStatusCode");
		errorID     = urnErr + tC.getPropertyValue("errorID");
		errorReason = tC.getPropertyValue("errorReason");
		errorLink   = "$errorLinkBase" + tC.getPropertyValue("errorID");
	break;
}

log.info "errorID[$errorID]";
log.info "errorReason[$errorReason]";
log.info "errorLink[$errorLink]";

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert tC.getPropertyValue("httpConnect") == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + tC.getPropertyValue("httpContentLength").toInteger();
if (XMLbodynull) {
	//assert tC.getPropertyValue("httpContentLength").toInteger() == 0;
} else {
	//assert tC.getPropertyValue("httpContentLength").toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert tC.getPropertyValue("httpLocation") != null;

	def a = tC.getPropertyValue("httpLocation");
	def b = a;
	//def urlStr = b.getPath();
	def urlStr = b;

	
	if(tP.getPropertyValue("V2") == tP.getPropertyValue("versionUrlEncode"))
	{
	int lastColon = urlStr.lastIndexOf('%');
	int lastSlash = urlStr.lastIndexOf('/');
	streamid     = urlStr.substring(lastColon + 3);
	streamidFULL = urlStr.substring(lastSlash + 1);

	this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

	tC.setPropertyValue("streamhandle",streamid);
	tC.setPropertyValue("streamhandleFULL",streamidFULL);
	}
	else
	{
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	streamid     = urlStr.substring(lastColon + 1);
	streamidFULL = urlStr.substring(lastSlash + 1);

	this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

	tC.setPropertyValue("streamhandle",streamid);
	tC.setPropertyValue("streamhandleFULL",streamidFULL);
	}
} else {
	assert tC.getPropertyValue("httpLocation") == null;
}
//Content-Type
assert tC.getPropertyValue("httpContentType") == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {
	assert XMLbody == null;
}

if (XMLbody != null && processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		if (errorReasonFlag) {
			this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
			assert myXML.Error.Reason.toString() == errorReason;
		} else {
			log.info "ErrorReason IS NOT NULL";
			assert myXML.Error.Reason.toString().length() > 0;
		}

		// ErrorLink
		if (!errorLinkFlag) {
			assert myXML.Error.ErrorLink.size() == 1;
			log.info "ErrorLink:[" + myXML.Error.ErrorLink.toString() + "] Expected[$errorLink]";
			assert myXML.Error.ErrorLink.toString() == errorLink;
		}
	} else {
		this.log.info "ResourceStatus size is " + myXML.ResourceStatus.size();
		this.log.info "ResourceStatus.Current size is " + myXML.ResourceStatus.Current.size();
		this.log.info "ResourceStatus.Current.Value size is " + myXML.ResourceStatus.Current.Value.size();
		this.log.info "ResourceStatus.Current.Description size is " + myXML.ResourceStatus.Current.Description.size();
		this.log.info "myXML.RequestingUserID size is " + myXML.RequestingUserID.size();
		this.log.info "myXML.RightsTokenID size is " + myXML.RightsTokenID.size();
		this.log.info "ExpirationDateTime size is " + myXML.ExpirationDateTime.size();
		assert myXML.ResourceStatus.size() == 1;
		assert myXML.ResourceStatus.Current.size() == 1;
		assert myXML.ResourceStatus.Current.Value.size() == 1;
		assert myXML.ResourceStatus.Current.Description.size() == 1;
		if (nodetype != "llp" && nodetype != "llpcs") {
			assert myXML.RequestingUserID.size() == 1;
		} else {
			assert myXML.RequestingUserID.size() == 0;
		}
		assert myXML.RightsTokenID.size() == 1;
		assert myXML.ExpirationDateTime.size() == 1;

		// ModifiedBy
		expected = urnnode + nodeid;
		received = myXML.ResourceStatus.Current.@ModifiedBy.text();
		this.log.info "ModifiedBy - Expect[$expected] Received[$received]";
		assert expected == received;
		
		// StreamHandleID
		expected = sh;
		received = myXML.@StreamHandleID.text();
		this.log.info "StreamHandleID - Expect[$expected] Received[$received]";
		assert expected == received;

		// CreatedBy
		expected = urnnode + tC.getPropertyValue("expectDBCreatedBy");
		received = myXML.ResourceStatus.Current.@CreatedBy.text();
		this.log.info "CreatedBy - Expect[$expected] Received[$received]";
		assert expected == received;

		// Value
		expected = tC.getPropertyValue("expectDBStatus");
		received = myXML.ResourceStatus.Current.Value.text();
		this.log.info "Value - Expect[$expected] Received[$received]";
		assert expected == received;

		// Description
		expected = description;
		received = myXML.ResourceStatus.Current.Description.text();
		this.log.info "Description - Expect[$expected] Received[$received]";
		assert expected == received;

		// RequestingUserID
		received = myXML.RequestingUserID.text();
		if (nodetype != "llp" && nodetype != "llpcs") {
			expected = tC.getPropertyValue("assertionUserIdFULL");
		} else {
			expected = "";  /* LLP has not user associated with it */
		}
		this.log.info "RequestingUserID - Expect[$expected] Received[$received]";
		assert expected == received;
		
		// RightsTokenID
		expected = tC.getPropertyValue("rightstokenidFULL");
		received = myXML.RightsTokenID.text();
		this.log.info "RightsTokenID - Expect[$expected] Received[$received]";
		assert expected == received;

		// RightsTokenID
		assert myXML.ExpirationDateTime.text().length() > 0;
	}
} 

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Return the streamhandle attributes"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

//if(tC.getPropertyValue("username") == "pjgOrg1Basic1" || tC.getPropertyValue("username") == "pjgOrg1Basic2")
//{
//int streamAccountActiveCount = tC.getPropertyValue("streamAccountActiveCount").toInteger();
//int userIndex = tC.getPropertyValue("userIndex").toInteger();
//tC.setPropertyValue("streamAccountActiveCount",0);
//}
//else
//{
int streamAccountActiveCount = tC.getPropertyValue("streamAccountActiveCount").toInteger()+1;
int userIndex = tC.getPropertyValue("userIndex").toInteger()+1;
//}
String count = tC.getPropertyValue("counter").toString();

tC.setPropertyValue("streamhandleFULL_" + count,null);
tC.setPropertyValue("streamhandle_" + count,null);
tC.setPropertyValue("streamhandleFULL_" + count,tC.getPropertyValue("streamhandleFULL"));
tC.setPropertyValue("streamhandle_" + count,tC.getPropertyValue("streamhandle"));
tC.setPropertyValue("expectNickname_" + count,tC.getPropertyValue("nickname"));
tC.setPropertyValue("expectDBStatus_" + count,"active");
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy_" + count,tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectRequestingUser_" + count,tC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("streamAccountActiveCount",streamAccountActiveCount.toString());
tC.setPropertyValue("userIndex",userIndex.toString());
tC.setPropertyValue("expectDBCreatedByNodeType",tC.getPropertyValue("nodetype"));
tC.setPropertyValue("expectDBCreatedByNodeType_" + count,tC.getPropertyValue("nodetype"));

callTC.setPropertyValue("userIndex",tC.getPropertyValue("userIndex"));
callTC.setPropertyValue("streamhandle",tC.getPropertyValue("streamhandle"));
callTC.setPropertyValue("streamhandleFULL",tC.getPropertyValue("streamhandleFULL"));
callTC.setPropertyValue("streamhandleFULL_" + count,tC.getPropertyValue("streamhandleFULL_" + count));
callTC.setPropertyValue("streamhandle_" + count,tC.getPropertyValue("streamhandle_" + count));
callTC.setPropertyValue("expectNickname_" + count,tC.getPropertyValue("expectNickname_" + count));
callTC.setPropertyValue("expectDBStatus",tC.getPropertyValue("expectDBStatus_" + count));
callTC.setPropertyValue("expectDBStatus_" + count,tC.getPropertyValue("expectDBStatus_" + count));
callTC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("expectDBCreatedBy_" + count));
callTC.setPropertyValue("expectDBCreatedBy_" + count,tC.getPropertyValue("expectDBCreatedBy_" + count));
callTC.setPropertyValue("expectDBCreatedTime_" + count,tC.getPropertyValue("currentDBTOD"));
callTC.setPropertyValue("expectRequestingUser",tC.getPropertyValue("expectRequestingUser_" + count));
callTC.setPropertyValue("expectRequestingUser_" + count,tC.getPropertyValue("expectRequestingUser_" + count));
callTC.setPropertyValue("expectRightsToken",tC.getPropertyValue("rightstokenidFULL"));
callTC.setPropertyValue("expectRightsToken_" + count,tC.getPropertyValue("rightstokenidFULL"));
callTC.setPropertyValue("streamAccountActiveCount",tC.getPropertyValue("streamAccountActiveCount"));
callTC.setPropertyValue("expectDBCreatedByNodeType",tC.getPropertyValue("expectDBCreatedByNodeType"));
callTC.setPropertyValue("expectDBCreatedByNodeType_" + count,tC.getPropertyValue("expectDBCreatedByNodeType_" + count));</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:properties><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value>nVZtU/I4FP0rTP3olLS0BekIMxVEUVEX8I0vTkhDm33apDQpL/76TYpUiuiyO8MMk9ubc899yUnOOYyjmutxjlNBGK2s4ohyN7e2tCylLoOccJfCGHNXIHfkDe7cWtVw4XaLVul3W9r7FBoONLClozO7qdsWNPSpNW3osOk06r6FZzYypCvnGe5TLiAVLa1mmI5uqN/YtF3bdi2n6tTNiVZ5ximX2NKlKndtSK14SwuFSFwAlstldWlVWRqAmmGY4HVwN0IhjqHWPt9klAdK25/+qOpjhKMIVRGLwTko+Zz73B2RgEKRpfgzlv9TLAMYTSB9fE6CE63Yi/0+nbF82YGUUYJgRD6gqs8Ai5D5FS8KWEpEGP+YhGkoYB2vkI5Mm55ooEztSKASw5RDnYfQ/MQa4hlOMUW48jTst7ST47qWbx2nkPIZS2NeXv43PpgucMQS7Ot8m9YnteMBD1SqfY6R26coyjhZ4Hs1rAlEmH92E6PjoSqPKZ6R1R3hckBXXLEDu/T2lptqdEmAufg/DdppzgbkGUYZbmeT+vz1ojt+rjfJanAdQDZKlsM1DU7PWjmBXefcULR2s9wbymKINjs6F0bv6YM937KIPCSxfTX0u8FNwxo9iNXTZIDmnQjceM3k6VQMux+vcZjS1Hqs1V9v//LGl4sIjqdvs6FpzL0Fe75wSDi7XV0/X3XuBrOY3iSnAAZh8JJNFoC9hZPHkPzJgDcB94PrK9+7Ddeo2zUuX0LauwveVvh6kqW3LxM46KGU3kzGH/PZHD4EQvTeepetIp0d/mXb9syPsunfGIntUo1Bv1vpyS5B8buYKQvx9Vnu6iZKfLjAVGhttUtph5tJuSO+K3u4WZuO03A6Z3XL615ajYvOpeFYhtNsmj3D69lWfSsyGxZ7FDuMzoiKpSR3Mza/E0SxyzH1caovWCaVjmu/IHahgJU+HcpDwCjHYyblOXXM2F4aMCZzw1ys4XRunwXUgGutcs/EA31IvZnAaVmTGyVNHmJEEoKVcKu55nKwuZC1mMNFJiKzuoBVijMp7alSWbdmnzmAkziJsGIKYuZnEa4mYZJXBvDNf02HiOfW7p03enzvjN7zAwF+TG//27YS0scnyoGrlC6w7CY+cMfUtvl8y7t+8C7awnuZT9T5kmUVKUEbJuVPX9OixqQYla/EtsyLDfuGEjjYz6uI5y8IKsa+uLylpksVaG+bM4dmdV7NFoss74dtWyCV8EBVBBg1MMIokzq1HrM/mIICBRx1KRTE94IX9jLFTIR0JKDAsZyfSr484hUwwly9Avpy8FfHPjFKIWXpBF6JQ7ZOJF8wivGvjxzkIuUnzY/yb8lS/6tjB7B24sg85SNAEBqolboQ1j+MB2ISlkgpY+ku+CGAQ8HLxqLIBRchB2qaCfzzl4rSqJYGEWIZFf2ulht2dTPnKdYJdr+cvsHk0ly81ci/P9Z0ko8AwvKFx0mOr65cVx0BGuxo72fQffltNnp2p147M2uNZi6/jY38NmoXVlGUErv2N/N3y06d9me8/Q8=</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:155797F4C6281279E05307991F0A72B3</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:15575C863ADE37BCE05305991F0AF436</con:value></con:property><con:property><con:name>counter</con:name><con:value>1</con:value></con:property><con:property><con:name>currentDBTOD</con:name><con:value>2015/05/05 14:48:08</con:value></con:property><con:property><con:name>errorID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorReason</con:name><con:value/></con:property><con:property><con:name>errorStatusCode</con:name><con:value/></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_10</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_12</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_13</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_14</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_15</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_16</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_18</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_2</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_20</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_21</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_22</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_23</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_24</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_25</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_26</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_28</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_29</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_30</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_31</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_32</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_33</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_34</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_35</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_36</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_37</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_38</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_4</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_40</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_5</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_6</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_7</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_8</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_9</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_10</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_12</con:name><con:value>DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBCreatedBy_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_2</con:value></con:property><con:property><con:name>expectDBCreatedBy_14</con:name><con:value>LLASP_2</con:value></con:property><con:property><con:name>expectDBCreatedBy_15</con:name><con:value>LLASP_2</con:value></con:property><con:property><con:name>expectDBCreatedBy_16</con:name><con:value>LLASP_2</con:value></con:property><con:property><con:name>expectDBCreatedBy_17</con:name><con:value>0914</con:value></con:property><con:property><con:name>expectDBCreatedBy_18</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_19</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_21</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_22</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_23</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_24</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_25</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_27</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_29</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_30</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_31</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_32</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_33</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_34</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_36</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_38</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_39</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_40</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_5</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_6</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_7</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_8</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedBy_9</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBStatus_10</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_11</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_12</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_13</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_14</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_15</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_16</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_17</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBStatus_19</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_20</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_21</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBStatus_23</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBStatus_25</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBStatus_27</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBStatus_29</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBStatus_30</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_31</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_32</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBStatus_33</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_34</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_35</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_36</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_37</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_38</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_39</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBStatus_40</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_5</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_6</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_7</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_8</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_9</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:15575C863ADE37BCE05305991F0AF436</con:value></con:property><con:property><con:name>expectRequestingUser_10</con:name><con:value>urn:dece:userid:org:dece:1540C03AF68131FCE05307991F0AA991</con:value></con:property><con:property><con:name>expectRequestingUser_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:1540C03AF68131FCE05307991F0AA991</con:value></con:property><con:property><con:name>expectRequestingUser_12</con:name><con:value>urn:dece:userid:org:dece:14F27BD3833A3DE6E05305991F0A3F36</con:value></con:property><con:property><con:name>expectRequestingUser_13</con:name><con:value>urn:dece:userid:org:dece:14EF2D25D23A19EDE05307991F0A4BA6</con:value></con:property><con:property><con:name>expectRequestingUser_14</con:name><con:value>urn:dece:userid:org:dece:14EF2D25D23A19EDE05307991F0A4BA6</con:value></con:property><con:property><con:name>expectRequestingUser_15</con:name><con:value>urn:dece:userid:org:dece:14EF2D25D23A19EDE05307991F0A4BA6</con:value></con:property><con:property><con:name>expectRequestingUser_16</con:name><con:value>urn:dece:userid:org:dece:14EF2D25D23A19EDE05307991F0A4BA6</con:value></con:property><con:property><con:name>expectRequestingUser_17</con:name><con:value>urn:dece:userid:org:dece:9B65694912BBFE26E0401F0A07996B66</con:value></con:property><con:property><con:name>expectRequestingUser_18</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_19</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:1540C03AF68131FCE05307991F0AA991</con:value></con:property><con:property><con:name>expectRequestingUser_20</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_21</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_23</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_25</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_27</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_29</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:1540C03AF68131FCE05307991F0AA991</con:value></con:property><con:property><con:name>expectRequestingUser_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_31</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_32</con:name><con:value>urn:dece:userid:org:dece:9B7969EE9EA1770CE0401F0A079930AA</con:value></con:property><con:property><con:name>expectRequestingUser_33</con:name><con:value>urn:dece:userid:org:dece:9DD0CB55ED027BCEE0401F0A07993B89</con:value></con:property><con:property><con:name>expectRequestingUser_34</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_35</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_36</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_37</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_38</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:1540C03AF68131FCE05307991F0AA991</con:value></con:property><con:property><con:name>expectRequestingUser_40</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_5</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:1540C03AF68131FCE05307991F0AA991</con:value></con:property><con:property><con:name>expectRequestingUser_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:1540C03AF68131FCE05307991F0AA991</con:value></con:property><con:property><con:name>expectRequestingUser_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:1540C03AF68131FCE05307991F0AA991</con:value></con:property><con:property><con:name>expectRequestingUser_8</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:1540C03AF68131FCE05307991F0AA991</con:value></con:property><con:property><con:name>expectRequestingUser_9</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:1540C03AF68131FCE05307991F0AA991</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa1.q.uvvu.com/rest/2015/02/Account/urn:dece:accountid:org:dece:155797F4C6281279E05307991F0A72B3/Stream/urn:dece:streamhandleid:org:dece:5C681E40846F4867B699471B18ED62E0</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testing</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79610</con:value></con:property><con:property><con:name>requestBody</con:name><con:value><![CDATA[<Stream xmlns="http://www.decellc.org/schema/2015/03/coordinator" xmlns:ns2="http://www.movielabs.com/md" 
     xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">

    <StreamClientNickname></StreamClientNickname>
    <RequestingUserID>urn:dece:userid:org:dece:15575C863ADE37BCE05305991F0AF436</RequestingUserID>
    <RightsTokenID>urn:dece:rightstokenid:org:dece:155797F08C9F36D6E05305991F0A1D1C</RightsTokenID>
    <TransactionID>1.0.1.3.S</TransactionID>
<SubDividedGeolocation CalculationMethod="urn:dece:type:geoloc:other">US 20148</SubDividedGeolocation>



</Stream>]]></con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value>urn:dece:rightstokenid:org:dece:155797F08C9F36D6E05305991F0A1D1C</con:value></con:property><con:property><con:name>sCbodyRequestingUserSetting</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sCbodyStreamClientNickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value>Portal Customer Support Test Cases_P1_P2</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value>1</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">5C681E40846F4867B699471B18ED62E0</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:5C681E40846F4867B699471B18ED62E0</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:5C681E40846F4867B699471B18ED62E0</con:value></con:property><con:property><con:name>streamhandleFULL_10</con:name><con:value>urn:dece:streamhandleid:org:dece:F0E59E449D7B489EB3178E20CC6E949A</con:value></con:property><con:property><con:name>streamhandleFULL_11</con:name><con:value>urn:dece:streamhandleid:org:dece:8A79338B9C4B4A3ABB1156A86F8F7FC9</con:value></con:property><con:property><con:name>streamhandleFULL_12</con:name><con:value>urn:dece:streamhandleid:org:dece:8F33C65E87A648308724737A0E172639</con:value></con:property><con:property><con:name>streamhandleFULL_13</con:name><con:value>urn:dece:streamhandleid:org:dece:5FEF94F4EAFF4BC18384FBA89F5BF3F4</con:value></con:property><con:property><con:name>streamhandleFULL_14</con:name><con:value>urn:dece:streamhandleid:org:dece:86FE554E211B42C1B013E066789175AA</con:value></con:property><con:property><con:name>streamhandleFULL_15</con:name><con:value>urn:dece:streamhandleid:org:dece:DBA5D25318644B5EA0C703384FE6D6A0</con:value></con:property><con:property><con:name>streamhandleFULL_16</con:name><con:value>urn:dece:streamhandleid:org:dece:E9576239081F4D7A8F7438EA2C6F48C3</con:value></con:property><con:property><con:name>streamhandleFULL_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:D95E71BE9A12ACD3E0401F0A07990784</con:value></con:property><con:property><con:name>streamhandleFULL_18</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87AA799E2AD317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandleFULL_19</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87AA799E2FD317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:2118C9F5B6EE482B830684549EBD476A</con:value></con:property><con:property><con:name>streamhandleFULL_20</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87AA799E34D317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandleFULL_21</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87AA799E39D317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandleFULL_22</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87AA799E3ED317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandleFULL_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:CD87BC6F0FEF438EE0401F0A05996C3E</con:value></con:property><con:property><con:name>streamhandleFULL_24</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87BC6F0FF4438EE0401F0A05996C3E</con:value></con:property><con:property><con:name>streamhandleFULL_25</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87BC6F0FF9438EE0401F0A05996C3E</con:value></con:property><con:property><con:name>streamhandleFULL_26</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87BC6F0FFE438EE0401F0A05996C3E</con:value></con:property><con:property><con:name>streamhandleFULL_27</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87C4C234467FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandleFULL_28</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87C4C2344B7FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandleFULL_29</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87C4C234507FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandleFULL_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:814D9E9A794B49A79FF09D7CEFD25B7F</con:value></con:property><con:property><con:name>streamhandleFULL_30</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87C4C234557FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandleFULL_31</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87C4C2345A7FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandleFULL_32</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87CE58313FD124E0401F0A05990DAA</con:value></con:property><con:property><con:name>streamhandleFULL_33</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87CF9B9FB89952E0401F0A079947F1</con:value></con:property><con:property><con:name>streamhandleFULL_34</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:CD877D48FF260318E0401F0A079928C0</con:value></con:property><con:property><con:name>streamhandleFULL_35</con:name><con:value>urn:dece:streamhandleid:org:dece:CD877D48FF2B0318E0401F0A079928C0</con:value></con:property><con:property><con:name>streamhandleFULL_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:CD87862FA8AE0BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandleFULL_37</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87862FA8B30BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandleFULL_38</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87862FA8B80BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandleFULL_39</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87862FA8BD0BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandleFULL_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:8CF4327E7C614733A0364C280FDD4445</con:value></con:property><con:property><con:name>streamhandleFULL_40</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87862FA8C20BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandleFULL_5</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:D80ECFDD504243649FDAEF284AE158A6</con:value></con:property><con:property><con:name>streamhandleFULL_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:BF9B8B1365B14EFE9379303F287E6CA2</con:value></con:property><con:property><con:name>streamhandleFULL_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:8D22F48DB03B46AD913EDB11FB5A558E</con:value></con:property><con:property><con:name>streamhandleFULL_8</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:DB75672A61E44DEA84287825C53485D3</con:value></con:property><con:property><con:name>streamhandleFULL_9</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:9CBA9A9A41CB49549C59764C64E65AF0</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">5C681E40846F4867B699471B18ED62E0</con:value></con:property><con:property><con:name>streamhandle_10</con:name><con:value>F0E59E449D7B489EB3178E20CC6E949A</con:value></con:property><con:property><con:name>streamhandle_11</con:name><con:value>8A79338B9C4B4A3ABB1156A86F8F7FC9</con:value></con:property><con:property><con:name>streamhandle_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">8F33C65E87A648308724737A0E172639</con:value></con:property><con:property><con:name>streamhandle_13</con:name><con:value>5FEF94F4EAFF4BC18384FBA89F5BF3F4</con:value></con:property><con:property><con:name>streamhandle_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">86FE554E211B42C1B013E066789175AA</con:value></con:property><con:property><con:name>streamhandle_15</con:name><con:value>DBA5D25318644B5EA0C703384FE6D6A0</con:value></con:property><con:property><con:name>streamhandle_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E9576239081F4D7A8F7438EA2C6F48C3</con:value></con:property><con:property><con:name>streamhandle_17</con:name><con:value>D95E71BE9A12ACD3E0401F0A07990784</con:value></con:property><con:property><con:name>streamhandle_18</con:name><con:value>CD87AA799E2AD317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandle_19</con:name><con:value>CD87AA799E2FD317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandle_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2118C9F5B6EE482B830684549EBD476A</con:value></con:property><con:property><con:name>streamhandle_20</con:name><con:value>CD87AA799E34D317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandle_21</con:name><con:value>CD87AA799E39D317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandle_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">CD87AA799E3ED317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandle_23</con:name><con:value>CD87BC6F0FEF438EE0401F0A05996C3E</con:value></con:property><con:property><con:name>streamhandle_24</con:name><con:value>CD87BC6F0FF4438EE0401F0A05996C3E</con:value></con:property><con:property><con:name>streamhandle_25</con:name><con:value>CD87BC6F0FF9438EE0401F0A05996C3E</con:value></con:property><con:property><con:name>streamhandle_26</con:name><con:value>CD87BC6F0FFE438EE0401F0A05996C3E</con:value></con:property><con:property><con:name>streamhandle_27</con:name><con:value>CD87C4C234467FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandle_28</con:name><con:value>CD87C4C2344B7FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandle_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">CD87C4C234507FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandle_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">814D9E9A794B49A79FF09D7CEFD25B7F</con:value></con:property><con:property><con:name>streamhandle_30</con:name><con:value>CD87C4C234557FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandle_31</con:name><con:value>CD87C4C2345A7FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandle_32</con:name><con:value>CD87CE58313FD124E0401F0A05990DAA</con:value></con:property><con:property><con:name>streamhandle_33</con:name><con:value>CD87CF9B9FB89952E0401F0A079947F1</con:value></con:property><con:property><con:name>streamhandle_34</con:name><con:value>CD877D48FF260318E0401F0A079928C0</con:value></con:property><con:property><con:name>streamhandle_35</con:name><con:value>CD877D48FF2B0318E0401F0A079928C0</con:value></con:property><con:property><con:name>streamhandle_36</con:name><con:value>CD87862FA8AE0BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandle_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">CD87862FA8B30BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandle_38</con:name><con:value>CD87862FA8B80BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandle_39</con:name><con:value>CD87862FA8BD0BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandle_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">8CF4327E7C614733A0364C280FDD4445</con:value></con:property><con:property><con:name>streamhandle_40</con:name><con:value>CD87862FA8C20BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandle_5</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">D80ECFDD504243649FDAEF284AE158A6</con:value></con:property><con:property><con:name>streamhandle_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">BF9B8B1365B14EFE9379303F287E6CA2</con:value></con:property><con:property><con:name>streamhandle_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">8D22F48DB03B46AD913EDB11FB5A558E</con:value></con:property><con:property><con:name>streamhandle_8</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DB75672A61E44DEA84287825C53485D3</con:value></con:property><con:property><con:name>streamhandle_9</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9CBA9A9A41CB49549C59764C64E65AF0</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_86531 - StreamListView - PORTALCS - Standard User can view stream created by Standard User - 200 OK_FLAKY</con:value></con:property><con:property><con:name>transactionid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1.0.1.3.S</con:value></con:property><con:property><con:name>userIndex</con:name><con:value>1</con:value></con:property><con:property><con:name>username</con:name><con:value>stream_list_view_20150505_081521</con:value></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_null</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:DB9579AE03D8DFD8E0401F0A059960A6</con:value></con:property><con:property><con:name>streamhandle_null</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DB9579AE03D8DFD8E0401F0A059960A6</con:value></con:property><con:property><con:name>expectNickname_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_null</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_null</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectRequestingUser_null</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>subDivided</con:name><con:value>US 20148</con:value></con:property><con:property><con:name>calculationmethod</con:name><con:value>urn:dece:type:geoloc:other</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE072E24F73ADE4DBE0401F0A05994C9A</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_null</con:name><con:value>dlp</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>155797F4C6281279E05307991F0A72B3</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>15575C863ADE37BCE05305991F0AF436</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/DLASP_CS_1_concat.pem</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>155797F08C9F36D6E05305991F0A1D1C</con:value></con:property><con:property><con:name>accountList</con:name><con:value>urn:dece:accountid:org:dece:12CCC9E2591E637FE05305991F0A1A08</con:value></con:property><con:property><con:name>StreamList</con:name><con:value>urn:dece:accountid:org:dece:155797F4C6281279E05307991F0A72B3#urn:dece:streamhandleid:org:dece:C8B1D2A7F9C748EFA43B90FE415EC69A!urn:dece:rightstokenid:org:dece:155797F0866936D6E05305991F0A1D1C,urn:dece:userid:org:dece:15575C863ADE37BCE05305991F0AF436;urn:dece:streamhandleid:org:dece:5C681E40846F4867B699471B18ED62E0!urn:dece:rightstokenid:org:dece:155797F08C9F36D6E05305991F0A1D1C,urn:dece:userid:org:dece:15575C863ADE37BCE05305991F0AF436;</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>3eb6cfa2-4599-497d-9eb2-ab9c8356e362</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyGet for Account" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="81534186-ee4c-45f2-ba25-8b64ce94ce6a"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="d29b2129-bed1-4e71-9a4d-68cd517f34be"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("streamhandleFULL",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("expectErrTypePolicyCreate",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="f91dab2e-513c-4fbc-b14a-0359ee553f17"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("policyClass",callTC.getPropertyValue("policyClass"));
tC.setPropertyValue("expectErrTypePolicyCreate",callTC.getPropertyValue("expectErrTypePolicyCreate"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="a1fe680e-32e5-47e3-b638-3520f160b32b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("GET - PolicyGet Account");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - PolicyGet Account" id="2305ab51-006a-46c7-b1f2-dac306482548"><con:settings/><con:config service="Policy Get" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Policy/{POLICYCLASS}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - PolicyGet Account" mediaType="application/xml" sslKeystore="iscportal1_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="POLICYCLASS" value="${#Project#urnPolicy}${#TestCase#policyClass}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="971a8cbc-f7d9-4d2b-a3f8-608be95abc61"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - PolicyGet Account');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process response body and headers" id="90831cf3-badd-4803-8a0e-51b0bfc232fb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def XMLbody    = tC.getPropertyValue("XMLbody");
def httpStatus = tC.getPropertyValue("httpStatus");

String policyWasFound = "false";
String xmlPolicyClass = "";
String tcPolicyClass  = tC.getPropertyValue("policyClass");

/*
*  We can assume that if we get returned an HTTP status 
*  of 'HTTP/1.1 200 OK' the policy was found.  However,
*  it is never a bad idea to doublecheck.
*/

/*
*  The body should not be null...something should be
*  there.
*/
assert XMLbody.size() > 0;

if (XMLbody != null) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	xmlPolicyClass = myXML.Policy.PolicyClass.text();
}

		
if (httpStatus == "HTTP/1.1 200 OK" &amp;&amp; xmlPolicyClass == tcPolicyClass) {
	policyWasFound = "true";
}


tC.setPropertyValue("policyExists", policyWasFound);</script></con:config></con:testStep><con:testStep type="groovy" name="Return policyExists to calling test case" id="b8d28066-74b6-43a2-82e1-6a5680cb05ba"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("policyExists",tC.getPropertyValue("policyExists"));

//if (tC.getPropertyValue("returnXMLResult") == "true") {
	callTC.setPropertyValue("policyGetXML",tC.getPropertyValue("XMLbody"));
//}
</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Policy - Establish Manage account consent policy</con:value></con:property><con:property><con:name>sName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Test Configuration/Setup</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportal1</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbZcuo4EP0Vyvcx5RWzuQJVBkLirBDIxsuUkGVQsCXHklny9SMZcDAhGe48udRunT696EjnDESh5biMoYRjSkqrKCTMyaxNJU2IQwHDzCEgQszh0Bm6d7eOpRkO2G1RSl63qfwzqQbArvl1FQU1W7VN21InwKqJpVGvNapmHRi2cGUsRR5hHBDeVCzDtFWjoZrGyGg45ZpTqWmVhj1WSs8oYQJbuGiGsiW1Yk1lxnns6PpyudSWZY0mU90yDFN/vbsdwhmKgNI632SUBUpaW3+o+QiiMIQapJF+rhd8zn3mDPGUAJ4maBvL/ymWoRsNXfj4DE//KPle5HskoNmyAwglGIIQfwJZnzvEZ9QvueGUJpjPoh+TMA0JrKIVVKFpkz+KXqR2IlCBYcKAymbA3GI9ogAliEBUenr0msqf07qWbR0lgLCAJhErLv+ODyILFNIY+SrbpbWldjrgkUq1zhF0PALDlOEFupfDGgOI2LabCJ4OVeonKMCrW8zEgK6YZKfv0ztYbqrRxVPE+P9p0F5zNiDPIExRq9dvjKPZ4O29staJPbp+GI4H86tB2H+DzYzAvnNmyFu7WR4MZT5Emx24PIj6/XvLnI5M4K0fz669qXt5rU+IGfbGN/NG/6Y9H7vPeHTfTuvzvrXS3U/4MqbJ+3hSaUzf8NV49PpwsYbV9U3a/XgNZ8urt6e4Xk7eVyxaB5fl1bV5/RKdLa7mT8tOO6676cenZeNB4Hbp2cMMzt4G/V6cXlqrmhfiMvUnNy8DRoceXcaN9BJ2q/3OFFn1Zp7OHv+ibXfmh+nkHUG+W8ox8LqlnugS4L+LmbRgXw0yVyeW4sM4IlxpyV1SO5xUyB32HdHDzdqw2mW33eu5RrlsVC7sC6Mivo2G2TPcumFVdiKzYXFAsUNJgGUsKbmbsfmdIIwchoiPEnVBU6F0TPkFsQs4KHnkURwCShgaUSHPpuGnSXUyrc/LPDCD9cSuflbtd98MlNI95Q/kIXEDjpKCKJtWQZQfEcQxRlK55WAzMdmMi2J8gEXKQ1NbAI2gVGh7ImXWsex6RWc4ikMkqeoR9dMQafEszkqjs83XUgFkmRUzGNOEgzA7EfqP+R3+25VC+PhYOjCZUhuJdqIjl4y9y+db3pWjl9EO3k19LA+YqCtPMNwwKf76Ghc5J/msfCW2Y55v+EsAyI5A6L/w0w9Lk0f0F3gv/u42F/eCUJLWrr8fQPvQ0sUizTpak4qZCHhdFks3LH2IYCq0bj2ic0T0HEU/6WLJiR8Ez+1FiimfkSEHHEViBEvZ8oSXxBAx+ZLwxOFZnfpMKYQUpeNoxY/ZOqF4BUnGvz6UoAOlnzD3xWdJE/+rY0ew9uKIPMVDgmMylSt5qax/GBBIBSwWckiTffBjAMeCF415kXMuXAzUJOXo5z8lqXNNBUBIU8K9rpIZ9rU348nXMXK+nL7BZPKev/fwfz/4VJyNAETilchwhi+vbUceATLd0+9t0EMJ73S71XqtXauY1e6+hLfbRjUvSoFd65v5u2WvTocz3voX</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:02B3CDD687B7516DE05305991F0ABB06</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:02B3ABFFA03305E4E05305991F0A8025</con:value></con:property><con:property><con:name>policyClass</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ManageAccountConsent</con:value></con:property><con:property><con:name>expectErrTypePolicyCreate</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<dece:ErrorList xmlns:dece="http://www.decellc.org/schema/2015/03/coordinator" xmlns:md="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#">
   <dece:Error ErrorID="urn:dece:errorid:org:dece:Policy:PolicyNotFound">
      <dece:Reason Language="en">The policy was not found.</dece:Reason>
      <dece:OriginalRequest>http://stdecqavap1.va.neustar.com:8009/rest/2015/02/Account/urn:dece:accountid:org:dece:02B3CDD687B7516DE05305991F0ABB06/Policy/urn:dece:type:policy:ManageAccountConsent</dece:OriginalRequest>
      <dece:ErrorLink>https://qa.q.uvvu.com:7001/rest/2015/02/error/en/ErrorList.html#Policy:PolicyNotFound</dece:ErrorLink>
   </dece:Error>
</dece:ErrorList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 404 Not Found</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">819</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyExists</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">false</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79619</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE072D07F07DF9AC4E0401F0A07993B75</con:value></con:property><con:property><con:name>policyClassEncoded</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AManageAccountConsent</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>02B3CDD687B7516DE05305991F0ABB06</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>02B3ABFFA03305E4E05305991F0A8025</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\GIT\uv-coordinator-api-regression\Certs\QALP1/iscportal1_concat.pem</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyDelete for Account" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="b7b12396-a1b0-45dc-abcd-92f5f391432f"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="8d85a727-d3da-4577-9772-e719bc42c4a8"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("expectErrTypePolicyGet",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="01ada3a8-4fe2-488f-8a52-8f71840ab7e5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("policyClass",callTC.getPropertyValue("policyClass"));
tC.setPropertyValue("expectErrTypePolicyGet",callTC.getPropertyValue("expectErrTypePolicyGet"));
def assertionAccountIdFULLEncoded = URLEncoder.encode(tC.getPropertyValue("assertionAccountIdFULL"),"UTF-8");
tC.setPropertyValue("assertionAccountIdFULLEncoded",assertionAccountIdFULLEncoded)

//def assertionUserIdFULLEncoded = URLEncoder.encode(tC.getPropertyValue("assertionUserIdFULL"),"UTF-8");
//tC.setPropertyValue("assertionUserIdFULLEncoded",assertionUserIdFULLEncoded)

def policyClassEncoded = URLEncoder.encode(tC.getPropertyValue("policyClass"),"UTF-8");
tC.setPropertyValue("policyClassEncoded",policyClassEncoded)
if (tC.getPropertyValue("expectErrTypePolicyGet") == null || tC.getPropertyValue("expectErrTypePolicyGet") == "") {
		tC.setPropertyValue("expectErrTypePolicyGet","SUCCESS");
}</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="fe4713b5-0e5c-4a75-bbb8-1b0664a02dbb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyDelete");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyDelete" id="a5108554-4adb-44c0-8e25-23a530cd0787"><con:settings/><con:config service="Policy Delete" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/User/{USER}/Policy/{POLICYCLASS}" methodName="DELETE" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyDelete" mediaType="application/xml"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="POLICYCLASS" value="${#Project#urnPolicy}${#TestCase#policyClass}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="e25f99a7-88e4-4a23-9ae0-ecc9d96aaf2a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('DELETE - PolicyDelete Account');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;

/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/
tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}
tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process response body and headers" id="10371371-c419-44c9-a075-5f593fc9ffdd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def XMLbody    = tC.getPropertyValue("XMLbody");
def httpStatus = tC.getPropertyValue("httpStatus");

String policyWasFound = "false";
String xmlPolicyClass = "";
String tcPolicyClass  = tC.getPropertyValue("policyClass");

/*
*  We can assume that if we get returned an HTTP status 
*  of 'HTTP/1.1 200 OK' the policy was found.  However,
*  it is never a bad idea to doublecheck.
*/

if (XMLbody != null) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	xmlPolicyClass = myXML.Policy.PolicyClass.text();
}

		
if (httpStatus == "HTTP/1.1 200 OK" &amp;&amp; xmlPolicyClass == tcPolicyClass) {
	policyWasFound = "true";
}


tC.setPropertyValue("policyExists", policyWasFound);</script></con:config></con:testStep><con:testStep type="groovy" name="Return policyExists to calling test case" id="87333c81-b60b-44a5-9975-51e28eaf5b44"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("policyExists",tC.getPropertyValue("policyExists"));
</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyClass</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrTypePolicyGet</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyExists</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpConnect</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79620</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>098c72da-d8d1-4b16-843d-196c2268e3bc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StreamListView1" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" disabled="true" id="62a9cc9c-4b67-4d35-8f4a-043bac27a18c"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="11618f2c-f4ff-4a24-a9bf-1fadf88be027"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("nodetype",null);
tC.setPropertyValue("streamhandleFULL",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("expectErrTypeStreamListView",null);
tC.setPropertyValue("expectDBCreatedBy",null);
tC.setPropertyValue("expectDBDeletedBy",null);
tC.setPropertyValue("expectDBStatus",null);
tC.setPropertyValue("expectNickname",null);
tC.setPropertyValue("expectStreamActiveCnt",null);
tC.setPropertyValue("httpContentEncoding",null);
tC.setPropertyValue("streamAccountActiveCount",null);
tC.setPropertyValue("streamHistoryRows",null);
tC.setPropertyValue("streamFlagCreateDateOld",null);
tC.setPropertyValue("streamFlagIgnoreCreatedDate",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="2209491c-67e8-4c6f-bb65-a74f6dd04cf5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

int counter;
String sh;
String rt;
String shCreatedBy;
String shValue;
String shExpireDate;
String nickname;
String expectGenericRightsToken;
String expectRequestingUser;
String expectDBDeletedTime;
String expectDBCreatedTime;
String streamFlagCreateDateOld;
String streamFlagIgnoreCreatedDate;
String streamFlagIgnoreDeletedDate;
String expectDBCreatedByNodeType;

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("nodetype",callTC.getPropertyValue("nodetype"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("rightstokenid",callTC.getPropertyValue("rightstokenid"));
tC.setPropertyValue("rightstokenidFULL",callTC.getPropertyValue("rightstokenidFULL"));
tC.setPropertyValue("streamhandleFULL",callTC.getPropertyValue("streamhandleFULL"));
tC.setPropertyValue("expectErrTypeStreamListView",callTC.getPropertyValue("expectErrTypeStreamListView"));
tC.setPropertyValue("expectDBCreatedBy",callTC.getPropertyValue("expectDBCreatedBy"));
tC.setPropertyValue("expectDBDeletedBy",callTC.getPropertyValue("expectDBDeletedBy"));
tC.setPropertyValue("expectDBStatus",callTC.getPropertyValue("expectDBStatus"));
tC.setPropertyValue("expectNickname",callTC.getPropertyValue("nickname"));
tC.setPropertyValue("counter",callTC.getPropertyValue("counter"));
tC.setPropertyValue("expectGenericRightsToken",callTC.getPropertyValue("expectGenericRightsToken"));
tC.setPropertyValue("expectStreamAvailCnt",callTC.getPropertyValue("expectStreamAvailCnt"));
tC.setPropertyValue("expectStreamActiveCnt",callTC.getPropertyValue("expectStreamActiveCnt"));
tC.setPropertyValue("expectRequestingUser",callTC.getPropertyValue("expectRequestingUser"));
tC.setPropertyValue("streamAccountActiveCount",callTC.getPropertyValue("streamAccountActiveCount"));
tC.setPropertyValue("streamFlagCreateDateOld",callTC.getPropertyValue("streamFlagCreateDateOld"));
tC.setPropertyValue("streamFlagIgnoreCreatedDate",callTC.getPropertyValue("streamFlagIgnoreCreatedDate"));
tC.setPropertyValue("expectDBCreatedByNodeType",callTC.getPropertyValue("expectDBCreatedByNodeType"));
def assertionAccountIdFULLEncoded = URLEncoder.encode(tC.getPropertyValue("assertionAccountIdFULL"),"UTF-8");
tC.setPropertyValue("assertionAccountIdFULLEncoded",assertionAccountIdFULLEncoded)

if (tC.getPropertyValue("expectErrTypeStreamListView") == null || tC.getPropertyValue("expectErrTypeStreamListView") == "") {
	tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS")
}
if (tC.getPropertyValue("expectDBStatus") == null || tC.getPropertyValue("expectDBStatus") == "") {
	tC.setPropertyValue("expectDBStatus","active")
}
if (tC.getPropertyValue("expectGenericRightsToken") == null || tC.getPropertyValue("expectGenericRightsToken") == "") {
	tC.setPropertyValue("expectGenericRightsToken","false")
}
if (tC.getPropertyValue("expectStreamAvailCnt") == null || tC.getPropertyValue("expectStreamAvailCnt") == "") {
	tC.setPropertyValue("expectStreamAvailCnt",tP.getPropertyValue("streamlimit"))
}
if (tC.getPropertyValue("expectStreamActiveCnt") == null || tC.getPropertyValue("expectStreamActiveCnt") == "") {
	tC.setPropertyValue("expectStreamActiveCnt","0")
}
if (tC.getPropertyValue("streamAccountActiveCount") == null || tC.getPropertyValue("streamAccountActiveCount") == "") {
	tC.setPropertyValue("streamAccountActiveCount","0")
}
if (tC.getPropertyValue("streamFlagIgnoreCreatedDate") == null || tC.getPropertyValue("streamFlagIgnoreCreatedDate") == "") {
	tC.setPropertyValue("streamFlagIgnoreCreatedDate","false")
}

if (tC.getPropertyValue("counter") == null ||
    tC.getPropertyValue("counter") == "") {
    		tC.setPropertyValue("counter","1");
    }
    
counter = tC.getPropertyValue("counter").toInteger();

for (int i = 0; i &lt;= counter; i++) {
	
	sh           = "streamhandleFULL_"  + (i + 1);
	rt           = "rightstokenidFULL_"   + (i + 1);
	shCreatedBy  = "expectDBCreatedBy_" + (i + 1);
	shDeletedBy  = "expectDBDeletedBy_" + (i + 1);
	shValue      = "expectDBStatus_"    + (i + 1);
	nickname     = "expectNickname_"    + (i + 1);
	expectRequestingUser = "expectRequestingUser_" + (i + 1);
	expectGenericRightsToken = "expectGenericRightsToken_" + (i + 1);
	expectDBDeletedTime = "expectDBDeletedTime_" + (i + 1);
	expectDBCreatedTime = "expectDBCreatedTime_" + (i + 1);
	streamFlagCreateDateOld = "streamFlagCreateDateOld_" + (i + 1);
	streamFlagIgnoreCreatedDate = "streamFlagIgnoreCreatedDate_" + (i + 1);
	streamFlagIgnoreDeletedDate = "streamFlagIgnoreDeletedDate_" + (i + 1);
	expectDBCreatedByNodeType = "expectDBCreatedByNodeType_" + (i + 1);
		
	tC.setPropertyValue(sh,callTC.getPropertyValue(sh));
	tC.setPropertyValue(rt,callTC.getPropertyValue(rt));
	tC.setPropertyValue(shValue,callTC.getPropertyValue(shValue));
	tC.setPropertyValue(shCreatedBy,callTC.getPropertyValue(shCreatedBy));
	tC.setPropertyValue(shDeletedBy,callTC.getPropertyValue(shDeletedBy));
	tC.setPropertyValue(nickname,callTC.getPropertyValue(nickname));
	tC.setPropertyValue(expectGenericRightsToken,callTC.getPropertyValue(expectGenericRightsToken));
	tC.setPropertyValue(expectRequestingUser,callTC.getPropertyValue(expectRequestingUser));
	tC.setPropertyValue(expectDBDeletedTime,callTC.getPropertyValue(expectDBDeletedTime));
	tC.setPropertyValue(expectDBCreatedTime,callTC.getPropertyValue(expectDBCreatedTime));
	tC.setPropertyValue(streamFlagCreateDateOld,callTC.getPropertyValue(streamFlagCreateDateOld));
	tC.setPropertyValue(streamFlagIgnoreCreatedDate,callTC.getPropertyValue(streamFlagIgnoreCreatedDate));
	tC.setPropertyValue(streamFlagIgnoreDeletedDate,callTC.getPropertyValue(streamFlagIgnoreDeletedDate));
	tC.setPropertyValue(expectDBCreatedByNodeType,callTC.getPropertyValue(expectDBCreatedByNodeType));
}


</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="6a2e25ba-c2c9-4acd-8c42-75b9bb437e9b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("GET - StreamView");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - StreamListView" id="2bfab0a3-345c-4082-b3a1-4b3a7cc7a618"><con:settings/><con:config service="DECE StreamCreate API" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/List" methodName="HEAD" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - StreamListView" mediaType="application/xml" sslKeystore="5490_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="Tester" value="${#Project#tester}"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="7adf99bd-7d0d-49ce-8533-a62ebca3dc39"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('GET - StreamListView');

/*
*  Get the XML body raw 
*/
//rawResp = new ByteArrayOutputStream();
//rawResp = tStep.httpRequest.response.getRawResponseData();
//def expXML  = new String(rawResp);

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String contentEncoding = null;

expXML     = tStep.httpRequest.response.getResponseContent();

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			contentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
tC.setPropertyValue("httpContentEncoding", contentEncoding);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract ERROR table information" id="5b8cc417-9963-4ca3-ad56-371881a3bc61"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def a = new dbUtils.dbErrors(log,tP.getPropertyValue("targetSystem"));

tC.setPropertyValue("errorStatusCode",null);
tC.setPropertyValue("errorReason",null);
tC.setPropertyValue("errorID",null);

String xmlData = "";
String errId = "";

log.info "expectErrTypeStreamView[" + tC.getPropertyValue("expectErrTypeStreamListView") + "]";

switch (tC.getPropertyValue("expectErrTypeStreamListView")) {
	case "ADULT_CONTENT_NOT_ALLOWED":
		errId = "Policy:AdultContentNotAllowed";
		break;
	case "ACCOUNT_NOT_ACTIVE":
		errId = "AccountNotActive";
		break;
	case "API_NOT_AUTH":
		errId = "Security:RoleInvalid";
		break;
	case "BLOCKED_ACCESS_UNRATED":
		errId = "Policy:UnratedContentBlocked";
		break;
	case "CID_NOT_ACTIVE":
		errId = "ContentIDNotActive";
		break;
	case "CID_NOT_FOUND":
		errId = "ContentIDNotFound";
		break;
	case "LOGICAL_ASSET_NOT_ACTIVE":
		errId = "AssetLogicalIDNotActive";
		break;
	case "RT_RENT_EXPIRED":
		errId = "RightsTokenRentalExpired";
		break;
	case "RT_NOT_FOUND":
		errId = "RightsTokenNotFound";
		break;
	case "RT_NOT_ACTIVE":
		errId = "RightsTokenNotActive";
		break;
	case "RATING_POLICY":
		errId = "RatingPolicyExists";
		break;
	case "CID_NOT_GRANTED":
	case "STREAM_RIGHTS_NOT_GRANTED":
		errId = "StreamRightsNotGranted";
		break;
	case "STREAM_COUNT_EXCEEDED":
		errId = "AccountStreamCountExceedMaxLimit";
		break;
	case "STREAM_COUNT_EXCEEDED_USER":
		errId = "UserStreamCountExceedMaxLimit";
		break;
	case "STREAM_INVALID_TRANS":
		errId = "StreamTransactionIdInvalid";
		break;
	case "STREAM_ACCOUNTID_MISMATCH":
		errId = "AccountIdUnmatched";
		break;		
	case "STREAM_NICKNAME_TOO_LONG":
		errId = "StreamClientNicknameTooLong";
		break;		
	case "STREAM_WINDOW_NOT_ALLOWED":
		errId = "StreamAssetWindowNotAllowed";
		break;
	case "STREAM_OWNER_MISMATCH":
		errId = "StreamOwnerMismatch";
		break;
	case "STREAM_NOT_FOUND":
		errId = "StreamNotFound";
		break;
	case "STREAM_NOT_ACTIVE":
		errId = "StreamNotActive";
		break;
	case "USER_NOT_MATCH_TOKEN":
		errId = "UserIdUnmatched";
		break;
	case "USER_NOT_ACTIVE":
		errId = "UserNotActive";
		break;
	case "USER_NOT_SUPPLIED":
		errId = "UserNotSpecified";
		break;
	default:
		errId = tC.getPropertyValue("expectErrTypeStreamListView").toString();
		break;
}

try {
	xmlData = a.errGetIdInfo(errId);
	
	assert xmlData.trim().length() > 1;

	def myXML = new XmlSlurper().parseText(xmlData);

	log.info myXML.ResultSet.Row.size();
	tC.setPropertyValue("errorStatusCode", myXML.ResultSet.Row[0].STATUS_CODE.toString());
	tC.setPropertyValue("errorReason", myXML.ResultSet.Row[0].REASON.toString());
	tC.setPropertyValue("errorID", myXML.ResultSet.Row[0].ERROR_ID.toString());

	/*
	*  The DB does not contain the complete HTTP status
	*  string, only the code.  Thus, we must adjust.
	*/
	switch (tC.getPropertyValue("errorStatusCode")) {
		case "400":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 400 Bad Request");
			break;
		case "403":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 403 Forbidden");
			break;
		case "404":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 404 Not Found");
			break;
		case "409":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 409 Conflict");
			break;
	}
}
catch (Throwable e) {
	log.info "STEP FAILURE! --- " + e;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="ba4831ec-c569-4a82-aa70-4d7704772aea"><con:settings/><con:config><script><![CDATA[import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Calendar;
import java.text.SimpleDateFormat;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
//------------------------------------------------------//
def formatDate(recvDate) {
	try {
		String dateHolder = "";
		Pattern datePattern = Pattern.compile("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})");
		Matcher cdateMatcher = datePattern.matcher(recvDate);
		if (cdateMatcher.find()) {
			dateHolder = cdateMatcher.group(1) + "/" + cdateMatcher.group(2) + "/" +
				cdateMatcher.group(3) + " " + cdateMatcher.group(4) + ":" +
				cdateMatcher.group(5) + ":" + cdateMatcher.group(6);
			log.info "dateHolder[$dateHolder]";	
		}
	} 
	catch (Throwable e) {
		log.info "Matcher Failure!  recvDate[$recvDate] ERROR - " + e;
	} 
	finally {
		return dateHolder;	
	}
}
//------------------------------------------------------//
def getHistoryRecords(sh) {
	def tC = testRunner.getTestCase();
	def tS = tC.getTestSuite();
	def tP = tS.getProject();
	
	log.info "---------IN getHistoryRecords sh[$sh]";
	
	a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());

	int lastColon = sh.lastIndexOf(':');
	String hsh = sh.substring(lastColon +1,sh.length());
	String hresults = null;
	String hsql = """select 
 	 to_char(rawtohex(a.STREAM_HISTORY_OID)) STREAM_HISTORY_OID,
	  to_char(rawtohex(a.STREAM_HANDLE_OID)) STREAM_HANDLE_OID,
	  to_char(rawtohex(a.RIGHTS_TOKEN_OID)) RIGHTS_TOKEN_OID,
	  to_char(rawtohex(a.ACCOUNT_OID)) ACCOUNT_OID,
	  to_char(rawtohex(a.CREATED_BY_USER_OID)) CREATED_BY_USER_OID,
 	 TRANSACTION_ID,
	  STATUS,
	  STREAM_CLIENT_NICKNAME,
	  EXPIRATION_DATE,
	  CLOSED_DATE,
	  CLOSED_BY_ORG_ID,
	  CREATED_DATE,
	  to_char(rawtohex(a.CREATED_BY_NODE_OID)) CREATED_BY_NODE_OID 
	  from STREAM_DATA_HISTORY a where STREAM_HANDLE_OID =hextoraw( '$hsh') 
	  order by STATUS
	  """;

	  log.info "hsql is $hsql";

	hresults = a.SelectFromDB(hsql,tP.getPropertyValue("targetSystem").toString());
	log.info hresults;

	/*
	*  If zero length, no need to continue;
	*/
	assert hresults.length() > 0;

	try {
		def hmyXML = new XmlSlurper().parseText(hresults);
		log.info "hmyXML.ResultSet.Row.size() is [" + hmyXML.ResultSet.Row.size() + "]";
		assert hmyXML.ResultSet.Row.size() >= 1;
	}
	catch(Throwable e) {
		log.info e; 
		assert 1 == 2;
	}
	finally {
		tC.setPropertyValue("streamHistoryRows", hresults);
	}
}
//------------------------------------------------------//


def a = new generalUtils.generalUtils(log);

def url = tP.getPropertyValue("targetHost");
def urnacct = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def urnnode = tP.getPropertyValue("urnNode");
def urnErr = tP.getPropertyValue("urnerror");
def urnGenericRightsToken = tP.getPropertyValue("urnGenericRightsToken");
def streamMaxDisplayCount = tP.getPropertyValue("streamMaxDisplayCount");
def streamlimit  = tP.getPropertyValue("streamlimit");
def acct  = tC.getPropertyValue("nodeaccountid");
def sh = tC.getPropertyValue("streamhandleFULL");
def counter = tC.getPropertyValue("counter").toInteger();
def account = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrTypeStreamListView");
def XMLbody = tC.getPropertyValue("XMLbody");
def expectCreatedBy = urnnode + tC.getPropertyValue("expectDBCreatedBy");
def expectDeletedBy = urnnode + tC.getPropertyValue("expectDBDeletedBy");
def expectStatus = tC.getPropertyValue("expectDBStatus");
def expectRT = tC.getPropertyValue("rightstokenidFULL");
def expectSH = tC.getPropertyValue("streamhandleFULL");
def expectNickname = tC.getPropertyValue("expectNickname");
def expectStreamActiveCnt = tC.getPropertyValue("streamAccountActiveCount");
def expectStreamAvailCnt = streamlimit.toInteger() - expectStreamActiveCnt.toInteger();
def expectGenericRightsToken = tC.getPropertyValue("expectGenericRightsToken");

String errorID     = "";
String errorReason = "";
String errorLink   = "";
String errorHost   = "https://" + tP.getPropertyValue("targetHostq") + ":" + tP.getPropertyValue("targetPort");
String availStreamsCnt = "";
String major = tP.getPropertyValue("V1").toString();
String minor = tP.getPropertyValue("V2").toString();
String errorLinkBase = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#";
String orgRequest = url + "/rest/$major/$minor/Account/$account/Stream/$sh";
String expectHTTPstatus = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";
String expectDescription = "";
boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean processXMLFlag  = true;
boolean XMLbodynull     = false;
boolean doValidations   = true;
int displayStreamCount = 0;
int xmlIndex = 0;
int g = 0;
int streamAccountActiveCount = tC.getPropertyValue("streamAccountActiveCount").toInteger();


/*
*  Change the expectRH value if policies should result
*  in the generic rightstoken being displayed
*/
if (expectGenericRightsToken == "true") {
	expectRT = tP.getPropertyValue("urnGenericRightsToken");
}

/*
*  Added this override with the 7.7 drop.  They change the name
*  of the <ErrorLink> host.
*/
if (tP.getPropertyValue("targetURL").length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = "https://qa.q.uvvu.com:" + tP.getPropertyValue("targetPort");
}

switch (errorRespType) {
	case "SUCCESS_NO_STREAMS":
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = false;
		httpLocationHeader = false;
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
//	case "Node_status_inactive":
//		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
//		processXMLFlag  = true;
//		errorID = "Bad_Request";
//		errorReason = "Node_status_inactive";
//		errorLink = "";
//	break;
	case "Node_status_inactive":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                processXMLFlag  = true;
                                errorID = "urn:dece:errorid:org:dece:securitycontext:Bad_Request";
                                errorReason = "node_status_inactive";
                                errorLink = "$errorHost/deceerrors/error/error_response.html";
break;


	case "XML_PARSING_ERROR":
		errorLinkFlag = true;
		errorReasonFlag = false;
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID = "urn:dece:errorid:org:dece:SaxParserException";
		errorLink  = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;
	
	default:
		errorReasonFlag = true;
		expectHTTPstatus = tC.getPropertyValue("errorStatusCode");
		errorID     = urnErr + tC.getPropertyValue("errorID");
		errorReason = tC.getPropertyValue("errorReason");
		errorLink   = "$errorLinkBase" + tC.getPropertyValue("errorID");
	break;
}

log.info "errorRespType[$errorRespType]";

/*
*   HTTP HEADER CHECKS
*/
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert tC.getPropertyValue("httpConnect") == expectHTTPconnection;

/*
* Content-Length
*/
String httpContentEncoding = tC.getPropertyValue("httpContentEncoding");
String contentLength = tC.getPropertyValue("httpContentLength");
log.info "httpContentEncoding[$httpContentEncoding]";
log.info "contentLength[$contentLength]";
if (httpContentEncoding == "null" || httpContentEncoding == null) {
	log.info "Asserting contentLength.length() > 0";
	assert contentLength.toInteger() > 0;
} else {
	log.info "Asserting httpContentEncoding is chunked";
	assert tC.getPropertyValue("httpContentEncoding") == "chunked";
}

//No Content-Location
assert tC.getPropertyValue("httpContentLocation") == null;

//Content-Type
this.log.info "HTTP Content-Type:  Expect: $expectHTTPcontenttype - Received: " + tC.getPropertyValue("httpContentType");
assert tC.getPropertyValue("httpContentType") == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {
	assert XMLbody == null;
}

this.log.info "XMLBody Length [" + XMLbody.length() + "] processXMLFlag[$processXMLFlag]";

if (XMLbody != null && processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	if (errorRespType != "SUCCESS" && errorRespType != "SUCCESS_NO_STREAMS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;

		// ErrorCode
		this.log.info "Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorLink [" + myXML.Error.ErrorLink.toString() + "] errorLink[$errorLink]";
		assert myXML.Error.ErrorLink.toString() == errorLink;
		
	} else if (errorRespType == "SUCCESS_NO_STREAMS") {
		log.info "--------------SUCCESS NO STREAMS---------------";
		availStreamsCnt = myXML.@AvailableStreams.text();
		activeStreamCnt = myXML.@ActiveStreamCount.text();

		log.info "AvailableStreams[$availStreamsCnt] lte System Limit of [" + tP.getPropertyValue("streamlimit") + "]";
		assert availStreamsCnt <= tP.getPropertyValue("streamlimit");

		if (tC.getPropertyValue("streamFlagCreateDateOld") != "true") {
			log.info "Assert ActiveStreamCount == 0 -- streamFlagCreateDateOld[" + tC.getPropertyValue("streamFlagCreateDateOld") + "]";
			assert activeStreamCnt.toInteger() == 0;
			log.info "AvailableStreams - recv[$availStreamsCnt] - expect[" + streamlimit.toInteger() + "]";
			assert availStreamsCnt.toInteger() == streamlimit.toInteger();
		} else {
			log.info "ActiveStreamCount[$activeStreamCnt] == expectStreamActiveCnt[$expectStreamActiveCnt]";
			assert activeStreamCnt.toInteger() == expectStreamActiveCnt.toInteger();
			log.info "ActiveStreamCount[$availStreamsCnt] == " + streamlimit.toInteger() - activeStreamCnt.toInteger() + "]";
			assert availStreamsCnt.toInteger() == streamlimit.toInteger() - activeStreamCnt.toInteger();
		}
		
		log.info "Assert NO <Stream> Rows Present";
		assert myXML.Stream.size() == myXML.Stream.size();
		log.info "Assert NO <Stream>.<ResourceStatus> Rows Present";
		assert myXML.Stream.ResourceStatus.size() == 0;
		log.info "Assert NO <Stream>.<RightsTokenID> Rows Present";
		assert myXML.Stream.RightsTokenID.size() == 0;
		log.info "Assert NO <Stream>.<ExpirationDateTime> Rows Present";
		assert myXML.Stream.ExpirationDateTime.size() == 0;
			
		/*  AvailableStreams */
		log.info "availStreamsCnt[$availStreamsCnt] - expectStreamAvailCnt[$expectStreamAvailCnt]";
		assert availStreamsCnt.toInteger() == expectStreamAvailCnt.toInteger();

		/* ActiveStreamCount */
		log.info "activeStreamCnt[$activeStreamCnt] - expectStreamActiveCnt[$expectStreamActiveCnt]";
		assert activeStreamCnt.toInteger() == expectStreamActiveCnt.toInteger();
	} else {
		log.info "--------------STREAM DATA VERIFICATION-----------------";
		availStreamsCnt = myXML.@AvailableStreams.text();
		activeStreamCnt = myXML.@ActiveStreamCount.text();

		this.log.info "AvailableStreams[$availStreamsCnt] lte System Limit of [" + tP.getPropertyValue("streamlimit")  + "]";
		assert availStreamsCnt <= tP.getPropertyValue("streamlimit");

		log.info "Assert ActiveStreamCount == $streamAccountActiveCount";
		assert activeStreamCnt.toInteger() == streamAccountActiveCount;
		log.info "AvailableStreams - recv[$availStreamsCnt] - expect[" + streamlimit.toInteger() - streamAccountActiveCount + "]";
		assert availStreamsCnt.toInteger() == streamlimit.toInteger() - streamAccountActiveCount;
				
		/*
		*  Due to stream ordering we must work backwards from the 
		*  total number of streams created.  The newest created
		*  stream will be the first in the list.
		*/
		g = counter;

		log.info "g[$g] - counter[$counter]";

		/*
		*  By design, we never return more than 30 streams.   
		*  
		*/
		this.log.info "Recv Stream Count [" + myXML.Stream.size() + "] lessThan [$streamMaxDisplayCount]";;
		assert myXML.Stream.size() <= streamMaxDisplayCount.toInteger();
		
		while (g != 0) {
			String expectValue = tC.getPropertyValue("expectDBStatus_" + g);
			String expectcb = urnnode + tC.getPropertyValue("expectDBCreatedBy_" + g);
			String expectdb = urnnode + tC.getPropertyValue("expectDBDeletedBy_" + g);
			String expectsh = tC.getPropertyValue("streamhandleFULL_" + g);
			String expectNick = tC.getPropertyValue("expectNickname_" + g);
			String expectrt  = tC.getPropertyValue("rightstokenFULL_" + g);
			String expectGeneric = tC.getPropertyValue("expectGenericRightsToken_" + g);
			String expectRequestingUser = tC.getPropertyValue("expectRequestingUser_" + g);
			String expectCDate = tC.getPropertyValue("expectDBCreatedTime_" + g);
			String expectDDate = tC.getPropertyValue("expectDBDeletedTime_" + g);
			String streamFlagIgnoreCreatedDate = tC.getPropertyValue("streamFlagIgnoreCreatedDate_" + g);
			String streamFlagIgnoreDeletedDate = tC.getPropertyValue("streamFlagIgnoreDeletedDate_" + g);
			String expectDBCreatedByNodeType = tC.getPropertyValue("expectDBCreatedByNodeType_" + g);
			String baseRightsToken = tC.getPropertyValue("rightstokenidFULL");

			log.info "g[$g]";

			getHistoryRecords(expectsh);

			/* ---------HACKIE SMACKIE 
			*  The requestinguser displayed in streamview is NOT the 
			*  requestinguser supplied during streamcreation.  It is the 
			*  userid associated with security context (saml) which
			*  invoked the request.  Thus, all requestingusers in all
			*  streams displayed will be the same.  We will override
			*  that NOW!  LLP and LLPCS do not display the requestinguser
			*  element.
			*/
			if (tC.getPropertyValue("nodetype") == "llp" || tC.getPropertyValue("nodetype") == "llpcs") {
				expectRequestingUser = "";
			} else {
				expectRequestingUser = tC.getPropertyValue("assertionUserIdFULL");
			}
						
			/*
			*  if the nodetype is 'dlp' or 'llp' streams in 'deleted' status
			*   are not displayed.  Thus, we must adjust accordingly.
			*/
			if (tC.getPropertyValue("nodetype") == "llp" || tC.getPropertyValue("nodetype") == "dlp") {
				if (	expectValue == "active") {
					doValidations = true;
				} else {
					doValidations = false;
				}
			} else {
				doValidations = true;
			}

			/*
			*  Special processing is required for nickname just
			*  incase it contains special xml characters.
			*/
			if (expectNick != null) {
				if (expectNick.length() > 0) {
					expectNick = expectNick.replace('&amp;','&');
					expectNick = expectNick.replace('&lt;','<');
					expectNick = expectNick.replace('&gt;','>');
					expectNick = expectNick.replace('&apos;','\'');
				}
			}

			/*
			*  There maybe one or more rightstokens created by the test
			*  case.  Thus multiple streams maybe have the same 
			*  rights token.  We will assume that if we get a null
			*  rightstokenFULL_count value that only one rightstoken
			*  was created for the test and that will be contained 
			*  in rightstokenfull.
			*/
			if (expectrt == null) {
				log.info "RIGHTSTOKENFULL - Override to the baseRightsToken value [$baseRightsToken]";
				expectrt = baseRightsToken;
			}
			log.info "g[$g] - doValidations [$doValidations] - nodetype[" + tC.getPropertyValue("nodetype") + "] - expectValue[$expectValue]";
			
			if (doValidations) {
				displayStreamCount++;

				/*  StreamHandleID */
				String recvsh = myXML.Stream[xmlIndex].@StreamHandleID.text();
				log.info "xmlIndex[$xmlIndex] - StreamHandleID - recvsh[$recvsh] - expect[$expectsh]";
				assert recvsh == expectsh;

				//StreamClientNickname
				if (expectNick != null) {
					String recvnick = myXML.Stream[xmlIndex].StreamClientNickname;
					log.info "xmlIndex[$xmlIndex] - StreamClientNickname - recv[$recvnick] - expect[$expectNick]";
					assert expectNick == recvnick;
				} else {
					log.info "xmlIndex[$xmlIndex] - StreamClientNickname - Element NOT present";
					assert myXML.Stream[xmlIndex].StreamClientNickname.size() == 0;
				}
				
				// RequestingUserID
				String recvru = myXML.Stream[xmlIndex].RequestingUserID;
				log.info "xmlIndex[$xmlIndex] - RequestingUserID - recv[$recvru] - expect[$expectRequestingUser] - expectDBCreatedByNodeType[$expectDBCreatedByNodeType]";
				assert recvru == expectRequestingUser;
		
				// RightsTokenID
				String recvrt = myXML.Stream[xmlIndex].RightsTokenID.text();
				if (expectGeneric == "true") {
					expectrt = urnGenericRightsToken;
				}
				log.info "xmlIndex[$xmlIndex] - RightsTokenID - recvrt[$recvrt] - expectrt[$expectrt] - expectGeneric[$expectGeneric]";
				assert recvrt == expectrt;
				
				//ExpirationDateTime
				String recvet = myXML.Stream[xmlIndex].ExpirationDateTime;
				log.info "xmlIndex[$xmlIndex] - ExpirationDateTime - is NOT null";
				assert recvet.length() > 0;

				//CreatedBy
				String recvcb   = myXML.Stream[xmlIndex].ResourceStatus.Current.@CreatedBy.text();
				log.info "xmlIndex[$xmlIndex] - CreatedBy - recvcb[$recvcb] - expectcb[$expectcb]";
				assert recvcb == expectcb;

				//CreationDate
				if (streamFlagIgnoreCreatedDate != "true") {
					log.info "xmlIndex[$xmlIndex] - CreationDate - is NOT null";
					String recvDate = "";
					String recvcd = myXML.Stream[xmlIndex].ResourceStatus.Current.@CreationDate.text();
					recvDate = formatDate(recvcd);
					def j = a.dateDiff(recvDate,expectCDate,"seconds");
					log.info "xmlIndex[$xmlIndex] - CreationDate - recvDate[$recvDate] - expectCDate[$expectCDate] DIFF [$j]";
					assert recvcd.length() > 0;
					log.info "xmlIndex[$xmlIndex] - CreationDate - Differences less that 10 seconds";
					assert j <= 10;
				} else {
					log.info "xmlIndex[$xmlIndex] - CreationDate - IGNORED DUE TO streamFlagIgnoreCreatedDate" ;
				}

				//Value
				String recvValue = myXML.Stream[xmlIndex].ResourceStatus.Current.Value;
				log.info "xmlIndex[$xmlIndex] - Value - recvValue[$recvValue] - expectValue[$expectValue]";
				if (expectValue == "active") {
					assert recvValue == "urn:dece:type:status:active";
				} else {
					assert recvValue == "urn:dece:type:status:deleted";
				}

				//Description
				switch (expectValue) {
					case "active":
						expectDescription = "active";
						break;
					default:
						expectDescription = "deleted";
						break;
				}
				String recvDesc = myXML.Stream[xmlIndex].ResourceStatus.Current.Description;
				log.info "xmlIndex[$xmlIndex] - Description - recvDesc[$recvDesc] - expectDesc[$expectDescription]";
				assert recvDesc == expectDescription;

				/*  Nickname validation */
				if (expectNick == null || expectNick == "") {
					log.info "Asserting no <StreamClientNickname> element exists";
					assert myXML.Stream[xmlIndex].StreamClientNickname.size() == 0;
					assert myXML.Stream[xmlIndex].StreamClientNickname.text() == "";
				} else {
					assert myXML.Stream[xmlIndex].StreamClientNickname.size() == 1;
					String recvNick = myXML.Stream[xmlIndex].StreamClientNickname.text();
					log.info "xmlIndex[$xmlIndex] - recvNick[$recvNick] - expectNick[$expectNick]";
					assert recvNick == expectNick;
				}
									
				/*
				*  If the stream is deleted....
				*/
				log.info "DeletedBy length: " + myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletedBy.toString().length();
				log.info "DeletionDate length: " + myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletionDate.toString().length();
				
				if (	expectValue == "deleted") {
					String recvDeletedBy = myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletedBy.toString();
					String recvDeletionDate = myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletionDate.toString();
					
					//DeletedBy
					this.log.info "recvDeletedBy[$recvDeletedBy] - expectdb[$expectdb]";
					assert recvDeletedBy == expectdb;
					
					//DeletionDate
					if (streamFlagIgnoreDeletedDate != "true") {
						String recvDate = formatDate(recvDeletionDate);
						def j = a.dateDiff(expectDDate,recvDate,"seconds");
						log.info "xmlIndex[$xmlIndex] - DeletionDate - recvDate[$recvDate] - expectDDate[$expectDDate] DIFF [$j]";
						assert recvDate.length() > 0;
						log.info "xmlIndex[$xmlIndex] - DeletionDate - Difference less that 10 seconds";
						assert j <= 10;
					} else {
						log.info "xmlIndex[$xmlIndex] - DeletionDate - IGNORED DUE TO streamFlagIgnoreDeletedDate" ;
					}
				} else {
					assert myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletedBy.toString().length()    == 0;
					assert myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletionDate.toString().length() == 0;
				}
				/*
				*
				*  History validation
				*
				*/
				def myHistoryXML = new XmlSlurper().parseText(tC.getPropertyValue("streamHistoryRows"));

				int rCnt = myHistoryXML.ResultSet.Row.size();

				log.info "-------------HISTORY-----------------";
				log.info "History Row Count[$rCnt] - <History> Count [" + myXML.ResourceStatus.History.size() + "]";
				if (tC.getPropertyValue("expectDBDeletedBy") != "1") {
					rCnt -= 1;
				} 
				assert myXML.Stream[xmlIndex].ResourceStatus.History.Prior.size() == rCnt;
		
				for (int i = 0; i < rCnt; i++) {
					String hrecvModifiedBy = myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].@ModifiedBy.text();
					String hexpectModifiedBy = urnnode + myHistoryXML.ResultSet.Row[i].CREATED_BY_NODE_OID.text();
					log.info "$i --> hrecvModifiedBy[$hrecvModifiedBy] - hexpectModifiedBy[$hexpectModifiedBy]";
					assert hrecvModifiedBy == hexpectModifiedBy;

					String hrecvStatus = myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].Value;
					String hexpectStatus = myHistoryXML.ResultSet.Row[i].STATUS.text();
					log.info "$i --> hrecvStatus[$hrecvStatus] - hexpectStatus[$hexpectStatus]";
					if (hexpectStatus == "active") {
						assert hrecvStatus == "urn:dece:type:status:active";
					} else {
						assert hrecvStatus == "urn:dece:type:status:deleted";
					}
					
					String hrecvDescription = myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].Description;
					switch (hexpectStatus) {
						case "active": hexpectDescription = "active"; break;
						case "deleted": hexpectDescription = "deleted"; break;
						default: hexpectDescription = "deleted"; break;
					}
					log.info "$i --> hrecvDescription[$hrecvDescription] - hexpectDescription[$hexpectDescription]";
					assert hrecvDescription == hexpectDescription;
	
					String hrecvModificationDate = formatDate(myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].@ModificationDate.text());
					int subSec = myHistoryXML.ResultSet.Row[i].EXPIRATION_DATE.text().indexOf(".");
					String hexpectModificationDate = myHistoryXML.ResultSet.Row[i].CREATED_DATE.text().substring(0, subSec);
					log.info "$i --> hrecvModificationDate[$hrecvModificationDate] - hexpectModificationDate[$hexpectModificationDate]";
					assert hrecvModificationDate.replace("/","-") == hexpectModificationDate;
					
				}
			
				xmlIndex++;
			}

			/*
			*  By design, we never return more than 30 streams.   So
			*  if we encounter our 30th stream we will break out of 
			*  the XML validation routines and allow size() 
			*  invocations on the xml body to verify no additional
			*  streams were returned.
			*/
			if (displayStreamCount == streamMaxDisplayCount.toInteger()) {
				break;
			}
			
			g--;
		}

		log.info "--------------------FINAL XML size() Validations -------------------";
		log.info "ResourceStatus size: "  + myXML.Stream.ResourceStatus.size();
		log.info "ResourceStatus.Current size: " + myXML.Stream.ResourceStatus.Current.size();
		log.info "ResourceStatus.Value size: " + myXML.Stream.ResourceStatus.Current.Value.size();
		log.info "ResourceStatus.Description size: " + myXML.Stream.ResourceStatus.Current.Description.size();
		log.info "RightsTokenID size: "  + myXML.Stream.RightsTokenID.size();
		log.info "ExpirationDateTime size: " + myXML.Stream.ExpirationDateTime.size();

		log.info "Stream.size() LTE MAX allowed of " + streamMaxDisplayCount.toInteger();
		assert myXML.Stream.size() <= streamMaxDisplayCount.toInteger();
		
		log.info "Stream.size() IS -- recv[" + myXML.Stream.size() + "] Expect[$displayStreamCount]";
		assert myXML.Stream.size() == displayStreamCount;
		
		assert myXML.Stream.ResourceStatus.size() == displayStreamCount;
		assert myXML.Stream.ResourceStatus.Current.size() == displayStreamCount;
		assert myXML.Stream.ResourceStatus.Current.Value.size() == displayStreamCount;
		assert myXML.Stream.ResourceStatus.Current.Description.size() == displayStreamCount;
		assert myXML.Stream.RightsTokenID.size()  == displayStreamCount;
		assert myXML.Stream.ExpirationDateTime.size() == displayStreamCount;
	}
} 

]]></script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>TC_DECE_59089 - StreamListView - DECE - Stream list view using HEAD method</con:value></con:property><con:property><con:name>sName</con:name><con:value>DECE Test Cases</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>5490</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>dece</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:DBD14DB9B2A29C3EE0401F0A079958C7</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DBD14DB9B28D9C3EE0401F0A079958C7</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:DBD14DB9B28D9C3EE0401F0A079958C7</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_bbaac656-7767-48a9-a553-d3cc543a5aed</con:value></con:property><con:property><con:name>assert</con:name><con:value>nVdZk6LKEn73VxjOo2GziVtMd0SxiooK4vpyA4sSUARkEfTXnwJb2+7pmTPnPnTYleTyZeZHkvUzNo8e3QNxjKLEDfyqIrzW/rfdmiZssa1Gu91qN5ods9swWZZpWAyEbJMxWRNZtaoSxylS/Dgx/eS1RpMU3SDbDaprUFSPJnt086XZbW5q1QWKYuwaq7yQtWp+9Py4V4Z9raWR3wvM2I17vnlEcS+BvRlQRz2s2TPvmGpvP28oy4DRm5MkYY8g4IuFIPI8+AKDI/GT+KTz04p7M9f2zSSN0HtMK36tvdtmWfaSMS9BZBM0SZIE2SWwjhW79o/aW+VujCzF3wW3M2/6ge9C03OvZgFKRYkTWFXg2UHkJs7xN64pgiIL1w2Uwwakmv6PGvERoET3l54+gYxisxE7JnV3pqMdipAPUXWuK6+1H3/XwZutEZl+vAuiY/zl/N8gIf+MvCBEViO+Z3ZH9/cevynX208Ee4oPvTR2z2hc0CQ0IYqr0wjt3Hzkxph8Vlwt21/N4zvDEPwvLflJPOPEsIlvKiO4NoqT/6dfz726eVmYXorejmEQEPud5C244WAC2f0+XJ4CZaYftNcSwrPyDdSj1e/nr0R98OrdaOIIgbUktsZ0HQY0gtNFvs82QtjMwd7dSMNJZ99ehcw6ic7MtK4u+z4j9y+U4fRRvNwsTsOJq2yOC2Cd1FYFDQaiJ1B65hNsu77wbUqkcp9w/WNIwO5cVg/JuDMeELlKB/GaIQbAOmzs/ljZwGAYXML0vHHlFmSHrpdX9pzsjlvqqM6Zy+R4cC6w8/qR03MORV5DdCmTLP5fsWRXMBPzceCLSbHDr2eC3lRFEdIrz4PLzAaZwgEb/+3BmLMPJ+fgyt2M5ICmSUDgOW8vjlRwkAE1FzlH5RcLNeevYMDZ4wU2NCrA23CqLmZCthYWmtYXM8ew5MVlK3vp5iqOVRCXxryjirq4EHRDVFUQ3GS5KmzlfK/O1EzR1kIFOxDEPLxacjdBcu5CWmHVGUuvZ2y6WS2wXLqMjuPz1hA9lVdlfnaSZ8qWETRxAPT1EtJSim2vI0ybynrOPRkNQrQHSMpIHBNcVeOQqcacHgu6WcqMzzJVkQeqFme8VmYlV8RssJhfP2rBcypvHcVcNMD0Vgto8NKY3KwGsblkfVUHmWCXxkMxsyZ3IKpGZhX+VquRmOmiPh9Lqq5kIihlgph58ZYeO1vZOUNGywcG2D83htfEpeTj575+hhf2VDFlCWyPCwoyugNd1jVXQWZvOpmgrQfDYKNgN2OgiRynAQyIBEVquP4cGHELdhK6XdpFo50UHJETVVQqGB7O15zsuMzEno6XrLA7tKeyO2VMyyEUD9J75gAUBVlDytFMS18TuuC719ZkOF8hN1pfkzGrUS23w1b0ZTpfCYHXtvqr9XxYz9dQMybT2Xw5veb5+LTvXL2kP+H60WygCvZkjNA0hnWCNCXO6Agsv+7vMZ92OonYCrBVDgB5b9uiiwnM9fc3EvZ1VcTkBSqfyfySl2dAluuiwgmatpMcagrlRTqnxqoiWh4u02W90r3KhucE3CnSXG7CNS2RGwNYpTOtKUq2NmfrgxXaaGPPWCQgCxc7n6JIOdT6OzWzoVowwFKyGYffIq6SKmBuTsIBmQ8XLZI6aZY3mHXBnMln9CGfOPbmcrA3B9yU9dOrszaAtzCeOKZgii0rmiHqKujc3rdcVeaM7sFjHm6PMBcM3LPSODA4UZc0cp4LAhjeZLEB6DxeX8W9youlfQXkqolpcd6unHjtj92JIaaYtOkTXfZbmvxXjhUUq3zm2IkHGvjKMfHGMRHsTnWlI1Ax2+LDeJnZnCyetPZiNOiGpLYaHSpcXSLsxPWaE7+TGcP6krpkbWevLZddRXD4ur9bO8w24UjzCjU0OLRlVz8IfqvpXdSRqrFzl/Au5B6dsnhUGSuULzLJVSK6UVrnjhv3eL0yTXp+nM7SszI3hzF1cbanZTfbT/stgojkC3ttb86atArg+vYd+TokH8LbGCWeB+ynCXzfvWbpdo9gcj8W32FFqEr442gmf97jColrNXalai8slsE4QX5Seyusih2ul+JNz7V6+Mt5O4NOl6EkUmgxvNRpCYxINkl8BmS7223RfPO+7N1QfIHIB/7OLWIV6+ztY/1ngPDY2yIzQlHtD56KOlUVX8fbR+DHyAheayxLk5IotltAktotsUN1OZ5km3ybpFpNtsPUquMgmfiTCOwSFH1syDT5dUPWEXRDFxVr9PsuESe4ECfznCYe/XI2X3yU4j07KlbdXpskaSJ2j6GHCrjEMbBSD72ETliWhYhvv3TDhHEpZZtdstxxfpvd12f3QmAdyy0U4iIXDuEmom9WfeqeyC8JM99eCe7uQWq5xSqDq5pELrwh+fzogyQFOx4MKVK6Y36o/rUp9asp8QdExNdiPCJZZ/cp7v3CgndwvKWV95QY9/Jkvpxe0vM5/ehehN0TFIH/myGY4jXyYgQH5BMPF8RfbfAP1F8iP+Sf8aWJ488S/PofMdWq5fHfr2+frHEJEpQn38l4D1/YiuB/vNPBHiz0sHiKf7Ig+sjhO19PcTDkYnS5vl2citX78psGwwC7dfH4CqJn5985+C74Z+GjXg8sCSbGNk3Q759Ui7n0WjMhDFI/UYRaKXielSXO5BKi3ofSL27K5ff9NpPHv73NrNTRDDroaNYeuu6/KzfcsvMQYavYLbG81nJ8McfBfftpNr8D/Dye2xLd7kpdPKKblEA9j2cSdFuPAn7K5O0X8a+Sp5p+pfbbPw==</con:value></con:property><con:property><con:name>counter</con:name><con:value>1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>1</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:A87F279F9F0D41D1E0401F0A07990A96</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:A8931F0D63CF86D3E0401F0A079962C4</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>expectNickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectStreamActiveCnt</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentEncoding</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value>1</con:value></con:property><con:property><con:name>streamHistoryRows</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate</con:name><con:value>false</con:value></con:property><con:property><con:name>username</con:name><con:value>pjgorg1full2</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>expectGenericRightsToken</con:name><con:value>false</con:value></con:property><con:property><con:name>expectStreamAvailCnt</con:name><con:value>12</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9C687F959B4B13ABE0401F0A059957EB</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:DBD14DB9B2A29C3EE0401F0A079958C7</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:DBD14DB9B28D9C3EE0401F0A079958C7</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9C687F959B4B13ABE0401F0A059957EB</con:value></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/05/03 13:35:45</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorStatusCode</con:name><con:value/></con:property><con:property><con:name>errorReason</con:name><con:value/></con:property><con:property><con:name>errorID</con:name><con:value/></con:property><con:property><con:name>streamhandleFULL_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C5AAB62B5BD82DEBE0401F0A05993203</con:value></con:property><con:property><con:name>rightstokenidFULL_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/07/25 16:11:25</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C5AAB62B5BDB2DEBE0401F0A05993203</con:value></con:property><con:property><con:name>rightstokenidFULL_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B65694912BBFE26E0401F0A07996B66</con:value></con:property><con:property><con:name>expectDBDeletedTime_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/07/25 16:11:50</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C27F26EC3521DDD5E0401F0A059963C9</con:value></con:property><con:property><con:name>rightstokenidFULL_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9115</con:value></con:property><con:property><con:name>expectDBDeletedBy_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9115</con:value></con:property><con:property><con:name>expectNickname_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectDBDeletedTime_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/15 07:58:10</con:value></con:property><con:property><con:name>expectDBCreatedTime_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/15 07:58:01</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>streamhandleFULL_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C27F26EC3528DDD5E0401F0A059963C9</con:value></con:property><con:property><con:name>rightstokenidFULL_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9115</con:value></con:property><con:property><con:name>expectDBDeletedBy_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9115</con:value></con:property><con:property><con:name>expectNickname_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectDBDeletedTime_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/15 07:58:44</con:value></con:property><con:property><con:name>expectDBCreatedTime_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/15 07:58:35</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>streamhandleFULL_8</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C27F2F9D6DC99C1EE0401F0A0799522D</con:value></con:property><con:property><con:name>rightstokenidFULL_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_8</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_8</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9115</con:value></con:property><con:property><con:name>expectDBDeletedBy_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_8</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectDBDeletedTime_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_8</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/15 07:59:06</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_8</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>streamhandleFULL_9</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C27F2F9D6DCC9C1EE0401F0A0799522D</con:value></con:property><con:property><con:name>rightstokenidFULL_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_9</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_9</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9115</con:value></con:property><con:property><con:name>expectDBDeletedBy_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_9</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B7969EE9EA1770CE0401F0A079930AA</con:value></con:property><con:property><con:name>expectDBDeletedTime_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_9</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/15 07:59:27</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_9</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>streamhandleFULL_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C2557D2BCBF3A8C1E0401F0A0799044C</con:value></con:property><con:property><con:name>rightstokenidFULL_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:15:58</con:value></con:property><con:property><con:name>expectDBCreatedTime_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:15:49</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C2557D2BCBF8A8C1E0401F0A0799044C</con:value></con:property><con:property><con:name>rightstokenidFULL_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:16:31</con:value></con:property><con:property><con:name>expectDBCreatedTime_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:16:22</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255865FE6CCA1E5E0401F0A07991463</con:value></con:property><con:property><con:name>rightstokenidFULL_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:17:02</con:value></con:property><con:property><con:name>expectDBCreatedTime_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:16:53</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255865FE6D1A1E5E0401F0A07991463</con:value></con:property><con:property><con:name>rightstokenidFULL_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:17:36</con:value></con:property><con:property><con:name>expectDBCreatedTime_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:17:26</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_15</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255865FE6D6A1E5E0401F0A07991463</con:value></con:property><con:property><con:name>rightstokenidFULL_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_15</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_15</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_15</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_15</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_15</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:18:09</con:value></con:property><con:property><con:name>expectDBCreatedTime_15</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:17:59</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_15</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255865FE6DBA1E5E0401F0A07991463</con:value></con:property><con:property><con:name>rightstokenidFULL_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:18:41</con:value></con:property><con:property><con:name>expectDBCreatedTime_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:18:32</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C2558EFFF324194CE0401F0A07992648</con:value></con:property><con:property><con:name>rightstokenidFULL_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:19:14</con:value></con:property><con:property><con:name>expectDBCreatedTime_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:19:05</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C2558EFFF329194CE0401F0A07992648</con:value></con:property><con:property><con:name>rightstokenidFULL_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:19:46</con:value></con:property><con:property><con:name>expectDBCreatedTime_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:19:36</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C2558EFFF32E194CE0401F0A07992648</con:value></con:property><con:property><con:name>rightstokenidFULL_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:20:19</con:value></con:property><con:property><con:name>expectDBCreatedTime_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:20:09</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C2558EFFF333194CE0401F0A07992648</con:value></con:property><con:property><con:name>rightstokenidFULL_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:20:50</con:value></con:property><con:property><con:name>expectDBCreatedTime_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:20:41</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_21</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C2558EFFF338194CE0401F0A07992648</con:value></con:property><con:property><con:name>rightstokenidFULL_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_21</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_21</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_21</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_21</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_21</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:21:24</con:value></con:property><con:property><con:name>expectDBCreatedTime_21</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:21:15</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_21</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C25597DB9C81D1A8E0401F0A05990160</con:value></con:property><con:property><con:name>rightstokenidFULL_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:21:56</con:value></con:property><con:property><con:name>expectDBCreatedTime_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:21:47</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C25597DB9C87D1A8E0401F0A05990160</con:value></con:property><con:property><con:name>rightstokenidFULL_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:22:29</con:value></con:property><con:property><con:name>expectDBCreatedTime_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:22:20</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C25597DB9C8CD1A8E0401F0A05990160</con:value></con:property><con:property><con:name>rightstokenidFULL_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:23:02</con:value></con:property><con:property><con:name>expectDBCreatedTime_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:22:53</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_25</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C25597DB9C91D1A8E0401F0A05990160</con:value></con:property><con:property><con:name>rightstokenidFULL_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_25</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_25</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_25</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_25</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_25</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:23:36</con:value></con:property><con:property><con:name>expectDBCreatedTime_25</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:23:27</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_25</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255A09FA77AC30AE0401F0A05991283</con:value></con:property><con:property><con:name>rightstokenidFULL_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:24:09</con:value></con:property><con:property><con:name>expectDBCreatedTime_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:23:59</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255A09FA77FC30AE0401F0A05991283</con:value></con:property><con:property><con:name>rightstokenidFULL_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:24:41</con:value></con:property><con:property><con:name>expectDBCreatedTime_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:24:31</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255A09FA784C30AE0401F0A05991283</con:value></con:property><con:property><con:name>rightstokenidFULL_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:25:17</con:value></con:property><con:property><con:name>expectDBCreatedTime_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:25:05</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255A09FA789C30AE0401F0A05991283</con:value></con:property><con:property><con:name>rightstokenidFULL_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:25:51</con:value></con:property><con:property><con:name>expectDBCreatedTime_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:25:42</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255A09FA78EC30AE0401F0A05991283</con:value></con:property><con:property><con:name>rightstokenidFULL_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:26:25</con:value></con:property><con:property><con:name>expectDBCreatedTime_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:26:15</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_31</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255A9C55FF5D015E0401F0A059924E5</con:value></con:property><con:property><con:name>rightstokenidFULL_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_31</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_31</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_31</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_31</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:26:50</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_31</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_32</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255A9C55FF8D015E0401F0A059924E5</con:value></con:property><con:property><con:name>rightstokenidFULL_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_32</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_32</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_32</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B65694912BBFE26E0401F0A07996B66</con:value></con:property><con:property><con:name>expectDBDeletedTime_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_32</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:27:12</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_32</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_33</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255A9C55FFBD015E0401F0A059924E5</con:value></con:property><con:property><con:name>rightstokenidFULL_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_33</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_33</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_33</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9C687F959B4B13ABE0401F0A059957EB</con:value></con:property><con:property><con:name>expectDBDeletedTime_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_33</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:27:32</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_33</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C248EB2BA3145732E0401F0A07993200</con:value></con:property><con:property><con:name>rightstokenidFULL_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:15:46</con:value></con:property><con:property><con:name>expectDBCreatedTime_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:15:37</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C248EB2BA3195732E0401F0A07993200</con:value></con:property><con:property><con:name>rightstokenidFULL_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:16:12</con:value></con:property><con:property><con:name>expectDBCreatedTime_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:16:02</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C248F2913CADBAF3E0401F0A079941EE</con:value></con:property><con:property><con:name>rightstokenidFULL_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:16:36</con:value></con:property><con:property><con:name>expectDBCreatedTime_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:16:26</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_38</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C248F2913CB2BAF3E0401F0A079941EE</con:value></con:property><con:property><con:name>rightstokenidFULL_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_38</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_38</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_38</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_38</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_38</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:17:01</con:value></con:property><con:property><con:name>expectDBCreatedTime_38</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:16:51</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_38</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C248F2913CB7BAF3E0401F0A079941EE</con:value></con:property><con:property><con:name>rightstokenidFULL_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:17:27</con:value></con:property><con:property><con:name>expectDBCreatedTime_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:17:17</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_40</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C248F2913CBCBAF3E0401F0A079941EE</con:value></con:property><con:property><con:name>rightstokenidFULL_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_40</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_40</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_40</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_40</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_40</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:17:53</con:value></con:property><con:property><con:name>expectDBCreatedTime_40</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:17:42</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_40</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QC_Id</con:name><con:value>79611</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AA87F279F9F0D41D1E0401F0A07990A96</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StreamListViewQHost" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" disabled="true" id="d6bea145-b114-4a15-aa6e-1dcc78676542"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="b17c88cc-4e7b-493c-8ffd-98fca85b297f"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("nodetype",null);
tC.setPropertyValue("streamhandleFULL",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("expectErrTypeStreamListView",null);
tC.setPropertyValue("expectDBCreatedBy",null);
tC.setPropertyValue("expectDBDeletedBy",null);
tC.setPropertyValue("expectDBStatus",null);
tC.setPropertyValue("expectNickname",null);
tC.setPropertyValue("expectStreamActiveCnt",null);
tC.setPropertyValue("httpContentEncoding",null);
tC.setPropertyValue("streamAccountActiveCount",null);
tC.setPropertyValue("streamHistoryRows",null);
tC.setPropertyValue("streamFlagCreateDateOld",null);
tC.setPropertyValue("streamFlagIgnoreCreatedDate",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="73a90af5-433e-49c5-a455-bd42b8090874"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

int counter;
String sh;
String rt;
String shCreatedBy;
String shValue;
String shExpireDate;
String nickname;
String expectGenericRightsToken;
String expectRequestingUser;
String expectDBDeletedTime;
String expectDBCreatedTime;
String streamFlagCreateDateOld;
String streamFlagIgnoreCreatedDate;
String streamFlagIgnoreDeletedDate;
String expectDBCreatedByNodeType;

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("nodetype",callTC.getPropertyValue("nodetype"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("rightstokenid",callTC.getPropertyValue("rightstokenid"));
tC.setPropertyValue("rightstokenidFULL",callTC.getPropertyValue("rightstokenidFULL"));
tC.setPropertyValue("streamhandleFULL",callTC.getPropertyValue("streamhandleFULL"));
tC.setPropertyValue("expectErrTypeStreamListView",callTC.getPropertyValue("expectErrTypeStreamListView"));
tC.setPropertyValue("expectDBCreatedBy",callTC.getPropertyValue("expectDBCreatedBy"));
tC.setPropertyValue("expectDBDeletedBy",callTC.getPropertyValue("expectDBDeletedBy"));
tC.setPropertyValue("expectDBStatus",callTC.getPropertyValue("expectDBStatus"));
tC.setPropertyValue("expectNickname",callTC.getPropertyValue("nickname"));
tC.setPropertyValue("counter",callTC.getPropertyValue("counter"));
tC.setPropertyValue("expectGenericRightsToken",callTC.getPropertyValue("expectGenericRightsToken"));
tC.setPropertyValue("expectStreamAvailCnt",callTC.getPropertyValue("expectStreamAvailCnt"));
tC.setPropertyValue("expectStreamActiveCnt",callTC.getPropertyValue("expectStreamActiveCnt"));
tC.setPropertyValue("expectRequestingUser",callTC.getPropertyValue("expectRequestingUser"));
tC.setPropertyValue("streamAccountActiveCount",callTC.getPropertyValue("streamAccountActiveCount"));
tC.setPropertyValue("streamFlagCreateDateOld",callTC.getPropertyValue("streamFlagCreateDateOld"));
tC.setPropertyValue("streamFlagIgnoreCreatedDate",callTC.getPropertyValue("streamFlagIgnoreCreatedDate"));
tC.setPropertyValue("expectDBCreatedByNodeType",callTC.getPropertyValue("expectDBCreatedByNodeType"));
def assertionAccountIdFULLEncoded = URLEncoder.encode(tC.getPropertyValue("assertionAccountIdFULL"),"UTF-8");
tC.setPropertyValue("assertionAccountIdFULLEncoded",assertionAccountIdFULLEncoded)

if (tC.getPropertyValue("expectErrTypeStreamListView") == null || tC.getPropertyValue("expectErrTypeStreamListView") == "") {
	tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS")
}
if (tC.getPropertyValue("expectDBStatus") == null || tC.getPropertyValue("expectDBStatus") == "") {
	tC.setPropertyValue("expectDBStatus","active")
}
if (tC.getPropertyValue("expectGenericRightsToken") == null || tC.getPropertyValue("expectGenericRightsToken") == "") {
	tC.setPropertyValue("expectGenericRightsToken","false")
}
if (tC.getPropertyValue("expectStreamAvailCnt") == null || tC.getPropertyValue("expectStreamAvailCnt") == "") {
	tC.setPropertyValue("expectStreamAvailCnt",tP.getPropertyValue("streamlimit"))
}
if (tC.getPropertyValue("expectStreamActiveCnt") == null || tC.getPropertyValue("expectStreamActiveCnt") == "") {
	tC.setPropertyValue("expectStreamActiveCnt","0")
}
if (tC.getPropertyValue("streamAccountActiveCount") == null || tC.getPropertyValue("streamAccountActiveCount") == "") {
	tC.setPropertyValue("streamAccountActiveCount","0")
}
if (tC.getPropertyValue("streamFlagIgnoreCreatedDate") == null || tC.getPropertyValue("streamFlagIgnoreCreatedDate") == "") {
	tC.setPropertyValue("streamFlagIgnoreCreatedDate","false")
}

if (tC.getPropertyValue("counter") == null ||
    tC.getPropertyValue("counter") == "") {
    		tC.setPropertyValue("counter","1");
    }
    
counter = tC.getPropertyValue("counter").toInteger();

for (int i = 0; i &lt;= counter; i++) {
	
	sh           = "streamhandleFULL_"  + (i + 1);
	rt           = "rightstokenidFULL_"   + (i + 1);
	shCreatedBy  = "expectDBCreatedBy_" + (i + 1);
	shDeletedBy  = "expectDBDeletedBy_" + (i + 1);
	shValue      = "expectDBStatus_"    + (i + 1);
	nickname     = "expectNickname_"    + (i + 1);
	expectRequestingUser = "expectRequestingUser_" + (i + 1);
	expectGenericRightsToken = "expectGenericRightsToken_" + (i + 1);
	expectDBDeletedTime = "expectDBDeletedTime_" + (i + 1);
	expectDBCreatedTime = "expectDBCreatedTime_" + (i + 1);
	streamFlagCreateDateOld = "streamFlagCreateDateOld_" + (i + 1);
	streamFlagIgnoreCreatedDate = "streamFlagIgnoreCreatedDate_" + (i + 1);
	streamFlagIgnoreDeletedDate = "streamFlagIgnoreDeletedDate_" + (i + 1);
	expectDBCreatedByNodeType = "expectDBCreatedByNodeType_" + (i + 1);
		
	tC.setPropertyValue(sh,callTC.getPropertyValue(sh));
	tC.setPropertyValue(rt,callTC.getPropertyValue(rt));
	tC.setPropertyValue(shValue,callTC.getPropertyValue(shValue));
	tC.setPropertyValue(shCreatedBy,callTC.getPropertyValue(shCreatedBy));
	tC.setPropertyValue(shDeletedBy,callTC.getPropertyValue(shDeletedBy));
	tC.setPropertyValue(nickname,callTC.getPropertyValue(nickname));
	tC.setPropertyValue(expectGenericRightsToken,callTC.getPropertyValue(expectGenericRightsToken));
	tC.setPropertyValue(expectRequestingUser,callTC.getPropertyValue(expectRequestingUser));
	tC.setPropertyValue(expectDBDeletedTime,callTC.getPropertyValue(expectDBDeletedTime));
	tC.setPropertyValue(expectDBCreatedTime,callTC.getPropertyValue(expectDBCreatedTime));
	tC.setPropertyValue(streamFlagCreateDateOld,callTC.getPropertyValue(streamFlagCreateDateOld));
	tC.setPropertyValue(streamFlagIgnoreCreatedDate,callTC.getPropertyValue(streamFlagIgnoreCreatedDate));
	tC.setPropertyValue(streamFlagIgnoreDeletedDate,callTC.getPropertyValue(streamFlagIgnoreDeletedDate));
	tC.setPropertyValue(expectDBCreatedByNodeType,callTC.getPropertyValue(expectDBCreatedByNodeType));
}


</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="7723d129-35da-4f92-9b59-d11460c4dad9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("GET - StreamView");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - StreamListView" id="328546d8-8695-4167-848b-ef658a10bed8"><con:settings/><con:config service="DECE StreamCreate API" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/List" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - StreamListView" mediaType="application/xml" sslKeystore="9115_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="Tester" value="${#Project#tester}"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="f8654e5d-0195-4ce1-b0b6-00fcba9eca5b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('GET - StreamListView');

/*
*  Get the XML body raw 
*/
//rawResp = new ByteArrayOutputStream();
//rawResp = tStep.httpRequest.response.getRawResponseData();
//def expXML  = new String(rawResp);

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String contentEncoding = null;

expXML     = tStep.httpRequest.response.getResponseContent();

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			contentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
tC.setPropertyValue("httpContentEncoding", contentEncoding);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract ERROR table information" id="902da1ee-ac89-4a1a-9460-cdfc96af0095"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def a = new dbUtils.dbErrors(log,tP.getPropertyValue("targetSystem"));

tC.setPropertyValue("errorStatusCode",null);
tC.setPropertyValue("errorReason",null);
tC.setPropertyValue("errorID",null);

String xmlData = "";
String errId = "";

log.info "expectErrTypeStreamView[" + tC.getPropertyValue("expectErrTypeStreamListView") + "]";

switch (tC.getPropertyValue("expectErrTypeStreamListView")) {
	case "ADULT_CONTENT_NOT_ALLOWED":
		errId = "Policy:AdultContentNotAllowed";
		break;
	case "ACCOUNT_NOT_ACTIVE":
		errId = "AccountNotActive";
		break;
	case "API_NOT_AUTH":
		errId = "Security:RoleInvalid";
		break;
	case "BLOCKED_ACCESS_UNRATED":
		errId = "Policy:UnratedContentBlocked";
		break;
	case "CID_NOT_ACTIVE":
		errId = "ContentIDNotActive";
		break;
	case "CID_NOT_FOUND":
		errId = "ContentIDNotFound";
		break;
	case "LOGICAL_ASSET_NOT_ACTIVE":
		errId = "AssetLogicalIDNotActive";
		break;
	case "RT_RENT_EXPIRED":
		errId = "RightsTokenRentalExpired";
		break;
	case "RT_NOT_FOUND":
		errId = "RightsTokenNotFound";
		break;
	case "RT_NOT_ACTIVE":
		errId = "RightsTokenNotActive";
		break;
	case "RATING_POLICY":
		errId = "RatingPolicyExists";
		break;
	case "CID_NOT_GRANTED":
	case "STREAM_RIGHTS_NOT_GRANTED":
		errId = "StreamRightsNotGranted";
		break;
	case "STREAM_COUNT_EXCEEDED":
		errId = "AccountStreamCountExceedMaxLimit";
		break;
	case "STREAM_COUNT_EXCEEDED_USER":
		errId = "UserStreamCountExceedMaxLimit";
		break;
	case "STREAM_INVALID_TRANS":
		errId = "StreamTransactionIdInvalid";
		break;
	case "STREAM_ACCOUNTID_MISMATCH":
		errId = "AccountIdUnmatched";
		break;		
	case "STREAM_NICKNAME_TOO_LONG":
		errId = "StreamClientNicknameTooLong";
		break;		
	case "STREAM_WINDOW_NOT_ALLOWED":
		errId = "StreamAssetWindowNotAllowed";
		break;
	case "STREAM_OWNER_MISMATCH":
		errId = "StreamOwnerMismatch";
		break;
	case "STREAM_NOT_FOUND":
		errId = "StreamNotFound";
		break;
	case "STREAM_NOT_ACTIVE":
		errId = "StreamNotActive";
		break;
	case "USER_NOT_MATCH_TOKEN":
		errId = "UserIdUnmatched";
		break;
	case "USER_NOT_ACTIVE":
		errId = "UserNotActive";
		break;
	case "USER_NOT_SUPPLIED":
		errId = "UserNotSpecified";
		break;
	default:
		errId = tC.getPropertyValue("expectErrTypeStreamListView").toString();
		break;
}

try {
	xmlData = a.errGetIdInfo(errId);
	
	assert xmlData.trim().length() > 1;

	def myXML = new XmlSlurper().parseText(xmlData);

	log.info myXML.ResultSet.Row.size();
	tC.setPropertyValue("errorStatusCode", myXML.ResultSet.Row[0].STATUS_CODE.toString());
	tC.setPropertyValue("errorReason", myXML.ResultSet.Row[0].REASON.toString());
	tC.setPropertyValue("errorID", myXML.ResultSet.Row[0].ERROR_ID.toString());

	/*
	*  The DB does not contain the complete HTTP status
	*  string, only the code.  Thus, we must adjust.
	*/
	switch (tC.getPropertyValue("errorStatusCode")) {
		case "400":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 400 Bad Request");
			break;
		case "403":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 403 Forbidden");
			break;
		case "404":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 404 Not Found");
			break;
		case "409":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 409 Conflict");
			break;
	}
}
catch (Throwable e) {
	log.info "STEP FAILURE! --- " + e;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="d87dabb7-435e-4bdb-b488-4849db41c73f"><con:settings/><con:config><script><![CDATA[import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Calendar;
import java.text.SimpleDateFormat;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
//------------------------------------------------------//
def formatDate(recvDate) {
	try {
		String dateHolder = "";
		Pattern datePattern = Pattern.compile("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})");
		Matcher cdateMatcher = datePattern.matcher(recvDate);
		if (cdateMatcher.find()) {
			dateHolder = cdateMatcher.group(1) + "/" + cdateMatcher.group(2) + "/" +
				cdateMatcher.group(3) + " " + cdateMatcher.group(4) + ":" +
				cdateMatcher.group(5) + ":" + cdateMatcher.group(6);
			log.info "dateHolder[$dateHolder]";	
		}
	} 
	catch (Throwable e) {
		log.info "Matcher Failure!  recvDate[$recvDate] ERROR - " + e;
	} 
	finally {
		return dateHolder;	
	}
}
//------------------------------------------------------//
def getHistoryRecords(sh) {
	def tC = testRunner.getTestCase();
	def tS = tC.getTestSuite();
	def tP = tS.getProject();
	
	log.info "---------IN getHistoryRecords sh[$sh]";
	
	a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());

	int lastColon = sh.lastIndexOf(':');
	String hsh = sh.substring(lastColon +1,sh.length());
	String hresults = null;
	String hsql = """select 
 	 to_char(rawtohex(a.STREAM_HISTORY_OID)) STREAM_HISTORY_OID,
	  to_char(rawtohex(a.STREAM_HANDLE_OID)) STREAM_HANDLE_OID,
	  to_char(rawtohex(a.RIGHTS_TOKEN_OID)) RIGHTS_TOKEN_OID,
	  to_char(rawtohex(a.ACCOUNT_OID)) ACCOUNT_OID,
	  to_char(rawtohex(a.CREATED_BY_USER_OID)) CREATED_BY_USER_OID,
 	 TRANSACTION_ID,
	  STATUS,
	  STREAM_CLIENT_NICKNAME,
	  EXPIRATION_DATE,
	  CLOSED_DATE,
	  CLOSED_BY_ORG_ID,
	  CREATED_DATE,
	  to_char(rawtohex(a.CREATED_BY_NODE_OID)) CREATED_BY_NODE_OID 
	  from STREAM_DATA_HISTORY a where STREAM_HANDLE_OID =hextoraw( '$hsh') 
	  order by STATUS
	  """;

	  log.info "hsql is $hsql";

	hresults = a.SelectFromDB(hsql,tP.getPropertyValue("targetSystem").toString());
	log.info hresults;

	/*
	*  If zero length, no need to continue;
	*/
	assert hresults.length() > 0;

	try {
		def hmyXML = new XmlSlurper().parseText(hresults);
		log.info "hmyXML.ResultSet.Row.size() is [" + hmyXML.ResultSet.Row.size() + "]";
		assert hmyXML.ResultSet.Row.size() >= 1;
	}
	catch(Throwable e) {
		log.info e; 
		assert 1 == 2;
	}
	finally {
		tC.setPropertyValue("streamHistoryRows", hresults);
	}
}
//------------------------------------------------------//


def a = new generalUtils.generalUtils(log);

def url = tP.getPropertyValue("targetHost");
def urnacct = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def urnnode = tP.getPropertyValue("urnNode");
def urnErr = tP.getPropertyValue("urnerror");
def urnGenericRightsToken = tP.getPropertyValue("urnGenericRightsToken");
def streamMaxDisplayCount = tP.getPropertyValue("streamMaxDisplayCount");
def streamlimit  = tP.getPropertyValue("streamlimit");
def acct  = tC.getPropertyValue("nodeaccountid");
def sh = tC.getPropertyValue("streamhandleFULL");
def counter = tC.getPropertyValue("counter").toInteger();
def account = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrTypeStreamListView");
def XMLbody = tC.getPropertyValue("XMLbody");
def expectCreatedBy = urnnode + tC.getPropertyValue("expectDBCreatedBy");
def expectDeletedBy = urnnode + tC.getPropertyValue("expectDBDeletedBy");
def expectStatus = tC.getPropertyValue("expectDBStatus");
def expectRT = tC.getPropertyValue("rightstokenidFULL");
def expectSH = tC.getPropertyValue("streamhandleFULL");
def expectNickname = tC.getPropertyValue("expectNickname");
def expectStreamActiveCnt = tC.getPropertyValue("streamAccountActiveCount");
def expectStreamAvailCnt = streamlimit.toInteger() - expectStreamActiveCnt.toInteger();
def expectGenericRightsToken = tC.getPropertyValue("expectGenericRightsToken");

String errorID     = "";
String errorReason = "";
String errorLink   = "";
String errorHost   = "https://" + tP.getPropertyValue("targetHostq") + ":" + tP.getPropertyValue("targetPort");
String availStreamsCnt = "";
String major = tP.getPropertyValue("V1").toString();
String minor = tP.getPropertyValue("V2").toString();
String errorLinkBase = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#";
String orgRequest = url + "/rest/$major/$minor/Account/$account/Stream/$sh";
String expectHTTPstatus = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";
String expectDescription = "";
boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean processXMLFlag  = true;
boolean XMLbodynull     = false;
boolean doValidations   = true;
int displayStreamCount = 0;
int xmlIndex = 0;
int g = 0;
int streamAccountActiveCount = tC.getPropertyValue("streamAccountActiveCount").toInteger();


/*
*  Change the expectRH value if policies should result
*  in the generic rightstoken being displayed
*/
if (expectGenericRightsToken == "true") {
	expectRT = tP.getPropertyValue("urnGenericRightsToken");
}

/*
*  Added this override with the 7.7 drop.  They change the name
*  of the <ErrorLink> host.
*/
if (tP.getPropertyValue("targetURL").length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = "https://qa.q.uvvu.com:" + tP.getPropertyValue("targetPort");
}

switch (errorRespType) {
	case "SUCCESS_NO_STREAMS":
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = false;
		httpLocationHeader = false;
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
//	case "Node_status_inactive":
//		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
//		processXMLFlag  = true;
//		errorID = "Bad_Request";
//		errorReason = "Node_status_inactive";
//		errorLink = "";
//	break;
	case "Node_status_inactive":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                processXMLFlag  = true;
                                errorID = "urn:dece:errorid:org:dece:securitycontext:Bad_Request";
                                errorReason = "node_status_inactive";
                                errorLink = "$errorHost/deceerrors/error/error_response.html";
break;


	case "XML_PARSING_ERROR":
		errorLinkFlag = true;
		errorReasonFlag = false;
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID = "urn:dece:errorid:org:dece:SaxParserException";
		errorLink  = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;
	
	default:
		errorReasonFlag = true;
		expectHTTPstatus = tC.getPropertyValue("errorStatusCode");
		errorID     = urnErr + tC.getPropertyValue("errorID");
		errorReason = tC.getPropertyValue("errorReason");
		errorLink   = "$errorLinkBase" + tC.getPropertyValue("errorID");
	break;
}

log.info "errorRespType[$errorRespType]";

/*
*   HTTP HEADER CHECKS
*/
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert tC.getPropertyValue("httpConnect") == expectHTTPconnection;

/*
* Content-Length
*/
String httpContentEncoding = tC.getPropertyValue("httpContentEncoding");
String contentLength = tC.getPropertyValue("httpContentLength");
log.info "httpContentEncoding[$httpContentEncoding]";
log.info "contentLength[$contentLength]";
if (httpContentEncoding == "null" || httpContentEncoding == null) {
	log.info "Asserting contentLength.length() > 0";
	assert contentLength.toInteger() > 0;
} else {
	log.info "Asserting httpContentEncoding is chunked";
	assert tC.getPropertyValue("httpContentEncoding") == "chunked";
}

//No Content-Location
assert tC.getPropertyValue("httpContentLocation") == null;

//Content-Type
this.log.info "HTTP Content-Type:  Expect: $expectHTTPcontenttype - Received: " + tC.getPropertyValue("httpContentType");
assert tC.getPropertyValue("httpContentType") == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {
	assert XMLbody == null;
}

this.log.info "XMLBody Length [" + XMLbody.length() + "] processXMLFlag[$processXMLFlag]";

if (XMLbody != null && processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	if (errorRespType != "SUCCESS" && errorRespType != "SUCCESS_NO_STREAMS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;

		// ErrorCode
		this.log.info "Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorLink [" + myXML.Error.ErrorLink.toString() + "] errorLink[$errorLink]";
		assert myXML.Error.ErrorLink.toString() == errorLink;
		
	} else if (errorRespType == "SUCCESS_NO_STREAMS") {
		log.info "--------------SUCCESS NO STREAMS---------------";
		availStreamsCnt = myXML.@AvailableStreams.text();
		activeStreamCnt = myXML.@ActiveStreamCount.text();

		log.info "AvailableStreams[$availStreamsCnt] lte System Limit of [" + tP.getPropertyValue("streamlimit") + "]";
		assert availStreamsCnt <= tP.getPropertyValue("streamlimit");

		if (tC.getPropertyValue("streamFlagCreateDateOld") != "true") {
			log.info "Assert ActiveStreamCount == 0 -- streamFlagCreateDateOld[" + tC.getPropertyValue("streamFlagCreateDateOld") + "]";
			assert activeStreamCnt.toInteger() == 0;
			log.info "AvailableStreams - recv[$availStreamsCnt] - expect[" + streamlimit.toInteger() + "]";
			assert availStreamsCnt.toInteger() == streamlimit.toInteger();
		} else {
			log.info "ActiveStreamCount[$activeStreamCnt] == expectStreamActiveCnt[$expectStreamActiveCnt]";
			assert activeStreamCnt.toInteger() == expectStreamActiveCnt.toInteger();
			log.info "ActiveStreamCount[$availStreamsCnt] == " + streamlimit.toInteger() - activeStreamCnt.toInteger() + "]";
			assert availStreamsCnt.toInteger() == streamlimit.toInteger() - activeStreamCnt.toInteger();
		}
		
		log.info "Assert NO <Stream> Rows Present";
		assert myXML.Stream.size() == myXML.Stream.size();
		log.info "Assert NO <Stream>.<ResourceStatus> Rows Present";
		assert myXML.Stream.ResourceStatus.size() == 0;
		log.info "Assert NO <Stream>.<RightsTokenID> Rows Present";
		assert myXML.Stream.RightsTokenID.size() == 0;
		log.info "Assert NO <Stream>.<ExpirationDateTime> Rows Present";
		assert myXML.Stream.ExpirationDateTime.size() == 0;
			
		/*  AvailableStreams */
		log.info "availStreamsCnt[$availStreamsCnt] - expectStreamAvailCnt[$expectStreamAvailCnt]";
		assert availStreamsCnt.toInteger() == expectStreamAvailCnt.toInteger();

		/* ActiveStreamCount */
		log.info "activeStreamCnt[$activeStreamCnt] - expectStreamActiveCnt[$expectStreamActiveCnt]";
		assert activeStreamCnt.toInteger() == expectStreamActiveCnt.toInteger();
	} else {
		log.info "--------------STREAM DATA VERIFICATION-----------------";
		availStreamsCnt = myXML.@AvailableStreams.text();
		activeStreamCnt = myXML.@ActiveStreamCount.text();

		this.log.info "AvailableStreams[$availStreamsCnt] lte System Limit of [" + tP.getPropertyValue("streamlimit")  + "]";
		assert availStreamsCnt <= tP.getPropertyValue("streamlimit");

		log.info "Assert ActiveStreamCount == $streamAccountActiveCount";
		assert activeStreamCnt.toInteger() == streamAccountActiveCount;
		log.info "AvailableStreams - recv[$availStreamsCnt] - expect[" + streamlimit.toInteger() - streamAccountActiveCount + "]";
		assert availStreamsCnt.toInteger() == streamlimit.toInteger() - streamAccountActiveCount;
				
		/*
		*  Due to stream ordering we must work backwards from the 
		*  total number of streams created.  The newest created
		*  stream will be the first in the list.
		*/
		g = counter;

		log.info "g[$g] - counter[$counter]";

		/*
		*  By design, we never return more than 30 streams.   
		*  
		*/
		this.log.info "Recv Stream Count [" + myXML.Stream.size() + "] lessThan [$streamMaxDisplayCount]";;
		assert myXML.Stream.size() <= streamMaxDisplayCount.toInteger();
		
		while (g != 0) {
			String expectValue = tC.getPropertyValue("expectDBStatus_" + g);
			String expectcb = urnnode + tC.getPropertyValue("expectDBCreatedBy_" + g);
			String expectdb = urnnode + tC.getPropertyValue("expectDBDeletedBy_" + g);
			String expectsh = tC.getPropertyValue("streamhandleFULL_" + g);
			String expectNick = tC.getPropertyValue("expectNickname_" + g);
			String expectrt  = tC.getPropertyValue("rightstokenFULL_" + g);
			String expectGeneric = tC.getPropertyValue("expectGenericRightsToken_" + g);
			String expectRequestingUser = tC.getPropertyValue("expectRequestingUser_" + g);
			String expectCDate = tC.getPropertyValue("expectDBCreatedTime_" + g);
			String expectDDate = tC.getPropertyValue("expectDBDeletedTime_" + g);
			String streamFlagIgnoreCreatedDate = tC.getPropertyValue("streamFlagIgnoreCreatedDate_" + g);
			String streamFlagIgnoreDeletedDate = tC.getPropertyValue("streamFlagIgnoreDeletedDate_" + g);
			String expectDBCreatedByNodeType = tC.getPropertyValue("expectDBCreatedByNodeType_" + g);
			String baseRightsToken = tC.getPropertyValue("rightstokenidFULL");

			log.info "g[$g]";

			getHistoryRecords(expectsh);

			/* ---------HACKIE SMACKIE 
			*  The requestinguser displayed in streamview is NOT the 
			*  requestinguser supplied during streamcreation.  It is the 
			*  userid associated with security context (saml) which
			*  invoked the request.  Thus, all requestingusers in all
			*  streams displayed will be the same.  We will override
			*  that NOW!  LLP and LLPCS do not display the requestinguser
			*  element.
			*/
			if (tC.getPropertyValue("nodetype") == "llp" || tC.getPropertyValue("nodetype") == "llpcs") {
				expectRequestingUser = "";
			} else {
				expectRequestingUser = tC.getPropertyValue("assertionUserIdFULL");
			}
						
			/*
			*  if the nodetype is 'dlp' or 'llp' streams in 'deleted' status
			*   are not displayed.  Thus, we must adjust accordingly.
			*/
			if (tC.getPropertyValue("nodetype") == "llp" || tC.getPropertyValue("nodetype") == "dlp") {
				if (	expectValue == "active") {
					doValidations = true;
				} else {
					doValidations = false;
				}
			} else {
				doValidations = true;
			}

			/*
			*  Special processing is required for nickname just
			*  incase it contains special xml characters.
			*/
			if (expectNick != null) {
				if (expectNick.length() > 0) {
					expectNick = expectNick.replace('&amp;','&');
					expectNick = expectNick.replace('&lt;','<');
					expectNick = expectNick.replace('&gt;','>');
					expectNick = expectNick.replace('&apos;','\'');
				}
			}

			/*
			*  There maybe one or more rightstokens created by the test
			*  case.  Thus multiple streams maybe have the same 
			*  rights token.  We will assume that if we get a null
			*  rightstokenFULL_count value that only one rightstoken
			*  was created for the test and that will be contained 
			*  in rightstokenfull.
			*/
			if (expectrt == null) {
				log.info "RIGHTSTOKENFULL - Override to the baseRightsToken value [$baseRightsToken]";
				expectrt = baseRightsToken;
			}
			log.info "g[$g] - doValidations [$doValidations] - nodetype[" + tC.getPropertyValue("nodetype") + "] - expectValue[$expectValue]";
			
			if (doValidations) {
				displayStreamCount++;

				/*  StreamHandleID */
				String recvsh = myXML.Stream[xmlIndex].@StreamHandleID.text();
				log.info "xmlIndex[$xmlIndex] - StreamHandleID - recvsh[$recvsh] - expect[$expectsh]";
				assert recvsh == expectsh;

				//StreamClientNickname
				if (expectNick != null) {
					String recvnick = myXML.Stream[xmlIndex].StreamClientNickname;
					log.info "xmlIndex[$xmlIndex] - StreamClientNickname - recv[$recvnick] - expect[$expectNick]";
					assert expectNick == recvnick;
				} else {
					log.info "xmlIndex[$xmlIndex] - StreamClientNickname - Element NOT present";
					assert myXML.Stream[xmlIndex].StreamClientNickname.size() == 0;
				}
				
				// RequestingUserID
				String recvru = myXML.Stream[xmlIndex].RequestingUserID;
				log.info "xmlIndex[$xmlIndex] - RequestingUserID - recv[$recvru] - expect[$expectRequestingUser] - expectDBCreatedByNodeType[$expectDBCreatedByNodeType]";
				assert recvru == expectRequestingUser;
		
				// RightsTokenID
				String recvrt = myXML.Stream[xmlIndex].RightsTokenID.text();
				if (expectGeneric == "true") {
					expectrt = urnGenericRightsToken;
				}
				log.info "xmlIndex[$xmlIndex] - RightsTokenID - recvrt[$recvrt] - expectrt[$expectrt] - expectGeneric[$expectGeneric]";
				assert recvrt == expectrt;
				
				//ExpirationDateTime
				String recvet = myXML.Stream[xmlIndex].ExpirationDateTime;
				log.info "xmlIndex[$xmlIndex] - ExpirationDateTime - is NOT null";
				assert recvet.length() > 0;

				//CreatedBy
				String recvcb   = myXML.Stream[xmlIndex].ResourceStatus.Current.@CreatedBy.text();
				log.info "xmlIndex[$xmlIndex] - CreatedBy - recvcb[$recvcb] - expectcb[$expectcb]";
				assert recvcb == expectcb;

				//CreationDate
				if (streamFlagIgnoreCreatedDate != "true") {
					log.info "xmlIndex[$xmlIndex] - CreationDate - is NOT null";
					String recvDate = "";
					String recvcd = myXML.Stream[xmlIndex].ResourceStatus.Current.@CreationDate.text();
					recvDate = formatDate(recvcd);
					def j = a.dateDiff(recvDate,expectCDate,"seconds");
					log.info "xmlIndex[$xmlIndex] - CreationDate - recvDate[$recvDate] - expectCDate[$expectCDate] DIFF [$j]";
					assert recvcd.length() > 0;
					log.info "xmlIndex[$xmlIndex] - CreationDate - Differences less that 10 seconds";
					assert j <= 10;
				} else {
					log.info "xmlIndex[$xmlIndex] - CreationDate - IGNORED DUE TO streamFlagIgnoreCreatedDate" ;
				}

				//Value
				String recvValue = myXML.Stream[xmlIndex].ResourceStatus.Current.Value;
				log.info "xmlIndex[$xmlIndex] - Value - recvValue[$recvValue] - expectValue[$expectValue]";
				if (expectValue == "active") {
					assert recvValue == "urn:dece:type:status:active";
				} else {
					assert recvValue == "urn:dece:type:status:deleted";
				}

				//Description
				switch (expectValue) {
					case "active":
						expectDescription = "active";
						break;
					default:
						expectDescription = "deleted";
						break;
				}
				String recvDesc = myXML.Stream[xmlIndex].ResourceStatus.Current.Description;
				log.info "xmlIndex[$xmlIndex] - Description - recvDesc[$recvDesc] - expectDesc[$expectDescription]";
				assert recvDesc == expectDescription;

				/*  Nickname validation */
				if (expectNick == null || expectNick == "") {
					log.info "Asserting no <StreamClientNickname> element exists";
					assert myXML.Stream[xmlIndex].StreamClientNickname.size() == 0;
					assert myXML.Stream[xmlIndex].StreamClientNickname.text() == "";
				} else {
					assert myXML.Stream[xmlIndex].StreamClientNickname.size() == 1;
					String recvNick = myXML.Stream[xmlIndex].StreamClientNickname.text();
					log.info "xmlIndex[$xmlIndex] - recvNick[$recvNick] - expectNick[$expectNick]";
					assert recvNick == expectNick;
				}
									
				/*
				*  If the stream is deleted....
				*/
				log.info "DeletedBy length: " + myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletedBy.toString().length();
				log.info "DeletionDate length: " + myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletionDate.toString().length();
				
				if (	expectValue == "deleted") {
					String recvDeletedBy = myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletedBy.toString();
					String recvDeletionDate = myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletionDate.toString();
					
					//DeletedBy
					this.log.info "recvDeletedBy[$recvDeletedBy] - expectdb[$expectdb]";
					assert recvDeletedBy == expectdb;
					
					//DeletionDate
					if (streamFlagIgnoreDeletedDate != "true") {
						String recvDate = formatDate(recvDeletionDate);
						def j = a.dateDiff(expectDDate,recvDate,"seconds");
						log.info "xmlIndex[$xmlIndex] - DeletionDate - recvDate[$recvDate] - expectDDate[$expectDDate] DIFF [$j]";
						assert recvDate.length() > 0;
						log.info "xmlIndex[$xmlIndex] - DeletionDate - Difference less that 10 seconds";
						assert j <= 10;
					} else {
						log.info "xmlIndex[$xmlIndex] - DeletionDate - IGNORED DUE TO streamFlagIgnoreDeletedDate" ;
					}
				} else {
					assert myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletedBy.toString().length()    == 0;
					assert myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletionDate.toString().length() == 0;
				}
				/*
				*
				*  History validation
				*
				*/
				def myHistoryXML = new XmlSlurper().parseText(tC.getPropertyValue("streamHistoryRows"));

				int rCnt = myHistoryXML.ResultSet.Row.size();

				log.info "-------------HISTORY-----------------";
				log.info "History Row Count[$rCnt] - <History> Count [" + myXML.ResourceStatus.History.size() + "]";
				if (tC.getPropertyValue("expectDBDeletedBy") != "1") {
					rCnt -= 1;
				} 
				assert myXML.Stream[xmlIndex].ResourceStatus.History.Prior.size() == rCnt;
		
				for (int i = 0; i < rCnt; i++) {
					String hrecvModifiedBy = myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].@ModifiedBy.text();
					String hexpectModifiedBy = urnnode + myHistoryXML.ResultSet.Row[i].CREATED_BY_NODE_OID.text();
					log.info "$i --> hrecvModifiedBy[$hrecvModifiedBy] - hexpectModifiedBy[$hexpectModifiedBy]";
					assert hrecvModifiedBy == hexpectModifiedBy;

					String hrecvStatus = myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].Value;
					String hexpectStatus = myHistoryXML.ResultSet.Row[i].STATUS.text();
					log.info "$i --> hrecvStatus[$hrecvStatus] - hexpectStatus[$hexpectStatus]";
					if (hexpectStatus == "active") {
						assert hrecvStatus == "urn:dece:type:status:active";
					} else {
						assert hrecvStatus == "urn:dece:type:status:deleted";
					}
					
					String hrecvDescription = myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].Description;
					switch (hexpectStatus) {
						case "active": hexpectDescription = "active"; break;
						case "deleted": hexpectDescription = "deleted"; break;
						default: hexpectDescription = "deleted"; break;
					}
					log.info "$i --> hrecvDescription[$hrecvDescription] - hexpectDescription[$hexpectDescription]";
					assert hrecvDescription == hexpectDescription;
	
					String hrecvModificationDate = formatDate(myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].@ModificationDate.text());
					int subSec = myHistoryXML.ResultSet.Row[i].EXPIRATION_DATE.text().indexOf(".");
					String hexpectModificationDate = myHistoryXML.ResultSet.Row[i].CREATED_DATE.text().substring(0, subSec);
					log.info "$i --> hrecvModificationDate[$hrecvModificationDate] - hexpectModificationDate[$hexpectModificationDate]";
					assert hrecvModificationDate.replace("/","-") == hexpectModificationDate;
					
				}
			
				xmlIndex++;
			}

			/*
			*  By design, we never return more than 30 streams.   So
			*  if we encounter our 30th stream we will break out of 
			*  the XML validation routines and allow size() 
			*  invocations on the xml body to verify no additional
			*  streams were returned.
			*/
			if (displayStreamCount == streamMaxDisplayCount.toInteger()) {
				break;
			}
			
			g--;
		}

		log.info "--------------------FINAL XML size() Validations -------------------";
		log.info "ResourceStatus size: "  + myXML.Stream.ResourceStatus.size();
		log.info "ResourceStatus.Current size: " + myXML.Stream.ResourceStatus.Current.size();
		log.info "ResourceStatus.Value size: " + myXML.Stream.ResourceStatus.Current.Value.size();
		log.info "ResourceStatus.Description size: " + myXML.Stream.ResourceStatus.Current.Description.size();
		log.info "RightsTokenID size: "  + myXML.Stream.RightsTokenID.size();
		log.info "ExpirationDateTime size: " + myXML.Stream.ExpirationDateTime.size();

		log.info "Stream.size() LTE MAX allowed of " + streamMaxDisplayCount.toInteger();
		assert myXML.Stream.size() <= streamMaxDisplayCount.toInteger();
		
		log.info "Stream.size() IS -- recv[" + myXML.Stream.size() + "] Expect[$displayStreamCount]";
		assert myXML.Stream.size() == displayStreamCount;
		
		assert myXML.Stream.ResourceStatus.size() == displayStreamCount;
		assert myXML.Stream.ResourceStatus.Current.size() == displayStreamCount;
		assert myXML.Stream.ResourceStatus.Current.Value.size() == displayStreamCount;
		assert myXML.Stream.ResourceStatus.Current.Description.size() == displayStreamCount;
		assert myXML.Stream.RightsTokenID.size()  == displayStreamCount;
		assert myXML.Stream.ExpirationDateTime.size() == displayStreamCount;
	}
} 

]]></script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>TC_DECE_49091 - StreamListView - LLPCS - Stream list view using q host</con:value></con:property><con:property><con:name>sName</con:name><con:value>LASP Linked Customer Support Test Cases</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>9115</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>llpcs</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C7376158FA3F207DE0401F0A07991E70</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">C7375BD3ACC97D84E0401F0A07991E72</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:C7375BD3ACC97D84E0401F0A07991E72</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_d5fa0fab-02b7-4c2e-8f3e-be751e888a9f</con:value></con:property><con:property><con:name>assert</con:name><con:value>nVdbc6JME773V1jupWU4KCrWJlXDUVRUEDzdfIUwAoqgDAj6698BozHZ7L77fhcpM00fnu5+aHp+IusQ0D2AEIwTPwqrivBa+5/DbC1ya20aJL3pNFo2DRvdbRM2NrDDULDb7VrstlZVEEqhEqLECpPXGk1SdIPsNCjWoOge1epRzZc23VrXqnMYI+waq7yQtWp+CELUK8O+1tI47EUW8lEvtA4Q9RK7NwPqqIc1e9YdU+3t5w1lGTB+85Lk2CMI+8WBNgwC+8WODsRP4pPOTwf1Zr4bWkkaw/eYDnqtvdtmWfaSNV+i2CVokiQJkiWwjoN890ftrXI3ho4SbqPbmbfCKPRtK/CvVgFKhYkXOVUQuFHsJ97hN64pgiIL1w2Y2w2baoU/asRHgBLdX3r6BDJGVgN5FnV3psMtjGFow6qpK6+1H3/XwZutEVsh2kbxAX05/zdIMDzDIDpCp4Humd3R/b3Hb8r19hPaPSW0gxT5ZzguaHK0bIiq0xhu/XzkI0w+B1XL9ldzdGcYtP9LS34SzzgxbOKbygi+C1Hy//TruVc3L3MrSOFbuF5R6GqeEm5vMaG+NbsK21a2mrZUX0sIz8o3UI9Wv5+/EvXBq3cjZ7Ji11MjvaTLK8dv8oHD0/HcVRa+SQYksTupZqaK5rFpG85gJMCTx4sSCc36qZnW16ejv6eZo9eKhmK9Wenzs+mI41XUidkO32aHfpTU9XPcMSmWW6tgUx9F7Wm8l7u7cxsqQjcESjQ/X9GFDFnLN9lrul0H68Fs6pOVkST2TeM63J9bS2sz76+g+/qR03MORV5DeCmTLP5fMiQrWIn1OPDFpNji1zOBb6qiCOmV58Fl5oJM4YCL/3ZgzLn7k7f3ZTYjOaBpEhB4LtiJIxXsZUCZIuep/Hyu5vwVDDh3PMeGRgUEa07VxUzIVsJc0/pi5hmOPL9s5CBdX8WxClBpzHuqqItzQTdEVQXRTZarwkbOd+pMzRRtJVSwA0HMj1dHZhMo575NK4w6Y+jVjEnXyzmWS5fRYXzeGGKg8qrMz07yTNk0BU0cAH21sGkpxbbX0eEYVVYm92Q0OMIdgFJG4pjgqhr7TDVMeizoVikzPstURR6oGsp4rcxKrojZYG5eP2rBcyrvHMRcNMD0Vgvb4KUxuV4OkLVgQlUHmeCWxkMxcyZ3IKpGZhX+VquRmOmibo4lVVcyEZQyQcwCtKHH3kb2znZTywcG2D03htfEhRTi56F+ti/MqWLJEtgc5pTd1D3bZ3xrGWXuupsJ2mowjNYKdjMGmshxGsCASFCkhuvPgRE3ZyZHn6V9ONpK0QF6cUWlIsy2a052/ebEnY4XjLDdd6ayP21ajkcogU3vmnugKNAZUp5mOfqK0IXQv7YnQ3MJ/Xh1TcaMRrX9LlPRF6m5FKKg4/SXK3NYz1e2ZkymM3Mxveb5+LTrXoOkP+H68WygCu5kDOEU2XWCtCTO6AoMv+rvMJ+2OgmZCnBVDgB557qijwnM9Xc3EvZ1VcTkBSqfyfyCl2dAluuiwgmatpU8amrL89SkxqoiOgEu02W11IPKmucE3CnSWqyPK1oi1wZwSmdaS5RczWTqgyVca+PAmCcgO863IUWR8lHrb9XMtdWCAY6SzTj8FnGVVAGmNTkOyHw4b5PUSXOCwYwFZjOf0ft84rnry95d73FTVk+vzsoAwdx44piCKbaoaIaoq6B7e99yVTGbemAf8uPmYOeCgXtWGkcGJ+qSRpq5IIDhTYYMQOdodRV3Ki+W9hWQqxamxXmz9NAqHPsTQ0wxadMnuuw2NPmvHCsoVvnMsRMPNPCVY+KNYyLYnupKV6AQ0+aPaJG5nCyetM58NGCPpLYc7StcXSLcxA9ak7CbGcP6grpkHW+nLRasInh8PdyuvOYm4UjramtwsO/Ivr4XwnYruKgjVWNMnwgu5A6eMjSqjBUqFJvJVSLYOK1zh7V/uF6bLdo8TGfpWTGtIaIu3ua0YLPdtN8miFi+MNfO+qxJy8he3b4jX4fkQ3gbo8TzgP00ge+71yzd7KCd3I/Fd1gRqhL+OFrJn/e4QuI7jW2p2jsWyyBKYJjU3gqrYofrpXjT850e/nLezqwgkDzHMKJA0h2OF0WyRVISCcgOyza5Lntf9m4ovkDko3DrF7GKdfb2sf4zQPvQ20ArhnHtD56KOlWVUMfbRxQiaESvNYETeEHkJJrmuhJeqSiKltoC2eG4Did1O61adRwlk3ASg20C448NmSa/bsg6tP2jD4s1+n2XQAkuxMk6p0lAv5ytlxCmeM+Oi1W31yFJmkD+4RjAAi5xiJw0gC9H71iWhUC3X7ph2aiUkixFljvOb7P7+uxeCKzj+IUCKnLhIG4i/GbVJ++J/JJw89srwd09SB2/WGVwVZPYt29IPj/6IEnBjgdDipTumB+qf2fKUhTzqynxB0TE12I8Ijln/ynu/cKCd3C8pZX3FIR7ebJeTi/p+Zx+dC/G7gmKwP/NoJ3iNfJiRHsYEg8XxF9t8A/UXyI/5J/xpYkXzhL8+h8w1arl8d+vb5+scQkSmCffyfgAX9iK4H+809k9u9DD4in+yaLY+aj8N76e4mDIxejyQ7c4Fav35TcNtiPs1sfjK4qfnX/n4Lvgn4WPej2wJJgYmzSBv39SLebSa82y7SgNE0WolYLnWVniTC5H2PtQ+sVNufy+32Zy9NvbzFIdzWwPHqzaQ9f/d+WGX3behtgK+SWW11qOL+Y4eOg+zeZ3gJ/GM9dmAIsHMytwIk/zj/HMsGwHdB7j+XMmb7+If5U81fQrtd/+AQ==</con:value></con:property><con:property><con:name>counter</con:name><con:value>1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>1</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:9B65A97BC9DBEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:9DD0CB55ED027BCEE0401F0A07993B89</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9115</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9115</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>expectNickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectStreamActiveCnt</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentEncoding</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value>1</con:value></con:property><con:property><con:name>streamHistoryRows</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <STREAM_HISTORY_OID>C7376158FA40207DE0401F0A07991E70</STREAM_HISTORY_OID>
      <STREAM_HANDLE_OID>C7376158FA3F207DE0401F0A07991E70</STREAM_HANDLE_OID>
      <RIGHTS_TOKEN_OID>C7375BD3ACC97D84E0401F0A07991E72</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>0900</ACCOUNT_OID>
      <CREATED_BY_USER_OID>null</CREATED_BY_USER_OID>
      <TRANSACTION_ID>null</TRANSACTION_ID>
      <STATUS>active</STATUS>
      <STREAM_CLIENT_NICKNAME>null</STREAM_CLIENT_NICKNAME>
      <EXPIRATION_DATE>2012-08-14 15:24:42.221</EXPIRATION_DATE>
      <CLOSED_DATE>null</CLOSED_DATE>
      <CLOSED_BY_ORG_ID>null</CLOSED_BY_ORG_ID>
      <CREATED_DATE>2012-08-14 09:24:42.221</CREATED_DATE>
      <CREATED_BY_NODE_OID>9115</CREATED_BY_NODE_OID>
    </Row>
  </ResultSet>
</Results>]]></con:value></con:property><con:property><con:name>streamFlagCreateDateOld</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate</con:name><con:value>false</con:value></con:property><con:property><con:name>username</con:name><con:value>pjgorg1full2</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>expectGenericRightsToken</con:name><con:value>false</con:value></con:property><con:property><con:name>expectStreamAvailCnt</con:name><con:value>3</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9DD0CB55ED027BCEE0401F0A07993B89</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C7376158FA3F207DE0401F0A07991E70</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:C7375BD3ACC97D84E0401F0A07991E72</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9115</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9DD0CB55ED027BCEE0401F0A07993B89</con:value></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/08/14 09:24:52</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<StreamList AvailableStreams="2" ActiveStreamCount="1" xmlns="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Stream StreamHandleID="urn:dece:streamhandleid:org:dece:C7376158FA3F207DE0401F0A07991E70">
      <RightsTokenID>urn:dece:rightstokenid:org:dece:C7375BD3ACC97D84E0401F0A07991E72</RightsTokenID>
      <ExpirationDateTime>2012-08-14T15:24:42.221Z</ExpirationDateTime>
      <ResourceStatus>
         <Current CreatedBy="urn:dece:org:org:dece:9115" CreationDate="2012-08-14T09:24:42.221Z">
            <Value>urn:dece:type:status:active</Value>
            <Description>active</Description>
         </Current>
      </ResourceStatus>
   </Stream>
</StreamList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">904</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorStatusCode</con:name><con:value/></con:property><con:property><con:name>errorReason</con:name><con:value/></con:property><con:property><con:name>errorID</con:name><con:value/></con:property><con:property><con:name>streamhandleFULL_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C5AAB62B5BD82DEBE0401F0A05993203</con:value></con:property><con:property><con:name>rightstokenidFULL_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/07/25 16:11:25</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C5AAB62B5BDB2DEBE0401F0A05993203</con:value></con:property><con:property><con:name>rightstokenidFULL_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B65694912BBFE26E0401F0A07996B66</con:value></con:property><con:property><con:name>expectDBDeletedTime_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/07/25 16:11:50</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C27F26EC3521DDD5E0401F0A059963C9</con:value></con:property><con:property><con:name>rightstokenidFULL_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9115</con:value></con:property><con:property><con:name>expectDBDeletedBy_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9115</con:value></con:property><con:property><con:name>expectNickname_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectDBDeletedTime_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/15 07:58:10</con:value></con:property><con:property><con:name>expectDBCreatedTime_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/15 07:58:01</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>streamhandleFULL_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C27F26EC3528DDD5E0401F0A059963C9</con:value></con:property><con:property><con:name>rightstokenidFULL_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9115</con:value></con:property><con:property><con:name>expectDBDeletedBy_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9115</con:value></con:property><con:property><con:name>expectNickname_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectDBDeletedTime_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/15 07:58:44</con:value></con:property><con:property><con:name>expectDBCreatedTime_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/15 07:58:35</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>streamhandleFULL_8</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C27F2F9D6DC99C1EE0401F0A0799522D</con:value></con:property><con:property><con:name>rightstokenidFULL_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_8</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_8</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9115</con:value></con:property><con:property><con:name>expectDBDeletedBy_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_8</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectDBDeletedTime_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_8</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/15 07:59:06</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_8</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>streamhandleFULL_9</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C27F2F9D6DCC9C1EE0401F0A0799522D</con:value></con:property><con:property><con:name>rightstokenidFULL_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_9</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_9</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9115</con:value></con:property><con:property><con:name>expectDBDeletedBy_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_9</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B7969EE9EA1770CE0401F0A079930AA</con:value></con:property><con:property><con:name>expectDBDeletedTime_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_9</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/15 07:59:27</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_9</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>streamhandleFULL_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C2557D2BCBF3A8C1E0401F0A0799044C</con:value></con:property><con:property><con:name>rightstokenidFULL_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:15:58</con:value></con:property><con:property><con:name>expectDBCreatedTime_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:15:49</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C2557D2BCBF8A8C1E0401F0A0799044C</con:value></con:property><con:property><con:name>rightstokenidFULL_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:16:31</con:value></con:property><con:property><con:name>expectDBCreatedTime_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:16:22</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255865FE6CCA1E5E0401F0A07991463</con:value></con:property><con:property><con:name>rightstokenidFULL_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:17:02</con:value></con:property><con:property><con:name>expectDBCreatedTime_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:16:53</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255865FE6D1A1E5E0401F0A07991463</con:value></con:property><con:property><con:name>rightstokenidFULL_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:17:36</con:value></con:property><con:property><con:name>expectDBCreatedTime_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:17:26</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_15</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255865FE6D6A1E5E0401F0A07991463</con:value></con:property><con:property><con:name>rightstokenidFULL_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_15</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_15</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_15</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_15</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_15</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:18:09</con:value></con:property><con:property><con:name>expectDBCreatedTime_15</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:17:59</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_15</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255865FE6DBA1E5E0401F0A07991463</con:value></con:property><con:property><con:name>rightstokenidFULL_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:18:41</con:value></con:property><con:property><con:name>expectDBCreatedTime_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:18:32</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C2558EFFF324194CE0401F0A07992648</con:value></con:property><con:property><con:name>rightstokenidFULL_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:19:14</con:value></con:property><con:property><con:name>expectDBCreatedTime_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:19:05</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C2558EFFF329194CE0401F0A07992648</con:value></con:property><con:property><con:name>rightstokenidFULL_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:19:46</con:value></con:property><con:property><con:name>expectDBCreatedTime_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:19:36</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C2558EFFF32E194CE0401F0A07992648</con:value></con:property><con:property><con:name>rightstokenidFULL_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:20:19</con:value></con:property><con:property><con:name>expectDBCreatedTime_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:20:09</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C2558EFFF333194CE0401F0A07992648</con:value></con:property><con:property><con:name>rightstokenidFULL_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:20:50</con:value></con:property><con:property><con:name>expectDBCreatedTime_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:20:41</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_21</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C2558EFFF338194CE0401F0A07992648</con:value></con:property><con:property><con:name>rightstokenidFULL_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_21</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_21</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_21</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_21</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_21</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:21:24</con:value></con:property><con:property><con:name>expectDBCreatedTime_21</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:21:15</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_21</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C25597DB9C81D1A8E0401F0A05990160</con:value></con:property><con:property><con:name>rightstokenidFULL_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:21:56</con:value></con:property><con:property><con:name>expectDBCreatedTime_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:21:47</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C25597DB9C87D1A8E0401F0A05990160</con:value></con:property><con:property><con:name>rightstokenidFULL_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:22:29</con:value></con:property><con:property><con:name>expectDBCreatedTime_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:22:20</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C25597DB9C8CD1A8E0401F0A05990160</con:value></con:property><con:property><con:name>rightstokenidFULL_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:23:02</con:value></con:property><con:property><con:name>expectDBCreatedTime_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:22:53</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_25</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C25597DB9C91D1A8E0401F0A05990160</con:value></con:property><con:property><con:name>rightstokenidFULL_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_25</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_25</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_25</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_25</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_25</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:23:36</con:value></con:property><con:property><con:name>expectDBCreatedTime_25</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:23:27</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_25</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255A09FA77AC30AE0401F0A05991283</con:value></con:property><con:property><con:name>rightstokenidFULL_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:24:09</con:value></con:property><con:property><con:name>expectDBCreatedTime_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:23:59</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255A09FA77FC30AE0401F0A05991283</con:value></con:property><con:property><con:name>rightstokenidFULL_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:24:41</con:value></con:property><con:property><con:name>expectDBCreatedTime_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:24:31</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255A09FA784C30AE0401F0A05991283</con:value></con:property><con:property><con:name>rightstokenidFULL_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:25:17</con:value></con:property><con:property><con:name>expectDBCreatedTime_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:25:05</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255A09FA789C30AE0401F0A05991283</con:value></con:property><con:property><con:name>rightstokenidFULL_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:25:51</con:value></con:property><con:property><con:name>expectDBCreatedTime_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:25:42</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255A09FA78EC30AE0401F0A05991283</con:value></con:property><con:property><con:name>rightstokenidFULL_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:26:25</con:value></con:property><con:property><con:name>expectDBCreatedTime_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:26:15</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_31</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255A9C55FF5D015E0401F0A059924E5</con:value></con:property><con:property><con:name>rightstokenidFULL_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_31</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_31</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_31</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_31</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:26:50</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_31</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_32</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255A9C55FF8D015E0401F0A059924E5</con:value></con:property><con:property><con:name>rightstokenidFULL_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_32</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_32</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_32</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B65694912BBFE26E0401F0A07996B66</con:value></con:property><con:property><con:name>expectDBDeletedTime_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_32</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:27:12</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_32</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_33</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255A9C55FFBD015E0401F0A059924E5</con:value></con:property><con:property><con:name>rightstokenidFULL_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_33</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_33</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_33</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9C687F959B4B13ABE0401F0A059957EB</con:value></con:property><con:property><con:name>expectDBDeletedTime_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_33</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:27:32</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_33</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C248EB2BA3145732E0401F0A07993200</con:value></con:property><con:property><con:name>rightstokenidFULL_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:15:46</con:value></con:property><con:property><con:name>expectDBCreatedTime_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:15:37</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C248EB2BA3195732E0401F0A07993200</con:value></con:property><con:property><con:name>rightstokenidFULL_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:16:12</con:value></con:property><con:property><con:name>expectDBCreatedTime_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:16:02</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C248F2913CADBAF3E0401F0A079941EE</con:value></con:property><con:property><con:name>rightstokenidFULL_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:16:36</con:value></con:property><con:property><con:name>expectDBCreatedTime_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:16:26</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_38</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C248F2913CB2BAF3E0401F0A079941EE</con:value></con:property><con:property><con:name>rightstokenidFULL_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_38</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_38</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_38</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_38</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_38</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:17:01</con:value></con:property><con:property><con:name>expectDBCreatedTime_38</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:16:51</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_38</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C248F2913CB7BAF3E0401F0A079941EE</con:value></con:property><con:property><con:name>rightstokenidFULL_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:17:27</con:value></con:property><con:property><con:name>expectDBCreatedTime_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:17:17</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_40</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C248F2913CBCBAF3E0401F0A079941EE</con:value></con:property><con:property><con:name>rightstokenidFULL_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_40</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_40</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_40</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_40</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_40</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:17:53</con:value></con:property><con:property><con:name>expectDBCreatedTime_40</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:17:42</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_40</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QC_Id</con:name><con:value>79611</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreate for ParentalControlRating" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="644f8974-79ef-4d30-8306-4db046f894a6"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="cd090f33-d958-406a-a176-09ce75a8d2a9"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("policyStatus","urn:dece:type:status:active");
tC.setPropertyValue("policyAuthority","urn:dece:role:coordinator");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("streamhandleFULL",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("policyResource",null);
tC.setPropertyValue("policyRequestEntity",null);
tC.setPropertyValue("policyAuthority",null);
tC.setPropertyValue("policyCreator",null);
tC.setPropertyValue("policyStatus",null);
tC.setPropertyValue("policyResourceXML",null);
tC.setPropertyValue("expectErrTypePolicyCreate",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="98a72c4a-3de2-48b0-ac2e-6518d6f0fb29"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("policyResource",callTC.getPropertyValue("policyResource"));
tC.setPropertyValue("policyRequestEntity",callTC.getPropertyValue("policyRequestEntity"));
tC.setPropertyValue("policyAuthority",callTC.getPropertyValue("policyAuthority"));
tC.setPropertyValue("policyCreator",callTC.getPropertyValue("policyCreator"));
tC.setPropertyValue("policyClass",callTC.getPropertyValue("policyClass"));
tC.setPropertyValue("policyStatus",callTC.getPropertyValue("policyStatus"));
tC.setPropertyValue("expectErrTypePolicyCreate",callTC.getPropertyValue("expectErrTypePolicyCreate"));
tC.setPropertyValue("policyAuthority", "urn:dece:role:type:coordinator");

if (tC.getPropertyValue("expectErrTypePolicyCreate") == null || tC.getPropertyValue("expectErrTypePolicyCreate") == "") {
		tC.setPropertyValue("expectErrTypePolicyCreate","SUCCESS");
}
if (tC.getPropertyValue("policyCreator") == null || tC.getPropertyValue("policyCreator") == "") {
		tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
}

switch (tC.getPropertyValue("policyClass")) {
	case "urn:dece:type:policy:EndUserLicenseAgreement":
		tC.setPropertyValue("policyResource","urn:dece:agreement:enduserlicenseagreement:10");
	break;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Policy &lt;dece:Resource> XML" id="a0c921a3-fde2-4258-a0cf-740474f419a6"><con:settings/><con:config><script><![CDATA[def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

	
mmpaRatingsUS = ["us:mpaa:g","us:mpaa:pg","us:mpaa:pg-13","us:mpaa:r","us:mpaa:nc-17"];
tvpgRatingsUS = ["us:tvpg:tv-y","us:tvpg:tv-y7","us:tvpg:tv-y7-fv","us:tvpg:tv-g","us:tvpg:tv-pg","us:tvpg:tv-14","us:tvpg:tv-ma"];
tvpgRatingsreasoncodesUS = ["us:tvpg:v","us:tvpg:s","us:tvpg:l","us:tvpg:d","us:tvpg:fv"];
fabUS = ["us:fab:c","us:fab:f","us:fab:pd","us:fab:pd-m","us:fab:em","us:fab:ao"];
fabreasoncodesUS = ["us:fab:violence","us:fab:frightening","us:fab:sexual","us:fab:mildlang","us:fab:stronglang","us:fab:substance","us:fab:intense","us:fab:bnudity","us:fab:fnudity","us:fab:explicit","us:fab:erotica"];
esrbgamesUS = ["us:esrb:ec","us:esrb:e","us:esrb:e10+","us:esrb:t","us:esrb:m","us:esrb:ao","us:esrb:rp"];
mpaattrailersUS = ["us:mpaat:gb","us:mpaat:rb"];
tvmovieRatingsGB = ["gb:bbfc:u","gb:bbfc:pg","gb:bbfc:12","gb:bbfc:15","gb:bbfc:18","gb:bbfc:r18"];
chvrsRatingsCA = ["ca:chvrs:g","ca:chvrs:pg","ca:chvrs:14a","ca:chvrs:18a","ca:chvrs:r"];
cbscRatingsCA = ["ca:cbsc:c","ca:cbsc:c8","ca:cbsc:g","ca:cbsc:pg","ca:cbsc:14+","ca:cbsc:18+"];
filmtvifcoIE = ["ie:ifco:g","ie:ifco:pg","ie:ifco:12","ie:ifco:15","ie:ifco:18"];
filmtvncsAU = ["au:ncs:g","au:ncs:pg","au:ncs:m","au:ncs:ma15","au:ncs:r18"];
filmtvoflcNZ = ["nz:oflc:g","nz:oflc:pg","nz:oflc:m","nz:oflc:rp13","nz:oflc:r13","nz:oflc:r15","nz:oflc:rp16","nz:oflc:r16","nz:oflc:r18","nz:oflc:r"];
MocRatingFR = ["FR:MOC:U","FR:MOC:10","FR:MOC:12","FR:MOC:16","FR:MOC:18"];
FSKRatingDE = ["DE:FSK:0","DE:FSK:6","DE:FSK:12","DE:FSK:16","DE:FSK:18"];
FSKRatingAT= ["AT:FSK:0","AT:FSK:6","AT:FSK:12","AT:FSK:16","AT:FSK:18"];
FSKRatingCH= ["CH:FSK:0","CH:FSK:6","CH:FSK:12","CH:FSK:16","CH:FSK:18"];

String resourceXml = "";
String urnRating   = testProject.getPropertyValue("urnRating");

def resource = testCase.getPropertyValue("policyResource");

switch (resource) {
	case "${urnRating}us:mpaa:g":
	case "${urnRating}us:mpaa:pg":
	case "${urnRating}us:mpaa:pg-13":
	case "${urnRating}us:mpaa:r":
	case "${urnRating}us:mpaa:nc-17":
		for (rating in mmpaRatingsUS) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				break;
			}
		}
		break;
	case "${urnRating}us:tvpg:tv-y":
	case "${urnRating}us:tvpg:tv-y7":
	case "${urnRating}us:tvpg:tv-y7-fv":
	case "${urnRating}us:tvpg:tv-g":
	case "${urnRating}us:tvpg:tv-pg":
	case "${urnRating}us:tvpg:tv-14":
	case "${urnRating}us:tvpg:tv-ma":
		for (rating in tvpgRatingsUS) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;
        case "${urnRating}us:tvpg:v":
	case "${urnRating}us:tvpg:s":
	case "${urnRating}us:tvpg:l":
	case "${urnRating}us:tvpg:d":
	case "${urnRating}us:tvpg:fv":
		for (rating in tvpgRatingsreasoncodesUS) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				break;
			}
		}
		break;
        case "${urnRating}us:fab:c":
	case "${urnRating}us:fab:f":
	case "${urnRating}us:fab:pd":
	case "${urnRating}us:fab:pd-m":
	case "${urnRating}us:fab:em":
	case "${urnRating}us:fab:ao":
        	for (rating in fabUS) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				break;
			}
		}
		break;
        case "${urnRating}us:fab:violence":
	case "${urnRating}us:fab:frightening":
	case "${urnRating}us:fab:sexual":
	case "${urnRating}us:fab:mildlang":
	case "${urnRating}us:fab:stronglang":
        case "${urnRating}us:fab:substance":
	case "${urnRating}us:fab:intense":
	case "${urnRating}us:fab:bnudity":
	case "${urnRating}us:fab:fnudity":
	case "${urnRating}us:fab:explicit":
	case "${urnRating}us:fab:erotica":
		for (rating in fabreasoncodesUS) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				break;
			}
		}
		break;

        case "${urnRating}us:esrb:ec":
	case "${urnRating}us:esrb:e":
	case "${urnRating}us:esrb:e10+":
	case "${urnRating}us:esrb:t":
	case "${urnRating}us:esrb:m":
	case "${urnRating}us:esrb:ao":
        case "${urnRating}us:esrb:rp":
        	for (rating in esrbgamesUS) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				break;
			}
		}
		break;

        case "${urnRating}us:mpaat:gb":
        case "${urnRating}us:mpaat:rb":
        	for (rating in mpaattrailersUS) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				break;
			}
		}
		break;
   
     //case "${urnRating}gb:bbfc:e":  
	case "${urnRating}gb:bbfc:u":
	case "${urnRating}gb:bbfc:pg":
	case "${urnRating}gb:bbfc:12":
	case "${urnRating}gb:bbfc:15":
	case "${urnRating}gb:bbfc:18":
	case "${urnRating}gb:bbfc:r18":
		for (rating in tvmovieRatingsGB) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>" + rating.replaceAll("&","&amp;") + "</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;

           //case "${urnRating}ca:chvrs:e":
        case "${urnRating}ca:chvrs:g":
	case "${urnRating}ca:chvrs:pg":
	case "${urnRating}ca:chvrs:14a":
	case "${urnRating}ca:chvrs:18a":
	case "${urnRating}ca:chvrs:r": 
	case "${urnRating}ca:chvrs:e":
		for (rating in chvrsRatingsCA) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;

        //case "${urnRating}ca:cbsc:e": 
        case "${urnRating}ca:cbsc:c":
	case "${urnRating}ca:cbsc:c8":
	case "${urnRating}ca:cbsc:g":
	case "${urnRating}ca:cbsc:pg":
	case "${urnRating}ca:cbsc:14+":
        case "${urnRating}ca:cbsc:18+":
      	case "${urnRating}ca:cbsc:e":
      		for (rating in cbscRatingsCA) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;
        //case "${urnRating}ie:ifco:e": 
        case "${urnRating}ie:ifco:g":
	case "${urnRating}ie:ifco:pg":
	case "${urnRating}ie:ifco:12":
	case "${urnRating}ie:ifco:15":
	case "${urnRating}ie:ifco:18":
      		for (rating in filmtvifcoIE) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;
        //case "${urnRating}au:ncs:e": 
        case "${urnRating}au:ncs:g":
	case "${urnRating}au:ncs:pg":
	case "${urnRating}au:ncs:m":
	case "${urnRating}au:ncs:ma15":
	case "${urnRating}au:ncs:r18":
      		for (rating in filmtvncsAU) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;
        
        //case "${urnRating}nz:oflc:e": 
        case "${urnRating}nz:oflc:g":
	case "${urnRating}nz:oflc:pg":
	case "${urnRating}nz:oflc:m":
	case "${urnRating}nz:oflc:rp13":
	case "${urnRating}nz:oflc:r13":
	case "${urnRating}nz:oflc:r15":
	case "${urnRating}nz:oflc:rp16":
        case "${urnRating}nz:oflc:r16": 
        case "${urnRating}nz:oflc:r18":
	case "${urnRating}nz:oflc:r":
	      		for (rating in filmtvoflcNZ) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;
        
         case "${urnRating}FR:MOC:U":
	case "${urnRating}FR:MOC:10":
	case "${urnRating}FR:MOC:12":
	case "${urnRating}FR:MOC:16":
	case "${urnRating}FR:MOC:18":
      		for (rating in MocRatingFR) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;

	case "${urnRating}DE:FSK:0":
	case "${urnRating}DE:FSK:6":
	case "${urnRating}DE:FSK:12":
	case "${urnRating}DE:FSK:16":
	case "${urnRating}DE:FSK:18":
      		for (rating in FSKRatingDE) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;

		case "${urnRating}AT:FSK:0":
	case "${urnRating}AT:FSK:6":
	case "${urnRating}AT:FSK:12":
	case "${urnRating}AT:FSK:16":
	case "${urnRating}AT:FSK:18":
      		for (rating in FSKRatingAT) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;

		case "${urnRating}CH:FSK:0":
	case "${urnRating}CH:FSK:6":
	case "${urnRating}CH:FSK:12":
	case "${urnRating}CH:FSK:16":
	case "${urnRating}CH:FSK:18":
      		for (rating in FSKRatingCH) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;
   
	default:
		resourceXml = "<dece:Resource>$resource</dece:Resource>";
		break;
}

this.log.info "resource [$resource]";
this.log.info "resourceXml [$resourceXml]";

testCase.setPropertyValue("policyResourceXML", resourceXml);
]]></script></con:config></con:testStep><con:testStep type="restrequest" name="POST - PolicyCreate" id="a308d4f4-29e6-4d35-828b-1855c9669e30"><con:settings/><con:config service="Policy Create" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/User/{USER}/Policy/{POLICYCLASS}" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - PolicyCreate" mediaType="application/xml" postQueryString="false" id="3b8441db-ba0c-4f77-ab67-67889879e318" sslKeystore="DLASP_CS_1_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="${#Project#coordinatorSchema} dece.xsd" xmlns:dece="${#Project#coordinatorSchema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:${#TestCase#policyClass}</dece:PolicyClass>
      ${#TestCase#policyResourceXML}  
      <dece:RequestingEntity>${#TestCase#policyRequestEntity}</dece:RequestingEntity>
      <dece:PolicyAuthority>${#TestCase#policyAuthority}</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#assertionUserId}">
            <dece:Value>${#TestCase#policyStatus}</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="MINOR" value="${#Project#VersionMinor}"/>
  <con:entry key="MAJOR" value="${#Project#VersionMajor}"/>
  <con:entry key="POLICYCLASS" value="${#Project#urnParentalControlRating}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="ea6f4fb8-2757-434e-b8d9-cc135cd23717"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("POST - PolicyCreate");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="0948ee7f-7141-41ab-ae3f-d83d04b19cf7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('POST - PolicyCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="44738569-2608-4df4-8e87-cad31dbf9126"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrTypePolicyCreate");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");
String orgRequest = url + "/rest/$major/$minor/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";

/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 201 Created";
	break;
}
	
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;
</script></con:config></con:testStep><con:properties><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbcuI4EP0VyvM4ZSSbuytQBQGm2CGXgSRL5iUlyw0WsWVjyUDm61cy4GBCsuzyQqndOn36oiNdCRIGttMVAhLJIl7ahgEXTmZtG2nCnYgIJhxOQhCOpM60ezN27DJ2yGGLURr128ZLc+6CW4eG2SK1ilmtNYnZauG62cS4aldcu1GvVZSrECmMuJCEy7ZhY6tq4pZp4QfccipNx2qU643Wb6P0BIlQ2MqljI09qa1oG76UsYPQZrMpbyrlKFkgG2MLzW7GU+pDSIzO1S6jLFDS2fvTsgcUgoCWaRSiK1TwufKEM2ULTmSawD6W91ksjHALKR9PsMU3I98L3ojPo2x5TXjEGSUB+0N0fW5A+pFX6gaLKGHSDz9NwsIa2IQtNalV5d8MVKR2IVCBYSKIKXxi7bEmMIcEOIXS42TUNr5d1rVs60NCuJhHSSiKy//GB/gagigGzxSHtPbULgc8U6nOFVBnxGmQCraGWz2sMaEg9t0EejlU6T6BOduOmVADuhWaHTqmd7LcVaPPFiDk/2nQUXN2IE8kSKEjZ+z7jOP4cQ09RFePyd3ad2+JN1iO2hmBY+fMkLd2tzwZynyIdjt+Tm4C6zeaLkW4fXXTJYXpz+e+6y5XW94f2FYtWk4n/EnGsQ9PrdGtRO6v7uTJ/RW/DYbzdfP78MHuJat7f7Rc3k0fv49vU7v7l/Uzth+f7yxfzlzr73BJx5v627DvA02XybZ679dd1Ei96/jHIFytZs/R/SP6TX/cjSuzZLx8sAbxRMzYa33xvEButTFbo3Udt/N0jvgXbYczP03dJVB5WOoxGPVLQ9UlIr8WM21hnjnPXJ1Yi4+QwKXR0bu0djipkjvmOaqHuzW2e5VetVdr9HutivoNcK2Ca62WNcTdJq4ODyKzY3FC8Tric6Zjacndjc3XBGnoCOAeJOY6SpXSCeMLxD6RpDTiE3UIIi7gIVLy7M5rVYvX0+1byjd/Fk1M7Wa0kJZRuo3kHb9LunMJSUGSLbsgyROgLGagdVuPtVBzLaQqxYqsUxlY5TUpc0iVsidaZB272qwhwcI4AE0UhZGXBlCO/TgrDBK7f9skVGTW/rg7vX+5nr5k5wF9mt3pt0MhlI/HtIPQKfVANRPOXDH4kM+HvGtnr6IDfDf1mD5eqqoyYXTHpPjpfVj0lOST8p7YgXm+4dRQAEeneeXxvDWj+dTnd7eSdCUCnUNzVqS8KqfrdZq1o6HFLlHwSGeKsI2m6lgqmXp7iF6BoxwFXXQn5MRPguf2IsVU+nwqiYRQzU8pW17wCJiC0I+AkZr77aUvjEJIVToJW3nOdh2oB4xm/OUbhzpU+ynzvfrbRIn33rEzWEdxVJ7qDSAZX+iVvg/ePhkPGilYppQsSo7BzwGcC1405kXOuUg1UG4q4fMvJS1RbYNQGqVcjvpGZjiWzYynfIvBeXf6AJMpc/5UY//+VjNZNgIU1ANPsAxf37iOPgJ8cSS9+6Cn6tvtDQeNBm7g2gAfq+9w0OrnRSmw63wwf7Qc1el0xjv/AA==</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:02B3ABFE770705E0E05305991F0AFE9D</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:02B3B4B57DB93333E05305991F0A804F</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrTypePolicyCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/2015/02/Account/urn:dece:accountid:org:dece:02B3ABFE770705E0E05305991F0AFE9D/User/urn:dece:userid:org:dece:02B3B4B57DB93333E05305991F0A804F/Policy/urn:dece:type:policy:ParentalControl:RatingPolicy</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>policyAuthority</con:name><con:value>urn:dece:role:type:coordinator</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>ParentalControl:RatingPolicy</con:value></con:property><con:property><con:name>policyCreator</con:name><con:value>urn:dece:userid:org:dece:02B3B4B57DB93333E05305991F0A804F</con:value></con:property><con:property><con:name>policyRequestEntity</con:name><con:value>urn:dece:userid:org:dece:02B3B4B57DB93333E05305991F0A804F</con:value></con:property><con:property><con:name>policyResource</con:name><con:value>urn:dece:type:rating:us:mpaa:pg</con:value></con:property><con:property><con:name>policyStatus</con:name><con:value>urn:dece:type:status:active</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value>Test Configuration/Setup</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>tName</con:name><con:value>Policy - Establish Parental Control Rating</con:value></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyResourceXML</con:name><con:value>&lt;dece:Resource>urn:dece:type:rating:us:mpaa:g&lt;/dece:Resource>
&lt;dece:Resource>urn:dece:type:rating:us:mpaa:pg&lt;/dece:Resource>
</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>77323</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE682B036D956188DE0401F0A05997A50</con:value></con:property><con:property><con:name>assertionUserIdFULLEncoded</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE682B036DCFD188DE0401F0A05997A50</con:value></con:property><con:property><con:name>policyClassEncoded</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AParentalControl%3ARatingPolicy</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\GIT\uv-coordinator-api-regression\Certs\QALP1/DLASP_CS_1_concat.pem</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02B3ABFE770705E0E05305991F0AFE9D</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02B3B4B57DB93333E05305991F0A804F</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>d2208da9-4741-4f08-9344-ca8efb57eb45</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Policy GET for ParentalConrolRating" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="240af968-1734-4ff8-b3e6-8c34f3f065bd"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="5f87a2ad-1855-4586-b8b6-d29332bbbf9d"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("returnXMLResult",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("expectErrTypePolicyGet",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="76adb585-24b0-47d3-a790-12e1e11f8a8b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("policyClass",callTC.getPropertyValue("policyClass"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));

tC.setPropertyValue("returnXMLResult",callTC.getPropertyValue("returnXMLResult"));
tC.setPropertyValue("expectErrTypePolicyGet",callTC.getPropertyValue("expectErrTypePolicyGet"));

if (tC.getPropertyValue("expectErrTypePolicyGet") == null || tC.getPropertyValue("expectErrTypePolicyGet") == "") {
		tC.setPropertyValue("expectErrTypePolicyGet","SUCCESS");
}
if (tC.getPropertyValue("returnXMLResult") == null || tC.getPropertyValue("returnXMLResult") == "") {
		tC.setPropertyValue("returnXMLResult","false");
}</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="2f8d7ca9-6476-4f74-bf36-f9f2edd72934"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("GET - PolicyGet");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - PolicyGet" id="6ec87484-260a-44e2-bf62-ab431ac9133b"><con:settings/><con:config service="Policy Get" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/User/{USER}/Policy/{POLICYCLASS}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - PolicyGet" mediaType="application/xml" id="150768de-6b9f-4aef-ac26-2c603ab192d8" sslKeystore="DLASP_CS_1_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ACCT" value="${#TestCase#assertionAccountIdFULL}"/>
  <con:entry key="POLICYCLASS" value="${#Project#urnParentalControlRating}"/>
  <con:entry key="USER" value="${#TestCase#assertionUserIdFULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="02befe05-f703-4e55-ba0c-ddb69b26960d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - PolicyGet');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process response body and headers" id="76839e8a-93bd-4949-a456-2265112d069a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myXML;
def XMLbody = tC.getPropertyValue("XMLbody");
def httpStatus = tC.getPropertyValue("httpStatus");

String policyWasFound = "false";
String xmlPolicyClass = "";
String tcPolicyClass  = tC.getPropertyValue("policyClass");
String coordinatorSchema = tP.getPropertyValue("coordinatorSchema")

/*
*  We can assume that if we get returned an HTTP status 
*  of 'HTTP/1.1 200 OK' the policy was found.  However,
*  it is never a bad idea to doublecheck.
*/

if (XMLbody != null) {
	try {
		myXML = new XmlSlurper().parseText(XMLbody);
	}
	catch(Throwable e) {
		log.info "ERROR - XmlSlurper - $e";
		assert 1 == 2;
	}
	finally {
		xmlPolicyClass = myXML.Policy[0].PolicyClass.text();
		log.info "xmlPolicyClass[$xmlPolicyClass]";
		log.info "tcPolicyClass[tcPolicyClass]";
	}
}

if (httpStatus == "HTTP/1.1 200 OK" ) {
	def myXML1 = new XmlSlurper().parseText(XMLbody);
	def PolicyIDFull = myXML1.Policy.@PolicyID.text().toString();
	int lastColon = PolicyIDFull.lastIndexOf(':');
	PolicyID     = PolicyIDFull.substring(lastColon + 1);
	log.info"=========="+PolicyID
	policyWasFound = "true";
	tC.setPropertyValue("PolicyID",PolicyID);
	
	
} else if ( httpStatus == "HTTP/1.1 404 Not Found") {
	policyWasFound = "false";
	
} else {
	log.info "ERROR!";
	assert 1 == 2;
}


tC.setPropertyValue("policyExists", policyWasFound);</script></con:config></con:testStep><con:testStep type="groovy" name="Return policyExists to calling test case" id="7cb6427b-9963-4a19-8a81-1c7b0cb8b2e4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("policyExists",tC.getPropertyValue("policyExists"));
callTC.setPropertyValue("PolicyID",tC.getPropertyValue("PolicyID"));


if (tC.getPropertyValue("returnXMLResult") == "true") {
	callTC.setPropertyValue("policyGetXML",tC.getPropertyValue("XMLbody"));
}
</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>Policy - Remove all Parental Control Policies</con:value></con:property><con:property><con:name>sName</con:name><con:value>Test Configuration/Setup</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZrU+o6FP0rTP14pjQtlEdHmOGhHgSUC76OX5yYbmi0TWuTFvDXn6RIpYhe7p1hhsnuztprP7KSU44D33I6nEMsaMhKq8Bn3MmsLS2JmRNiTrnDcADcEcSZdcYjxyojB2+3aKVBv6U91Vxi1ayGpVdxZa5Xq7W5/myZDb1ZR6Q5N3ENXCRdOU9gwLjATLQ0C5m2jtTvBjUcs+FYZrnaRI9a6Q5iLrGlS1nu2pBa8ZbmCRE5hrFcLsvLSjmMF4aFkGk8jEcz4kGAtfbpJqMsUNz+8CdlFwj4PimTMDBOjYLPqcudGV0wLJIYPmK538VCBmoa0sfldHGi5XvBHbB5mC17mIWMEuzTd6zqMwbhhW6p4y/CmAov+DYJEylgHVZEJ2aVnWhGkdqRQAWGMcc697D5gTWFOcTACJRup4OWdnJc17KtNzFmfB7GAS8u/xsfYCn4YQSuzrdpfVA7HvBApdqnQJwBI37CaQpXalgjTIB/dBPI8VClSQxzuhpRLgd0xRU7Y5fe3nJTjT5dABf/p0E7zdmA3GE/gfZ4hNJx9WaYTm3+z2I6xPyu8tteEhGPWxmBXefMkLd2s9wbynyINjv8twc7iJov6wAhL+maD4vOubucdW+XvfH1++9aI25e3UwW9T8jD95n9Yu113sJz6oTXLsbRK+v/XvW6XiPw+vRddoJA/uuic7mTTRuDIb3aaV3/1hFk+HFuNKdd8jt7TCq1y4vL9KHlfn2Mr2ycfXxvut6wcto1Dgz0bLZo3/Ir7vLZw60LzhqBiysiOHZqv7r8R218nR2+Bdt2zM/S55fgIjtUo3BoF86l13C4mcxUxbq6vPM1YmU+HABTGhttUtph5NIuaOuI3u4WZu2baF617R79fNa/7x7huwKqjeb5jnqoJptb0Vmw2KPYi9kc6piKcndjM3PBEngcGAuxHoaJlLpuPYDYh8LXBqwqTwEIeNwE0p5tp69WpAS7gfUpxSC+rtFll681kpXobhm13FnLiAuSLJpFiR5CoRGFJRuq7Hmcq65kKV4w2kifLOc4jKDRCp7rETWsaoN2+A0iHxQRI0gdBMfypEXZYUx+Obf0jHhmbU/6swmT73ZU3YejG+z2/+2LYT0caly4CqlLshmwoErxtzm8yXv2sGraAvfSVyqjpesqogp2TApfvocFjUl+aR8JrZlnm/YNxTAjf288nhuSkk+9fndLSVdikB725w3bJbfykmaJlk/qtWKEUt4Q1XEQJYxA5JImVrfhK/AjBzFOOpOyInvBc/tRYqJ8NhMYAGBnJ9StjziETADrh4BAzn3q2NfGIWQsnQCVuKQrefLB4xi/OMbhzhE+UnzRP4tw9j97NgBrJ04Mk/5BhCULdRK3Qfrb8aDhBKWSiUL413wQwCHgheNeZFzLkIO1HMi4PsvJSVRLQ0TEiZMDPpaZtiVzYynWEfgfDp9gcmUOX+q0X9/q+k0GwEC8oHHaYavblxHHQG22JHej6DfqG//J/Utsmt/MX+17NRpf8bbfwE=</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:155207B15C7D6DFBE05307991F0A0655</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:155207B15C7F6DFBE05307991F0A0655</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>ParentalControl:RatingPolicy</con:value></con:property><con:property><con:name>expectErrTypePolicyGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2015/03/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.2/md" xmlns:ns3="http://www.w3.org/2001/04/xmlenc#" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#">
   <Error ErrorID="urn:dece:errorid:org:dece:Policy:PolicyNotFound">
      <Reason Language="en">The policy was not found.</Reason>
      <OriginalRequest>http://qa1.q.uvvu.com/rest/2015/02/Account/urn:dece:accountid:org:dece:155207B15C7D6DFBE05307991F0A0655/User/urn:dece:userid:org:dece:155207B15C7F6DFBE05307991F0A0655/Policy/urn:dece:type:policy:ParentalControl:RatingPolicy</OriginalRequest>
      <ErrorLink>https://qa1.q.uvvu.com/rest/2015/02/error/en/ErrorList.html#Policy:PolicyNotFound</ErrorLink>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 404 Not Found</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyExists</con:name><con:value>false</con:value></con:property><con:property><con:name>returnXMLResult</con:name><con:value>true</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>77321</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>09B4651502C65033E05307991F0AF800</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE682B036D956188DE0401F0A05997A50</con:value></con:property><con:property><con:name>assertionUserIdFULLEncoded</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE682B036DCFD188DE0401F0A05997A50</con:value></con:property><con:property><con:name>policyClassEncoded</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AParentalControl%3AAllowAdult</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/DLASP_CS_1_concat.pem</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">155207B15C7D6DFBE05307991F0A0655</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>155207B15C7F6DFBE05307991F0A0655</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>6ae2f08c-10a7-4e24-8195-8d1921d0534c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyDelete for ParentalControlRating" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="0b3cdb46-936e-418f-9816-aaa8ee9d32b9"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="f93fafb0-3704-4f41-ab69-4a9c647f8fc5"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("expectErrTypePolicyGet",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="96d415b4-f0e6-456e-a10a-88be5c92df99"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("policyClass",callTC.getPropertyValue("policyClass"));
tC.setPropertyValue("PolicyID",callTC.getPropertyValue("PolicyID"));

tC.setPropertyValue("expectErrTypePolicyGet",callTC.getPropertyValue("expectErrTypePolicyGet"));

if (tC.getPropertyValue("expectErrTypePolicyGet") == null || tC.getPropertyValue("expectErrTypePolicyGet") == "") {
		tC.setPropertyValue("expectErrTypePolicyGet","SUCCESS");
}</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="2d2bb90b-1e5d-4248-931e-27ebe015c3e0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("DELETE - PolicyDelete");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - PolicyDelete" id="a5d6644d-8235-444b-9fcb-133ad2bb517a"><con:settings/><con:config service="Policy Delete" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/User/{USER}/Policy/{POLICYCLASS}" methodName="DELETE" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - PolicyDelete" mediaType="application/xml" sslKeystore="iscportal1_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="MINOR" value="${#Project#VersionMinor}"/>
  <con:entry key="MAJOR" value="${#Project#VersionMajor}"/>
  <con:entry key="POLICYCLASS" value="${#Project#urnPolicyID}${#TestCase#PolicyID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="a7dae94f-e383-4f77-af3e-1e4d2d50a472"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('DELETE - PolicyDelete');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process response body and headers" id="51605edc-a5a9-4336-9d44-6a75630dbddb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def XMLbody    = tC.getPropertyValue("XMLbody");
def httpStatus = tC.getPropertyValue("httpStatus");

String policyWasFound = "false";
String xmlPolicyClass = "";
String tcPolicyClass  = tC.getPropertyValue("policyClass");

/*
*  We can assume that if we get returned an HTTP status 
*  of 'HTTP/1.1 200 OK' the policy was found.  However,
*  it is never a bad idea to doublecheck.
*/

if (XMLbody != null) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	xmlPolicyClass = myXML.Policy.PolicyClass.text();
}

		
if (httpStatus == "HTTP/1.1 200 OK" &amp;&amp; xmlPolicyClass == tcPolicyClass) {
	policyWasFound = "true";
}


tC.setPropertyValue("policyExists", policyWasFound);</script></con:config></con:testStep><con:testStep type="groovy" name="Return policyExists to calling test case" id="28fed30a-1093-4648-8385-14cda54a4bec"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("policyExists",tC.getPropertyValue("policyExists"));
</script></con:config></con:testStep><con:properties><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>tName</con:name><con:value>Policy - Remove all Parental Control Policies</con:value></con:property><con:property><con:name>sName</con:name><con:value>Test Configuration/Setup</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value>nVbZcuo4EP0Vyvcx5RWzuQJVBkLirBDIxsuUkGVQsCXHklny9SMZcDAhGe48udRunT696EjnDESh5biMoYRjSkqrKCTMyaxNJU2IQwHDzCEgQszh0Bm6d7eOpRkO2G1RSl63qfwzqQbArvl1FQU1W7VN21InwKqJpVGvNapmHRi2cGUsRR5hHBDeVCzDtFWjoZrGyGg45ZpTqWmVhj1WSs8oYQJbuGiGsiW1Yk1lxnns6PpyudSWZY0mU90yDFN/vbsdwhmKgNI632SUBUpaW3+o+QiiMIQapJF+rhd8zn3mDPGUAJ4maBvL/ymWoRsNXfj4DE//KPle5HskoNmyAwglGIIQfwJZnzvEZ9QvueGUJpjPoh+TMA0JrKIVVKFpkz+KXqR2IlCBYcKAymbA3GI9ogAliEBUenr0msqf07qWbR0lgLCAJhErLv+ODyILFNIY+SrbpbWldjrgkUq1zhF0PALDlOEFupfDGgOI2LabCJ4OVeonKMCrW8zEgK6YZKfv0ztYbqrRxVPE+P9p0F5zNiDPIExRq9dvjKPZ4O29staJPbp+GI4H86tB2H+DzYzAvnNmyFu7WR4MZT5Emx24PIj6/XvLnI5M4K0fz669qXt5rU+IGfbGN/NG/6Y9H7vPeHTfTuvzvrXS3U/4MqbJ+3hSaUzf8NV49PpwsYbV9U3a/XgNZ8urt6e4Xk7eVyxaB5fl1bV5/RKdLa7mT8tOO6676cenZeNB4Hbp2cMMzt4G/V6cXlqrmhfiMvUnNy8DRoceXcaN9BJ2q/3OFFn1Zp7OHv+ibXfmh+nkHUG+W8ox8LqlnugS4L+LmbRgXw0yVyeW4sM4IlxpyV1SO5xUyB32HdHDzdqw2mW33eu5RrlsVC7sC6Mivo2G2TPcumFVdiKzYXFAsUNJgGUsKbmbsfmdIIwchoiPEnVBU6F0TPkFsQs4KHnkURwCShgaUSHPpuGnSXUyrc/LPDCD9cSuflbtd98MlNI95Q/kIXEDjpKCKJtWQZQfEcQxRlK55WAzMdmMi2J8gEXKQ1NbAI2gVGh7ImXWsex6RWc4ikMkqeoR9dMQafEszkqjs83XUgFkmRUzGNOEgzA7EfqP+R3+25VC+PhYOjCZUhuJdqIjl4y9y+db3pWjl9EO3k19LA+YqCtPMNwwKf76Ghc5J/msfCW2Y55v+EsAyI5A6L/w0w9Lk0f0F3gv/u42F/eCUJLWrr8fQPvQ0sUizTpak4qZCHhdFks3LH2IYCq0bj2ic0T0HEU/6WLJiR8Ez+1FiimfkSEHHEViBEvZ8oSXxBAx+ZLwxOFZnfpMKYQUpeNoxY/ZOqF4BUnGvz6UoAOlnzD3xWdJE/+rY0ew9uKIPMVDgmMylSt5qax/GBBIBSwWckiTffBjAMeCF415kXMuXAzUJOXo5z8lqXNNBUBIU8K9rpIZ9rU348nXMXK+nL7BZPKev/fwfz/4VJyNAETilchwhi+vbUceATLd0+9t0EMJ73S71XqtXauY1e6+hLfbRjUvSoFd65v5u2WvTocz3voX</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:02B3CDD687B7516DE05305991F0ABB06</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:02B3ABFFA03305E4E05305991F0A8025</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>ParentalControl:RatingPolicy</con:value></con:property><con:property><con:name>expectErrTypePolicyGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>policyExists</con:name><con:value>false</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QC_Id</con:name><con:value>77325</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>09B4651502C65033E05307991F0AF800</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE682B036D956188DE0401F0A05997A50</con:value></con:property><con:property><con:name>assertionUserIdFULLEncoded</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE682B036DCFD188DE0401F0A05997A50</con:value></con:property><con:property><con:name>policyClassEncoded</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AParentalControl%3ARatingPolicy</con:value></con:property><con:property><con:name>PolicyIDEncoded</con:name><con:value>urn%3Adece%3Apolicyid%3Aorg%3Adece%3AE68F7AD0B700B174E0401F0A0799424D</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\GIT\uv-coordinator-api-regression\Certs\QALP1/iscportal1_concat.pem</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>02B3CDD687B7516DE05305991F0ABB06</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>02B3ABFFA03305E4E05305991F0A8025</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreate for ParentalControlBlockUnratedContent" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="92264ec9-2021-4782-9d82-4d78d361ff1c"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="117dbffa-ece5-427e-a6b3-79ffdf95426b"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("policyStatus","urn:dece:type:status:active");
tC.setPropertyValue("policyAuthority","urn:dece:role:coordinator");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("streamhandleFULL",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("policyResource",null);
tC.setPropertyValue("policyRequestEntity",null);
tC.setPropertyValue("policyAuthority",null);
tC.setPropertyValue("policyCreator",null);
tC.setPropertyValue("policyStatus",null);
tC.setPropertyValue("policyResourceXML",null);
tC.setPropertyValue("expectErrTypePolicyCreate",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="ff1455c6-1824-48f7-a88f-b83030397923"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("policyResource",callTC.getPropertyValue("policyResource"));
tC.setPropertyValue("policyRequestEntity",callTC.getPropertyValue("policyRequestEntity"));
tC.setPropertyValue("policyClass",callTC.getPropertyValue("policyClass"));
tC.setPropertyValue("policyAuthority",callTC.getPropertyValue("policyAuthority"));
tC.setPropertyValue("policyCreator",callTC.getPropertyValue("policyCreator"));
tC.setPropertyValue("policyStatus",callTC.getPropertyValue("policyStatus"));
tC.setPropertyValue("expectErrTypePolicyCreate",callTC.getPropertyValue("expectErrTypePolicyCreate"));
tC.setPropertyValue("policyAuthority", "urn:dece:role:type:coordinator");

if (tC.getPropertyValue("expectErrTypePolicyCreate") == null || tC.getPropertyValue("expectErrTypePolicyCreate") == "") {
		tC.setPropertyValue("expectErrTypePolicyCreate","SUCCESS");
}
if (tC.getPropertyValue("policyCreator") == null || tC.getPropertyValue("policyCreator") == "") {
		tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
}

switch (tC.getPropertyValue("policyClass")) {
	case "urn:dece:type:policy:EndUserLicenseAgreement":
		tC.setPropertyValue("policyResource","urn:dece:agreement:enduserlicenseagreement:10");
	break;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="fa2e61fa-e9a0-475f-8e37-0f23132e3058"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("POST - PolicyCreate");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - PolicyCreate" id="a27b1807-47e9-443e-bc77-6832f561d8ee"><con:settings/><con:config service="Policy Create" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/User/{USER}/Policy/{POLICYCLASS}" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - PolicyCreate" mediaType="application/xml" postQueryString="false" id="3b8441db-ba0c-4f77-ab67-67889879e318" sslKeystore="DLASP_CS_1_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="${#Project#coordinatorSchema} dece.xsd" xmlns:dece="${#Project#coordinatorSchema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:${#TestCase#policyClass}</dece:PolicyClass>  
      <dece:RequestingEntity>${#TestCase#policyRequestEntity}</dece:RequestingEntity>
      <dece:PolicyAuthority>${#TestCase#policyAuthority}</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#assertionUserId}">
            <dece:Value>${#TestCase#policyStatus}</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="MINOR" value="${#Project#VersionMinor}"/>
  <con:entry key="MAJOR" value="${#Project#VersionMajor}"/>
  <con:entry key="POLICYCLASS" value="${#Project#urnParentalControlBlockUnratedContent}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="06f59615-ee78-4ce1-b795-b15b4d821374"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('POST - PolicyCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="d9e0147a-253f-488f-a04b-020f3c75109b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrTypePolicyCreate");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");
String orgRequest = url + "/rest/$major/$minor/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";

/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 201 Created";
	break;
}
	
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;
</script></con:config></con:testStep><con:properties><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbvU+I8EP7uX9HpfbwpbaH8aEeYQap3iKceRc/xixPThUbaFJO0gH/9JcVWQPT13hlmmGw3u8/uPnmSY46SuO71OQcmSEq1od/VH5ohDhF228YUABmOXUdG57HVNpqP7hSD5YbyT9eGnGcwpFwgKrp63bIdw2oadnNiuZ7jeI5d6zSce127BcZlaOlSs3RtlcSUe0Xarp4x6qWIE+5RlAD3BPaC/q8LT3p6qMSk9443KIuErBcJsfBME9dCwBDHuIbTxDw2d3yOQ+4FZEaRyBi85gx5V3/du1wua8tGLWUzs25Zlmm5pvQJOZl903tH5WYIh3SabtYDRFNKMIrJC1KgfoGI0lDrx7OUERElH4S2TdtSoQ1YYQPbDv2mm28JCnRfjLQDknFk8AjZZbAxTIEBxaDdjIdd/dvXJrjZO2GI8mnKEr63/jdIQHOI0wWEBi8rK9F9PeKBdvWOAXtDiuOMkxwuFU0WCAPXrhlMyeqCcEm+kGvF+LUVlz9Ssgzwv4zl2NzGKqGbB7rjkxlw8X9mtj2vTZRbFGfQW6/XoT92/PNRv2mPMhSwKFjh+SSv824BYdt5A6oa9+t6n6wVt143jfLfsDw9m3fiAfX9l6cOOmHrH5fn+JKNWzM6+3N1GVjR+qmNrjo/hhG7PLeSpB3f/LiFiJt/bDLt359MxqeBO789ykdtn8/J/SB+mdsOaQQjarJ8RRujm7Vt3bGX1mqSN3mD3aytxc+bq/nPtn1/d/fUpDfDE3bRObkY3V/74nfCXvDRozl3v+f276er79F1ePqnQzrdt5q2a9g1lpIQZI9PgEW5VPQY+tqZnBcSn8uLspDQmBau3kJpFBdAhd5Tu5S0eJkUIBJ6cpib9ZnbOrVOzuxGp+M2mm7j1HIs+8zqW23XbTfOWqUGbVDsQRykdEpULqWyG/58DhAnHgcaAjPyNMMRcP2TiD4SSBvSsTwcKeUwSaWKo6btLmHOn1oiWsxXlDsWyzmWp+MyFVf0ivWnAtiOctv1HeUeAyYLAkreFb+5JDgXshXPKM9EbNdyVKOQyQuAKQ326k6naXKSLGJQQM0kDbMYaotoUTTG5Jv/uoEwL6z+RT+4fhgED3Zx/D6sbv9b2QjpExLlwFVJJyCHCQduokZZz7u6mwdvrDJ8PwuJOmWyq4IRvEGy++mNLIolFVPeCiuRVxv2DTvBzf26qnxhTnDF+uq6lmovtaBXDucZ1Z5rWZ5nxTjaSueYDG9KubPNAHAmxWo9SedAzSqE+aW7okK9l7my7+LLREQDgQQkkjxasfzCQyEArh4KQ0n61VdfITspZd8ErMQh2yCW7wmF+NMnB/aw8pPma/m3TFn4Nq4DsbbyyDrl60AQOlMrdSusP+AGTmVYImUsZdvBDwU4lHzXWDW5wiIkmx4zAR9/0ZQ+dXWEcZpRMfT1wrCtmQVOsV6A9+b0Lkyhy68X7Yp/eNHe/boIpHolSK98yX87G6SgCwZd3ecFlq6+ku9GmZzOtjT6FeC+TNstx7dPB22/5dT3ZLpTNXCnkt4783vLVk/3z0PvLw==</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:F96E164D1EC7D642E0401F0A079973F8</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrTypePolicyCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/11/Account/urn:dece:accountid:org:dece:F96E164D1EC7D642E0401F0A079973F8/User/urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6/Policy/urn:dece:type:policy:ParentalControl:BlockUnratedContent</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>policyAuthority</con:name><con:value>urn:dece:role:type:coordinator</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>ParentalControl:BlockUnratedContent</con:value></con:property><con:property><con:name>policyCreator</con:name><con:value>urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>policyRequestEntity</con:name><con:value>urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>policyResource</con:name><con:value>urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>policyStatus</con:name><con:value>urn:dece:type:status:active</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value>Test Configuration/Setup</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>tName</con:name><con:value>Policy - General Policy Establishment</con:value></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyResourceXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QC_Id</con:name><con:value>77323</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE682B036D956188DE0401F0A05997A50</con:value></con:property><con:property><con:name>assertionUserIdFULLEncoded</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE682B036DCFD188DE0401F0A05997A50</con:value></con:property><con:property><con:name>policyClassEncoded</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AParentalControl%3ARatingPolicy</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/DLASP_CS_1_concat.pem</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>F96E164D1EC7D642E0401F0A079973F8</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>F96E0BF138893593E0401F0A079973F6</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>74d73113-873f-4bb0-8005-75f49a387b87</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Policy GET for ParentalControlBlockUnratedContent" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="cecf61cd-2410-4c44-8485-e1b349f0e01f"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="e0dd1210-8dda-4ad3-9f9e-52af543d4c51"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("returnXMLResult",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("expectErrTypePolicyGet",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="e181b5c3-bc23-4b51-a1de-668d42b774dd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("policyClass",callTC.getPropertyValue("policyClass"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));

tC.setPropertyValue("returnXMLResult",callTC.getPropertyValue("returnXMLResult"));
tC.setPropertyValue("expectErrTypePolicyGet",callTC.getPropertyValue("expectErrTypePolicyGet"));

if (tC.getPropertyValue("expectErrTypePolicyGet") == null || tC.getPropertyValue("expectErrTypePolicyGet") == "") {
		tC.setPropertyValue("expectErrTypePolicyGet","SUCCESS");
}
if (tC.getPropertyValue("returnXMLResult") == null || tC.getPropertyValue("returnXMLResult") == "") {
		tC.setPropertyValue("returnXMLResult","false");
}</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="1101739c-766a-4989-8dda-05dbd70e605a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("GET - PolicyGet");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - PolicyGet" id="50a9c3b5-eaf5-4b99-938e-ed51056b8457"><con:settings/><con:config service="Coordinator APIs" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/User/{USER}/Policy/{POLICYCLASS}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - PolicyGet" mediaType="application/xml" sslKeystore="DLASP_CS_1_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="POLICYCLASS" value="${#Project#urnParentalControlBlockUnratedContent}"/>
  <con:entry key="USER" value="${#TestCase#assertionUserIdFULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="ba33a795-528d-40de-bfbf-a64d668d7455"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - PolicyGet');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process response body and headers" id="174f4180-561a-497d-a5bb-140a100fb797"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myXML;
def XMLbody = tC.getPropertyValue("XMLbody");
def httpStatus = tC.getPropertyValue("httpStatus");

String policyWasFound = "false";
String xmlPolicyClass = "";
String tcPolicyClass  = tC.getPropertyValue("policyClass");
String coordinatorSchema = tP.getPropertyValue("coordinatorSchema")

/*
*  We can assume that if we get returned an HTTP status 
*  of 'HTTP/1.1 200 OK' the policy was found.  However,
*  it is never a bad idea to doublecheck.
*/

if (XMLbody != null) {
	try {
		myXML = new XmlSlurper().parseText(XMLbody);
	}
	catch(Throwable e) {
		log.info "ERROR - XmlSlurper - $e";
		assert 1 == 2;
	}
	finally {
		xmlPolicyClass = myXML.Policy[0].PolicyClass.text();
		log.info "xmlPolicyClass[$xmlPolicyClass]";
		log.info "tcPolicyClass[tcPolicyClass]";
	}
}

if (httpStatus == "HTTP/1.1 200 OK") {
	def myXML1 = new XmlSlurper().parseText(XMLbody);
	def PolicyIDFull = myXML1.Policy.@PolicyID.text().toString();
	int lastColon = PolicyIDFull.lastIndexOf(':');
	PolicyID     = PolicyIDFull.substring(lastColon + 1);
	log.info"=========="+PolicyID
	policyWasFound = "true";
	tC.setPropertyValue("PolicyID",PolicyID);
	
} else if ( httpStatus == "HTTP/1.1 404 Not Found") {
	policyWasFound = "false";
	//tC.setPropertyValue("policyExists", policyWasFound);
} else {
	log.info "ERROR!";
	assert 1 == 2;
}




tC.setPropertyValue("policyExists", policyWasFound);</script></con:config></con:testStep><con:testStep type="groovy" name="Return policyExists to calling test case" id="a7fb9224-275c-4585-a3ab-d6cbbc783e57"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("policyExists",tC.getPropertyValue("policyExists"));
callTC.setPropertyValue("PolicyID",tC.getPropertyValue("PolicyID"));


if (tC.getPropertyValue("returnXMLResult") == "true") {
	callTC.setPropertyValue("policyGetXML",tC.getPropertyValue("XMLbody"));
}
</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>Policy - Remove all Parental Control Policies</con:value></con:property><con:property><con:name>sName</con:name><con:value>Test Configuration/Setup</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZrU+o6FP0rTP14pjQtlEdHmOGhHgSUC76OX5yYbmi0TWuTFvDXn6RIpYhe7p1hhsnuztprP7KSU44D33I6nEMsaMhKq8Bn3MmsLS2JmRNiTrnDcADcEcSZdcYjxyojB2+3aKVBv6U91Vxi1ayGpVdxZa5Xq7W5/myZDb1ZR6Q5N3ENXCRdOU9gwLjATLQ0C5m2jtTvBjUcs+FYZrnaRI9a6Q5iLrGlS1nu2pBa8ZbmCRE5hrFcLsvLSjmMF4aFkGk8jEcz4kGAtfbpJqMsUNz+8CdlFwj4PimTMDBOjYLPqcudGV0wLJIYPmK538VCBmoa0sfldHGi5XvBHbB5mC17mIWMEuzTd6zqMwbhhW6p4y/CmAov+DYJEylgHVZEJ2aVnWhGkdqRQAWGMcc697D5gTWFOcTACJRup4OWdnJc17KtNzFmfB7GAS8u/xsfYCn4YQSuzrdpfVA7HvBApdqnQJwBI37CaQpXalgjTIB/dBPI8VClSQxzuhpRLgd0xRU7Y5fe3nJTjT5dABf/p0E7zdmA3GE/gfZ4hNJx9WaYTm3+z2I6xPyu8tteEhGPWxmBXefMkLd2s9wbynyINjv8twc7iJov6wAhL+maD4vOubucdW+XvfH1++9aI25e3UwW9T8jD95n9Yu113sJz6oTXLsbRK+v/XvW6XiPw+vRddoJA/uuic7mTTRuDIb3aaV3/1hFk+HFuNKdd8jt7TCq1y4vL9KHlfn2Mr2ycfXxvut6wcto1Dgz0bLZo3/Ir7vLZw60LzhqBiysiOHZqv7r8R218nR2+Bdt2zM/S55fgIjtUo3BoF86l13C4mcxUxbq6vPM1YmU+HABTGhttUtph5NIuaOuI3u4WZu2baF617R79fNa/7x7huwKqjeb5jnqoJptb0Vmw2KPYi9kc6piKcndjM3PBEngcGAuxHoaJlLpuPYDYh8LXBqwqTwEIeNwE0p5tp69WpAS7gfUpxSC+rtFll681kpXobhm13FnLiAuSLJpFiR5CoRGFJRuq7Hmcq65kKV4w2kifLOc4jKDRCp7rETWsaoN2+A0iHxQRI0gdBMfypEXZYUx+Obf0jHhmbU/6swmT73ZU3YejG+z2/+2LYT0caly4CqlLshmwoErxtzm8yXv2sGraAvfSVyqjpesqogp2TApfvocFjUl+aR8JrZlnm/YNxTAjf288nhuSkk+9fndLSVdikB725w3bJbfykmaJlk/qtWKEUt4Q1XEQJYxA5JImVrfhK/AjBzFOOpOyInvBc/tRYqJ8NhMYAGBnJ9StjziETADrh4BAzn3q2NfGIWQsnQCVuKQrefLB4xi/OMbhzhE+UnzRP4tw9j97NgBrJ04Mk/5BhCULdRK3Qfrb8aDhBKWSiUL413wQwCHgheNeZFzLkIO1HMi4PsvJSVRLQ0TEiZMDPpaZtiVzYynWEfgfDp9gcmUOX+q0X9/q+k0GwEC8oHHaYavblxHHQG22JHej6DfqG//J/Utsmt/MX+17NRpf8bbfwE=</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:155207B15C7D6DFBE05307991F0A0655</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:155207B15C7F6DFBE05307991F0A0655</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>ParentalControl:BlockUnratedContent</con:value></con:property><con:property><con:name>expectErrTypePolicyGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2015/03/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.2/md" xmlns:ns3="http://www.w3.org/2001/04/xmlenc#" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#">
   <Error ErrorID="urn:dece:errorid:org:dece:Policy:PolicyNotFound">
      <Reason Language="en">The policy was not found.</Reason>
      <OriginalRequest>http://qa1.q.uvvu.com/rest/2015/02/Account/urn:dece:accountid:org:dece:155207B15C7D6DFBE05307991F0A0655/User/urn:dece:userid:org:dece:155207B15C7F6DFBE05307991F0A0655/Policy/urn:dece:type:policy:ParentalControl:BlockUnratedContent</OriginalRequest>
      <ErrorLink>https://qa1.q.uvvu.com/rest/2015/02/error/en/ErrorList.html#Policy:PolicyNotFound</ErrorLink>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 404 Not Found</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyExists</con:name><con:value>false</con:value></con:property><con:property><con:name>returnXMLResult</con:name><con:value>true</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>77321</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>F96E0BECC451BD79E0401F0A079973F4</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE682B036D956188DE0401F0A05997A50</con:value></con:property><con:property><con:name>assertionUserIdFULLEncoded</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE682B036DCFD188DE0401F0A05997A50</con:value></con:property><con:property><con:name>policyClassEncoded</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AParentalControl%3AAllowAdult</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/DLASP_CS_1_concat.pem</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">155207B15C7D6DFBE05307991F0A0655</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>155207B15C7F6DFBE05307991F0A0655</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyDelete for ParentalControlBlockUnratedContent" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="db8879b6-1e6c-464f-b6c1-2bebf871c303"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="f1dc8de8-ea29-4d38-8fb6-4dcf1bbf605c"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("expectErrTypePolicyGet",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="90b7a220-5d1f-444c-831b-146d50dafdfd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("policyClass",callTC.getPropertyValue("policyClass"));
tC.setPropertyValue("PolicyID",callTC.getPropertyValue("PolicyID"));

tC.setPropertyValue("expectErrTypePolicyGet",callTC.getPropertyValue("expectErrTypePolicyGet"));

if (tC.getPropertyValue("expectErrTypePolicyGet") == null || tC.getPropertyValue("expectErrTypePolicyGet") == "") {
		tC.setPropertyValue("expectErrTypePolicyGet","SUCCESS");
}</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="cff16e97-dbfb-4e4a-bea9-8e9c1d1871bd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("DELETE - PolicyDelete");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - PolicyDelete" id="02801a4e-7b60-4b99-9132-272724a5abfe"><con:settings/><con:config service="Policy Delete" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/User/{USER}/Policy/{POLICYCLASS}" methodName="DELETE" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - PolicyDelete" mediaType="application/xml" sslKeystore="iscportal1_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="MINOR" value="${#Project#VersionMinor}"/>
  <con:entry key="MAJOR" value="${#Project#VersionMajor}"/>
  <con:entry key="POLICYCLASS" value="${#Project#urnPolicyID}${#TestCase#PolicyID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="c1d48527-a4ff-4200-a6a1-6b70544b5adc"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('DELETE - PolicyDelete');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process response body and headers" id="b167742f-f34e-438e-b109-8392cd2a16d7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def XMLbody    = tC.getPropertyValue("XMLbody");
def httpStatus = tC.getPropertyValue("httpStatus");

String policyWasFound = "false";
String xmlPolicyClass = "";
String tcPolicyClass  = tC.getPropertyValue("policyClass");

/*
*  We can assume that if we get returned an HTTP status 
*  of 'HTTP/1.1 200 OK' the policy was found.  However,
*  it is never a bad idea to doublecheck.
*/

if (XMLbody != null) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	xmlPolicyClass = myXML.Policy.PolicyClass.text();
}

		
if (httpStatus == "HTTP/1.1 200 OK" &amp;&amp; xmlPolicyClass == tcPolicyClass) {
	policyWasFound = "true";
}


tC.setPropertyValue("policyExists", policyWasFound);</script></con:config></con:testStep><con:testStep type="groovy" name="Return policyExists to calling test case" id="843ec05b-40e7-4471-b833-dd8f98b21b48"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("policyExists",tC.getPropertyValue("policyExists"));
</script></con:config></con:testStep><con:properties><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>tName</con:name><con:value>Policy - Remove all Parental Control Policies</con:value></con:property><con:property><con:name>sName</con:name><con:value>Test Configuration/Setup</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value>nVbbbuo4FH3vV0Tp4whyadKQqCDRAjrM4UAP9P4yMvYGXBInjR1IztePHRoKlHbakVCQd7bXXvuSZV9wFIV20OYcUkFjpvU7Tf0f4pyRhglebTaVD8f2cK1B5MPzp9bUxO4ZxqBrfc4z6DMuEBNN3TYtp2a6Ncu9Mf3AcQLLqVu286Rrd5ByCS1d6qau5VHIeFCGbepZyoIYccoDhiLggcDBpP1rEEjPAFWc9NbFhmUZMG0thEgCw8B1AhjCENdxHBkXxp7PBeHBhM4ZElkKrzEJb+qve9frdX19Vo/TuWGbpmmYviF9CKfzU711Um0G0mezeLO+QixmFKOQ/kGK1C8Qi5ho7XAep1Qsog+gLcMyFXQNclzDlsNOdeMtQMnui0h7JFOOanyBrApsDDNIgWHQbsf9pn76tQ5u9t6kiPFZnEb8YP09SsBWEMYJkBqvMqvYfR3xSLlaF4CDPsNhxukKhmpMEoSBa9cpzGg+oFwOH+Fa2X4t5/JHqykD/J22XBi7XCV140h1OnQOXPyfnu32a4Nyh8IMWo64XBqjhsF/G+vC83NiPw26hHsTt90sKew6b0ht2/26PhzW7Wy9bnpg5G7kDR6fnq6c5xD5ayfu/xxin4yLxTxxR2H048Gcrvqzq+mN8PHP578KAbPGKExmcD25Q2nj59Dx1y/u/ePdyeTG+23a0f38Kvk7S7qrfIV+LN31o7dAPTLtIiO/vbW8YmnNsqUXp0WvsIe96w4bjadOMRj+uTxH2fqeh23MeieFjDimtz36MrpbDobRS+E033LazWHfWEnCJJs+AxbVUo1Hv6P1ZL+Q+FxelIWS2qx0DRKlUVwAE3pL7VLSEmRSgCgJZDM3655/3rXMrt3udF3rstHumo5p9cy26fm+2760Kw3asDigeBWzGVWxlMpu5udzgjgKODACaW0VZ3gBXP8EsYME0vpsLD+OmHG4iaWK+3zh5g6Z+i7JScbO7MXSR8Uz1rVhLEZslLZnAtI95bbsPeUeA6YJBSXvar65HHAuZCle0CoToVVfoTqDTB4AqdLgwHYarsFplISgiBpRTLIQ6skiKQtj8M2/XUOYl1bKcRKnAoVW+fl9mN3hu6oQ0odQ5cBVSpcgmwlHTiKzyudd3u7RE6uCb2eEqq9MVlWkFG+Y7L96GxY1JdtJeUusYr7d8E0AzI9AGJ/wMw5Ls41IVnQnfnW6ygNDykmr6u8Lqr/Us9UqKzvqKalMJbwhFdMyJoAzqXfFTbwEZmwhjC8dN1vWB5G39n1+mViwiUACIjl/Wrn8wl1jAlzdNfryu8m/epHZCynrJiAXx2xXobySKMaf3lpwgJWfNF/Lv3Wckrd2HcHaiSPzlBcMQdlcrdTBUnwwHTiWsFQqYZzugh8DOBZ837gt8paLkNM0zQR8/EZTEtfUEcZxxkS/o5eGXdkteYoigeDN6R1MKe2vZ3XOPzyrH34NJlIAI6Rvfel/O9doOS7qpir9Sy5NPZdXTxmczXdk/pXgvtK7Zsc2z3uOfdnzes6e0p+f+9sC7mXSemd+b9mp6eH30PoX</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:F96E10E2ADE51B8AE0401F0A07995AB2</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>ParentalControl:BlockUnratedContent</con:value></con:property><con:property><con:name>expectErrTypePolicyGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>policyExists</con:name><con:value>false</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QC_Id</con:name><con:value>77325</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>F96E0BECC451BD79E0401F0A079973F4</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE682B036D956188DE0401F0A05997A50</con:value></con:property><con:property><con:name>assertionUserIdFULLEncoded</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE682B036DCFD188DE0401F0A05997A50</con:value></con:property><con:property><con:name>policyClassEncoded</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AParentalControl%3ARatingPolicy</con:value></con:property><con:property><con:name>PolicyIDEncoded</con:name><con:value>urn%3Adece%3Apolicyid%3Aorg%3Adece%3AE68F7AD0B700B174E0401F0A0799424D</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/iscportal1_concat.pem</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>F950D206F42BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>F96E10E2ADE51B8AE0401F0A07995AB2</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreate for ParentalControlAllowAdult" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="be11b1c6-13e9-49b9-ab5d-a06d6dba91f2"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="68bdabe0-4139-474e-bbae-313be68456b5"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("policyStatus","urn:dece:type:status:active");
tC.setPropertyValue("policyAuthority","urn:dece:role:coordinator");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("streamhandleFULL",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("policyResource",null);
tC.setPropertyValue("policyRequestEntity",null);
tC.setPropertyValue("policyAuthority",null);
tC.setPropertyValue("policyCreator",null);
tC.setPropertyValue("policyStatus",null);
tC.setPropertyValue("policyResourceXML",null);
tC.setPropertyValue("expectErrTypePolicyCreate",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="fc8049b4-b476-4512-8125-56d7d80acdb4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("policyResource",callTC.getPropertyValue("policyResource"));
tC.setPropertyValue("policyRequestEntity",callTC.getPropertyValue("policyRequestEntity"));
tC.setPropertyValue("policyClass",callTC.getPropertyValue("policyClass"));
tC.setPropertyValue("policyAuthority",callTC.getPropertyValue("policyAuthority"));
tC.setPropertyValue("policyCreator",callTC.getPropertyValue("policyCreator"));
tC.setPropertyValue("policyStatus",callTC.getPropertyValue("policyStatus"));
tC.setPropertyValue("expectErrTypePolicyCreate",callTC.getPropertyValue("expectErrTypePolicyCreate"));
tC.setPropertyValue("policyAuthority", "urn:dece:role:type:coordinator");

if (tC.getPropertyValue("expectErrTypePolicyCreate") == null || tC.getPropertyValue("expectErrTypePolicyCreate") == "") {
		tC.setPropertyValue("expectErrTypePolicyCreate","SUCCESS");
}
if (tC.getPropertyValue("policyCreator") == null || tC.getPropertyValue("policyCreator") == "") {
		tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
}

switch (tC.getPropertyValue("policyClass")) {
	case "urn:dece:type:policy:EndUserLicenseAgreement":
		tC.setPropertyValue("policyResource","urn:dece:agreement:enduserlicenseagreement:10");
	break;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="b3954ad5-6b85-405b-adbb-b258dc328f3e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("POST - PolicyCreate");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - PolicyCreate" id="ef98cc41-ca09-4369-914b-e28564038255"><con:settings/><con:config service="Policy Create" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/User/{USER}/Policy/{POLICYCLASS}" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - PolicyCreate" mediaType="application/xml" postQueryString="false" id="3b8441db-ba0c-4f77-ab67-67889879e318"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="${#Project#coordinatorSchema} dece.xsd" xmlns:dece="${#Project#coordinatorSchema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:${#TestCase#policyClass}</dece:PolicyClass>  
      <dece:RequestingEntity>${#TestCase#policyRequestEntity}</dece:RequestingEntity>
      <dece:PolicyAuthority>${#TestCase#policyAuthority}</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#assertionUserId}">
            <dece:Value>${#TestCase#policyStatus}</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="MINOR" value="${#Project#VersionMinor}"/>
  <con:entry key="MAJOR" value="${#Project#VersionMajor}"/>
  <con:entry key="POLICYCLASS" value="${#Project#urnParentalControlAllowAdult}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="b23e69eb-0121-444c-a49d-7a1329b3e715"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('POST - PolicyCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="915a87e0-6447-4a46-9bd3-65c73d6c0e99"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrTypePolicyCreate");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");
String orgRequest = url + "/rest/$major/$minor/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";

/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 201 Created";
	break;
}
	
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;
</script></con:config></con:testStep><con:properties><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">pVfHkuLKEt3zFQSzJGhZjIjujigZQIAACRCIzQ1RKmSQAVng628JGqbdzJu5b9VdqazMk4bMU8+JGfh0FyQJilM3Cquy+FL7p8Ps2rsO4hocx9INlkS7hmm2rEa7jTptxJA7k2JrVTlJMiSHSWqG6UuNJimmQZENilqQrS7d7rL0E013NrWqjuIEm8YqT2Stegr8MOle3b7UsjjsRmbiJt3QDFDSTWF3DpRxF2t2zTum2uvzDeXVYfzqpOmhSxDwyUIQ+T58glFAPBMfdJ6tpDt37dBMsxi9+bSSl9rb3aIongrmKYptgiZJkiA5AutYiWv/qL1W7peRJYe76HYWzDAKXWj67sUsQSkodSKrCnw7it3UCX5hmiIosjTdQCfYgBQb/qgRPx1c0f2hpQ8g48RsJI5J3Y1paIdiFEJUXWryS+3Hn1XwdncRm2Gyi+Ig+XT+O0gozJEfHZDVSO6R3dH9ucVv0vX6jGBXDqGfJW6OJmWbHEyIkuosRjv3NHYT3HxWUr2Wv3pK7h2G4N+U5Jl4jxPDJr7JjOjaKEn/S73e1+pmRTf9DL0aWmwR9tEWhtnF8IRgPjfQyLWX7LzzcoXwXvkG6lHqt/PnRn301dulqbpB8swnBIOsiwwQdqxcr7trZRvu+7YYItlTrfVuRvQuzjZTAbugA+GcazNW2hxX22xyPmtLoPVAm8/dChS2cEzTGmfaeacQp8zAnhymeThAUhifWHk8PhGLpSi21ZV+UURxztX1lmyxs0E0PtF7Qo4sTSTEes+MjMpK5SQlb3Ogr8f6fKADt3j5GdP7GMq4Ruh8DbL8f90kOdFMzcdBKCfFDv88U/SqyLJQFwUBIMEGhcwDW+bHHpjw9v7o7N0+V5A8UJc9IIKzooFCtA1RV9WRVFi67m90udfjFY0tBsAQK/iDKJ10cbMekuZqczDoHrmZ87y11qItMzxYg30xcOBEWSjFZCGfFU8qpgvQXF1l9gmfL4qnUNPFkqmsPJ5TNKkQi6tHUSqcyWalHYwlV8CLpCqA7QNqKQmOMlgEOgUZzYGeNFbA/irnHUXQdeUkLcCswtsTHce2EHqbAwyswzbwnXfGB9j4wurr523fzzYXyVMEqS/Mj/25vGVEVRoCzVhuV/reXPXyChxMwPbu0W265joq7A2usGoMR9FGdnI4AarE8yrA6SKBIveHIOrzYDzozCaHYYGK6VkdDk1TAxVqJ7YFBA7LmU4651gQzbEYpR1oXaKztFUmAZxNLp632iPOy8EUuP4uiFrbKb0uaA2dxhPKJ9nOFM0EaVMBU60T1HudiLzsF9NmOBWXgKrXR2EzhKsJxZJRYrWNbMDoJxIxtte61ENNXZ4HVCqvDPsoRc31KZUXF/diVYCt8AD0vaXHqwrfKZNqyYVqKLwJelKagYtHpyNaPw4HuQ8NBkSn0Wrq7d8KY4mFxBOFKuG2kiodEVhlEQbzpdTzwJK37Zi3pR6vQhGohjwqDJyv5QArf85j75pHW+LBkIFbataqnAuLoZOdfHDMzlJPAo/zqI6hwa1fd4Tj1jYiBu4L/qCR09WSGSTpgJYG6Q6eN9S+HUyket7vne31qMnyVMXyip2Tb612dj6teo7e7A9tv1VXdWrv2e3xarNGen3MaVDsGzBYI1yp/Ly1EuF0RnwzW5EjY+jtbVWjGaHinGfiaDTxTzNOt3asF+zrxzXBMJI0gnA4dehgrC4XYyaAQc659VnfPhtA0jsuxkRcELsKDqS9ZLbbFo9z1t45Usgem8GyLhkTXvBzKV+wuTTc5vlKmhLakbwUe8mjUF0Y0oHJTPpJS0NqbO+1PWONPbuZGtZkmu/GlVxVVqujPrIKL+Eo87LhTrnW1gJltOLik3QboJ+nw0N4mx/E+8nyYfTcScc823oIpvdjuYBksdrDW8FMf09gSolrNXZX1e6hZEFJisK09lreKslLN8MUx7W6eGXczlKnTTNMSwQC3+EZoS2RLEn1SEC2OY7kRfrOcm4oPkEUonDnlr5KHnfbUr8HCINugkILxY08yqCDktpvLJb5qsqhhtdvFCZoEWGeSEodkeYAx7YpTmDboNeWaJEUOIaiGUB3mrXqJEqn4TQGuxTFHzki94Ejagi6BxeVRLLcpglep0mKU3I08yz1qafcfApRhqlmXLK9Ls12mkTiBgcflYCJILIyHz0dnMM1QURy+0s3TJhcpZq0uG75X4b3+ds9E1jHckuFpIyFR7ia6Buyy9wD+RIw+y0pvpsHmeWWyxynNY1deEPy8dPPbinb5NEq4hjMZ3fQD92/uPuPMP+H+o8Gxv+vAVyPrzeJ3+SE+FyOhyMrd9+5vT8aMA/GTOn13kxH8+n4lOV5dm2fNknSRIzNExRBtog5ghmmcudFtEch8TBB/BGLfqD+5Pkh/4gvS51wnuJJFOBmr16Pf/CEmqOkfELJ+Md6+tP32QeXOG8pOqXfyQQfv7RKxL99jMEuLPWweIb/FFFs/SzXN7be+cFxlqPXDe3yVHLm8y+aAkbYrIvHbxS/N/6dge+cfxQ+kvzAkuJu2mYp+vWXajlXX2omhFEWprJYuwrez/orzvR8QN2fSl/MXFnr2zPklPzyGbJWxnM8dQOz9tB1/7dyw722C0T4VuJesbzUTvhFjZ2H9rvd8gbw63pheZpvCYDiWo/10uQ4iuPbjwR+iOT1i/ir5F1OP/8eXv8F</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE872334B2B6CA196E0401F0A059919B7</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE872336DACB8B3C7E0401F0A07990BD2</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrTypePolicyCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7002/rest/1/06/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE872334B2B6CA196E0401F0A059919B7/User/urn%3Adece%3Auserid%3Aorg%3Adece%3AE872336DACB8B3C7E0401F0A07990BD2/Policy/urn%3Adece%3Atype%3Apolicy%3AParentalControl%3AAllowAdult</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>policyAuthority</con:name><con:value>urn:dece:role:type:coordinator</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>ParentalControl:AllowAdult</con:value></con:property><con:property><con:name>policyCreator</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE872336DACB8B3C7E0401F0A07990BD2</con:value></con:property><con:property><con:name>policyRequestEntity</con:name><con:value>urn:dece:userid:org:dece:E872336DACB8B3C7E0401F0A07990BD2</con:value></con:property><con:property><con:name>policyResource</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE872336DACB8B3C7E0401F0A07990BD2</con:value></con:property><con:property><con:name>policyStatus</con:name><con:value>urn:dece:type:status:active</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value>Test Configuration/Setup</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>tName</con:name><con:value>Policy - Allow Adult Policy Establishment</con:value></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyResourceXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QC_Id</con:name><con:value>77323</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE682B036D956188DE0401F0A05997A50</con:value></con:property><con:property><con:name>assertionUserIdFULLEncoded</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE682B036DCFD188DE0401F0A05997A50</con:value></con:property><con:property><con:name>policyClassEncoded</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AParentalControl%3ARatingPolicy</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\certificates\/DLASP_CS_1_concat.pem</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>E872334B2B6CA196E0401F0A059919B7</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>E872336DACB8B3C7E0401F0A07990BD2</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ba712f4d-47f6-4f2a-9670-ba63919164f5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Policy GET for ParentalControlAllowAdult" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="52c7c706-07b1-4673-92f4-4f0d49b349c5"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="206ff827-4337-40c3-a2ae-99626bf2d6cc"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("returnXMLResult",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("expectErrTypePolicyGet",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="7540af0a-437c-4a98-a644-22885eaa6950"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("policyClass",callTC.getPropertyValue("policyClass"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));

tC.setPropertyValue("returnXMLResult",callTC.getPropertyValue("returnXMLResult"));
tC.setPropertyValue("expectErrTypePolicyGet",callTC.getPropertyValue("expectErrTypePolicyGet"));

if (tC.getPropertyValue("expectErrTypePolicyGet") == null || tC.getPropertyValue("expectErrTypePolicyGet") == "") {
		tC.setPropertyValue("expectErrTypePolicyGet","SUCCESS");
}
if (tC.getPropertyValue("returnXMLResult") == null || tC.getPropertyValue("returnXMLResult") == "") {
		tC.setPropertyValue("returnXMLResult","false");
}</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="01f0da66-dbcf-40ea-995d-0f64d114b459"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("GET - PolicyGet");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - PolicyGet" id="951df83c-332e-4151-8452-287f20e32961"><con:settings/><con:config service="Coordinator APIs" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/User/{USER}/Policy/{POLICYCLASS}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - PolicyGet" mediaType="application/xml" sslKeystore="DLASP_CS_1_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="POLICYCLASS" value="${#Project#urnParentalControlAllowAdult}"/>
  <con:entry key="USER" value="${#TestCase#assertionUserIdFULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="d7f2c9ce-d165-45d5-b18e-a480a92860b1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - PolicyGet');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process response body and headers" id="607af88b-929a-4a0b-a234-e5d3f88b7c61"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myXML;
def XMLbody = tC.getPropertyValue("XMLbody");
def httpStatus = tC.getPropertyValue("httpStatus");

String policyWasFound = "false";
String xmlPolicyClass = "";
String tcPolicyClass  = tC.getPropertyValue("policyClass");
String coordinatorSchema = tP.getPropertyValue("coordinatorSchema")

/*
*  We can assume that if we get returned an HTTP status 
*  of 'HTTP/1.1 200 OK' the policy was found.  However,
*  it is never a bad idea to doublecheck.
*/

if (XMLbody != null) {
	try {
		myXML = new XmlSlurper().parseText(XMLbody);
	}
	catch(Throwable e) {
		log.info "ERROR - XmlSlurper - $e";
		assert 1 == 2;
	}
	finally {
		xmlPolicyClass = myXML.Policy[0].PolicyClass.text();
		log.info "xmlPolicyClass[$xmlPolicyClass]";
		log.info "tcPolicyClass[tcPolicyClass]";
	}
}

if (httpStatus == "HTTP/1.1 200 OK") {
	def myXML1 = new XmlSlurper().parseText(XMLbody);
	def PolicyIDFull = myXML1.Policy.@PolicyID.text().toString();
	int lastColon = PolicyIDFull.lastIndexOf(':');
	PolicyID     = PolicyIDFull.substring(lastColon + 1);
	log.info"=========="+PolicyID
	policyWasFound = "true";
	tC.setPropertyValue("PolicyID",PolicyID);
	
} else if ( httpStatus == "HTTP/1.1 404 Not Found") {
	policyWasFound = "false";
	//tC.setPropertyValue("policyExists", policyWasFound);
} else {
	log.info "ERROR!";
	assert 1 == 2;
}




tC.setPropertyValue("policyExists", policyWasFound);</script></con:config></con:testStep><con:testStep type="groovy" name="Return policyExists to calling test case" id="0c7fe54d-f93c-4131-aacb-eee792421489"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("policyExists",tC.getPropertyValue("policyExists"));
callTC.setPropertyValue("PolicyID",tC.getPropertyValue("PolicyID"));


if (tC.getPropertyValue("returnXMLResult") == "true") {
	callTC.setPropertyValue("policyGetXML",tC.getPropertyValue("XMLbody"));
}
</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>Policy - Allow Adult Policy Establishment</con:value></con:property><con:property><con:name>sName</con:name><con:value>Test Configuration/Setup</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">pVfHkuLKEt3zFQSzJGhZjIjujigZQIAACRCIzQ1RKmSQAVng628JGqbdzJu5b9VdqazMk4bMU8+JGfh0FyQJilM3Cquy+FL7p8Ps2rsO4hocx9INlkS7hmm2rEa7jTptxJA7k2JrVTlJMiSHSWqG6UuNJimmQZENilqQrS7d7rL0E013NrWqjuIEm8YqT2Stegr8MOle3b7UsjjsRmbiJt3QDFDSTWF3DpRxF2t2zTum2uvzDeXVYfzqpOmhSxDwyUIQ+T58glFAPBMfdJ6tpDt37dBMsxi9+bSSl9rb3aIongrmKYptgiZJkiA5AutYiWv/qL1W7peRJYe76HYWzDAKXWj67sUsQSkodSKrCnw7it3UCX5hmiIosjTdQCfYgBQb/qgRPx1c0f2hpQ8g48RsJI5J3Y1paIdiFEJUXWryS+3Hn1XwdncRm2Gyi+Ig+XT+O0gozJEfHZDVSO6R3dH9ucVv0vX6jGBXDqGfJW6OJmWbHEyIkuosRjv3NHYT3HxWUr2Wv3pK7h2G4N+U5Jl4jxPDJr7JjOjaKEn/S73e1+pmRTf9DL0aWmwR9tEWhtnF8IRgPjfQyLWX7LzzcoXwXvkG6lHqt/PnRn301dulqbpB8swnBIOsiwwQdqxcr7trZRvu+7YYItlTrfVuRvQuzjZTAbugA+GcazNW2hxX22xyPmtLoPVAm8/dChS2cEzTGmfaeacQp8zAnhymeThAUhifWHk8PhGLpSi21ZV+UURxztX1lmyxs0E0PtF7Qo4sTSTEes+MjMpK5SQlb3Ogr8f6fKADt3j5GdP7GMq4Ruh8DbL8f90kOdFMzcdBKCfFDv88U/SqyLJQFwUBIMEGhcwDW+bHHpjw9v7o7N0+V5A8UJc9IIKzooFCtA1RV9WRVFi67m90udfjFY0tBsAQK/iDKJ10cbMekuZqczDoHrmZ87y11qItMzxYg30xcOBEWSjFZCGfFU8qpgvQXF1l9gmfL4qnUNPFkqmsPJ5TNKkQi6tHUSqcyWalHYwlV8CLpCqA7QNqKQmOMlgEOgUZzYGeNFbA/irnHUXQdeUkLcCswtsTHce2EHqbAwyswzbwnXfGB9j4wurr523fzzYXyVMEqS/Mj/25vGVEVRoCzVhuV/reXPXyChxMwPbu0W265joq7A2usGoMR9FGdnI4AarE8yrA6SKBIveHIOrzYDzozCaHYYGK6VkdDk1TAxVqJ7YFBA7LmU4651gQzbEYpR1oXaKztFUmAZxNLp632iPOy8EUuP4uiFrbKb0uaA2dxhPKJ9nOFM0EaVMBU60T1HudiLzsF9NmOBWXgKrXR2EzhKsJxZJRYrWNbMDoJxIxtte61ENNXZ4HVCqvDPsoRc31KZUXF/diVYCt8AD0vaXHqwrfKZNqyYVqKLwJelKagYtHpyNaPw4HuQ8NBkSn0Wrq7d8KY4mFxBOFKuG2kiodEVhlEQbzpdTzwJK37Zi3pR6vQhGohjwqDJyv5QArf85j75pHW+LBkIFbataqnAuLoZOdfHDMzlJPAo/zqI6hwa1fd4Tj1jYiBu4L/qCR09WSGSTpgJYG6Q6eN9S+HUyket7vne31qMnyVMXyip2Tb612dj6teo7e7A9tv1VXdWrv2e3xarNGen3MaVDsGzBYI1yp/Ly1EuF0RnwzW5EjY+jtbVWjGaHinGfiaDTxTzNOt3asF+zrxzXBMJI0gnA4dehgrC4XYyaAQc659VnfPhtA0jsuxkRcELsKDqS9ZLbbFo9z1t45Usgem8GyLhkTXvBzKV+wuTTc5vlKmhLakbwUe8mjUF0Y0oHJTPpJS0NqbO+1PWONPbuZGtZkmu/GlVxVVqujPrIKL+Eo87LhTrnW1gJltOLik3QboJ+nw0N4mx/E+8nyYfTcScc823oIpvdjuYBksdrDW8FMf09gSolrNXZX1e6hZEFJisK09lreKslLN8MUx7W6eGXczlKnTTNMSwQC3+EZoS2RLEn1SEC2OY7kRfrOcm4oPkEUonDnlr5KHnfbUr8HCINugkILxY08yqCDktpvLJb5qsqhhtdvFCZoEWGeSEodkeYAx7YpTmDboNeWaJEUOIaiGUB3mrXqJEqn4TQGuxTFHzki94Ejagi6BxeVRLLcpglep0mKU3I08yz1qafcfApRhqlmXLK9Ls12mkTiBgcflYCJILIyHz0dnMM1QURy+0s3TJhcpZq0uG75X4b3+ds9E1jHckuFpIyFR7ia6Buyy9wD+RIw+y0pvpsHmeWWyxynNY1deEPy8dPPbinb5NEq4hjMZ3fQD92/uPuPMP+H+o8Gxv+vAVyPrzeJ3+SE+FyOhyMrd9+5vT8aMA/GTOn13kxH8+n4lOV5dm2fNknSRIzNExRBtog5ghmmcudFtEch8TBB/BGLfqD+5Pkh/4gvS51wnuJJFOBmr16Pf/CEmqOkfELJ+Md6+tP32QeXOG8pOqXfyQQfv7RKxL99jMEuLPWweIb/FFFs/SzXN7be+cFxlqPXDe3yVHLm8y+aAkbYrIvHbxS/N/6dge+cfxQ+kvzAkuJu2mYp+vWXajlXX2omhFEWprJYuwrez/orzvR8QN2fSl/MXFnr2zPklPzyGbJWxnM8dQOz9tB1/7dyw722C0T4VuJesbzUTvhFjZ2H9rvd8gbw63pheZpvCYDiWo/10uQ4iuPbjwR+iOT1i/ir5F1OP/8eXv8F</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE872334B2B6CA196E0401F0A059919B7</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE872336DACB8B3C7E0401F0A07990BD2</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>urn:dece:type:policy:ParentalControl:AllowAdult</con:value></con:property><con:property><con:name>expectErrTypePolicyGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:Policy:PolicyNotFound">
      <Reason Language="en">The policy was not found.</Reason>
      <OriginalRequest>https://qa.p.uvvu.com:7002/rest/1/06/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE872334B2B6CA196E0401F0A059919B7/User/urn%3Adece%3Auserid%3Aorg%3Adece%3AE872336DACB8B3C7E0401F0A07990BD2/Policy/urn%3Adece%3Atype%3Apolicy%3AParentalControl%3AAllowAdult</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7002/rest/1/06/error/en/ErrorList.html#Policy:PolicyNotFound</ErrorLink>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 404 Not Found</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>846</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyExists</con:name><con:value>false</con:value></con:property><con:property><con:name>returnXMLResult</con:name><con:value>true</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>77321</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>E872336DACC4B3C7E0401F0A07990BD2</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE682B036D956188DE0401F0A05997A50</con:value></con:property><con:property><con:name>assertionUserIdFULLEncoded</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE682B036DCFD188DE0401F0A05997A50</con:value></con:property><con:property><con:name>policyClassEncoded</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AParentalControl%3AAllowAdult</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\certificates\/DLASP_CS_1_concat.pem</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E872334B2B6CA196E0401F0A059919B7</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>E872336DACB8B3C7E0401F0A07990BD2</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyDelete for ParentalControlAllowAdult" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="a4a3bc65-0962-4666-ab38-d245c59bd409"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="30538951-42f0-4464-aceb-c1d51f3d5f68"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("expectErrTypePolicyGet",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="13aa072e-ebc3-4ba4-9879-c8c1545cb17f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("policyClass",callTC.getPropertyValue("policyClass"));
tC.setPropertyValue("PolicyID",callTC.getPropertyValue("PolicyID"));

tC.setPropertyValue("expectErrTypePolicyGet",callTC.getPropertyValue("expectErrTypePolicyGet"));

if (tC.getPropertyValue("expectErrTypePolicyGet") == null || tC.getPropertyValue("expectErrTypePolicyGet") == "") {
		tC.setPropertyValue("expectErrTypePolicyGet","SUCCESS");
}</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="3ef45dd0-00bc-4829-8a72-bf5712f5b270"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("DELETE - PolicyDelete");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - PolicyDelete" id="e9b920c1-6e7b-47dd-8bdd-5f51dc0389fd"><con:settings/><con:config service="Policy Delete" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/User/{USER}/Policy/{POLICYCLASS}" methodName="DELETE" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - PolicyDelete" mediaType="application/xml" sslKeystore="DLASP_CS_1_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="MINOR" value="${#Project#VersionMinor}"/>
  <con:entry key="MAJOR" value="${#Project#VersionMajor}"/>
  <con:entry key="POLICYCLASS" value="${#Project#urnPolicyID}${#TestCase#PolicyID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="3ede1bf1-8ed1-46f1-9c43-200a66e5916a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('DELETE - PolicyDelete');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process response body and headers" id="4268b9c6-6062-4b93-94cf-c270b40be32c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def XMLbody    = tC.getPropertyValue("XMLbody");
def httpStatus = tC.getPropertyValue("httpStatus");

String policyWasFound = "false";
String xmlPolicyClass = "";
String tcPolicyClass  = tC.getPropertyValue("policyClass");

/*
*  We can assume that if we get returned an HTTP status 
*  of 'HTTP/1.1 200 OK' the policy was found.  However,
*  it is never a bad idea to doublecheck.
*/

if (XMLbody != null) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	xmlPolicyClass = myXML.Policy.PolicyClass.text();
}

		
if (httpStatus == "HTTP/1.1 200 OK" &amp;&amp; xmlPolicyClass == tcPolicyClass) {
	policyWasFound = "true";
}


tC.setPropertyValue("policyExists", policyWasFound);</script></con:config></con:testStep><con:testStep type="groovy" name="Return policyExists to calling test case" id="2c665c51-014c-4aa4-b891-c4eaab9bc00e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("policyExists",tC.getPropertyValue("policyExists"));
</script></con:config></con:testStep><con:properties><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>tName</con:name><con:value>Policy - Remove Allow Adult Policy</con:value></con:property><con:property><con:name>sName</con:name><con:value>Test Configuration/Setup</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value>pVfHkuLKEt3zFQSzJGhZjIjujigZQIAACRCIzQ1RKmSQAVng628JGqbdzJu5b9VdqazMk4bMU8+JGfh0FyQJilM3Cquy+FL7p8Ps2rsO4hocx9INlkS7hmm2rEa7jTptxJA7k2JrVTlJMiSHSWqG6UuNJimmQZENilqQrS7d7rL0E013NrWqjuIEm8YqT2Stegr8MOle3b7UsjjsRmbiJt3QDFDSTWF3DpRxF2t2zTum2uvzDeXVYfzqpOmhSxDwyUIQ+T58glFAPBMfdJ6tpDt37dBMsxi9+bSSl9rb3aIongrmKYptgiZJkiA5AutYiWv/qL1W7peRJYe76HYWzDAKXWj67sUsQSkodSKrCnw7it3UCX5hmiIosjTdQCfYgBQb/qgRPx1c0f2hpQ8g48RsJI5J3Y1paIdiFEJUXWryS+3Hn1XwdncRm2Gyi+Ig+XT+O0gozJEfHZDVSO6R3dH9ucVv0vX6jGBXDqGfJW6OJmWbHEyIkuosRjv3NHYT3HxWUr2Wv3pK7h2G4N+U5Jl4jxPDJr7JjOjaKEn/S73e1+pmRTf9DL0aWmwR9tEWhtnF8IRgPjfQyLWX7LzzcoXwXvkG6lHqt/PnRn301dulqbpB8swnBIOsiwwQdqxcr7trZRvu+7YYItlTrfVuRvQuzjZTAbugA+GcazNW2hxX22xyPmtLoPVAm8/dChS2cEzTGmfaeacQp8zAnhymeThAUhifWHk8PhGLpSi21ZV+UURxztX1lmyxs0E0PtF7Qo4sTSTEes+MjMpK5SQlb3Ogr8f6fKADt3j5GdP7GMq4Ruh8DbL8f90kOdFMzcdBKCfFDv88U/SqyLJQFwUBIMEGhcwDW+bHHpjw9v7o7N0+V5A8UJc9IIKzooFCtA1RV9WRVFi67m90udfjFY0tBsAQK/iDKJ10cbMekuZqczDoHrmZ87y11qItMzxYg30xcOBEWSjFZCGfFU8qpgvQXF1l9gmfL4qnUNPFkqmsPJ5TNKkQi6tHUSqcyWalHYwlV8CLpCqA7QNqKQmOMlgEOgUZzYGeNFbA/irnHUXQdeUkLcCswtsTHce2EHqbAwyswzbwnXfGB9j4wurr523fzzYXyVMEqS/Mj/25vGVEVRoCzVhuV/reXPXyChxMwPbu0W265joq7A2usGoMR9FGdnI4AarE8yrA6SKBIveHIOrzYDzozCaHYYGK6VkdDk1TAxVqJ7YFBA7LmU4651gQzbEYpR1oXaKztFUmAZxNLp632iPOy8EUuP4uiFrbKb0uaA2dxhPKJ9nOFM0EaVMBU60T1HudiLzsF9NmOBWXgKrXR2EzhKsJxZJRYrWNbMDoJxIxtte61ENNXZ4HVCqvDPsoRc31KZUXF/diVYCt8AD0vaXHqwrfKZNqyYVqKLwJelKagYtHpyNaPw4HuQ8NBkSn0Wrq7d8KY4mFxBOFKuG2kiodEVhlEQbzpdTzwJK37Zi3pR6vQhGohjwqDJyv5QArf85j75pHW+LBkIFbataqnAuLoZOdfHDMzlJPAo/zqI6hwa1fd4Tj1jYiBu4L/qCR09WSGSTpgJYG6Q6eN9S+HUyket7vne31qMnyVMXyip2Tb612dj6teo7e7A9tv1VXdWrv2e3xarNGen3MaVDsGzBYI1yp/Ly1EuF0RnwzW5EjY+jtbVWjGaHinGfiaDTxTzNOt3asF+zrxzXBMJI0gnA4dehgrC4XYyaAQc659VnfPhtA0jsuxkRcELsKDqS9ZLbbFo9z1t45Usgem8GyLhkTXvBzKV+wuTTc5vlKmhLakbwUe8mjUF0Y0oHJTPpJS0NqbO+1PWONPbuZGtZkmu/GlVxVVqujPrIKL+Eo87LhTrnW1gJltOLik3QboJ+nw0N4mx/E+8nyYfTcScc823oIpvdjuYBksdrDW8FMf09gSolrNXZX1e6hZEFJisK09lreKslLN8MUx7W6eGXczlKnTTNMSwQC3+EZoS2RLEn1SEC2OY7kRfrOcm4oPkEUonDnlr5KHnfbUr8HCINugkILxY08yqCDktpvLJb5qsqhhtdvFCZoEWGeSEodkeYAx7YpTmDboNeWaJEUOIaiGUB3mrXqJEqn4TQGuxTFHzki94Ejagi6BxeVRLLcpglep0mKU3I08yz1qafcfApRhqlmXLK9Ls12mkTiBgcflYCJILIyHz0dnMM1QURy+0s3TJhcpZq0uG75X4b3+ds9E1jHckuFpIyFR7ia6Buyy9wD+RIw+y0pvpsHmeWWyxynNY1deEPy8dPPbinb5NEq4hjMZ3fQD92/uPuPMP+H+o8Gxv+vAVyPrzeJ3+SE+FyOhyMrd9+5vT8aMA/GTOn13kxH8+n4lOV5dm2fNknSRIzNExRBtog5ghmmcudFtEch8TBB/BGLfqD+5Pkh/4gvS51wnuJJFOBmr16Pf/CEmqOkfELJ+Md6+tP32QeXOG8pOqXfyQQfv7RKxL99jMEuLPWweIb/FFFs/SzXN7be+cFxlqPXDe3yVHLm8y+aAkbYrIvHbxS/N/6dge+cfxQ+kvzAkuJu2mYp+vWXajlXX2omhFEWprJYuwrez/orzvR8QN2fSl/MXFnr2zPklPzyGbJWxnM8dQOz9tB1/7dyw722C0T4VuJesbzUTvhFjZ2H9rvd8gbw63pheZpvCYDiWo/10uQ4iuPbjwR+iOT1i/ir5F1OP/8eXv8F</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE872334B2B6CA196E0401F0A059919B7</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE872336DACB8B3C7E0401F0A07990BD2</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>ParentalControl:AllowAdult</con:value></con:property><con:property><con:name>expectErrTypePolicyGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>policyExists</con:name><con:value>false</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QC_Id</con:name><con:value>77325</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>E872336DACC4B3C7E0401F0A07990BD2</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE682B036D956188DE0401F0A05997A50</con:value></con:property><con:property><con:name>assertionUserIdFULLEncoded</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE682B036DCFD188DE0401F0A05997A50</con:value></con:property><con:property><con:name>policyClassEncoded</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AParentalControl%3ARatingPolicy</con:value></con:property><con:property><con:name>PolicyIDEncoded</con:name><con:value>urn%3Adece%3Apolicyid%3Aorg%3Adece%3AE68F7AD0B700B174E0401F0A0799424D</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\certificates\/DLASP_CS_1_concat.pem</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>E872334B2B6CA196E0401F0A059919B7</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>E872336DACB8B3C7E0401F0A07990BD2</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StreamListView tear down" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="0bdfd5cc-e67d-4dd3-9863-fc2eee610fbb"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("nodetype",null);
tC.setPropertyValue("streamhandleFULL",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("expectErrTypeStreamListView",null);
tC.setPropertyValue("expectDBCreatedBy",null);
tC.setPropertyValue("expectDBDeletedBy",null);
tC.setPropertyValue("expectDBStatus",null);
tC.setPropertyValue("expectNickname",null);
tC.setPropertyValue("expectStreamActiveCnt",null);
tC.setPropertyValue("httpContentEncoding",null);
tC.setPropertyValue("streamAccountActiveCount",null);
tC.setPropertyValue("streamHistoryRows",null);
tC.setPropertyValue("streamFlagCreateDateOld",null);
tC.setPropertyValue("streamFlagIgnoreCreatedDate",null);
tC.setPropertyValue("expectDBModifiedBy",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);

tP.setPropertyValue("ActualStreamHandleIDList","");
tP.setPropertyValue("DeleteCount",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context LLASP"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","llpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("errorRespType","HTTP/1.1 200 OK");

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

int counter;
String sh;
String rt;
String shCreatedBy;
String shValue;
String shExpireDate;
String nickname;
String expectGenericRightsToken;
String expectRequestingUser;
String expectDBDeletedTime;
String expectDBCreatedTime;
String streamFlagCreateDateOld;
String streamFlagIgnoreCreatedDate;
String streamFlagIgnoreDeletedDate;
String expectDBCreatedByNodeType;

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("nodetype",callTC.getPropertyValue("nodetype"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("rightstokenid",callTC.getPropertyValue("rightstokenid"));
tC.setPropertyValue("rightstokenidFULL",callTC.getPropertyValue("rightstokenidFULL"));
tC.setPropertyValue("streamhandleFULL",callTC.getPropertyValue("streamhandleFULL"));
tC.setPropertyValue("expectErrTypeStreamListView",callTC.getPropertyValue("expectErrTypeStreamListView"));
tC.setPropertyValue("expectDBCreatedBy",callTC.getPropertyValue("expectDBCreatedBy"));
tC.setPropertyValue("expectDBDeletedBy",callTC.getPropertyValue("expectDBDeletedBy"));
tC.setPropertyValue("expectDBModifiedBy",callTC.getPropertyValue("expectDBModifiedBy"));
tC.setPropertyValue("expectDBStatus",callTC.getPropertyValue("expectDBStatus"));
tC.setPropertyValue("expectNickname",callTC.getPropertyValue("nickname"));
tC.setPropertyValue("counter",callTC.getPropertyValue("counter"));
tC.setPropertyValue("expectGenericRightsToken",callTC.getPropertyValue("expectGenericRightsToken"));
tC.setPropertyValue("expectStreamAvailCnt",callTC.getPropertyValue("expectStreamAvailCnt"));
tC.setPropertyValue("expectStreamActiveCnt",callTC.getPropertyValue("expectStreamActiveCnt"));
tC.setPropertyValue("expectRequestingUser",callTC.getPropertyValue("expectRequestingUser"));
tC.setPropertyValue("streamAccountActiveCount",callTC.getPropertyValue("streamAccountActiveCount"));
tC.setPropertyValue("streamFlagCreateDateOld",callTC.getPropertyValue("streamFlagCreateDateOld"));
tC.setPropertyValue("streamFlagIgnoreCreatedDate",callTC.getPropertyValue("streamFlagIgnoreCreatedDate"));
tC.setPropertyValue("expectDBCreatedByNodeType",callTC.getPropertyValue("expectDBCreatedByNodeType"));



if (tC.getPropertyValue("expectErrTypeStreamListView") == null || tC.getPropertyValue("expectErrTypeStreamListView") == "") {
	tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS")
}
if (tC.getPropertyValue("expectDBStatus") == null || tC.getPropertyValue("expectDBStatus") == "") {
	tC.setPropertyValue("expectDBStatus","active")
}
if (tC.getPropertyValue("expectGenericRightsToken") == null || tC.getPropertyValue("expectGenericRightsToken") == "") {
	tC.setPropertyValue("expectGenericRightsToken","false")
}
if (tC.getPropertyValue("expectStreamAvailCnt") == null || tC.getPropertyValue("expectStreamAvailCnt") == "") {
	tC.setPropertyValue("expectStreamAvailCnt",tP.getPropertyValue("streamlimit"))
}
if (tC.getPropertyValue("expectStreamActiveCnt") == null || tC.getPropertyValue("expectStreamActiveCnt") == "") {
	tC.setPropertyValue("expectStreamActiveCnt","0")
}
if (tC.getPropertyValue("streamAccountActiveCount") == null || tC.getPropertyValue("streamAccountActiveCount") == "") {
	tC.setPropertyValue("streamAccountActiveCount","0")
}
if (tC.getPropertyValue("streamFlagIgnoreCreatedDate") == null || tC.getPropertyValue("streamFlagIgnoreCreatedDate") == "") {
	tC.setPropertyValue("streamFlagIgnoreCreatedDate","false")
}

if (tC.getPropertyValue("counter") == null ||
    tC.getPropertyValue("counter") == "") {
    		tC.setPropertyValue("counter","1");
    }
    
counter = tC.getPropertyValue("counter").toInteger();

for (int i = 0; i &lt;= counter; i++) {
	
	sh           = "streamhandleFULL_"  + (i + 1);
	rt           = "rightstokenidFULL_"   + (i + 1);
	shid           = "streamhandle_"  + (i + 1);
	shCreatedBy  = "expectDBCreatedBy_" + (i + 1);
	shDeletedBy  = "expectDBDeletedBy_" + (i + 1);	
	shModifiedBy  = "expectDBModifiedBy_" + (i + 1);
	shValue      = "expectDBStatus_"    + (i + 1);
	nickname     = "expectNickname_"    + (i + 1);
	expectRequestingUser = "expectRequestingUser_" + (i + 1);
	expectGenericRightsToken = "expectGenericRightsToken_" + (i + 1);
	expectDBDeletedTime = "expectDBDeletedTime_" + (i + 1);
	expectDBCreatedTime = "expectDBCreatedTime_" + (i + 1);
	streamFlagCreateDateOld = "streamFlagCreateDateOld_" + (i + 1);
	streamFlagIgnoreCreatedDate = "streamFlagIgnoreCreatedDate_" + (i + 1);
	streamFlagIgnoreDeletedDate = "streamFlagIgnoreDeletedDate_" + (i + 1);
	expectDBCreatedByNodeType = "expectDBCreatedByNodeType_" + (i + 1);

     tC.setPropertyValue(shid,callTC.getPropertyValue(shid));     		
	tC.setPropertyValue(sh,callTC.getPropertyValue(sh));
	tC.setPropertyValue(rt,callTC.getPropertyValue(rt));
	tC.setPropertyValue(shValue,callTC.getPropertyValue(shValue));
	tC.setPropertyValue(shCreatedBy,callTC.getPropertyValue(shCreatedBy));
	tC.setPropertyValue(shDeletedBy,callTC.getPropertyValue(shDeletedBy));
	tC.setPropertyValue(shModifiedBy,callTC.getPropertyValue(shModifiedBy));
	tC.setPropertyValue(nickname,callTC.getPropertyValue(nickname));
	tC.setPropertyValue(expectGenericRightsToken,callTC.getPropertyValue(expectGenericRightsToken));
	tC.setPropertyValue(expectRequestingUser,callTC.getPropertyValue(expectRequestingUser));
	tC.setPropertyValue(expectDBDeletedTime,callTC.getPropertyValue(expectDBDeletedTime));
	tC.setPropertyValue(expectDBCreatedTime,callTC.getPropertyValue(expectDBCreatedTime));
	tC.setPropertyValue(streamFlagCreateDateOld,callTC.getPropertyValue(streamFlagCreateDateOld));
	tC.setPropertyValue(streamFlagIgnoreCreatedDate,callTC.getPropertyValue(streamFlagIgnoreCreatedDate));
	tC.setPropertyValue(streamFlagIgnoreDeletedDate,callTC.getPropertyValue(streamFlagIgnoreDeletedDate));
	tC.setPropertyValue(expectDBCreatedByNodeType,callTC.getPropertyValue(expectDBCreatedByNodeType));
}
</script></con:config></con:testStep><con:testStep type="groovy" name="pem set"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("GET - StreamListView");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - StreamListView"><con:settings/><con:config service="DECE StreamCreate API" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/List" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - StreamListView" mediaType="application/xml" sslKeystore="iscportalcs1_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('GET - StreamListView');

/*
*  Get the XML body raw 
*/
//rawResp = new ByteArrayOutputStream();
//rawResp = tStep.httpRequest.response.getRawResponseData();
//def expXML  = new String(rawResp);

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String contentEncoding = null;

expXML     = tStep.httpRequest.response.getResponseContent();

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			contentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
tC.setPropertyValue("httpContentEncoding", contentEncoding);

def testStep = testRunner.testCase.getTestStepByName( "Validation of List of Streams get as per Details stored at StreamCreate for all" )
 log.info status
//if(status=="HTTP/1.1 200 OK")
//{  log.info status
//   testStep.disabled = false;
//}
//else
//{
//	 testStep.disabled = true;
//	}
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract ERROR table information"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def a = new dbUtils.dbErrors(log,tP.getPropertyValue("targetSystem"));

tC.setPropertyValue("errorStatusCode",null);
tC.setPropertyValue("errorReason",null);
tC.setPropertyValue("errorID",null);

String xmlData = "";
String errId = "";

log.info "expectErrTypeStreamView[" + tC.getPropertyValue("expectErrTypeStreamListView") + "]";

switch (tC.getPropertyValue("expectErrTypeStreamListView")) {
	case "ADULT_CONTENT_NOT_ALLOWED":
		errId = "Policy:AdultContentNotAllowed";
		break;
	case "ACCOUNT_NOT_ACTIVE":
		errId = "AccountNotActive";
		break;
	case "API_NOT_AUTH":
		errId = "Security:RoleInvalid";
		break;
	case "BLOCKED_ACCESS_UNRATED":
		errId = "Policy:UnratedContentBlocked";
		break;
	case "CID_NOT_ACTIVE":
		errId = "ContentIDNotActive";
		break;
	case "CID_NOT_FOUND":
		errId = "ContentIDNotFound";
		break;
	case "LOGICAL_ASSET_NOT_ACTIVE":
		errId = "AssetLogicalIDNotActive";
		break;
	case "RT_RENT_EXPIRED":
		errId = "RightsTokenRentalExpired";
		break;
	case "RT_NOT_FOUND":
		errId = "RightsTokenNotFound";
		break;
	case "RT_NOT_ACTIVE":
		errId = "RightsTokenNotActive";
		break;
	case "RATING_POLICY":
		errId = "RatingPolicyExists";
		break;
	case "CID_NOT_GRANTED":
	case "STREAM_RIGHTS_NOT_GRANTED":
		errId = "StreamRightsNotGranted";
		break;
	case "STREAM_COUNT_EXCEEDED":
		errId = "AccountStreamCountExceedMaxLimit";
		break;
	case "STREAM_COUNT_EXCEEDED_USER":
		errId = "UserStreamCountExceedMaxLimit";
		break;
	case "STREAM_INVALID_TRANS":
		errId = "StreamTransactionIdInvalid";
		break;
	case "STREAM_ACCOUNTID_MISMATCH":
		errId = "AccountIdUnmatched";
		break;		
	case "STREAM_NICKNAME_TOO_LONG":
		errId = "StreamClientNicknameTooLong";
		break;		
	case "STREAM_WINDOW_NOT_ALLOWED":
		errId = "StreamAssetWindowNotAllowed";
		break;
	case "STREAM_OWNER_MISMATCH":
		errId = "StreamOwnerMismatch";
		break;
	case "STREAM_NOT_FOUND":
		errId = "StreamNotFound";
		break;
	case "STREAM_NOT_ACTIVE":
		errId = "StreamNotActive";
		break;
	case "USER_NOT_MATCH_TOKEN":
		errId = "UserIdUnmatched";
		break;
	case "USER_NOT_ACTIVE":
		errId = "UserNotActive";
		break;
	case "USER_NOT_SUPPLIED":
		errId = "UserNotSpecified";
		break;
	default:
		errId = tC.getPropertyValue("expectErrTypeStreamListView").toString();
		break;
}

try {
	xmlData = a.errGetIdInfo(errId);
	
	assert xmlData.trim().length() > 1;

	def myXML = new XmlSlurper().parseText(xmlData);

	log.info myXML.ResultSet.Row.size();
	tC.setPropertyValue("errorStatusCode", myXML.ResultSet.Row[0].STATUS_CODE.toString());
	tC.setPropertyValue("errorReason", myXML.ResultSet.Row[0].REASON.toString());
	tC.setPropertyValue("errorID", myXML.ResultSet.Row[0].ERROR_ID.toString());

	/*
	*  The DB does not contain the complete HTTP status
	*  string, only the code.  Thus, we must adjust.
	*/
	switch (tC.getPropertyValue("errorStatusCode")) {
		case "400":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 400 Bad Request");
			break;
		case "403":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 403 Forbidden");
			break;
		case "404":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 404 Not Found");
			break;
		case "409":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 409 Conflict");
			break;
	}
}
catch (Throwable e) {
	log.info "STEP FAILURE! --- " + e;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" disabled="true"><con:settings/><con:config><script><![CDATA[import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Calendar;
import java.text.SimpleDateFormat;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
//------------------------------------------------------//
def formatDate(recvDate) {
	try {
		String dateHolder = "";
		Pattern datePattern = Pattern.compile("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})");
		Matcher cdateMatcher = datePattern.matcher(recvDate);
		if (cdateMatcher.find()) {
			dateHolder = cdateMatcher.group(1) + "/" + cdateMatcher.group(2) + "/" +
				cdateMatcher.group(3) + " " + cdateMatcher.group(4) + ":" +
				cdateMatcher.group(5) + ":" + cdateMatcher.group(6);
			log.info "dateHolder[$dateHolder]";	
		}
	} 
	catch (Throwable e) {
		log.info "Matcher Failure!  recvDate[$recvDate] ERROR - " + e;
	} 
	finally {
		return dateHolder;	
	}
}
//------------------------------------------------------//
def getHistoryRecords(sh) {
	def tC = testRunner.getTestCase();
	def tS = tC.getTestSuite();
	def tP = tS.getProject();
	
	log.info "---------IN getHistoryRecords sh[$sh]";
	
	a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());
     String hsh;
     if(tP.getPropertyValue("V2") == tP.getPropertyValue("versionUrlEncode"))
     {
	int lastColon = sh.lastIndexOf('%');
     hsh = sh.substring(lastColon +3,sh.length());
     }
     else
     {
     int lastColon = sh.lastIndexOf(':');
     hsh = sh.substring(lastColon +1,sh.length());
     }
	String hresults = null;
	String hsql = """select 
 	 to_char(rawtohex(a.STREAM_HISTORY_OID)) STREAM_HISTORY_OID,
	  to_char(rawtohex(a.STREAM_HANDLE_OID)) STREAM_HANDLE_OID,
	  to_char(rawtohex(a.RIGHTS_TOKEN_OID)) RIGHTS_TOKEN_OID,
	  to_char(rawtohex(a.ACCOUNT_OID)) ACCOUNT_OID,
	  to_char(rawtohex(a.CREATED_BY_USER_OID)) CREATED_BY_USER_OID,
 	 TRANSACTION_ID,
	  STATUS,
	  STREAM_CLIENT_NICKNAME,
	  EXPIRATION_DATE,
	  CLOSED_DATE,
	  CLOSED_BY_ORG_ID,
	  CREATED_DATE,
	  to_char(rawtohex(a.CREATED_BY_NODE_OID)) CREATED_BY_NODE_OID 
	  from STREAM_DATA_HISTORY a where STREAM_HANDLE_OID =hextoraw( '$hsh') 
	  order by STATUS
	  """;

	  log.info "hsql is $hsql";

	hresults = a.SelectFromDB(hsql,tP.getPropertyValue("targetSystem").toString());
	log.info hresults;

	/*
	*  If zero length, no need to continue;
	*/
	assert hresults.length() > 0;

	try {
		def hmyXML = new XmlSlurper().parseText(hresults);
		log.info "hmyXML.ResultSet.Row.size() is [" + hmyXML.ResultSet.Row.size() + "]";
		assert hmyXML.ResultSet.Row.size() >= 1;
	}
	catch(Throwable e) {
		log.info e; 
		assert 1 == 2;
	}
	finally {
		tC.setPropertyValue("streamHistoryRows", hresults);
	}
}
//------------------------------------------------------//


def a = new generalUtils.generalUtils(log);

def url = tP.getPropertyValue("targetHost");
def urnacct = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def urnnode = tP.getPropertyValue("urnNode");
def urnErr = tP.getPropertyValue("urnerror");
def urnGenericRightsToken = tP.getPropertyValue("urnGenericRightsToken");
def streamMaxDisplayCount = tP.getPropertyValue("streamMaxDisplayCount");
def streamlimit  = tP.getPropertyValue("streamlimit");
def acct  = tC.getPropertyValue("nodeaccountid");
def sh = tC.getPropertyValue("streamhandleFULL");
def counter = tC.getPropertyValue("counter").toInteger();
def account = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrTypeStreamListView");
def XMLbody = tC.getPropertyValue("XMLbody");
def expectCreatedBy = urnnode + tC.getPropertyValue("expectDBCreatedBy");
def expectDeletedBy = urnnode + tC.getPropertyValue("expectDBDeletedBy");
def expectModifiedBy = urnnode + tC.getPropertyValue("expectDBModifiedBy");
def expectStatus = tC.getPropertyValue("expectDBStatus");
def expectRT = tC.getPropertyValue("rightstokenidFULL");
def expectSH = tC.getPropertyValue("streamhandleFULL");
def expectNickname = tC.getPropertyValue("expectNickname");
def expectStreamActiveCnt = tC.getPropertyValue("streamAccountActiveCount");
def expectStreamAvailCnt = streamlimit.toInteger() - expectStreamActiveCnt.toInteger();
def expectGenericRightsToken = tC.getPropertyValue("expectGenericRightsToken");

String errorID     = "";
String errorReason = "";
String errorLink   = "";
String errorHost   = "https://" + tP.getPropertyValue("targetHostq") + ":" + tP.getPropertyValue("targetPort");
String availStreamsCnt = "";
String major = tP.getPropertyValue("V1").toString();
String minor = tP.getPropertyValue("V2").toString();
String errorLinkBase = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#";
String orgRequest = url + "/rest/$major/$minor/Account/$account/Stream/$sh";
String expectHTTPstatus = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";
String expectDescription = "";
boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean processXMLFlag  = true;
boolean XMLbodynull     = false;
boolean doValidations   = true;
int displayStreamCount = 0;
int xmlIndex = 0;
int g = 0;
int streamAccountActiveCount = tC.getPropertyValue("streamAccountActiveCount").toInteger();


/*
*  Change the expectRH value if policies should result
*  in the generic rightstoken being displayed
*/
if (expectGenericRightsToken == "true") {
	expectRT = tP.getPropertyValue("urnGenericRightsToken");
}

/*
*  Added this override with the 7.7 drop.  They change the name
*  of the <ErrorLink> host.
*/
if (tP.getPropertyValue("targetURL").length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = "https://qa.q.uvvu.com:" + tP.getPropertyValue("targetPort");
}

switch (errorRespType) {
	case "SUCCESS_NO_STREAMS":
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = false;
		httpLocationHeader = false;
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	

	case "Node_status_inactive":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                processXMLFlag  = true;
                                errorID = "urn:dece:errorid:org:dece:securitycontext:Bad_Request";
                                errorReason = "node_status_inactive";
                                errorLink = "$errorHost/deceerrors/error/error_response.html";
break;


	case "XML_PARSING_ERROR":
		errorLinkFlag = true;
		errorReasonFlag = false;
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID = "urn:dece:errorid:org:dece:SaxParserException";
		errorLink  = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;
	
	default:
		errorReasonFlag = true;
		expectHTTPstatus = tC.getPropertyValue("errorStatusCode");
		errorID     = urnErr + tC.getPropertyValue("errorID");
		errorReason = tC.getPropertyValue("errorReason");
		errorLink   = "$errorLinkBase" + tC.getPropertyValue("errorID");
	break;
}

log.info "errorRespType[$errorRespType]";

/*
*   HTTP HEADER CHECKS
*/
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;

// Connection
if(tC.getPropertyValue("httpStatus") == "HTTP/1.1 400 Bad Request")
{
	expectHTTPconnection = "close";
}
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert tC.getPropertyValue("httpConnect") == expectHTTPconnection;

/*
* Content-Length
*/
String httpContentEncoding = tC.getPropertyValue("httpContentEncoding");
String contentLength = tC.getPropertyValue("httpContentLength");
log.info "httpContentEncoding[$httpContentEncoding]";
log.info "contentLength[$contentLength]";
if (httpContentEncoding == "null" || httpContentEncoding == null) {
	log.info "Asserting contentLength.length() > 0";
	//assert contentLength.toInteger() > 0;
} else {
	log.info "Asserting httpContentEncoding is chunked";
	assert tC.getPropertyValue("httpContentEncoding") == "chunked";
}

//No Content-Location
assert tC.getPropertyValue("httpContentLocation") == null;

//Content-Type
//if(tC.getPropertyValue("nodetype")== "llp" )
this.log.info "HTTP Content-Type:  Expect: $expectHTTPcontenttype - Received: " + tC.getPropertyValue("httpContentType");
assert tC.getPropertyValue("httpContentType") == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {
	assert XMLbody == null;
}

this.log.info "XMLBody Length [" + XMLbody.length() + "] processXMLFlag[$processXMLFlag]";

if (XMLbody != null && processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	if (errorRespType != "SUCCESS" && errorRespType != "SUCCESS_NO_STREAMS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;

		// ErrorCode
		this.log.info "Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorLink [" + myXML.Error.ErrorLink.toString() + "] errorLink[$errorLink]";
		//assert myXML.Error.ErrorLink.toString() == errorLink;
		
	} else if (errorRespType == "SUCCESS_NO_STREAMS") {
		log.info "--------------SUCCESS NO STREAMS---------------";
		availStreamsCnt = myXML.@AvailableStreams.text();
		activeStreamCnt = myXML.@ActiveStreamCount.text();

		log.info "AvailableStreams[$availStreamsCnt] lte System Limit of [" + tP.getPropertyValue("streamlimit") + "]";
		assert availStreamsCnt <= tP.getPropertyValue("streamlimit");

		if (tC.getPropertyValue("streamFlagCreateDateOld") != "true") {
			log.info "Assert ActiveStreamCount == 0 -- streamFlagCreateDateOld[" + tC.getPropertyValue("streamFlagCreateDateOld") + "]";
//			assert activeStreamCnt.toInteger() == 0;
			log.info "AvailableStreams - recv[$availStreamsCnt] - expect[" + streamlimit.toInteger() + "]";
//			assert availStreamsCnt.toInteger() == streamlimit.toInteger();
		} else {
			log.info "ActiveStreamCount[$activeStreamCnt] == expectStreamActiveCnt[$expectStreamActiveCnt]";
			assert activeStreamCnt.toInteger() == expectStreamActiveCnt.toInteger();
			log.info "ActiveStreamCount[$availStreamsCnt] == " + streamlimit.toInteger() - activeStreamCnt.toInteger() + "]";
			assert availStreamsCnt.toInteger() == streamlimit.toInteger() - activeStreamCnt.toInteger();
		}
		
		log.info "Assert NO <Stream> Rows Present";
		assert myXML.Stream.size() == myXML.Stream.size();
		log.info "Assert NO <Stream>.<ResourceStatus> Rows Present";
//		assert myXML.Stream.ResourceStatus.size() == 0;
		log.info "Assert NO <Stream>.<RightsTokenID> Rows Present";
//		assert myXML.Stream.RightsTokenID.size() == 0;
		log.info "Assert NO <Stream>.<ExpirationDateTime> Rows Present";
//		assert myXML.Stream.ExpirationDateTime.size() == 0;
			
		/*  AvailableStreams */
		log.info "availStreamsCnt[$availStreamsCnt] - expectStreamAvailCnt[$expectStreamAvailCnt]";
		assert availStreamsCnt.toInteger() == expectStreamAvailCnt.toInteger();

		/* ActiveStreamCount */
		log.info "activeStreamCnt[$activeStreamCnt] - expectStreamActiveCnt[$expectStreamActiveCnt]";
		assert activeStreamCnt.toInteger() == expectStreamActiveCnt.toInteger();
	} else {
		log.info "--------------STREAM DATA VERIFICATION-----------------";
		availStreamsCnt = myXML.@AvailableStreams.text();
		
		activeStreamCnt = myXML.@ActiveStreamCount.text();

		this.log.info "AvailableStreams[$availStreamsCnt] lte System Limit of [" + tP.getPropertyValue("streamlimit")  + "]";
		assert availStreamsCnt.toInteger() <= tP.getPropertyValue("streamlimit").toInteger();

		log.info "Assert ActiveStreamCount == $streamAccountActiveCount";
//		assert activeStreamCnt.toInteger() == streamAccountActiveCount;
		log.info "AvailableStreams - recv[$availStreamsCnt] - expect[" + streamlimit.toInteger() - streamAccountActiveCount + "]";
//		assert availStreamsCnt.toInteger() == streamlimit.toInteger() - streamAccountActiveCount;
				
		/*
		*  Due to stream ordering we must work backwards from the 
		*  total number of streams created.  The newest created
		*  stream will be the first in the list.
		*/
		g = counter;

		log.info "g[$g] - counter[$counter]";

		/*
		*  By design, we never return more than 30 streams.   
		*  
		*/
		this.log.info "Recv Stream Count [" + myXML.Stream.size() + "] lessThan [$streamMaxDisplayCount]";;
		assert myXML.Stream.size() <= streamMaxDisplayCount.toInteger();

		
		while (g != 0) {
			String expectValue = tC.getPropertyValue("expectDBStatus_" + g);
			String expectcb = urnnode + tC.getPropertyValue("expectDBCreatedBy_" + g);
			String expectdb = urnnode + tC.getPropertyValue("expectDBDeletedBy_" + g);
			String expectmb = urnnode + tC.getPropertyValue("expectDBModifiedBy_" + g);
			String expectsh = tC.getPropertyValue("streamhandleFULL_" + g);
			String expectNick = tC.getPropertyValue("expectNickname_" + g);
			String expectrt  = tC.getPropertyValue("rightstokenFULL_" + g);
			String expectGeneric = tC.getPropertyValue("expectGenericRightsToken_" + g);
			String expectRequestingUser = tC.getPropertyValue("expectRequestingUser_" + g);
			String expectCDate = tC.getPropertyValue("expectDBCreatedTime_" + g);
			String expectDDate = tC.getPropertyValue("expectDBDeletedTime_" + g);
			String streamFlagIgnoreCreatedDate = tC.getPropertyValue("streamFlagIgnoreCreatedDate_" + g);
			String streamFlagIgnoreDeletedDate = tC.getPropertyValue("streamFlagIgnoreDeletedDate_" + g);
			String expectDBCreatedByNodeType = tC.getPropertyValue("expectDBCreatedByNodeType_" + g);
			String baseRightsToken = tC.getPropertyValue("rightstokenidFULL");

			log.info "g[$g]";

//			getHistoryRecords(expectsh);

			/* ---------HACKIE SMACKIE 
			*  The requestinguser displayed in streamview is NOT the 
			*  requestinguser supplied during streamcreation.  It is the 
			*  userid associated with security context (saml) which
			*  invoked the request.  Thus, all requestingusers in all
			*  streams displayed will be the same.  We will override
			*  that NOW!  LLP and LLPCS do not display the requestinguser
			*  element.
			*/
			//if (tC.getPropertyValue("nodetype") == "llp" || tC.getPropertyValue("nodetype") == "llpcs") {
			//	expectRequestingUser = "";
			//} else {
				expectRequestingUser = tC.getPropertyValue("assertionUserIdFULL");
			//}
						
			/*
			*  if the nodetype is 'dlp' or 'llp' streams in 'deleted' status
			*   are not displayed.  Thus, we must adjust accordingly.
			*/
			if (tC.getPropertyValue("nodetype") == "llp" || tC.getPropertyValue("nodetype") == "dlp") {
				//if (	expectValue == "active") {
				//	doValidations = true;
				//} else {
				//	doValidations = false;
				//}
			//} else {
				doValidations = true;
			}

			/*
			*  Special processing is required for nickname just
			*  incase it contains special xml characters.
			*/
			if (expectNick != null) {
				if (expectNick.length() > 0) {
					expectNick = expectNick.replace('&amp;','&');
					expectNick = expectNick.replace('&lt;','<');
					expectNick = expectNick.replace('&gt;','>');
					expectNick = expectNick.replace('&apos;','\'');
				}
			}

			/*
			*  There maybe one or more rightstokens created by the test
			*  case.  Thus multiple streams maybe have the same 
			*  rights token.  We will assume that if we get a null
			*  rightstokenFULL_count value that only one rightstoken
			*  was created for the test and that will be contained 
			*  in rightstokenfull.
			*/
			if (expectrt == null) {
				log.info "RIGHTSTOKENFULL - Override to the baseRightsToken value [$baseRightsToken]";
				expectrt = baseRightsToken;
			}
			log.info "g[$g] - doValidations [$doValidations] - nodetype[" + tC.getPropertyValue("nodetype") + "] - expectValue[$expectValue]";
			
			if (doValidations) {
				displayStreamCount++;
				log.info "****************************************"+displayStreamCount+"************************************"

				/*  StreamHandleID */
				
				String recvsh = myXML.Stream[xmlIndex].@StreamHandleID.text();
				log.info "xmlIndex[$xmlIndex] - StreamHandleID - recvsh[$recvsh] - expect[$expectsh]";
//				assert recvsh == expectsh;
				
				//StreamClientNickname
				if (expectNick != null) {
					String recvnick = myXML.Stream[xmlIndex].StreamClientNickname;
					log.info "xmlIndex[$xmlIndex] - StreamClientNickname - recv[$recvnick] - expect[$expectNick]";
					assert expectNick == recvnick;
				} else {
					log.info "xmlIndex[$xmlIndex] - StreamClientNickname - Element NOT present";
					assert myXML.Stream[xmlIndex].StreamClientNickname.size() == 0;
				}
				
				// RequestingUserID
				String recvru = myXML.Stream[xmlIndex].RequestingUserID;
				//log.info "xmlIndex[$xmlIndex] - RequestingUserID - recv[$recvru] - expect[$expectRequestingUser] - expectDBCreatedByNodeType[$expectDBCreatedByNodeType]";
				//assert recvru == expectRequestingUser;
		
				//RightsTokenID
				String recvrt = myXML.Stream[xmlIndex].RightsTokenID.text();
				if (expectGeneric == "true") {
					expectrt = urnGenericRightsToken;
				}
				log.info "xmlIndex[$xmlIndex] - RightsTokenID - recvrt[$recvrt] - expectrt[$expectrt] - expectGeneric[$expectGeneric]";
				assert recvrt == expectrt;
				
				//ExpirationDateTime
				String recvet = myXML.Stream[xmlIndex].ExpirationDateTime;
				log.info "xmlIndex[$xmlIndex] - ExpirationDateTime - is NOT null";
				assert recvet.length() > 0;

				//CreatedBy
				String recvcb   = myXML.Stream[xmlIndex].ResourceStatus.Current.@CreatedBy.text();
				log.info "xmlIndex[$xmlIndex] - CreatedBy - recvcb[$recvcb] - expectcb[$expectcb]";
				assert recvcb == expectcb;

				//CreationDate
				if (streamFlagIgnoreCreatedDate != "true") {
					log.info "xmlIndex[$xmlIndex] - CreationDate - is NOT null";
					String recvDate = "";
					String recvcd = myXML.Stream[xmlIndex].ResourceStatus.Current.@CreationDate.text();
					recvDate = formatDate(recvcd);
					def j = a.dateDiff(recvDate,expectCDate,"seconds");
					log.info "xmlIndex[$xmlIndex] - CreationDate - recvDate[$recvDate] - expectCDate[$expectCDate] DIFF [$j]";
					assert recvcd.length() > 0;
					log.info "xmlIndex[$xmlIndex] - CreationDate - Differences less that 10 seconds";
					//assert j <= 10;
				} else {
					log.info "xmlIndex[$xmlIndex] - CreationDate - IGNORED DUE TO streamFlagIgnoreCreatedDate" ;
				}

				//Value
				String recvValue = myXML.Stream[xmlIndex].ResourceStatus.Current.Value;
				log.info "xmlIndex[$xmlIndex] - Value - recvValue[$recvValue] - expectValue[$expectValue]";
				if (expectValue == "active") {
					assert recvValue == "urn:dece:type:status:active";
				} else {
					assert recvValue == "urn:dece:type:status:deleted";
				}

				//Description
				switch (expectValue) {
					case "active":
						expectDescription = "active";
						break;
					default:
						expectDescription = "deleted";
						break;
				}
				String recvDesc = myXML.Stream[xmlIndex].ResourceStatus.Current.Description;
				log.info "xmlIndex[$xmlIndex] - Description - recvDesc[$recvDesc] - expectDesc[$expectDescription]";
				assert recvDesc == expectDescription;

				/*  Nickname validation */
				if (expectNick == null || expectNick == "") {
					log.info "Asserting no <StreamClientNickname> element exists";
					assert myXML.Stream[xmlIndex].StreamClientNickname.size() == 0;
					assert myXML.Stream[xmlIndex].StreamClientNickname.text() == "";
				} else {
					assert myXML.Stream[xmlIndex].StreamClientNickname.size() == 1;
					String recvNick = myXML.Stream[xmlIndex].StreamClientNickname.text();
					log.info "xmlIndex[$xmlIndex] - recvNick[$recvNick] - expectNick[$expectNick]";
					assert recvNick == expectNick;
				}
									
				/*
				*  If the stream is deleted....
				*/
				log.info "DeletedBy length: " + myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletedBy.toString().length();
				log.info "DeletionDate length: " + myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletionDate.toString().length();
				
				if (	expectValue == "deleted") {
					String recvDeletedBy = myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletedBy.toString();
					String recvDeletionDate = myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletionDate.toString();
					
					//DeletedBy
					this.log.info "recvDeletedBy[$recvDeletedBy] - expectdb[$expectdb]";
					assert recvDeletedBy == expectdb;
					
					//DeletionDate
					if (streamFlagIgnoreDeletedDate != "true") {
						String recvDate = formatDate(recvDeletionDate);
						def j = a.dateDiff(expectDDate,recvDate,"seconds");
						log.info "xmlIndex[$xmlIndex] - DeletionDate - recvDate[$recvDate] - expectDDate[$expectDDate] DIFF [$j]";
						assert recvDate.length() > 0;
						log.info "xmlIndex[$xmlIndex] - DeletionDate - Difference less that 10 seconds";
						assert j <= 10;
					} else {
						log.info "xmlIndex[$xmlIndex] - DeletionDate - IGNORED DUE TO streamFlagIgnoreDeletedDate" ;
					}
				} else {
					assert myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletedBy.toString().length()    == 0;
					assert myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletionDate.toString().length() == 0;
				}
				/*
				*
				*  History validation
				*
				*/
//				def myHistoryXML = new XmlSlurper().parseText(tC.getPropertyValue("streamHistoryRows"));
//
//				int rCnt = myHistoryXML.ResultSet.Row.size();
//
//				log.info "-------------HISTORY-----------------";
//				log.info "History Row Count[$rCnt] - <History> Count [" + myXML.ResourceStatus.History.size() + "]";
//				if (tC.getPropertyValue("expectDBDeletedBy") != "1") {
//					rCnt -= 1;
//				} 
//				assert myXML.Stream[xmlIndex].ResourceStatus.History.Prior.size() == rCnt;
		
//				for (int i = 0; i < rCnt; i++) {
//					String hrecvModifiedBy = myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].@ModifiedBy.text();
//					String hexpectModifiedBy = urnnode + myHistoryXML.ResultSet.Row[i].CREATED_BY_NODE_OID.text();
//					log.info "$i --> hrecvModifiedBy[$hrecvModifiedBy] - hexpectModifiedBy[$hexpectModifiedBy]";
//					assert hrecvModifiedBy == expectmb;
//
//					String hrecvStatus = myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].Value;
//					String hexpectStatus = myHistoryXML.ResultSet.Row[i].STATUS.text();
//					log.info "$i --> hrecvStatus[$hrecvStatus] - hexpectStatus[$hexpectStatus]";
//					if (hexpectStatus == "active") {
//						assert hrecvStatus == "urn:dece:type:status:active";
//					} else {
//						assert hrecvStatus == "urn:dece:type:status:deleted";
//					}
//					
//					String hrecvDescription = myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].Description;
//					switch (hexpectStatus) {
//						case "active": hexpectDescription = "active"; break;
//						case "deleted": hexpectDescription = "deleted"; break;
//						default: hexpectDescription = "deleted"; break;
//					}
//					log.info "$i --> hrecvDescription[$hrecvDescription] - hexpectDescription[$hexpectDescription]";
//					assert hrecvDescription == hexpectDescription;
//	
//					String hrecvModificationDate = formatDate(myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].@ModificationDate.text());
//					int subSec = myHistoryXML.ResultSet.Row[i].EXPIRATION_DATE.text().indexOf(".");
//					String hexpectModificationDate = myHistoryXML.ResultSet.Row[i].CREATED_DATE.text().substring(0, subSec);
//					log.info "$i --> hrecvModificationDate[$hrecvModificationDate] - hexpectModificationDate[$hexpectModificationDate]";
//					assert hrecvModificationDate.replace("/","-") == hexpectModificationDate;
//					
//				}
			
				xmlIndex++;
			}

			/*
			*  By design, we never return more than 30 streams.   So
			*  if we encounter our 30th stream we will break out of 
			*  the XML validation routines and allow size() 
			*  invocations on the xml body to verify no additional
			*  streams were returned.
			*/
			if (displayStreamCount == streamMaxDisplayCount.toInteger()) {
				break;
			}
			
			g--;
		}
//
//		log.info "--------------------FINAL XML size() Validations -------------------";
//		log.info "ResourceStatus size: "  + myXML.Stream.ResourceStatus.size();
//		log.info "ResourceStatus.Current size: " + myXML.Stream.ResourceStatus.Current.size();
//		log.info "ResourceStatus.Value size: " + myXML.Stream.ResourceStatus.Current.Value.size();
//		log.info "ResourceStatus.Description size: " + myXML.Stream.ResourceStatus.Current.Description.size();
//		log.info "RightsTokenID size: "  + myXML.Stream.RightsTokenID.size();
//		log.info "ExpirationDateTime size: " + myXML.Stream.ExpirationDateTime.size();
//
//		log.info "Stream.size() LTE MAX allowed of " + streamMaxDisplayCount.toInteger();
//		assert myXML.Stream.size() <= streamMaxDisplayCount.toInteger();
//		
//		log.info "Stream.size() IS -- recv[" + myXML.Stream.size() + "] Expect[$displayStreamCount]";
//		assert myXML.Stream.size() == displayStreamCount;
//		
//		assert myXML.Stream.ResourceStatus.size() == displayStreamCount;
//		assert myXML.Stream.ResourceStatus.Current.size() == displayStreamCount;
//		assert myXML.Stream.ResourceStatus.Current.Value.size() == displayStreamCount;
//		assert myXML.Stream.ResourceStatus.Current.Description.size() == displayStreamCount;
//		assert myXML.Stream.RightsTokenID.size()  == displayStreamCount;
//		assert myXML.Stream.ExpirationDateTime.size() == displayStreamCount;
	}
} 

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Verify the response headers and body" disabled="true"><con:settings/><con:config><script><![CDATA[import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Calendar;
import java.text.SimpleDateFormat;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
//------------------------------------------------------//
def formatDate(recvDate) {
	try {
		String dateHolder = "";
		Pattern datePattern = Pattern.compile("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})");
		Matcher cdateMatcher = datePattern.matcher(recvDate);
		if (cdateMatcher.find()) {
			dateHolder = cdateMatcher.group(1) + "/" + cdateMatcher.group(2) + "/" +
				cdateMatcher.group(3) + " " + cdateMatcher.group(4) + ":" +
				cdateMatcher.group(5) + ":" + cdateMatcher.group(6);
			log.info "dateHolder[$dateHolder]";	
		}
	} 
	catch (Throwable e) {
		log.info "Matcher Failure!  recvDate[$recvDate] ERROR - " + e;
	} 
	finally {
		return dateHolder;	
	}
}
//------------------------------------------------------//
def getHistoryRecords(sh) {
	def tC = testRunner.getTestCase();
	def tS = tC.getTestSuite();
	def tP = tS.getProject();
	
	log.info "---------IN getHistoryRecords sh[$sh]";
	
	a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());
     String hsh;
     if(tP.getPropertyValue("V2") == tP.getPropertyValue("versionUrlEncode"))
     {
	int lastColon = sh.lastIndexOf('%');
     hsh = sh.substring(lastColon +3,sh.length());
     }
     else
     {
     int lastColon = sh.lastIndexOf(':');
     hsh = sh.substring(lastColon +1,sh.length());
     }
	String hresults = null;
	String hsql = """select 
 	 to_char(rawtohex(a.STREAM_HISTORY_OID)) STREAM_HISTORY_OID,
	  to_char(rawtohex(a.STREAM_HANDLE_OID)) STREAM_HANDLE_OID,
	  to_char(rawtohex(a.RIGHTS_TOKEN_OID)) RIGHTS_TOKEN_OID,
	  to_char(rawtohex(a.ACCOUNT_OID)) ACCOUNT_OID,
	  to_char(rawtohex(a.CREATED_BY_USER_OID)) CREATED_BY_USER_OID,
 	 TRANSACTION_ID,
	  STATUS,
	  STREAM_CLIENT_NICKNAME,
	  EXPIRATION_DATE,
	  CLOSED_DATE,
	  CLOSED_BY_ORG_ID,
	  CREATED_DATE,
	  to_char(rawtohex(a.CREATED_BY_NODE_OID)) CREATED_BY_NODE_OID 
	  from STREAM_DATA_HISTORY a where STREAM_HANDLE_OID =hextoraw( '$hsh') 
	  order by STATUS
	  """;

	  log.info "hsql is $hsql";

	hresults = a.SelectFromDB(hsql,tP.getPropertyValue("targetSystem").toString());
	log.info hresults;

	/*
	*  If zero length, no need to continue;
	*/
	assert hresults.length() > 0;

	try {
		def hmyXML = new XmlSlurper().parseText(hresults);
		log.info "hmyXML.ResultSet.Row.size() is [" + hmyXML.ResultSet.Row.size() + "]";
		assert hmyXML.ResultSet.Row.size() >= 1;
	}
	catch(Throwable e) {
		log.info e; 
		assert 1 == 2;
	}
	finally {
		tC.setPropertyValue("streamHistoryRows", hresults);
	}
}
//------------------------------------------------------//


def a = new generalUtils.generalUtils(log);

def url = tP.getPropertyValue("targetHost");
def urnacct = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def urnnode = tP.getPropertyValue("urnNode");
def urnErr = tP.getPropertyValue("urnerror");
def urnGenericRightsToken = tP.getPropertyValue("urnGenericRightsToken");
def streamMaxDisplayCount = tP.getPropertyValue("streamMaxDisplayCount");
def streamlimit  = tP.getPropertyValue("streamlimit");
def acct  = tC.getPropertyValue("nodeaccountid");
def sh = tC.getPropertyValue("streamhandleFULL");
def counter = tC.getPropertyValue("counter").toInteger();
def account = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrTypeStreamListView");
def XMLbody = tC.getPropertyValue("XMLbody");
def expectCreatedBy = urnnode + tC.getPropertyValue("expectDBCreatedBy");
def expectDeletedBy = urnnode + tC.getPropertyValue("expectDBDeletedBy");
def expectModifiedBy = urnnode + tC.getPropertyValue("expectDBModifiedBy");
def expectStatus = tC.getPropertyValue("expectDBStatus");
def expectRT = tC.getPropertyValue("rightstokenidFULL");
def expectSH = tC.getPropertyValue("streamhandleFULL");
def expectNickname = tC.getPropertyValue("expectNickname");
def expectStreamActiveCnt = tC.getPropertyValue("streamAccountActiveCount");
def expectStreamAvailCnt = streamlimit.toInteger() - expectStreamActiveCnt.toInteger();
def expectGenericRightsToken = tC.getPropertyValue("expectGenericRightsToken");

String errorID     = "";
String errorReason = "";
String errorLink   = "";
String errorHost   = "https://" + tP.getPropertyValue("targetHostq") + ":" + tP.getPropertyValue("targetPort");
String availStreamsCnt = "";
String major = tP.getPropertyValue("V1").toString();
String minor = tP.getPropertyValue("V2").toString();
String errorLinkBase = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#";
String orgRequest = url + "/rest/$major/$minor/Account/$account/Stream/$sh";
String expectHTTPstatus = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";
String expectDescription = "";
boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean processXMLFlag  = true;
boolean XMLbodynull     = false;
boolean doValidations   = true;
int displayStreamCount = 0;
int xmlIndex = 0;
int g = 0;
int streamAccountActiveCount = tC.getPropertyValue("streamAccountActiveCount").toInteger();


/*
*  Change the expectRH value if policies should result
*  in the generic rightstoken being displayed
*/
if (expectGenericRightsToken == "true") {
	expectRT = tP.getPropertyValue("urnGenericRightsToken");
}

/*
*  Added this override with the 7.7 drop.  They change the name
*  of the <ErrorLink> host.
*/
if (tP.getPropertyValue("targetURL").length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = "https://qa.q.uvvu.com:" + tP.getPropertyValue("targetPort");
}

switch (errorRespType) {
	case "SUCCESS_NO_STREAMS":
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = false;
		httpLocationHeader = false;
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	

	case "Node_status_inactive":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                processXMLFlag  = true;
                                errorID = "urn:dece:errorid:org:dece:securitycontext:Bad_Request";
                                errorReason = "node_status_inactive";
                                errorLink = "$errorHost/deceerrors/error/error_response.html";
break;


	case "XML_PARSING_ERROR":
		errorLinkFlag = true;
		errorReasonFlag = false;
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID = "urn:dece:errorid:org:dece:SaxParserException";
		errorLink  = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;
	
	default:
		errorReasonFlag = true;
		expectHTTPstatus = tC.getPropertyValue("errorStatusCode");
		errorID     = urnErr + tC.getPropertyValue("errorID");
		errorReason = tC.getPropertyValue("errorReason");
		errorLink   = "$errorLinkBase" + tC.getPropertyValue("errorID");
	break;
}

log.info "errorRespType[$errorRespType]";

/*
*   HTTP HEADER CHECKS
*/
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;

// Connection
if(tC.getPropertyValue("httpStatus") == "HTTP/1.1 400 Bad Request")
{
	expectHTTPconnection = "close";
}
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert tC.getPropertyValue("httpConnect") == expectHTTPconnection;

/*
* Content-Length
*/
String httpContentEncoding = tC.getPropertyValue("httpContentEncoding");
String contentLength = tC.getPropertyValue("httpContentLength");
log.info "httpContentEncoding[$httpContentEncoding]";
log.info "contentLength[$contentLength]";
if (httpContentEncoding == "null" || httpContentEncoding == null) {
	log.info "Asserting contentLength.length() > 0";
	//assert contentLength.toInteger() > 0;
} else {
	log.info "Asserting httpContentEncoding is chunked";
	assert tC.getPropertyValue("httpContentEncoding") == "chunked";
}

//No Content-Location
assert tC.getPropertyValue("httpContentLocation") == null;

//Content-Type
//if(tC.getPropertyValue("nodetype")== "llp" )
this.log.info "HTTP Content-Type:  Expect: $expectHTTPcontenttype - Received: " + tC.getPropertyValue("httpContentType");
assert tC.getPropertyValue("httpContentType") == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {
	assert XMLbody == null;
}

this.log.info "XMLBody Length [" + XMLbody.length() + "] processXMLFlag[$processXMLFlag]";

if (XMLbody != null && processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	if (errorRespType != "SUCCESS" && errorRespType != "SUCCESS_NO_STREAMS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;

		// ErrorCode
		this.log.info "Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorLink [" + myXML.Error.ErrorLink.toString() + "] errorLink[$errorLink]";
		//assert myXML.Error.ErrorLink.toString() == errorLink;
		
	} else if (errorRespType == "SUCCESS_NO_STREAMS") {
		log.info "--------------SUCCESS NO STREAMS---------------";
		availStreamsCnt = myXML.@AvailableStreams.text();
		activeStreamCnt = myXML.@ActiveStreamCount.text();

		log.info "AvailableStreams[$availStreamsCnt] lte System Limit of [" + tP.getPropertyValue("streamlimit") + "]";
		assert availStreamsCnt <= tP.getPropertyValue("streamlimit");

		if (tC.getPropertyValue("streamFlagCreateDateOld") != "true") {
			log.info "Assert ActiveStreamCount == 0 -- streamFlagCreateDateOld[" + tC.getPropertyValue("streamFlagCreateDateOld") + "]";
			assert activeStreamCnt.toInteger() == 0;
			log.info "AvailableStreams - recv[$availStreamsCnt] - expect[" + streamlimit.toInteger() + "]";
			assert availStreamsCnt.toInteger() == streamlimit.toInteger();
		} else {
			log.info "ActiveStreamCount[$activeStreamCnt] == expectStreamActiveCnt[$expectStreamActiveCnt]";
			assert activeStreamCnt.toInteger() == expectStreamActiveCnt.toInteger();
			log.info "ActiveStreamCount[$availStreamsCnt] == " + streamlimit.toInteger() - activeStreamCnt.toInteger() + "]";
			assert availStreamsCnt.toInteger() == streamlimit.toInteger() - activeStreamCnt.toInteger();
		}
		
		log.info "Assert NO <Stream> Rows Present";
		assert myXML.Stream.size() == myXML.Stream.size();
		log.info "Assert NO <Stream>.<ResourceStatus> Rows Present";
		assert myXML.Stream.ResourceStatus.size() == 0;
		log.info "Assert NO <Stream>.<RightsTokenID> Rows Present";
		assert myXML.Stream.RightsTokenID.size() == 0;
		log.info "Assert NO <Stream>.<ExpirationDateTime> Rows Present";
		assert myXML.Stream.ExpirationDateTime.size() == 0;
			
		/*  AvailableStreams */
		log.info "availStreamsCnt[$availStreamsCnt] - expectStreamAvailCnt[$expectStreamAvailCnt]";
		assert availStreamsCnt.toInteger() == expectStreamAvailCnt.toInteger();

		/* ActiveStreamCount */
		log.info "activeStreamCnt[$activeStreamCnt] - expectStreamActiveCnt[$expectStreamActiveCnt]";
		assert activeStreamCnt.toInteger() == expectStreamActiveCnt.toInteger();
	} else {
		log.info "--------------STREAM DATA VERIFICATION-----------------";
		availStreamsCnt = myXML.@AvailableStreams.text();
		
		activeStreamCnt = myXML.@ActiveStreamCount.text();

		this.log.info "AvailableStreams[$availStreamsCnt] lte System Limit of [" + tP.getPropertyValue("streamlimit")  + "]";
		assert availStreamsCnt.toInteger() <= tP.getPropertyValue("streamlimit").toInteger();

		log.info "Assert ActiveStreamCount == $streamAccountActiveCount";
//		assert activeStreamCnt.toInteger() == streamAccountActiveCount;
		log.info "AvailableStreams - recv[$availStreamsCnt] - expect[" + streamlimit.toInteger() - streamAccountActiveCount + "]";
//		assert availStreamsCnt.toInteger() == streamlimit.toInteger() - streamAccountActiveCount;
				
		/*
		*  Due to stream ordering we must work backwards from the 
		*  total number of streams created.  The newest created
		*  stream will be the first in the list.
		*/
		g = counter;

		log.info "g[$g] - counter[$counter]";

		/*
		*  By design, we never return more than 30 streams.   
		*  
		*/
		this.log.info "Recv Stream Count [" + myXML.Stream.size() + "] lessThan [$streamMaxDisplayCount]";;
		assert myXML.Stream.size() <= streamMaxDisplayCount.toInteger();

		
		while (g != 0) {
			String expectValue = tC.getPropertyValue("expectDBStatus_" + g);
			String expectcb = urnnode + tC.getPropertyValue("expectDBCreatedBy_" + g);
			String expectdb = urnnode + tC.getPropertyValue("expectDBDeletedBy_" + g);
			String expectmb = urnnode + tC.getPropertyValue("expectDBModifiedBy_" + g);
			String expectsh = tC.getPropertyValue("streamhandleFULL_" + g);
			String expectNick = tC.getPropertyValue("expectNickname_" + g);
			String expectrt  = tC.getPropertyValue("rightstokenFULL_" + g);
			String expectGeneric = tC.getPropertyValue("expectGenericRightsToken_" + g);
			String expectRequestingUser = tC.getPropertyValue("expectRequestingUser_" + g);
			String expectCDate = tC.getPropertyValue("expectDBCreatedTime_" + g);
			String expectDDate = tC.getPropertyValue("expectDBDeletedTime_" + g);
			String streamFlagIgnoreCreatedDate = tC.getPropertyValue("streamFlagIgnoreCreatedDate_" + g);
			String streamFlagIgnoreDeletedDate = tC.getPropertyValue("streamFlagIgnoreDeletedDate_" + g);
			String expectDBCreatedByNodeType = tC.getPropertyValue("expectDBCreatedByNodeType_" + g);
			String baseRightsToken = tC.getPropertyValue("rightstokenidFULL");

			log.info "g[$g]";

			getHistoryRecords(expectsh);

			/* ---------HACKIE SMACKIE 
			*  The requestinguser displayed in streamview is NOT the 
			*  requestinguser supplied during streamcreation.  It is the 
			*  userid associated with security context (saml) which
			*  invoked the request.  Thus, all requestingusers in all
			*  streams displayed will be the same.  We will override
			*  that NOW!  LLP and LLPCS do not display the requestinguser
			*  element.
			*/
			//if (tC.getPropertyValue("nodetype") == "llp" || tC.getPropertyValue("nodetype") == "llpcs") {
			//	expectRequestingUser = "";
			//} else {
				expectRequestingUser = tC.getPropertyValue("assertionUserIdFULL");
			//}
						
			/*
			*  if the nodetype is 'dlp' or 'llp' streams in 'deleted' status
			*   are not displayed.  Thus, we must adjust accordingly.
			*/
			if (tC.getPropertyValue("nodetype") == "llp" || tC.getPropertyValue("nodetype") == "dlp") {
				//if (	expectValue == "active") {
				//	doValidations = true;
				//} else {
				//	doValidations = false;
				//}
			//} else {
				doValidations = true;
			}

			/*
			*  Special processing is required for nickname just
			*  incase it contains special xml characters.
			*/
			if (expectNick != null) {
				if (expectNick.length() > 0) {
					expectNick = expectNick.replace('&amp;','&');
					expectNick = expectNick.replace('&lt;','<');
					expectNick = expectNick.replace('&gt;','>');
					expectNick = expectNick.replace('&apos;','\'');
				}
			}

			/*
			*  There maybe one or more rightstokens created by the test
			*  case.  Thus multiple streams maybe have the same 
			*  rights token.  We will assume that if we get a null
			*  rightstokenFULL_count value that only one rightstoken
			*  was created for the test and that will be contained 
			*  in rightstokenfull.
			*/
			if (expectrt == null) {
				log.info "RIGHTSTOKENFULL - Override to the baseRightsToken value [$baseRightsToken]";
				expectrt = baseRightsToken;
			}
			log.info "g[$g] - doValidations [$doValidations] - nodetype[" + tC.getPropertyValue("nodetype") + "] - expectValue[$expectValue]";
			
			if (doValidations) {
				displayStreamCount++;
				log.info "****************************************"+displayStreamCount+"************************************"

				/*  StreamHandleID */
				
				String recvsh = myXML.Stream[xmlIndex].@StreamHandleID.text();
				log.info "xmlIndex[$xmlIndex] - StreamHandleID - recvsh[$recvsh] - expect[$expectsh]";
				assert recvsh == expectsh;
				
				//StreamClientNickname
				if (expectNick != null) {
					String recvnick = myXML.Stream[xmlIndex].StreamClientNickname;
					log.info "xmlIndex[$xmlIndex] - StreamClientNickname - recv[$recvnick] - expect[$expectNick]";
					assert expectNick == recvnick;
				} else {
					log.info "xmlIndex[$xmlIndex] - StreamClientNickname - Element NOT present";
					assert myXML.Stream[xmlIndex].StreamClientNickname.size() == 0;
				}
				
				// RequestingUserID
				String recvru = myXML.Stream[xmlIndex].RequestingUserID;
				//log.info "xmlIndex[$xmlIndex] - RequestingUserID - recv[$recvru] - expect[$expectRequestingUser] - expectDBCreatedByNodeType[$expectDBCreatedByNodeType]";
				//assert recvru == expectRequestingUser;
		
				//RightsTokenID
				String recvrt = myXML.Stream[xmlIndex].RightsTokenID.text();
				if (expectGeneric == "true") {
					expectrt = urnGenericRightsToken;
				}
				log.info "xmlIndex[$xmlIndex] - RightsTokenID - recvrt[$recvrt] - expectrt[$expectrt] - expectGeneric[$expectGeneric]";
				assert recvrt == expectrt;
				
				//ExpirationDateTime
				String recvet = myXML.Stream[xmlIndex].ExpirationDateTime;
				log.info "xmlIndex[$xmlIndex] - ExpirationDateTime - is NOT null";
				assert recvet.length() > 0;

				//CreatedBy
				String recvcb   = myXML.Stream[xmlIndex].ResourceStatus.Current.@CreatedBy.text();
				log.info "xmlIndex[$xmlIndex] - CreatedBy - recvcb[$recvcb] - expectcb[$expectcb]";
				assert recvcb == expectcb;

				//CreationDate
				if (streamFlagIgnoreCreatedDate != "true") {
					log.info "xmlIndex[$xmlIndex] - CreationDate - is NOT null";
					String recvDate = "";
					String recvcd = myXML.Stream[xmlIndex].ResourceStatus.Current.@CreationDate.text();
					recvDate = formatDate(recvcd);
					def j = a.dateDiff(recvDate,expectCDate,"seconds");
					log.info "xmlIndex[$xmlIndex] - CreationDate - recvDate[$recvDate] - expectCDate[$expectCDate] DIFF [$j]";
					assert recvcd.length() > 0;
					log.info "xmlIndex[$xmlIndex] - CreationDate - Differences less that 10 seconds";
					//assert j <= 10;
				} else {
					log.info "xmlIndex[$xmlIndex] - CreationDate - IGNORED DUE TO streamFlagIgnoreCreatedDate" ;
				}

				//Value
				String recvValue = myXML.Stream[xmlIndex].ResourceStatus.Current.Value;
				log.info "xmlIndex[$xmlIndex] - Value - recvValue[$recvValue] - expectValue[$expectValue]";
				if (expectValue == "active") {
					assert recvValue == "urn:dece:type:status:active";
				} else {
					assert recvValue == "urn:dece:type:status:deleted";
				}

				//Description
				switch (expectValue) {
					case "active":
						expectDescription = "active";
						break;
					default:
						expectDescription = "deleted";
						break;
				}
				String recvDesc = myXML.Stream[xmlIndex].ResourceStatus.Current.Description;
				log.info "xmlIndex[$xmlIndex] - Description - recvDesc[$recvDesc] - expectDesc[$expectDescription]";
				assert recvDesc == expectDescription;

				/*  Nickname validation */
				if (expectNick == null || expectNick == "") {
					log.info "Asserting no <StreamClientNickname> element exists";
					assert myXML.Stream[xmlIndex].StreamClientNickname.size() == 0;
					assert myXML.Stream[xmlIndex].StreamClientNickname.text() == "";
				} else {
					assert myXML.Stream[xmlIndex].StreamClientNickname.size() == 1;
					String recvNick = myXML.Stream[xmlIndex].StreamClientNickname.text();
					log.info "xmlIndex[$xmlIndex] - recvNick[$recvNick] - expectNick[$expectNick]";
					assert recvNick == expectNick;
				}
									
				/*
				*  If the stream is deleted....
				*/
				log.info "DeletedBy length: " + myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletedBy.toString().length();
				log.info "DeletionDate length: " + myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletionDate.toString().length();
				
				if (	expectValue == "deleted") {
					String recvDeletedBy = myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletedBy.toString();
					String recvDeletionDate = myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletionDate.toString();
					
					//DeletedBy
					this.log.info "recvDeletedBy[$recvDeletedBy] - expectdb[$expectdb]";
					assert recvDeletedBy == expectdb;
					
					//DeletionDate
					if (streamFlagIgnoreDeletedDate != "true") {
						String recvDate = formatDate(recvDeletionDate);
						def j = a.dateDiff(expectDDate,recvDate,"seconds");
						log.info "xmlIndex[$xmlIndex] - DeletionDate - recvDate[$recvDate] - expectDDate[$expectDDate] DIFF [$j]";
						assert recvDate.length() > 0;
						log.info "xmlIndex[$xmlIndex] - DeletionDate - Difference less that 10 seconds";
						assert j <= 10;
					} else {
						log.info "xmlIndex[$xmlIndex] - DeletionDate - IGNORED DUE TO streamFlagIgnoreDeletedDate" ;
					}
				} else {
					assert myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletedBy.toString().length()    == 0;
					assert myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletionDate.toString().length() == 0;
				}
				/*
				*
				*  History validation
				*
				*/
				def myHistoryXML = new XmlSlurper().parseText(tC.getPropertyValue("streamHistoryRows"));

				int rCnt = myHistoryXML.ResultSet.Row.size();

				log.info "-------------HISTORY-----------------";
				log.info "History Row Count[$rCnt] - <History> Count [" + myXML.ResourceStatus.History.size() + "]";
				if (tC.getPropertyValue("expectDBDeletedBy") != "1") {
					rCnt -= 1;
				} 
				assert myXML.Stream[xmlIndex].ResourceStatus.History.Prior.size() == rCnt;
		
				for (int i = 0; i < rCnt; i++) {
					String hrecvModifiedBy = myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].@ModifiedBy.text();
					String hexpectModifiedBy = urnnode + myHistoryXML.ResultSet.Row[i].CREATED_BY_NODE_OID.text();
					log.info "$i --> hrecvModifiedBy[$hrecvModifiedBy] - hexpectModifiedBy[$hexpectModifiedBy]";
					assert hrecvModifiedBy == expectmb;

					String hrecvStatus = myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].Value;
					String hexpectStatus = myHistoryXML.ResultSet.Row[i].STATUS.text();
					log.info "$i --> hrecvStatus[$hrecvStatus] - hexpectStatus[$hexpectStatus]";
					if (hexpectStatus == "active") {
						assert hrecvStatus == "urn:dece:type:status:active";
					} else {
						assert hrecvStatus == "urn:dece:type:status:deleted";
					}
					
					String hrecvDescription = myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].Description;
					switch (hexpectStatus) {
						case "active": hexpectDescription = "active"; break;
						case "deleted": hexpectDescription = "deleted"; break;
						default: hexpectDescription = "deleted"; break;
					}
					log.info "$i --> hrecvDescription[$hrecvDescription] - hexpectDescription[$hexpectDescription]";
					assert hrecvDescription == hexpectDescription;
	
					String hrecvModificationDate = formatDate(myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].@ModificationDate.text());
					int subSec = myHistoryXML.ResultSet.Row[i].EXPIRATION_DATE.text().indexOf(".");
					String hexpectModificationDate = myHistoryXML.ResultSet.Row[i].CREATED_DATE.text().substring(0, subSec);
					log.info "$i --> hrecvModificationDate[$hrecvModificationDate] - hexpectModificationDate[$hexpectModificationDate]";
					assert hrecvModificationDate.replace("/","-") == hexpectModificationDate;
					
				}
			
				xmlIndex++;
			}

			/*
			*  By design, we never return more than 30 streams.   So
			*  if we encounter our 30th stream we will break out of 
			*  the XML validation routines and allow size() 
			*  invocations on the xml body to verify no additional
			*  streams were returned.
			*/
			if (displayStreamCount == streamMaxDisplayCount.toInteger()) {
				break;
			}
			
			g--;
		}

		log.info "--------------------FINAL XML size() Validations -------------------";
		log.info "ResourceStatus size: "  + myXML.Stream.ResourceStatus.size();
		log.info "ResourceStatus.Current size: " + myXML.Stream.ResourceStatus.Current.size();
		log.info "ResourceStatus.Value size: " + myXML.Stream.ResourceStatus.Current.Value.size();
		log.info "ResourceStatus.Description size: " + myXML.Stream.ResourceStatus.Current.Description.size();
		log.info "RightsTokenID size: "  + myXML.Stream.RightsTokenID.size();
		log.info "ExpirationDateTime size: " + myXML.Stream.ExpirationDateTime.size();

		log.info "Stream.size() LTE MAX allowed of " + streamMaxDisplayCount.toInteger();
		assert myXML.Stream.size() <= streamMaxDisplayCount.toInteger();
		
		log.info "Stream.size() IS -- recv[" + myXML.Stream.size() + "] Expect[$displayStreamCount]";
//		assert myXML.Stream.size() == displayStreamCount;
		
		assert myXML.Stream.ResourceStatus.size() == displayStreamCount;
		assert myXML.Stream.ResourceStatus.Current.size() == displayStreamCount;
		assert myXML.Stream.ResourceStatus.Current.Value.size() == displayStreamCount;
		assert myXML.Stream.ResourceStatus.Current.Description.size() == displayStreamCount;
		assert myXML.Stream.RightsTokenID.size()  == displayStreamCount;
		assert myXML.Stream.ExpirationDateTime.size() == displayStreamCount;
	}
} 

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Validation of List of Streams get as per Details stored at StreamCreate for all" disabled="true"><con:settings/><con:config><script><![CDATA[def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def commonTC = testRunner.testCase.testSuite.project.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName('StreamCreate');
def delete_streamTC = testRunner.testCase.testSuite.project.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName('StreamDelete');

tC.setPropertyValue("StreamDeleted",delete_streamTC.getPropertyValue("StreamDeleted"));

tC.setPropertyValue("StreamList",commonTC.getPropertyValue("StreamList"));
def streamCreateCount = context.expand( '${#Project#StreamCreateCount}' )
tC.setPropertyValue("accountList",commonTC.getPropertyValue("accountList"));

tC.setPropertyValue("streamCreateCount",streamCreateCount);

def xMLbody = context.expand( '${#TestCase#XMLbody}' )

def nodeid = context.expand( '${#TestCase#nodeid}' )
def node_flag=true;
def assertionAccountIdFULL = context.expand( '${#TestCase#assertionAccountIdFULL}' ).toString();
def StreamList=context.expand( '${#TestCase#StreamList}' ).toString();
def accountList=context.expand( '${#TestCase#accountList}' ).toString();
log.info "accountList :$accountList"
log.info "assertionAccountIdFULL :$assertionAccountIdFULL"
def rawRequest = context.expand( '${GET - StreamListView#RawRequest}' )

String[] List=StreamList.split("#",2);

String ExpectedAcct=List[0];

String[] ExpStreamLL=List[1].split(";");

HashMap Expstrm = new HashMap();

ArrayList<StreamObj> StmObj=new ArrayList<StreamObj>();
int j=0;


if(nodeid=="LLASP_CS_1" || nodeid=="DLASP" || nodeid=="DLASP_CS_1" || nodeid=="LLASP_CS_2"|| nodeid=="DLASP_CS_2")
{
  node_flag=true;
}
else
{ node_flag=false  }

while(j<ExpStreamLL.length)
{   
	String[] str= ExpStreamLL[j].split("!");
	    
	  Expstrm.put(str[0], str[1]);
	  String[] val=str[1].split(",");
//	  log.info "handle id"+str[0] +";" +"property"+ str[1]
	  j++;
//	  log.info val.length;
//	  log.info "Rights :"+val[0]+", User:"+val[1]//+",user:"+val[2]
	  StmObj.add(new StreamObj(str[0],val[0],val[1]));
	
}
//log.info "object :"+StmObj.get(1).getStreamHandleID();
def response = context.expand( '${GET - StreamListView#Response}' )
def myXML;
HashMap Actstrm = new HashMap();

int streamDeleteCount = Integer.parseInt(context.expand( '${#Project#StreamDeleteCount}' ))

def streamDeleted = context.expand( '${#TestCase#StreamDeleted}' )
String[] DeletedStream=streamDeleted.split(";");

if(response!="")
{
myXML = new XmlSlurper().parseText(response).declareNamespace('dece':tP.getPropertyValue("coordinatorSchema"));;
  
  int ActualStreamCount=myXML.Stream.size();
  log.info "Expected StreamCount $streamCreateCount plus, Deleted Stream Count $streamDeleteCount ,Actual StreamCount $ActualStreamCount"
  if(node_flag==true)
    {  assert ActualStreamCount==Integer.parseInt(streamCreateCount)+streamDeleteCount;}
  else
    {  assert ActualStreamCount==Integer.parseInt(streamCreateCount);
    	}
  log.info "ActualStreamCount :"+ ActualStreamCount
   int count=0;
  for(int i=0;i<ActualStreamCount;i++)
  {  
  	def ActualStreamHandleID=myXML.Stream[i].@StreamHandleID.text();
  	def ActualRghtsTokenID=myXML.Stream[i].RightsTokenID.text();
  	def ActualRequestingUserID=myXML.Stream[i].RequestingUserID.text();
  	def ActExpirationDateTime=myXML.Stream[i].ExpirationDateTime.text();
  	def ResourceStatus=myXML.Stream[i].ResourceStatus.Current.Value.text(); 
  	def Description=myXML.Stream[i].ResourceStatus.Current.Description.text(); 
//  	log.info "ResourceStatus"+Description
  	//urn:dece:type:status:active
     
//     <Value>urn:dece:type:status:deleted</Value>
//                <Description>deleted</Description>
       
     
  	 
  	     for(int s=0; s<StmObj.size();s++)
  	     {
  	         if (ActualStreamHandleID==StmObj.get(s).getStreamHandleID())
  	         {
  	         	
  	           count++;
   	          def ExpectUser= StmObj.get(s).getUserid()
  	          def ExpectRght= StmObj.get(s).getRightstokenidFULL() ;

                log.info "For StreamID :'$ActualStreamHandleID' Expected rightId :'$ExpectRght' ,ActualRights:'$ActualRghtsTokenID'"
  	           assert ExpectRght==ActualRghtsTokenID;
  	   	     log.info "For StreamID :'$ActualStreamHandleID' Expected USERID :'$ExpectUser' ,Actual userID:'$ActualRequestingUserID '"  	           
  	   	     assert ExpectUser==ActualRequestingUserID;
  	   	   
  	           }  	

  	           int flag=0;
  	              for(int x=0;x<DeletedStream.length;x++)
  	              {
  	              	  if (ActualStreamHandleID==DeletedStream[x])
  	              	     {  
  	              	     	log.info "For StreamID :'$ActualStreamHandleID' expected ResourceStatus :'urn:dece:type:status:deleted' ,Actual resource status:'$ResourceStatus'"
  	              	        assert ResourceStatus=="urn:dece:type:status:deleted"
  	              	         log.info "For StreamID :'$ActualStreamHandleID' expected Description :'deleted' ,Actual Description :'$Description'"
  	              	         assert Description=="deleted"
  	              	          
  	              	         flag=1;
  	              	         break;
  	              	     	}
  	               	}

  	               if(flag==0)
  	               {
  	               	 log.info "For StreamID :'$ActualStreamHandleID' expected ResourceStatus :'urn:dece:type:status:active' ,Actual resource status:'$ResourceStatus'"
  	               	assert ResourceStatus=="urn:dece:type:status:active"
  	              	      log.info "For StreamID :'$ActualStreamHandleID' expected Description :'active' ,Actual Description :'$Description'"  
  	              	         assert Description=="active"
  	              	          
  	               	}
  	   }
     }  
  	   if(node_flag==true && count==ActualStreamCount)
  	   {   log.info "nodeid :'$nodeid' will get list of all active and deleted streams"
  	   	 log.info "All streams validated active and deleted streams";
  	   	 assert count==ActualStreamCount;
  	   	}
  	   else if(node_flag==false && streamCreateCount==count.toString())
  	   {
           log.info "nodeid :'$nodeid' not able to get deleted streams"
  	   	log.info "All streams validated  expect deleted streams , Total count of streams details in response $ActualStreamCount";
  	   	log.info " Actual Stream count to be validate '$streamCreateCount' ,expected Stream count :$ActualStreamCount "
  	   	log.error " total Streams validated $count";
  	   	 assert streamCreateCount==ActualStreamCount.toString();
  	   	 assert streamCreateCount==count.toString()

  	   }
  	   else{
  	   	  log.info "nodeid :'$nodeid'"
  	   	 log.error "List view don't have all streams in Account $accountList ";
  	   	 assert count==ActualStreamCount;
  	   	}
  
  
}



class StreamObj
{ 
	private String StreamHandleID;
	private String rightstokenidFULL;
	private String Userid;
	private static int keyLs;

	StreamObj(String StreamHandleID,String rightstokenidFULL,String Userid){
		if(keyLs>0)
		   keyLs++;
		   else
		   keyLs=1;

		   this.StreamHandleID = StreamHandleID;
		   this.rightstokenidFULL = rightstokenidFULL;
		   this.Userid = Userid;
		}

		public String getStreamHandleID() {
		return StreamHandleID;
	}
	public void setStreamHandleID(String StreamHandleID) {
		this.StreamHandleID = StreamHandleID;
	}
	public String getRightstokenidFULL() {
		return rightstokenidFULL;
	}
	public void setRightstokenidFULL(String rightstokenidFULL) {
		this.rightstokenidFULL = rightstokenidFULL;
	}
	public String getUserid() {
		return Userid;
	}
	public void setUserid(String Userid) {
		this.Userid = Userid;
	}
	
	
		

}

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Validation of List of Streams get as per Details stored at StreamCreate for all" disabled="true"><con:settings/><con:config><script><![CDATA[def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def commonTC = testRunner.testCase.testSuite.project.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName('StreamCreate');
def delete_streamTC = testRunner.testCase.testSuite.project.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName('StreamDelete');

tC.setPropertyValue("StreamDeleted",delete_streamTC.getPropertyValue("StreamDeleted"));

tC.setPropertyValue("StreamList",commonTC.getPropertyValue("StreamList"));

def TpstreamDeleteList = context.expand( '${#Project#StreamDeleteList}' )
int TpStreamDeleteCount=Integer.parseInt(tP.getPropertyValue("StreamDeleteCount"));

def streamCreateCount = context.expand( '${#Project#StreamCreateCount}' )
tC.setPropertyValue("accountList",commonTC.getPropertyValue("accountList"));

tC.setPropertyValue("streamCreateCount",streamCreateCount);

def xMLbody = context.expand( '${#TestCase#XMLbody}' )

def nodeid = context.expand( '${#TestCase#nodeid}' )
def node_flag=true;
def assertionAccountIdFULL = context.expand( '${#TestCase#assertionAccountIdFULL}' ).toString();
def StreamList=context.expand( '${#TestCase#StreamList}' ).toString();
def accountList=context.expand( '${#TestCase#accountList}' ).toString();
log.info "accountList :$accountList"
log.info "assertionAccountIdFULL :$assertionAccountIdFULL"
def rawRequest = context.expand( '${GET - StreamListView#RawRequest}' )

String[] List=StreamList.split("#",2);

String ExpectedAcct=List[0];

String[] ExpStreamLL=List[1].split(";");

HashMap Expstrm = new HashMap();

ArrayList<StreamObj> StmObj=new ArrayList<StreamObj>();
int j=0;


if(nodeid=="LLASP_CS_1" || nodeid=="DLASP" || nodeid=="DLASP_CS_1" || nodeid=="LLASP_CS_2"|| nodeid=="DLASP_CS_2" || nodeid=="LLASP")
{
  node_flag=true;
}
else
{ node_flag=false  }

while(j<ExpStreamLL.length)
{   
	String[] str= ExpStreamLL[j].split("!");
	    
	  Expstrm.put(str[0], str[1]);
	  String[] val=str[1].split(",");
//	  log.info "handle id"+str[0] +";" +"property"+ str[1]
	  j++;
//	  log.info val.length;
//	  log.info "Rights :"+val[0]+", User:"+val[1]//+",user:"+val[2]
	  StmObj.add(new StreamObj(str[0],val[0],val[1]));
	
}
//log.info "object :"+StmObj.get(1).getStreamHandleID();
def response = context.expand( '${GET - StreamListView#Response}' )
def myXML;
HashMap Actstrm = new HashMap();

int streamDeleteCount = Integer.parseInt(context.expand( '${#Project#StreamDeleteCount}' ))

def streamDeleted = context.expand( '${#Project#StreamDeleteList}' )
String[] DeletedStream=streamDeleted.split(";");



def ActualStreamHandleIDList="";

log.info "##############  $ActualStreamHandleIDList  #########################"


if(response!="")
{
myXML = new XmlSlurper().parseText(response).declareNamespace('dece':tP.getPropertyValue("coordinatorSchema"));;
  
  int ActualStreamCount=myXML.Stream.size();
  log.info "Expected StreamCount $streamCreateCount plus, Deleted Stream Count $TpStreamDeleteCount ,Actual StreamCount $ActualStreamCount"
  if(node_flag==true)
    {  assert ActualStreamCount==Integer.parseInt(streamCreateCount)+TpStreamDeleteCount;} 
  else
    {  assert ActualStreamCount==Integer.parseInt(streamCreateCount);
    	}
  log.info "ActualStreamCount :"+ ActualStreamCount

  log.info "############## ActualStreamHandleIDList:  $ActualStreamHandleIDList"
   int count=0;
  for(int i=0;i<ActualStreamCount;i++)
  {  
  	def ActualStreamHandleID=myXML.Stream[i].@StreamHandleID.text();
  	def ActualRghtsTokenID=myXML.Stream[i].RightsTokenID.text();
  	def ActualRequestingUserID=myXML.Stream[i].RequestingUserID.text();
  	def ActExpirationDateTime=myXML.Stream[i].ExpirationDateTime.text();
  	def ResourceStatus=myXML.Stream[i].ResourceStatus.Current.Value.text(); 
  	def Description=myXML.Stream[i].ResourceStatus.Current.Description.text(); 
  	def CreationDate=myXML.Stream[i].ResourceStatus.Current.@CreationDate.text();
  	
  if(Description=="active")
    { ActualStreamHandleIDList=ActualStreamHandleIDList+ActualStreamHandleID+";"
    }
  	              	         
  	
  	
  	if(i+1<ActualStreamCount)
  	{
  	def Next_CreationDate=myXML.Stream[i+1].ResourceStatus.Current.@CreationDate.text();
  	
  	log.info "################# CreationDate :$CreationDate  , CreationDate of Next stream in listView: $Next_CreationDate ########################### "
  	log.info "check Streams Order , should be as per  Streams’ created datetime value, in descending order"
  	 assert CreationDate > Next_CreationDate ;
  	}


  	
//  	log.info "ResourceStatus"+Description
  	//urn:dece:type:status:active
     
//     <Value>urn:dece:type:status:deleted</Value>
//                <Description>deleted</Description>
       
     
  	 
  	     for(int s=0; s<StmObj.size();s++)
  	     {
  	         if (ActualStreamHandleID==StmObj.get(s).getStreamHandleID())
  	         {
  	         	
  	           count++;
   	          def ExpectUser= StmObj.get(s).getUserid()
  	          def ExpectRght= StmObj.get(s).getRightstokenidFULL() ;

                log.info "For StreamID :'$ActualStreamHandleID' Expected rightId :'$ExpectRght' ,ActualRights:'$ActualRghtsTokenID'"
  	           assert ExpectRght==ActualRghtsTokenID;
  	   	     log.info "For StreamID :'$ActualStreamHandleID' Expected USERID :'$ExpectUser' ,Actual userID:'$ActualRequestingUserID '"  	           
  	   	     assert ExpectUser==ActualRequestingUserID;
  	   	   
  	           }  	

  	           int flag=0;
  	              for(int x=0;x<DeletedStream.length;x++)
  	              {
  	              	  if (ActualStreamHandleID==DeletedStream[x])
  	              	     {  
  	              	     	log.info "For StreamID :'$ActualStreamHandleID' expected ResourceStatus :'urn:dece:type:status:deleted' ,Actual resource status:'$ResourceStatus'"
  	              	        assert ResourceStatus=="urn:dece:type:status:deleted"
  	              	         log.info "For StreamID :'$ActualStreamHandleID' expected Description :'deleted' ,Actual Description :'$Description'"
  	              	         assert Description=="deleted"
  	              	          
  	              	         flag=1;
  	              	         break;
  	              	     	}
  	               	}

  	               if(flag==0)
  	               {
  	               	 log.info "For StreamID :'$ActualStreamHandleID' expected ResourceStatus :'urn:dece:type:status:active' ,Actual resource status:'$ResourceStatus'"
  	               	assert ResourceStatus=="urn:dece:type:status:active"
  	              	      log.info "For StreamID :'$ActualStreamHandleID' expected Description :'active' ,Actual Description :'$Description'"  
  	              	         assert Description=="active"
  	              	         
  	               	}
  	   }
  	   tC.setPropertyValue("ActualStreamHandleIDList",ActualStreamHandleIDList);
     }  
  	   if(node_flag==true && count==ActualStreamCount)
  	   {   log.info "nodeid :'$nodeid' will get list of all active and deleted streams"
  	   	 log.info "All streams validated active and deleted streams";
  	   	 assert count==ActualStreamCount;
  	   	}
  	   else if(node_flag==false && streamCreateCount==count.toString())
  	   {
           log.info "nodeid :'$nodeid' not able to get deleted streams"
  	   	log.info "All streams validated  expect deleted streams , Total count of streams details in response $ActualStreamCount";
  	   	log.info " Actual Stream count to be validate '$streamCreateCount' ,expected Stream count :$ActualStreamCount "
  	   	log.error " total Streams validated $count";
  	   	 assert streamCreateCount==ActualStreamCount.toString();
  	   	 assert streamCreateCount==count.toString()

  	   }
  	   else{
  	   	  log.info "nodeid :'$nodeid'"
  	   	 log.error "List view don't have all streams in Account $accountList ";
  	   	 assert count==ActualStreamCount;
  	   	}
  
  
}



class StreamObj
{ 
	private String StreamHandleID;
	private String rightstokenidFULL;
	private String Userid;
	private static int keyLs;

	StreamObj(String StreamHandleID,String rightstokenidFULL,String Userid){
		if(keyLs>0)
		   keyLs++;
		   else
		   keyLs=1;

		   this.StreamHandleID = StreamHandleID;
		   this.rightstokenidFULL = rightstokenidFULL;
		   this.Userid = Userid;
		}

		public String getStreamHandleID() {
		return StreamHandleID;
	}
	public void setStreamHandleID(String StreamHandleID) {
		this.StreamHandleID = StreamHandleID;
	}
	public String getRightstokenidFULL() {
		return rightstokenidFULL;
	}
	public void setRightstokenidFULL(String rightstokenidFULL) {
		this.rightstokenidFULL = rightstokenidFULL;
	}
	public String getUserid() {
		return Userid;
	}
	public void setUserid(String Userid) {
		this.Userid = Userid;
	}
	
	
		

}

]]></script></con:config></con:testStep><con:properties><con:property><con:name>accountList</con:name><con:value>urn:dece:accountid:org:dece:12CCC9E2591E637FE05305991F0A1A08</con:value></con:property><con:property><con:name>ActiveStreamCountList</con:name><con:value/></con:property><con:property><con:name>ActualStreamHandleIDList</con:name><con:value>urn:dece:streamhandleid:org:dece:EC8787732F0C4FB298DB1C02829ABE04;urn:dece:streamhandleid:org:dece:CC3019C82C774FB2B8088A22F73B8F27;</con:value></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZrb+I4FP0rKPOxCnkSICpIKbRTdttOS2g70y8r49yAO4mTxk54/Pq1A6SE0i6zEhLyzfW55z587HOG4sh0PcYg4yShjWUcUeaW1p6SZ9RNECPMpSgG5nLs+t7tjWs2dRfttiiN0bCn/GMZHWTZlqViywhU23ACFSEjVO2gHYBptB2sh8KVsRxGlHFEeU8xdaOl6vI3MWzXNt2W3ezq1ovSeIKMCWzh0tSVLakl6ylzzlNX0xaLRXNhNZNsppm6bmg/b298PIcYKf3zTUZloKy/9cfNADBEEW7iJNbOtZrPecBcn8wo4nkG21jBZ7F0Te9qwidgZPZNqfZCMKJhUi4HiCaUYBSRNZL1uQU+T4KGF82SjPB5/GkShi6BVVhiFRs2/aZodWonAtUYZgypbI6MLdYYQsiAYmg8jkc95dtpXSu3TjJEWZhkMasv/4wP0AKiJIVAZbu0ttROBzxSqf45YHdEcZQzUsCdHNYUYWDbbgI+Hapxn0FIljeEiQFdMslO26d3sNxUY0hmwPj/adBeczYgTyjKoW8++JPBE5ylTrAcv67I2o+84mz+cjnxeiWBfefSULV2szwYymqINjuefW1odq6Lx2IQXHoouv3967njsYuf/u8zZtK/77yr++mU5ffFOp283mXtx3i5fgLsX3tv7NkqvhfX7cnavtbN7Fcw1Ybpy9WdMRrpT/dnL798Z+jddPHTNXrMv88e79NbeI7GgaP9dfNwMQ/T4vL75Zj4ty1nevPaXXXS8dRyljHJ1o9zX/+pX6HnrvO8fDGd8UX40KvS2eNft+3OvJ9PXwHz3VKOwWjYuBJdQvxrMZMWEqhh6eqmUnwYB8qVvtwltcPNhdyRwBU93KyNVqvdbV/pHaNzYTlD51JvWXqr2zWudM8YGoOdyGxYHFAcJDQkMpaU3M3YfE0Qxy4DGkCmFkkulI4pXyAOEUeNER2LQ5BQBpNEyPPctJG5wmkYrpCxWL/NcbQki1fOlMZdwn/QH5kXcsjqmtyuafIYMEkJSOGWc83EYDMuavGGipxHRrNATQq5kPZMqqxr2p2WxkicRiCZanES5BE003laVkZjm39TRZiVVsJwmmQcReWB0D5N7/DbrhLCJyDSgcmULkB0E47cMfYunw95O0fvoh28lwdEni9RVp4RvGFS//Q+LXJMqlF5T2zHvNrwhwCYHYHQvuCnHZamihgUZC/+7jIX14IQkv6uv2/IaL4186LIy5batqVlAl6TRdV0U/MB50LqVpPkN1CtQtFOulcq4gfBK3udYs7n1OeIQyxGsFEuT3hI+MDkQ2Ikzs7y1FdKLaQoHYclP2YbROIRJBl/+U7CLpZ+wnwv/hZJFrx37AjWXhyRp3hHcEJnciXvlNUnA4ITAUuEGibZPvgxgGPB68aqyBUXLgZqmnP4/EtDylxPQRgnOeWjoVIa9qW35MlXKbjvTh9gSnWvnnvkv997KilHAIN4JDJS4stb25VHgM725Hsb9FDBW4OO7Q0cw2pf1BTc6TjDqig1dv0P5o+WvTodznj/Xw==</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">15575C84AC6137B6E05305991F0A686D</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:15575C84AC6137B6E05305991F0A686D</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%253Adece%253Aaccountid%253Aorg%253Adece%253AEAF5550F8FC462E6E0401F0A059939D6</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">155797F0818B36D6E05305991F0A1D1C</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:155797F0818B36D6E05305991F0A1D1C</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>counter</con:name><con:value>1</con:value></con:property><con:property><con:name>errorID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorReason</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorStatusCode</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_11</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_12</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_13</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_14</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_15</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_16</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_17</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_19</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_20</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_21</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_22</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_23</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_24</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_25</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_26</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_27</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_28</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_29</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_30</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_31</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_32</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_33</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_35</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_36</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_37</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_38</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_39</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_40</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_5</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_6</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_7</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_8</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_11</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_12</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_13</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_14</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_15</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_16</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_17</con:name><con:value>0914</con:value></con:property><con:property><con:name>expectDBCreatedBy_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_19</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_20</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_21</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_22</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_23</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_24</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_25</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_26</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_27</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_28</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_29</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_30</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_31</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_32</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_33</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_35</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_36</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_37</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_38</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_39</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_40</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_5</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_6</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_7</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_8</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 10:06:42</con:value></con:property><con:property><con:name>expectDBCreatedTime_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_11</con:name><con:value>2015/04/27 17:41:04</con:value></con:property><con:property><con:name>expectDBCreatedTime_12</con:name><con:value>2015/04/27 17:41:33</con:value></con:property><con:property><con:name>expectDBCreatedTime_13</con:name><con:value>2015/04/27 17:42:06</con:value></con:property><con:property><con:name>expectDBCreatedTime_14</con:name><con:value>2015/04/27 17:42:35</con:value></con:property><con:property><con:name>expectDBCreatedTime_15</con:name><con:value>2015/04/27 17:43:08</con:value></con:property><con:property><con:name>expectDBCreatedTime_16</con:name><con:value>2015/04/27 17:43:37</con:value></con:property><con:property><con:name>expectDBCreatedTime_17</con:name><con:value>2012/11/21 07:50:08</con:value></con:property><con:property><con:name>expectDBCreatedTime_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_19</con:name><con:value>2012/11/02 17:45:50</con:value></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_20</con:name><con:value>2012/11/02 17:46:22</con:value></con:property><con:property><con:name>expectDBCreatedTime_21</con:name><con:value>2012/11/02 17:46:56</con:value></con:property><con:property><con:name>expectDBCreatedTime_22</con:name><con:value>2012/11/02 17:47:29</con:value></con:property><con:property><con:name>expectDBCreatedTime_23</con:name><con:value>2012/11/02 17:48:01</con:value></con:property><con:property><con:name>expectDBCreatedTime_24</con:name><con:value>2012/11/02 17:48:38</con:value></con:property><con:property><con:name>expectDBCreatedTime_25</con:name><con:value>2012/11/02 17:49:10</con:value></con:property><con:property><con:name>expectDBCreatedTime_26</con:name><con:value>2012/11/02 17:49:45</con:value></con:property><con:property><con:name>expectDBCreatedTime_27</con:name><con:value>2012/11/02 17:50:21</con:value></con:property><con:property><con:name>expectDBCreatedTime_28</con:name><con:value>2012/11/02 17:50:55</con:value></con:property><con:property><con:name>expectDBCreatedTime_29</con:name><con:value>2012/11/02 17:51:31</con:value></con:property><con:property><con:name>expectDBCreatedTime_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_30</con:name><con:value>2012/11/02 17:52:05</con:value></con:property><con:property><con:name>expectDBCreatedTime_31</con:name><con:value>2012/11/02 17:52:41</con:value></con:property><con:property><con:name>expectDBCreatedTime_32</con:name><con:value>2012/11/02 17:53:02</con:value></con:property><con:property><con:name>expectDBCreatedTime_33</con:name><con:value>2012/11/02 17:53:23</con:value></con:property><con:property><con:name>expectDBCreatedTime_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_35</con:name><con:value>2012/11/02 17:32:23</con:value></con:property><con:property><con:name>expectDBCreatedTime_36</con:name><con:value>2012/11/02 17:32:51</con:value></con:property><con:property><con:name>expectDBCreatedTime_37</con:name><con:value>2012/11/02 17:33:18</con:value></con:property><con:property><con:name>expectDBCreatedTime_38</con:name><con:value>2012/11/02 17:33:49</con:value></con:property><con:property><con:name>expectDBCreatedTime_39</con:name><con:value>2012/11/02 17:34:16</con:value></con:property><con:property><con:name>expectDBCreatedTime_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_40</con:name><con:value>2012/11/02 17:34:45</con:value></con:property><con:property><con:name>expectDBCreatedTime_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_5</con:name><con:value>2015/04/27 17:59:37</con:value></con:property><con:property><con:name>expectDBCreatedTime_6</con:name><con:value>2015/04/27 18:00:04</con:value></con:property><con:property><con:name>expectDBCreatedTime_7</con:name><con:value>2015/04/27 18:00:32</con:value></con:property><con:property><con:name>expectDBCreatedTime_8</con:name><con:value>2015/04/27 18:01:01</con:value></con:property><con:property><con:name>expectDBCreatedTime_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_11</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_12</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_13</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_14</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_15</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_19</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_20</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_21</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_22</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_23</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_24</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_25</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_26</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_27</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_28</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_29</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_30</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_35</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_36</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_37</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_38</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_39</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_40</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_5</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_6</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_7</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_8</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 10:06:45</con:value></con:property><con:property><con:name>expectDBDeletedTime_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_11</con:name><con:value>2015/04/27 17:41:18</con:value></con:property><con:property><con:name>expectDBDeletedTime_12</con:name><con:value>2015/04/27 17:41:48</con:value></con:property><con:property><con:name>expectDBDeletedTime_13</con:name><con:value>2015/04/27 17:42:20</con:value></con:property><con:property><con:name>expectDBDeletedTime_14</con:name><con:value>2015/04/27 17:42:52</con:value></con:property><con:property><con:name>expectDBDeletedTime_15</con:name><con:value>2015/04/27 17:43:22</con:value></con:property><con:property><con:name>expectDBDeletedTime_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_19</con:name><con:value>2012/11/02 17:46:00</con:value></con:property><con:property><con:name>expectDBDeletedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_20</con:name><con:value>2012/11/02 17:46:33</con:value></con:property><con:property><con:name>expectDBDeletedTime_21</con:name><con:value>2012/11/02 17:47:05</con:value></con:property><con:property><con:name>expectDBDeletedTime_22</con:name><con:value>2012/11/02 17:47:39</con:value></con:property><con:property><con:name>expectDBDeletedTime_23</con:name><con:value>2012/11/02 17:48:14</con:value></con:property><con:property><con:name>expectDBDeletedTime_24</con:name><con:value>2012/11/02 17:48:48</con:value></con:property><con:property><con:name>expectDBDeletedTime_25</con:name><con:value>2012/11/02 17:49:20</con:value></con:property><con:property><con:name>expectDBDeletedTime_26</con:name><con:value>2012/11/02 17:49:58</con:value></con:property><con:property><con:name>expectDBDeletedTime_27</con:name><con:value>2012/11/02 17:50:32</con:value></con:property><con:property><con:name>expectDBDeletedTime_28</con:name><con:value>2012/11/02 17:51:05</con:value></con:property><con:property><con:name>expectDBDeletedTime_29</con:name><con:value>2012/11/02 17:51:41</con:value></con:property><con:property><con:name>expectDBDeletedTime_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_30</con:name><con:value>2012/11/02 17:52:15</con:value></con:property><con:property><con:name>expectDBDeletedTime_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_35</con:name><con:value>2012/11/02 17:32:34</con:value></con:property><con:property><con:name>expectDBDeletedTime_36</con:name><con:value>2012/11/02 17:33:02</con:value></con:property><con:property><con:name>expectDBDeletedTime_37</con:name><con:value>2012/11/02 17:33:31</con:value></con:property><con:property><con:name>expectDBDeletedTime_38</con:name><con:value>2012/11/02 17:34:00</con:value></con:property><con:property><con:name>expectDBDeletedTime_39</con:name><con:value>2012/11/02 17:34:29</con:value></con:property><con:property><con:name>expectDBDeletedTime_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_40</con:name><con:value>2012/11/02 17:34:56</con:value></con:property><con:property><con:name>expectDBDeletedTime_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_5</con:name><con:value>2015/04/27 17:59:50</con:value></con:property><con:property><con:name>expectDBDeletedTime_6</con:name><con:value>2015/04/27 18:00:16</con:value></con:property><con:property><con:name>expectDBDeletedTime_7</con:name><con:value>2015/04/27 18:00:46</con:value></con:property><con:property><con:name>expectDBDeletedTime_8</con:name><con:value>2015/04/27 18:01:15</con:value></con:property><con:property><con:name>expectDBDeletedTime_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_11</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_12</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_13</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_14</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_15</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_5</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_6</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_7</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_8</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_11</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_12</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_13</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_14</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_15</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_16</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_17</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_19</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_20</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_21</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_22</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_23</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_24</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_25</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_26</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_27</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_28</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_29</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_30</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_31</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_32</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_33</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_35</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_36</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_37</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_38</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_39</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_40</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_5</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_6</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_7</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_8</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken</con:name><con:value>false</con:value></con:property><con:property><con:name>expectGenericRightsToken_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DAD4AC5F1221A1E05305991F0ADA09</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DAD4AC5F1221A1E05305991F0ADA09</con:value></con:property><con:property><con:name>expectRequestingUser_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_11</con:name><con:value>urn:dece:userid:org:dece:14B8D3E968AB4DE4E05305991F0A45B2</con:value></con:property><con:property><con:name>expectRequestingUser_12</con:name><con:value>urn:dece:userid:org:dece:14B8D3E968AB4DE4E05305991F0A45B2</con:value></con:property><con:property><con:name>expectRequestingUser_13</con:name><con:value>urn:dece:userid:org:dece:14B8D3E968AB4DE4E05305991F0A45B2</con:value></con:property><con:property><con:name>expectRequestingUser_14</con:name><con:value>urn:dece:userid:org:dece:14B8D3E968AB4DE4E05305991F0A45B2</con:value></con:property><con:property><con:name>expectRequestingUser_15</con:name><con:value>urn:dece:userid:org:dece:14B8D3E968AB4DE4E05305991F0A45B2</con:value></con:property><con:property><con:name>expectRequestingUser_16</con:name><con:value>urn:dece:userid:org:dece:14B8D3E968AB4DE4E05305991F0A45B2</con:value></con:property><con:property><con:name>expectRequestingUser_17</con:name><con:value>urn:dece:userid:org:dece:9B65694912BBFE26E0401F0A07996B66</con:value></con:property><con:property><con:name>expectRequestingUser_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_19</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_20</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_21</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_22</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_23</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_24</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_25</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_26</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_27</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_28</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_29</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_30</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_31</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_32</con:name><con:value>urn:dece:userid:org:dece:9B7969EE9EA1770CE0401F0A079930AA</con:value></con:property><con:property><con:name>expectRequestingUser_33</con:name><con:value>urn:dece:userid:org:dece:9DD0CB55ED027BCEE0401F0A07993B89</con:value></con:property><con:property><con:name>expectRequestingUser_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_35</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_36</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_37</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_38</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_39</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_40</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_5</con:name><con:value>urn:dece:userid:org:dece:14B906FDFECB51F3E05305991F0AB049</con:value></con:property><con:property><con:name>expectRequestingUser_6</con:name><con:value>urn:dece:userid:org:dece:14B906FDFECB51F3E05305991F0AB049</con:value></con:property><con:property><con:name>expectRequestingUser_7</con:name><con:value>urn:dece:userid:org:dece:14B906FDFECB51F3E05305991F0AB049</con:value></con:property><con:property><con:name>expectRequestingUser_8</con:name><con:value>urn:dece:userid:org:dece:14B906FDFECB51F3E05305991F0AB049</con:value></con:property><con:property><con:name>expectRequestingUser_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectStreamActiveCnt</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectStreamAvailCnt</con:name><con:value>12</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentEncoding</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">chunked</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/iscportalcs1_concat.pem</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>1</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">iscportalcs1</con:value></con:property><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QC_Id</con:name><con:value>79611</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DADB24B5464E35E05307991F0A2FD6</con:value></con:property><con:property><con:name>rightstokenidFULL_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value>DECE Customer Support Test Cases_P1</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamCreateCount</con:name><con:value>2</con:value></con:property><con:property><con:name>StreamDeleted</con:name><con:value>urn:dece:streamhandleid:org:dece:45F7165E85694D35A3A55C6C36D3BEC8;urn:dece:streamhandleid:org:dece:9158905155FE44EAAA6E20A0A1098835;</con:value></con:property><con:property><con:name>streamFlagCreateDateOld</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:2BF526533F3A44ED914098C3B29EEE04</con:value></con:property><con:property><con:name>streamhandleFULL_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_11</con:name><con:value>urn:dece:streamhandleid:org:dece:DAEEDC404B25478D8A427697EEED4296</con:value></con:property><con:property><con:name>streamhandleFULL_12</con:name><con:value>urn:dece:streamhandleid:org:dece:FA2FAFAD35F740ACB661E48622495566</con:value></con:property><con:property><con:name>streamhandleFULL_13</con:name><con:value>urn:dece:streamhandleid:org:dece:D1AE4B1CB1594CB49743B1583C5C1BD0</con:value></con:property><con:property><con:name>streamhandleFULL_14</con:name><con:value>urn:dece:streamhandleid:org:dece:2DDBC1BC4B1F42AB85A442976410A1AA</con:value></con:property><con:property><con:name>streamhandleFULL_15</con:name><con:value>urn:dece:streamhandleid:org:dece:CAF3F40CE81F466D80EBDF23FB9ECBDC</con:value></con:property><con:property><con:name>streamhandleFULL_16</con:name><con:value>urn:dece:streamhandleid:org:dece:96092098DB49464C94292CD1B8483B83</con:value></con:property><con:property><con:name>streamhandleFULL_17</con:name><con:value>urn:dece:streamhandleid:org:dece:CEFD90E77819B152E0401F0A07995384</con:value></con:property><con:property><con:name>streamhandleFULL_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_19</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87AA799E2FD317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_20</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87AA799E34D317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandleFULL_21</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87AA799E39D317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandleFULL_22</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87AA799E3ED317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandleFULL_23</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87BC6F0FEF438EE0401F0A05996C3E</con:value></con:property><con:property><con:name>streamhandleFULL_24</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87BC6F0FF4438EE0401F0A05996C3E</con:value></con:property><con:property><con:name>streamhandleFULL_25</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87BC6F0FF9438EE0401F0A05996C3E</con:value></con:property><con:property><con:name>streamhandleFULL_26</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87BC6F0FFE438EE0401F0A05996C3E</con:value></con:property><con:property><con:name>streamhandleFULL_27</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87C4C234467FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandleFULL_28</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87C4C2344B7FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandleFULL_29</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87C4C234507FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandleFULL_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_30</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87C4C234557FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandleFULL_31</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87C4C2345A7FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandleFULL_32</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87CE58313FD124E0401F0A05990DAA</con:value></con:property><con:property><con:name>streamhandleFULL_33</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87CF9B9FB89952E0401F0A079947F1</con:value></con:property><con:property><con:name>streamhandleFULL_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_35</con:name><con:value>urn:dece:streamhandleid:org:dece:CD877D48FF2B0318E0401F0A079928C0</con:value></con:property><con:property><con:name>streamhandleFULL_36</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87862FA8AE0BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandleFULL_37</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87862FA8B30BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandleFULL_38</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87862FA8B80BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandleFULL_39</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87862FA8BD0BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandleFULL_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_40</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87862FA8C20BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandleFULL_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_5</con:name><con:value>urn:dece:streamhandleid:org:dece:BF6FB3180DD548379B7D6449E9DE0BC0</con:value></con:property><con:property><con:name>streamhandleFULL_6</con:name><con:value>urn:dece:streamhandleid:org:dece:F24333E267B642D9A3816056474F81EC</con:value></con:property><con:property><con:name>streamhandleFULL_7</con:name><con:value>urn:dece:streamhandleid:org:dece:3C161D027D1C4D73A337AC00B1A17A78</con:value></con:property><con:property><con:name>streamhandleFULL_8</con:name><con:value>urn:dece:streamhandleid:org:dece:7F3ACE1411D94A74973BE916C5594B80</con:value></con:property><con:property><con:name>streamhandleFULL_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2BF526533F3A44ED914098C3B29EEE04</con:value></con:property><con:property><con:name>streamhandle_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_11</con:name><con:value>DAEEDC404B25478D8A427697EEED4296</con:value></con:property><con:property><con:name>streamhandle_12</con:name><con:value>FA2FAFAD35F740ACB661E48622495566</con:value></con:property><con:property><con:name>streamhandle_13</con:name><con:value>D1AE4B1CB1594CB49743B1583C5C1BD0</con:value></con:property><con:property><con:name>streamhandle_14</con:name><con:value>2DDBC1BC4B1F42AB85A442976410A1AA</con:value></con:property><con:property><con:name>streamhandle_15</con:name><con:value>CAF3F40CE81F466D80EBDF23FB9ECBDC</con:value></con:property><con:property><con:name>streamhandle_16</con:name><con:value>96092098DB49464C94292CD1B8483B83</con:value></con:property><con:property><con:name>streamhandle_17</con:name><con:value>CEFD90E77819B152E0401F0A07995384</con:value></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_5</con:name><con:value>BF6FB3180DD548379B7D6449E9DE0BC0</con:value></con:property><con:property><con:name>streamhandle_6</con:name><con:value>F24333E267B642D9A3816056474F81EC</con:value></con:property><con:property><con:name>streamhandle_7</con:name><con:value>3C161D027D1C4D73A337AC00B1A17A78</con:value></con:property><con:property><con:name>streamhandle_8</con:name><con:value>7F3ACE1411D94A74973BE916C5594B80</con:value></con:property><con:property><con:name>streamhandle_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamHistoryRows</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>StreamList</con:name><con:value>urn:dece:accountid:org:dece:155207B15C7D6DFBE05307991F0A0655#urn:dece:streamhandleid:org:dece:CC3019C82C774FB2B8088A22F73B8F27!urn:dece:rightstokenid:org:dece:155207B15D866DFBE05307991F0A0655,urn:dece:userid:org:dece:155207B15CD46DFBE05307991F0A0655;urn:dece:streamhandleid:org:dece:EC8787732F0C4FB298DB1C02829ABE04!urn:dece:rightstokenid:org:dece:15524A820D784A18E05307991F0A9C2F,urn:dece:userid:org:dece:155207B15C7F6DFBE05307991F0A0655;</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_65107 - StreamListView - DECECS - Account has single deleted stream and no active streams_FLAKY</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150505_081519</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value>&lt;StreamList ActiveStreamCount="0" AvailableStreams="12" xmlns="http://www.decellc.org/schema/2015/03/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.2/md" xmlns:ns3="http://www.w3.org/2001/04/xmlenc#" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#"/></con:value></con:property><con:property><con:name>errorRespType</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>assertId</con:name><con:value/></con:property><con:property><con:name>accountoid</con:name><con:value>15575C84AC6237B6E05305991F0A686D</con:value></con:property><con:property><con:name>useroid</con:name><con:value>155797F0818C36D6E05305991F0A1D1C</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>15575C84AC6937B6E05305991F0A686D</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value>15575C84AC6937B6E05305991F0A686D</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>49968546-ffaf-4aaa-977f-7220ad4d95f7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>93a38a1a-be31-47c6-bf95-a083445abe1e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>798b6b7c-0636-4c11-b36e-95b14e3e2df4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StreamDelete for TearDown" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


log.info " third test case "

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("streamhandleFULL",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("deletedCreateCount",null);
tC.setPropertyValue("userIndex",null);
tC.setPropertyValue("currentDBTOD",null);
tC.setPropertyValue("streamAccountActiveCount",null);
tC.setPropertyValue("expectErrTypeStreamDelete",null);
tC.setPropertyValue("deletedCreateCount",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);

def TCStreamListView = testRunner.testCase.testSuite.project.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName('StreamListView');
tC.setPropertyValue("ActualStreamHandleIDList",TCStreamListView.getPropertyValue("ActualStreamHandleIDList"));
tC.setPropertyValue("DeleteCount",tP.getPropertyValue("StreamCreateCount"));

log.info "StreamDelete for TearDown staging 1"+context.expand( '${#Project#StreamDeleteList}' )




int DeleteCount=Integer.parseInt(tC.getPropertyValue("DeleteCount"));
def ActualStreamHandleIDList=tC.getPropertyValue("ActualStreamHandleIDList");
String[] StreamHandleIDList =ActualStreamHandleIDList.split(";");

if(DeleteCount>=0)
{
tC.setPropertyValue("streamhandleFULL",StreamHandleIDList[0]);
log.info "Tear down streamDelete 0 : "+StreamHandleIDList[0];
DeleteCount--;
tC.setPropertyValue("DeleteCount",DeleteCount.toString());
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context LLASP"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","llpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("counter",callTC.getPropertyValue("counter"));
tC.setPropertyValue("deletedCreateCount",callTC.getPropertyValue("deletedCreateCount"));
tC.setPropertyValue("streamAccountActiveCount",callTC.getPropertyValue("streamAccountActiveCount"));
tC.setPropertyValue("userIndex",callTC.getPropertyValue("userIndex"));
tC.setPropertyValue("rightstokenidFULL",callTC.getPropertyValue("rightstokenidFULL"));
tC.setPropertyValue("streamhandleFULL",callTC.getPropertyValue("streamhandleFULL"));
tC.setPropertyValue("expectErrTypeStreamDelete",callTC.getPropertyValue("expectErrTypeStreamDelete"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));

if (tC.getPropertyValue("expectErrTypeStreamDelete") == null || tC.getPropertyValue("expectErrTypeStreamDelete") == "null") {
	tC.setPropertyValue("expectErrTypeStreamDelete", "SUCCESS");
}
if (tC.getPropertyValue("deletedCreateCount") == null || tC.getPropertyValue("deletedCreateCount") == "null") {
	tC.setPropertyValue("deletedCreateCount", "0");
}
if (tC.getPropertyValue("streamAccountActiveCount") == null || tC.getPropertyValue("streamAccountActiveCount") == "null") {
	tC.setPropertyValue("streamAccountActiveCount", "0");
}
if (tC.getPropertyValue("userIndex") == null || tC.getPropertyValue("userIndex") == "null") {
	tC.setPropertyValue("userIndex", "0");
}


int DeleteCount=Integer.parseInt(tC.getPropertyValue("DeleteCount"));
def ActualStreamHandleIDList=tC.getPropertyValue("ActualStreamHandleIDList");
String[] StreamHandleIDList =ActualStreamHandleIDList.split(";");
DeleteCount--;
log.info DeleteCount
if(DeleteCount>=0)
{
tC.setPropertyValue("streamhandleFULL",StreamHandleIDList[0]);

	tC.setPropertyValue("DeleteCount",DeleteCount.toString());
}
</script></con:config></con:testStep><con:testStep type="groovy" name="pem set"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("Delete - StreamDelete");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="groovy" name="Capture Current DB sysdate()"><con:settings/><con:config><script>import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Calendar;
import java.text.SimpleDateFormat;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("currentDBTOD",null);

def formatDate(recvDate) {
	try {
		String dateHolder = "";
		Pattern datePattern = Pattern.compile("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})");
		Matcher cdateMatcher = datePattern.matcher(recvDate);
		if (cdateMatcher.find()) {
			dateHolder = cdateMatcher.group(1) + "/" + cdateMatcher.group(2) + "/" +
				cdateMatcher.group(3) + " " + cdateMatcher.group(4) + ":" +
				cdateMatcher.group(5) + ":" + cdateMatcher.group(6);
			log.info "dateHolder[$dateHolder]";	
		}
	} 
	catch (Throwable e) {
		log.info "Matcher Failure!  recvDate[$recvDate] ERROR - " + e;
	} 
	finally {
		return dateHolder;	
	}
}

String recvCdate = tC.getPropertyValue("recvCreationDate").toString();
String sql = "SELECT TO_CHAR(sysdate, 'YYYY/MM/DD HH24:mi:ss') as TOD from dual";
String sqlResultXML = "";
String cDate = "";
String tod = "";

try {
	a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());
	sqlResultXML = a.SelectFromDB(sql,tP.getPropertyValue("targetSystem"));
	log.info "sqlResultXML[$sqlResultXML]";

	if (sqlResultXML.length() > 0) {
		def myXML = new XmlSlurper().parseText(sqlResultXML);
		tod = myXML.ResultSet.Row.TOD;
		log.info "tod[$tod]";
	}

}
catch (Throwable e) {
	log.info "sql[$sql]";
	log.info "dbUtils request failed! - " + e;
	assert 1 == 2;
}
finally {
	if (tod.length() > 0) {
		tC.setPropertyValue("currentDBTOD", tod);
	}
}
</script></con:config></con:testStep><con:testStep type="restrequest" name="Delete - StreamDelete"><con:settings/><con:config service="StreamDelete" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/{SH}" methodName="Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete - StreamDelete" mediaType="application/xml" sslKeystore="LLASP_CS_1_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('Delete - StreamDelete');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}
tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract and Store Stream Deleted for Listview"><con:settings/><con:config><script><![CDATA[def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def TpstreamDeleteList = context.expand( '${#Project#StreamDeleteList}' )
int StreamDeleteCount=Integer.parseInt(tP.getPropertyValue("StreamDeleteCount"));
def httpStatus = context.expand( '${#TestCase#httpStatus}' )
def streamDeleted = context.expand( '${#TestCase#StreamDeleted}' )
def assertionAccountIdFULL = context.expand( '${#TestCase#assertionAccountIdFULL}' )
int StreamCreateCount=Integer.parseInt(tP.getPropertyValue("StreamCreateCount"));

log.info httpStatus
def StreamDeleted = context.expand( '${#TestCase#StreamDeleted}' )

if (httpStatus=="HTTP/1.1 200 OK" ) 
{     def streamhandleFULL = context.expand( '${#TestCase#streamhandleFULL}' )
                
            def accountListDLT = context.expand( '${#Project#accountListDLT}' )
               


                 if(accountListDLT==assertionAccountIdFULL && httpStatus=="HTTP/1.1 200 OK" && StreamCreateCount>0)
                 {
                    StreamDeleted= StreamDeleted+streamhandleFULL +";"
                    
                     TpstreamDeleteList=TpstreamDeleteList+streamhandleFULL +";"
                    tC.setPropertyValue("StreamDeleted",StreamDeleted);
                    tP.setPropertyValue("StreamDeleteList",TpstreamDeleteList);
                    
                    StreamCreateCount--;
  				log.info "StreamCreateCount if ; "+StreamCreateCount;
  				 tP.setPropertyValue("StreamCreateCount", StreamCreateCount.toString());
  				 
  				 StreamDeleteCount++;
  				 log.info "StreamDeleteCount if  : "+StreamDeleteCount;
  				 tP.setPropertyValue("StreamDeleteCount", StreamDeleteCount.toString()); 

                      log.info "StreamDeleteList for if  : "+tP.getPropertyValue("StreamDeleteList");
  				

                 	}
                 	
                 else if(httpStatus=="HTTP/1.1 200 OK" && StreamCreateCount>0)
                 {   
                 	tP.setPropertyValue("accountListDLT",assertionAccountIdFULL);
                 	StreamDeleted=streamhandleFULL +";"
                  
                    tC.setPropertyValue("StreamDeleted",StreamDeleted);
                    
                       TpstreamDeleteList=streamhandleFULL +";"
                    tP.setPropertyValue("StreamDeleteList",TpstreamDeleteList);
                    
                    StreamCreateCount--;
  				log.info "StreamCreateCount for else if  : "+StreamCreateCount;
  				log.info "StreamDeleteList for else if  : "+tP.getPropertyValue("StreamDeleteList");
  				 tP.setPropertyValue("StreamCreateCount", StreamCreateCount.toString());
  				  
  				 tP.setPropertyValue("StreamDeleteCount","1");
  				 
  			}
                 else
                 	{ log.info "else block Script issue"
                 		}

    }
//
//log.info "StreamDeleteList for Normal StreamDelete : "  tP.getPropertyValue("StreamDeleteList")]]></script></con:config></con:testStep><con:testStep type="groovy" name="Extract ERROR table information"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def a = new dbUtils.dbErrors(log,tP.getPropertyValue("targetSystem"));

tC.setPropertyValue("errorStatusCode",null);
tC.setPropertyValue("errorReason",null);
tC.setPropertyValue("errorID",null);

String xmlData = "";
String errId = "";

log.info "expectErrTypeStreamDelete[" + tC.getPropertyValue("expectErrTypeStreamDelete") + "]";

switch (tC.getPropertyValue("expectErrTypeStreamDelete")) {
	case "ADULT_CONTENT_NOT_ALLOWED":
		errId = "Policy:AdultContentNotAllowed";
		break;
	case "ACCOUNT_NOT_ACTIVE":
		errId = "AccountNotActive";
		break;
	case "API_NOT_AUTH":
		errId = "Security:RoleInvalid";
		break;
	case "BLOCKED_ACCESS_UNRATED":
		errId = "Policy:UnratedContentBlocked";
		break;
	case "CID_NOT_ACTIVE":
		errId = "ContentIDNotActive";
		break;
	case "CID_NOT_FOUND":
		errId = "ContentIDNotFound";
		break;
	case "LOGICAL_ASSET_NOT_ACTIVE":
		errId = "AssetLogicalIDNotActive";
		break;
	case "RT_RENT_EXPIRED":
		errId = "RightsTokenRentalExpired";
		break;
	case "RT_NOT_FOUND":
		errId = "RightsTokenNotFound";
		break;
	case "RT_NOT_ACTIVE":
		errId = "RightsTokenNotActive";
		break;
	case "RATING_POLICY":
		errId = "RatingPolicyExists";
		break;
	case "CID_NOT_GRANTED":
	case "STREAM_RIGHTS_NOT_GRANTED":
		errId = "StreamRightsNotGranted";
		break;
	case "STREAM_COUNT_EXCEEDED":
		errId = "AccountStreamCountExceedMaxLimit";
		break;
	case "STREAM_COUNT_EXCEEDED_USER":
		errId = "UserStreamCountExceedMaxLimit";
		break;
	case "STREAM_INVALID_TRANS":
		errId = "StreamTransactionIdInvalid";
		break;
	case "STREAM_ACCOUNTID_MISMATCH":
		errId = "AccountIdUnmatched";
		break;		
	case "STREAM_NICKNAME_TOO_LONG":
		errId = "StreamClientNicknameTooLong";
		break;		
	case "STREAM_WINDOW_NOT_ALLOWED":
		errId = "StreamAssetWindowNotAllowed";
		break;
	case "STREAM_OWNER_MISMATCH":
		errId = "StreamOwnerMismatch";
		break;
	case "STREAM_NOT_FOUND":
		errId = "StreamNotFound";
		break;
	case "STREAM_NOT_ACTIVE":
		errId = "StreamNotActive";
		break;
	case "USER_NOT_MATCH_TOKEN":
		errId = "UserIdUnmatched";
		break;
	case "USER_NOT_ACTIVE":
		errId = "UserNotActive";
		break;
	case "USER_NOT_SUPPLIED":
		errId = "UserNotSpecified";
		break;
}

try {
	xmlData = a.errGetIdInfo(errId);
	
	assert xmlData.trim().length() > 1;

	def myXML = new XmlSlurper().parseText(xmlData);

	log.info myXML.ResultSet.Row.size();
	tC.setPropertyValue("errorStatusCode", myXML.ResultSet.Row[0].STATUS_CODE.toString());
	tC.setPropertyValue("errorReason", myXML.ResultSet.Row[0].REASON.toString());
	tC.setPropertyValue("errorID", myXML.ResultSet.Row[0].ERROR_ID.toString());

	/*
	*  The DB does not contain the complete HTTP status
	*  string, only the code.  Thus, we must adjust.
	*/
	switch (tC.getPropertyValue("errorStatusCode")) {
		case "400":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 400 Bad Request");
			break;
		case "403":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 403 Forbidden");
			break;
		case "404":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 404 Not Found");
			break;
		case "409":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 409 Conflict");
			break;
	}
}
catch (Throwable e) {
	log.info "STEP FAILURE! --- " + e;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url = tP.getPropertyValue("targetHost");
def urnacct = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct = tC.getPropertyValue("nodeaccountid");
def urnnode = tP.getPropertyValue("urnNode");
def urnErr = tP.getPropertyValue("urnError");
def sh = tC.getPropertyValue("streamhandleFULL");
def nodeid = tC.getPropertyValue("nodeid");
def account = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrTypeStreamDelete");
def XMLbody = tC.getPropertyValue("XMLbody");
def nodetype = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = false;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");
String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "https://" + tP.getPropertyValue("targetHostq") + ":" + tP.getPropertyValue("targetPort");
String errorLinkBase = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#";
String orgRequest = url + "/rest/$major/$minor/Account/$account/Stream/$sh";
String expectHTTPstatus = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";
String expected;
String received;
String description;


this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = true;
		httpLocationHeader = false;

	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "Node_status_inactive":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = true;
		errorID = "Bad_Request";
		errorReason = "Node_status_inactive";
		errorLink = "";
	break;

	case "XML_PARSING_ERROR":
		errorLinkFlag = true;
		errorReasonFlag = false;
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID = "urn:dece:errorid:org:dece:SaxParserException";
		errorLink  = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

	case "METHOD_NOT_ALLOWED":
		expectHTTPstatus   = "HTTP/1.1 405 Method Not Allowed";
		XMLbodynull        = false;
		httpLocationHeader = false;

	break;
	
	default:
		errorReasonFlag = true;
		expectHTTPstatus = tC.getPropertyValue("errorStatusCode");
		errorID     = urnErr + tC.getPropertyValue("errorID");
		errorReason = tC.getPropertyValue("errorReason");
		errorLink   = "$errorLinkBase" + tC.getPropertyValue("errorID");
	break;
}

log.info "errorID[$errorID]";
log.info "errorReason[$errorReason]";
log.info "errorLink[$errorLink]";

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;

// Connection
if(tC.getPropertyValue("httpStatus") == "HTTP/1.1 400 Bad Request")
{
	expectHTTPconnection = "close";
}
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert tC.getPropertyValue("httpConnect") == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + tC.getPropertyValue("httpContentLength").toInteger();
if (XMLbodynull) {
	//assert tC.getPropertyValue("httpContentLength").toInteger() == 0;
} else {
	//assert tC.getPropertyValue("httpContentLength").toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert tC.getPropertyValue("httpLocation") != null;

	def a = tC.getPropertyValue("httpLocation");
	def b = a;
	//def urlStr = b.getPath();
	def urlStr = b;

	
	if(tP.getPropertyValue("V2") == tP.getPropertyValue("versionUrlEncode"))
	{
	int lastColon = urlStr.lastIndexOf('%');
	int lastSlash = urlStr.lastIndexOf('/');
	streamid     = urlStr.substring(lastColon + 3);
	streamidFULL = urlStr.substring(lastSlash + 1);

	this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

	tC.setPropertyValue("streamhandle",streamid);
	tC.setPropertyValue("streamhandleFULL",streamidFULL);
	}
	else
	{
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	streamid     = urlStr.substring(lastColon + 1);
	streamidFULL = urlStr.substring(lastSlash + 1);

	this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

	tC.setPropertyValue("streamhandle",streamid);
	tC.setPropertyValue("streamhandleFULL",streamidFULL);
	}
} else {
	assert tC.getPropertyValue("httpLocation") == null;
}

//Content-Type
if(errorRespType == "METHOD_NOT_ALLOWED")
{
	expectHTTPcontenttype = "text/plain; charset=UTF-8"
}
assert tC.getPropertyValue("httpContentType") == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {
	assert XMLbody == null;
}

if(errorRespType != "METHOD_NOT_ALLOWED"){

if (XMLbody != null &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;

		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		if (errorReasonFlag) {
			this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
			assert myXML.Error.Reason.toString() == errorReason;
		} else {
			log.info "ErrorReason IS NOT NULL";
			assert myXML.Error.Reason.toString().length() > 0;
		}

		// ErrorLink
		if (!errorLinkFlag) {
			assert myXML.Error.ErrorLink.size() == 1;
			log.info "ErrorLink:[" + myXML.Error.ErrorLink.toString() + "] Expected[$errorLink]";
			assert myXML.Error.ErrorLink.toString() == errorLink;
		}
	} 
} 
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Return attributes to calling Test Case" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

int deletedCreateCount = tC.getPropertyValue("deletedCreateCount").toInteger()++;
int userIndex = tC.getPropertyValue("userIndex").toInteger();
int streamAccountActiveCount = tC.getPropertyValue("streamAccountActiveCount").toInteger();
String count = tC.getPropertyValue("counter").toString();

if (userIndex > 0) {
	userIndex--;
}
if (streamAccountActiveCount > 0) {
	streamAccountActiveCount--;
}

tC.setPropertyValue("expectDBDeletedBy_" + count,tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBModifiedBy_" + count,tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBStatus_" + count,"deleted");
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBModifiedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("deletedCreateCount",deletedCreateCount.toString());
tC.setPropertyValue("expectDBStatus","deleted");

callTC.setPropertyValue("deletedCreateCount",tC.getPropertyValue("deletedCreateCount"));
callTC.setPropertyValue("streamAccountActiveCount",streamAccountActiveCount.toString());
callTC.setPropertyValue("userIndex",userIndex.toString());
callTC.setPropertyValue("expectDBStatus_" + count,tC.getPropertyValue("expectDBStatus_" + count));
callTC.setPropertyValue("expectDBStatus" + count,tC.getPropertyValue("expectDBStatus"));
callTC.setPropertyValue("expectDBDeletedBy_" + count,tC.getPropertyValue("expectDBDeletedBy_" + count));
callTC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("expectDBDeletedBy"));
callTC.setPropertyValue("expectDBDeletedTime_" + count,tC.getPropertyValue("currentDBTOD"));
callTC.setPropertyValue("expectDBModifiedBy_" + count,tC.getPropertyValue("expectDBModifiedBy_" + count));
callTC.setPropertyValue("expectDBModifiedBy",tC.getPropertyValue("expectDBModifiedBy"));</script></con:config></con:testStep><con:testStep type="groovy" name="DeleteStreams LOOP"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

int DeleteCount=Integer.parseInt(tC.getPropertyValue("DeleteCount"));
def streamhandleFULL
def TCStreamListView = testRunner.testCase.testSuite.project.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName('StreamListView');
tC.setPropertyValue("StreamList",TCStreamListView.getPropertyValue("StreamList"));

def ActualStreamHandleIDList=tC.getPropertyValue("ActualStreamHandleIDList");
String[] StreamHandleIDList =ActualStreamHandleIDList.split(";");
if(DeleteCount>0)
{
	
   log.info "Tear down streamDelete $DeleteCount : "+StreamHandleIDList[DeleteCount];
	tC.setPropertyValue("streamhandleFULL",StreamHandleIDList[DeleteCount]);
	DeleteCount=DeleteCount-1;
	tC.setPropertyValue("DeleteCount",DeleteCount.toString());
	testRunner.gotoStepByName("Capture Current DB sysdate()");
	}</script></con:config></con:testStep><con:properties><con:property><con:name>accountListDLT</con:name><con:value>urn:dece:accountid:org:dece:14B62D494098068CE05305991F0AB9C6</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">15F4F7BB80083287E05307991F0A99D1</con:value></con:property><con:property><con:name>ActualStreamHandleIDList</con:name><con:value>urn:dece:streamhandleid:org:dece:908427E14F3A4682AD645E2E3735675A;</con:value></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">pVZbc9o6EP4rjPuYMbaxzcUTmOESWhpyOUByWl46Ql6Dgi2BJYPJr69kwAFCcmjPk0fr1bffXrS71xxFYclrcg6xIIwW0iik3MukdS2JqccQJ9yjKALuCewNm3d9r1Q0PbS/ohV6nbr2qxr4vuW7vl5GNVt3HAj0CbiWPplgZ2KWAweXy1KV8wR6lAtERV0rmZarm65u2SPL9EqOV6oVbac81grPEHOJLVWKprYjlfK6NhNi4RnGer0uru0ii6dGyTQt48ddf4hnECGtcb31KDMUN3b6uOgDhjDERcwi49o40rn2uTckU4pEEsPOlv+RLdMwa4bU8TmZftHyu+D3aMCyYxtRRglGIXlFKj53IGbMLzTDKYuJmEUfOmGZCliHFOvYcugXzTimdiHQEcOYI53PkLXDGkAAMVAMhadBr659uSxr2dVRjCgPWBzx4+Of8QG6gpAtwNf53q0dtcsBz0SqcQ3Y61EcJpys4F4V6wJh4LtsAr4cqvAYQ0DSPuGyQFOu2BmH9E6O22h0yBS4+JsEHSRnC/KMwgQa/W9G63uFjoS/dPvT1O4xsn4ev06DG1zPCBwqZ4I8tdvjSVHmRbS9MZr9/PnPIBi2KuGPbsDG/uxhGFxFvTYny81XWMZ+Mo+Z3btvlcb33Sf3No2gf/v962g9i8P7YBM9+JOXZvXm5edLpTl1HyfDx/Q5tJft1+moe1v+dz5P0OblmV9NBjTYBA+zyZjGdyys3CH8Leily/S2fxuT4Immwdx6cPi3cdXBV6T7JCo3HOC1XbtP2+Nl6fWunrtzwP9Ytn/zw2TyAljsj6oMep1CV2YJic+bmZIQXw8yVW+hmg8XQIXWULdU7/AS2e6I78kcbs+W23W61Xa13Lkp28127cZ0bdOt1ayu2bRatea+yWxZnFBsMxoQZUu13G3ZfE4QRx4H6kOsr1giOx3XPkHsIIEKPTqQj4BRDiMm27M1d9zKzLKdyBWBNU+WcXXtMNstOVrhnokH+hA3AwHxcVO2j5ryADBZEFCdWxU2l5XNhQzGEq0SEVrFFSpSSGRvj1WblVerrsFJtAhBUTUi5ichFBezRRYag2+/JR1hnkkHN6PsuX3o2Om/fQykjk+UAle+tEDmEc5MF2vvyDuHy2en0B6+mfhEvSwZUBETvGVy/OutTlSB5EXS6TeHj3vSue4f3P3VHv6y/hKg/38BZD7+/uYHho1PQmqcZjO35q/Ige395iFnmOx6jX0tLpFVXBaT1SrJys9xbCOW8IaqA8MsGUPAiezLmxGbAzVyFOOiIZgTPzGey48pJmJGhwIJiORzKWTHC7aeIXC19fTkQ08vXamOTMrQCUjFOVk7lBubYvzpUoc9rPSk+FF+1iz23zJ2BuvAjvRTLj2C0Kk6qQG4+aA4MJOwRLZuFh+CnwM4Z/xYmAc55yJkQU0SAR//KaieXNcQxiyhotfRMsHhnMh4is0CvDeldzDZKMp3U/Lfy6lOshLAIDdaTjJ8tWJ46gnQ6cGs2Rl9N24qrVbVNCt2qVrJxk1lO25qtc7bSzti13gnfi85iNNpjTd+Aw==</con:value></con:property><con:property><con:name>assertId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">15F4F7BB80073287E05307991F0A99D1</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:15F4F7BB80073287E05307991F0A99D1</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A9B66525BAF65015BE0401F0A059942CA</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">15F4F8C86DE63AC9E05305991F0A1B9A</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:15F4F8C86DE63AC9E05305991F0A1B9A</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>counter</con:name><con:value>1</con:value></con:property><con:property><con:name>currentDBTOD</con:name><con:value>2015/05/13 10:33:22</con:value></con:property><con:property><con:name>DeleteCount</con:name><con:value>0</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorID</con:name><con:value/></con:property><con:property><con:name>errorReason</con:name><con:value/></con:property><con:property><con:name>errorStatusCode</con:name><con:value/></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_10</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_11</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_12</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_13</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_14</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_15</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_16</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_17</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_18</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_19</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_20</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_21</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_22</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_23</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_24</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_25</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_26</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_27</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_28</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_29</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_3</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_30</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_31</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_32</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_33</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_34</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_35</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_36</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_37</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_38</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_39</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_4</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_40</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_5</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_6</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_7</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_8</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_9</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_10</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_11</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_12</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_13</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_14</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_15</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_2</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_3</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_4</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_5</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_6</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_7</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_8</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_9</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_10</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_11</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_12</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_13</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_14</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_15</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_16</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_17</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_18</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_19</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_20</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_21</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_22</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_23</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_24</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_25</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_26</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_27</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_28</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_29</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_3</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_30</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_31</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_32</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_33</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_34</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_35</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_36</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_37</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_38</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_39</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_4</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_40</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_5</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_6</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_7</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_8</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_9</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/LLASP_CS_1_concat.pem</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>llpcs</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QC_Id</con:name><con:value>79613</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">15F4F7BB800F3287E05307991F0A99D1</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">15F4F7BB800F3287E05307991F0A99D1</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value>urn:dece:rightstokenid:org:dece:14B8FED933654650E05305991F0AE715</con:value></con:property><con:property><con:name>sName</con:name><con:value>LASP Dynamic Test Cases</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>StreamDeleted</con:name><con:value>urn:dece:streamhandleid:org:dece:708239B9868A41A6934AE8817C4D6ADE;urn:dece:streamhandleid:org:dece:350F7DD418384FEE9D087F69F43EBD52;urn:dece:streamhandleid:org:dece:9C3722A43AD44D8A94F152EF7CA44588;urn:dece:streamhandleid:org:dece:908427E14F3A4682AD645E2E3735675A;</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value>urn:dece:streamhandleid:org:dece:908427E14F3A4682AD645E2E3735675A</con:value></con:property><con:property><con:name>streamhandleFULLEncoded</con:name><con:value>urn%3Adece%3Astreamhandleid%3Aorg%3Adece%3ADBD14C92C6289A31E0401F0A07995885</con:value></con:property><con:property><con:name>StreamList</con:name><con:value>urn:dece:accountid:org:dece:15F4F7BB80073287E05307991F0A99D1#urn:dece:streamhandleid:org:dece:708239B9868A41A6934AE8817C4D6ADE!urn:dece:rightstokenid:org:dece:15F4F8C870673AC9E05305991F0A1B9A,urn:dece:userid:org:dece:15F4F8C86DE63AC9E05305991F0A1B9A;urn:dece:streamhandleid:org:dece:350F7DD418384FEE9D087F69F43EBD52!urn:dece:rightstokenid:org:dece:15F4F7BB82C93287E05307991F0A99D1,urn:dece:userid:org:dece:15F4F8C86DE63AC9E05305991F0A1B9A;urn:dece:streamhandleid:org:dece:9C3722A43AD44D8A94F152EF7CA44588!urn:dece:rightstokenid:org:dece:15F4F7BB83183287E05307991F0A99D1,urn:dece:userid:org:dece:15F4F8C86DE63AC9E05305991F0A1B9A;urn:dece:streamhandleid:org:dece:908427E14F3A4682AD645E2E3735675A!urn:dece:rightstokenid:org:dece:15F4F7BB834F3287E05307991F0A99D1,urn:dece:userid:org:dece:15F4F8C86DE63AC9E05305991F0A1B9A;</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_15102 - StreamListView - DLP and LLASP - Account has 3 deleted streams and 6 active streams - 200 Ok - 6A,3D_FLAKY</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value>stream_list_view_20150513_035715</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">15F4F8C86DE73AC9E05305991F0A1B9A</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>23c70c45-9074-46f6-be91-e188b2607f26</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e836578-c109-4f33-bf13-05a2ad8353a5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>QC_TestPlanDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestLabDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestSet</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Test Configuration/Setup" disabled="true" id="73ad5d41-c1e9-4a3b-86f4-5f4e71e98b35"><con:description/><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Authentication Contexts" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="8465f381-f166-48c6-8c4e-57c192773dc9"><con:settings/><con:testStep type="groovy" name="Data Setup when Stream Count Greater then 12 for Stream Service ON" id="2214e904-4740-44e7-89e2-e04a9da4910e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname);

int StreamCreateCount = Integer.parseInt(tP.getPropertyValue("StreamCreateCount"));

log.info "Stream Count from Project level......:" + StreamCreateCount;
log.info "Not required to create test data...."

def temp_username = callTC.getPropertyValue("username");

log.info "temp_username ... " + temp_username;

                if (temp_username == tP.getPropertyValue("UserName_FAU1"))
                {
                                tC.setPropertyValue("UserName_Property","UserName_FAU1");
                }
                else if (temp_username == tP.getPropertyValue("UserName_FAU2"))
                {
                                tC.setPropertyValue("UserName_Property","UserName_FAU2");
                }
                else if (temp_username == tP.getPropertyValue("UserName_SAU1"))
                {
                                tC.setPropertyValue("UserName_Property","UserName_SAU1");
                }
                else if (temp_username == tP.getPropertyValue("UserName_SAU2"))
                {
                                tC.setPropertyValue("UserName_Property","UserName_SAU2");
                }
                else if (temp_username == tP.getPropertyValue("UserName_BAU1"))
                {
                                tC.setPropertyValue("UserName_Property","UserName_BAU1");
                }
                else if (temp_username == tP.getPropertyValue("UserName_BAU2"))
                {
                                tC.setPropertyValue("UserName_Property","UserName_BAU2");
                }

log.info "UserName property from Test Case ... " + tP.getPropertyValue(tC.getPropertyValue("UserName_Property"));

//run E2E when Stream count reached to 12 in the Account

if(StreamCreateCount>=12)
{     

                StreamCreateCount = 0;

                //update StreamCreateCount to Zero at project level.
                tP.setPropertyValue("StreamCreateCount",StreamCreateCount.toString())
                                
                def myTS = tP.getTestSuiteByName("E_2_E");
                
                def runnerTS = myTS.run( null , false )
                
                assert runnerTS.status == Status.FINISHED;
}

//Setting the desired user from the testcase
tC.setPropertyValue("username",tP.getPropertyValue(tC.getPropertyValue("UserName_Property")));

log.info tC.getPropertyValue("username");

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Properties from calling test case" id="03b2ff2a-e6d2-4ded-a034-0d955f79bff3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC;

tC.setPropertyValue("nodeid", null);
//tC.setPropertyValue("username", null);

try {
	callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname);

	tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
//	tC.setPropertyValue("username",callTC.getPropertyValue("username"));
}
catch(Throwable e) {
	log.info "ERROR during getTestCaseByName - $e";
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Authentication Context" id="4530334c-b489-4d34-8d3a-0a27e068cd6a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
def dbAcct;

int lastColon;
def nodeID = tC.getPropertyValue("nodeid");
String userID = tC.getPropertyValue("username").toString();
String rturn = tP.getPropertyValue("urnRightsLocker").toString();
String useroid = "";
String acctoid = "";
String uuid = "";
String assertionAccountIdFULL = "";
String assertionUserIdFULL = "";
String assertion = "";
String rightslocker;

assert nodeID.length() > 0;
assert userID.length() > 0;

try {
	def a = new dbUtils.dbUser(log,tP.getPropertyValue("targetSystem"));
	useroid = a.userGetUserOID(userID);
	acctoid = a.userGetAccountOIDbyUsername(userID);
} 
catch (Throwable e) {
	log.info "ERROR during dbUtils.dbUser - $e";
}
/*
*  Null calling test cases current Properties
*/
callTC.setPropertyValue("assert",null);
callTC.setPropertyValue("assertId",null);
callTC.setPropertyValue("assertionUUID",null);
callTC.setPropertyValue("assertionAccountIdFULL",null);
callTC.setPropertyValue("assertionAccountId",null);
callTC.setPropertyValue("assertionUserIdFULL",null);
callTC.setPropertyValue("assertionUserId",null);
callTC.setPropertyValue("accountoid",null);
callTC.setPropertyValue("useroid",null);
callTC.setPropertyValue("rightslockerFULL",null);
callTC.setPropertyValue("rightslocker",null);

/*
*  LP2 security contexts
*/

log.info "---- PROCESSING nodeID[$nodeID] userID[$userID]";

	switch (nodeID) {
		case tP.getPropertyValue("nodeoid10"):  // Retailer node
		case tP.getPropertyValue("nodeoid11"):  //Linked LASP CS
		case tP.getPropertyValue("nodeoid12"):  //Dynamic LASP
		case tP.getPropertyValue("nodeoid13"):	//Dynamic LASP CS	
		if (userID == tP.getPropertyValue("UserName_FAU1").toString()) {
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_1").toString();
				assertion = tP.getPropertyValue("SAMLFAU1_1").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDFAU1_1").toString()
			} else if (userID == tP.getPropertyValue("UserName_SAU1").toString()) {
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_1").toString();
				assertion = tP.getPropertyValue("SAMLSAU1_1").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDSAU1_1").toString()
			} else if (userID == tP.getPropertyValue("UserName_BAU1").toString()) {
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_1").toString();
				assertion = tP.getPropertyValue("SAMLBAU1_1").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDBAU1_1").toString()
			} else if (userID == tP.getPropertyValue("UserName_FAU2").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_1").toString();
				assertion = tP.getPropertyValue("SAMLFAU2_1").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDFAU2_1").toString()
			} else if (userID == tP.getPropertyValue("UserName_SAU2").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_1").toString();
				assertion = tP.getPropertyValue("SAMLSAU2_1").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDSAU2_1").toString()
			} else if (userID == tP.getPropertyValue("UserName_BAU2").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_1").toString();
				assertion = tP.getPropertyValue("SAMLBAU2_1").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDBAU2_1").toString()
			} else {
				log.info "ERROR - userID [$userID] supplied is not configured for nodeID[$nodeID]!";
				assert 1 == 2;
			}
			break;

          case tP.getPropertyValue("nodeoid30"): // Coordinator CS		
		if (userID == tP.getPropertyValue("UserName_FAU1").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_3").toString();
				assertion = tP.getPropertyValue("SAMLFAU1_3").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDFAU1_3").toString()
			} else if (userID == tP.getPropertyValue("UserName_SAU1").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_3").toString();
				assertion = tP.getPropertyValue("SAMLSAU1_3").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDSAU1_3").toString()
			} else if (userID == tP.getPropertyValue("UserName_BAU1").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_3").toString();
				assertion = tP.getPropertyValue("SAMLBAU1_3").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDBAU1_3").toString()
			} else if (userID == tP.getPropertyValue("UserName_FAU2").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_3").toString();
				assertion = tP.getPropertyValue("SAMLFAU2_3").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDFAU2_3").toString()
			} else if (userID == tP.getPropertyValue("UserName_SAU2").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_3").toString();
				assertion = tP.getPropertyValue("SAMLSAU2_3").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDSAU2_3").toString()
			} else if (userID == tP.getPropertyValue("UserName_BAU2").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_3").toString();
				assertion = tP.getPropertyValue("SAMLBAU2_3").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDBAU2_3").toString()
			} else {
				log.info "ERROR - userID [$userID] supplied is not configured for nodeID[$nodeID]!";
				assert 1 == 2;
			}
			break;
          
          case tP.getPropertyValue("nodeoid20"):  // dece cs		
          if (userID == tP.getPropertyValue("UserName_FAU1").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_2").toString();
				assertion = tP.getPropertyValue("SAMLFAU1_2").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDFAU1_2").toString()
			} else if (userID == tP.getPropertyValue("UserName_SAU1").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_2").toString();
				assertion = tP.getPropertyValue("SAMLSAU1_2").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDSAU1_2").toString()
			} else if (userID == tP.getPropertyValue("UserName_BAU1").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_2").toString();
				assertion = tP.getPropertyValue("SAMLBAU1_2").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDBAU1_2").toString()
			} else if (userID == tP.getPropertyValue("UserName_FAU2").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_2").toString();
				assertion = tP.getPropertyValue("SAMLFAU2_2").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDFAU2_2").toString()
			} else if (userID == tP.getPropertyValue("UserName_SAU2").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_2").toString();
				assertion = tP.getPropertyValue("SAMLSAU2_2").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDSAU2_2").toString()
			} else if (userID == tP.getPropertyValue("UserName_BAU2").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_2").toString();
				assertion = tP.getPropertyValue("SAMLBAU2_2").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDBAU2_2").toString()
			} else {
				log.info "ERROR - userID [$userID] supplied is not configured for nodeID[$nodeID]!";
				assert 1 == 2;
			}
			break;
		case tP.getPropertyValue("nodeoid40"):
                                                   // Dynamic lasp and his/her customer service node		
		     if (userID == tP.getPropertyValue("UserName_FAU1").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_4").toString();
				assertion = tP.getPropertyValue("SAMLFAU1_4").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDFAU1_4").toString()
			} else if (userID == tP.getPropertyValue("UserName_SAU1").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_4").toString();
				assertion = tP.getPropertyValue("SAMLSAU1_4").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDSAU1_4").toString()
			} else if (userID == tP.getPropertyValue("UserName_BAU1").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_4").toString();
				assertion = tP.getPropertyValue("SAMLBAU1_4").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDBAU1_4").toString()
			} else if (userID == tP.getPropertyValue("UserName_FAU2").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_4").toString();
				assertion = tP.getPropertyValue("SAMLFAU2_4").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDFAU2_4").toString()
			} else if (userID == tP.getPropertyValue("UserName_SAU2").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_4").toString();
				assertion = tP.getPropertyValue("SAMLSAU2_4").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDSAU2_4").toString()
			} else if (userID == tP.getPropertyValue("UserName_BAU2").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_4").toString();
				assertion = tP.getPropertyValue("SAMLBAU2_4").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDBAU2_4").toString()
			} else {
				log.info "ERROR - userID [$userID] supplied is not configured for nodeID[$nodeID]!";
				assert 1 == 2;
			}
			break;
          
          case tP.getPropertyValue("nodeoid50"):
          case tP.getPropertyValue("nodeoid51"):
                                                 // Linked lasp and his/her customer service node		
		if (userID == tP.getPropertyValue("UserName_FAU1").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_5").toString();
				assertion = tP.getPropertyValue("SAMLFAU1_5").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDFAU1_5").toString()
			} else if (userID == tP.getPropertyValue("UserName_SAU1").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_5").toString();
				assertion = tP.getPropertyValue("SAMLSAU1_5").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDSAU1_5").toString()
			} else if (userID == tP.getPropertyValue("UserName_BAU1").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_5").toString();
				assertion = tP.getPropertyValue("SAMLBAU1_5").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDBAU1_5").toString()
			} else if (userID == tP.getPropertyValue("UserName_FAU2").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_5").toString();
				assertion = tP.getPropertyValue("SAMLFAU2_5").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDFAU2_5").toString()
			} else if (userID == tP.getPropertyValue("UserName_SAU2").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_5").toString();
				assertion = tP.getPropertyValue("SAMLSAU2_5").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDSAU2_5").toString()
			} else if (userID == tP.getPropertyValue("UserName_BAU2").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_5").toString();
				assertion = tP.getPropertyValue("SAMLBAU2_5").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDBAU2_5").toString()
			} else {
				log.info "ERROR - userID [$userID] supplied is not configured for nodeID[$nodeID]!";
				assert 1 == 2;
			}
			break;
		default:
			log.info "ERROR - NodeID supplied is not configured!";
			assert 1 == 2;
			break;
	}

log.info "---- PROCESSING COMPLETE";
/*
*  Get the account's rightslocker
*/
try {
	dbAcct = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));
}
catch(Throwable e) {
	log.info "ERROR - dbUtils.dbAccount - $e";
	assert 1 == 2;
}
finally {
	try {
		rightslocker = dbAcct.accountGetRightsLockerId(acctoid);

		log.info "rightslocker: $rightslocker";
	}
	catch(Throwable e) {
		log.info "ERROR - dbAcct.accountGetRightsLockerId - $e";
		assert 1 == 2;
	}
	finally {
		assert rightslocker.length() > 0;
	}
}
/*
*  If we are here then we lived.  Now we will populate all the other 
*  generic values everyone gets.
*/
callTC.setPropertyValue("accountoid",acctoid);
callTC.setPropertyValue("useroid",useroid)
callTC.setPropertyValue("assertId",uuid);
callTC.setPropertyValue("assertionUUID",uuid);
callTC.setPropertyValue("assertionAccountIdFULL",assertionAccountIdFULL);
callTC.setPropertyValue("assertionUserIdFULL",assertionUserIdFULL);
callTC.setPropertyValue("assert",assertion);
callTC.setPropertyValue("rightslocker",rightslocker);
callTC.setPropertyValue("rightslockerFULL", rturn + rightslocker);

lastColon = assertionAccountIdFULL.lastIndexOf(':');
callTC.setPropertyValue("assertionAccountId",assertionAccountIdFULL.substring(lastColon + 1));
lastColon = assertionUserIdFULL.lastIndexOf(':');
callTC.setPropertyValue("assertionUserId",assertionUserIdFULL.substring(lastColon + 1));
if(tP.getPropertyValue("V2") == tP.getPropertyValue("versionUrlEncode"))
{
lastColon = assertionAccountIdFULL.lastIndexOf('%');
callTC.setPropertyValue("assertionAccountId",assertionAccountIdFULL.substring(lastColon + 3));
lastColon = assertionUserIdFULL.lastIndexOf('%');
callTC.setPropertyValue("assertionUserId",assertionUserIdFULL.substring(lastColon + 3));
}
else
{
lastColon = assertionAccountIdFULL.lastIndexOf(':');
callTC.setPropertyValue("assertionAccountId",assertionAccountIdFULL.substring(lastColon + 1));
lastColon = assertionUserIdFULL.lastIndexOf(':');
callTC.setPropertyValue("assertionUserId",assertionUserIdFULL.substring(lastColon + 1));
}</script></con:config></con:testStep><con:testStep type="groovy" name="Establish other account/user related data" disabled="true" id="aead0af1-d6e1-4fe5-9198-c65eb1142488"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

String acctoid = tC.getPropertyValue("accountoid").toString();
String nodeID = tC.getPropertyValue("nodeid").toString();
String userID = tC.getPropertyValue("username").toString();
String rightslocker = "";
String useroid = "";
String accountoid = "";

assert acctoid.length() > 0;

/*
*  useroid
*/
try {
	def a = new dbUtils.dbUser(log,tP.getPropertyValue("targetSystem"));
	useroid = a.userGetUserOID(userID);
	acctoid = a.userGetAccountOIDbyUsername(userID);
} 
catch (Throwable e) {
	log.info "ERROR during dbUtils.dbUser - $e";
}

try {
	def a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));
	rightslocker = a.accountGetRightsLockerId(acctoid);
} 
catch (Throwable e) {
	log.info "ERROR during dbUtils.dbUser - $e";
}
finally {
	callTC.setPropertyValue("rightslocker",null);
	callTC.setPropertyValue("rightslockerFULL",null);
	
	log.info "rightslocker[$rightslocker]";

	callTC.setPropertyValue("rightslocker",rightslocker);
	callTC.setPropertyValue("rightslockerFULL",tP.getPropertyValue("urnRightsLocker").toString() + rightslocker);
}
</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>TC_DECE_86531 - StreamListView - PORTALCS - Standard User can view stream created by Standard User - 200 OK_FLAKY</con:value></con:property><con:property><con:name>sName</con:name><con:value>Portal Customer Support Test Cases_P1_P2</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>username</con:name><con:value>stream_list_view_20150505_081521</con:value></con:property><con:property><con:name>synced</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>81597</con:value></con:property><con:property><con:name>UserName_Property</con:name><con:value>UserName_SAU1</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2214e904-4740-44e7-89e2-e04a9da4910e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Authorization Information Extraction via STS" searchProperties="true" disabled="true" id="0c42cc52-bfe3-41fb-bf06-cbb68272f2d9"><con:settings/><con:testStep type="groovy" name="Establish Properties" id="278801db-0526-4a89-aac6-ee9ddd9ff78d"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("tokentype",null);
tC.setPropertyValue("expectErrTypeSTS",null);
tC.setPropertyValue("expectErrTypeSTSGet",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("nodeaccountid",null);
tC.setPropertyValue("nodeuserid",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("userrowoid",null);
tC.setPropertyValue("accountrowoid",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assert",null);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Calling Test Case Properities" id="dc394a82-0681-4b77-b7fc-d8afd2d1e3dc"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("tokentype",callTC.getPropertyValue("tokentype"));
tC.setPropertyValue("expectErrTypeSTS",callTC.getPropertyValue("expectErrTypeSTS"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Establish whether login is necessary for node/user combo" id="665a9438-74e1-44ad-b043-c3d7cbfbcdec"><con:settings/><con:config><script>def tC    = testRunner.getTestCase();
def tS    = tC.getTestSuite();
def tP    = tS.getProject();
def today = new Date();

String node      = tC.getPropertyValue("nodeid");
String user      = tC.getPropertyValue("username");
String propAssertion  = node + "_" + user + "_assertion";
String propAssertUUID = node + "_" + user + "_assertUUID";
String propUser       = node + "_" + user;
String propAccountoid = node + "_" + user + "_accountoid";
String propUseroid    = node + "_" + user + "_accountoid";
String propassertionAccountId = node + "_" + user + "_assertionAccountId";
String propassertionAccountIdFULL = node + "_" + user + "_assertionAccountIdFULL";
String propassertionUserId = node + "_" + user + "_assertionUserId";
String propassertionUserIdFULL = node + "_" + user + "_assertionUserIdFULL";
String prop      = tC.getPropertyValue(propUser);
String asstuuid  = tC.getPropertyValue(propAssertUUID);
String assbinary = tC.getPropertyValue(propAssertion);
String assAccountId = tC.getPropertyValue(propAssertion);
String assUserId = tC.getPropertyValue(propassertionUserId);
String assAccountIdFULL = tC.getPropertyValue(propassertionAccountIdFULL);
String assUserIdFULL = tC.getPropertyValue(propassertionUserIdFULL);
String tday = String.format('%tY/%&lt;tm/%&lt;td',today);

this.log.info "Date[$tday] - prop[$prop] - asstuuid[$asstuuid] - assbinary[$assbinary]";
this.log.info "propAssertion[$propAssertion] - propAssertUUID[$propAssertUUID] - propUser[$propUser]";

if (prop == null) {
	tC.setPropertyValue("doSTS","true");
	tC.setPropertyValue(propUser,tday);
	tC.setPropertyValue(propAssertUUID,null);
	tC.setPropertyValue(propAssertion,null);
	tC.setPropertyValue(propAccountoid,null);
	tC.setPropertyValue(propUseroid,null);
	tC.setPropertyValue(propassertionAccountId,null);
	tC.setPropertyValue(propassertionUserId,null);
	tC.setPropertyValue(propassertionAccountIdFULL,null);
	tC.setPropertyValue(propassertionUserIdFULL,null);
	} else if (prop != tday) {
	tC.setPropertyValue("doSTS","true");
	tC.setPropertyValue(propUser,tday);
	tC.setPropertyValue(propAssertUUID,null);
	tC.setPropertyValue(propAssertion,null);
	tC.setPropertyValue(propAccountoid,null);
	tC.setPropertyValue(propUseroid,null);
	tC.setPropertyValue(propassertionAccountId,null);
	tC.setPropertyValue(propassertionUserId,null);
	tC.setPropertyValue(propassertionAccountIdFULL,null);
	tC.setPropertyValue(propassertionUserIdFULL,null);
	tC.setPropertyValue("nodeuserid",null);
} else {
	// Check the UUID property
	if (asstuuid == null || asstuuid == "") {
		log.info "assertionUUID is null/empty";
		tC.setPropertyValue("doSTS","true");
		tC.setPropertyValue(propAssertion,null);
		tC.setPropertyValue(propAssertUUID,null);
		tC.setPropertyValue(propAccountoid,null);
		tC.setPropertyValue(propUseroid,null);
		tC.setPropertyValue(propassertionAccountId,null);
		tC.setPropertyValue(propassertionUserId,null);
		tC.setPropertyValue(propassertionAccountIdFULL,null);
		tC.setPropertyValue(propassertionUserIdFULL,null);
	// Check the assertion binary property
	} else if (assbinary == null || assbinary == "") {
		tC.setPropertyValue("doSTS","true");
		tC.setPropertyValue(propAssertion,null);
		tC.setPropertyValue(propAssertUUID,null);
		tC.setPropertyValue(propAccountoid,null);
		tC.setPropertyValue(propUseroid,null);
		tC.setPropertyValue(propassertionAccountId,null);
		tC.setPropertyValue(propassertionUserId,null);
		tC.setPropertyValue(propassertionAccountIdFULL,null);
		tC.setPropertyValue(propassertionUserIdFULL,null);
	} else {
		int lastSlash = assUserIdFULL.lastIndexOf(':');
		
		tC.setPropertyValue("doSTS","false");
		tC.setPropertyValue("assertionUUID",asstuuid);
		tC.setPropertyValue("assert",assbinary);
		tC.setPropertyValue("accountoid",propAccountoid);
		tC.setPropertyValue("useroid", propUseroid);
		tC.setPropertyValue("assertionAccountId",assAccountId);
		tC.setPropertyValue("assertionUserId",assUserId);
		tC.setPropertyValue("assertionAccountIdFULL",assAccountIdFULL);
		tC.setPropertyValue("assertionUserIdFULL",assUserIdFULL);
		tC.setPropertyValue("nodeuserid",assUserIdFULL.substring(lastSlash + 1));
	}
}
log.info "doSTS is " + tC.getPropertyValue("doSTS");
</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS" id="3198d27f-0fc2-4ba2-825c-62b7cf3008be"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

String node = tC.getPropertyValue("nodeid");
String user = tC.getPropertyValue("username");
String propAssertion  = node + "_" + user + "_assertion";
String propAssertUUID = node + "_" + user + "_assertUUID";
String propUser = node + "_" + user;

log.info "propUser[$propUser] - propAssertion[$propAssertion] - propAssertUUID[$propAssertUUID]";

def doSTS = tC.getPropertyValue("doSTS");

if (doSTS == "true") {
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("STS API")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	if (runnerTC.status != Status.FINISHED) {
		tC.setPropertyValue(propUser,null);
		tC.setPropertyValue(propAssertUUID,null);
		tC.setPropertyValue(propAssertion,null);
	} 

	assert runnerTC.status == Status.FINISHED;
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS GET" id="7acf90b9-de4c-4195-868c-8bd248c3b830"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def doSTS = tC.getPropertyValue("doSTS");

String node = tC.getPropertyValue("nodeid");
String user = tC.getPropertyValue("username");
String propassertionAccountId = node + "_" + user + "_assertionAccountId";
String propassertionAccountIdFULL = node + "_" + user + "_assertionAccountIdFULL";
String propassertionUserId = node + "_" + user + "_assertionUserId";
String propassertionUserIdFULL = node + "_" + user + "_assertionUserIdFULL";

if (doSTS == "true") {
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("STS GET API")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
	
	tC.setPropertyValue(propassertionAccountId,tC.getPropertyValue("assertionAccountId"));
	tC.setPropertyValue(propassertionAccountIdFULL,tC.getPropertyValue("assertionAccountIdFULL"));
	tC.setPropertyValue(propassertionUserId,tC.getPropertyValue("assertionUserId"));
	tC.setPropertyValue(propassertionUserIdFULL,tC.getPropertyValue("assertionUserIdFULL"));
} 


</script></con:config></con:testStep><con:testStep type="groovy" name="Store assertionUID for the node/user" id="0efcac8f-c947-4207-a093-a6b82bf30d9e"><con:settings/><con:config><script>def tC    = testRunner.getTestCase();
def tS    = tC.getTestSuite();
def tP    = tS.getProject();
def today = new Date();

String node = tC.getPropertyValue("nodeid");
String user = tC.getPropertyValue("username");
String prop = tC.getPropertyValue(node + "_" + user);
String asst = tC.getPropertyValue(node + "_" + user + "_assertUUID");
String tday = String.format('%tY/%&lt;tm/%&lt;td',today);

this.log.info "Date[$tday] - prop[$prop] - asst[$asst]";

if (prop == tday) {
	tC.setPropertyValue(node + "_" + user + "_assertUUID", tC.getPropertyValue("assertionUUID"));
	tC.setPropertyValue(node + "_" + user + "_assertion", tC.getPropertyValue("assert"));
} else {
	tC.setPropertyValue(node + "_" + user,null)
	tC.setPropertyValue(node + "_" + user + "_assertUUID",null);
	tC.setPropertyValue(node + "_" + user + "_assertion",null);
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract OID level User/Account Information" id="dade0f3f-3ae3-4bfa-ae83-135679ec516e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());


String nodeid = tC.getPropertyValue("nodeid").toString();
String uname = tC.getPropertyValue("username").toString();
String sys = tP.getPropertyValue("targetSystem");
String results = null;
String accountoid = null;
String useroid = null;
String nodeUser = null;
String nodeAccount = null;
String userRowId = null;
String acctRowId = null;
String sql = """select to_char(rawtohex(a.ACCOUNT_OID)) ACCOUNT_OID, to_char(rawtohex(a.USER_OID)) USER_OID, 
to_char(rawtohex(b.NODE_USER_ID)) NODE_USER_ID, to_char(rawtohex(c.NODE_ACCOUNT_ID)) NODE_ACCOUNT_ID, 
to_char(rawtohex(b.ROW_OID)) ROW_OID, to_char(rawtohex(c.ROW_OID)) ROW_OID
from 
   ACCOUNT_USER a, NODE_USER b, NODE_ACCOUNT c
where 
   a.USERNAME = '$uname'
   AND
   a.USER_OID = b.USER_OID
   AND
   a.ACCOUNT_OID = c.ACCOUNT_OID
   AND
   b.NODE_OID = c.NODE_OID 
   AND 
   b.NODE_OID = '$nodeid'""";

results = a.SelectFromDB(sql,sys);
log.info results;

/*
*  If zero length, no need to continue;
*/
assert results.length() > 0;

try {
	def myXML = new XmlSlurper().parseText(results);

	accountoid = myXML.ResultSet.Row[0].ACCOUNT_OID.text();
	useroid = myXML.ResultSet.Row[0].USER_OID.text();
	nodeUser = myXML.ResultSet.Row[0].NODE_USER_ID.text();
	nodeAccount = myXML.ResultSet.Row[0].NODE_ACCOUNT_ID.text();
	userRowId = myXML.ResultSet.Row[0].ROW_OID[0].text();
	acctRowId = myXML.ResultSet.Row[0].ROW_OID[1].text();
}
catch(Throwable e) {
	log.info e; 
	assert 1 == 2;
}
finally {
	log.info "accountoid[$accountoid]";
	log.info "useroid[$useroid]";
	log.info "nodeUser[$nodeUser]";
	log.info "nodeAccount[$nodeAccount]";
	log.info "userRowId[$userRowId]";
	log.info "acctRowId[$acctRowId]";

	tC.setPropertyValue("accountoid", accountoid);
	tC.setPropertyValue("useroid", useroid);
	tC.setPropertyValue("userrowid", userRowId);
	tC.setPropertyValue("accountrowid", acctRowId);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract and Store the ACCOUNT.ACCOUNT_OID lockerId" id="c987f678-4dca-4eb9-97ff-e8c61c491e81"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

String node = tC.getPropertyValue("nodeid");
String user = tC.getPropertyValue("username");
String propAccountoid = node + "_" + user + "_accountoid";
String propUseroid = node + "_" + user + "_useroid";

tC.setPropertyValue(propAccountoid,tC.getPropertyValue("accountoid"));
tC.setPropertyValue(propUseroid,tC.getPropertyValue("useroid"));

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

def x = a.accountGetRightsLockerId(tC.getPropertyValue("accountoid"));

this.log.info "x[$x]";

tC.setPropertyValue("rightslocker",tP.getPropertyValue("urnLocker") + x);


</script></con:config></con:testStep><con:testStep type="groovy" name="Setup base node-level information based on calling Node type" id="2d447862-af7e-47bd-85da-a3a8dc29adb8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def baseNodeType = tC.getPropertyValue("nodetype");

//
//  Establish project-defined properties at the test case
//  level
//
tC.setPropertyValue("cid",tP.getPropertyValue("cid"));
tC.setPropertyValue("alid",tP.getPropertyValue("alid"));
tC.setPropertyValue("deceorgid",tP.getPropertyValue("deceorgid"));

if (tP.getPropertyValue("targetPort") == "443") {
	tC.setPropertyValue("targetURL",tP.getPropertyValue("targetHost"));
	tP.setPropertyValue("targetURL",tP.getPropertyValue("targetHost"));
} else {
	tC.setPropertyValue("targetURL",tP.getPropertyValue("targetHost") + ":" + tP.getPropertyValue("targetPort"));
	tP.setPropertyValue("targetURL",tP.getPropertyValue("targetHost") + ":" + tP.getPropertyValue("targetPort"));
}
//
//  Establish the basic nodeaccountid, nodeuserid, etc.. by 
//  nodetype
tC.setPropertyValue("assert",tC.getPropertyValue("assert"));
tC.setPropertyValue("assertId",tC.getPropertyValue("assertId"));
tC.setPropertyValue("nodeaccountid",tC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("nodeuserid",tC.getPropertyValue("assertionUserId"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Promote variables to calling TestCase" id="6bd018a2-0822-403c-9fbb-3b3ccbac91a5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def toTCName = tC.getPropertyValue("tName");
def toTSName = tC.getPropertyValue("sName")

String usernodeConcat = tC.getPropertyValue("nodeid") + "_" + tC.getPropertyValue("username");
String usernodeUUIDConcat = tC.getPropertyValue("nodeid") + "_" + tC.getPropertyValue("username") +	"_assertUUID";

//
//  Transfer all the properites created in this test case
//  to the calling testcase.
//
if (toTCName != "" &amp;&amp; toTSName != "") {
	def toTC = testRunner.testCase.testSuite.project.getTestSuiteByName(toTSName).getTestCaseByName(toTCName);

	Map testCasePropertiesMap = tC.getProperties();
	Set testCasePropertiesKeySet = testCasePropertiesMap.keySet();
	Iterator iter = testCasePropertiesKeySet.iterator();
	
	while(iter.hasNext()){
		String testCasePropertyKey = (String)iter.next();

		switch (testCasePropertyKey) {
			case "assert":
			case "assertionAccountId":
			case "assertionAccountIdFULL":
			case "assertionUserId":
			case "assertionUserIdFULL":
			case "assertionUUID":
			case "cid":
			case "deceorgid":
			case "rightslocker":
			case "targetURL":
			case "useroid":
			case "accountoid":
			case "nodeaccountid":
			case "nodeuserid":
					toTC.setPropertyValue(testCasePropertyKey,tC.getPropertyValue(testCasePropertyKey));	
			break;
		}
	}
}</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="361828fc-8364-42f8-94b6-596afeee350d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("policyExists",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("policyRequestEntity",null);
tC.setPropertyValue("policyResource",null);
tC.setPropertyValue("policyCreator",null);
tC.setPropertyValue("policyStatus","urn:dece:type:status:active");
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Calling Test Case Properties" id="00c9095c-936d-4c22-a00a-7be19f72c0a5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for EnableManageUserConsent" id="eeff1505-bd1a-4b79-bf82-15f980a0918b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableManageUserConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for Account")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for EnableManageUserConsent if necessary" disabled="true" id="36b7e910-35d5-4830-a8ff-f2aaab6f190c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("policyExists") == "false") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableManageUserConsent");
	tC.setPropertyValue("policyRequestEntity",tP.getPropertyValue("urnNode") + tC.getPropertyValue("nodeid"));
	tC.setPropertyValue("policyResource",tC.getPropertyValue("assertionUserIdFULL"));
	tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for User")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for ManageUserConsent" id="869fb6c4-c3a6-499d-aa32-35a77ec85f40"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "urn:dece:type:policy:ManageUserConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for ManageUserConsent if necessary" id="c65168c9-6726-4787-8bf1-8829b5aff1e0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("policyExists") == "false") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:ManageUserConsent");
	tC.setPropertyValue("policyRequestEntity",tP.getPropertyValue("urnNode") + tC.getPropertyValue("nodeid"));
	tC.setPropertyValue("policyResource",tC.getPropertyValue("assertionUserIdFULL"));
	tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for User")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for EnableUserDataUsageConsentRequired" id="98b5bdc4-7c2b-4cd7-b5bf-efea6df2fd36"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableUserDataUsageConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for Account")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for EnableUserDataUsageConsentRequired if necessary" id="70ad783f-0696-4712-a93b-e40cfff92f7f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("policyExists") == "false") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableUserDataUsageConsent");
	tC.setPropertyValue("policyRequestEntity",tP.getPropertyValue("urnNode") + tC.getPropertyValue("nodeid"));
	tC.setPropertyValue("policyResource",tC.getPropertyValue("assertionUserIdFULL"));
	tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for Account")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for EnableUserDataUsageConsent" id="a5b2337b-8c11-47a2-bf01-c1975e4799f4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableUserDataUsageConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for Account")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for EnableUserDataUsageConsent if necessary" id="3dc2d481-c8c0-4ff0-9ee8-4ec088c937c1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("policyExists") == "false") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableUserDataUsageConsent");
	tC.setPropertyValue("policyRequestEntity",tP.getPropertyValue("urnNode") + tC.getPropertyValue("nodeid"));
	tC.setPropertyValue("policyResource",tC.getPropertyValue("assertionUserIdFULL"));
	tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for Account")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for UserDataUsageConsent" id="e4c1d81b-4005-49e1-9aa5-0d56793b105f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "urn:dece:type:policy:UserDataUsageConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for UserDataUsageConsent if necessary" id="e0a52494-cebc-4ab0-9d7d-8c21d2ec27e1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("policyExists") == "false") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:UserDataUsageConsent");
	tC.setPropertyValue("policyRequestEntity",tP.getPropertyValue("urnNode") + tC.getPropertyValue("nodeid"));
	tC.setPropertyValue("policyResource",tC.getPropertyValue("assertionUserIdFULL"));
	tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties 1" id="a7a8c9bf-bf6c-4d73-8334-deb669d035d5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("policyExists",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("policyRequestEntity",null);
tC.setPropertyValue("policyResource",null);
tC.setPropertyValue("policyCreator",null);
tC.setPropertyValue("returnXMLResult","true");
tC.setPropertyValue("policyStatus","urn:dece:type:status:active");
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties 1 1" id="a6a191ab-8f57-4b50-bbff-f98da86251b7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("policyExists",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("policyRequestEntity",null);
tC.setPropertyValue("policyResource",null);
tC.setPropertyValue("policyCreator",null);
tC.setPropertyValue("returnXMLResult","true");
tC.setPropertyValue("policyStatus","urn:dece:type:status:active");
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Calling Test Case Properties 1" id="e58cbf78-4eb8-40cf-870f-7a71a888847b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
</script></con:config></con:testStep><con:properties><con:property><con:name>0910_pjgorg1full1_accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgOrg1Basic1_accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgOrg1Basic1_assertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgOrg1Basic1_assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgOrg1Basic1_assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgOrg1Basic1_assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgOrg1Basic1_assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgOrg1Basic1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgOrg1Basic1_useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgorg1full1_accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgorg1full1_assertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgorg1full1_assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgorg1full1_assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgorg1full1_assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgorg1full1_assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgorg1full1_useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgOrg1Standard1_accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgOrg1Standard1_assertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgOrg1Standard1_assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgOrg1Standard1_assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgOrg1Standard1_assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgOrg1Standard1_assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgOrg1Standard1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgOrg1Standard1_useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgOrg1Basic1_accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgOrg1Basic1_assertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgOrg1Basic1_assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgOrg1Basic1_assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgOrg1Basic1_assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgOrg1Basic1_assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgOrg1Basic1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgOrg1Basic1_useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full2_accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full2_assertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full2_assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full2_assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full2_assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full2_assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full2_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full2_useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgOrg1Standard1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgOrg1Standard1_accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgOrg1Standard1_assertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgOrg1Standard1_assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgOrg1Standard1_assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgOrg1Standard1_assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgOrg1Standard1_assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgOrg1Standard1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgOrg1Standard1_useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Basic1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Basic1_accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Basic1_assertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Basic1_assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Basic1_assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Basic1_assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Basic1_assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Basic1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Basic1_useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full1_accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full1_assertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full1_assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full1_assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full1_assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full1_assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full1_useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full2_accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full2_assertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full2_assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full2_assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full2_assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full2_assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full2_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full2_useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Standard1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Standard1_accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Standard1_assertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Standard1_assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Standard1_assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Standard1_assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Standard1_assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Standard1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Standard1_useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>20_pjgorg1full1_accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>20_pjgorg1full1_assertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>20_pjgorg1full1_assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>20_pjgorg1full1_assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>20_pjgorg1full1_assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>20_pjgorg1full1_assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>20_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>20_pjgorg1full1_useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full1_accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full1_assertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full1_assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full1_assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full1_assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full1_assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full1_useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full2_accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full2_assertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full2_assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full2_assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full2_assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full2_assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full2_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full2_useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgOrg1Standard1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgOrg1Standard1_accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgOrg1Standard1_assertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgOrg1Standard1_assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgOrg1Standard1_assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgOrg1Standard1_assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgOrg1Standard1_assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgOrg1Standard1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgOrg1Standard1_useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowid</con:name><con:value>9E87C57F4A237E44E0401F0A05992B03</con:value></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>alid</con:name><con:value>urn:dece:alid:file:AGAIN_PATS_CID_DONT_TOUCH_24.txt</con:value></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value>nVdbc6JME773V1jupWU4KPFQSaqGo6ioIB7vEEZAEZABQX79N2A0JpvN7vtdWMk0fXi6+6HpeUHG0aN7ACEYxW7gV2X+tba1mpTxTFONbteCjRaz7TSwyGpYRqtDQ8uwOma3VpURSqDso9jw49caTVJUg2w2qGed7PYYusd0n0iG3NSqCxgh7BmrPJG1anb0fNQro77WksjvBQZyUc83jhD1YrM3A8qohzV7xg1S7e3lCrIMGL05cRz2CMJ8sqAJPc98MoMj8UJ80nmxUG/m2r4RJxF8j2mh19q7bZqmT2nzKYhsgiZJkiC7BNaxkGv/qr1VbsbQkv1dcD1zhh/4rml4bm4UoBQYO4FVBZ4dRG7sHP/gmiIosnDdgJnZMKmW/6tGfAQo0f2jp08gI2Q0kGNQN2ca3MEI+iaszjX5tfbrnxp4NdUjw0e7IDqiL+f/hgj6Z+gFIbQa6JbYDdy/e/ymWm8v0OzJvuklyD3DccGS0DAhqk4juHOzkYsw9yxULbtfzdCNYND8Lx15IR5xYtjEN5XhXRui+P9p12Orrl4WhpfAt1XO7OTNMxHP27y+R/tztHfkiRIoaP1aQnhUvoK6d/r9/JWnd1q9Gx3rk+Nk5p0v3HboU1ta6vSbpOtqgbM5EaLVdtAs1+Y0sEx0Vup5eBLzCdjk4c5OdZWk5sNLOG7WDyOfvJwqyioayiTFWuP+erwddR3QGeWd9YyzjnnbZAly1JH56crq9mfSfsZt2nk2YALdoenp1l4991sTbrJchExbQLsK3x4I0JS68aAlhMt4QQnq60dOjzkUeQ3hpUyy+H/FkF3eiI37gSsGxQ6/nTF8U2SZT3KOA5eZDVKZBTb+7cGYtQ8n5+BK3ZRkgaqKgOdYby+MFHCQADUXWEfhFgsl43IwYO3xAhvqFeBtWEUTUj5d8wtV7Qupo1vS4rKVvGSTC2MFoNKYcxRBExa8pguKAoKrLFP4rZTtlZmSyuqar2AHvJCFuYVzhlLmmrTMKDOGXs+YZLNaYLl4GR3H560ueAqnSNzsJM3kbZNXhQHQ1kuTFhNsm4+OYVBZz9kHo0EI9wCKKYljglzRD6miz+kxrxmlTP8sU2RpoKgo5dQyK6kipIPFPP+oBccquKVCJuhgeq2FqXPimNysBshYMr6igZS3S+OhkFqTGxBFJdMKd63VSEg1QZuPRUWTUwGUMl5IPbSlx85Wcs5mU80GOtg/NoZThaXo4+e+djYvzKliSCLYHheU2dQc02VcYxWk9qaT8up6MAw2MnYzBqrAsirAgEhQpIbrz4IRu2AmodulXTjaicEROlFFoYLh4ZxnZMdtTuzpeMnwu0N7KrnTpmE5hOyZ9L55ALIMrSHlqIalrQmN9938eTKcr6AbrfN4zKjUs9thKtoyma/4wGtb/dV6Pqxna1PVJ9PZfDnNs2x82ndyL+5P2H40Gyi8PRlDOEVmnSANkdU7PMOt+3vMp51GQqYCbIUFQNrbtuBiArP9/ZWEfU0RMHmBwqUSt+SkGZCkuiCzvKruRIeamtIimVNjRRYsD5fpsl5pXmXDsTzuFGksN+GaFsmNDqzSmdoSRFudM/XBCm7UsacvYpCGi51PUaQUqv2dktqmUjDAktMZi98itpLIYG5MwgGZDRfPJHVSLW8w64J5M5vRh2zi2JvLwd4ccFPWD6/OWgfeQn/gmIwptqyouqApoHN93zJFnjc1zzxm4fZoZryOe1YaBzoraKJKzjOeB8OrDOmAztA6F/YKJ5T2FZApBqbFebty0NofuxNdSDBpkwe67Lc0+VeOFRSrfObYiQMq+Mox4coxAexOdbnDU4h55kK0TG1WEk5qezEadENSXY0OFbYuEnbseq2J30n1YX1JXdK2s1eXy67MO1zd362d5jZmSSM3VTg4tCVXO/D+c8u7KCNFZeYu4V3IPTylaFQZy5QvNONcJLpRUmePG/eY580WPT9OZ8lZnhtDRF2c7WnZTffT/jNBRNKFydubsyquAvP9O/J1SN6F1zFKPA7YTxP4tnrNku0emvHtWHyHZb4q4o+jEf+8xhUS12rsStVeWOyCKIZ+XHsrrIoVrpfgRc+1evjLeT13hU6bY9piC9CtttBqCWSLpEQSkEy3S7Nk87brXVF8gcgF/s4tYhXL7PVj/TNA89jbQiOCUe0HT0WdqrKv4e0j8BHUg9caS7FNgeNbZLMldjsAiBSDf60m3QXPTbol1qrjIJ74kwjsYhg9LMjtrwuyBk03dGGxRb/vEijGhTgZ5yT2qKez8eTDBK/ZUbHp9uhWhykLQFjJMTTxAzzdojBA8VPohOUy88c0vj67ZYx1LLdQQAVoFuJuwW9W+tYN8W+Z0d+u/jf3ILHcYmfB5Ysj17wi+fzogw0FDe5UILtU64b5rvpvpl2Kev7dlPgBEfG1GPdI1tl9iHu7mOBdG69j5X0E4aadjKfTU3I+J2Wb2iRJExF2T1AEScygmeB18aIHB+gTdw/Evyzqd8xf4t7ln9ElsePPYvyWHzGjquXx75e0T9a4ADHM4u9knIevZUXwH29uZs8s9LB4iv+kQWR91P0bXw9xMORiQrm+XZyKDfvyub3vb0LPDLBXFw+pIHr0/Z39d7E/C+/lukOJMSu2SQz//KRaTJ/XmmGaQeLHMl8rBY8TscQcX0LY+1D6zU254r7fWTL0xzvLShnNTAcejdpd1/27csMtG29CbIXcEstrLcO3bxzctx8m8DvAPwxh+qch/DmTt9/Ev0seavqV2W//Aw==</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value>9E87C57F4A247E44E0401F0A05992B03</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value>urn:dece:cid:file:AGAIN_PATS_CID_DONT_TOUCH_24.txt</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value>urn:dece:org:org:dece:1</con:value></con:property><con:property><con:name>doSTS</con:name><con:value>true</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>0914</con:value></con:property><con:property><con:name>nodetype</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value>urn:dece:rightslockerid:org:dece:9E7171CFE6FC3F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>sName</con:name><con:value>LASP Dynamic Test Cases</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>targetURL</con:name><con:value>qa.p.uvvu.com:7002</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_36210 - StreamView - DLP - Full user can StreamView Stream created by Standard user</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>username</con:name><con:value>pjgorg1full1</con:value></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowid</con:name><con:value>9E87C57F4A257E44E0401F0A05992B03</con:value></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgfull1org3</con:name><con:value>2011/03/16</con:value></con:property><con:property><con:name>0910_pjgfull1org3_assertUUID</con:name><con:value>b029afa8-ae5c-442b-bfc8-5425a33d1793</con:value></con:property><con:property><con:name>0910_pjgfull1org3_assertion</con:name><con:value>nVdZc6rMFn33V1iex5RhUJwqSVUzSFBRQXB6w6YFFEFpEPTX3waj0SRn+O5DyvRmD6v3XjSrX7C189kOwBhFsRcGZUV8raxotm2trVbVQhys1uvsqrpaw1aVq7OcVavZTLNdq5QVjBOkBDi2gvi1wtIMU6VrVaZh0O0O1+iwrec6TS8r5SmKMMlMXJ7pSjnb+QHuFFVfK0kUdEILe7gTWDuEOzHsTIA66BDPjnWFVHl7uYAsCkZvbhzvOxQFn20Eke/DZxjuqBfqwefFxp2J5wRWnEToo6aNXysfsWmaPqe15zByKJamaYpuU8THxp7zq/JWugYjWwnW4WUtWEEYeNDyvbOVg1JR7IZ2GfhOGHmxu/tNaoZi6Dx1FWWwCpl68KtCfRYo0P1jpgeQEbaq2LWYazIdrVGEAojKpq68Vn790wAvoUZkBXgdRjv8Zf3fEKHgiPxwj+wqvm7sCu7fM/7QrbcXBDtKAP0Ee0c0zFmytyDC5XGE1l428DDhno3LxfTLGb4SDMH/MpEX6h4ngU390BnRcxCO/59x3Y/qkmVq+Ql6A+6yazAyXxOpk+sMlIPlytqCX6tD87WAcO98AXWb9Mf6K09vtPoIQj1jnDH+4J1WM7t+qG/i9WE0OPQPK8m22HG9udk8RbXTacs3665rLk7brs8256u6H6tbtDiZp8MqPotwP8DrkhDBFSdF9Wwyex97x8xlnlrjUdhzdjOB0k7aHjrJELKKegz183Tc8lPNOy6n1lq1a5nQZs0Z47s8ng8aLbtkmLPFeEApW9Gwe9JJbvrw9XNP93vI99VHp2KT+f9zjm6LVmzdFkJ+UKzJ2xmjN1VRxOQsCOA0cUCq8MAhfxsw5J3twd16cjuleaBpXSAKvL+RBirYyoAxJd5VhelUzYQz6PHOcEoCjRLwl7yqS6mYLsSppr1LqWvY8vS0kv1keZaGKsBFsOCqki5NRd2QVBWEF1umiis526gTNVW0hVgiCUQp259tuR0jOfNIozh1wrGLCZcs51Ni754Gu+FxZUi+KqiyMDnIE2VVEzWpB/TFDLLdhMSeB7t9WFqY/F1Qb482AHVTmtQEZ9XYpqphskNRtwqb8WhTFbmnajgVtGJXcklKe1Pz/NkLgVcFeydlkgHGl15AQ+gO6eW8h60ZF6g6SEWnCO5LqT26AlE1Oi0Jl14NpFSXdHPYVXUllUBhE6XUxyt26K5k9whrWtYzwOZ+MIImzboBeR7oR3jiDiVL7oLVbsrAmu5Cj/OseZg6y1YqaoteP1wqJM0QaBLPa4AAokG+NdJ/Hgz4KTfae23WQ4N1N9whNyqpTNjfHs8Z3fJqI2c8nHHietscy964ZtkupfiQ3dS2QFGQ3WdczbL1BaWLgXdujPrmHHnR4hwPOY1peC2upM8Scy6GftN+ny/M/lO2gJoxGk/M2ficZcPDpnX24/cR/x5NeqrojIYIjTF8omiryxstkRMW7xvCp7VOI64EHJUHQN44juQRAvPvmwsJ33VVIuQFqpDKwkyQJ0CWnySFFzVt3XWZMZSnickMVUWyfdKm02Ku+6WlwItkUrQ1W+4XbJdeGsAukml1qetoJvfUm6OlNvSNaQzS/XQdMAwt77X3tZo6UM0ZYCvphCdvEV9KFGBao32PzvrTBs0cNNvvTdrArGUTdpuNXGd52jrLLRnK4u7VWRjAnxp3HFMIxWYlzZB0FbQu71umKmZN9+Eu2692MBMNMrMiODR4Se9qtJmJIuhfbNgAbIYXZ2mjClIRXwKZahFaHFdzFy+CoTcypISQNrmjy2bF0n/lWE6x0iPHDgLQwFeOSReOSWB9eFJaIoO5hrDHs9ThZemgNaeDXntPa/PBtsQ/dSkn9vz6KGilRv9pxpzSprvRZrO2IrrCU7BeuLVVzNPWGWqot23Knr4Vg0bdP6kDVeNMj/JP9AYdUjwoDRUmkGrxuUu1o+SJ3y293flcq7PmbjxJjopp9TFzcleHWTvdjN8bFBXJJ+7cXB617jyEi8t35OsheTNejlHq/oB9OIGv0muSrDYIxtdl/h1WxHKXfByt+M8yLrd4dnVduHb2uRbEMQriylselUu4TkKEnmd3yJfzsm5LTabJCF2pSXO1bgNIdJ1mujSguXabkbjGVetdUHyBKITB2str5WL28rH+M0C466yQFaGo8odMeZ/KSqAT9REGGBnha4VpEXzNmgAYgWZBk6txAkNzRGHV680Gzzcr5WEYj4JRBNYxiu4EcvOrQNYR9PYeylX0h5bAMWnEwTomsc88H63nACVEZke50u2w9RZXNICyk90ekgfkdIv2IY6f9+6+EDO/3cbXZ9cdEx/byx1wDppHZFroB0nPXBF/2xn7o/S/pgeJ7eWahbQvjjx4QfL46JMNOQ1uVKDbDH3FfHP9t9A2w3DfQ6k/IKK+NuNWyT56d3WvFxOitYkcK+4jmAztYD0fnpPjMSnG1KRplopIeoqhaGqCYELk4skItyigbhmofxHqN8xf6t7sj+iS2A0mMXnLd4RR5WL590vaQzRpQIyy+Ceb4JNrWV78jzc32IG5HzGPyU8aRvZn33/IdVeHQM5PKC9w8lWusE+P4/14EzowJFk9ckiF0X3un+J/qv1ovLXrBiUmrFglMfr9k3J++rxWLAjDJIgVsVIY7k/EAnN82qPOp9O3NIXE/bizZPi3d5a5OphAF+2sys3X+7tz1SsGDxGJwl6B5bWSkds3KR44dyfwB8CHQ7hNk2S3Nj3gfftm/m6569xX/r79Dw==</con:value></con:property><con:property><con:name>0910_pjgfull1org3_accountoid</con:name><con:value>990200</con:value></con:property><con:property><con:name>0910_pjgfull1org3_assertionAccountId</con:name><con:value>990200</con:value></con:property><con:property><con:name>0910_pjgfull1org3_assertionUserId</con:name><con:value>9E7171CFE7053F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>0910_pjgfull1org3_assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:990200</con:value></con:property><con:property><con:name>0910_pjgfull1org3_assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:9E7171CFE7053F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>0910_pjgfull1org3_useroid</con:name><con:value>9E7171CFE6FE3F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>0912_pjgfull1org3</con:name><con:value>2011/03/16</con:value></con:property><con:property><con:name>0912_pjgfull1org3_assertUUID</con:name><con:value>96fcd296-05f7-46cd-94a7-424fa059b403</con:value></con:property><con:property><con:name>0912_pjgfull1org3_assertion</con:name><con:value>nVdZc6pME773V1iey1TCJm51kqphEVFBQcTlDmFYFEEZEPTXfwNGY3Jylve7SMVpenmm+5menp/I2od0DyAEkzSIo7osvDa6Ldd26G7rmWTd9nOzZTvP3aaFf9FN1yLZ7qZJMo26jFAG5QilVpS+NmiSop5J5plqGWS3xzI9knqhmu11o27CBGHPWOWFbNSLfRihXhX1tZElUS+2UIB6kbWHqJfavRlQxj2s2bNukBpvP68gq4DJm5+mhx5B2C8OtGEY2i92vCd+Ep90fjqoNwu8yEqzBL7HdNBr4902z/OXnHmJE4+gSZIkyC6BdRwUeD8ab7WbMXTkyI2va96K4iiwrTC4WCUoBaZ+7NRB6MVJkPr737imCIosXT/Dwn62qWb0o0F8BKjQ/aOnTyATZD0j36JuznTowgRGNqzPdfm18eOfCng1NRIrQm6c7NGX9X9DBKMTDOMDdJ7RbWM3cP/u8Ztsvf2Edk+O7DBDwQmqJUsOlg1RfZpANyjGAcLcc1C9qn69QDeCQfu/VOQn8YgTwya+yYwQeBCl/0+5Hkt19WJaYQbf4kFr0Tb78wHpUt0jkZjLVUduJ0uHIF8rCI/KV1D3Sr+vv/L0Tqt3o+VqOFmqypo8nxUY+6lJssakbUFKSPdmbmuetRkQ640hPu2kzLVYuiUom4T21OnJO04X/RWz9TzfiTWWCWqjXdpRXReNm6pKK6w5Z2Yt1eGW+XKxA+cuYZGU4Abz8Zoc0iOtKy8m3HKhkDtiuTDBAPV3KAyX6sEcTpSw9hRARaUKa24jPxi3mI7YfP3Y0+Meyn2N4LnaZPl7yZJdwUqt+4IvG4WLT2cK3xRZFrILz4PzzAO5zAEP/22Bynm7o78LpG5OckDT+kDguXArjhWwkwA1Fzlf4U1TKfgLGHKeamJDowbCNafoYi7kK8HUtIGY+4YjmeeNFGbri6gqAFXGvK+IumgKuiEqCoivskIRNlKxVWZKLmsroYYdCGJxuDhSN4VSEdi0zCozll7N2Gy9NLG8fx7v1RMuRqjwisTPjtJM3jCCJg6BvlrYdD/Dtpfx/hDXVnPuwWh4gFsA+zmJY4KLYuxyxZjTqqBblcz4LFNkaahoKOe1aldSTcyH5vzykQueU3hnLxaiAabXXNgG31fJ9XKIrAUbKTrIBa8yHom5M7kBUTQyr/HXXI3FXBf1udpXdDkXQSUTxDxEG1r1N5J/shmtGBpg+1gYXhMX/Qh/j/STfWaPNUvqg83epGxG9+2ADaxlnHvrTi5oq+EoXsvYjQo0keM0gAGRoNwazj8HxpzJTg5Blw7g2O3He+gnNYWKR7vTpSA7ATPxpuqCFdxdeyoFU8ZyfEIObXrL7IAsQ2dE+Zrl6CtCF6Lg0pqM5ksYJKtLqrIa1Qo6bE1fZPOlEIdtZ7BczUdPxcrWjMl0Nl9ML0WhHredS5gOJtwgmQ0VwZuoEE6R/USQVp8zOgLLrwZbzCdXJyFbA57CASDhoyYGmMDcYHsl4UBXRExeoPC5xC94aQYk6UmUOUHT3L5PTW3JzOaUqsiiE+I0nVdLPayteU7AlSKtxfqwovvk2gBO5Uxrin1Pm7NPwyVca2pomCnID6YbURQpHbSBq+SerZQMcOR8xuFTxNUyGcytyWFIFiOzRVJHzQmHsy6YM8WM3hUT31ufd956h4uyejg6KwOEpvHAMRlTbFHTDFFXQOd63gpFnjN6aO+Lw2ZvF4KBa1YZxwYn6n2NnBeCAEZXGTIAXaDVRdwqvFjZ10ChWJgWp83SR6tIDSaGmGHSZg902W5o8q8cKylW+8yxIw808JVj4pVjInCPT3JHoBDb4g9okXucJB61tjkedg+kthzvatxTn/DSIGxOok5ujJ4W1Dlv+1ttsejKgs8/Re7KZzYpR1oXW4PDXVsK9J0QtZrhWRkrGjsPiPBMbuExR+OaKlORyKSXPtFNsiduvw72lwvTpOf76Sw7yXNrhKizvzkuuvl2OmgRRCKd2Ut7fdL6y9heXe+Rr03yLry2UeKxwX7qwLfRa5ZtttBOb8vyHpaFeh9fjlb65zGulATOs1up9g7lLIhSGKWNt9KqHOF6GR70AqeHb87ruit22jzb7jN8q9UWm02RbJJUnwR4cOnSHMncZr0rii8Q+ThygzJWOcxeL+s/A7T3vQ20Epg0/uCpzFNdjnQ8fcQRgkb82mjRnQ5L9hmG4Zoc0wUtQLGM0OQolqKEbptq1NU4nUSTBLgpTB4G5PbXAVmHdnAIYDlFv88SKMWJOFqnLA2pl5P1EsEMj9lJOen26GaHrRJAONn+YOMPuLslhxilLwf/UA0zv93G12+3HWMdJygVUAmag7ha8JeRnu6xN8S/7Iz+dvS/uQeZE5QzC05fmgT2FcnnTx9sKGlwpwLZpegb5rvqv5lS35oSf0BEfE3GPZJzCh7i3h4meNbG41j1HkG4aEfr5fiSnU5ZVaY2SdJEgt0TFEESM2hneFw8G/EORsTdA/Evg/od85e4d/lndFnqR7MUn/I9ZlS9Wv79kfbJGicghUX6nYwP8bOsDP7Hl5vds0s9LJ7if3mcOB95/8bXQxwMuexQQeSVq3LCPn8u7/tJ6Nkx9hrgJhUnj76/s/8u9mfhPV13KClmxSZL4e+/1Mvu89qwbDvOolQWGpXgsSNWmNPzAfY+lH5xU42472+WAv32zbJUxjPbh3urcdcN/q78HFSFtyG2QkGF5bVR4Nc3Dh55Dx34HeBvmnDzT034807efhH/KnnI6Vdmv/0P</con:value></con:property><con:property><con:name>0912_pjgfull1org3_accountoid</con:name><con:value>990200</con:value></con:property><con:property><con:name>0912_pjgfull1org3_assertionAccountId</con:name><con:value>9E87C57F3C647E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0912_pjgfull1org3_assertionUserId</con:name><con:value>9E87C57F3C667E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0912_pjgfull1org3_assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:9E87C57F3C647E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0912_pjgfull1org3_assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:9E87C57F3C667E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0912_pjgfull1org3_useroid</con:name><con:value>9E7171CFE6FE3F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>0914_pjgfull1org3</con:name><con:value>2011/03/16</con:value></con:property><con:property><con:name>0914_pjgfull1org3_assertUUID</con:name><con:value>bd31a621-99de-45b8-bd3d-da482edad8c9</con:value></con:property><con:property><con:name>0914_pjgfull1org3_assertion</con:name><con:value>nVdbc6JME773V1jupWU4KPFQSaqGo6ioIB7vEEZAEZABQX79N2A0JpvN7vtdWMk0fXi6+6HpeUHG0aN7ACEYxW7gV2X+tba1mpTxTFONbteCjRaz7TSwyGpYRqtDQ8uwOma3VpURSqDso9jw49caTVJUg2w2qGed7PYYusd0n0iG3NSqCxgh7BmrPJG1anb0fNQro77WksjvBQZyUc83jhD1YrM3A8qohzV7xg1S7e3lCrIMGL05cRz2CMJ8sqAJPc98MoMj8UJ80nmxUG/m2r4RJxF8j2mh19q7bZqmT2nzKYhsgiZJkiC7BNaxkGv/qr1VbsbQkv1dcD1zhh/4rml4bm4UoBQYO4FVBZ4dRG7sHP/gmiIosnDdgJnZMKmW/6tGfAQo0f2jp08gI2Q0kGNQN2ca3MEI+iaszjX5tfbrnxp4NdUjw0e7IDqiL+f/hgj6Z+gFIbQa6JbYDdy/e/ymWm8v0OzJvuklyD3DccGS0DAhqk4juHOzkYsw9yxULbtfzdCNYND8Lx15IR5xYtjEN5XhXRui+P9p12Orrl4WhpfAt1XO7OTNMxHP27y+R/tztHfkiRIoaP1aQnhUvoK6d/r9/JWnd1q9Gx3rk+Nk5p0v3HboU1ta6vSbpOtqgbM5EaLVdtAs1+Y0sEx0Vup5eBLzCdjk4c5OdZWk5sNLOG7WDyOfvJwqyioayiTFWuP+erwddR3QGeWd9YyzjnnbZAly1JH56crq9mfSfsZt2nk2YALdoenp1l4991sTbrJchExbQLsK3x4I0JS68aAlhMt4QQnq60dOjzkUeQ3hpUyy+H/FkF3eiI37gSsGxQ6/nTF8U2SZT3KOA5eZDVKZBTb+7cGYtQ8n5+BK3ZRkgaqKgOdYby+MFHCQADUXWEfhFgsl43IwYO3xAhvqFeBtWEUTUj5d8wtV7Qupo1vS4rKVvGSTC2MFoNKYcxRBExa8pguKAoKrLFP4rZTtlZmSyuqar2AHvJCFuYVzhlLmmrTMKDOGXs+YZLNaYLl4GR3H560ueAqnSNzsJM3kbZNXhQHQ1kuTFhNsm4+OYVBZz9kHo0EI9wCKKYljglzRD6miz+kxrxmlTP8sU2RpoKgo5dQyK6kipIPFPP+oBccquKVCJuhgeq2FqXPimNysBshYMr6igZS3S+OhkFqTGxBFJdMKd63VSEg1QZuPRUWTUwGUMl5IPbSlx85Wcs5mU80GOtg/NoZThaXo4+e+djYvzKliSCLYHheU2dQc02VcYxWk9qaT8up6MAw2MnYzBqrAsirAgEhQpIbrz4IRu2AmodulXTjaicEROlFFoYLh4ZxnZMdtTuzpeMnwu0N7KrnTpmE5hOyZ9L55ALIMrSHlqIalrQmN9938eTKcr6AbrfN4zKjUs9thKtoyma/4wGtb/dV6Pqxna1PVJ9PZfDnNs2x82ndyL+5P2H40Gyi8PRlDOEVmnSANkdU7PMOt+3vMp51GQqYCbIUFQNrbtuBiArP9/ZWEfU0RMHmBwqUSt+SkGZCkuiCzvKruRIeamtIimVNjRRYsD5fpsl5pXmXDsTzuFGksN+GaFsmNDqzSmdoSRFudM/XBCm7UsacvYpCGi51PUaQUqv2dktqmUjDAktMZi98itpLIYG5MwgGZDRfPJHVSLW8w64J5M5vRh2zi2JvLwd4ccFPWD6/OWgfeQn/gmIwptqyouqApoHN93zJFnjc1zzxm4fZoZryOe1YaBzoraKJKzjOeB8OrDOmAztA6F/YKJ5T2FZApBqbFebty0NofuxNdSDBpkwe67Lc0+VeOFRSrfObYiQMq+Mox4coxAexOdbnDU4h55kK0TG1WEk5qezEadENSXY0OFbYuEnbseq2J30n1YX1JXdK2s1eXy67MO1zd362d5jZmSSM3VTg4tCVXO/D+c8u7KCNFZeYu4V3IPTylaFQZy5QvNONcJLpRUmePG/eY580WPT9OZ8lZnhtDRF2c7WnZTffT/jNBRNKFydubsyquAvP9O/J1SN6F1zFKPA7YTxP4tnrNku0emvHtWHyHZb4q4o+jEf+8xhUS12rsStVeWOyCKIZ+XHsrrIoVrpfgRc+1evjLeT13hU6bY9piC9CtttBqCWSLpEQSkEy3S7Nk87brXVF8gcgF/s4tYhXL7PVj/TNA89jbQiOCUe0HT0WdqrKv4e0j8BHUg9caS7FNgeNbZLMldjsAiBSDf60m3QXPTbol1qrjIJ74kwjsYhg9LMjtrwuyBk03dGGxRb/vEijGhTgZ5yT2qKez8eTDBK/ZUbHp9uhWhykLQFjJMTTxAzzdojBA8VPohOUy88c0vj67ZYx1LLdQQAVoFuJuwW9W+tYN8W+Z0d+u/jf3ILHcYmfB5Ysj17wi+fzogw0FDe5UILtU64b5rvpvpl2Kev7dlPgBEfG1GPdI1tl9iHu7mOBdG69j5X0E4aadjKfTU3I+J2Wb2iRJExF2T1AEScygmeB18aIHB+gTdw/Evyzqd8xf4t7ln9ElsePPYvyWHzGjquXx75e0T9a4ADHM4u9knIevZUXwH29uZs8s9LB4iv+kQWR91P0bXw9xMORiQrm+XZyKDfvyub3vb0LPDLBXFw+pIHr0/Z39d7E/C+/lukOJMSu2SQz//KRaTJ/XmmGaQeLHMl8rBY8TscQcX0LY+1D6zU254r7fWTL0xzvLShnNTAcejdpd1/27csMtG29CbIXcEstrLcO3bxzctx8m8DvAPwxh+qch/DmTt9/Ev0seavqV2W//Aw==</con:value></con:property><con:property><con:name>0914_pjgfull1org3_accountoid</con:name><con:value>990200</con:value></con:property><con:property><con:name>0914_pjgfull1org3_assertionAccountId</con:name><con:value>9E87C57F4A227E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0914_pjgfull1org3_assertionUserId</con:name><con:value>9E87C57F4A247E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0914_pjgfull1org3_assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:9E87C57F4A227E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0914_pjgfull1org3_assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:9E87C57F4A247E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0914_pjgfull1org3_useroid</con:name><con:value>9E7171CFE6FE3F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>20_pjgfull1org3</con:name><con:value>2011/03/16</con:value></con:property><con:property><con:name>20_pjgfull1org3_assertUUID</con:name><con:value>6ef3bd26-e62b-4433-a8db-845f39dd7130</con:value></con:property><con:property><con:name>20_pjgfull1org3_assertion</con:name><con:value>nVdZc6rMFn33V1ieR8swOVeSqmYQUVEZHPANoQUUAWkQ9NffRqMx4znfrUoq6c0eVu+9aFY/I3Pv012AEIwTLwzKEv9SacINs7bpZg026XWtXmeYmtm217V2vbFhOrbdohiyUpYQSqEUoMQMkpcKTVJUjWRqVFOnWl0S/zBPnRa9qpTnMEY4M3Z5wlH53g9Q91L1pZLGQTc0kYe6gbmHqJtYXQ3Ioy727Jo3SJXX5yvIS8H41U2SqEsQ1pMNLej71pMV7oln4oPPs426mucEZpLG8K2mjV4qb7FZlj1lzFMYOwRNkiRBdgjsYyPP+VN5Ld2CoS0Fm/C65swgDDzL9L2zWYCSYeKGdhn4Thh7ibv/ITVFUGSRugZzq2ZR9eBPhXgvcEH3j5k+gIyRWUOuSd2SqXADYxhYsDxTpZfKn38a4DVUj80AbcJ4jz6t/xsiGByhH0bQrqHbxm7g/j3jN916fYZWVwosP0XeEY4LlkSmBVF5GsONl488hLlno/Jl+uUc3QgGrf8ykWfiESeGTXzTGd5zIEr+n3E9juqaZW76KXyt8muTjD1L0QSJMw6SMbFZu58YOh7iBcKj8xXUfdJv6888vdPqLUjqcVxv3z+PsxWxVb2JthNURk6EaGNaq160pVR1Zc2cOr+dHI1mpo4U5mBMxGxucmKLZIhwul5P2w4BdESUxDNrEHSWruoj/ugw51FTQ/udKFqt+XTsu6IQMWSQdhZzlqfYiPIDg1xXNyiqZqtViIbTbVbVo11LIU/+umTRIyvwuD7U0glyT/Z8NHt539PjHop9DeHpssni/2WD7PBmYt4XXHFQbPDbmcBXWZL49Mxx4KQ5IJNY4ODfLRizzu7g7jyxk5EsUJQe4DnW3wojGexEQM0E1pW5+VzOuTMYsM54jgP1EvBXrKwKGZ8Z/FxR+kLm6rY4P61FP12dhbEM0CWYc2VBFea8qguyDMKrLZf5tZhvZU3OJMXgSzgBL+TR2RY7CRRzz6Klhqw1aENrpKvlHNt7p9F+fFzrgi9zsshpB1GT1gyvCAOgGguL7qU49jzaR2HJmLEPQYMIbgHsZSSuCc6yvstkfUaPedW82PSPNlkSB7KCMk657EosCdlgPju/94JjZc7eC7mgg+m1F5bO9cbkajlA5qIRyCrIeOcSPBQye3IDIitkVuKuvRoJmSqos3FPVqVMABcbL2Q+WtNjdy26R4tR8oEOto+D4RRh0Qvw80A9WqfGoWSKPbDezymLUV3La3jmMsycVTvjFWMwDFcSTjMGisCyCsCASFBsDfefBSN23phEXof24GjTC/fQjUsyFQ53x3NOtj1m4kzHiwa/2bWmojdlTNslJN+it8wOSBK0h5SrmLZqECofeOfmZDhbQi82zsm4oVBNr90oqYt0tuRDv2X3l8ZsWM0NS9EnU222mJ7zfHzYts9+0p+w/VgbyLwzGUM4RVaVIM0eq7f5Bmf0t5hPG5WEjRJwZBYAces4gocJzPa3VxL2VVnA5AUyl4ncghM1IIpVQWJ5Rdn0XGpqifN0Ro1lSbB93KaTsVT90opjeTwp0lysIoPukSsd2JdkSl3oOcqsUR0s4UoZ+/o8AVk03wQURYqR0t/ImWPJBQNsKdNY/BaxpVQCM3MSDch8OG+S1EGx/YHWATMm1+hdPnGd1WnnrHZ4KMbDq2PowJ/rDxyTMMUWJUUXVBm0r+9bLkszRvWtfR6t91bO63hml+BQZwW1p5CznOfB8GpDOqBzZJyFrcwJl/gSyGUT0+K4XrrICMbeRBdSTNr0gS7bNU3+lWMFxUofOXbggAI+c0y4ckwAm0NVavMUajS5CC0yhxWFg9KajwadiFSWo12JrfYIJ/H8+iRoZ/qwuqBOWcvdKotFR+JdrhpsDJdZJyxpni0FDnYt0VN3fNCs+yd5JCuNmUf4J3ILDxkalcYSFQhMcu4RnTitsvuVtz+fmTo920+19CjNzCGiTu76sOhk22m/SRCxeGqcW6uj0luGlnH9jnw+JO/G6zFKPB6wH07gm/TS0vUWWsltWXyHJb7cwx9HM/ldxhUWz65tLq7dqNCCKIFBUnktogoJ102x0PPsLv5yXtcdod1m+BbTphkOsO22QNZJqkcCstHpNJle46b1rig+QeTCYOMVtQoxe/1Y/w7Q2nfX0IxhXPklU9GnshSoWH2EAYJ6+FJhWKrDUvU24JtMu8222ny73uo0hQ7Dgw7FcpXyOEwmwSQGmwTGDwK59Vkgq9DyIg8WKrrQEgiLiQLIE8zNfeTDi6TwQ8cLiOlE0y9y5Uegn5/d9oR9bK9wQAUsFuJ5wC+ivdlt3DB9wU5/K+5v6UFqe4UqwQ1KsKC5Ivn46H3exaDvw6bJG+K74z8GUl8DiV/QEJ8bca9jH72HqrdrB1bSWGy93iZyMJ8OT+nxmBbXjW6LJGkixukJiiAJDVopFoMnPdzBgLhnIP5Fht8xf6p7t39ElyZuoCX4Hd5jvpQvy79fwT5E4wYkME++s3E+vnQVxX+9l1ldq/DD5in+k4Wx/d73b3I91MGQi/PHC5xiVejn08fhBjDFe4m7VoizevgICuPH3N/Ff1f7o/HerjuUBLNinSbw5yfl4mx5qZiWFaZBIvGVi+HxvLtgTk4R7L47fUlzEbBvN5Ic/XgjWcojzXLh3qzcfb2/O9e8y+AtiKOQd8HyUsnx3RoXD5yH8/UN4A9HLPjtiP24k9cv5q+Wh55+Zvbr/wA=</con:value></con:property><con:property><con:name>20_pjgfull1org3_accountoid</con:name><con:value>990200</con:value></con:property><con:property><con:name>20_pjgfull1org3_assertionAccountId</con:name><con:value>9E883D73823AAB88E0401F0A059963F5</con:value></con:property><con:property><con:name>20_pjgfull1org3_assertionUserId</con:name><con:value>9E883D73823CAB88E0401F0A059963F5</con:value></con:property><con:property><con:name>20_pjgfull1org3_assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:9E883D73823AAB88E0401F0A059963F5</con:value></con:property><con:property><con:name>20_pjgfull1org3_assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:9E883D73823CAB88E0401F0A059963F5</con:value></con:property><con:property><con:name>20_pjgfull1org3_useroid</con:name><con:value>9E7171CFE6FE3F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>0914_pjgfull2org3</con:name><con:value>2011/03/16</con:value></con:property><con:property><con:name>0914_pjgfull2org3_assertUUID</con:name><con:value>fa6ebc29-e0dd-4830-9e21-398738245e25</con:value></con:property><con:property><con:name>0914_pjgfull2org3_assertion</con:name><con:value>nVdbc6JME773V1i+l1bCSUSsTaqGgwQjKIjHOxxGQBGQg6C//hswuiab3Xff7yJlpunDM93P9PT8SO1DQPdBmqIk86OwqUovra3dRRtI80+IdJynTo8hn3hEU08M3+OYHt1hEc22mmqa5kgN08wOs5cWTVLUE8k8UV2L5Ptsr89SzzTLrFvNOUpS7BmrPJOtZnkIwrRfR31p5UnYj+zUT/uhfUBpP4P9KdBGfazZt2+QWq8/riDrgMmrl2VxnyDgs4MgCgL4DKMD8YP4pPPDSftT3w3tLE/QR0wnfWl92BZF8Vwwz1HiEjRJkgTJE1jHSX33n9Zr42aMHDXcRte1aIdR6EM78C92BUpDmRc5TRC4UeJn3uE3rimCIivXT6iET5DqhP+0iJ8BanR/6ekTyCS1n1LPpm7OTLRFCQohas5M9aX1z18V8GpqJXaYbqPkkH5Z/zdEKDyhIIqR85TeNnYD9/cev8nW6w8E+2oIgzz1T0ivWBLbEKXNSYK2fjnyU8w9J23W1W+W6Y1gCP6XivwgHnFi2MQ3mZF8F6XZ/1Oux1JdvcztIEev7LgsQGdidss2sYP0fK1lOsrnvZOuvdQQHpWvoO6V/lh/5emdVh9GznDjMu+TnHGmC2vDdZJ2aJYWNJK3cbFaoyS/ZO0jF6zbDC/Ml/neg/poPqfH55nOoYJzHR/KQbYYcyPbaqxpfuOTsUGHu9NZkmekfpIjl8kgN4oxrRQ6KKYCGaZnl5XbcoJsQxxBarALu0c2RTTJe/HwIPg74TyKGmqsQ8paLocHbit1g7bnGy8/9/S4h2pf7+hcb7L6f8mSvGRn9n0hVo1ii09nhl41VZXyiyiC89QFhSoAF//tgC64+6O39xW+IAVgGAMgiUKwk0ca2CuAmsmCp4nzuVaKFzAUXH2ODa0GCNaCZsqFVKykuWG8yYVnOcr8vFGCfH2RdQ2ktbHoabIpzyXTkjUNRFdZqUkbpdxpU61QjZXUwA4kuYwvjsJnSCl9SKusNmXp1ZTN18s5lg/Oo4N+2lhyoImaIk6PylTdMJIhD4G5WkB6kGPby+gQR43VTHgwGsZoB9CgIHFMcNGsfaFZM1qXTLuWWZ9lmqoMNSMtRKPeldKQi+F8dvmZC1HQROcgl7IFJtdcQEsc6OR6OUztBRtqJigktzZ+lwtnfAOiGWTREK+5GsmFKZszfaCZaiGDWibJRZBuaN3bKN4JMkY5tMDusTCiIS8GIf4emid4Zo8NWxmAzWFOQcb0oM/69jIq3HWvkIzV8D1aq9iNDgxZEAyAAZGg2hrOvwBGwpwdxz5P+2i0HUQH5CUNjYre96dLSfZ8ZuxO9AUrbffcRPEnjO14hBpAesfsgaoi553yDNsxV4Qphf6lO36fLZGfrC6ZzhpU1++xDXORz5ZSFHDO23I1e2+XK2hY48l0tphcylI/7nqXIHsbC2/JdKhJ7lhHaJLCNkHaA8HqSay4etthPm1NErEN4GoCAMrOdWUfE1h4211J+GZqMiYv0MRCEReiMgWK0pZVQTKM7cCjJlCZ5zNK11TZCXCazqulGTTWoiDhSpH2Yh2v6AG5toBTOzM68sA1Zmx7uERrQw+seQaKeL4NKYpUYuNtqxUu1CoGOCo+yPgUCY1cBTN7HA/J8n3eJamj4QTDKQ9mTDml9+XYc9fnvbve46KsHo7OygLB3HrgmIoptmgYlmxqoHc9b6WmzhgzgIcy3hxgKVm4ZrVxZAmyOTDIWSlJ4P0qSy1Al+nqIu80Ua7tG6DUbEyL02bppatQ98eWnGPS5g902W1o8l85VlGs8ZljRxEY4CvH5CvHZLA9ttWeRKVsV4zTReEKinw0uPloyMeksRztG0J7QLiZH3TGYa+w3tsL6lxw3s5YLHhV8sR2uF15zCYTSPsCDTTcc4pv7qWw2wnO2kgz2JlPBGdyh45FOmroKhXKTHYZEHySt4XD2j9cLkyHnh0m0/ykzuz3lDp7m+OCL3aTty5BJMqZvXDrkzFYRnB1vUe+Nsm78NpGiccG+6kD30avab7ZIZjdltU9rErNAb4c7ezPY1wl8Z2nba3aj6tZMM1QmLVeK6tqhOvneNDznT6+Oa9rXu6JJCt2OZIDjCx3ZbJDUgMSkBzPU1x3cJv1rii+QBSjcOtXsaph9npZ/xkgPPQ3yE5Q0vqDpypPTTU08fQRhSmyIjzNDhhRonmJG/AyCQSaIRmGE1gOdGmhJ9FUq6lH2TgcJ2CboeRhQOa+Dsgmgn7so2qK/pgl0gwn4mif8iygnk/2c4hyPGYn1aTbpzs9tk4A4eSHGOIPuLslcZRmz7EX18PMb7fx9dttx1jH8SuFtAItIFwt9M1I37kh/mVn9Lej/809yB2/mllw+rLEh1cknz/9ZENFgzsVSJ7q3DDfVf/OlKeo7q+mxB8QEV+TcY/knPyHuLeHCZ618ThWv0dSXLSj/Xx8zk+nvC4TR5I0kWD3BEWQxBTBHI+LZyvao5C4eyD+ZlC/Y/4S9y7/jC7PvHCa4VN+wIxq1st/f6R9ssYJyFCZfScTA/wsq4L/8eUG+7DSw+IJ/imixPmZ9298PcTBkKsO5Ydutaom7PPn8n6chD6MsFcfN6koefT9nf13sT8L7+m6Q8kwKzZ5hn7/pVl1n5eWDWGUh5kqtWrBY0esMWfnGPV/Kv3iph5xP94sZfrbN8tSG02hhw52667r/7vyk18XHiJslfo1lpdWiV/fOHjoPnTgD4BfmjAnstygA2iakzudexNmeZ4WSOaewE87ef1F/KvkIadfmf36Pw==</con:value></con:property><con:property><con:name>0914_pjgfull2org3_accountoid</con:name><con:value>990200</con:value></con:property><con:property><con:name>0914_pjgfull2org3_assertionAccountId</con:name><con:value>9E87C57F4A227E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0914_pjgfull2org3_assertionUserId</con:name><con:value>9E8C05C6707A3EE6E0401F0A0799176F</con:value></con:property><con:property><con:name>0914_pjgfull2org3_assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:9E87C57F4A227E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0914_pjgfull2org3_assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:9E8C05C6707A3EE6E0401F0A0799176F</con:value></con:property><con:property><con:name>0914_pjgfull2org3_useroid</con:name><con:value>9E7171CFE7023F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>0914_pjgstandard1org3</con:name><con:value>2011/03/16</con:value></con:property><con:property><con:name>0914_pjgstandard1org3_assertUUID</con:name><con:value>0a11f365-aeaf-479a-9f2c-e3d99c18724a</con:value></con:property><con:property><con:name>0914_pjgstandard1org3_assertion</con:name><con:value>nVdZc6pME773V1iey5RhExXrJFXDGlRUFtc7hBFQNlkE/fXfgNGYnJzl/S5SZppenul+pqfnZ2oGPjkAaQqTzIvCpsy/tHCTIHZUl26b0Ny1Oz3GbDM70mpDymYYi+j3yI7ZasppmkM5TDMzzF5aJE4QbZxqE10DZwY0MyA6z51+Z9NqLmCSIs9I5RlvNcvAD9NBHfWllSfhIDJTLx2EZgDTQWYNdKCMB0hzYN4gtV5/XkHWAZNXN8viAYZZzza0oO9bz1YUYD+xTzo/7XSge05oZnkC32Pa6Uvr3bYoiueCeo4SByNxHMdwBkM6duo5P1qvjZsxtOVwF13XnBlGoWeZvncxK1AKzNzIbgLfiRIvc4PfuCYwAq9ct2FptS2iE/5oYR8BanT/6OkTyCQ126lrEjdnGtzBBIYWbM41+aX1458KeDU1EjNMd1ESpF/W/w0RDE/Qj2Jot9Pbxm7g/t3jN9l6/QmtgRxafp56JzipWBKbFkybswTuvHLspYh7dtqsq98s0xvBoPVfKvITe8SJYGPfZIb3HJhm/0+5Hkt19bIw/Ry+lrPzQoYrQeOTxJv19PM4X+ojsJ7ih5cawqPyFdS90u/rrzy90+rdSL+YVrhPYzsTVpLJ5cHacKfayu3hoSkmPd3z4KU7H51X3GgYTHlGp4ZSp88JCyK0N7pb6KJByb2eSbn6vPH0Nt4Vs9WblJGZ2gOreJ0SFL4iHULLmdNK4SLseOx391kQsG4wz87ToyzrgQxZOhCPWA83t/4WpqR8ZJ2GYBAzXtaduGvFW7B1ZFC8fOzpcQ/VvkbwXG+y+n9F4wxvZuZ9wVWNYodOZwZfFVnm8wvHgbPugEJmgYP+9mDCOoeje/AkpsBZoKoi4DnW3wtjBRwkQMwF1lW4xUIpuQsYss5kgQyNBvA3rKIJBV+s+YWqvgmFa9jS4ryV/HxzESYKSGtjzlUETVjwmiEoCoiuslLht1K5V3SlkNU130AOeKGML7bEZFAqPYuUaUWnybVO55vVAsnF8ziYnLaG4CucInH6UdLlLcWrwhBo66VFijmyvYyDOGqs5+yD0TCGewDFAkcxwUUxDoVizMkJr5m1zPgsU2RpqKhpwan1rqSGUAwX88tHLjhW4exAKAUDzK65sAxOnOCb1TA1l3SoaKDgndp4JBT29AZEUfGiwV1zNRYKTdDmE1HR5EIAtYwXCj/dkhN3K7kni1LLoQH2j4XhVGEphuh7qJ2sM31smJIItsGCsCjNtTzaM1dR4Wz6Ba+uh6NoIyM3E6AKLKsCBAgH1dZQ/lkwZhf0NPYY0oPjnRgF0E0aChGNDqdLifc9aurMJkua3x16M8mbUabtYrJvkXvqAGQZ2iPCVU1bW2MaH3qX7nQ0X0EvWV+yCa0SXa9PN7RlPl/xkd+z31br+eipXFuqMZ3p8+XsUpaT475/8bO3KfuW6EOFd6YTCGep9YThpsgafZ7m1m97xKedhkO6ARyFBUDaO47gIQKzb/srCd80RUDkBQpXSNySk3QgSU+CzPKquhNdYmZJi3xOTBRZsH2UpvN6pfmNDcfyqFK4udzEa1LENwawa2dqRxAddU4/DVdwo058Y5GBIl7sQoLApVh92ymFYykVA2y50Fl0ithGLoO5OY2HeDladHHiqNr+UGfAnCp18lBOXWdzPjibAyrK+uHorA3gL4wHjsmIYsuGagiaAvrX81Yq8pzSfCso421glbyBalYbRwYraKKKz0ueB6OrLDUAWabri7BXOKG2b4BSMREtTtuVm67DiTc1hByRNn+gy35L4n/lWEWxxmeOHTmggq8cE64cE8Du+CT3eSKlu1ycLguHlYSj2luMh0yMq6vxocE+iZiTeX5nGvYLY/S0JM5Fz92ryyUj8y73FO7WLrXNWNy8WCocHnqSpx34sNvxz8pYUem5h/lnfA+PRTpuTGQiFKjsImJMkj+xwcYLLheqQ86DmZ6f5Lk5Somzuz0umWI/e+tiWCKd6Utvc1LFVWStr/fI1yZ5F17bKPbYYD914NvopefbPbSy27K6h2W+KaLL0cz+PMZVEs9u72rVQVzNgmkGw6z1WllVI9wgR4OeZw/QzXldM0Kf5XiRJTmR75AdSsA7OCHiAO8xTI/vkrdZ74riC0QuCndeFasaZq+X9Z8BWsFgC80EJq0/eKry1JRDDU0fUZhCI3pp0ZTAAwA4mhLxLsX0+zxDdnt9kcNZigGk2GpOomwaThOwy2DyMCD3vg7IGrS82IPVFP0+S6QZSsTRPOWZTzyfzOcQ5mjMTqpJd0B2+nSdAMzOg9hCH1B3S+IozZ5jN66Hmd9u4+u3246Rju1VCmkFmoWoWvCbkR6/If5lZ+S3o//NPchtr5pZUPqyxLOuSD5/+mBDRYM7FXCG6Nww31X/zZQhiO6vptgfEGFfk3GPZJ+8h7i3hwmatdE4Vr9HUlS0o/l8fM5Pp7wuUw/HSSxB7jECwzEdWjkaF89GdIAhdveA/cugfsf8Je5d/hldnrmhnqFTHiBGNevl3x9pn6xRAjJYZt/JOB89y6rgf3y5WQOr0kPiGfoposT+yPs3vh7iIMhVh/JCp1pVE/b5c3nfT8LAipBXDzWpKHn0/Z39d7E/C+/pukPJECu2eQZ//6VZdZ+XlmlZUR5mMt+qBY8dscacnWM4+FD6xU094r6/Wcr0t2+WlTLWLRcGZuuu6/1due3Vhbcgskq9GstLq0SvbxQ8dB468DvAL024x9E9sQNIsid0OvcmTDMMyeLUPYGfdvL6i/hXyUNOvzL79X8=</con:value></con:property><con:property><con:name>0914_pjgstandard1org3_accountoid</con:name><con:value>990200</con:value></con:property><con:property><con:name>0914_pjgstandard1org3_assertionAccountId</con:name><con:value>9E87C57F4A227E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0914_pjgstandard1org3_assertionUserId</con:name><con:value>9E8BCDFB2CFD4243E0401F0A07997D62</con:value></con:property><con:property><con:name>0914_pjgstandard1org3_assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:9E87C57F4A227E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0914_pjgstandard1org3_assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:9E8BCDFB2CFD4243E0401F0A07997D62</con:value></con:property><con:property><con:name>0914_pjgstandard1org3_useroid</con:name><con:value>9E7171CFE7073F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>25_pjgfull1org3</con:name><con:value>2011/03/16</con:value></con:property><con:property><con:name>25_pjgfull1org3_assertUUID</con:name><con:value>2f9e0cce-ace5-42d2-b50a-aab314454e53</con:value></con:property><con:property><con:name>25_pjgfull1org3_assertion</con:name><con:value>nVdZc6JMF773V1jOpWVYFLdKUtWsooKCoOIdQgsogrII+uu/BqPRTCYz73eRMn04y3MWDk+/xubeJ/sgjmGUeGFQFdm3GrnpQdyyYMO0INVokTbZWFO42TDNdZNotagWpJq1qhjHKRSDODGDBNngBNHAmw2ireG9PkX0KeqF6nZWteocRjHyjFRe8Fo13/tB3C+jvtXSKOiHZuzF/cDcw7ifWP0ZkMZ9pNk3b5Bq769XkGXA6N1NkkMfw6wXG1rQ960XK9xjr9iTzqsd92eeE5hJGsGPmHb8VvuwzbLsJWu+hJGDkTiOY3gPQzp27Dm/au+VmzG0xWATXs+MGYSBZ5m+dzELUBJM3NCuAt8JIy9x939wTWAEXrhuwNxqWEQr+FXDPgOU6P7R0xPIKDYbsWsSN2cq3MAIBhas6qr4Vvv1Tw28mmqRGcSbMNrHX87/DREMTtAPD9BuxLfEbuD+3eM31Xp/hVZfDCw/jb0TlIspOaCk4uo0ghsvH3sxmj07rpbdr+bxbcCg9V868oo94kSwsW8qw3oOjJP/p12Prbp6mZt+Ct9n5InZycDvksJexIcdYtU210q6EVT9rYTwqHwFde/0x/nrnN7H6sOIV+TgkAi78MR13DV2HttSIHYMVbC0FWn1NnTHUS9SmznrGUcbpAu1ZJFzZ9+BO/5MMJihHUgjXc/qYjCqkL3evkkMltlkfF7AldCGutcGW8NVkwhu9/qJ0Zdq/bD0zFNuwiOEmM54wVKn+Pi41W1NIw0zMjcdqk64FT3L+OOyKw+4bnMZMwP5bLx95vSYQ5HXCJ7LJIv/lxTeY83EvB+YYlFs0NuZwHdJFNn0wjDgPHNAJtLAQX9bINPO7ujuPKGX4TRQFB6wDO1vubEEdgIgdI52JWY+l3LmAoa0I8+RoVYB/oqWVC5jM4OdK8qAy1zNFubnteCnqwsnSyAujRlX4lRuzqoaJ0kgvMpyiV0L+VaaSZmoGGwFOWC5/HCxhV4ChdyzSJGSZhRpzKh0tZwjOX8e7+XTWuN8iZEEZnYUZuK6ySrcEKjGwiL5FNlexvtDWDF0+sFoeIBbAPkMRzHBRdJ2maTppMyqZinTnmWSKAwlJc4YpcxKqHDZcK5fPmvB0BJj77mc08D0WgtLY3gZXy2HsbmgAkkFGeuUxiMusyc3IJKCZxXmWqsxl6mcqsu8pIoZB0oZy2V+vCZldy24J6up5EMNbB8bwyjcgg/Q80A9WWfqWDEFHqz3c8Jqqq7lUZ65DDNn1c1YxRiOwpWI3MhA4WhaAQgQDorUUP1pMKbn1OTg9UgPjjd8uIduVJGIcLQ7XXK86zUnzlReUOxm15kK3rRp2i4m+ha5be6AKEJ7RLiKaasGprKBd2lPRvoSepFxSWRKIdpel6qoi1RfsqHfsQdLQx/Vc8NStMl0pi+mlzyXj9vuxU8GE3oQzYYS60xkCKexVcdwk6e1LksxxmCL5mmj4pCqAEeiARC2jsN5aIDpwfY6hANV4tDwAonJBGbBCDMgCHVOpFlF2fAuMbWEeaoTsiRyto/KdDaWql9ZMTSLOoWbi9XBIHl8pQG7dKa0ON5RdKo+XMKVIvvaPAHZYb4JCAIXDspgI2WOJRUTYIvZjEZvEV1JRaCbk8MQz0fzNk4cFdsfznpAb+YzcpdPXGd13jmrHWqK8fDqGBrw59rDjIloxBYVReNUCXSv71suiXpT9a19fljvrZzVUM9K41CjOZVXcD1nWTC6ymINkHlsXLitxHClfQXkkonG4rReurERyN5E41I0tOnDuGzXJP7XGStGrPI8Y0cGKODrjHHXGePA5lgXuywRU23mEC8yhxa4o9KZj4e9A64sx7sKXecxJ/H81iToZtqoviDOWcfdKotFT2Rdph5sDLe5TmjcvFgKHO46gqfu2KDd8s/SWFIo3cP8M76FxyweV2SRCLhmcuGxXpTW6f3K218uzRap76ez9CTq5igmzu76uOhl2+mgjWGRcKYundVJ4ZehZVy/I1+X5F14XaPY44J92sA36jVL11toJbdj8R0W2SqPPo5m8jONKySe3diUqv1DwQXjBAZJ7b2wKihcP0VEz7P76Mt5Pfe4LkcRJKA5vkk0WZ7DWzjB4wCnej28xeM3rndF8QUiEwYbr4hVkNnrx/pngNa+v4ZmBKPaD56KOlXFQEXsIwxiqIWIzdLNXpcBnWa7TVNsp812WZrtdFokYNoUaHO1qhwmk2ASgU0CoweC3PlKkFVoeQcPFiy64BIxIhMFkBeYm/uDD0tK4YeOF2DTyUwr6cofgX59dssJ6dheoRAXsGiI+gG/Ie2tG6bfsJPfkvube5DaXsFKUIGSyLOuSJ4fffa7aPS92SR1Q3xX/EfD9u+G2A9osK+FuMexT95D1Nu1AzFpRLbebx05mi/Hl/R0SovrRr+D4yQWIfcYgeHYDFopIoNnLdzBALt7wP6Fht8xf4l7lz+jSxM3mCXoHd6jeamWx79fwZ6sUQESmCffyRgfXbqK4D/ey6y+Vegh8RT9ZGFkf9b9G18PcRDkYv94gVOcCv58fm5uAFOUS9S3QuTVQysojB59f2f/Xexn4b1cdygJmop1msA/P6kWu+WtZlpWmAaJyNZKweO+KzEn5wPsfyr95qYksB83kjz+441kKY1nlgv3Zu2u6/1dueGVjbcgsoq9EstbLUd3axQ8cB726wfAP6xY4qcV+5zJ+2/i3yUPNf062e//Aw==</con:value></con:property><con:property><con:name>25_pjgfull1org3_accountoid</con:name><con:value>990200</con:value></con:property><con:property><con:name>25_pjgfull1org3_assertionAccountId</con:name><con:value>9E8E512ABEF113DFE0401F0A059904F0</con:value></con:property><con:property><con:name>25_pjgfull1org3_assertionUserId</con:name><con:value>9E8E512ABEF313DFE0401F0A059904F0</con:value></con:property><con:property><con:name>25_pjgfull1org3_assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:9E8E512ABEF113DFE0401F0A059904F0</con:value></con:property><con:property><con:name>25_pjgfull1org3_assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:9E8E512ABEF313DFE0401F0A059904F0</con:value></con:property><con:property><con:name>25_pjgfull1org3_useroid</con:name><con:value>9E7171CFE6FE3F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>25_pjgfull2org3</con:name><con:value>2011/03/16</con:value></con:property><con:property><con:name>25_pjgfull2org3_assertUUID</con:name><con:value>7adce797-930e-4d5f-8258-0e8f5bc7e248</con:value></con:property><con:property><con:name>25_pjgfull2org3_assertion</con:name><con:value>nVdZc6pME773V1ieS8sAKirWSaqGNaigLK53CCOMsiiLoL/+GzQazclZ3u8iZabp5Znunp5nfiZW4Df7IElgnKIorMr8a61rOTbsMt0G0yJho+3Qm0avSfcaJOxt6LXdhc12r1aVkySDcpikVpi+1pokRTXIVoPqmCTTp3t9uvPSpclVrTqDcYI9Y5UXslYtAj9M+peor7UsDvuRlaCkH1oBTPqp3TeAMupjzb51g1R7+3kFeQkYv3lpuu8ThP3iQBv6vv1iRwHxk3jS+ekkfQO5oZVmMfyI6SSvtQ/bPM9f8tZLFLtEkyRJgmQIrOMkyP1Re6vcjKEjh5vouuasMAqRbfnobJWgFJh6kVMFvhvFKPWC37imCIosXTdgYTdsqh3+qBGfAS7o/tHTE8g4sRqJZ1E3ZzrcwBiGNqxOdfm19uOfCng1NWMrTDZRHCRf1v8NEQyP0I/20Gkkt43dwP27x2+y9fYT2n05tP0sQUeoll2yt2yYVCcx3KBihBLce05SvVS/WiS3BoP2f6nIT+IRJ4ZNfJMZHrkwSf+fcj2W6uplZvkZfNvMkD4fRPlsmqqxSqgOnKnvMRj33qevFwiPyldQ90p/rL/26b2tPowGqXBytvSxU9/kBqmtpqid8lyRmfwx7R39JNGzbZy2V2h42FKqyZsrrhsQ0UAAQWyRk/pJyNmmwtiBY8UVj4BIm6TJ0YmErsMEMjGJLTsxkGXs6jYFZ0QkjjfRpth7hHRkLUE6TQ+W3tH8ObInCYBrP+z6dNexgqIidkhI6EI6XgyJ7bsh0hv79XNPj3so9zWEp8smy/8XNMnwVmrdF1w5KDb4dKbwTZFlPjtzHDgZLshlFrj4bwtU1t0dvB2SmJxkgaaJgOdYfyuMFLCTADUVWE/hZjOl4M5gwLrqDBuaFeCvWEUXcj5f8jNNexdyz3Sk2Wkt+dnqLKgKSC7GnKcIujDjdVNQFBBdZYXCr6ViqxhKLmtLvoId8EKxPzsSk0KpQHZTphWDbi4NOlstZlgunkaBelybgq9wisQZB8mQ1y1eEwZAX87tpphh2/Mo2EeV5ZR9MBrs4RZAMSdxTHBWzF2umNOmyuvWRWY+yxRZGihaknPaZVdSRcgHs+n5Mxccq3BOIBSCCSbXXNgmJ6rkajFIrDkdKjrIefdiPBRyZ3wDomhkXuGuuRoJuS7oU1VUdDkXwEXGC7mfrJuqt5a8o93SioEJto+F4TRhLob4e6gf7RN9qFiSCNbBjLJbumcjGlmLKHdXvZzXloNhtJKxGxVoAstqAAMiQbk1nH8WjNgZPd4jpongaCNGAfTiikJFw93xXJA91Bq7E3VO85tddyKhSctyPEL27ea2tQOyDJ0h5WmWoy8JnQ/RuTMeThcQxctzqtIa1UE9uqLPs+mCj/yu875YTof1Ymlr5nhiTOeTc1Goh23v7KfvY/Y9NgYK745VCCeJXSdIS2TNHk9zy/ct7qeNTkK6AlyFBUDauq6AcAOz79trE77rioCbFyhcLnFzTjKAJNUFmeU1bSN61MSWZtmUUhVZcHycptNyofuVFcfyuFKkNV/tl02RXJnAuTjT2oLoalO6PljAlab65iwF+X62CSmKlPba+0bJXVspO8CRc4PFp4itZDKYWuP9gCyGsw5JHTTHHxgMmLYKo7krxp67Ou3c1Q4XZflwdJYm8GfmQ4/JuMXmFc0UdAX0ruetUORpS/ftoNivA7vgTVyzi3FksoIuauS04HkwvMoSEzSLZHkWtgonXOwroFAs3BbH9cJLlqGKxqaQ4abNHtplu26Sf+2xssUqzz124IAGvvaYcO0xAWwOdbnHUwnd4fbJPHdZSTho3dlowOxJbTHaVdi6SLgp8tvjsJebw/qcOuVdb6vN54zMe1w93Cy91jplSetsa3Cw60pI3/Fhp+2flJGi0VNE+CdyCw95MqqoMhUKrfQsEkyc1dlghYLzudVuToOJkR3lqTVMqJO3PsyZfDt57xBELJ3oc3d11MRFZC+v98jXIXkXXsco8ThgnybwjXoZ2XoL7fS2LO9hma+K+HK00j/TuFKCnMbmotrfl1wwSWGY1t5Kq5LC9TNM9JDTxzfndc0ITLcrsBwe0W2BYToC2SYpkQRkl2HoVq9943pXFF8gclG4QWWsksxeL+s/A7SD/hpaMYxrf/BU5qkqhzpmH1GYQDPCJJkDHVFgeRZQnTbXZjiKavVaPdDsdLtUi2dqVTVKx+E4BpsUxg8EufuVIOvQRnsESxZdcokEk4kSyAssrGDvwwul8CMXhcRkbJgXuvJboF+/3faEdRxUKiQlLBbiesBvSHv7hukX7M1vyf3NPcgcVLISnKA0RvYVyfOnz3qXhb4Xu0nfEN8V/9Gw86sh8Qc0xNdE3OM4R/QQ9fbswEwak623W0UO1svhJTses/K50e+SZJOIsXuCIkjCgHaGyeDJjHYwJO4eiH+h4XfMX+Le5c/ostQLjRSf4QD3S/Wy/PsT7MkaJyCFRfqdjPPxo6sM/sd3md23Sz0snuCfPIqdz7x/4+shDoZczh8UuuWq5M+n5+KGMMN7ift2hL0iPIKi+NH3d/bfxX4W3tN1h5LirlhnKfz9l2o5W15rlm1HWZjKfO0ieJx3F8zpaQ/7n0q/uLkQ2I8XSZH89kWyUEaG7cHAqt110d+VG+hSeBtiqwRdsLzWCvy2xsFD92G+fgB8HrE9gaaagBVEPLZ48T5iaYYh2yJ5T+DTTt5+Ef8qecjp185++x8=</con:value></con:property><con:property><con:name>25_pjgfull2org3_accountoid</con:name><con:value>990200</con:value></con:property><con:property><con:name>25_pjgfull2org3_assertionAccountId</con:name><con:value>9E8E512ABEF113DFE0401F0A059904F0</con:value></con:property><con:property><con:name>25_pjgfull2org3_assertionUserId</con:name><con:value>9E977EBCADC4E996E0401F0A07995384</con:value></con:property><con:property><con:name>25_pjgfull2org3_assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:9E8E512ABEF113DFE0401F0A059904F0</con:value></con:property><con:property><con:name>25_pjgfull2org3_assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:9E977EBCADC4E996E0401F0A07995384</con:value></con:property><con:property><con:name>25_pjgfull2org3_useroid</con:name><con:value>9E7171CFE7023F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>25_pjgstandard1org3</con:name><con:value>2011/03/16</con:value></con:property><con:property><con:name>25_pjgstandard1org3_assertUUID</con:name><con:value>df65844c-c946-47e2-9c5e-e7d9ca59753a</con:value></con:property><con:property><con:name>25_pjgstandard1org3_assertion</con:name><con:value>nVdZc6pME773V1iey1TCoqhYSaoGGBAVFMT1DmEElEVZBP3136DRaJKzvN9FykzTyzPdPT3PvCZm4NMdkCQoTr0orMrCW81eN5l2o2E9W2yj+dxoIfqZtRj0jFo2a5kM22LqZq0qJ0mG5DBJzTB9q9EkRT2T9WeqaZBsh2E7FPvCsuyyVp2iOMGescoLWasWgR8mnXPUt1oWh53ITLykE5oBSjqp1RkDZdDBmh3zCqn2/noBeQ4Yv7tpuusQhPViIwv5vvViRQHxSjzovNpJZ+w5oZlmMfqIaSdvtQ/bPM9f8vpLFDsETZIkQbIE1rETz/lVe69cjZEth+vosubNMAo9y/S9k1mCUlDqRnYV+E4Ue6kb/MY1RVBk6foZFTibVCP8VSM+A5zR/aOnB5BxYj4nrkldnelojWIUWqg60eW32q9/KuDF1IjNMFlHcZB8Wf83RCg8ID/aIfs5uW7sCu7fPf6QrfdXZHXk0PKzxDsgteySnWmhpDqK0dorBl6Ce89OqufqV4vk2mDI+i8VeSXucWLYxA+ZETwHJen/U677Ul28TE0/Q+9rX1FTqEdbmKoAkYF8XJJMa+QcR9u3M4R75QuoW6U/1l/79NZWH0YL8kBbo5E6FvmpczjABKDNQYlH0qjpDwaHrVY48ySpt2xytQ52qOU1kHuEm822P4nYkZQWxHJ+EgPLQGxSEcdg5TF9ezBoehvKba/oPOti292+F0W9wMsIM+sqO/90VDSXD7qrGSB9X1BtVjWOU1McDsY9YVbvdiV5VlH5mT9ckXA5n/unYQwDN3r73NP9Hsp99dHxvMny/zlDsoKZmrcFXw6KNT6dKXpXZFnITjwPjmMH5DIHHPy3ASrnbPfu1pPYnOSApolA4Dl/AwcK2EqAmkDOVfjpVCn4E+hxjjrFhkYF+EtO0WEu5AthqmldmLuGLU2PK8nPlieoKiA5G/OuAnU4FXQDKgqILrJCEVZSsVHGSi5rC6GCHQiw2J1siU2RVHgWLTPKmKEXYyZbzqdYLh4HgXpYGdBXeEXix3tpLK/qggZ7QF/MLFrMsO1pEOyiymLC3Rn1dmgDkJiTOCY4KcY2V4wJrQq6eZYZjzJFlnqKluS8dt6VVIF5bzo5feaC5xTeDmABDTC65MIyeFEll/NeYs6YUNFBLjhn4z7M7eEViKKReYW/5GoAcx3qE1VUdDmH4CwTYO4nK1p1V5J7sOpa0TPA5r4wvAZnYoi/h/rBOjL7iimJYBVMKauuu5bHeOY8yp1lOxe0Ra8fLWXsRgUa5DgNYEAkKLeG88+BATdlhjuPpT00WItRgNy4olBRf3s4FWTbqw+dkTpjhPW2NZK8Ud20XUL2LXpT3wJZRnafcjXT1heELoTeqTnsT+bIixenVGU0qum1mYo+yyZzIfJbdne+mPSfioWlGcPReDIbnYpC3W/aJz/tDrluPO4pgjNUERol1hNBmiJntAWGX3Q3uJ/WOomYCnAUDgBp4zjQww3MdTeXJuzqCsTNCxQ+l/gZL42BJD1BmRM0bS261MiSptmEUhUZ2j5O03Ex1/3KkucEXCnSnC13C1oklwawz860BhQdbcI89eZoqam+MU1BvpuuQ4oipZ3WXSu5YyllB9hyPubwKeIqmQwm5nDXI4v+tElSe832e2MWTOrFmN4WQ9dZHrfOcouLsrg7OgsD+FPjrsdk3GKzimZAXQHty3krFHlS130rKHarwCoEA9fsbBwZHNRFjZwUggD6F1liALpIFie4UXh4tq+AQjFxWxxWczdZhKo3NGCGmza7a5fNiib/2mNli1Uee2zPAw187TF46TEI1vsnuS1QCdPkd8ksdzgJ7rXWdNBjd6Q2H2wr3JNIOKnnN4ZhOzf6TzPqmLfcjTabsbLg8k/heuHWVylHmidLQ71tS/L0rRA2G/5RGSgaM/EI/0hu0D5PBhVVpkJYT08iwcbZExcsveB0qjfoSTAaZwd5YvYT6uiu9jM234y6TYKIpSNzai0PmjiPrMXlHvk6JG/Cyxgl7gfswwS+Uq9xttogK70uy3tYFqoivhzN9M80rpR49vP6rNrZlVwwSVGY1t5Lq5LCdTJM9Dy7g2/Oy5qFbKsFOR6PaABZtgnJBkmJJCBbLMvU240r17ug+AKRj8K1V8Yqyezlsv4zQCvorJAZo7j2B09lnqpyqGP2EYUJMqK3WpuvN8QmzwstgWI5mm83hRZNM3WKbtJNgWNqVTVKh+EwBusUxXcEufWVIOvI8nYeKll0ySUSTCZKIC+oMIOdj86Uwo8cLyRGw7Fxpiu/Bfr123VPWMf2SoWkhMUhXA/0A2knr5i+Yad/JPdX9yCzvZKV4ASlsWddkDx++qx3WehbsWnmivim+I+Gze+GxB/QEF8TcYtjH7y7qNdnB2bSmGy9XyuyN1/2L9nhkJXPjU6LJGkixu4JiiCJMbIyTAaPRrRFIXHzQPwLDb9h/hL3Jn9El6VuOE7xGQ5wv1TPy78/wR6scQJSVKQ/yXgfP7rK4H98l1kdq9TD4hH+yaPY/sz7D77u4mDI5fzxQqdclfz5+FjcEGV4L3HHirBXD4+gKL73/ZP9T7Efhbd03aCkuCtWWYp+/6Vazpa3mmlZURamslA7C+7n3RlzetyhzqfSNzdnAvvxIimS375I5spgbLkoMGs3Xe/vys/eufAWwlaJd8byVivw2xoHD527+foB8HHEtiFD0YCDIkXVBfE2YhmWJRsieUvgw07ev4m/S+5y+rWz3/8H</con:value></con:property><con:property><con:name>25_pjgstandard1org3_accountoid</con:name><con:value>990200</con:value></con:property><con:property><con:name>25_pjgstandard1org3_assertionAccountId</con:name><con:value>9E8E512ABEF113DFE0401F0A059904F0</con:value></con:property><con:property><con:name>25_pjgstandard1org3_assertionUserId</con:name><con:value>9E977EBCADCAE996E0401F0A07995384</con:value></con:property><con:property><con:name>25_pjgstandard1org3_assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:9E8E512ABEF113DFE0401F0A059904F0</con:value></con:property><con:property><con:name>25_pjgstandard1org3_assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:9E977EBCADCAE996E0401F0A07995384</con:value></con:property><con:property><con:name>25_pjgstandard1org3_useroid</con:name><con:value>9E7171CFE7073F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>10_pjgfull1org3</con:name><con:value>2011/03/16</con:value></con:property><con:property><con:name>10_pjgfull1org3_assertUUID</con:name><con:value>56b6c12d-d7d1-42f5-ab00-6cbdaad9ba92</con:value></con:property><con:property><con:name>10_pjgfull1org3_assertion</con:name><con:value>nVdZc6pME773V1ieS8swoLhVkqphEVFRWVzvEEZAEZRFkF//DRiN5uTknPe7SJlpenmmu6fnmddQP7hUF4YhCiLH98oi91ahm5umQVJmzWyZZK1BbemavgGg1jQ2pq6bnY3eoSplMQxjJHphpHvRW4UCJFkD9RrZ1Mhmt052SfBC0a11pTxHQYg9Y5UXUCmnB9cLu0XUt0oceF1fD52w6+kHFHYjo6tCadTFml39Bqny/noFWQQM3u0oOnYJwngxkYFc13gx/APxSjzpvJphV3UsT4/iAH3ENMO3yodtkiQvSf3FDyyCAgAQoENgHTN0rF+V99LNGJmit/Wva1b3fM8xdNfJ9ByUhCLbN8vQtfzAiezDH1yTBAly1zWUGjWDbHi/KsRngALdP3p6AhmEei20dfLmTEFbFCDPQOWZIr5Vfv1TAa+mWqB74dYPDuGX9X9DhLwzcv0jMmvhbWM3cP/u8Ztsvb8ioyt6hhuHzhmN8y456gYKy9MAbZ105IS498ywXFS/nIa3BkPGf6nIK/GIE8MmvskM51gojP6fcj2W6uplrrsxeoctcczMJ0amZumAWM892t6A43RE7+S3AsKj8hXUvdIf6699em+rDyOO40CfgQI9WR/O++YcLH1joB73ycUWgDpV0Biik8saw+rZ5tdndTbzuV7fhyJNTqvUhXWOHVoe9DNiv96VYnIIrCQ4VOlGdb9jD1qdbs/F5bTZYXYdcFnE7mqaNdI6nIqn9kyRBryudMTOOeZGVNCXGpfVkLNNwToNm34pCtqZtp8EgJyeyebRmKLV2+eeHveQ72uILsUm8/+XNOhweqTfF2w+KLb4dEboXRJFLs5YFl5UCyYiAy38t4Njxtqf7L0jdBLAQFnuQY5l3B0/kuBegOSMZ2yJnc+llM3ggLHGc2yolaC7ZiSFT7hkxc1luc8ntmYK88tGcON1xo8lGBbGrC3xCj/nFI2XJOhfZanEbYR0J6lSIsorroQdcHx6zEyhEyEhdQxKpCWVplYqHa+XcyzvXUaH8Xmj8a7ESgKrngRV3NQ5mR9AZbUwqF6MbbPR4eiXVjPmwWhwRDuIegnAMWEmaftE0mbUmFP0QqY9yyRRGEhymLBysSuhxCeD+Sz7zAXLSKx54FNeg9NrLgyN7Y3BejkI9QXtSQpMOKswHvKJObkBkWSQlNhrrkZ8ovDKbNyTFDHhYSHj+MQNN9TY3gj22ajL6UCDu8fCsDK/6Hn4u6ecjQt9KulCD24Oc9KoK7bh0I6+9BNr3U44eTUY+msRuxlDmWcYGWJAAOZbw/ln4IiZ05Oj06EcNNr2/AOyg5JE+sP9OUtB26lPrOl4QXPbfWsqONO6btqE6BrUrr6HoojMIWnLuqmsCIXznKw5Gc6WyAlWWTSmZbLptOmSsohnS853W2Z/uZoNq+nKkLXJVJ0tplmajk+7duZG/QnTD9SBxFmTMULT0KgSQO8xWpuj2VV/h/tpqwBEl6AlMRAKO8viHdzATH93bcK+IvG4eaHEJgK7YAUVCkKVFxlOlrc9m5wawjyekWNJ5E0Xp+myWipuac0yHK4U0Bfr44rqgbUGzcKZ3OB7ljyjq4MlWstjV5tHMDnOtx5JAuEo97dSYhlS3gGmmKgMPkVMKRbhTJ8cByAdzpuAPMmmO1A7cFZPVWqfTmxrfdlb6z0uyurh6Kw06M61hx4TcYstSrLGKxJsX89bKomzuuIah/S4ORgpp+GaFca+xvBKTwazlOPg8CoLNUil4SrjdxLLF/YlmEo6bovzZmmHK2/sTDQ+xk0bP7TLbkOBv/ZY3mKl5x47sVCGX3uMv/YYD7enqtjmyJBussdwkViMwJ/k1nw06ByBvBztS0y1R1iR4zYmXjvRhtUFeUla9k5eLDoiZ7NVb7uy65uIAXpmyGiwbwmOsue8ZsO9SCNJpmcO4V7ADp2ScFQai6TH16OsR3SCuMoc1s4hy+oNanaYqvFZnOnDkLzYm9Oik+ym/SZBBMKFzlrrs9zDo351vUe+Dsm78DpGiccB+zSBb9RLjTc7ZES3ZX4Pi1y5hy9HPfqZxuUSx6xtC9XuMeeCYYS8qPKeW+UUrhtjoueYXXxzXtcdvsNyPabebrB8sw1IHjQA2QMQ0J1Ok29SN653RfEFIut7WyePlZPZ62X9M0Dj0N0gPUBB5QdPeZ7Koqdg9uF7IdL8twrXaDMk3epxsMU2+Tpocq12o82ydZrrsC2mVSmP/WjiTQK4jVDwQJBbXwmyggzn6KCcRedcIsRkIgfyglL9cHRRQSlc33I8YjpRtYKu/BHo12+3PWEd08kVwhwWg3A90DekHdww/Yad+pbc39zD2HRyVoITFAWOcUXy/Omz3nmh78UmwQ3xXfEfDcnfDYkf0BBfE3GPY56dh6i3Zwdm0phsvd8qctJfTi/x+Rznz41uCwCKCLB7giQAoSIjxmTwovl75BF3D8S/0PA75i9x7/JndHFke2qEz/AB90u5WP79CfZkjRMQoTT6Tsa6+NGVB//xXWZ0jVwPi6f4J/ED8zPv3/h6iIMh5/PH8ax8lfPny3NxPRTjvQRdw8deHTyC/ODR93f238V+Ft7TdYcS4a7YxBH685dyPlveKrph+LEXiVylEDzOuwJzdDmi7qfSb24KAvvxIknDP75IltJINWx00Ct3XefvyjWnKLyBsFXoFFjeKil+W+PgnvUwXz8A/mHEsj+N2OedvP8m/l3ykNOvnf3+Pw==</con:value></con:property><con:property><con:name>10_pjgfull1org3_accountoid</con:name><con:value>990200</con:value></con:property><con:property><con:name>10_pjgfull1org3_assertionAccountId</con:name><con:value>9E9CDFB384CC6801E0401F0A05996E62</con:value></con:property><con:property><con:name>10_pjgfull1org3_assertionUserId</con:name><con:value>9E9CDFB384CE6801E0401F0A05996E62</con:value></con:property><con:property><con:name>10_pjgfull1org3_assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:9E9CDFB384CC6801E0401F0A05996E62</con:value></con:property><con:property><con:name>10_pjgfull1org3_assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:9E9CDFB384CE6801E0401F0A05996E62</con:value></con:property><con:property><con:name>10_pjgfull1org3_useroid</con:name><con:value>9E7171CFE6FE3F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>0914_pjgbasic1org3</con:name><con:value>2011/03/16</con:value></con:property><con:property><con:name>0914_pjgbasic1org3_assertUUID</con:name><con:value>41fac975-cec2-404e-b436-9ad6f4eda488</con:value></con:property><con:property><con:name>0914_pjgbasic1org3_assertion</con:name><con:value>nVdbc6JME773V1i+l6mEk0SxNqkajqKigni8w2EEFEEZEPTXfwNG12Sz++77XaTMNH14pvuZnp4f2NmHbAdgjJI0iKO6Lr81mszGgUKLf4YIss9Nuome103u9Vlw3NdNE7lOs91u1HWMM6RHOHWi9K3B0gzzTHPPzKvNtDp0u8PzL63X9qpRn6EEE89E5YVu1It9GOFOFfWtkSVRJ3ZwgDuRs0e4k8LOBBiDDtHsODdIjfcfV5BVwOTdT9NDh6Lgi4sgCkP4AuM99YP6pPPDxZ1J4EVOmiXoI6aL3xoftnmev+TcS5x4FEvTNEULFNFxceD903iv3YyRq0eb+LqWnCiOAuiEwcUpQRko9WO3DkIvToLU3//GNUMxdOn6GRXwGTLN6J8G9TNAhe4vPX0CmWDnGfsOc3NmoQ1KUARRfWrpb41//qqAV1M7cSK8iZM9/rL+b4hQdEJhfEDuM75t7Abu7z1+k633Hwh29AiGGQ5OaFiy5OBAhOvjBG2CYhBgwj0X16vq1wt8IxiC/6UiP6hHnAQ29U1m5MBDOP1/yvVYqquXmRNm6H146i/WOzmkVCy0z5m878bQ5tFRnMVvFYRH5Suoe6U/1l95eqfVh1EPjNpDxuTgsKtk1NRvm3PPMhhJHDPdC7X2IJLmMFn6jniOVHXE8oburc4OPhhWayiGOrBPBZ48caoymNfmZtsVp5zZ23khh867nXfh8+Zocclnxgx0obdl+4E4WndDamE7OvYXPJhvg8NGm8+LiXhmmKeFfsxH/CCkahNnzsQ9S5Vkqdhwp+RUeG8/9/S4h3JffXSuNln+v+BpQXZS576QykaxIaczRe+GrsvZRZLAeeKBXBeBR/62YCh6u6O/CzQhp0VgmiqQJTHcKgMD7DTATBXRN6TZzCikC+iJ3nBGDO0aCFeiYSm5nC/lmWl2ldy3XW12XmthtrooQwPgyljyDcVSZrJlK4YB4qusMOS1VmyNiZHr5lKuEQeyUhwuriakSCsCyOq8MeHZ5YTPVosZkavnwX54WttKaEiGJk2O2kRfc7Kp9IC1nENWzYjtZbA/xLXlVHww6h3QFiA1p0lMcDHsXW7YU3YoW04lsz/LDF3rGSbOJbPalVZT8t5sevmZC0k0JHevFIoNxtdcQFtSh/Rq0cPOnI8MC+SyVxn3ldwd3YAYJp3XpGuuBkpuKdZ0qBqWniugkslKHuI1O/TXmn+CnFn0bLB9LIxkKnM1It8j6wTP/LHmaCpY72cM5CwfBnzgLOLcW7Vz2Vz2+vFKJ26GwFRE0QQEEA3KrZH8i2AgzvjRIRDYAA02arxHflIzmLi/O10Kuh1wI288nPPyZtcaa8GYc1yf0kPIbrkd0HXk9hnfdFxrSVlyFFxeR/3pAgXJ8pIOeZN5Ddp8zZpn04Uchy23u1hO+0/FEpr2aDyZzseXohget+1LmHZHYjeZ9AzZGw0RGmP4RNGOKtptmZeW3S3h08aiEV8DniECoG09TwkIgcXu9krCrmUohLzAkHJNmkvaBGjak6KLsmluVJ8ZQ22WTZmhoStuSNJ0Xi6ssLaSRJlUinbmq8OSVemVDdzKmdlUVM+c8k+9BVqZw9CepSA/zDYRw9DawexujNyDRskAV88nIjlFYi3TwdQZHXp00Z+90szRdMPeRABTrpiwu2Lkk2ax81Y7UpTlw9FZ2iCc2Q8c0wnF5jXTViwDtK/nrTD0KWeFcF8c1ntYyDapWWUc26JiqSY9LWQZ9K8ybAO2wMuLsjUkpbKvgcJwCC1O64WPl9EwGNlKRkibPdBlu2bpf+VYSbHaZ44dJWCCrxxTrhxTwOb4pLdlBvOv0gHPc0/UlKPZmg16woE2F4NdTXxSKS8NwuYoaud2/2nOnPOWvzXnc0GXfekp2ix9bp2KtHOBJurtWlpg7eTotRmejYFh8tOACs/0Fh1zPKgNdSZSuPSiUkKSPYn7VbC/XLgmO92PJ9lJnzp9zJz99XEu5Ntx95WiEu3MX1qrk6kuYri83iNfm+RdeG2j1GOD/dSBb6PXJFtvEUxvy/Ie1uW6Si5HJ/3zGFdKAvd5U6l2DuUsiFMUpY330qoc4ToZGfQCt0NuzutaUASZYUmKWSBwnMopdJNmVBrQvCDQDBBus94VxReIUhxtgjJWOcxeL+s/A4T7zho5CUoaf/BU5qmuRxaZPuIIIzt+a3Cywqs005a5lqS0VYVrtwRJFQRBVRmJAc1GfRino2iUgE2KkocBufV1QLYQDA4BKqfoj1kCpyQRR+eUpSHzcnJeIpSRMTspJ90O22zzVQIoN9sfIPlAultyiHH6cvAP1TDz2218/XbbMdFxg1IBl6BFRKqFvhnpmzfEv+yM/Xb0v7kHmRuUMwtJX5oE8Irk86efbChpcKcCLTDNG+a76t+ZCgzz+qsp9QdE1Ndk3CO5p+Ah7u1hQmZtMo5V7xFMinZ0Xo4v2emUVWVq0TRLJcQ9xVA0NUEwI+Pi2Y53KKLuHqi/GdTvmL/Evcs/o8tSP5qk5JTvCaPq1fLfH2mfrEkCUlSk38mkkDzLyuB/fLnBDiz1iHhMfvI4cX/m/RtfD3EI5LJDBZFXrsoJ+/y5vB8noQNj4jUgTSpOHn1/Z/9d7M/Ce7ruUFLCinWWot9/qZfd563hQBhnUarLjUrw2BErzOn5gDo/lX5xU424H2+WAv/2zbIwBhPoo73TuOsG/678HFSFh4hY4aDC8tYoyOubBI+8hw78AfBzE263JL6lNgHLtpRm87EJsyLN3RP4aSfvv4h/lTzk9Cuz3/8H</con:value></con:property><con:property><con:name>0914_pjgbasic1org3_accountoid</con:name><con:value>990200</con:value></con:property><con:property><con:name>0914_pjgbasic1org3_assertionAccountId</con:name><con:value>9E87C57F4A227E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0914_pjgbasic1org3_assertionUserId</con:name><con:value>9E9D128D12A933F3E0401F0A059901A9</con:value></con:property><con:property><con:name>0914_pjgbasic1org3_assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:9E87C57F4A227E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0914_pjgbasic1org3_assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:9E9D128D12A933F3E0401F0A059901A9</con:value></con:property><con:property><con:name>0914_pjgbasic1org3_useroid</con:name><con:value>9E7171CFE70D3F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>0912_pjgstandard1org3</con:name><con:value>2011/03/16</con:value></con:property><con:property><con:name>0912_pjgstandard1org3_assertUUID</con:name><con:value>3f0f3465-dd16-4299-abfe-b8c5eb9598e8</con:value></con:property><con:property><con:name>0912_pjgstandard1org3_assertion</con:name><con:value>nVdZc6pME773V1ieS8uwKCrWSaqGNaioIK53CAOMIiiLoL/+GzAazclZ3u8iZabp5ZnuZ3p6fsbm3qd7II5hlKAwqCrCa63pkE6z1WYatk21Gy2aZRvmxoGNTddi4IZl2C7s1qpKHKdQCeLEDJLXGk1SVINsNqi2QXV6ZLfHdF+6HWpdq85hFGPPWOWFrFXzvR/EvTLqay2Ngl5oxijuBeYexr3E6k2BOuxhzZ55g1R7+3kFWQaM3rwkOfQIwnqxoQV933qxwj3xk3jS+WnHvSlyAzNJI/gR045fax+2WZa9ZM2XMHIJmiRJgmQJrGPHyP1Re6vcjKGtBE54XfNmEAbIMn10MQtQKky80K4C3w0jlHj737imCIosXDdgbjUsqhX8qBGfAUp0/+jpCWQUm43YM6mbMx06MIKBBaszXXmt/finAl5NjcgMYieM9vGX9X9DBIMT9MMDtBvxbWM3cP/u8Ztsvf2EVk8JLD+N0QmOCpYcTAvG1UkEHZQPUYy5Z8fVsvrVPL4RDFr/pSI/iUecGDbxTWYE5MI4+X/K9Viqq5e56afwrZkSg2VL30rrTraV6uOuJZOI13PkhK8lhEflK6h7pT/WX3l6p9WHkTBSO0OCmwlLtNixMVL2ikwcfcc5cf2hrorrTFAQxSbj89Aw3CaQmJnut+trsimQ7xmbWUbOiIehtZANqSLHnRF9WfSVjaqP26iz73a6POHS7YkvC856wugt5cA6u/PYSfNsMMlWUXfHnfazZTTULzydB5TGvV+Y+dmaVoQAiTlYCOJU0JO6LIth6/VzT497KPY1gOdyk8X/S4ZkBTMx7wu+aBQOPp0JfFMVRUgvPA/OUxdkCgdc/LcFI87dHb0dktmM5ICmSUDgOX8rDlWwkwE1EzlP5edzNecvoM+5ozk2NCrAX3OqLmZCthLmmvYuZp5hy/PzRvbT9UUcqSAujXlPFXVxLuiGqKogvMpyVdjI+VadqpmirYQKdiCI+eFiy2wC5RxZtMKoU4ZeTZl0vZxjuXQe7kenjSH6Kq/K/PQoT5VNU9DEPtBXC4uWUmx7Ge4PYWU14x6M+ge4BVDKSBwTXFRjl6nGjB4JulnKjGeZqsh9VYszXit3JVfErD+fXT5zwXMqb+/FXDTA5JoLy+ClEble9mNzwQSqDjLBLY0HYmaPb0BUjcwq/DVXQzHTRX02klRdyURQygQx8+MNPfI2sneymlreN8D2sTC8Ji6kAH8P9JN1Zo4VU5bAZj+nrKbuWYhB5jLM3HU3E7RVfxCuFexmBDSR4zSAAZGg2BrOPweG3JwZHxBLIzh0pHAPvaiiUuFgd7rkZBc1x+5ktGAEZ9eZyGjSNG2PUHyL3jZ3QFGgPaA8zbT1FaFjml7a48FsCVG0uiQjRqPaqMtU9EU6Wwqh37Hfl6vZoJ6vLM0YT6azxeSS56Pjtnvxk/cx9x5N+6rgjkcQTmKrTpCmxBldgeFX71vMJ0cnIVMBrsoBIG9dV0SYwNz79krCd3xCMXmBymcyv+DlKZDluqhwgqY5kkdNLHmezqiRqoi2j9N0Xi11v7LmOQFXijQX68OKlsi1AezSmdYSJVebMfX+Eq61kW/ME5Ad5k5AUaR80N4dNXMttWCArWRTDp8irpIqYGaOD30yH8zbJHXUbL8/ZcGsmU/pXT723PV55653uCirh6OzMoA/Nx44pmCKLSqaIeoq6F7PW64qs6buW/v8sNlbuWDgmpXGocGJuqSRs1wQwOAqiw1A5/HqIm5VXiztKyBXTUyL02bpxatghMaGmGLSpg902W5o8q8cKyhWeebYkQca+Mox8coxETjHutIVqJhp84d4kbmcLB61znzYZw+kthzuKlxdItwE+a1x0M2MQX1BnbOOt9UWC1YRPL4eOCuvuUk40rxYGuzvOjLSd0LQbvlndahqzAwR/pncwmMWDysjhQrEZnKRCDZK69x+jfaXS7NFz/aTaXpSZuYgps7e5rhgs+3kvU0QkXxmLp31SZOWobW63iNfm+RdeG2jxGODferAt9Frmm620Epuy+IeVoSqhC9HM/nzGFdIkN1wStXeoZgF4wQGSe2tsCpGuF6KBz1k9/DNeV2zIit0hA7LtEieJXlOJFskJZGA7LAs0yH526x3RfEFIh8GDipiFcPs9bL+M0Br39tAM4JR7Q+eijxVlUDH00cYxNAIX2sSK1HNJkm2aE6SOqwgdRm6yzNNThDILs2xteooTMbBOAJOAqOHAbnzdUDWoYUOCBZT9McsESc4EUfzlCY+9XIyXwKY4jE7KibdHt3qMmUCCDvdHyz8AXe36BDGycvBO5TDzG+38fXbbcdYx0aFQlyA5iCuFvxmpG/dEP+yM/rb0f/mHqQ2KmYWnL4kQtYVyfOnTzYUNLhTgWQp+ob5rvpvptS3psQfEBFfk3GPZJ/QQ9zbwwTP2ngcK98jMS7a0Xw5vqSnU1qWqUOSNBFh9wRFkMQUWikeF89GuIMBcfdA/Mugfsf8Je5d/owuTbxgmuBTvseMqpbLvz/SnqxxAhKYJ9/JeB8/y4rgf3y5WT2r0MPiCf7Jwsj+zPs3vh7iYMhFh0KBW6yKCfv8XN6Pk9CzQuwV4SYVRo++v7P/Lvaz8J6uO5QEs2KTJvD3X6pF93mtmZYVpkGiCLVS8NgRS8zJ+QB7n0q/uClH3I83Sx7/9s2yVIdTy4N7s3bXRX9XbqCy8BbEVjEqsbzWcvz6xsED96EDfwB8bsLdDs90pCbfbnXEVuvehBmWpTmyeU/g007efhH/KnnI6Vdmv/0P</con:value></con:property><con:property><con:name>0912_pjgstandard1org3_accountoid</con:name><con:value>990200</con:value></con:property><con:property><con:name>0912_pjgstandard1org3_assertionAccountId</con:name><con:value>9E87C57F3C647E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0912_pjgstandard1org3_assertionUserId</con:name><con:value>9E9D7D79540C90CBE0401F0A0799570C</con:value></con:property><con:property><con:name>0912_pjgstandard1org3_assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:9E87C57F3C647E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0912_pjgstandard1org3_assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:9E9D7D79540C90CBE0401F0A0799570C</con:value></con:property><con:property><con:name>0912_pjgstandard1org3_useroid</con:name><con:value>9E7171CFE7073F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>0912_pjgbasic1org3</con:name><con:value>2011/03/16</con:value></con:property><con:property><con:name>0912_pjgbasic1org3_assertUUID</con:name><con:value>41a640ba-1796-4064-8ad2-7ed0a78d5093</con:value></con:property><con:property><con:name>0912_pjgbasic1org3_assertion</con:name><con:value>nVdZc6pME773V1iey5Rhc6+TVA2rqKgsrncII6AIyICgv/4bMBrNyVne7yJlpunlme5nenp+IvPg0z2AEIwTLwyqMv9Wa1Bmq0FuzDrV7rbqDbLVqHdMm663oU2a7Y7dJLtMrSojlEI5QIkZJG81mqSoOsnUqZZBtXtkt0e1Xlskva5V5zBG2DNWeSVr1fzgB6hXRn2rpXHQC03koV5gHiDqJVZPB8qohzV75g1S7f3nFWQZMH53kyTqEYT1akML+r71aoUH4ifxpPPTRj3dcwIzSWP4EdNGb7UP2yzLXjPmNYwdgiZJkiC7BNaxkef8qL1XbsbQloNteF1zZhAGnmX63sUsQCkwcUO7CnwnjL3EPfzGNUVQZOG6DnOrblGN4EeN+AxQovtHT08gY2TWkWtSN2ca3MIYBhaszjT5rfbjnwp4NTViM0DbMD6gL+v/hggGJ+iHEbTr6LaxG7h/9/hNtt5/QqsnB5afIu8ExwVLItOCqDqN4dbLRx7C3LNRtax+NUc3gkHrv1TkJ/GIE8MmvskM7zkQJf9PuR5LdfUyN/0Uvvsdo20N+tNm3Nb5TgcRx5nMbNV9RwdvJYRH5Suoe6U/1l95eqfVh5HBtVsNQ3OP3VmLzPv7UNFsh/D2irAyho0cMu5eD8y+u7QPuwPHbzdodLHgEG4FmAJSHvIxceTE4xh4+rgSpPleaxPTSTtjd/kgGQycwcI+EmeKbbWb0TCT2vtMJkNvk2+tLlyMJqtNdLhgNF5nepqLna4cLRqKF/QZubIVt1mixZO41ZSU6TjNdPT2uafHPRT7GsJzucni/yWmL28m5n3BFY1ii09nAt8VWebTC8eBs+6ATGaBg/92YMw6+6O796RuRrJAVUXAc6y/E0YK2EuAmgmsq3DzuZJzFzBgnfEcGxoV4K9ZRRMyPlvxc1XtC5lr2NL8vJH8dH0RxgpApTHnKoImzHnNEBQFhFdZrvAbKd8pupLJ6oqvYAe8kEcXW+omUMo9i5abit6kV3ozXS/nWC6eR4fxaWMIvsIpEqcfJV3eMLwqDIC2Wli0mGLby+gQhZXVjH0wGkRwB6CYkTgmuCjGPlOMGT3mNbOUGc8yRZYGiooyTi13JVWEbDCfXT5zwbEKZx+EXDDA9JoLy+DEMbleDpC5aAaKBjLeKY2HQmZPbkAUlcwq3DVXIyHTBG02FhVNzgRQyngh89GGHrsbyT1ZjJoPDLB7LAynCgsxwN8D7WSdm8eKKYlgc5hTFqO5ltf0zGWYOetOxqurwTBcy9jNGKgCy6oAAyJBsTWcfxaM2HlzEnld2oOjrRgeoBtXFCoc7k+XnOx4zMSZjhdNfrtvTyVvypi2S8i+Re+YPZBlaA8pVzVtbUVofOBdWpPhbAm9eHVJxk2VanmdZkVbpLMlH/ptu79czYYv+cpSjclUny2mlzwfH3edi5/0J2w/1gcK70zGEE6R9UKQpsgaHb7Jrfo7zKetRsJmBTgKC4C0cxzBwwRm+7srCfuaImDyAoXLJG7BSTqQpBdBZnlV3YouNbWkeTqjxoos2D5O03m11PzKmmN5XCnSXKyjFS2SawPYpTO1IYiOOmu+DJZwrY59Y56ALJpvA4oipUjtb5XMsZSCAbac6Sw+RWwllcHMnEQDMh/OWyR1VG1/oHfBjMl1ep9PXGd93jvrPS7K6uHorAzgz40HjsmYYouKagiaAjrX85Yr8ozRfOuQR5uDlfMGrllpHBqsoIkqOct5HgyvMmQAOkeri7BTOKG0r4BcMTEtTpuli1bB2JsYQopJmz7QZbehyb9yrKBY5ZljRw6o4CvHhCvHBLA9vsgdnkLNFhehReawknBU2/PRoBuR6nK0r7AvIuEknt+YBJ3MGL4sqHPWdnfqYtGVeZd7CbYrl9kkLGleLBUO9m3J0/Z80Gr4Z2WkqM2ZR/hncgePGRpVxjIVCExyEYlunL6wh7V3uFyYBj07TPX0JM/MIaLO7ua46Ga7ab9FELF0bl7a65MqLkNrdb1HvjbJu/DaRonHBvvUgW+jl55udtBKbsviHpb5qogvRzP58xhXSDy7vi1Ve1ExC6IEBkntvbAqRrheigc9z+7hm/O67gpdnqJximmhwzAiI5ANkhJJQDa7XZIC3dusd0XxBSIXBluviFUMs9fL+s8ArUNvA80YxrU/eCryVJUDDU8fYYCgEb7VmjxNNRia6gqdFmBaoCGyNOBERuQ7dIMlxVp1HCaTYBKDbQLjhwG5/XVA1qDlRR4spuiPWQIlOBFH85QmPvV6Ml8DmOIxOy4m3R7d6DTLBBB2eogs/AF3tzgKUfIauVE5zPx2G1+/3XaMdWyvUEAFaBbiasFvRnryhviXndHfjv439yC1vWJmwelLYs+6Inn+9MmGggZ3KpBdir5hvqv+myn1rSnxB0TE12TcI9kn7yHu7WGCZ208jpXvEYSLdjRfj6/p6ZSWZWqTJE3E2D1BESShQyvF4+LZCPcwIO4eiH8Z1O+Yv8S9y5/RpYkb6Ak+5QfMqGq5/Psj7ckaJyCBefKdjPPxs6wI/seXm9WzCj0snuKfLIztz7x/4+shDoZcdCgvcIpVMWGfn8v7cRJ6Voi9erhJhfGj7+/sv4v9LLyn6w4lwazYpAn8/Zdq0X3eaqZlhWmQyHytFDx2xBJzco5g71PpFzfliPvxZsnRb98sS2WkWy48mLW7rvd35bpXFt6C2Ap5JZa3Wo5f3zh44Dx04A+Az0240+aabZHhWo220Gg8NmGaJT9Z+bST91/Ev0oecvqV2e//Aw==</con:value></con:property><con:property><con:name>0912_pjgbasic1org3_accountoid</con:name><con:value>990200</con:value></con:property><con:property><con:name>0912_pjgbasic1org3_assertionAccountId</con:name><con:value>9E87C57F3C647E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0912_pjgbasic1org3_assertionUserId</con:name><con:value>9E9D128D12E833F3E0401F0A059901A9</con:value></con:property><con:property><con:name>0912_pjgbasic1org3_assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:9E87C57F3C647E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0912_pjgbasic1org3_assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:9E9D128D12E833F3E0401F0A059901A9</con:value></con:property><con:property><con:name>0912_pjgbasic1org3_useroid</con:name><con:value>9E7171CFE70D3F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>10_pjgfull2org3</con:name><con:value>2011/03/16</con:value></con:property><con:property><con:name>10_pjgfull2org3_assertUUID</con:name><con:value>fd997d8c-88a1-466a-aba3-7913aba3ca31</con:value></con:property><con:property><con:name>10_pjgfull2org3_assertion</con:name><con:value>nVdXk6pME773V1ieS8slial2t2qIi4oKYsA7hBFQghIE+fXfgKvrhhPeryxLp+nwTHdP88xzbPgeOQBxDKPEDYO6xL00dla/37V6ZqvXM4hWu9MxWsbWoFrdPkGVf0yDIhp1KY5TKAVxYgTJS4PECaKFUy2ioxG9Adkb4ORTp41vGvUljGLkGak84Y167ntBPKiivjTSKBiERuzGg8DwYTxIzMEcyOMB0hwYN0iN1+cryCpg9OokyXGAYeaTBU3oeeaTGfrYM/ZJ59mKB3PXDowkjeB7TCt+abzbZln2lFFPYWRjJI7jGN7HkI4Vu/avxmvtZgwtKdiF1zVrBGHgmobnFkYJSoaJE1p14Nlh5CaO/xvXBEbgpesWzM2WSbSDXw3sI0CF7h89fQIZxUYrdgzi5kyFOxjBwIT1hSq9NH79UwGvplpkBPEujPz4y/q/IYLBGXrhEVqt+LaxG7h/9/hDtl6foTmQAtNLY/cMJ2WXHA0TxvVZBHduPnZj1HtWXK+qX8/jW4NB879U5Bl7xIlgYz9khnNtGCf/T7keS3X1sjS8FL4yZ0s5+e12/8BnXGE2F3xnHpFRT1LllwrCo/IV1L3S7+uvfXpvq3ejVdMb9g/HdndGUEKwWDWpXd/S6ePbIVGiTnTRhTaF+UI0Gy3bFkmuxc4apMARGfIgY5rVXRSz/XSDN0GHiGrLZnY0RV2/WHp63gCdPyzbSehfmv09UWw3J2smOmETa093F3Irb0GPnJDH6YiLPdcoChXvk3ocY2PJT7JtDfcOxMntg+aQXXbJjOPo3svHnh73UO5rBC/VJsv/axrvc0Zi3BdsOSh26HQm8FWWJC4tWBZc5jbIJAbY6LsHE8Y+nJyDK/YznAGKIgCOZbw9P5bBQQTEgmccmV0u5ZwtwJCxJ0tkqNWAt2FkFRUn07mlorzxmaNZ4vKyFb10U/ATGcSVMevIvMovOVXjZRmEV1kuc1sx38tzOZMUnashBxyfHwtL7CdQzF2TlGh5TpP6nE436yWSC5exPzlvNd6TWVlk5ydxLm0pTuGHQNVXJimkyLYY+8ewpi+YB6PhEe4BFDIcxQSFrB0yWVuQE041Kpn2WSZL4lBW4oxVql2JNT4bLhfFRy5YRmYtn895DcyuuTA1Vpjgm/UwNlZ0IKsg4+zKeMRn1vQGRFbwrMZeczXmM5VXFxNBVqWMB5WM4zMv3pITZys6Z5NS8qEG9o+FYRV+JQToeaCezQt9qhmiALb+kjAp1TFd2jXWYWZvehmn6MNRuJGQmwlQeIZRAAKEg3JrKP8MGDNLenp0+6QLxzsh9KET1WQiHB3ORY73XGpqzyYrmtsdujPRnVGG5WCSZ5J76gAkCVojwlEMS9UxlQvcojMdLdbQjfQimdAK0XF7dE1dpYs1F3pd622tL0bNXDcVbTqbL1azIs8np32v8JK3KfMWzYcyZ08nEM5is4nhhsBoPY5m9bc96qedikO6BmyZAUDc2zbvogZm3vbXJnxTZR41L5DZTGRXrDgHotjkJYZTlJ3gEDNTXKYLYiJLvOWhNF30terVNizDoUrhxmpz1EkB32jAqpwpbV6wlQXdHK7hRpl42jIB2XG5CwgCF4/K207ObFMuO8CSsjmDThFTSyWwMKbHIZ6Plh2cOCmWN5z3wYLK5+Qhnzr25nKwNwdUFP3h6Oga8JbaQ49JqMVWNUXjVRn0ructl6UFpXqmnx+3vplzGqpZZRxqDK8KCr7IOQ6MrrJYA2Qe6wW/l1m+sq+BXDZQW5y3ayfWg4k71fgUNW360C77LYn/tcfKFqt97rETCxTwtcf4a4/xYHdqSj2OiOkOe4xXmc2I/EnpLsfD/hFX1uNDjWkKmJ24Xnsa9DJt1FwRl6zr7JXVqi9xDtsMdrpDbRMGNwpTgcNDV3TVAxd02t5FHssKvXAx74Lv4SmLx7WJRAQ8lRQC1o/SJuNvXL8oqDa58Gfz9CwtjFFMXJztadXP9rO3DoZF4oUuupuzIqxDU7++R74OybvwOkaxxwH7aQLfqNc83e6hmdyW5XtY4uoCejkayZ9pXClxrdauUh0cSy4YJzBIGq+lVUnhBikieq41QG/O67rPow/OCyzdwfkuQfF4GycEHOB0v0/zOLhxvSuKLxDZMNi5ZaySzF5f1n8GaPqDLTQiGDX+4KnMU10KVMQ+wiCGWvjSoNvtDjrGHRZvMxTeJtoU2eYQcJZo012eoxv1SZhMg2kEdgmMHghy9ytBVqHpHl1YsuiSS8SITJRAnmBu+EcPVpTCC203wGbTuVbRld8C/frstiekY7mlQlzCYiCqB/xG2rsD+obpG3byR3J/cw9Syy1ZCUpQErnmFcnnRx/1Lgt9LzaB3xDfFf/RkPhuiP0BDfY1Efc41tl9iHq7diAmjcjW660iJ+Pp9JSez2l53Rh0cZzEIuQeIzAcm0MzRWTwooUHGGB3D9i/0PA75i9x7/LP6NLECeYJOsM+6pd6tfz7FeyTNUpAAvPkJxnroUtXGfyP9zJzYJZ6SDxDP1kYWR95/8HXQxwEuZw/bmCXq5I/Xz4XN4Ap2ks0MEPk1UUjKIweff9k/1Psz8J7uu5QEtQV2zSBv39SL2fLS8MwzTANEolrVILHeVdhTi5HOPhQ+uamIrDvN5I8/u2NZC2P56YDfaNx13X/rtxyq8KbEFnFboXlpZGjuzUKHtgP8/Ud4JcRy3ICQ/XaLNvp4cTjiO3wHfKewE87ef0m/i55yOnXzn79Hw==</con:value></con:property><con:property><con:name>10_pjgfull2org3_accountoid</con:name><con:value>990200</con:value></con:property><con:property><con:name>10_pjgfull2org3_assertionAccountId</con:name><con:value>9E9CDFB384CC6801E0401F0A05996E62</con:value></con:property><con:property><con:name>10_pjgfull2org3_assertionUserId</con:name><con:value>9E9E90EFC560E713E0401F0A05995E0A</con:value></con:property><con:property><con:name>10_pjgfull2org3_assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:9E9CDFB384CC6801E0401F0A05996E62</con:value></con:property><con:property><con:name>10_pjgfull2org3_assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:9E9E90EFC560E713E0401F0A05995E0A</con:value></con:property><con:property><con:name>10_pjgfull2org3_useroid</con:name><con:value>9E7171CFE7023F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>10_pjgstandard1org3</con:name><con:value>2011/03/16</con:value></con:property><con:property><con:name>10_pjgstandard1org3_assertUUID</con:name><con:value>3b22e769-151c-46bf-8ae0-c50c68ba53b9</con:value></con:property><con:property><con:name>10_pjgstandard1org3_assertion</con:name><con:value>nVdZc6pME773V1ieS8uwKCpWkqphDSoqiAveIYwwioAsgv76b9BozHKW96tKKpmml2e6n+npeU6svU/3QJLAOEVhUFWEl1pzTdOw02YbFEPZjVZ7vWl0LUg2bIa02921xTTXbK2qJEkGlSBJrSB9qdEkRTXIZoNqG1S3R+Of5hPbJFe16hzGCfaMVZ7IWrXY+0HSu0R9qWVx0AutBCW9wNrDpJfavSlQhz2s2bNukGqvz1eQl4Dxq5emUY8g7CcH2tD37Sc73BPPxCedZyfpTZEbWGkWw/eYTvJSe7fN8/wpbz6FsUvQJEkSJEtgHSdB7q/aa+VmDB0l2ITXNW8FYYBsy0dnqwSlwtQLnSrw3TBGqbf/jWuKoMjSdQMWdsOmWsGvGvER4ILuHz19AhknViPxLOrmTIcbGMPAhtWZrrzUfv1TAa+mRmwFySaM98mX9X9DBIMj9MMIOo3ktrEbuH/3+EO2Xp+h3VMC288SdISjkiWRZcOkOonhBhVDlGDuOUn1Uv1qkdwIBu3/UpFn4hEnhk38kBkBuTBJ/59yPZbq6mVu+Rl8ZYqs2Y+lRBkSOYP47ny1ao8OkOuOzZcLhEflK6h7pd/XX3l6p9W7kcPwbusIQT1vSuYhE81C1VaukWIGxwfC60pcP+oSYmoMU8FVd4fY3USFkdTryJL6raPiFeY43VHSSiCNCj5bsUxHmeyI405drjuCIE5SdZsd8QkU1OjQ1sIwr5vegiUXhIez4K1aAz4/R3V9QE7fhvP+4NRCkrmYtCr9FI5HuR0VI0M6GCp7MrWXjz097qHc1wCeLpss/18yJCtYqXVf8GWj2ODTmcJXVVGE7Mzz4DR1Qa5wwMW/WzDi3N3B2yGZzUkOaJoEBJ7zt+JQBTsZUDOR81R+PlcL/gz6nDuaY0OjAvwVp+piLuSmMNe0NzH3DEeen9ayn63O4kgFycWY91RRF+eCboiqCsKrrFCFtVxs1amaK5opVLADQSyisyOzKZQLZNMKo04Z2pwy2Wo5x3LpNNyPjmtD9FVelfnpQZ4q66agiX2gmwubljJsex7uo7BizrgHo34EtwBKOYljgrNq7HLVmNEjQbcuMuOzTFXkvqolOa9ddiVXxLw/n50/csFzKu/sxUI0wOSaC9vgpRG5WvYTa8EEqg5ywb0YD8TcGd+AqBqZV/hrroZirov6bCSpupKL4CITxNxP1vTIW8ve0W5qRd8A28fC8Jq4kAL8PdCP9ok5VCxZAuv9nLKbumcjBlnLMHdX3VzQzP4gXCnYzQhoIsdpAAMiQbk1nH8ODLk5M44QSyM43EjhHnpxRaXCwe54Lsguao7dyWjBCJtdZyKjSdNyPELxbXrb3AFFgc6A8jTL0U1CFwJ0bo8HsyVEsXlOR4xGtVGXqeiLbLYUQr/jvC3N2aBemLZmjCfT2WJyLorRYds9++nbmHuLp31VcMcjCCeJXSdIS+KMrsDw5tsW82mjk5CpAFflAJC3risiTGDubXsl4Zuuipi8QOVzmV/w8hTIcl1UOEHTNpJHTWx5ns2okaqIjo/TdDKXul9Z8ZyAK0Vai1Vk0hK5MoBzcaa1RMnVZky9v4QrbeQb8xTk0XwTUBQpR9rbRs1dWy0Z4Cj5lMOniKtkCphZ46hPFoN5m6QOmuP3pyyYNYspvSvGnrs67dzVDhfFfDg6pgH8ufHAMQVTbFHRDFFXQfd63gpVmTV1394X0XpvF4KBa3YxDg1O1CWNnBWCAAZXWWIAukjMs7hVefFiXwGFamFaHNdLLzGDERobYoZJmz3QZbumyb9yrKRY5TPHDjzQwFeOiVeOiWBzqCtdgUqYNh8li9zlZPGgdebDPhuR2nK4q3B1iXBT5LfGQTc3BvUFdco73lZbLFhF8Ph6sDG95jrlSOtsa7C/68hI3wlBu+Wf1KGqMTNE+CdyCw95MqyMFCoQm+lZItg4q3P7Fdqfz80WPdtPptlRmVmDhDp568OCzbeTtzZBxPKJOXdWR01ahvb7PfK1Sd6F1zZKPDbYTx34NnpNs/UW2ultWd7DilCV8OVopX8e40oJchqbi2ovKmfBJIVBWnstrcoRrpfhQQ85PXxzXtesyIpcC3Q4sk12Wy1JJFskJZGA7LAsDdjmbda7ovgCkQ+DDSpjlcPs9bL+M0B731tDK4Zx7Q+eyjxVlUDH00cYJNAIX2pA5CmKlTq80O5QlMg0JVECbJtusQLLUBxdq47CdByMY7BJYfwwIHe+Dsg6tFGEYDlFl7NEgoeJEsgTLKx95MPLSOGHLgqIyXhqXMaV3wL9+u22J6zjoFIhKWFxENcD/jC0UzdM37DTPw73N/cgc1A5leAEpTGyr0g+f/qod1noe7Ep8ob4rviPhtR3Q+IPaIivibjHcY7oIert2YEnaTxsvd4qcrCeDk/Z8ZiVz41ehyRpIsbuCYogiSm0MzwMnoxwBwPi7oH4lzH8jvlL3Lv8M7os9YJpis/wHvOleln+/Qn2yRonIIVF+pOM9/Gjqwz+x3eZ3bNLPSye4D95GDsfef/B10McDLnsPyhwy1U5P58+FzeAGd5L3LND7BXhFhTGj75/sv8p9mfhPV13KClmxTpL4e+/VMve8lKzbDvMglQRahfBY7+7YE5PEex9KH1zcxlg318kRfLbF8lSHU5tD+6t2l0X/V25gS6FtyG2StAFy0utwG9rHDxwH/rrO8AvLZYXJK7ZbfF8u0tS9xbLsGxbbNP3BH7ayes38XfJQ06/Mvv1fw==</con:value></con:property><con:property><con:name>10_pjgstandard1org3_accountoid</con:name><con:value>990200</con:value></con:property><con:property><con:name>10_pjgstandard1org3_assertionAccountId</con:name><con:value>9E9CDFB384CC6801E0401F0A05996E62</con:value></con:property><con:property><con:name>10_pjgstandard1org3_assertionUserId</con:name><con:value>9E9EB4A7B060844FE0401F0A07992A93</con:value></con:property><con:property><con:name>10_pjgstandard1org3_assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:9E9CDFB384CC6801E0401F0A05996E62</con:value></con:property><con:property><con:name>10_pjgstandard1org3_assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:9E9EB4A7B060844FE0401F0A07992A93</con:value></con:property><con:property><con:name>10_pjgstandard1org3_useroid</con:name><con:value>9E7171CFE7073F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>10_pjgbasic1org3</con:name><con:value>2011/03/16</con:value></con:property><con:property><con:name>10_pjgbasic1org3_assertUUID</con:name><con:value>5de89cc9-0a2e-4ea8-bfb6-f9a828132d5a</con:value></con:property><con:property><con:name>10_pjgbasic1org3_assertion</con:name><con:value>nVdZc6rMFn33V1ieR8swKCrWSaoaaBEVFQSnN4QWUASlQdBffxuNxuTkDN99SJne7GHtgc3qn9jaB2wHYIzixI/CsiK9VjgHtXnb5mu0xaJaA1nt2nqzbtY2vNVm20yddTirUlYwTpES4sQKk9cKSzNMja7XmKbBtDss32m0XxiWX1XKMxRj4pmovNCVcr4PQty5Rn2tpHHYiSzs405o7RHuJHZnCtRhh2h2rDukytvPG8hrwPjNS5JDh6LsFwfZKAjsFzvaUz+pTzo/HdyZ+m5oJWmM3mM6+LXybptl2UtWf4lil2JpmqZoniI6DvbdH5W30t0YOUq4iW5n0Qqj0LetwL9YBSgVJV7klEHgRrGfePvfuGYohi5c11Bu12ymEf6oUB8Bruj+0dMnkDG2atizmLszHW1QjEIblU1dea38+KcG3kyN2ArxJor3+Mv5vyFC4QkF0QE5NXxP7A7u3z1+U623n8juKKEdpNg/oVExJQfLRrg8idHGz4c+JrPn4PK1++Uc3wcM2f+lIz+pZ5wENvVNZSTfRTj5f9r13Kqbl5kVpOjNNoW9PcS9k7rR1vjSzs6iPQP1rquZr1cIz8o3UI9Ov5+/zuljrN6N3Fgc9ceng+yZ0npTnSM2DeZquuejOezK3Apjf1MdGH1qkS1W+qLFAZmG6+NRPapbfcmngJqfJDHie/nEKdWb5lyeaD3Q1rPRHFop7amiXG3LaiY3aN1xLpwZaaY3Yg9NL1yaqrs1TlF13hpY4NLM4Yk+nVerwMwzJi/xeEVbdlcHZjWSemIdHeHrR07PORR5DdD5mmTx/4KjeclKrMdBLBbFhrydCXpTFUVKL6IIzlMXZIoAXPK3BSPB3R29nS/zGS0ATesCSRSCLRyqYCcDxoQCSWU2U3PxAvqCO5oRQ6MEgpWg6jCTsqU007QezDzDkWfntRykqwscqQBfjUVPhTqcSboBVRVEN1muSms536pTNVO0pVQiDiSYHy6OzCdIzn2bVTh1yrHLKZeuFjMi756H+9FpbcBAFVVZnB7lqbKuSxrsA305t9luSmwvw/0hKi1N4cmof0BbgLoZTWKCi2rsMtUw2ZGkW1eZ8VmmKnJf1XAmates5BLM+jPz8lELUVBFZw9zaIDJrRa2IXZH9GrRx9acC1UdZJJ7NR7AzBnfgaganZXEW62GMNOhbo66qq5kEFxlEswCvGZH3lr2TnZdy/sG2D43RtTgvBuS56F+ss/csWTJXbDezxi7rnu2z/nWIsrcVTuTtGV/EK0U4mYENCgIGiCAaFCkRuovgKEw48YHn2d9NNx0oz3y4pLKRIPd6ZLTbb8+diejOSdtdq2J7E/qluNRSmCz2/oOKApyBoynWY6+pHQp9C/N8cBcID9eXpIRpzFNv82V9HlqLqQoaDm9xdIcVPOlrRnjydScTy55Pjpu25cg6Y2FXjztq5I7HiE0wXaVoq2uYLQlTlz2tmSeNjqNuBJwVQEAeeu60CcDLPS2tyHs6SokwwtUMZPFuShPgSxXoSJImrbpeszElmepyYxUBToBKdN5udCD0koUJNIp2pqvDku2S68M4FydaQ1YrBau2l+glTYKjFkCssNsEzIMLR+03kbNXFstJsBRsqlA3iKhlCrAtMaHPp0PZk2aOWpO0J/ywKznU3aXjz13dd65qx1pyvLp1VkaIJgZTzOmkBGblzQD6ipo3963XFXMuh7Y+/yw3tu5ZJCeXY0jQ4B6V6PNXJLA4CbDBmBzvLzArSrCq30J5KpFxuK0Xnh4GY78sQFTMrTp07hs1yz91xkrRqz0ecaOItDA1xmDtxmDYHOsKm2JwVxTPOB55goyPGqt2bDPH2htMdyVhGqXchM/aIzDdmYMqnPmnLW8rTaf84rkidVws/Tq60SgrYutof6uJfv6TgqbjeCsDlWNM30qONNbdMzwsDRSmBDWk0uX4uO0KuxX/v5yqTdYcz+ZpifFtAaYOXvr45zPtpNek6Ji+cxdWquT1l1E9vL2Hfm6JB/C2xqlnhfspw18p17TdL1FdnI/Ft9hRSp3ycfRSv5M4wqJ79Q2V9XOoeCCOEFhUnkrrAoK10kJ0fOdDvly3s485CHgBBbUBQYIEEK6QTNdGtAtnmcZpnnnejcUXyCKUbjxi1gFmb19rP8M0N531siKUVz5g6eiTmUl1An7iEKMjOi10pLInuRaXQ6ILR5KDVAHkIMNmq+LtEC3YKU8ipJxOI7BJkHxE0FufSXIOrL9g48KFl1wCUzIRAHkBeXW/hCgK6UIItcPqcl4alzpym+Bfn12z4noOH6hgAtYAiL9QN+Q9vod0y/Y2W/J/d09SB2/YCWkQEns2zcknx999Lto9KPZDH1H/FD8R0PmV0PqD2ior4V4xHFO/lPU+7WDMGlCtt7uHTlaL8eX9HRKi+tGp0XTLBUT9xRD0dQU2Skhg2cj2qGQenig/oWGPzB/ifuQf0aXJl44Tcg7vCfzUr4e/34F+2RNCpCgPPlOJgbk0lUE/+O9zO7YhR4RT8hPFsXOR92/8fUUh0Au9o8fusWp4M/nz80NUUpyiTt2RLz6ZAVF8bPv7+y/i/1Z+CjXA0pCpmKdJuj3T8rFbnmtWLYdpWGiSJWr4HnfXTEn5wPqfCj94uZKYN9vJDn+7Y1koQ6ntof2VuWh6/9dueZfG28jYoX9K5bXSk7u1iR46D7t13eAX1asKHWFershis02zTxWLMfzTdhkHwX8lMnbL+JfJU81/TrZb/8D</con:value></con:property><con:property><con:name>10_pjgbasic1org3_accountoid</con:name><con:value>990200</con:value></con:property><con:property><con:name>10_pjgbasic1org3_assertionAccountId</con:name><con:value>9E9CDFB384CC6801E0401F0A05996E62</con:value></con:property><con:property><con:name>10_pjgbasic1org3_assertionUserId</con:name><con:value>9E9EA5B2A3B1ABEEE0401F0A07992116</con:value></con:property><con:property><con:name>10_pjgbasic1org3_assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:9E9CDFB384CC6801E0401F0A05996E62</con:value></con:property><con:property><con:name>10_pjgbasic1org3_assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:9E9EA5B2A3B1ABEEE0401F0A07992116</con:value></con:property><con:property><con:name>10_pjgbasic1org3_useroid</con:name><con:value>9E7171CFE70D3F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>55795</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Verification of STREAM_DATA row" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="16b7bf34-710d-4b66-82c1-54eb3fbff353"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="85466f64-3b26-4382-89d1-8a1cf815b540"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("nodetype",null);
tC.setPropertyValue("streamhandle",null);
tC.setPropertyValue("dbxmlresponse",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("expectDBStatus",null);
tC.setPropertyValue("expectTransactionid",null);
tC.setPropertyValue("expectNickname",null);
tC.setPropertyValue("expectJDBCSQL",null);
tC.setPropertyValue("expectDBCreatedBy",null);
tC.setPropertyValue("expectDBDeletedBy",null);
tC.setPropertyValue("expectDBCreateUser",null);
tC.setPropertyValue("expectDBDeleteUser",null);
tC.setPropertyValue("expectDBRenewedBy",null);
tC.setPropertyValue("expectDBStatus",null);
tC.setPropertyValue("expectDBCreatedByNodeType",null);
tC.setPropertyValue("expectErrTypeStreamRenew",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Calling Test Case Properties" id="2c3cd00a-139b-48aa-950c-546e94e9ca2f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("accountoid",callTC.getPropertyValue("accountoid"));
tC.setPropertyValue("useroid",callTC.getPropertyValue("useroid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("nodetype",callTC.getPropertyValue("nodetype"));
tC.setPropertyValue("streamhandle",callTC.getPropertyValue("streamhandle"));
tC.setPropertyValue("rightstokenid",callTC.getPropertyValue("rightstokenid"));
tC.setPropertyValue("expectStatus",callTC.getPropertyValue("expectStreamStatus"));
tC.setPropertyValue("expectTransactionid",callTC.getPropertyValue("expectTransactionid"));
tC.setPropertyValue("expectNickname",callTC.getPropertyValue("expectNickname"));
tC.setPropertyValue("expectDBCreatedBy",callTC.getPropertyValue("expectDBCreatedBy"));
tC.setPropertyValue("expectDBDeletedBy",callTC.getPropertyValue("expectDBDeletedBy"));
tC.setPropertyValue("expectDBStatus",callTC.getPropertyValue("expectDBStatus"));
tC.setPropertyValue("expectDBCreatedByNodeType",callTC.getPropertyValue("expectDBCreatedByNodeType"));
tC.setPropertyValue("expectDBCreateUser",callTC.getPropertyValue("expectDBCreateUser"));
tC.setPropertyValue("expectDBDeleteUser",callTC.getPropertyValue("expectDBDeleteUser"));
tC.setPropertyValue("expectDBRenewedBy",callTC.getPropertyValue("expectDBRenewedBy"));
tC.setPropertyValue("expectErrTypeStreamRenew",callTC.getPropertyValue("expectErrTypeStreamRenew"));

if (tC.getPropertyValue("expectDBStatus") == "" || tC.getPropertyValue("expectDBStatus") == null) {
		tC.setPropertyValue("expectDBStatus","deleted");
}
if (tC.getPropertyValue("expectDBCreatedByNodeType") == "" || tC.getPropertyValue("expectDBCreatedByNodeType") == null) {
		tC.setPropertyValue("expectDBCreatedByNodeType",tC.getPropertyValue("nodetype"));
}
if (tC.getPropertyValue("expectDBDeleteUser") == "" || tC.getPropertyValue("expectDBDeleteUser") == null) {
		tC.setPropertyValue("expectDBDeleteUser",tC.getPropertyValue("useroid"));
}
if (tC.getPropertyValue("expectDBCreateUser") == "" || tC.getPropertyValue("expectDBCreateUser") == null) {
		tC.setPropertyValue("expectDBCreateUser",tC.getPropertyValue("useroid"));
}
if (tC.getPropertyValue("expectErrTypeStreamRenew") == "" || tC.getPropertyValue("expectErrTypeStreamRenew") == null) {
		tC.setPropertyValue("expectErrTypeStreamRenew","SUCCESS");
}
if (tC.getPropertyValue("expectDBRenewedBy") == "" || tC.getPropertyValue("expectDBRenewedBy") == null) {
		tC.setPropertyValue("expectDBRenewedBy","");
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Assert difference between EXPIRATION_DATE and CREATED_DATE not greater 24 hours" disabled="true" id="7cf070a4-983a-4166-98c1-6474129782bc"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def streamhandle = tC.getPropertyValue("streamhandle");

a = new dbUtils.dbStreams(log);

assert a.streamHandleVerifyExpiration(streamhandle) &lt;= 24;</script></con:config></con:testStep><con:testStep type="groovy" name="Extract STREAM_DATA row" id="e12c42e4-4b47-44c1-9c7e-64d428aa03bc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());

String nodeid = tC.getPropertyValue("nodeid").toString();
String uname = tC.getPropertyValue("username").toString();
String sys = tP.getPropertyValue("targetSystem");
String sh = tC.getPropertyValue("streamhandle");
String results = null;
String accountoid = null;
String useroid = null;
String nodeUser = null;
String nodeAccount = null;
String userRowId = null;
String acctRowId = null;
String sql = """select 
to_char(rawtohex(a.STREAM_HANDLE_OID)) STREAM_HANDLE_OID,
to_char(rawtohex(a.RIGHTS_TOKEN_OID)) RIGHTS_TOKEN_OID,
to_char(rawtohex(a.ACCOUNT_OID)) ACCOUNT_OID,
to_char(rawtohex(a.USER_OID)) USER_OID,
TRANSACTION_ID,
STATUS,
STREAM_CLIENT_NICKNAME,
EXPIRATION_DATE,
CLOSED_DATE,
CLOSED_BY_ORG_ID,
CREATED_DATE,
to_char(rawtohex(a.CREATED_BY)) CREATED_BY,
UPDATED_DATE,
to_char(rawtohex(a.UPDATED_BY)) UPDATED_BY 
from STREAM_DATA a where STREAM_HANDLE_OID =hextoraw('$sh')""";

results = a.SelectFromDB(sql,sys);
log.info results;

/*
*  If zero length, no need to continue;
*/
assert results.length() > 0;

try {
	def myXML = new XmlSlurper().parseText(results);
}
catch(Throwable e) {
	log.info e; 
	assert 1 == 2;
}
finally {
	tC.setPropertyValue("dbxmlresponse", results);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify DB Row Data" id="ade07059-d8b1-4bd0-8c5d-1bb85efb3040"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def urnnode   = tP.getPropertyValue("urnNode");
def acct      = tC.getPropertyValue("nodeaccountid");

String XMLbody              = tC.getPropertyValue("dbxmlresponse");
String expectStreamHandle   = tC.getPropertyValue("streamhandle");
String expectAccountOID     = tC.getPropertyValue("accountoid");
String expectRightsToken    = tC.getPropertyValue("rightstokenid");
String expectUserOID        = tC.getPropertyValue("expectDBCreateUser");

String expectStatus         = tC.getPropertyValue("expectDBStatus");
String expectDBCreatedBy    = tC.getPropertyValue("expectDBCreatedBy");
String expectDBClosedBy = "null";
String streamCreateNodeType = tC.getPropertyValue("expectDBCreatedByNodeType");
String expectErrTypeStreamRenew = tC.getPropertyValue("expectErrTypeStreamRenew");
String expectDBUpdatedBy = tC.getPropertyValue("expectDBRenewedBy");

if (tC.getPropertyValue("expectDBDeletedBy") != null) {
	tC.setPropertyValue("expectDBClosedBy",urnnode + tC.getPropertyValue("expectDBDeletedBy"));
	
} 
expectDBClosedBy = tC.getPropertyValue("expectDBClosedBy");

String strcrtnodeid = "urn:dece:org:org:dece:"+tC.getPropertyValue("expectDBCreatedBy")
a = new dbUtils.dbNode(log);
String nodeoidcreate = a.nodeGetNodeId(strcrtnodeid);
tC.setPropertyValue("expectDBCreatedBy",nodeoidcreate);

String strdelnodeid = "urn:dece:org:org:dece:"+tC.getPropertyValue("expectDBDeletedBy")
b = new dbUtils.dbNode(log);
String nodeoiddelete = b.nodeGetNodeId(strdelnodeid);
tC.setPropertyValue("expectDBDeletedBy",nodeoiddelete);
if (expectDBUpdatedBy == "" || expectDBUpdatedBy == null) {
	expectDBUpdatedBy = "null";
}
expectDBCreatedBy    = tC.getPropertyValue("expectDBCreatedBy");
expectDBDeletedBy = tC.getPropertyValue("expectDBDeletedBy");

if (XMLbody != null) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	// Verify sizes...
	assert myXML.ResultSet.Row.STREAM_HANDLE_OID	.size() == 1;
	assert myXML.ResultSet.Row.ACCOUNT_OID.size() == 1;
	assert myXML.ResultSet.Row.RIGHTS_TOKEN_OID.size() == 1;
	assert myXML.ResultSet.Row.STATUS.size() == 1;
	assert myXML.ResultSet.Row.CREATED_BY.size() == 1;
	assert myXML.ResultSet.Row.CLOSED_BY_ORG_ID.size() == 1;
	assert myXML.ResultSet.Row.CLOSED_DATE.size() == 1;
	assert myXML.ResultSet.Row.UPDATED_DATE.size() == 1;
	assert myXML.ResultSet.Row.UPDATED_BY.size() == 1;
	
	String dbStreamHandle = myXML.ResultSet.Row.STREAM_HANDLE_OID.text();
	String dbAccountOid   = myXML.ResultSet.Row.ACCOUNT_OID.text();
	String dbRightsToken  = myXML.ResultSet.Row.RIGHTS_TOKEN_OID.text();
	String dbUserOid      = myXML.ResultSet.Row.USER_OID.text();
	String dbStatus       = myXML.ResultSet.Row.STATUS.text();
	String dbCreatedBy    = myXML.ResultSet.Row.CREATED_BY.text();
	String dbClosedBy     = myXML.ResultSet.Row.CLOSED_BY_ORG_ID.text();
	String dbClosedDate   = myXML.ResultSet.Row.CLOSED_DATE.text();
	String dbUpdatedDate  = myXML.ResultSet.Row.UPDATED_DATE.text();
	String dbUpdatedBy    = myXML.ResultSet.Row.UPDATED_BY.text();
	
	//STREAM_HANDLE_OID
	this.log.info "dbStreamHandle [$dbStreamHandle] - expectStreamHandle[$expectStreamHandle]";
	assert expectStreamHandle.toUpperCase() == dbStreamHandle;

	//ACCOUNT_OID
	this.log.info "dbAccountOid [$dbAccountOid] - expectAccountOID[$expectAccountOID]";
	assert expectAccountOID == dbAccountOid;

	//RIGHTS_TOKEN_OID
	this.log.info "dbRightsToken [$dbRightsToken] - expectRightsToken[$expectRightsToken]";
	assert dbRightsToken == expectRightsToken;

	//USER_OID
     
     if(tC.getPropertyValue("nodetype") == "llp" || tC.getPropertyValue("nodetype") == "dlp")
     {
	this.log.info "dbUserOid [$dbUserOid] - expectUserOID[$expectUserOID] - streamCreateNodeType[$streamCreateNodeType]";
	assert dbUserOid == expectUserOID;
     }
	//STATUS
	this.log.info "dbStatus [$dbStatus] - expectStatus[$expectStatus]";
	assert dbStatus == expectStatus;

	//CREATED_BY
	this.log.info "dbCreatedBy [$dbCreatedBy] - expectDBCreatedBy[$expectDBCreatedBy]";
	//assert dbCreatedBy == expectDBCreatedBy;

	//CLOSED_BY
	this.log.info "dbClosedBy [$dbClosedBy] - expectDBClosedBy[$expectDBClosedBy]";
	if (expectStatus == "active") {
		assert dbClosedBy == "null";
	} else {
		//assert dbClosedBy == expectDBClosedBy;
	}

	//CLOSED_DATE
	this.log.info "dbClosedDate [$dbClosedDate]";
	if (expectStatus == "active") {
		log.info "Asserting dbClosedDate is null";
		assert dbClosedDate == "null";
	} else {
		log.info "Asserting dbClosedDate is length()";
		assert dbClosedDate.length() > 0;
	}

	//UPDATED_DATE
	this.log.info "Asserting dbUpdatedDate is null ";
	if (expectErrTypeStreamRenew == "SUCCESS") {
		assert dbUpdatedDate == "null";
	}

	//UPDATED_BY
	this.log.info "dbUpdatedBy[$dbUpdatedBy] expectDBUpdatedBy[$expectDBUpdatedBy]";
	assert dbUpdatedBy == expectDBUpdatedBy;
	
} else {
	assert 1 == 2;
}

</script></con:config></con:testStep><con:properties><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_75125 - StreamListView - PORTAL - Active stream associated with RIGHTS_TOKEN.STATUS_ID of pending is displayed - 200 OK</con:value></con:property><con:property><con:name>sName</con:name><con:value>Portal Test Cases_P1_P2</con:value></con:property><con:property><con:name>accountoid</con:name><con:value>02B3CDD687B8516DE05305991F0ABB06</con:value></con:property><con:property><con:name>useroid</con:name><con:value>02B3ABFFA03405E4E05305991F0A8025</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value>02B3CD8F9DD85169E05305991F0A27D2</con:value></con:property><con:property><con:name>dbxmlresponse</con:name><con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <STREAM_HANDLE_OID>02B3CD8F9DD85169E05305991F0A27D2</STREAM_HANDLE_OID>
      <RIGHTS_TOKEN_OID>02B3934FBB8B29B9E05305991F0A70EC</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>02B3CDD687B8516DE05305991F0ABB06</ACCOUNT_OID>
      <USER_OID>02B3ABFFA03405E4E05305991F0A8025</USER_OID>
      <TRANSACTION_ID>1.0.1.3.S</TRANSACTION_ID>
      <STATUS>active</STATUS>
      <STREAM_CLIENT_NICKNAME>null</STREAM_CLIENT_NICKNAME>
      <EXPIRATION_DATE>2014-09-10 15:39:15.818</EXPIRATION_DATE>
      <CLOSED_DATE>null</CLOSED_DATE>
      <CLOSED_BY_ORG_ID>null</CLOSED_BY_ORG_ID>
      <CREATED_DATE>2014-09-10 09:39:15.818</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD2063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>null</UPDATED_DATE>
      <UPDATED_BY>null</UPDATED_BY>
    </Row>
  </ResultSet>
</Results>]]></con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>02B3934FBB8B29B9E05305991F0A70EC</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>expectTransactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectJDBCSQL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value>CCE44AF42FD2063BE0401F0A07991776</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">CCE44AF42FD2063BE0401F0A07991776</con:value></con:property><con:property><con:name>expectDBCreateUser</con:name><con:value>02B3ABFFA03405E4E05305991F0A8025</con:value></con:property><con:property><con:name>expectDBDeleteUser</con:name><con:value>02B3ABFFA03405E4E05305991F0A8025</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value/></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectErrTypeStreamRenew</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectStatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QC_Id</con:name><con:value>55796</con:value></con:property><con:property><con:name>expectDBClosedBy</con:name><con:value>urn:dece:org:org:dece:DLASP_CS_1</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Verification of STREAM_DATA_HISTORY row" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="fa03020f-05e5-4fa9-99be-c178ecdbb9bf"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="168eee8c-39ce-438b-84f9-d961a0c582d5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("counter",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("nodetype",null);
tC.setPropertyValue("streamhandle",null);
tC.setPropertyValue("dbxmlresponse",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("expectDBStatus",null);
tC.setPropertyValue("expectTransactionid",null);
tC.setPropertyValue("expectNickname",null);
tC.setPropertyValue("expectJDBCSQL",null);
tC.setPropertyValue("expectDBCreatedBy",null);
tC.setPropertyValue("expectDBDeletedBy",null);
tC.setPropertyValue("expectDBStatus",null);
tC.setPropertyValue("expectDBCreateUser",null);
tC.setPropertyValue("expectDBDeleteUser",null);
tC.setPropertyValue("expectDBCreatedByNodeType",null);
tC.setPropertyValue("expectDBUpdatedBy",null);
tC.setPropertyValue("expectErrTypeStreamRenew",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Calling Test Case Properties" id="a73af21e-36ff-4b12-b272-66cff5533aaa"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("accountoid",callTC.getPropertyValue("accountoid"));
tC.setPropertyValue("useroid",callTC.getPropertyValue("useroid"));
tC.setPropertyValue("counter",callTC.getPropertyValue("counter"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("nodetype",callTC.getPropertyValue("nodetype"));
tC.setPropertyValue("streamhandle",callTC.getPropertyValue("streamhandle"));
tC.setPropertyValue("rightstokenid",callTC.getPropertyValue("rightstokenid"));
tC.setPropertyValue("expectStatus",callTC.getPropertyValue("expectStreamStatus"));
tC.setPropertyValue("expectTransactionid",callTC.getPropertyValue("expectTransactionid"));
tC.setPropertyValue("expectNickname",callTC.getPropertyValue("expectNickname"));
tC.setPropertyValue("expectDBCreatedBy",callTC.getPropertyValue("expectDBCreatedBy"));
tC.setPropertyValue("expectDBDeletedBy",callTC.getPropertyValue("expectDBDeletedBy"));
tC.setPropertyValue("expectDBUpdatedBy",callTC.getPropertyValue("expectDBUpdatedBy"));
tC.setPropertyValue("expectDBStatus",callTC.getPropertyValue("expectDBStatus"));
tC.setPropertyValue("expectDBCreatedByNodeType",callTC.getPropertyValue("expectDBCreatedByNodeType"));
tC.setPropertyValue("expectDBCreateUser",callTC.getPropertyValue("expectDBCreateUser"));
tC.setPropertyValue("expectDBDeleteUser",callTC.getPropertyValue("expectDBDeleteUser"));
tC.setPropertyValue("expectErrTypeStreamRenew",callTC.getPropertyValue("expectErrTypeStreamRenew"));


if (tC.getPropertyValue("expectDBStatus") == "" || tC.getPropertyValue("expectDBStatus") == null) {
		tC.setPropertyValue("expectDBStatus","deleted");
}
if (tC.getPropertyValue("expectDBCreatedByNodeType") == "" || tC.getPropertyValue("expectDBCreatedByNodeType") == null) {
		tC.setPropertyValue("expectDBCreatedByNodeType",tC.getPropertyValue("nodetype"));
}
if (tC.getPropertyValue("expectDBDeleteUser") == "" || tC.getPropertyValue("expectDBDeleteUser") == null) {
		tC.setPropertyValue("expectDBDeleteUser",tC.getPropertyValue("useroid"));
}
if (tC.getPropertyValue("expectDBCreateUser") == "" || tC.getPropertyValue("expectDBCreateUser") == null) {
		tC.setPropertyValue("expectDBCreateUser",tC.getPropertyValue("useroid"));
}
if (tC.getPropertyValue("expectErrTypeStreamRenew") == "" || tC.getPropertyValue("expectErrTypeStreamRenew") == null) {
		tC.setPropertyValue("expectErrTypeStreamRenew","SUCCESS");
}
if (tC.getPropertyValue("expectDBUpdatedBy") == "" || tC.getPropertyValue("expectDBUpdatedBy") == null) {
		tC.setPropertyValue("expectDBUpdatedBy",tC.getPropertyValue("nodeid"));
}
</script></con:config></con:testStep><con:testStep type="jdbc" name="Extract the STREAM_DATA_HISTORY row" disabled="true" id="b54e3023-1096-466e-8e65-51aebd8266e2"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName xsi:nil="true"/><con:driver>${#Project#JDBCDriver}</con:driver><con:connectionString>${#Project#JDBCConnStr}</con:connectionString><con:password/><con:query>select * from STREAM_DATA_HISTORY where STREAM_HANDLE_OID = :sh and STATUS = :status ORDER BY UPDATED_DATE
</con:query><con:properties><con:property><con:name>sh</con:name><con:value>${#TestCase#streamhandle}</con:value></con:property><con:property><con:name>status</con:name><con:value>${#TestCase#expectDBStatus}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" disabled="true" id="778bac2e-b45f-4b14-9dee-34d6ba859e32"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" useXQuery="false" entitize="false" transferChildNodes="false" ignoreEmpty="false" transferToAll="false"><con:name>a</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Extract the STREAM_DATA_HISTORY row</con:sourceStep><con:targetType>dbxmlresponse</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Extract STREAM_DATA_HISTORY row" id="5c17186d-9ba7-4316-ac3f-c24eecef636d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());

String nodeid = tC.getPropertyValue("nodeid").toString();
String uname = tC.getPropertyValue("username").toString();
String sys = tP.getPropertyValue("targetSystem");
String sh = tC.getPropertyValue("streamhandle");
String status = tC.getPropertyValue("expectDBStatus");
String results = null;
String accountoid = null;
String useroid = null;
String nodeUser = null;
String nodeAccount = null;
String userRowId = null;
String acctRowId = null;
String sql = """select 
to_char(rawtohex(a.STREAM_HISTORY_OID)) STREAM_HISTORY_OID,
to_char(rawtohex(a.STREAM_HANDLE_OID)) STREAM_HANDLE_OID,
to_char(rawtohex(a.RIGHTS_TOKEN_OID)) RIGHTS_TOKEN_OID,
to_char(rawtohex(a.ACCOUNT_OID)) ACCOUNT_OID,
to_char(rawtohex(a.USER_OID)) USER_OID,
TRANSACTION_ID,
STATUS,
STREAM_CLIENT_NICKNAME,
EXPIRATION_DATE,
CLOSED_DATE,
CLOSED_BY_ORG_ID,
CREATED_DATE,
to_char(rawtohex(a.CREATED_BY)) CREATED_BY,
UPDATED_DATE,
to_char(rawtohex(a.UPDATED_BY)) UPDATED_BY 
from STREAM_DATA_HISTORY a where STREAM_HANDLE_OID =hextoraw('$sh') 
 and STATUS = '$status'""";

results = a.SelectFromDB(sql,sys);
log.info results;

/*
*  If zero length, no need to continue;
*/
assert results.length() > 0;


try {
	def myXML = new XmlSlurper().parseText(results);
	log.info "myXML.ResultSet.Row.size() is [" + myXML.ResultSet.Row.size() + "]";
	assert myXML.ResultSet.Row.size() >= 1;
}
catch(Throwable e) {
	log.info e; 
	assert 1 == 2;
}
finally {
	tC.setPropertyValue("dbxmlresponse", results);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify DB Row Data" id="9e5551c4-0dcb-4ff1-a068-0357928f5f2e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def urnnode   = tP.getPropertyValue("urnNode");
def acct      = tC.getPropertyValue("nodeaccountid");

String XMLbody = tC.getPropertyValue("dbxmlresponse");
String expectStreamHandle = tC.getPropertyValue("streamhandle");
String expectAccountOID   = tC.getPropertyValue("accountoid");
String expectRightsToken  = tC.getPropertyValue("rightstokenid");
String expectUserOID      = tC.getPropertyValue("expectDBCreateUser");
String expectStatus       = tC.getPropertyValue("expectDBStatus");
String expectDBCreatedBy  = tC.getPropertyValue("expectDBCreatedBy");
String expectDBUpdatedBy  = tC.getPropertyValue("expectDBUpdatedBy");
String expectDBClosedBy   = urnnode + tC.getPropertyValue("expectDBDeletedBy");
String streamCreateNodeType     = tC.getPropertyValue("expectDBCreatedByNodeType");
String expectErrTypeStreamRenew = tC.getPropertyValue("expectErrTypeStreamRenew");
int    counter = tC.getPropertyValue("counter").toInteger();

if (expectErrTypeStreamRenew == "SUCCESS") {
	counter++;
} else {
	expectDBUpdatedBy = "";
}

if (XMLbody != null) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	// Verify sizes...
	this.log.info "Row size is " + myXML.ResultSet.Row.size() + " counter[$counter]";
	assert myXML.ResultSet.Row.size() == counter;
	assert myXML.ResultSet.Row.STREAM_HISTORY_OID.size() == counter;
	assert myXML.ResultSet.Row.STREAM_HANDLE_OID	.size() == counter;
	assert myXML.ResultSet.Row.ACCOUNT_OID.size() == counter;
	assert myXML.ResultSet.Row.RIGHTS_TOKEN_OID.size() == counter;
	assert myXML.ResultSet.Row.STATUS.size() == counter;
	assert myXML.ResultSet.Row.CREATED_BY.size() == counter;
	assert myXML.ResultSet.Row.CLOSED_BY_ORG_ID.size() == counter;
	assert myXML.ResultSet.Row.CLOSED_DATE.size() == counter;

	for (int i = 0; i &lt; counter; i++) {
		this.log.info "----ROW [$i] ----";
		String dbStreamHandle = myXML.ResultSet.Row[i].STREAM_HANDLE_OID.text();
		String dbAccountOid   = myXML.ResultSet.Row[i].ACCOUNT_OID.text();
		String dbRightsToken  = myXML.ResultSet.Row[i].RIGHTS_TOKEN_OID.text();
		String dbUserOid      = myXML.ResultSet.Row[i].USER_OID.text();
		String dbStatus       = myXML.ResultSet.Row[i].STATUS.text();
		String dbCreatedBy    = myXML.ResultSet.Row[i].CREATED_BY.text();
		String dbClosedBy     = myXML.ResultSet.Row[i].CLOSED_BY_ORG_ID.text();
		String dbClosedDate   = myXML.ResultSet.Row[i].CLOSED_DATE.text();
		String dbUpdatedBy    = myXML.ResultSet.Row[i].UPDATED_BY.text();
		String dbUpdatedDate  = myXML.ResultSet.Row[i].UPDATED_DATE.text();
	
		//STREAM_HANDLE_OID
		this.log.info "dbStreamHandle [$dbStreamHandle] - expectStreamHandle[$expectStreamHandle]";
		assert expectStreamHandle.toUpperCase() == dbStreamHandle;

		//ACCOUNT_OID
		this.log.info "dbAccountOid [$dbAccountOid] - expectAccountOID[$expectAccountOID]";
		assert expectAccountOID == dbAccountOid;

		//RIGHTS_TOKEN_OID
		this.log.info "dbRightsToken [$dbRightsToken] - expectRightsToken[$expectRightsToken]";
		assert dbRightsToken == expectRightsToken;

		//USER_OID
		this.log.info "dbUserOid [$dbUserOid] - expectUserOID[$expectUserOID]";
		if (streamCreateNodeType == "llpcs" || streamCreateNodeType == "dlpcs") {
			assert dbUserOid == "";
		} else {
			assert dbUserOid == expectUserOID;
		}

		//STATUS
		this.log.info "dbStatus [$dbStatus] - expectStatus[$expectStatus]";
		assert dbStatus == expectStatus;

		//CREATED_BY
		this.log.info "dbCreatedBy [$dbCreatedBy] - expectDBCreatedBy[$expectDBCreatedBy]";
		assert dbCreatedBy == expectDBCreatedBy;

		//CLOSED_BY
		this.log.info "dbClosedBy [$dbClosedBy] - expectDBClosedBy[$expectDBClosedBy]";
		if (expectStatus == "active") {
			assert dbClosedBy == "";
		} else {
			assert dbClosedBy == expectDBClosedBy;
		}

		//CLOSED_DATE
		this.log.info "dbClosedDate [$dbClosedDate]";
		if (expectStatus == "active") {
			assert dbClosedBy == "";
		} else {
			assert dbClosedBy.length() > 0;
		}

		//UPDATED_BY and UPDATED_DATE
		/*
		*  The last row returned will always be the history row that 
		*  StreamCreate made.  Thus, the UPDATED_BY should always be
		*  NULL
		*/
		this.log.info "i[$i] - dbUpdatedDate length [" + dbUpdatedDate.length() + "]";
		if (i == counter - 1) {
			expectDBUpdatedBy = "";
			assert dbUpdatedDate.length() == 0;			
		} else {
			expectDBUpdatedBy = tC.getPropertyValue("expectDBUpdatedBy");
			assert dbUpdatedDate.length() > 0;			
		}
		this.log.info "dbUpdatedDate[$dbUpdatedDate]";
		this.log.info "dbUpdatedBy[$dbUpdatedBy] - expectDBUpdatedBy[$expectDBUpdatedBy]";
		assert dbUpdatedBy == expectDBUpdatedBy;
	}
} else {
	assert 1 == 2;
}

</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>TC_DECE_02010 - StreamRenew - DLPCS - Two stream renewals allowed for a stream</con:value></con:property><con:property><con:name>sName</con:name><con:value>LASP Dynamic (DLPCS) Customer Service Test Cases</con:value></con:property><con:property><con:name>accountoid</con:name><con:value>0900</con:value></con:property><con:property><con:name>useroid</con:name><con:value>0600</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value>9904BDD1BD5DCB6DE0401F0A0599071B</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>9116</con:value></con:property><con:property><con:name>expectTransactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectJDBCSQL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectSQLwithTransaction</con:name><con:value><![CDATA[<Results>    <ResultSet fetchSize="10">      <Row rowNumber="1">        <STREAM_HISTORY_OID>*</STREAM_HISTORY_OID>        <STREAM_HANDLE_OID>${#TestCase#streamhandle}</STREAM_HANDLE_OID>        <RIGHTS_TOKEN_OID>${#TestCase#rightstokenid}</RIGHTS_TOKEN_OID>        <ACCOUNT_OID>${#TestCase#accountoid}</ACCOUNT_OID>        <USER_OID>${#TestCase#useroid}</USER_OID>        <TRANSACTION_ID>${#TestCase#expectTransactionid}</TRANSACTION_ID>        <STATUS>${#TestCase#expectStatus}</STATUS>        <STREAM_CLIENT_NICKNAME/>        <EXPIRATION_DATE>*</EXPIRATION_DATE>        <CLOSED_DATE/>        <CLOSED_BY_ORG_ID/>        <CREATED_DATE>*</CREATED_DATE>        <CREATED_BY>${#TestCase#nodeid}</CREATED_BY>        <UPDATED_BY/>        <UPDATED_DATE/>      </Row>    </ResultSet>  </Results>]]></con:value></con:property><con:property><con:name>expectSQLDefault</con:name><con:value><![CDATA[<Results>    <ResultSet fetchSize="10">      <Row rowNumber="1">        <STREAM_HISTORY_OID>*</STREAM_HISTORY_OID>        <STREAM_HANDLE_OID>${#TestCase#streamhandle}</STREAM_HANDLE_OID>        <RIGHTS_TOKEN_OID>${#TestCase#rightstokenid}</RIGHTS_TOKEN_OID>        <ACCOUNT_OID>${#TestCase#accountoid}</ACCOUNT_OID>        <USER_OID>${#TestCase#useroid}</USER_OID>        <TRANSACTION_ID/>        <STATUS>${#TestCase#expectStatus}</STATUS>        <STREAM_CLIENT_NICKNAME>${#TestCase#expectNickname}</STREAM_CLIENT_NICKNAME>        <EXPIRATION_DATE>*</EXPIRATION_DATE>        <CLOSED_DATE/>        <CLOSED_BY_ORG_ID/>        <CREATED_DATE>*</CREATED_DATE>        <CREATED_BY>${#TestCase#nodeid}</CREATED_BY>        <UPDATED_BY/>        <UPDATED_DATE/>      </Row>    </ResultSet>  </Results>]]></con:value></con:property><con:property><con:name>expectSQLwithNickname</con:name><con:value><![CDATA[<Results>    <ResultSet fetchSize="10">      <Row rowNumber="1">        <STREAM_HISTORY_OID>*</STREAM_HISTORY_OID>        <STREAM_HANDLE_OID>${#TestCase#streamhandle}</STREAM_HANDLE_OID>        <RIGHTS_TOKEN_OID>${#TestCase#rightstokenid}</RIGHTS_TOKEN_OID>        <ACCOUNT_OID>${#TestCase#accountoid}</ACCOUNT_OID>        <USER_OID>${#TestCase#useroid}</USER_OID>        <TRANSACTION_ID/>        <STATUS>${#TestCase#expectStatus}</STATUS>        <STREAM_CLIENT_NICKNAME>${#TestCase#expectNickname}</STREAM_CLIENT_NICKNAME>       <EXPIRATION_DATE>*</EXPIRATION_DATE>        <CLOSED_DATE/>        <CLOSED_BY_ORG_ID/>        <CREATED_DATE>*</CREATED_DATE>        <CREATED_BY>${#TestCase#nodeid}</CREATED_BY>        <UPDATED_BY/>        <UPDATED_DATE/>      </Row>    </ResultSet>  </Results>]]></con:value></con:property><con:property><con:name>expectSQLDefaultLLP</con:name><con:value><![CDATA[<Results>     <ResultSet fetchSize="10">         <Row rowNumber="1">             <STREAM_HISTORY_OID>*</STREAM_HISTORY_OID>             <STREAM_HANDLE_OID>${#TestCase#streamhandle}</STREAM_HANDLE_OID>             <RIGHTS_TOKEN_OID>${#TestCase#rightstokenid}</RIGHTS_TOKEN_OID>             <ACCOUNT_OID>${#TestCase#accountoid}</ACCOUNT_OID>             <USER_OID/>             <TRANSACTION_ID/>             <STATUS>deleted</STATUS>             <STREAM_CLIENT_NICKNAME/>             <EXPIRATION_DATE>*</EXPIRATION_DATE>             <CLOSED_DATE>*</CLOSED_DATE>             <CLOSED_BY_ORG_ID>${#Project#urnNode}${#TestCase#expectDBDeletedBy}</CLOSED_BY_ORG_ID>             <CREATED_DATE>*</CREATED_DATE>             <CREATED_BY>${#TestCase#expectDBCreatedBy}</CREATED_BY>             <UPDATED_BY/>             <UPDATED_DATE/>         </Row>     </ResultSet> </Results>]]></con:value></con:property><con:property><con:name>nodetype</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectSQLwithTransactionLLP</con:name><con:value><![CDATA[<Results>    <ResultSet fetchSize="10">      <Row rowNumber="1">        <STREAM_HISTORY_OID>*</STREAM_HISTORY_OID>        <STREAM_HANDLE_OID>${#TestCase#streamhandle}</STREAM_HANDLE_OID>        <RIGHTS_TOKEN_OID>${#TestCase#rightstokenid}</RIGHTS_TOKEN_OID>        <ACCOUNT_OID>${#TestCase#accountoid}</ACCOUNT_OID>        <USER_OID/>        <TRANSACTION_ID>${#TestCase#expectTransactionid}</TRANSACTION_ID>        <STATUS>${#TestCase#expectStatus}</STATUS>        <STREAM_CLIENT_NICKNAME/>        <EXPIRATION_DATE>*</EXPIRATION_DATE>        <CLOSED_DATE/>        <CLOSED_BY_ORG_ID/>        <CREATED_DATE>*</CREATED_DATE>        <CREATED_BY>${#TestCase#nodeid}</CREATED_BY>        <UPDATED_BY/>        <UPDATED_DATE/>      </Row>    </ResultSet>  </Results>]]></con:value></con:property><con:property><con:name>expectSQLwithNicknameLLP</con:name><con:value><![CDATA[<Results>    <ResultSet fetchSize="10">      <Row rowNumber="1">        <STREAM_HISTORY_OID>*</STREAM_HISTORY_OID>        <STREAM_HANDLE_OID>${#TestCase#streamhandle}</STREAM_HANDLE_OID>        <RIGHTS_TOKEN_OID>${#TestCase#rightstokenid}</RIGHTS_TOKEN_OID>        <ACCOUNT_OID>${#TestCase#accountoid}</ACCOUNT_OID>        <USER_OID/>       <TRANSACTION_ID/>        <STATUS>${#TestCase#expectStatus}</STATUS>        <STREAM_CLIENT_NICKNAME>${#TestCase#expectNickname}</STREAM_CLIENT_NICKNAME>       <EXPIRATION_DATE>*</EXPIRATION_DATE>        <CLOSED_DATE/>        <CLOSED_BY_ORG_ID/>        <CREATED_DATE>*</CREATED_DATE>        <CREATED_BY>${#TestCase#nodeid}</CREATED_BY>        <UPDATED_BY/>        <UPDATED_DATE/>      </Row>    </ResultSet>  </Results>]]></con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value>9116</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9116</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>dbxmlresponse</con:name><con:value><![CDATA[<Results>
    <ResultSet fetchSize="10">
        <Row rowNumber="1">
            <STREAM_HISTORY_OID>9904BDD1BD63CB6DE0401F0A0599071B</STREAM_HISTORY_OID>
            <STREAM_HANDLE_OID>9904BDD1BD5DCB6DE0401F0A0599071B</STREAM_HANDLE_OID>
            <RIGHTS_TOKEN_OID>9904BDD1BD4CCB6DE0401F0A0599071B</RIGHTS_TOKEN_OID>
            <ACCOUNT_OID>0900</ACCOUNT_OID>
            <USER_OID>0600</USER_OID>
            <TRANSACTION_ID/>
            <STATUS>active</STATUS>
            <STREAM_CLIENT_NICKNAME/>
            <EXPIRATION_DATE>2011-01-05 06:59:37</EXPIRATION_DATE>
            <CLOSED_DATE/>
            <CLOSED_BY_ORG_ID/>
            <CREATED_DATE>2011-01-04 13:05:33.241</CREATED_DATE>
            <CREATED_BY>9116</CREATED_BY>
            <UPDATED_BY>9116</UPDATED_BY>
            <UPDATED_DATE>2011-01-04 13:05:39.87</UPDATED_DATE>
        </Row>
        <Row rowNumber="2">
            <STREAM_HISTORY_OID>9904BDD1BD5ECB6DE0401F0A0599071B</STREAM_HISTORY_OID>
            <STREAM_HANDLE_OID>9904BDD1BD5DCB6DE0401F0A0599071B</STREAM_HANDLE_OID>
            <RIGHTS_TOKEN_OID>9904BDD1BD4CCB6DE0401F0A0599071B</RIGHTS_TOKEN_OID>
            <ACCOUNT_OID>0900</ACCOUNT_OID>
            <USER_OID>0600</USER_OID>
            <TRANSACTION_ID/>
            <STATUS>active</STATUS>
            <STREAM_CLIENT_NICKNAME/>
            <EXPIRATION_DATE>2011-01-05 13:05:33.242</EXPIRATION_DATE>
            <CLOSED_DATE/>
            <CLOSED_BY_ORG_ID/>
            <CREATED_DATE>2011-01-04 13:05:33.241</CREATED_DATE>
            <CREATED_BY>9116</CREATED_BY>
            <UPDATED_BY/>
            <UPDATED_DATE/>
        </Row>
    </ResultSet>
</Results>
]]></con:value></con:property><con:property><con:name>expectStatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value>9904BDD1BD4CCB6DE0401F0A0599071B</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectDBCreateUser</con:name><con:value>0600</con:value></con:property><con:property><con:name>expectDBDeleteUser</con:name><con:value>0600</con:value></con:property><con:property><con:name>counter</con:name><con:value>1</con:value></con:property><con:property><con:name>expectErrTypeStreamRenew</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectDBUpdatedBy</con:name><con:value>9116</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>55797</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Rename Test Cases" searchProperties="true" disabled="true" id="b5528468-1e2f-49b1-9c00-41edb6ffb4da"><con:settings/><con:testStep type="groovy" name="Rename Test Cases" id="dd95b578-10bc-485b-bf44-b252e30d3887"><con:settings/><con:config><script>//Copyright (c) 2010 Bhavin Bharat Joshi - Neustar, Inc.

import java.io.*;

//TestCase
def testCase  = testRunner.getTestCase();

//Get Arguments
//def testSuite = testCase.getPropertyValue("TestSuite"); 
def testSuite = "Coordinator Customer Support Test Cases";

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

def TCNum = 13;

//BufferedWriter bufferedWriter = null;
//bufferedWriter = new BufferedWriter(new FileWriter("c:\\DiscreteMediaLeaseCreateQuestions.txt"));

def oldTestCaseName;
def newTestCaseName;

for(i = 0; i &lt;= TCCount - 1; i++)
{	
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
	//if(targetTestCase.isDisabled() == false)
	//{
		targetTestCase.setFailOnError(true);
		oldTestCaseName = TCList[i].name;
		//newTestCaseName = oldTestCaseName.replace(" ", "");
		//newTestCaseName = newTestCaseName.replace("_POST_", "_GET_");
		//newTestCaseName = newTestCaseName.replace("_RTL_", "_RTL_CS_");
		newTestCaseName = oldTestCaseName.replace(" DECECS ", " COORDINATORCS ");	
		/*	
		if (TCNum.toString().length() == 1)
			newTestCaseName = "TC_DECE_0000" + TCNum.toString() + "_PolicyCreate" + newTestCaseName.split("PolicyCreate")[1]
		else if (TCNum.toString().length() == 2)
			newTestCaseName = "TC_DECE_000" + TCNum.toString() + "_PolicyCreate" + newTestCaseName.split("PolicyCreate")[1]
		else if (TCNum.toString().length() == 3)
			newTestCaseName = "TC_DECE_00" + TCNum.toString() + "_PolicyCreate" + newTestCaseName.split("PolicyCreate")[1]
		else if (TCNum.toString().length() == 4)
			newTestCaseName = "TC_DECE_0" + TCNum.toString() + "_PolicyCreate" + newTestCaseName.split("PolicyCreate")[1]
			*/
		targetTestCase.name = newTestCaseName;	
		TCNum = TCNum + 1;
		log.info "Done renaming Test Case '" + oldTestCaseName + "' to '" + newTestCaseName + "'";
	//}
	//else
	//{
	//	bufferedWriter.write(targetTestCase.name);
	//	bufferedWriter.newLine();
	//}
}

//if (bufferedWriter != null) {
	//bufferedWriter.flush();
     //bufferedWriter.close();
//}

log.info 'Woohoo!'
</script></con:config></con:testStep><con:properties><con:property><con:name>TestSuite</con:name><con:value>PERM_ACCOUNT_CONSENT_POLICIES</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Set a Property" searchProperties="true" disabled="true" id="bf89058c-9858-41d7-9ab8-a891e38969fd"><con:settings/><con:testStep type="groovy" name="Set a Property" id="051664b1-d32d-4d97-9b69-ba4f520ae16e"><con:settings/><con:config><script>//Copyright (c) 2010 Bhavin Bharat Joshi - Neustar, Inc.

//TestCase
def testCase  = testRunner.getTestCase();

//Get Arguments
//def testSuite = testCase.getPropertyValue("TestSuite"); 
def testSuite = "Portal (PORTAL) Test Cases";
def propertyName;

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

for(i = 0; i &lt;= TCCount - 1; i++)
{	
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);	
	propertyName = testCase.getPropertyValue("PropertyName");	
	propertyValue = testCase.getPropertyValue("PropertyValue");		
	if(targetTestCase.isDisabled() == false)
	{
		try
		{
			//nodeRole = targetTestCase.getPropertyValue("ErrorResponse");
			propertyName != "aaaaaa";			
			/*if(nodeRole == 'ForbiddenRightsTokenAccessNotAllowed')
			{
				nodeRole = 'ForbiddenDiscreteMediaRightOwnerMismatch';
			}
			*/
			propertyValue = null
			targetTestCase.setPropertyValue(propertyName, propertyValue);
			log.info "Done with Test Case '" + TCList[i].name + "'";
		}
		catch(Throwable e)
		{
			log.info e.text;
		}		
	}	
}

log.info 'Woohoo!'
</script></con:config></con:testStep><con:properties><con:property><con:name>TestSuite</con:name><con:value>FUNC_USER_CONSENT_POLICIES</con:value></con:property><con:property><con:name>PropertyName</con:name><con:value>NumberOfPolicyRequestingEntities</con:value></con:property><con:property><con:name>PropertyValue</con:name><con:value>1</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Change a step's script for all Steps in a Suite" searchProperties="true" disabled="true" id="2b8f2103-dbd8-4771-ac65-796a1f982492"><con:settings/><con:testStep type="groovy" name="Change a step's script for all Steps in a Suite" id="fd196d1f-097d-4e8f-8a5b-5a215071f852"><con:settings/><con:config><script>//Copyright (c) 2010 Bhavin Bharat Joshi - Neustar, Inc.

//TestCase
def testCase  = testRunner.getTestCase();

//Get Arguments
def testSuite = "Authentication and Authorization"; 

def oldString = """tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid20").toString());""";
def newString = """tC.setPropertyValue("nodeid","5440");""";

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

for(i = 0; i &lt;= TCCount - 1; i++)
{			
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
	testStepList = targetTestCase.getTestStepList();
	testStepCount = targetTestCase.getTestStepCount();
	if(targetTestCase.isDisabled() == false)
	{
		for(j = 0; j &lt;= testStepCount - 1; j++)
		{
			try
			{
				def testStepName = testStepList[j].name;
				
				if (testStepName == "Establish Requesting Entity Environment") {
					log.info "Hit!";
					targetTestStep = targetTestCase.getTestStepByName(testStepList[j].name);
					
					stepScript = testStepList[j].getScript();
				
					/*
					*  Delete a step
					*/
					//targetTestStep.delete();

					/*
					*  Replaces step's script completely
					*/
					stepScript = """import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
""";
					targetTestStep.setScript(stepScript);		

					/*
					*  Replace a part of the script
					*/
					//stepScript = stepScript.replace(oldString, newString);
					//targetTestStep.setScript(stepScript);		
				}
				
				//targetTestStep = targetTestCase.getTestStepByName(testStepList[j].name);
				//stepScript = testStepList[j].getScript();
				//stepScript = stepScript.replace(oldString, newString);
				//targetTestStep.setScript(stepScript);		
			}
			catch(Throwable e)
			{
				log.info e;
			}	
		}
	}
}						
log.info 'Woohoo!'
</script></con:config></con:testStep><con:testStep type="groovy" name="change test case script" id="b9d3fc0a-a4e3-49e5-bf49-aa96eb39a7fe"><con:settings/><con:config><script>//Copyright (c) 2010 Bhavin Bharat Joshi - Neustar, Inc.

//TestCase
//def testCase  = testRunner.getTestCase();

//Get Arguments
def testSuite = "Coordinator Customer Support Test Cases"; 

def oldString = """tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid40").toString());""";
def newString = """tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid50").toString());""";

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

for(i = 0; i &lt;= TCCount - 1; i++)
{			
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
	testStepList = targetTestCase.getTestStepList();
	testStepCount = targetTestCase.getTestStepCount();
	if(targetTestCase.isDisabled() == false)
	{
		for(j = 0; j &lt;= testStepCount - 1; j++)
		{
			try
			{
				def testStepName = testStepList[j].name;
				
				if (testStepName == "Establish Entity Authentication Context to DECECS") {
					log.info "Hit!";
					targetTestStep = targetTestCase.getTestStepByName(testStepList[j].name);
					stepScript = testStepList[j].getScript();
					stepScript = stepScript.replace(oldString, newString);
					targetTestStep.setScript(stepScript);		

					/*
					*  Delete a step
					*/
					//targetTestCase.removeTestStep(targetTestStep);

					/*
					*  Replaces step's script completely
					*/
					//stepScript = """""";
					//targetTestStep.setScript(stepScript);		
				}

			}
			catch(Throwable e)
			{
				log.info e;
			}	
		}
	}
}						
log.info 'Woohoo!'</script></con:config></con:testStep><con:properties><con:property><con:name>TestSuite</con:name><con:value>RTL_CS</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Remove a Property" searchProperties="true" disabled="true" id="b97014b3-1335-47fe-8e5e-a07b3002ec7b"><con:settings/><con:testStep type="groovy" name="Remove a Property" id="84fd1c5b-f8d6-494a-9b66-8bb48647b588"><con:settings/><con:config><script>//Copyright (c) 2010 Bhavin Bharat Joshi - Neustar, Inc.

//TestCase
def testCase  = testRunner.getTestCase();

//Get Arguments
//def testSuite = testCase.getPropertyValue("TestSuite"); 
def testSuite = "Portal Customer Support Test Cases";
def propertyName;

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

for(i = 0; i &lt;= TCCount - 1; i++)
{	
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);	

	for( prop in targetTestCase.properties) {
		/*
		*  This will remove all test case properties
		*/
   		//targetTestCase.removeProperty( prop.value.name )
   		log.info "prop.value.name is " + prop.value.name;
   		if (prop.value.name == "cid" || prop.value.name == "alid") {
   			log.info "Removing " + prop.value.name;
   			targetTestCase.removeProperty( prop.value.name )
   		}
   	}
}
/*	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	propertyName = testCase.getPropertyValue("PropertyName");	
	propertyValue = testCase.getPropertyValue("PropertyValue");		
	if(targetTestCase.isDisabled() == false)
	{
		try
		{
			//nodeRole = targetTestCase.getPropertyValue("ErrorResponse");
			propertyName = "synced";			
			/*if(nodeRole == 'ForbiddenRightsTokenAccessNotAllowed')
			{
				nodeRole = 'ForbiddenDiscreteMediaRightOwnerMismatch';
			}
			*/
			/*
			propertyValue = null
			targetTestCase.setPropertyValue(propertyName, propertyValue);
			log.info "Done with Test Case '" + TCList[i].name + "'";
		}
		catch(Throwable e)
		{
			log.info e.text;
		}		
	}	
}
*/
log.info 'Woohoo!'
</script></con:config></con:testStep><con:properties><con:property><con:name>TestSuite</con:name><con:value>FUNC_USER_CONSENT_POLICIES</con:value></con:property><con:property><con:name>PropertyName</con:name><con:value>NumberOfPolicyRequestingEntities</con:value></con:property><con:property><con:name>PropertyValue</con:name><con:value>1</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Remove a Step for all Testcases in a Suite" searchProperties="true" disabled="true" id="91cd50be-351d-427a-b4b9-a9b00d06fcdd"><con:settings/><con:testStep type="groovy" name="Change a step's script for all Steps in a Suite" id="3b912db5-0566-4469-b654-cc1a837911af"><con:settings/><con:config><script>//Copyright (c) 2010 Bhavin Bharat Joshi - Neustar, Inc.

//TestCase
def testCase  = testRunner.getTestCase();

//Get Arguments
def testSuite = "Portal (PORTAL) Test Cases"; 
def stepName  = "Change context to DECE";

def TCList  = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

for(i = 0; i &lt;= TCCount - 1; i++)
{			
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
	testStepList  = targetTestCase.getTestStepList();
	testStepCount = targetTestCase.getTestStepCount();
	if(targetTestCase.isDisabled() == false)
	{
		for(j = 0; j &lt;= testStepCount - 1; j++)
		{
			try
			{
				if (testStepList[j].name == stepName) {
					log.info "Removing Step " + testStepList[j].name;
					targetTestStep = targetTestCase.getTestStepByName(testStepList[j].name);
					targetTestCase.removeTestStep(targetTestStep);
				}
				
				//stepScript = testStepList[j].getScript();
				//stepScript = stepScript.replace(oldString, newString);
				//targetTestStep.setScript(stepScript);		
			}
			catch(Throwable e)
			{
				log.info "ERROR:" + e;
			}	
		}
	}
}						
log.info 'Woohoo!'
</script></con:config></con:testStep><con:properties><con:property><con:name>TestSuite</con:name><con:value>RTL_CS</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Rename a Step" searchProperties="true" disabled="true" id="9885ed0d-f34d-4d38-89b7-09b12e3b5f16"><con:settings/><con:testStep type="groovy" name="Change a step's script for all Steps in a Suite" id="47fb0ed5-ca7a-4188-bb6b-99c44e0f242e"><con:settings/><con:config><script>//Copyright (c) 2010 Bhavin Bharat Joshi - Neustar, Inc.

//TestCase
def testCase  = testRunner.getTestCase();

//Get Arguments
def testSuite = "Coordinator Customer Support Test Cases"; 
def stepName  = "Establish Entity Authentication Context to DECECS";
def stepNewName  = "Establish Entity Authentication Context to COORDINATORCS";

def TCList  = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

for(i = 0; i &lt;= TCCount - 1; i++)
{			
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
	testStepList  = targetTestCase.getTestStepList();
	testStepCount = targetTestCase.getTestStepCount();
	if(targetTestCase.isDisabled() == false)
	{
		for(j = 0; j &lt;= testStepCount - 1; j++)
		{
			try
			{
				if (testStepList[j].name == stepName) {
					log.info "Renaming Step " + testStepList[j].name;
					targetTestStep = targetTestCase.getTestStepByName(testStepList[j].name);
					targetTestStep.name = stepNewName;
				}
				
				//stepScript = testStepList[j].getScript();
				//stepScript = stepScript.replace(oldString, newString);
				//targetTestStep.setScript(stepScript);		
			}
			catch(Throwable e)
			{
				log.info "ERROR:" + e;
			}	
		}
	}
}						
log.info 'Woohoo!'
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove script for all test cases in a suite" id="e747fb5e-48b6-4a16-a48d-8d04523bea20"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();

//Get Arguments
def testSuite = "Link LASP Customer Service Test Cases_P2"; 
def stepName  = "Delay 2";

def TCList  = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

for(i = 0; i &lt;= TCCount - 1; i++)
{			
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
	testStepList  = targetTestCase.getTestStepList();
	testStepCount = targetTestCase.getTestStepCount();
	if(targetTestCase.isDisabled() == false)
	{
		for(j = 0; j &lt;= testStepCount - 1; j++)
		{
			try
			{
				if (testStepList[j].name == stepName) {
					log.info "Removing Step " + testStepList[j].name;
					targetTestStep = targetTestCase.getTestStepByName(testStepList[j].name);
					targetTestCase.removeTestStep(targetTestStep);
				}
				
				//stepScript = testStepList[j].getScript();
				//stepScript = stepScript.replace(oldString, newString);
				//targetTestStep.setScript(stepScript);		
			}
			catch(Throwable e)
			{
				log.info "ERROR:" + e;
			}	
		}
	}
}						
log.info 'Woohoo!'</script></con:config></con:testStep><con:properties><con:property><con:name>TestSuite</con:name><con:value>RTL_CS</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Policy - Remove Allow Adult Policy" searchProperties="true" id="cf1bd633-29e4-49c0-be99-79046b375e72"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="5073b3e2-d0af-49f0-84e2-6184f74cf6c4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("policyExists",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("policyRequestEntity",null);
tC.setPropertyValue("policyResource",null);
tC.setPropertyValue("policyCreator",null);
tC.setPropertyValue("returnXMLResult","true");
tC.setPropertyValue("policyStatus","urn:dece:type:status:active");
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Calling Test Case Properties" id="97f65746-32d2-4bbf-8c68-c5311458422b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for ParentalControl:AllowAdult" id="6dd14258-fc03-4a17-adf2-fd8834e90c37"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "ParentalControl:AllowAdult");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for ParentalControlAllowAdult")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyDelete for ParentalControl:AllowAdult" id="bfde2510-4bf1-4dde-a6c2-58ee686c9977"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
	
if (tC.getPropertyValue("policyExists") == "true") {
	tC.setPropertyValue("policyClass", "ParentalControl:AllowAdult");

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyDelete for ParentalControlAllowAdult")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="removepolicies" disabled="true" id="70ed7674-7cc2-49db-80e9-9c668bcc4364"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def useroid = context.expand( '${#TestCase#useroid}' )

a = new dbUtils.dbPolicy(log,tP.getPropertyValue("targetSystem"));
log.info "useroid"+useroid;
a.policyDelete(302,useroid,"deleted")
a.policyDelete(300,useroid,"deleted")
a.policyDelete(304,useroid,"deleted")
</script></con:config></con:testStep><con:properties><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">pVfHkuLKEt3zFQSzJGhZjIjujigZQIAACRCIzQ1RKmSQAVng628JGqbdzJu5b9VdqazMk4bMU8+JGfh0FyQJilM3Cquy+FL7p8Ps2rsO4hocx9INlkS7hmm2rEa7jTptxJA7k2JrVTlJMiSHSWqG6UuNJimmQZENilqQrS7d7rL0E013NrWqjuIEm8YqT2Stegr8MOle3b7UsjjsRmbiJt3QDFDSTWF3DpRxF2t2zTum2uvzDeXVYfzqpOmhSxDwyUIQ+T58glFAPBMfdJ6tpDt37dBMsxi9+bSSl9rb3aIongrmKYptgiZJkiA5AutYiWv/qL1W7peRJYe76HYWzDAKXWj67sUsQSkodSKrCnw7it3UCX5hmiIosjTdQCfYgBQb/qgRPx1c0f2hpQ8g48RsJI5J3Y1paIdiFEJUXWryS+3Hn1XwdncRm2Gyi+Ig+XT+O0gozJEfHZDVSO6R3dH9ucVv0vX6jGBXDqGfJW6OJmWbHEyIkuosRjv3NHYT3HxWUr2Wv3pK7h2G4N+U5Jl4jxPDJr7JjOjaKEn/S73e1+pmRTf9DL0aWmwR9tEWhtnF8IRgPjfQyLWX7LzzcoXwXvkG6lHqt/PnRn301dulqbpB8swnBIOsiwwQdqxcr7trZRvu+7YYItlTrfVuRvQuzjZTAbugA+GcazNW2hxX22xyPmtLoPVAm8/dChS2cEzTGmfaeacQp8zAnhymeThAUhifWHk8PhGLpSi21ZV+UURxztX1lmyxs0E0PtF7Qo4sTSTEes+MjMpK5SQlb3Ogr8f6fKADt3j5GdP7GMq4Ruh8DbL8f90kOdFMzcdBKCfFDv88U/SqyLJQFwUBIMEGhcwDW+bHHpjw9v7o7N0+V5A8UJc9IIKzooFCtA1RV9WRVFi67m90udfjFY0tBsAQK/iDKJ10cbMekuZqczDoHrmZ87y11qItMzxYg30xcOBEWSjFZCGfFU8qpgvQXF1l9gmfL4qnUNPFkqmsPJ5TNKkQi6tHUSqcyWalHYwlV8CLpCqA7QNqKQmOMlgEOgUZzYGeNFbA/irnHUXQdeUkLcCswtsTHce2EHqbAwyswzbwnXfGB9j4wurr523fzzYXyVMEqS/Mj/25vGVEVRoCzVhuV/reXPXyChxMwPbu0W265joq7A2usGoMR9FGdnI4AarE8yrA6SKBIveHIOrzYDzozCaHYYGK6VkdDk1TAxVqJ7YFBA7LmU4651gQzbEYpR1oXaKztFUmAZxNLp632iPOy8EUuP4uiFrbKb0uaA2dxhPKJ9nOFM0EaVMBU60T1HudiLzsF9NmOBWXgKrXR2EzhKsJxZJRYrWNbMDoJxIxtte61ENNXZ4HVCqvDPsoRc31KZUXF/diVYCt8AD0vaXHqwrfKZNqyYVqKLwJelKagYtHpyNaPw4HuQ8NBkSn0Wrq7d8KY4mFxBOFKuG2kiodEVhlEQbzpdTzwJK37Zi3pR6vQhGohjwqDJyv5QArf85j75pHW+LBkIFbataqnAuLoZOdfHDMzlJPAo/zqI6hwa1fd4Tj1jYiBu4L/qCR09WSGSTpgJYG6Q6eN9S+HUyket7vne31qMnyVMXyip2Tb612dj6teo7e7A9tv1VXdWrv2e3xarNGen3MaVDsGzBYI1yp/Ly1EuF0RnwzW5EjY+jtbVWjGaHinGfiaDTxTzNOt3asF+zrxzXBMJI0gnA4dehgrC4XYyaAQc659VnfPhtA0jsuxkRcELsKDqS9ZLbbFo9z1t45Usgem8GyLhkTXvBzKV+wuTTc5vlKmhLakbwUe8mjUF0Y0oHJTPpJS0NqbO+1PWONPbuZGtZkmu/GlVxVVqujPrIKL+Eo87LhTrnW1gJltOLik3QboJ+nw0N4mx/E+8nyYfTcScc823oIpvdjuYBksdrDW8FMf09gSolrNXZX1e6hZEFJisK09lreKslLN8MUx7W6eGXczlKnTTNMSwQC3+EZoS2RLEn1SEC2OY7kRfrOcm4oPkEUonDnlr5KHnfbUr8HCINugkILxY08yqCDktpvLJb5qsqhhtdvFCZoEWGeSEodkeYAx7YpTmDboNeWaJEUOIaiGUB3mrXqJEqn4TQGuxTFHzki94Ejagi6BxeVRLLcpglep0mKU3I08yz1qafcfApRhqlmXLK9Ls12mkTiBgcflYCJILIyHz0dnMM1QURy+0s3TJhcpZq0uG75X4b3+ds9E1jHckuFpIyFR7ia6Buyy9wD+RIw+y0pvpsHmeWWyxynNY1deEPy8dPPbinb5NEq4hjMZ3fQD92/uPuPMP+H+o8Gxv+vAVyPrzeJ3+SE+FyOhyMrd9+5vT8aMA/GTOn13kxH8+n4lOV5dm2fNknSRIzNExRBtog5ghmmcudFtEch8TBB/BGLfqD+5Pkh/4gvS51wnuJJFOBmr16Pf/CEmqOkfELJ+Md6+tP32QeXOG8pOqXfyQQfv7RKxL99jMEuLPWweIb/FFFs/SzXN7be+cFxlqPXDe3yVHLm8y+aAkbYrIvHbxS/N/6dge+cfxQ+kvzAkuJu2mYp+vWXajlXX2omhFEWprJYuwrez/orzvR8QN2fSl/MXFnr2zPklPzyGbJWxnM8dQOz9tB1/7dyw722C0T4VuJesbzUTvhFjZ2H9rvd8gbw63pheZpvCYDiWo/10uQ4iuPbjwR+iOT1i/ir5F1OP/8eXv8F</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE872334B2B6CA196E0401F0A059919B7</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn%3Adece%3Auserid%3Aorg%3Adece%3AE872336DACB8B3C7E0401F0A07990BD2</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>ParentalControl:AllowAdult</con:value></con:property><con:property><con:name>policyCreator</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyExists</con:name><con:value>false</con:value></con:property><con:property><con:name>policyGetXML</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<PolicyList xmlns="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Policy PolicyID="urn:dece:policyid:org:dece:E872336DACC4B3C7E0401F0A07990BD2">
      <PolicyClass>urn:dece:type:policy:ParentalControl:AllowAdult</PolicyClass>
      <RequestingEntity>urn:dece:userid:org:dece:E872336DACB8B3C7E0401F0A07990BD2</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreatedBy="urn:dece:userid:org:dece:E872336DACB8B3C7E0401F0A07990BD2" CreationDate="2013-10-11T06:27:12.000Z">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
</PolicyList>]]></con:value></con:property><con:property><con:name>policyRequestEntity</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyResource</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyStatus</con:name><con:value>urn:dece:type:status:active</con:value></con:property><con:property><con:name>returnXMLResult</con:name><con:value>true</con:value></con:property><con:property><con:name>sName</con:name><con:value>DECE Customer Support Test Cases</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_68125 - StreamView - DECECS - Policy - AllowAdult - US - MMPA - Can view stream that IS_ADULT = 'y'</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>77796</con:value></con:property><con:property><con:name>useroid</con:name><con:value>0600</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>E872336DACC4B3C7E0401F0A07990BD2</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>E872336DACB8B3C7E0401F0A07990BD2</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E872334B2B6CA196E0401F0A059919B7</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Policy - Allow Adult Policy Establishment" searchProperties="true" id="7b683c75-b02f-4476-be1c-85b012a859c7"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="08581361-79de-470f-8feb-88b279eff7e6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("policyExists",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("policyRequestEntity",null);
tC.setPropertyValue("policyResource",null);
tC.setPropertyValue("policyCreator",null);
tC.setPropertyValue("returnXMLResult","true");
tC.setPropertyValue("policyStatus","urn:dece:type:status:active");
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("assertionAccountId",null);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Calling Test Case Properties" id="fd7557fe-791e-49c2-bdbb-b0e329a41dab"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("policyCreator",callTC.getPropertyValue("policyCreator"));
tC.setPropertyValue("policyClass",callTC.getPropertyValue("policyClass"));
tC.setPropertyValue("policyResource",callTC.getPropertyValue("policyResource"));
tC.setPropertyValue("policyRequestEntity",callTC.getPropertyValue("policyRequestEntity"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));

if (tC.getPropertyValue("policyCreator") == null || tC.getPropertyValue("policyCreator") == "") {
	tC.getPropertyValue("policyCreator") == tC.getPropertyValue("assertionUserIdFULL");
}
</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for Policy" id="d8064b6d-1510-4528-b4d0-9479d658b452"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for ParentalControlAllowAdult")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyDelete for Policy if necessary" id="916d541f-22ad-47d5-8f54-0d9266102063"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
	
if (tC.getPropertyValue("policyExists") == "true") {
	tC.setPropertyValue("policyClass", tC.getPropertyValue("policyClass"));

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyDelete for ParentalControlAllowAdult")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for Policy" id="e6f8e275-dcca-4914-9298-f9014237f041"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyRequestEntity","urn:dece:userid:org:dece:"+tC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("policyClass","ParentalControl:AllowAdult");

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for ParentalControlAllowAdult")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">pVfHkuLKEt3zFQSzJGhZjIjujigZQIAACRCIzQ1RKmSQAVng628JGqbdzJu5b9VdqazMk4bMU8+JGfh0FyQJilM3Cquy+FL7p8Ps2rsO4hocx9INlkS7hmm2rEa7jTptxJA7k2JrVTlJMiSHSWqG6UuNJimmQZENilqQrS7d7rL0E013NrWqjuIEm8YqT2Stegr8MOle3b7UsjjsRmbiJt3QDFDSTWF3DpRxF2t2zTum2uvzDeXVYfzqpOmhSxDwyUIQ+T58glFAPBMfdJ6tpDt37dBMsxi9+bSSl9rb3aIongrmKYptgiZJkiA5AutYiWv/qL1W7peRJYe76HYWzDAKXWj67sUsQSkodSKrCnw7it3UCX5hmiIosjTdQCfYgBQb/qgRPx1c0f2hpQ8g48RsJI5J3Y1paIdiFEJUXWryS+3Hn1XwdncRm2Gyi+Ig+XT+O0gozJEfHZDVSO6R3dH9ucVv0vX6jGBXDqGfJW6OJmWbHEyIkuosRjv3NHYT3HxWUr2Wv3pK7h2G4N+U5Jl4jxPDJr7JjOjaKEn/S73e1+pmRTf9DL0aWmwR9tEWhtnF8IRgPjfQyLWX7LzzcoXwXvkG6lHqt/PnRn301dulqbpB8swnBIOsiwwQdqxcr7trZRvu+7YYItlTrfVuRvQuzjZTAbugA+GcazNW2hxX22xyPmtLoPVAm8/dChS2cEzTGmfaeacQp8zAnhymeThAUhifWHk8PhGLpSi21ZV+UURxztX1lmyxs0E0PtF7Qo4sTSTEes+MjMpK5SQlb3Ogr8f6fKADt3j5GdP7GMq4Ruh8DbL8f90kOdFMzcdBKCfFDv88U/SqyLJQFwUBIMEGhcwDW+bHHpjw9v7o7N0+V5A8UJc9IIKzooFCtA1RV9WRVFi67m90udfjFY0tBsAQK/iDKJ10cbMekuZqczDoHrmZ87y11qItMzxYg30xcOBEWSjFZCGfFU8qpgvQXF1l9gmfL4qnUNPFkqmsPJ5TNKkQi6tHUSqcyWalHYwlV8CLpCqA7QNqKQmOMlgEOgUZzYGeNFbA/irnHUXQdeUkLcCswtsTHce2EHqbAwyswzbwnXfGB9j4wurr523fzzYXyVMEqS/Mj/25vGVEVRoCzVhuV/reXPXyChxMwPbu0W265joq7A2usGoMR9FGdnI4AarE8yrA6SKBIveHIOrzYDzozCaHYYGK6VkdDk1TAxVqJ7YFBA7LmU4651gQzbEYpR1oXaKztFUmAZxNLp632iPOy8EUuP4uiFrbKb0uaA2dxhPKJ9nOFM0EaVMBU60T1HudiLzsF9NmOBWXgKrXR2EzhKsJxZJRYrWNbMDoJxIxtte61ENNXZ4HVCqvDPsoRc31KZUXF/diVYCt8AD0vaXHqwrfKZNqyYVqKLwJelKagYtHpyNaPw4HuQ8NBkSn0Wrq7d8KY4mFxBOFKuG2kiodEVhlEQbzpdTzwJK37Zi3pR6vQhGohjwqDJyv5QArf85j75pHW+LBkIFbataqnAuLoZOdfHDMzlJPAo/zqI6hwa1fd4Tj1jYiBu4L/qCR09WSGSTpgJYG6Q6eN9S+HUyket7vne31qMnyVMXyip2Tb612dj6teo7e7A9tv1VXdWrv2e3xarNGen3MaVDsGzBYI1yp/Ly1EuF0RnwzW5EjY+jtbVWjGaHinGfiaDTxTzNOt3asF+zrxzXBMJI0gnA4dehgrC4XYyaAQc659VnfPhtA0jsuxkRcELsKDqS9ZLbbFo9z1t45Usgem8GyLhkTXvBzKV+wuTTc5vlKmhLakbwUe8mjUF0Y0oHJTPpJS0NqbO+1PWONPbuZGtZkmu/GlVxVVqujPrIKL+Eo87LhTrnW1gJltOLik3QboJ+nw0N4mx/E+8nyYfTcScc823oIpvdjuYBksdrDW8FMf09gSolrNXZX1e6hZEFJisK09lreKslLN8MUx7W6eGXczlKnTTNMSwQC3+EZoS2RLEn1SEC2OY7kRfrOcm4oPkEUonDnlr5KHnfbUr8HCINugkILxY08yqCDktpvLJb5qsqhhtdvFCZoEWGeSEodkeYAx7YpTmDboNeWaJEUOIaiGUB3mrXqJEqn4TQGuxTFHzki94Ejagi6BxeVRLLcpglep0mKU3I08yz1qafcfApRhqlmXLK9Ls12mkTiBgcflYCJILIyHz0dnMM1QURy+0s3TJhcpZq0uG75X4b3+ds9E1jHckuFpIyFR7ia6Buyy9wD+RIw+y0pvpsHmeWWyxynNY1deEPy8dPPbinb5NEq4hjMZ3fQD92/uPuPMP+H+o8Gxv+vAVyPrzeJ3+SE+FyOhyMrd9+5vT8aMA/GTOn13kxH8+n4lOV5dm2fNknSRIzNExRBtog5ghmmcudFtEch8TBB/BGLfqD+5Pkh/4gvS51wnuJJFOBmr16Pf/CEmqOkfELJ+Md6+tP32QeXOG8pOqXfyQQfv7RKxL99jMEuLPWweIb/FFFs/SzXN7be+cFxlqPXDe3yVHLm8y+aAkbYrIvHbxS/N/6dge+cfxQ+kvzAkuJu2mYp+vWXajlXX2omhFEWprJYuwrez/orzvR8QN2fSl/MXFnr2zPklPzyGbJWxnM8dQOz9tB1/7dyw722C0T4VuJesbzUTvhFjZ2H9rvd8gbw63pheZpvCYDiWo/10uQ4iuPbjwR+iOT1i/ir5F1OP/8eXv8F</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE872334B2B6CA196E0401F0A059919B7</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn%3Adece%3Auserid%3Aorg%3Adece%3AE872336DACB8B3C7E0401F0A07990BD2</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>ParentalControl:AllowAdult</con:value></con:property><con:property><con:name>policyCreator</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyExists</con:name><con:value>false</con:value></con:property><con:property><con:name>policyGetXML</con:name><con:value><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:Policy:PolicyNotFound">
      <Reason Language="en">The policy was not found.</Reason>
      <OriginalRequest>https://qa.p.uvvu.com:7002/rest/1/06/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE872334B2B6CA196E0401F0A059919B7/User/urn%3Adece%3Auserid%3Aorg%3Adece%3AE872336DACB8B3C7E0401F0A07990BD2/Policy/urn%3Adece%3Atype%3Apolicy%3AParentalControl%3AAllowAdult</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7002/rest/1/06/error/en/ErrorList.html#Policy:PolicyNotFound</ErrorLink>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>policyRequestEntity</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:E872336DACB8B3C7E0401F0A07990BD2</con:value></con:property><con:property><con:name>policyResource</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn%3Adece%3Auserid%3Aorg%3Adece%3AE872336DACB8B3C7E0401F0A07990BD2</con:value></con:property><con:property><con:name>policyStatus</con:name><con:value>urn:dece:type:status:active</con:value></con:property><con:property><con:name>returnXMLResult</con:name><con:value>true</con:value></con:property><con:property><con:name>sName</con:name><con:value>DECE Customer Support Test Cases</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_68125 - StreamView - DECECS - Policy - AllowAdult - US - MMPA - Can view stream that IS_ADULT = 'y'</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>77798</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>E872336DACC4B3C7E0401F0A07990BD2</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>E872336DACB8B3C7E0401F0A07990BD2</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>E872334B2B6CA196E0401F0A059919B7</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Policy - Establish High-Level Policies for User/Account/Node" searchProperties="true" id="b7716695-c363-4ea2-8c91-0d31535b87e6"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="e11e800f-f53c-49b0-a9da-f01c49ef0b9e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("policyExists",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("policyRequestEntity",null);
tC.setPropertyValue("policyResource",null);
tC.setPropertyValue("policyCreator",null);
tC.setPropertyValue("policyStatus","urn:dece:type:status:active");
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Calling Test Case Properties" id="f7c9c079-cfdf-4d09-b160-21ddc0cea90d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for UserLinkConsent" id="53c9116c-debe-40ab-a6b1-21b44b37d55a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "UserLinkConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyGet for User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for UserLinkConsent if necessary" id="9bf1a7a3-5b8a-44ce-82b3-cecb63f40157"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("policyExists") == "false") {
	tC.setPropertyValue("policyClass", "UserLinkConsent");
	tC.setPropertyValue("policyRequestEntity","urn:dece:org:org:dece:"+tC.getPropertyValue("nodeid"));
	tC.setPropertyValue("policyResource","urn:dece:userid:org:dece:"+tC.getPropertyValue("assertionUserId"));
	tC.setPropertyValue("policyCreator","urn:dece:userid:org:dece:"+tC.getPropertyValue("assertionUserId"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for User")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for EnableManageUserConsent" disabled="true" id="f9ecef85-d78e-4e18-9d9d-bddde225aea9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableManageUserConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyGet for Account")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for EnableManageUserConsent if necessary" disabled="true" id="525ad128-3209-4dc8-8c1a-082346a6ff64"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("policyExists") == "false") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableManageUserConsent");
	tC.setPropertyValue("policyRequestEntity",tP.getPropertyValue("urnNode") + tC.getPropertyValue("nodeid"));
	tC.setPropertyValue("policyResource",tC.getPropertyValue("assertionUserIdFULL"));
	tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for Account")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for ManageUserConsent" id="2ae3fc06-21a6-48f2-a6bc-e6709a0fee73"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "ManageUserConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyGet for User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for ManageUserConsent if necessary" id="b06a17b1-2dcb-49c7-b86b-3e7bfbf102e0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("policyExists") == "false") {
	tC.setPropertyValue("policyClass","ManageUserConsent");
	tC.setPropertyValue("policyRequestEntity","urn:dece:org:org:dece:"+tC.getPropertyValue("nodeid"));
	tC.setPropertyValue("policyResource","urn:dece:userid:org:dece:"+tC.getPropertyValue("assertionUserId"));
	tC.setPropertyValue("policyCreator","urn:dece:userid:org:dece:"+tC.getPropertyValue("assertionUserId"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for User")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for EnableUserDataUsageConsentRequired" disabled="true" id="0988b6a6-a918-4e1d-8d53-e7271f026a39"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableUserDataUsageConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for Account")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for EnableUserDataUsageConsentRequired if necessary" disabled="true" id="26b3ac89-3c9b-4d35-bbc3-935ab81294db"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("policyExists") == "false") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableUserDataUsageConsent");
	tC.setPropertyValue("policyRequestEntity",tP.getPropertyValue("urnNode") + tC.getPropertyValue("nodeid"));
	tC.setPropertyValue("policyResource",tC.getPropertyValue("assertionUserIdFULL"));
	tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for Account")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for EnableUserDataUsageConsent" disabled="true" id="6eedd95a-ccd4-419f-a2ea-da2934b170c2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableUserDataUsageConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for Account")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for EnableUserDataUsageConsent if necessary" disabled="true" id="2a070259-7d2c-4220-b89f-1215a961a567"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("policyExists") == "false") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableUserDataUsageConsent");
	tC.setPropertyValue("policyRequestEntity",tP.getPropertyValue("urnNode") + tC.getPropertyValue("nodeid"));
	tC.setPropertyValue("policyResource",tC.getPropertyValue("assertionUserIdFULL"));
	tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for Account")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for UserDataUsageConsent" id="927a57c8-d1d8-4706-9f0c-0339242a3acd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "UserDataUsageConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyGet for User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for UserDataUsageConsent if necessary" id="55d7dca2-d955-42b9-a6fe-19900a5d6436"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("policyExists") == "false") {
	tC.setPropertyValue("policyClass","UserDataUsageConsent");
	tC.setPropertyValue("policyRequestEntity","urn:dece:org:org:dece:"+tC.getPropertyValue("nodeid"));
	tC.setPropertyValue("policyResource","urn:dece:userid:org:dece:"+tC.getPropertyValue("assertionUserId"));
	tC.setPropertyValue("policyCreator","urn:dece:userid:org:dece:"+tC.getPropertyValue("assertionUserId"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for User")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:02B3B4B57DB93333E05305991F0A804F</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:02B3ABFE770705E0E05305991F0AFE9D</con:value></con:property><con:property><con:name>policyExists</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">true</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_78051 - StreamListView - PORTAL - Policy - ParentalControl:RatingPolicy - US - MMPA - PG rating - Full User</con:value></con:property><con:property><con:name>sName</con:name><con:value>Portal Test Cases_P1_P2</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>UserDataUsageConsent</con:value></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbcuI4EP0VyvM4ZSSbuytQBQGm2CGXgSRL5iUlyw0WsWVjyUDm61cy4GBCsuzyQqndOn36oiNdCRIGttMVAhLJIl7ahgEXTmZtG2nCnYgIJhxOQhCOpM60ezN27DJ2yGGLURr128ZLc+6CW4eG2SK1ilmtNYnZauG62cS4aldcu1GvVZSrECmMuJCEy7ZhY6tq4pZp4QfccipNx2qU643Wb6P0BIlQ2MqljI09qa1oG76UsYPQZrMpbyrlKFkgG2MLzW7GU+pDSIzO1S6jLFDS2fvTsgcUgoCWaRSiK1TwufKEM2ULTmSawD6W91ksjHALKR9PsMU3I98L3ojPo2x5TXjEGSUB+0N0fW5A+pFX6gaLKGHSDz9NwsIa2IQtNalV5d8MVKR2IVCBYSKIKXxi7bEmMIcEOIXS42TUNr5d1rVs60NCuJhHSSiKy//GB/gagigGzxSHtPbULgc8U6nOFVBnxGmQCraGWz2sMaEg9t0EejlU6T6BOduOmVADuhWaHTqmd7LcVaPPFiDk/2nQUXN2IE8kSKEjZ+z7jOP4cQ09RFePyd3ad2+JN1iO2hmBY+fMkLd2tzwZynyIdjt+Tm4C6zeaLkW4fXXTJYXpz+e+6y5XW94f2FYtWk4n/EnGsQ9PrdGtRO6v7uTJ/RW/DYbzdfP78MHuJat7f7Rc3k0fv49vU7v7l/Uzth+f7yxfzlzr73BJx5v627DvA02XybZ679dd1Ei96/jHIFytZs/R/SP6TX/cjSuzZLx8sAbxRMzYa33xvEButTFbo3Udt/N0jvgXbYczP03dJVB5WOoxGPVLQ9UlIr8WM21hnjnPXJ1Yi4+QwKXR0bu0djipkjvmOaqHuzW2e5VetVdr9HutivoNcK2Ca62WNcTdJq4ODyKzY3FC8Tric6Zjacndjc3XBGnoCOAeJOY6SpXSCeMLxD6RpDTiE3UIIi7gIVLy7M5rVYvX0+1byjd/Fk1M7Wa0kJZRuo3kHb9LunMJSUGSLbsgyROgLGagdVuPtVBzLaQqxYqsUxlY5TUpc0iVsidaZB272qwhwcI4AE0UhZGXBlCO/TgrDBK7f9skVGTW/rg7vX+5nr5k5wF9mt3pt0MhlI/HtIPQKfVANRPOXDH4kM+HvGtnr6IDfDf1mD5eqqoyYXTHpPjpfVj0lOST8p7YgXm+4dRQAEeneeXxvDWj+dTnd7eSdCUCnUNzVqS8KqfrdZq1o6HFLlHwSGeKsI2m6lgqmXp7iF6BoxwFXXQn5MRPguf2IsVU+nwqiYRQzU8pW17wCJiC0I+AkZr77aUvjEJIVToJW3nOdh2oB4xm/OUbhzpU+ynzvfrbRIn33rEzWEdxVJ7qDSAZX+iVvg/ePhkPGilYppQsSo7BzwGcC1405kXOuUg1UG4q4fMvJS1RbYNQGqVcjvpGZjiWzYynfIvBeXf6AJMpc/5UY//+VjNZNgIU1ANPsAxf37iOPgJ8cSS9+6Cn6tvtDQeNBm7g2gAfq+9w0OrnRSmw63wwf7Qc1el0xjv/AA==</con:value></con:property><con:property><con:name>policyRequestEntity</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyResource</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyCreator</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyStatus</con:name><con:value>urn:dece:type:status:active</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>02B3CDD6886C516DE05305991F0ABB06</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>02B3B4B57DB93333E05305991F0A804F</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>02B3ABFE770705E0E05305991F0AFE9D</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Policy - Remove all Parental Control Policies" searchProperties="true" id="12171b31-ca54-4027-ae97-b0d9d1ac04db"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="3f56072a-3f67-4fd3-9a38-164e6013ef3a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("policyExists",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("policyRequestEntity",null);
tC.setPropertyValue("policyResource",null);
tC.setPropertyValue("policyCreator",null);
tC.setPropertyValue("returnXMLResult","true");
tC.setPropertyValue("policyStatus","urn:dece:type:status:active");
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Calling Test Case Properties" id="f1808e52-2af4-476d-ad27-5ff3fd49963b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for ParentalControl:RatingPolicy" id="c8d5b922-14e5-4e3d-a4a4-a078af6140dc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "ParentalControl:RatingPolicy");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for ParentalConrolRating")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyDelete for ParentalControl:RatingPolicy" id="dd23c8a4-fb9a-4a22-93f0-f7a8c3054d9b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
	
if (tC.getPropertyValue("policyExists") == "true") {
	tC.setPropertyValue("policyClass", "ParentalControl:RatingPolicy");

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyDelete for ParentalControlRating")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for ParentalControl:BlockUnratedContent" id="543515ff-b186-4ce5-8ef7-517c2d44129f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "ParentalControl:BlockUnratedContent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for ParentalControlBlockUnratedContent")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyDelete for ParentalControl:BlockUnratedContent" id="39b57ae7-240c-4023-b99c-600adff709d1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
	
if (tC.getPropertyValue("policyExists") == "true") {
	tC.setPropertyValue("policyClass", "ParentalControl:BlockUnratedContent");

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyDelete for ParentalControlBlockUnratedContent")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for ParentalControl:AllowAdult" disabled="true" id="d7722638-e1a9-440d-bf5f-cb83a962e38d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "urn:dece:type:policy:ParentalControl:AllowAdult");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyGet for User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyDelete for ParentalControl:AllowAdult" disabled="true" id="0330b6e8-6086-4e6f-bf7e-42622a721cea"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
	
if (tC.getPropertyValue("policyExists") == "true") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:ParentalControl:AllowAdult");

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyDelete for User")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="removepolicies" disabled="true" id="608a97e6-926e-4779-b8b5-353d1aebecb4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def useroid = context.expand( '${#TestCase#useroid}' )

a = new dbUtils.dbPolicy(log,tP.getPropertyValue("targetSystem"));
log.info "useroid"+useroid;
a.policyDelete(302,useroid,"deleted")
a.policyDelete(300,useroid,"deleted")
a.policyDelete(304,useroid,"deleted")
</script></con:config></con:testStep><con:properties><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZrU+o6FP0rTP14pjQtlEdHmOGhHgSUC76OX5yYbmi0TWuTFvDXn6RIpYhe7p1hhsnuztprP7KSU44D33I6nEMsaMhKq8Bn3MmsLS2JmRNiTrnDcADcEcSZdcYjxyojB2+3aKVBv6U91Vxi1ayGpVdxZa5Xq7W5/myZDb1ZR6Q5N3ENXCRdOU9gwLjATLQ0C5m2jtTvBjUcs+FYZrnaRI9a6Q5iLrGlS1nu2pBa8ZbmCRE5hrFcLsvLSjmMF4aFkGk8jEcz4kGAtfbpJqMsUNz+8CdlFwj4PimTMDBOjYLPqcudGV0wLJIYPmK538VCBmoa0sfldHGi5XvBHbB5mC17mIWMEuzTd6zqMwbhhW6p4y/CmAov+DYJEylgHVZEJ2aVnWhGkdqRQAWGMcc697D5gTWFOcTACJRup4OWdnJc17KtNzFmfB7GAS8u/xsfYCn4YQSuzrdpfVA7HvBApdqnQJwBI37CaQpXalgjTIB/dBPI8VClSQxzuhpRLgd0xRU7Y5fe3nJTjT5dABf/p0E7zdmA3GE/gfZ4hNJx9WaYTm3+z2I6xPyu8tteEhGPWxmBXefMkLd2s9wbynyINjv8twc7iJov6wAhL+maD4vOubucdW+XvfH1++9aI25e3UwW9T8jD95n9Yu113sJz6oTXLsbRK+v/XvW6XiPw+vRddoJA/uuic7mTTRuDIb3aaV3/1hFk+HFuNKdd8jt7TCq1y4vL9KHlfn2Mr2ycfXxvut6wcto1Dgz0bLZo3/Ir7vLZw60LzhqBiysiOHZqv7r8R218nR2+Bdt2zM/S55fgIjtUo3BoF86l13C4mcxUxbq6vPM1YmU+HABTGhttUtph5NIuaOuI3u4WZu2baF617R79fNa/7x7huwKqjeb5jnqoJptb0Vmw2KPYi9kc6piKcndjM3PBEngcGAuxHoaJlLpuPYDYh8LXBqwqTwEIeNwE0p5tp69WpAS7gfUpxSC+rtFll681kpXobhm13FnLiAuSLJpFiR5CoRGFJRuq7Hmcq65kKV4w2kifLOc4jKDRCp7rETWsaoN2+A0iHxQRI0gdBMfypEXZYUx+Obf0jHhmbU/6swmT73ZU3YejG+z2/+2LYT0caly4CqlLshmwoErxtzm8yXv2sGraAvfSVyqjpesqogp2TApfvocFjUl+aR8JrZlnm/YNxTAjf288nhuSkk+9fndLSVdikB725w3bJbfykmaJlk/qtWKEUt4Q1XEQJYxA5JImVrfhK/AjBzFOOpOyInvBc/tRYqJ8NhMYAGBnJ9StjziETADrh4BAzn3q2NfGIWQsnQCVuKQrefLB4xi/OMbhzhE+UnzRP4tw9j97NgBrJ04Mk/5BhCULdRK3Qfrb8aDhBKWSiUL413wQwCHgheNeZFzLkIO1HMi4PsvJSVRLQ0TEiZMDPpaZtiVzYynWEfgfDp9gcmUOX+q0X9/q+k0GwEC8oHHaYavblxHHQG22JHej6DfqG//J/Utsmt/MX+17NRpf8bbfwE=</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:155207B15C7D6DFBE05307991F0A0655</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:155207B15C7F6DFBE05307991F0A0655</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>ParentalControl:BlockUnratedContent</con:value></con:property><con:property><con:name>policyCreator</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyExists</con:name><con:value>false</con:value></con:property><con:property><con:name>policyGetXML</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2015/03/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.2/md" xmlns:ns3="http://www.w3.org/2001/04/xmlenc#" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#">
   <Error ErrorID="urn:dece:errorid:org:dece:Policy:PolicyNotFound">
      <Reason Language="en">The policy was not found.</Reason>
      <OriginalRequest>http://qa1.q.uvvu.com/rest/2015/02/Account/urn:dece:accountid:org:dece:155207B15C7D6DFBE05307991F0A0655/User/urn:dece:userid:org:dece:155207B15C7F6DFBE05307991F0A0655/Policy/urn:dece:type:policy:ParentalControl:BlockUnratedContent</OriginalRequest>
      <ErrorLink>https://qa1.q.uvvu.com/rest/2015/02/error/en/ErrorList.html#Policy:PolicyNotFound</ErrorLink>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>policyRequestEntity</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyResource</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyStatus</con:name><con:value>urn:dece:type:status:active</con:value></con:property><con:property><con:name>returnXMLResult</con:name><con:value>true</con:value></con:property><con:property><con:name>sName</con:name><con:value>Portal Customer Support Test Cases_P1_P2</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_80000 - StreamListView - PORTALCS - Test Suite Staging</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>77796</con:value></con:property><con:property><con:name>useroid</con:name><con:value>0600</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>F96E0BECC451BD79E0401F0A079973F4</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>155207B15C7F6DFBE05307991F0A0655</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">155207B15C7D6DFBE05307991F0A0655</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Policy - Establish Parental Control Rating" searchProperties="true" id="d72b8f8f-1c9c-41ce-84f9-768f795dc4a7"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="8d1f5da9-f83e-4953-a974-5aed9d0b0d87"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("policyExists",null);
tC.setPropertyValue("policyClass","urn:dece:type:policy:ParentalControl:RatingPolicy");
tC.setPropertyValue("policyRequestEntity",null);
tC.setPropertyValue("policyResource",null);
tC.setPropertyValue("policyCreator",null);
tC.setPropertyValue("returnXMLResult","true");
tC.setPropertyValue("policyStatus","urn:dece:type:status:active");
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Calling Test Case Properties" id="c5c24e6c-6971-4e1e-bd4b-0fffb392dd6c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("policyCreator",callTC.getPropertyValue("policyCreator"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("policyResource",callTC.getPropertyValue("policyResource"));
tC.setPropertyValue("policyRequestEntity",callTC.getPropertyValue("policyRequestEntity"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));

if (tC.getPropertyValue("policyCreator") == null || tC.getPropertyValue("policyCreator") == "") {
	tC.getPropertyValue("policyCreator") == tC.getPropertyValue("assertionUserIdFULL");
}
</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for ParentalControl:RatingPolicy" id="3b340335-48f4-4e08-9380-c88313c44aa9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "ParentalControl:RatingPolicy");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for ParentalConrolRating")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyDelete for ParentalControl:RatingPolicy if necessary" id="bdbe52ae-ca7b-45a6-9679-44c144ee737d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
	
if (tC.getPropertyValue("policyExists") == "true") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:ParentalControl:RatingPolicy");

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyDelete for ParentalControlRating")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for ParentalControl:RatingPolicy" id="98993cc2-c77c-4ba1-a92b-6dd11b757441"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyRequestEntity","urn:dece:userid:org:dece:"+tC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("policyClass","ParentalControl:RatingPolicy");

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for ParentalControlRating")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>assert</con:name><con:value>nVbbcuI4EP0VyvM4ZSSbuytQBQGm2CGXgSRL5iUlyw0WsWVjyUDm61cy4GBCsuzyQqndOn36oiNdCRIGttMVAhLJIl7ahgEXTmZtG2nCnYgIJhxOQhCOpM60ezN27DJ2yGGLURr128ZLc+6CW4eG2SK1ilmtNYnZauG62cS4aldcu1GvVZSrECmMuJCEy7ZhY6tq4pZp4QfccipNx2qU643Wb6P0BIlQ2MqljI09qa1oG76UsYPQZrMpbyrlKFkgG2MLzW7GU+pDSIzO1S6jLFDS2fvTsgcUgoCWaRSiK1TwufKEM2ULTmSawD6W91ksjHALKR9PsMU3I98L3ojPo2x5TXjEGSUB+0N0fW5A+pFX6gaLKGHSDz9NwsIa2IQtNalV5d8MVKR2IVCBYSKIKXxi7bEmMIcEOIXS42TUNr5d1rVs60NCuJhHSSiKy//GB/gagigGzxSHtPbULgc8U6nOFVBnxGmQCraGWz2sMaEg9t0EejlU6T6BOduOmVADuhWaHTqmd7LcVaPPFiDk/2nQUXN2IE8kSKEjZ+z7jOP4cQ09RFePyd3ad2+JN1iO2hmBY+fMkLd2tzwZynyIdjt+Tm4C6zeaLkW4fXXTJYXpz+e+6y5XW94f2FYtWk4n/EnGsQ9PrdGtRO6v7uTJ/RW/DYbzdfP78MHuJat7f7Rc3k0fv49vU7v7l/Uzth+f7yxfzlzr73BJx5v627DvA02XybZ679dd1Ei96/jHIFytZs/R/SP6TX/cjSuzZLx8sAbxRMzYa33xvEButTFbo3Udt/N0jvgXbYczP03dJVB5WOoxGPVLQ9UlIr8WM21hnjnPXJ1Yi4+QwKXR0bu0djipkjvmOaqHuzW2e5VetVdr9HutivoNcK2Ca62WNcTdJq4ODyKzY3FC8Tric6Zjacndjc3XBGnoCOAeJOY6SpXSCeMLxD6RpDTiE3UIIi7gIVLy7M5rVYvX0+1byjd/Fk1M7Wa0kJZRuo3kHb9LunMJSUGSLbsgyROgLGagdVuPtVBzLaQqxYqsUxlY5TUpc0iVsidaZB272qwhwcI4AE0UhZGXBlCO/TgrDBK7f9skVGTW/rg7vX+5nr5k5wF9mt3pt0MhlI/HtIPQKfVANRPOXDH4kM+HvGtnr6IDfDf1mD5eqqoyYXTHpPjpfVj0lOST8p7YgXm+4dRQAEeneeXxvDWj+dTnd7eSdCUCnUNzVqS8KqfrdZq1o6HFLlHwSGeKsI2m6lgqmXp7iF6BoxwFXXQn5MRPguf2IsVU+nwqiYRQzU8pW17wCJiC0I+AkZr77aUvjEJIVToJW3nOdh2oB4xm/OUbhzpU+ynzvfrbRIn33rEzWEdxVJ7qDSAZX+iVvg/ePhkPGilYppQsSo7BzwGcC1405kXOuUg1UG4q4fMvJS1RbYNQGqVcjvpGZjiWzYynfIvBeXf6AJMpc/5UY//+VjNZNgIU1ANPsAxf37iOPgJ8cSS9+6Cn6tvtDQeNBm7g2gAfq+9w0OrnRSmw63wwf7Qc1el0xjv/AA==</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:02B3ABFE770705E0E05305991F0AFE9D</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:02B3B4B57DB93333E05305991F0A804F</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>ParentalControl:RatingPolicy</con:value></con:property><con:property><con:name>policyCreator</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyExists</con:name><con:value>false</con:value></con:property><con:property><con:name>policyGetXML</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<dece:ErrorList xmlns:dece="http://www.decellc.org/schema/2015/03/coordinator" xmlns:md="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#">
   <dece:Error ErrorID="urn:dece:errorid:org:dece:Policy:PolicyNotFound">
      <dece:Reason Language="en">The policy was not found.</dece:Reason>
      <dece:OriginalRequest>http://stdecqavap1.va.neustar.com:8009/rest/2015/02/Account/urn:dece:accountid:org:dece:02B3ABFE770705E0E05305991F0AFE9D/User/urn:dece:userid:org:dece:02B3B4B57DB93333E05305991F0A804F/Policy/urn:dece:type:policy:ParentalControl:RatingPolicy</dece:OriginalRequest>
      <dece:ErrorLink>https://qa.q.uvvu.com:7001/rest/2015/02/error/en/ErrorList.html#Policy:PolicyNotFound</dece:ErrorLink>
   </dece:Error>
</dece:ErrorList>]]></con:value></con:property><con:property><con:name>policyRequestEntity</con:name><con:value>urn:dece:userid:org:dece:02B3B4B57DB93333E05305991F0A804F</con:value></con:property><con:property><con:name>policyResource</con:name><con:value>urn:dece:type:rating:us:mpaa:pg</con:value></con:property><con:property><con:name>policyStatus</con:name><con:value>urn:dece:type:status:active</con:value></con:property><con:property><con:name>returnXMLResult</con:name><con:value>true</con:value></con:property><con:property><con:name>sName</con:name><con:value>Portal Test Cases_P1_P2</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_78051 - StreamListView - PORTAL - Policy - ParentalControl:RatingPolicy - US - MMPA - PG rating - Full User</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>77797</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>09B4651502C65033E05307991F0AF800</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>02B3B4B57DB93333E05305991F0A804F</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>02B3ABFE770705E0E05305991F0AFE9D</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Policy - General Policy Establishment" searchProperties="true" id="9fe0a3b4-0dd9-4078-baf9-8e4e0792d81d"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="fffb46f0-38ac-4bff-a1b5-9c8868d90487"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("policyExists",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("policyRequestEntity",null);
tC.setPropertyValue("policyResource",null);
tC.setPropertyValue("policyCreator",null);
tC.setPropertyValue("returnXMLResult","true");
tC.setPropertyValue("policyStatus","urn:dece:type:status:active");
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("assertionAccountId",null);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Calling Test Case Properties" id="4dcba4be-530d-4950-8916-5cad91dcfcb0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("policyCreator",callTC.getPropertyValue("policyCreator"));
tC.setPropertyValue("policyClass",callTC.getPropertyValue("policyClass"));
tC.setPropertyValue("policyResource",callTC.getPropertyValue("policyResource"));
tC.setPropertyValue("policyRequestEntity",callTC.getPropertyValue("policyRequestEntity"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));

if (tC.getPropertyValue("policyCreator") == null || tC.getPropertyValue("policyCreator") == "") {
	tC.getPropertyValue("policyCreator") == tC.getPropertyValue("assertionUserIdFULL");
}
</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for Policy" id="fec9d0aa-8b00-42a1-b4ef-f219dc58d787"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for ParentalControlBlockUnratedContent")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyDelete for Policy if necessary" id="eb3bae3f-3de0-43a9-afeb-6ca8d3cb5f66"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
	
if (tC.getPropertyValue("policyExists") == "true") {
	tC.setPropertyValue("policyClass", tC.getPropertyValue("policyClass"));

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyDelete for ParentalControlBlockUnratedContent")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for Policy" id="53dc4660-d02b-43d1-bbed-04bf0682ccb8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyRequestEntity","urn:dece:userid:org:dece:"+tC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("policyClass", "ParentalControl:BlockUnratedContent");

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for ParentalControlBlockUnratedContent")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbvU+I8EP7uX9HpfbwpbaH8aEeYQap3iKceRc/xixPThUbaFJO0gH/9JcVWQPT13hlmmGw3u8/uPnmSY46SuO71OQcmSEq1od/VH5ohDhF228YUABmOXUdG57HVNpqP7hSD5YbyT9eGnGcwpFwgKrp63bIdw2oadnNiuZ7jeI5d6zSce127BcZlaOlSs3RtlcSUe0Xarp4x6qWIE+5RlAD3BPaC/q8LT3p6qMSk9443KIuErBcJsfBME9dCwBDHuIbTxDw2d3yOQ+4FZEaRyBi85gx5V3/du1wua8tGLWUzs25Zlmm5pvQJOZl903tH5WYIh3SabtYDRFNKMIrJC1KgfoGI0lDrx7OUERElH4S2TdtSoQ1YYQPbDv2mm28JCnRfjLQDknFk8AjZZbAxTIEBxaDdjIdd/dvXJrjZO2GI8mnKEr63/jdIQHOI0wWEBi8rK9F9PeKBdvWOAXtDiuOMkxwuFU0WCAPXrhlMyeqCcEm+kGvF+LUVlz9Ssgzwv4zl2NzGKqGbB7rjkxlw8X9mtj2vTZRbFGfQW6/XoT92/PNRv2mPMhSwKFjh+SSv824BYdt5A6oa9+t6n6wVt143jfLfsDw9m3fiAfX9l6cOOmHrH5fn+JKNWzM6+3N1GVjR+qmNrjo/hhG7PLeSpB3f/LiFiJt/bDLt359MxqeBO789ykdtn8/J/SB+mdsOaQQjarJ8RRujm7Vt3bGX1mqSN3mD3aytxc+bq/nPtn1/d/fUpDfDE3bRObkY3V/74nfCXvDRozl3v+f276er79F1ePqnQzrdt5q2a9g1lpIQZI9PgEW5VPQY+tqZnBcSn8uLspDQmBau3kJpFBdAhd5Tu5S0eJkUIBJ6cpib9ZnbOrVOzuxGp+M2mm7j1HIs+8zqW23XbTfOWqUGbVDsQRykdEpULqWyG/58DhAnHgcaAjPyNMMRcP2TiD4SSBvSsTwcKeUwSaWKo6btLmHOn1oiWsxXlDsWyzmWp+MyFVf0ivWnAtiOctv1HeUeAyYLAkreFb+5JDgXshXPKM9EbNdyVKOQyQuAKQ326k6naXKSLGJQQM0kDbMYaotoUTTG5Jv/uoEwL6z+RT+4fhgED3Zx/D6sbv9b2QjpExLlwFVJJyCHCQduokZZz7u6mwdvrDJ8PwuJOmWyq4IRvEGy++mNLIolFVPeCiuRVxv2DTvBzf26qnxhTnDF+uq6lmovtaBXDucZ1Z5rWZ5nxTjaSueYDG9KubPNAHAmxWo9SedAzSqE+aW7okK9l7my7+LLREQDgQQkkjxasfzCQyEArh4KQ0n61VdfITspZd8ErMQh2yCW7wmF+NMnB/aw8pPma/m3TFn4Nq4DsbbyyDrl60AQOlMrdSusP+AGTmVYImUsZdvBDwU4lHzXWDW5wiIkmx4zAR9/0ZQ+dXWEcZpRMfT1wrCtmQVOsV6A9+b0Lkyhy68X7Yp/eNHe/boIpHolSK98yX87G6SgCwZd3ecFlq6+ku9GmZzOtjT6FeC+TNstx7dPB22/5dT3ZLpTNXCnkt4783vLVk/3z0PvLw==</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:F96E164D1EC7D642E0401F0A079973F8</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>ParentalControl:BlockUnratedContent</con:value></con:property><con:property><con:name>policyCreator</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>policyExists</con:name><con:value>false</con:value></con:property><con:property><con:name>policyGetXML</con:name><con:value><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:Policy:PolicyNotFound">
      <Reason Language="en">The policy was not found.</Reason>
      <OriginalRequest>https://qa.q.uvvu.com:8001/rest/1/11/Account/urn:dece:accountid:org:dece:F96E164D1EC7D642E0401F0A079973F8/User/urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6/Policy/urn:dece:type:policy:ParentalControl:BlockUnratedContent</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/11/error/en/ErrorList.html#Policy:PolicyNotFound</ErrorLink>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>policyRequestEntity</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>policyResource</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>policyStatus</con:name><con:value>urn:dece:type:status:active</con:value></con:property><con:property><con:name>returnXMLResult</con:name><con:value>true</con:value></con:property><con:property><con:name>sName</con:name><con:value>Portal Test Cases_P1_P2</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_78150 - StreamListView - PORTAL - Policy - AllowAdult - US - MMPA - Can view stream IS_ADULT = 'y'</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>77798</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>F96E164D220FD642E0401F0A079973F8</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>F96E0BF138893593E0401F0A079973F6</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>F96E164D1EC7D642E0401F0A079973F8</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Policy - Remove Manage account consent policy" searchProperties="true" id="9eccc53d-9a3d-4075-906d-df97d506e2fe"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="9712c6af-18b5-4db6-bf8f-668b3dc133b6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("policyExists",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("policyRequestEntity",null);
tC.setPropertyValue("policyResource",null);
tC.setPropertyValue("policyCreator",null);
tC.setPropertyValue("returnXMLResult","true");
tC.setPropertyValue("policyStatus","urn:dece:type:status:active");
tC.setPropertyValue("username",null);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Calling Test Case Properties" id="1fa7228f-7cc6-4386-b978-6892f7d163f5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("useroid",callTC.getPropertyValue("useroid"));
tC.setPropertyValue("username",callTC.getPropertyValue("username"));
</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for ParentalControl:RatingPolicy" disabled="true" id="a072011e-8bef-4a24-9614-c1b259a63729"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "urn:dece:type:policy:ParentalControl:RatingPolicy");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyDelete for ParentalControl:RatingPolicy" disabled="true" id="fcba3e1e-6fa9-4caf-871e-65c2eec0b73c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
	
if (tC.getPropertyValue("policyExists") == "true") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:ParentalControl:RatingPolicy");

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyDelete for User")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for ParentalControl:BlockUnratedContent" disabled="true" id="d5a543a0-1b73-4443-b16a-c6ad9e3b7e74"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "urn:dece:type:policy:ParentalControl:BlockUnratedContent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyDelete for ParentalControl:BlockUnratedContent" disabled="true" id="30ec3ad6-1168-476a-81b0-fec6b1bf9bf9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
	
if (tC.getPropertyValue("policyExists") == "true") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:ParentalControl:BlockUnratedContent");

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyDelete for User")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for ParentalControl:AllowAdult" disabled="true" id="9ac96149-b476-4c1c-83fc-0fc99a6725e4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "urn:dece:type:policy:ParentalControl:AllowAdult");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyDelete for ParentalControl:AllowAdult" disabled="true" id="1da7032f-f28e-4353-8593-4087b99a963a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
	
if (tC.getPropertyValue("policyExists") == "true") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:ParentalControl:AllowAdult");

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyDelete for User")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for Manage Account Consent" id="f5b86225-84a2-4b04-9933-298e8a829d74"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "ManageAccountConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyGet for Account")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="remove policies" id="5ed178c5-2438-44dd-a856-a78b1e184ed6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def responseXML = tC.getPropertyValue("policyGetXML");
def policyOid=null;

a = new dbUtils.dbPolicy(log,tP.getPropertyValue("targetSystem"));

def myXML = null;
if(responseXML != null)
{
                try
                {
                                myXML = new XmlSlurper().parseText(responseXML);
                }
                catch(Throwable e)
                {
                                log.info e;                                                                            
                }
}

// Assert that policyListSize is 2 (EMUC and MAC)

log.info myXML.Policy.size()
for(i = 0; i &lt; myXML.Policy.size(); i++)
{        
	policyOid = myXML.Policy[i].@PolicyID.toString().split(':')[5]; 
log.info policyOid;

a.policySetDeleted(policyOid)
//a.sqlPolicyStatus(policyOid,'deleted')
               
}</script></con:config></con:testStep><con:properties><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbZcuo4EP0Vyvcx5RWzuQJVBkLirBDIxsuUkGVQsCXHklny9SMZcDAhGe48udRunT696EjnDESh5biMoYRjSkqrKCTMyaxNJU2IQwHDzCEgQszh0Bm6d7eOpRkO2G1RSl63qfwzqQbArvl1FQU1W7VN21InwKqJpVGvNapmHRi2cGUsRR5hHBDeVCzDtFWjoZrGyGg45ZpTqWmVhj1WSs8oYQJbuGiGsiW1Yk1lxnns6PpyudSWZY0mU90yDFN/vbsdwhmKgNI632SUBUpaW3+o+QiiMIQapJF+rhd8zn3mDPGUAJ4maBvL/ymWoRsNXfj4DE//KPle5HskoNmyAwglGIIQfwJZnzvEZ9QvueGUJpjPoh+TMA0JrKIVVKFpkz+KXqR2IlCBYcKAymbA3GI9ogAliEBUenr0msqf07qWbR0lgLCAJhErLv+ODyILFNIY+SrbpbWldjrgkUq1zhF0PALDlOEFupfDGgOI2LabCJ4OVeonKMCrW8zEgK6YZKfv0ztYbqrRxVPE+P9p0F5zNiDPIExRq9dvjKPZ4O29staJPbp+GI4H86tB2H+DzYzAvnNmyFu7WR4MZT5Emx24PIj6/XvLnI5M4K0fz669qXt5rU+IGfbGN/NG/6Y9H7vPeHTfTuvzvrXS3U/4MqbJ+3hSaUzf8NV49PpwsYbV9U3a/XgNZ8urt6e4Xk7eVyxaB5fl1bV5/RKdLa7mT8tOO6676cenZeNB4Hbp2cMMzt4G/V6cXlqrmhfiMvUnNy8DRoceXcaN9BJ2q/3OFFn1Zp7OHv+ibXfmh+nkHUG+W8ox8LqlnugS4L+LmbRgXw0yVyeW4sM4IlxpyV1SO5xUyB32HdHDzdqw2mW33eu5RrlsVC7sC6Mivo2G2TPcumFVdiKzYXFAsUNJgGUsKbmbsfmdIIwchoiPEnVBU6F0TPkFsQs4KHnkURwCShgaUSHPpuGnSXUyrc/LPDCD9cSuflbtd98MlNI95Q/kIXEDjpKCKJtWQZQfEcQxRlK55WAzMdmMi2J8gEXKQ1NbAI2gVGh7ImXWsex6RWc4ikMkqeoR9dMQafEszkqjs83XUgFkmRUzGNOEgzA7EfqP+R3+25VC+PhYOjCZUhuJdqIjl4y9y+db3pWjl9EO3k19LA+YqCtPMNwwKf76Ghc5J/msfCW2Y55v+EsAyI5A6L/w0w9Lk0f0F3gv/u42F/eCUJLWrr8fQPvQ0sUizTpak4qZCHhdFks3LH2IYCq0bj2ic0T0HEU/6WLJiR8Ez+1FiimfkSEHHEViBEvZ8oSXxBAx+ZLwxOFZnfpMKYQUpeNoxY/ZOqF4BUnGvz6UoAOlnzD3xWdJE/+rY0ew9uKIPMVDgmMylSt5qax/GBBIBSwWckiTffBjAMeCF415kXMuXAzUJOXo5z8lqXNNBUBIU8K9rpIZ9rU348nXMXK+nL7BZPKev/fwfz/4VJyNAETilchwhi+vbUceATLd0+9t0EMJ73S71XqtXauY1e6+hLfbRjUvSoFd65v5u2WvTocz3voX</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:02B3CDD687B7516DE05305991F0ABB06</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:02B3ABFFA03305E4E05305991F0A8025</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>policyClass</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ManageAccountConsent</con:value></con:property><con:property><con:name>policyCreator</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyExists</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">false</con:value></con:property><con:property><con:name>policyGetXML</con:name><con:value><![CDATA[<dece:PolicyList xmlns:dece="http://www.decellc.org/schema/2015/03/coordinator" xmlns:md="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#">
   <dece:Policy PolicyID="urn:dece:policyid:org:dece:09B47CBA97897C5EE05305991F0A23AF">
      <dece:PolicyClass>urn:dece:type:policy:ManageAccountConsent</dece:PolicyClass>
      <dece:Resource>urn:dece:accountid:org:dece:02B3CDD687B7516DE05305991F0ABB06</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:iscportal1</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:role:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreationDate="2014-12-08T12:27:08.000Z" CreatedBy="urn:dece:userid:org:dece:02B3ABFFA03305E4E05305991F0A8025">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>]]></con:value></con:property><con:property><con:name>policyRequestEntity</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyResource</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyStatus</con:name><con:value>urn:dece:type:status:active</con:value></con:property><con:property><con:name>returnXMLResult</con:name><con:value>true</con:value></con:property><con:property><con:name>sName</con:name><con:value>Portal Test Cases_P1_P2</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_78051 - StreamListView - PORTAL - Policy - ParentalControl:RatingPolicy - US - MMPA - PG rating - Full User</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>81175</con:value></con:property><con:property><con:name>useroid</con:name><con:value>02B3ABFFA03405E4E05305991F0A8025</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value/></con:property><con:property><con:name>username</con:name><con:value>stream_list_view_20140910_053746</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>e49350ab-f189-4e52-ba89-4c768adb0cf7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f5b86225-84a2-4b04-9933-298e8a829d74</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Policy - Establish Manage account consent policy" searchProperties="true" id="2f86177d-59a6-4429-bc6c-3015e3f29586"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="1a6ee4ec-6211-4bc5-b644-0b2d89a2dff5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("policyExists",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("policyRequestEntity",null);
tC.setPropertyValue("policyResource",null);
tC.setPropertyValue("policyCreator",null);
tC.setPropertyValue("policyStatus","urn:dece:type:status:active");
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("assertionAccountId",null);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Calling Test Case Properties" id="e2e8758a-4804-449e-afdd-ac6c127fc209"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for UserLinkConsent" disabled="true" id="7379b441-4d9a-46ec-9847-6fdc90f861e9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "urn:dece:type:policy:UserLinkConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for UserLinkConsent if necessary" disabled="true" id="4609ac81-f02d-4f93-8f5a-12970194e6d8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("policyExists") == "false") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:UserLinkConsent");
	tC.setPropertyValue("policyRequestEntity",tP.getPropertyValue("urnNode") + tC.getPropertyValue("nodeid"));
	tC.setPropertyValue("policyResource",tC.getPropertyValue("assertionUserIdFULL"));
	tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for User")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for EnableManageUserConsent" disabled="true" id="902f37c7-e58b-4b92-afa1-a3e357d05d3a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableManageUserConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for Account")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for EnableManageUserConsent if necessary" disabled="true" id="d6fe57fb-0d29-4c9d-a7de-f3d6ff856dbe"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("policyExists") == "false") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableManageUserConsent");
	tC.setPropertyValue("policyRequestEntity",tP.getPropertyValue("urnNode") + tC.getPropertyValue("nodeid"));
	tC.setPropertyValue("policyResource",tC.getPropertyValue("assertionUserIdFULL"));
	tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for Account")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for ManageAccountConsent" id="5ab3662e-cea4-447e-9e2d-2d87c8bae359"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "ManageAccountConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyGet for Account")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for ManageAccountConsent if necessary" id="ff5915af-bd9c-4b48-8319-c20254a5c893"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("policyExists") == "false") {
	tC.setPropertyValue("policyClass", "ManageAccountConsent");
	tC.setPropertyValue("policyRequestEntity","urn:dece:org:org:dece:"+tC.getPropertyValue("nodeid"));
	tC.setPropertyValue("policyResource","urn:dece:accountid:org:dece:"+tC.getPropertyValue("assertionAccountId"));
	tC.setPropertyValue("policyCreator","urn:dece:userid:org:dece:"+tC.getPropertyValue("assertionUserId"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for Account")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for EnableUserDataUsageConsentRequired" disabled="true" id="59314c52-08fb-4022-8c78-0a6d70e0560a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableUserDataUsageConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for Account")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for EnableUserDataUsageConsentRequired if necessary" disabled="true" id="79070034-3219-4d53-a2be-48058af12956"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("policyExists") == "false") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableUserDataUsageConsent");
	tC.setPropertyValue("policyRequestEntity",tP.getPropertyValue("urnNode") + tC.getPropertyValue("nodeid"));
	tC.setPropertyValue("policyResource",tC.getPropertyValue("assertionUserIdFULL"));
	tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for Account")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for EnableUserDataUsageConsent" disabled="true" id="d15c1e8b-e31e-4ab1-9684-4683af8e651c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableUserDataUsageConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for Account")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for EnableUserDataUsageConsent if necessary" disabled="true" id="8332289b-8a40-45ee-a9c2-4deab8b567f4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("policyExists") == "false") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableUserDataUsageConsent");
	tC.setPropertyValue("policyRequestEntity",tP.getPropertyValue("urnNode") + tC.getPropertyValue("nodeid"));
	tC.setPropertyValue("policyResource",tC.getPropertyValue("assertionUserIdFULL"));
	tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for Account")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for UserDataUsageConsent" disabled="true" id="539220fd-288d-4913-bd29-43bd93c456b2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "urn:dece:type:policy:UserDataUsageConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for UserDataUsageConsent if necessary" disabled="true" id="3963bc41-91ea-402a-8944-78f6098040f6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("policyExists") == "false") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:UserDataUsageConsent");
	tC.setPropertyValue("policyRequestEntity",tP.getPropertyValue("urnNode") + tC.getPropertyValue("nodeid"));
	tC.setPropertyValue("policyResource",tC.getPropertyValue("assertionUserIdFULL"));
	tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for User")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:02B3ABFFA03305E4E05305991F0A8025</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:02B3CDD687B7516DE05305991F0ABB06</con:value></con:property><con:property><con:name>policyExists</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">false</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_78051 - StreamListView - PORTAL - Policy - ParentalControl:RatingPolicy - US - MMPA - PG rating - Full User</con:value></con:property><con:property><con:name>sName</con:name><con:value>Portal Test Cases_P1_P2</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>ManageAccountConsent</con:value></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbZcuo4EP0Vyvcx5RWzuQJVBkLirBDIxsuUkGVQsCXHklny9SMZcDAhGe48udRunT696EjnDESh5biMoYRjSkqrKCTMyaxNJU2IQwHDzCEgQszh0Bm6d7eOpRkO2G1RSl63qfwzqQbArvl1FQU1W7VN21InwKqJpVGvNapmHRi2cGUsRR5hHBDeVCzDtFWjoZrGyGg45ZpTqWmVhj1WSs8oYQJbuGiGsiW1Yk1lxnns6PpyudSWZY0mU90yDFN/vbsdwhmKgNI632SUBUpaW3+o+QiiMIQapJF+rhd8zn3mDPGUAJ4maBvL/ymWoRsNXfj4DE//KPle5HskoNmyAwglGIIQfwJZnzvEZ9QvueGUJpjPoh+TMA0JrKIVVKFpkz+KXqR2IlCBYcKAymbA3GI9ogAliEBUenr0msqf07qWbR0lgLCAJhErLv+ODyILFNIY+SrbpbWldjrgkUq1zhF0PALDlOEFupfDGgOI2LabCJ4OVeonKMCrW8zEgK6YZKfv0ztYbqrRxVPE+P9p0F5zNiDPIExRq9dvjKPZ4O29staJPbp+GI4H86tB2H+DzYzAvnNmyFu7WR4MZT5Emx24PIj6/XvLnI5M4K0fz669qXt5rU+IGfbGN/NG/6Y9H7vPeHTfTuvzvrXS3U/4MqbJ+3hSaUzf8NV49PpwsYbV9U3a/XgNZ8urt6e4Xk7eVyxaB5fl1bV5/RKdLa7mT8tOO6676cenZeNB4Hbp2cMMzt4G/V6cXlqrmhfiMvUnNy8DRoceXcaN9BJ2q/3OFFn1Zp7OHv+ibXfmh+nkHUG+W8ox8LqlnugS4L+LmbRgXw0yVyeW4sM4IlxpyV1SO5xUyB32HdHDzdqw2mW33eu5RrlsVC7sC6Mivo2G2TPcumFVdiKzYXFAsUNJgGUsKbmbsfmdIIwchoiPEnVBU6F0TPkFsQs4KHnkURwCShgaUSHPpuGnSXUyrc/LPDCD9cSuflbtd98MlNI95Q/kIXEDjpKCKJtWQZQfEcQxRlK55WAzMdmMi2J8gEXKQ1NbAI2gVGh7ImXWsex6RWc4ikMkqeoR9dMQafEszkqjs83XUgFkmRUzGNOEgzA7EfqP+R3+25VC+PhYOjCZUhuJdqIjl4y9y+db3pWjl9EO3k19LA+YqCtPMNwwKf76Ghc5J/msfCW2Y55v+EsAyI5A6L/w0w9Lk0f0F3gv/u42F/eCUJLWrr8fQPvQ0sUizTpak4qZCHhdFks3LH2IYCq0bj2ic0T0HEU/6WLJiR8Ez+1FiimfkSEHHEViBEvZ8oSXxBAx+ZLwxOFZnfpMKYQUpeNoxY/ZOqF4BUnGvz6UoAOlnzD3xWdJE/+rY0ew9uKIPMVDgmMylSt5qax/GBBIBSwWckiTffBjAMeCF415kXMuXAzUJOXo5z8lqXNNBUBIU8K9rpIZ9rU348nXMXK+nL7BZPKev/fwfz/4VJyNAETilchwhi+vbUceATLd0+9t0EMJ73S71XqtXauY1e6+hLfbRjUvSoFd65v5u2WvTocz3voX</con:value></con:property><con:property><con:name>policyRequestEntity</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:org:org:dece:iscportal1</con:value></con:property><con:property><con:name>policyResource</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:02B3CDD687B7516DE05305991F0ABB06</con:value></con:property><con:property><con:name>policyCreator</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:02B3ABFFA03305E4E05305991F0A8025</con:value></con:property><con:property><con:name>policyStatus</con:name><con:value>urn:dece:type:status:active</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value/></con:property><con:property><con:name>assertionUserId</con:name><con:value>02B3ABFFA03305E4E05305991F0A8025</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>02B3CDD687B7516DE05305991F0ABB06</con:value></con:property><con:property><con:name>policyGetXML</con:name><con:value><![CDATA[<dece:ErrorList xmlns:dece="http://www.decellc.org/schema/2015/03/coordinator" xmlns:md="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#">
   <dece:Error ErrorID="urn:dece:errorid:org:dece:Policy:PolicyNotFound">
      <dece:Reason Language="en">The policy was not found.</dece:Reason>
      <dece:OriginalRequest>http://stdecqavap1.va.neustar.com:8009/rest/2015/02/Account/urn:dece:accountid:org:dece:02B3CDD687B7516DE05305991F0ABB06/Policy/urn:dece:type:policy:ManageAccountConsent</dece:OriginalRequest>
      <dece:ErrorLink>https://qa.q.uvvu.com:7001/rest/2015/02/error/en/ErrorList.html#Policy:PolicyNotFound</dece:ErrorLink>
   </dece:Error>
</dece:ErrorList>]]></con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties><con:property><con:name>QC_TestPlanDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestLabDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestSet</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="End_To_End" disabled="true" id="3356a086-9cf0-40b3-91be-852e4db300fd"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AccountNameGeneration" searchProperties="true" id="2a8030d2-2150-4e29-842e-6fd28b3e851e"><con:settings/><con:testStep type="calltestcase" name="AccName" id="61c7e802-5372-42e1-bb82-34d15d28b5d9"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c19e470b-c5fb-4bef-ae93-d31d4bda6c1c</con:targetTestCase><con:properties><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>tName</con:name></con:property><con:property><con:name>sName</con:name></con:property></con:properties><con:returnProperties><con:entry>synced</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:properties><con:property><con:name>UserNameCounter</con:name><con:value>6</con:value></con:property><con:property><con:name>LoopUntil</con:name><con:value>6</con:value></con:property><con:property><con:name>tName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>sName</con:name><con:value>E2E</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c0697308-b6c8-47f7-96a0-bcb6977b8f38</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AccountCreate" searchProperties="true" id="255c9e9b-c52b-4c06-bb2c-270e3d587b03"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:testStep type="groovy" name="Set pem" id="55fe967b-6b2b-473d-b746-8136b4e3a054"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tP.getPropertyValue("Node_OID"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("Account_Create");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="Account_Create" id="bf135464-ae3a-4477-981c-9887ddd7b980"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account" methodName="AccountCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Account_Create" mediaType="application/xml" postQueryString="false" id="ca4ff0a9-00f8-41e3-871a-d799b7db932c" accept="application/xml" sslKeystore="iscportal1_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@remove_empty_content">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="discardResponse">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="${#Project#coordinatorSchema}"> 
<DisplayName>${#Project#AccountDisplayName}</DisplayName>
<Country>US</Country>
</Account>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="03ecb40c-96be-49ac-b978-5200b11706c0"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="f4b74fde-cb13-4c46-a85f-333d2658bd81"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('Account_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="3aff6304-13fd-43a0-8799-2f5773a54b36"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def url       = context.expand( '${#Project#Provision_HostName}' );
def nodeacc = context.expand( '${#Project#NODEACCID}' )
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#VersionMajor}' );
String minor = context.expand( '${#Project#VersionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The supplied country code is invalid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code cannot be null.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "API call not authorized";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:UserNotActive";
	errorReason = "User is not active";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;	
	
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

     if(minor == tP.getPropertyValue("versionUrlEncode"))
     {
	assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*");
	
	int lastColon = urlStr.lastIndexOf('%');
	int lastSlash = urlStr.lastIndexOf('/');
	nodeaccountid     = urlStr.substring(lastSlash + 1);
	accountid = urlStr.substring(lastColon + 3);
	
	tP.setPropertyValue("ACCOUNTID",accountid);
	tP.setPropertyValue("NODEACCOUNTID",nodeaccountid);
     }
     else
     {
	assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
	
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	nodeaccountid     = urlStr.substring(lastSlash + 1);
	accountid = urlStr.substring(lastColon + 1);
	
	tP.setPropertyValue("ACCOUNTID",accountid);
	tP.setPropertyValue("NODEACCOUNTID",nodeaccountid);
     }
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:properties><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa1.q.uvvu.com/rest/2015/02/Account/urn:dece:accountid:org:dece:15575C84AC6137B6E05305991F0A686D</con:value></con:property><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>Node_OID</con:name><con:value>500500</con:value></con:property><con:property><con:name>tName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>sName</con:name><con:value>E_2_E</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/iscportal1_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>39da0c46-7f38-4527-b6be-af58fbc91aba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bf0fa3e3-b1e7-4bf9-9635-da2c55ceeed9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0696f15b-f3ce-463e-b03b-33fc4c9d061d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserNameGeneration" searchProperties="true" id="07177cec-6443-413f-96f4-85ca1f9303b6"><con:settings/><con:testStep type="groovy" name="SetCounter" id="c336235d-ee73-45ba-b740-e13e475cac7e"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

testCase.setPropertyValue("UserNameCounter","1");
testCase.setPropertyValue("LoopUntil","6");</script></con:config></con:testStep><con:testStep type="calltestcase" name="Get_UserName" id="958be33f-e1a3-4683-a519-0b62d310f89e"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>bc9c9b20-6afd-4014-bc46-c13e91c6ff98</con:targetTestCase><con:properties><con:property><con:name>synced</con:name></con:property><con:property><con:name>Node_Value</con:name></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="delay" name="Delay" id="eba2c936-ddf6-4aac-97e0-f4b7804abc49"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="SetUserNames" id="6f94fda7-8f9e-4ad0-b63c-48ff80fa0d82"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def UserName = testProject.getPropertyValue("UserName");

def count = testCase.getPropertyValue("UserNameCounter").toInteger();

if(count == 1)
{
	testProject.setPropertyValue("UserName_FAU1",UserName);
	log.info "==============="
}
if(count == 2)
{
	testProject.setPropertyValue("UserName_SAU1",UserName);
	log.info "==============="
}
if(count == 3)
{
	testProject.setPropertyValue("UserName_BAU1",UserName);
	log.info "==============="
}
if(count == 4)
{
	testProject.setPropertyValue("UserName_FAU2",UserName);
	log.info "==============="
}
if(count == 5)
{
	testProject.setPropertyValue("UserName_SAU2",UserName);
	log.info "==============="
}
if(count == 6)
{
	testProject.setPropertyValue("UserName_BAU2",UserName);
	log.info "==============="
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Increment Counter and loop again if necessary" id="cd35ebc2-bafa-4118-907c-945441d92251"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def counter = testCase.getPropertyValue("UserNameCounter").toInteger();
def loopuntil = testCase.getPropertyValue("LoopUntil").toInteger();

counter++;

if (counter &lt;= loopuntil) {
    testCase.setPropertyValue("UserNameCounter",counter.toString());
    testRunner.gotoStepByName("Get_UserName");
}
</script></con:config></con:testStep><con:properties><con:property><con:name>UserNameCounter</con:name><con:value>6</con:value></con:property><con:property><con:name>LoopUntil</con:name><con:value>6</con:value></con:property><con:property><con:name>tName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>sName</con:name><con:value>E_2_E</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c0697308-b6c8-47f7-96a0-bcb6977b8f38</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="FirstUserCreate" searchProperties="true" id="9b01e3aa-04ef-48ed-99f6-5febd724e92d"><con:settings/><con:testStep type="groovy" name="Set properties from calling test case" id="98b94faf-bf5f-484c-bd50-0ed85be662a6"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

testCase.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
testCase.setPropertyValue("Password",callTC.getPropertyValue("Password"));
testCase.setPropertyValue("UserClass",callTC.getPropertyValue("UserClass"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="e524be12-0531-46af-a1b5-141871fd67fc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tP.getPropertyValue("Node_OID"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("User_Create");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="User_Create" id="6c8c882f-5443-4509-b2bf-636c7ec2e69a"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account" methodName="AccountUserCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User_Create" mediaType="application/xml" postQueryString="false" accept="application/xml" sslKeystore="iscportal1_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="${#Project#coordinatorSchema}"> 
	<DisplayName>${#Project#AccountDisplayName}</DisplayName>
	<Country>${#Project#Country}</Country>
	<UserList>
<User UserClass="urn:dece:role:user:class:full" xmlns="${#Project#coordinatorSchema}">
	<Name>
        	<GivenName>${#Project#UserName}</GivenName>
		<SurName>uvtc_user</SurName>
	</Name>	
	<ContactInfo>
        <PrimaryEmail>			
	 <Value>testing@uvvutesting.biz</Value>
        <!--<Value>sunitha.pemmasani@neustar.biz</Value>-->
        <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</PrimaryEmail>
	<AlternateEmail>			
        <Value>testing1@uvvutesting.biz</Value>			
        <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</AlternateEmail>
	</ContactInfo>
       <Credentials> 
               <Username>${#TestCase#UserName}</Username>	
                <Password>testing</Password> 
	</Credentials>
</User>
</UserList>
</Account>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="8ec19c93-3bf1-4caa-a49b-0e6eb7febc0b"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#NODEACCOUNTID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="07dcab9b-7c5b-4956-b081-4482deb245ad"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('User_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="d7cb8b76-e699-47a3-9eb5-784ddbbfb966"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');


boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#VersionMajor}' );
String minor = context.expand( '${#Project#VersionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The supplied country code is invalid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code cannot be null.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "API call not authorized";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:UserNotActive";
	errorReason = "User is not active";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

		case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The user does not have permission to create a full-access user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The user does not have permission to create a user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
			expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBe18OrOlder";
			errorReason = "First User must be 18 years or older";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBe18OrOlder";
	break;


	case "NO_MNG_ACC_CNST":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
			errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The first user in a household account must be a full-access user.";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;
	
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

                if (tP.getPropertyValue("versionMinor") != tP.getPropertyValue("versionURLEncode"))
                {                              
                                assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");                             
                } else {
                                assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");
                }

                urlStr = URLDecoder.decode(urlStr);
                def arrayString = urlStr.split("Account/");
      arrayString= arrayString[1].split("/User/");
      log.info "Node_User_ID=="+arrayString[1]
      log.info "Node_Account_ID=="+arrayString[0]


      

       int lastColon = arrayString[1].lastIndexOf(':');
       accountid     = arrayString[0].substring(lastColon+4);
       userid     = arrayString[1].substring(lastColon +1);
       def useridfull = arrayString[1];    
       def accountidfull = arrayString[0];     
       log.info useridfull  
                                         
       
 
     tP.setPropertyValue("ACCOUNTID",accountid);
	tP.setPropertyValue("NODEACCOUNTID",accountidfull);                           
	tP.setPropertyValue("USERID",userid);
	tP.setPropertyValue("USERIDFULL",useridfull);
	tP.setPropertyValue("NODEUSERID",useridfull);
	

     }
 else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:properties><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa1.q.uvvu.com/rest/2015/02/Account/urn:dece:accountid:org:dece:188AE1B462283094E0533D991F0A7A41/User/urn:dece:userid:org:dece:188AE1B462293094E0533D991F0A7A41</con:value></con:property><con:property><con:name>tName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>sName</con:name><con:value>E_2_E</con:value></con:property><con:property><con:name>UserName</con:name><con:value>stream_list_view_20150615_014510</con:value></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>UserClass</con:name><con:value>urn:dece:role:user:class:full</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/iscportal1_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f3628e8-17b4-4b24-9a27-1a62fd725b3a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserCreate_Standard" searchProperties="true" id="ad17f106-edd0-4ed8-bdac-35f384c4eb2c"><con:settings/><con:testStep type="groovy" name="Set properties for User" id="ed6cfea0-8c4b-4cf3-b93d-00d892b33ee6"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

testCase.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
testCase.setPropertyValue("Password",callTC.getPropertyValue("Password"));
testCase.setPropertyValue("UserClass",callTC.getPropertyValue("UserClass"));
testCase.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
testCase.setPropertyValue("DateOfBirth",callTC.getPropertyValue("DateOfBirth"));

def NODEUSERIDFULLDecoded = URLDecoder.decode(testProject.getPropertyValue("NODEUSERIDFULL"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDFULLDecoded",NODEUSERIDFULLDecoded)
</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="e00c4c9f-427d-4faa-b1c4-59847c97518d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tP.getPropertyValue("Node_OID"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("User_Create");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="User_Create" id="89df13d0-ab80-45ef-b158-4c2469e9314d"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account/{AccountID}/User" methodName="UserCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User_Create" mediaType="application/xml" postQueryString="false" accept="application/xml" sslKeystore="iscportal1_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="${#TestCase#UserClass}" xmlns="${#Project#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
        	<GivenName>${#TestCase#UserName}</GivenName>
		<SurName>sau</SurName>
	</Name>	
	<ContactInfo>
        <PrimaryEmail>			
	       <Value>${#Project#primaryemail}</Value>
               <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</PrimaryEmail>
	<AlternateEmail>			
        <Value>${#Project#AlternateEmail}</Value>			
        <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</AlternateEmail>
	<!--Address>
		<PostalAddress>45999 Center Oak Plaza</PostalAddress>
		<PostalCode>20166</PostalCode>
		<Locality>Sterling</Locality>
		<StateOrProvince>NJ</StateOrProvince>
                <Country>UK</Country>
	</Address-->
	</ContactInfo>
        <Languages>
		<Language>de</Language>	
	</Languages>
<!-- <DateOfBirth> depricated </DateOfBirth> -->      <LegalGuardian>${#TestCase#NODEUSERIDDecoded}</LegalGuardian>
       <Credentials> 
               <Username>${#TestCase#UserName}</Username>	
                <Password>${#TestCase#Password}</Password> 
	</Credentials>
<UserRecoveryTokens>
      <RecoveryItem>
		<QuestionID>1200</QuestionID>  
		<QuestionResponse>Turner</QuestionResponse>
       </RecoveryItem>
       <RecoveryItem>
		<QuestionID>1650</QuestionID>  
		<QuestionResponse>Phoenix</QuestionResponse>
       </RecoveryItem> 
</UserRecoveryTokens>
</User>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="8ec19c93-3bf1-4caa-a49b-0e6eb7febc0b"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#NODEACCOUNTID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="76c95eed-8de2-4f33-92da-95f586d95feb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('User_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="8f0167bc-a327-4221-8569-74be9987cf30"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#VersionMajor}' );
String minor = context.expand( '${#Project#VersionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The supplied country code is invalid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code cannot be null.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "API call not authorized";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:UserNotActive";
	errorReason = "User is not active";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

		case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The user does not have permission to create a full-access user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The user does not have permission to create a user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
			expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBe18OrOlder";
			errorReason = "First User must be 18 years or older";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBe18OrOlder";
	break;


	case "NO_MNG_ACC_CNST":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
			errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The first user in a household account must be a full-access user.";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;
	
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

     if(minor == tP.getPropertyValue("versionUrlEncode")){
	assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");	
	int lastColon = urlStr.lastIndexOf('%');
	int lastSlash = urlStr.lastIndexOf('/');
	nodeuserid     = urlStr.substring(lastSlash + 1);
	userid = urlStr.substring(lastColon + 3);
     tP.setPropertyValue("NODEUSERID",nodeuserid);
	tP.setPropertyValue("USERID",userid);
     }
     else
     {
     assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");	
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	nodeuserid     = urlStr.substring(lastSlash + 1);
	userid = urlStr.substring(lastColon + 1);
     tP.setPropertyValue("NODEUSERID",nodeuserid);
	tP.setPropertyValue("USERID",userid);
     }
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:properties><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa1.q.uvvu.com/rest/2015/02/Account/urn:dece:accountid:org:dece:188AE1B462283094E0533D991F0A7A41/User/urn:dece:userid:org:dece:188AE1B462B13094E0533D991F0A7A41</con:value></con:property><con:property><con:name>tName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>sName</con:name><con:value>E_2_E</con:value></con:property><con:property><con:name>UserName</con:name><con:value>stream_list_view_20150615_014514</con:value></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:DB93D9108325E854E0401F0A0799736D</con:value></con:property><con:property><con:name>UserClass</con:name><con:value>urn:dece:role:user:class:standard</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1997-01-07</con:value></con:property><con:property><con:name>NODEUSERIDFULLDecoded</con:name><con:value>urn:dece:userid:org:dece:E242BD618670D40CE0401F0A059921A3</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/iscportal1_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f3628e8-17b4-4b24-9a27-1a62fd725b3a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PoliciesForFirstUser" searchProperties="true" id="9e30670d-cbb5-4d95-b931-12d481fa720d"><con:settings/><con:testStep type="groovy" name="Set pem" id="35d3a272-1aa4-447b-b3d9-06e394d19bdb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

testProject.setPropertyValue("userIndex","0");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",testProject.getPropertyValue("Node_OID"));
myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep0 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");
RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_UserLinkConsent");
RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");

//String keyStorePath = testCase.getPropertyValue("KeyStorePath");
//String keyStoreAlias = testCase.getPropertyValue("notValidExpiredNode");

def keyStorePath = testCase.getPropertyValue("keyStorePath");
//this.log.info "testStep [$testStep]";
//this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep0, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Encoded NodeUserID" id="8ab47e29-dcc8-4ecd-b2d5-e911901ab327"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();



def testStep = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" )
if( testStep.disabled )
  testStep.disabled = false;



if(testProject.getPropertyValue("count") != "1"){
//def NODEUSERIDEncoded = URLEncoder.encode(testProject.getPropertyValue("NODEUSERID"),"UTF-8");
//testProject.setPropertyValue("NODEUSERID",NODEUSERIDEncoded)
//testProject.setPropertyValue("NODEUSERIDFAU1_Encoded",NODEUSERIDFAU1_Encoded)

//def NODEACCOUNTIDEncoded = URLEncoder.encode(testProject.getPropertyValue("NODEACCOUNTID"),"UTF-8");
//testProject.setPropertyValue("NODEACCOUNTID",NODEACCOUNTIDEncoded)

testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = true;	
}



</script></con:config></con:testStep><con:testStep type="groovy" name="set user index and create policies" id="147a5436-a8f3-4fb9-8895-cd41e638a445"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def audienceArray = testProject.getPropertyValue("audienceList").toString();
if(audienceArray.contains(";"))
{
def audiencelistArray = testProject.getPropertyValue("audienceList").toString().split(";");
def l = audiencelistArray.length;
log.info "l==="+l;
def userIndex = testProject.getPropertyValue("userIndex").toInteger();
log.info "userindex====="+userIndex;


String nodeoid = testProject.getPropertyValue("nodeoid"+testProject.getPropertyValue("count")+testProject.getPropertyValue("userIndex"));
testProject.setPropertyValue("Node_OID",nodeoid.toString());

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",testProject.getPropertyValue("Node_OID"));
myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep0 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");
RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_UserLinkConsent");
RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");

def keyStorePath = testCase.getPropertyValue("keyStorePath");

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep0, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
if(testProject.getPropertyValue("userIndex") != "0"){
	testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = true;
}
}

</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_TOU" id="cdc16172-afcb-44d6-b4b2-ac56c40860ba"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_TOU" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="DLASP_CS_1_concat.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#coordinatorSchema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:TermsOfUse</dece:PolicyClass>
      <dece:Resource>${#Project#policy_TOU}</dece:Resource>    
      <dece:RequestingEntity>urn:dece:userid:org:dece:${#Project#USERID}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#Project#USERID}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>
]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="76a6d451-0751-487b-a822-7afe464d5c6d"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#NODEUSERID}"/>
  <con:entry key="PolicyClass" value="${#Project#urnPolicy}TermsOfUse"/>
  <con:entry key="NodeAccountId" value="${#Project#NODEACCOUNTID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_UserLinkConsent" id="5934d645-cfa4-4e60-8676-3922a7e60b95"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_UserLinkConsent" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="DLASP_CS_1_concat.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting></con:settings><con:encoding/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#coordinatorSchema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:UserLinkConsent</dece:PolicyClass>
      <dece:Resource>urn:dece:userid:org:dece:${#Project#USERID}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#Node_OID}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#Project#USERID}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>
</dece:PolicyList>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="3f24880e-3b76-4d4b-9613-3837945935d0"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#NODEUSERID}"/>
  <con:entry key="PolicyClass" value="${#Project#urnPolicy}UserLinkConsent"/>
  <con:entry key="NodeAccountId" value="${#Project#NODEACCOUNTID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_ManageUserConsent" id="a673430a-efaa-45b1-aba1-8e0919fbe6b5"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_ManageUserConsent" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="DLASP_CS_1_concat.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" xmlns:dece="${#Project#coordinatorSchema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:ManageUserConsent</dece:PolicyClass>
      <dece:Resource>urn:dece:userid:org:dece:${#Project#USERID}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#Node_OID}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#Project#USERID}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>
]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="0db5f4bd-bb18-40bf-87fe-157ef3181f84"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#NODEUSERID}"/>
  <con:entry key="PolicyClass" value="${#Project#urnPolicy}ManageUserConsent"/>
  <con:entry key="NodeAccountId" value="${#Project#NODEACCOUNTID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Go to policy create again if necessary" id="bd4e04b6-ec5b-4b13-9adf-1ffcfed9ecc9"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def audiencelistArray = tP.getPropertyValue("audienceList").toString().split(";");
def Length = audiencelistArray.length;
log.info "l====="+Length;
def userIndex   = tP.getPropertyValue("userIndex").toInteger();

if(Length > userIndex+1){
    userIndex++;
    log.info "========"+userIndex
    tP.setPropertyValue("userIndex",userIndex.toString());
    
    testRunner.gotoStepByName("set user index and create policies");
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Set the initial properties" id="3d53d039-9c4d-4732-9964-398d44b85ff0"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("userIndex","0");
String nodeoid = tP.getPropertyValue("nodeoid"+tP.getPropertyValue("count")+tP.getPropertyValue("userIndex"));
log.info"========"+nodeoid
tP.setPropertyValue("Node_OID",nodeoid.toString());
testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = false;

</script></con:config></con:testStep><con:properties><con:property><con:name>UserID</con:name><con:value>9E9EB486B0E941E6E0401F0A05996C5F</con:value></con:property><con:property><con:name>tName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>sName</con:name><con:value>E_2_E</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:E682B036DCFD188DE0401F0A05997A50</con:value></con:property><con:property><con:name>NODEACCOUNTIDDecoded</con:name><con:value>urn:dece:accountid:org:dece:E682B036D956188DE0401F0A05997A50</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/DLASP_CS_1_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2d787415-6ad6-4403-9bbc-37fb4687847b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ede2863a-87cd-4b07-8480-d41d12995398</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2f020102-31af-4191-b98e-c0bba2ab7ab5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>707eff09-f96a-455f-b067-5fcaba4a8db6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71a94c3c-2ce0-4432-b4cd-f0190ffabade</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5c31e517-f3d1-4b5b-8698-6d855054e184</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PoliciesForStandardUser" searchProperties="true" id="12468da2-cbf1-400b-a980-ebc553465ef8"><con:settings/><con:testStep type="groovy" name="Set pem" id="75a0c69f-8752-4fa8-95f9-4fa1c50ef774"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",testProject.getPropertyValue("Node_OID"));
myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep0 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");
RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_UserLinkConsent");
RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");

//String keyStorePath = testCase.getPropertyValue("KeyStorePath");
//String keyStoreAlias = testCase.getPropertyValue("notValidExpiredNode");

def keyStorePath = testCase.getPropertyValue("keyStorePath");
//this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep0, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Encoded NodeUserID" id="302c6453-910e-4e2c-ba62-a05c163efbc1"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def testStep = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" )
if( testStep.disabled )
  testStep.disabled = false;

if(testProject.getPropertyValue("count") != "1"){
//def NODEUSERIDEncoded = URLEncoder.encode(testProject.getPropertyValue("NODEUSERID"),"UTF-8");
//testProject.setPropertyValue("NODEUSERID",NODEUSERIDEncoded)
//testProject.setPropertyValue("NODEUSERIDFAU1_Encoded",NODEUSERIDFAU1_Encoded)
//
//def NODEACCOUNTIDEncoded = URLEncoder.encode(testProject.getPropertyValue("NODEACCOUNTID"),"UTF-8");
//testProject.setPropertyValue("NODEACCOUNTID",NODEACCOUNTIDEncoded)

testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = true;
}</script></con:config></con:testStep><con:testStep type="groovy" name="set user index and create policies" id="b5985e6c-7f14-4569-9c71-982079b7812d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def audienceArray = testProject.getPropertyValue("audienceList").toString();
if(audienceArray.contains(";"))
{
def audiencelistArray = testProject.getPropertyValue("audienceList").toString().split(";");
def l = audiencelistArray.length;
log.info "l==="+l;
def userIndex = testProject.getPropertyValue("userIndex").toInteger();
log.info "userindex====="+userIndex;


String nodeoid = testProject.getPropertyValue("nodeoid"+testProject.getPropertyValue("count")+testProject.getPropertyValue("userIndex"));
testProject.setPropertyValue("Node_OID",nodeoid.toString());

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",testProject.getPropertyValue("Node_OID"));
myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep0 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");
RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_UserLinkConsent");
RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");

def keyStorePath = testCase.getPropertyValue("keyStorePath");

//this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep0, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
if(testProject.getPropertyValue("userIndex") != "0"){
	testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = true;
}
}</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_TOU" id="353aee00-83d9-405c-bd80-e2f713b5571a"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_TOU" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="DLASP_CS_1_concat.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#coordinatorSchema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:TermsOfUse</dece:PolicyClass>
  <dece:Resource>${#Project#policy_TOU}</dece:Resource>    
      <dece:RequestingEntity>urn:dece:userid:org:dece:${#Project#USERID}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#Project#USERID}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>
]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="76a6d451-0751-487b-a822-7afe464d5c6d"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#NODEUSERID}"/>
  <con:entry key="PolicyClass" value="${#Project#urnPolicy}TermsOfUse"/>
  <con:entry key="NodeAccountId" value="${#Project#NODEACCOUNTID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_UserLinkConsent" id="aa6ce03a-8096-48bc-8c22-7257f48b37be"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_UserLinkConsent" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="DLASP_CS_1_concat.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting></con:settings><con:encoding/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#coordinatorSchema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:UserLinkConsent</dece:PolicyClass>
      <dece:Resource>urn:dece:userid:org:dece:${#Project#USERID}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#Node_OID}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#Project#USERID}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>
</dece:PolicyList>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="3f24880e-3b76-4d4b-9613-3837945935d0"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#NODEUSERID}"/>
  <con:entry key="PolicyClass" value="${#Project#urnPolicy}UserLinkConsent"/>
  <con:entry key="NodeAccountId" value="${#Project#NODEACCOUNTID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_ManageUserConsent" id="cbac418a-4d99-436e-bab2-3531b87fecdf"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_ManageUserConsent" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="DLASP_CS_1_concat.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" xmlns:dece="${#Project#coordinatorSchema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:ManageUserConsent</dece:PolicyClass>
      <dece:Resource>urn:dece:userid:org:dece:${#Project#USERID}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#Node_OID}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#Project#USERID}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>
]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="0db5f4bd-bb18-40bf-87fe-157ef3181f84"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#NODEUSERID}"/>
  <con:entry key="PolicyClass" value="${#Project#urnPolicy}ManageUserConsent"/>
  <con:entry key="NodeAccountId" value="${#Project#NODEACCOUNTID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Go to policy create again if necessary" id="a3b606f4-03e1-491a-a7ce-b64be38c4fde"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def audiencelistArray = tP.getPropertyValue("audienceList").toString().split(";");
def Length = audiencelistArray.length;
log.info "l====="+Length;
def userIndex   = tP.getPropertyValue("userIndex").toInteger();

if(Length > userIndex+1){
    userIndex++;
    log.info "========"+userIndex
    tP.setPropertyValue("userIndex",userIndex.toString());
    
    testRunner.gotoStepByName("set user index and create policies");
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Set the initial properties" id="7a57824b-7493-496e-8179-718725ee5a2e"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("userIndex","0");
String nodeoid = tP.getPropertyValue("nodeoid"+tP.getPropertyValue("count")+tP.getPropertyValue("userIndex"));
log.info"========"+nodeoid
tP.setPropertyValue("Node_OID",nodeoid.toString());
testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = false;

</script></con:config></con:testStep><con:properties><con:property><con:name>UserID</con:name><con:value>9E9EB486B0E941E6E0401F0A05996C5F</con:value></con:property><con:property><con:name>tName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>sName</con:name><con:value>E_2_E</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:E682B98D77DD7311E0401F0A05991189</con:value></con:property><con:property><con:name>NODEACCOUNTIDDecoded</con:name><con:value>urn:dece:accountid:org:dece:E682B036D956188DE0401F0A05997A50</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/DLASP_CS_1_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2d787415-6ad6-4403-9bbc-37fb4687847b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ede2863a-87cd-4b07-8480-d41d12995398</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95c44820-dc3d-41b1-aaeb-046ed883cdd0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bebf0d96-3664-4297-8a60-39c898da110e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ae07363f-1c5d-48de-93f1-d5ae9ad79a72</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="false" keepSession="false" maxResults="0" name="STS" searchProperties="true" id="16dbad60-4811-4153-b209-123807b7b718" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="8d832074-a631-4aab-ab7b-aa82e1b4485c"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

testCase.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
testCase.setPropertyValue("Password",callTC.getPropertyValue("Password"));


if(testProject.getPropertyValue("V2") == testProject.getPropertyValue("versionUrlEncode"))
{
	def audienceList = URLEncoder.encode(testProject.getPropertyValue("audienceList"),"UTF-8");
	testCase.setPropertyValue("audienceList",audienceList);
	def tokentype = URLEncoder.encode(testProject.getPropertyValue("tokentype"),"UTF-8");
	testCase.setPropertyValue("tokentype",tokentype);
}
else
{
	def audienceList = URLDecoder.decode(testProject.getPropertyValue("audienceList"),"UTF-8");
	testCase.setPropertyValue("audienceList",audienceList);
	def tokentype = URLDecoder.decode(testProject.getPropertyValue("tokentype"),"UTF-8");
	testCase.setPropertyValue("tokentype",tokentype);
}</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem1" id="4e8d1365-ff98-4d13-8c12-85c56bd873d3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tP.getPropertyValue("Node_OID"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("STS - POST");
RestTestRequestStep testStep1 = tC.getTestStepByName("GET - STS");
def keyStorePath = tC.getPropertyValue("keyStorePath");
//this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="STS - POST" id="1a5b09ab-8138-4841-90fd-44337b5c899c"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/SecurityToken/SecurityTokenExchange" methodName="STSCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="STS - POST" mediaType="application/xml" postQueryString="false" sslKeystore="DLASP_CS_1_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">All</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes" ?> 
<Credentials xmlns="${#Project#coordinatorSchema}">
  <Username>${#TestCase#UserName}</Username> 
  <Password>${#TestCase#Password}</Password> 
</Credentials>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="fa7995e8-03c8-4191-840e-4453f03b89e4"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="tokentype" value="${#TestCase#tokentype}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Rerun STS Post"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");
def tStep = testCase.getTestStepByName("STS - POST");

log.info "#########################IN RERUN ######################" + tStep.getName();
String status = tStep.httpRequest.response.responseHeaders["#status#"]; 


if(!status.contains("201 Created"))
{
	log.info "STS Post not Sucessful Retrying...!";
	testRunner.runTestStepByName(tStep.getName());
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="aed2d8e9-c002-484c-93c3-dcf554c4adee">
        <con:settings/>
        <con:config>
          <script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def tStep  = tC.getTestStepByName('STS - POST');

/*
*  Get the HTTP headers
*/
def status = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];

log.info status[0];
//log.info connection[0];
log.info contentType[0];
log.info contentLength[0];
log.info contentLocation[0];

tC.setPropertyValue("status",status[0]);
//tC.setPropertyValue("connection", connection[0]);
tC.setPropertyValue("contentType", contentType[0]);
tC.setPropertyValue("contentLength", contentLength[0]);
tC.setPropertyValue("contentLocation", contentLocation[0]);

//this.log.info "contentLength [$contentLength]";

if (contentLength[0].toInteger() > 0) {
	rawResp = new ByteArrayOutputStream();
    def rawResp = tStep.httpRequest.response.getRawResponseData();
     strVal  = new String(rawResp);
      log.info strVal[0];

    int startAssert = strVal.indexOf("&lt;?xml version=\"1.0\" ");

    	//XMLbody =  strVal.tokenize('\n').last();

	String XMLbody  = strVal.substring(startAssert, strVal.size());
     
	tC.setPropertyValue("XMLbody", XMLbody);
}</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers and save assertion" id="80ff2836-df26-4115-8aba-f3cfee9cc501">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def url           = tP.getPropertyValue("targetURL");
//def urnacct       = tP.getPropertyValue("urnaccount");
//def urnstream     = tP.getPropertyValue("urnstream");
def major = tP.getPropertyValue("VersionMajor");
def minor = tP.getPropertyValue("VersionMinor");
def expectErrType = tC.getPropertyValue("expectErrType");
log.info(expectErrType);
def XMLbody       = tC.getPropertyValue("XMLbody");
def nodeaccountid = tC.getPropertyValue("nodeaccountid");

boolean dobodyXML = true;
boolean doContentTypeHeader = true;
boolean doConnectionClose = false;
boolean doContentLocaton  = true;
boolean contentLengthZero = false;

String errorID     = "";
String errorReason = "";
String errorLink   = "";
//String orgRequest  = url + "/rest/1/0/Account/" + urnacct + nodeaccountid;
String expectHTTPstatus = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";

if (expectErrType == "") {
	expectErrType = "SUCCESS";
}

this.log.info "expectErrType is $expectErrType";
switch (expectErrType) {
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 201 Created";
		expectHTTPcontenttype = "text/plain; charset=UTF-8";
		contentLengthZero = true;
		doContentLocaton  = true;
		dobodyXML = false;
	break;
	case "FORBIDDEN":
	default:
		errorReason = "Forbidden";
		errorID = "Forbidden";
		errorLink = "";
		orgRequest = "";
		doContentLocaton  = false;
		dobodyXML = true;
	break;
}

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("status");
assert tC.getPropertyValue("status") == expectHTTPstatus;

// Connection

if (doConnectionClose) {
	this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("connection");
	assert tC.getPropertyValue("connection") == expectHTTPconnection;
}


//Content-Length
if (contentLengthZero) {
	//assert tC.getPropertyValue("contentLength").toInteger() == 0;
} else {
	//assert tC.getPropertyValue("contentLength").toInteger() > 0;
}
	
//Content-Type
if (doContentTypeHeader) {
	assert tC.getPropertyValue("contentType") == expectHTTPcontenttype;
}

// Content-Location
if (doContentLocaton) {
	assert tC.getPropertyValue("contentLocation") != null;
	
	def b = tC.getPropertyValue("contentLocation").toURL();
	assert b.getPath().matches("/rest/$major/$minor/SecurityToken/Assertion/[_,0-9,a-f,-]*");
	def parms = b.getPath().split("/");
	
	tC.setPropertyValue("assertionUUID",parms[parms.size() - 1]);
} else {
	assert tC.getPropertyValue("contentLocation") == null;
}

if (dobodyXML) {
	if (XMLbody.length() > 0) {
		def myXML = new XmlSlurper().parseText(XMLbody);

		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode: Expect[$errorID] Received: " + myXML.Error.@ErrorID.toString();
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason: Expect[$errorReason] Received: " + myXML.Error.Reason.toString();
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorReason: Expect[$errorLink] Received: " + myXML.Error.ErrorLink.toString();
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} else {
		return false;
	}
}</script></con:config>
      </con:testStep><con:testStep type="restrequest" name="GET - STS" id="317cceb1-c400-4b10-b4d9-a10924e6e55e"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/SecurityToken/Assertion/{ASSERTION}" methodName="STSGet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - STS" mediaType="application/xml" sslKeystore="DLASP_CS_1_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="31743bc4-b3c6-4521-8732-aa46248b343c"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 200 OK]";</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#Project#UserName}</con:username><con:password>Password1</con:password><con:domain>DECE</con:domain><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers 1" id="85d50208-35a3-484b-ab97-59646e16ede9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def callTSname = tC.getPropertyValue("sName");
//def callTCname = tC.getPropertyValue("tName");
//
//def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
def tStep  = tC.getTestStepByName('GET - STS');


/*
*  Get the HTTP headers
*/
tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
	   /*	case "Location": 
			contentLocation = value[0];
		break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;*/
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}
//def contentLocation = tStep.httpRequest.response.responseHeaders["Content-Location"];

//def expXML = tStep.httpRequest.response.getResponseContent();
this.log.info tStep.httpRequest.response.getRawResponseData();
//new b = tStep.httpRequest.response.getResponseContent();
rawResp = new ByteArrayOutputStream();
rawResp = tStep.httpRequest.response.getRawResponseData();
strVal  = new String(rawResp);
log.info strVal;

int startAssert = strVal.indexOf("&lt;?xml version=\"1.0\" ");
String XMLbody  = strVal.substring(startAssert, strVal.length());

tC.setPropertyValue("XMLbody", XMLbody);
tC.setPropertyValue("status", status);
//tC.setPropertyValue("connection", connection);
tC.setPropertyValue("contentType", contentType);
//tC.setPropertyValue("contentLength", contentLength);
//tC.setPropertyValue("contentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Deflate and encode the &lt;Assertion>" id="aa9dd0b7-b642-4f5d-ae9d-ad42fae2c2b3"><con:settings/><con:config><script>import java.util.zip.Deflater;
import org.w3c.tools.codec.Base64Encoder;
import java.io.ByteArrayOutputStream;
import java.util.zip.DeflaterOutputStream;
import java.lang.*;

//import groovy.sql.Sql;
//import org.apache.commons.codec.binary.Base64;

//com.eviware.soapui.support.ClasspathHacker.addFile( new File("opensaml-2.3.1.jar") );

//import org.opensaml.*;
import org.opensaml.xml.util.Base64;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

int compressedLength = 0;
//String XMLbody = tC.getPropertyValue("XMLassertion").toString();
String XMLbodyRaw = tC.getPropertyValue("XMLbody").toString();

int startAssert = XMLbodyRaw.indexOf("&lt;saml2:Assertion ");
int endAssert   = XMLbodyRaw.indexOf("&lt;/saml2:Assertion>");

String XMLbody = XMLbodyRaw.substring(startAssert, endAssert + 18).trim();
String base64encodeStr = "";

this.log.info "XMLbody is [$XMLbody]";

def myXML = new XmlSlurper().parseText(XMLbody);
tC.setPropertyValue("assertId",myXML.@ID.toString());

// Perform Deflation
//byte[] xmlBytes = XMLbody.trim().getBytes();
byte [] xmlBytes = new byte[XMLbody.trim().length()];

Deflater compresser = new Deflater(Deflater.DEFLATED, true);
compresser.setInput(XMLbody.trim().getBytes());
compresser.finish();
compressedLength = compresser.deflate(xmlBytes);
    
//ByteArrayOutputStream byteOutputStream    = new ByteArrayOutputStream();
//DeflaterOutputStream deflaterOutputStream = new DeflaterOutputStream(byteOutputStream);

//deflaterOutputStream.write(xmlBytes, 0, xmlBytes.length);
//deflaterOutputStream.close();

/*
// next, base64 encode it
Base64 base64Encoder = new Base64();

byte[] base64EncodedByteArray = base64Encoder.encode(byteOutputStream.toByteArray());
String base64EncodedMessage = new String(base64EncodedByteArray);
*/

//BaseID base64Encoder1 = new BaseID();

byte [] subArray = Arrays.copyOfRange(xmlBytes, 0, compressedLength);
base64encodeStr = Base64.encodeBytes(subArray,Base64.DONT_BREAK_LINES);

// finally, URL encode it
//String urlEncodedMessage = URLEncoder.encode(base64EncodedMessage, "UTF-8");
tC.setPropertyValue("assert", base64encodeStr);

//tP.setPropertyValue("SAMLFAU1_"+tP.getPropertyValue("Count")+"1", "SAML2 Assertion="+base64encodeStr);
tP.setPropertyValue("SAML",base64encodeStr);

//DatatypeHelper DTH = new DatatypeHelper();

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract and Store Account and User Info based on Assertion UUID" id="61cbf3b6-01bf-4a3b-b12e-92e64413d680"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def XMLbody       = tC.getPropertyValue("XMLbody");
def expectErrType = tC.getPropertyValue("expectErrType");

if(tP.getPropertyValue("count") != "1"){
if (expectErrType == "" || expectErrType == "SUCCESS") {
                if (XMLbody.length() > 0) {
                                def myXML = new XmlSlurper().parseText(XMLbody).declareNamespace(saml2: "urn:oasis:names:tc:SAML:2.0:assertion");

                                                // Verify response sizes...
                                                assert myXML.size() == 1;

                                                /*
                                                String accountId = myXML."saml2:Assertion"."saml2:AttributeStatement"."saml2:Attribute"."saml2:AttributeValue";
                                                String userId    = myXML."saml2:Assertion"."saml2:Subject"."saml2:NameID";
                                                */
                                                String accountId = myXML."saml2:AttributeStatement"."saml2:Attribute"."saml2:AttributeValue";
                                                String userId    = myXML."saml2:Subject"."saml2:NameID";
                                                
                                                this.log.info "accountId [$accountId]";
                                                this.log.info "userId [$userId]";

                                                tC.setPropertyValue("assertionAccountId",accountId.substring(accountId.lastIndexOf(":")+1, accountId.length()));
                                                tC.setPropertyValue("assertionUserId",   userId.substring(userId.lastIndexOf(":")+1,userId.length()));
                                                tC.setPropertyValue("assertionAccountIdFULL",accountId);
                                                tC.setPropertyValue("assertionUserIdFULL",userId);
                                                tP.setPropertyValue("NODEACCOUNTID",accountId);
                                                tP.setPropertyValue("NODEUSERID",userId);
                                                def nodeaccountid = tP.getPropertyValue("NODEACCOUNTID"); 
                                                int lastColon = nodeaccountid.lastIndexOf(':');
                                                def accountid = nodeaccountid.substring(lastColon + 1);
                                                tP.setPropertyValue("ACCOUNTID",accountid);
                                                def nodeuserid = tP.getPropertyValue("NODEUSERID"); 
                                                int lastSlash = nodeuserid.lastIndexOf(':');
                                                def userid = nodeuserid.substring(lastSlash + 1);
                                                tP.setPropertyValue("USERID",userid);
									     if(tP.getPropertyValue("V2") == tP.getPropertyValue("versionUrlEncode"))
										{
											def nodeacctid = URLEncoder.encode(tP.getPropertyValue("NODEACCOUNTID"),"UTF-8");
										     tP.setPropertyValue("NODEACCOUNTID",nodeacctid);
										     def nodeuseridfull = URLEncoder.encode(tP.getPropertyValue("NODEUSERID"),"UTF-8");
										     tP.setPropertyValue("NODEUSERID",nodeuseridfull);
										}
										else
										{
											def nodeaccid = tP.getPropertyValue("NODEACCOUNTID");
										     tP.setPropertyValue("NODEACCOUNTID",nodeaccid);
										     def nodeuseridfull = tP.getPropertyValue("NODEUSERID");
										     tP.setPropertyValue("NODEUSERID",nodeuseridfull);
										}
                                                this.log.info "assertionAccountId property is " + tC.getPropertyValue("assertionAccountId");
                                                this.log.info "assertionUserId property is " + tC.getPropertyValue("assertionUserId");
                } else {
                                return false;
                }
}
}
</script></con:config></con:testStep><con:properties><con:property><con:name>accountoid</con:name><con:value>CE0F1A1CC2F69345E0401F0A07990CC5</con:value></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbcuI4EP0VyvM4ZXzl5gpUMSHseCAkExKSycuUkNtYE1tyLJnLfv1KBhxMSJbdJ5fare7T3UdHuuAoiW2vzzlkgjBaWycx5V5h7Wp5Rj2GOOEeRQlwT2Bv2r8ee3bd9NB+i1bzB13tt9t0kBs4gd5Eoa27HQfrnTk09GYTO6Frgg2BJV05z8GnXCAqupptWg3dbOpW495se5bjOa26224/a7UZZFzGli51U9uBWvOuFgmReoaxWq3qK6fOsoVhm6ZlPF2PpziCBGm9i21FRaKst/PH9QAwxDGuY5YYF0bF5yLg3pQsKBJ5BrtcwUe5TMPsGNIn4GTxRSv3QuDTkBXLS0QZJRjF5G+k+nMNImJBrR8vWEZElHxYhGWqwDqssY4tl37RjCq0MwNVEGYc6TxC1i7WHYSQAcVQe7jzu9qX86ZWbL3PEOUhyxJeXf43PECXELMUAp3vy9pBOz/giU71LgB7PsVxzskSJoqsKcLAd9MEfH6o2m0GIVmPCZcEXXOFzjiEd7TcdmNAFsDF/xnQwXC2QWYozqH3I83+NMLXycPV4NtDmyO0ajPracmayOwWAA6dC0M52u3yiJQlibY7pi2/OWitW8/OoztZDQMxihbDUTz2X+z1VdZJnZ8bI7xN+eZX2HHTp9fH2cYC032GydfL7Jcf/jU0xzcuf/j6cyOMIV5f+S7k963Rj8ncwc93s1nkf2/7+HFp0595kkU/ZkM7mzx2vn93x/MbqzVtXm6i5mNnNo8HbHxFRtFoM3q5Yy9G/NSIp2z4K2qTEfk6zBbdspwD/FXb/sxP8/kfwGK/VDTwB7WhnBISn4uZspBADwtXL1XiwwVQofXULqUdXi7ljgSenOF2bbXb/SvrmzxAru2YHffKbDjOoNOxhma/1XetvchsURxBvGQ0JCqXktwtbT4HiBOPAw0g05csl0rHtU8iDpBANZ/eyUPAKId7JuXZWrjrDSw3dotvkuCFORZQulzNHa02YeKG3mT9UEBW0WTLqmjyHWCSElDCrXjNJbG5kL14RctcxFZ9ieoUcintmVJZz3bbDYOTJI1BITUSFuQx1NMoLTpj8O3X1hHmhXUw7k9vf19OfxcHwviwvON/+05In4AoB65K+gZymnDijrH39byru3nyLtqH7+cBUedLtlVkBG+RVH+9sUXRpKTKW2F75OWGY0MluHFcV5kvWBJc0r68vKWmSxXo7Yfziqz6az1fLvNiHq7rGJkMb6iOGKZtTAHnUqc29+wFqFFGMc66FErgR8lLexViLiI6FUhAIvlTK5ZnvAKmwNUrwJfEX5/7xKiklK0TsBanbJexfMEoxJ8+crCHlZ8038rPimXB28ROxDrII+uUjwBB6EKt1IWw+YAemMmwREoZyw6DnwpwKnnVWDa5xCIkoea5gI//1JRGdTWEMcup8AdaYTjUzQKn2KTgvTm9C1NIc/lWI//+WNNJQQEM8oXHSRFfXbmeOgJ0caC9u6Qn5dcedD6T3yq63jvze8tBn4453vsH</con:value></con:property><con:property><con:name>assertId</con:name><con:value>_463a4d3d-6af2-493c-9be5-66c3f40e2ed1</con:value></con:property><con:property><con:name>assertIdL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value>_463a4d3d-6af2-493c-9be5-66c3f40e2ed1</con:value></con:property><con:property><con:name>assertPackaged</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertRaw</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value>CE0F1A1CC2F19345E0401F0A07990CC5</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>3512</con:value></con:property><con:property><con:name>nodeuserid</con:name><con:value>CE0FA9BFE5F30C65E0401F0A07990DF9</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>uname</con:name><con:value>shikha_user_create_accp_test_20110610_11508</con:value></con:property><con:property><con:name>username</con:name><con:value>stream_list_view_20150615_014514</con:value></con:property><con:property><con:name>useroid</con:name><con:value>CE0FA9BFE5F80C65E0401F0A07990DF9</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>contentType</con:name><con:value>text/xml; charset=UTF-8</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa1.q.uvvu.com:443/rest/2015/02/SecurityToken/Assertion/_463a4d3d-6af2-493c-9be5-66c3f40e2ed1</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<?xml version="1.0" encoding="UTF-8"?><saml2:Assertion xmlns:saml2="urn:oasis:names:tc:SAML:2.0:assertion" ID="_463a4d3d-6af2-493c-9be5-66c3f40e2ed1" IssueInstant="2015-06-15T08:13:37.488Z" Version="2.0" xmlns:xs="http://www.w3.org/2001/XMLSchema"><saml2:Issuer>http://c.decellc.com/</saml2:Issuer><ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#"><ds:SignedInfo><ds:CanonicalizationMethod Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"/><ds:SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/><ds:Reference URI="#_463a4d3d-6af2-493c-9be5-66c3f40e2ed1"><ds:Transforms><ds:Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/><ds:Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"><ec:InclusiveNamespaces xmlns:ec="http://www.w3.org/2001/10/xml-exc-c14n#" PrefixList="xs"/></ds:Transform></ds:Transforms><ds:DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/><ds:DigestValue>Jprj5fqNUEDBU8saaw8o1Xvo6a0=</ds:DigestValue></ds:Reference></ds:SignedInfo><ds:SignatureValue>S7I6D7x7Z3W4NwFdtKhgFKlLIk2xEr9p3Qy/fPpsyYf94pXqWVy1e04ZeN+CrYIfGF0LO4sU+Qyt/FcxEI4euT7KJNb3cZRVVhIH8IcWv2nQumrhJVF2rNW9HH4LbO17S6Cyh6W9VblDoLEiKhKyKkRok/lX5lSoFYh8iKi+Frg=</ds:SignatureValue></ds:Signature><saml2:Subject><saml2:NameID Format="urn:oasis:names:tc:SAML:2.0:nameid-format:persistent">urn:dece:userid:org:dece:188AE1B463423094E0533D991F0A7A41</saml2:NameID><saml2:SubjectConfirmation Method="urn:oasis:names:tc:SAML:2.0:cm:sender-vouches"><saml2:SubjectConfirmationData InResponseTo="_1g4xyevy27symdko31ennvwb3" NotOnOrAfter="2015-06-15T11:13:37.488Z" Recipient="https://stdecqavutl1.va.neustar.com:2485/simplesaml/module.php/saml/sp/saml2-acs.php/DLASP_CS_1"/></saml2:SubjectConfirmation></saml2:Subject><saml2:Conditions NotBefore="2015-06-15T08:13:27.488Z" NotOnOrAfter="2016-06-15T08:13:37.488Z"><saml2:AudienceRestriction><saml2:Audience>urn:dece:org:org:dece:DLASP_CS_1</saml2:Audience></saml2:AudienceRestriction></saml2:Conditions><saml2:Advice><saml2:AssertionURIRef>https://qa1.q.uvvu.com:443/rest/2015/02/SecurityToken/Assertion/_463a4d3d-6af2-493c-9be5-66c3f40e2ed1</saml2:AssertionURIRef></saml2:Advice><saml2:AuthnStatement AuthnInstant="2015-06-15T08:13:37.488Z" SessionIndex="_463a4d3d-6af2-493c-9be5-66c3f40e2ed1"><saml2:AuthnContext><saml2:AuthnContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:Password</saml2:AuthnContextClassRef><saml2:AuthenticatingAuthority>urn:dece:org:org:dece:coordinator</saml2:AuthenticatingAuthority></saml2:AuthnContext></saml2:AuthnStatement><saml2:AttributeStatement><saml2:Attribute Name="accountID" NameFormat="urn:dece:type:accountID"><saml2:AttributeValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xs:string">urn:dece:accountid:org:dece:188AE1B462D93094E0533D991F0A7A41</saml2:AttributeValue></saml2:Attribute></saml2:AttributeStatement></saml2:Assertion>]]></con:value></con:property><con:property><con:name>tName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>sName</con:name><con:value>E_2_E</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>188AE1B462D93094E0533D991F0A7A41</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>188AE1B463423094E0533D991F0A7A41</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:188AE1B462D93094E0533D991F0A7A41</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:188AE1B463423094E0533D991F0A7A41</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/DLASP_CS_1_concat.pem</con:value></con:property><con:property><con:name>audienceList</con:name><con:value>urn:dece:org:org:dece:DLASP_CS_1</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>800673c1-3147-4c8c-b0c1-58e0015b4b03</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>175431f8-b1ab-411a-838d-f62e6ec865f5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7b4251c4-b0c9-4524-b11d-58f032477794</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ad58565a-ea44-49b7-aab1-812ed0ed9584</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>63c7be09-e6de-4048-88a8-4093708a9d7b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a41302e2-c2f1-4384-92f7-153edc9522ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2fe33502-92b9-4bc5-9cab-1083378ddd6c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1adab77f-1cd6-4d9f-ac40-f99f00ddbb94</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>af3889f5-e9ad-4a18-837c-7ead87c1caed</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fdb00829-308f-406e-9775-a6c8de3621f2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98f48738-f6c6-4056-be18-f24b60c6a023</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb39d541-2f26-4a00-9fc8-5a5ea810f40b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserCreate_Basic" searchProperties="true" id="9ccabc7d-1cb3-4fd5-833e-ea36b1b6b359"><con:settings/><con:testStep type="groovy" name="Set properties for user" id="81753d72-dc9d-41dc-be3e-f116c2fa349b"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

testCase.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
testCase.setPropertyValue("Password",callTC.getPropertyValue("Password"));

def NODEUSERIDFULLDecoded = URLDecoder.decode(testProject.getPropertyValue("NODEUSERIDFULL"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDFULLDecoded",NODEUSERIDFULLDecoded)
</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="76c78046-ddc7-4aa8-b13c-e2b933e89374"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tP.getPropertyValue("Node_OID"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("User_Create");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="User_Create" id="d6334dee-3fa4-40a8-9c9f-6a86c54c9a84"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account/{AccountID}/User" methodName="UserCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User_Create" mediaType="application/xml" postQueryString="false" accept="application/xml" sslKeystore="iscportal1_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:basic" xmlns="${#Project#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
        	<GivenName>${#TestCase#UserName}</GivenName>
		<SurName>bau</SurName>
	</Name>	
	
  <!--<DisplayImage>
        <DisplayImageData>/9j/4AAQSkZJRgABAgAAZABkAAD/7AARRHVja3kAAQAEAAAAPAAA/+4ADkFk
b2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAM
DAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAY
GhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f
Hx8fHx8fHx8f/8AAEQgANwBEAwERAAIRAQMRAf/EAKAAAAIDAQEAAAAAAAAA
AAAAAAMEAgUHAAYBAAIDAQEAAAAAAAAAAAAAAAABAgMEBgUQAAIBAwIEAwYE
BQUAAAAAAAECAxESBCETAEEiBTFCFFFhcTIjBoFichXBUjNDJOGCooMHEQAB
AgIGBggDBgcAAAAAAAABABEhAvAxQWESA1FxoeEEFIGRscHRMqITIrIj8UJS
coIFYpLC8jNjJP/aAAwDAQACEQMRAD8ApsDsnY/2/DaTt8e2qIFUxgzZE1tS
BdqEBqfHX3IOriOL4zPGdOBOfMbYSh6f3VVko57F2YGVWw8VZaXZU22m1joB
W1bhQvQ1qw/M2lqHPz+fD45msiXO77BFyh1Nex9kujZe2Q6gjExWQB3oKGWY
kFgoB5+HOrkKFz2fH6k15fYKbHJHRE+3uxMrIcWDbD0yckRqtzk27UIFbden
TUeAq9SA8fn14prg+009MCOqbtvdPtXun3Rl9lxezJHNAJI4MiRUMTNCTuM0
SqrL4dNWNaAdNTxvz8visrh5c2bNLFnDl41Rfrh1snFW57H9v2RsMGJ8dW+k
RGhlyZDr06KAnPkD7ox1Yee4h/PM+stKPGnmqTlDbsXZgZVbExVkAuypttNr
HQCtq3ChehrVh+ZtLU4Ofz4fHNdEud32CLlDrv2TsYaNh2yHUFcPFZAHegoZ
ZmILBQDz8OdXIUHPZ8fqTXl9gpsckdV37F2L9+s24q7Ft+19H1G7SlnyW+Sl
fHS6/Xj0ObzuUxOX9zTHDh0137WwpvBWeLIVhWko3UiUTZRoEx4rQ1ig1F5F
Ca/qbS1eMHGD608IY5oaS52fYIuUiiBwBEqxGyt2JiMSGdgamaYmpFCburUH
U1cgDM1cdZ7hT0uSkVHFJSZTbULl5a1DOwNBDCBUihNvTqDoKuSQNVDUO809
LBNQ7x33t3YMBO4dy6CPp9vwYwCQQvIDput+Zq0UdI/Nbw3CT8RPgk/VMabL
azcMsu7F94YWL93Znec3Cuxe4GUTwxmrIJnDsy/KHOlGBoCCeOr4r9umn4aX
Klm+KRmOlhs7lMiC1r1KToMuCZWWaJZfWeCQwOocBLvMVoTX4toFXjjjIZTh
IqLNpIhTZaVBLswAiURmypbExGJDOwNTNMTUihN3VqDqauQA2rjrPcKelyko
GUASs0ptqFzMtahnYGghhAqRQm3p1B0FXJYGGqGod5p6WCEGmR6+uxHt+ms9
HQf0bqbda2Xf8fL+bj0YcnWf8td+GvT323J2IMbkRwKYxprjYgIAdxqZpCKg
AMbvd46uVAr4sfWnj94uemoU2OUFTEoG6TKbahcvLWoZ2BoIYQKkUJppqDoK
uSRmaqGod5p6WCSZgZ9yNVRVmVf8fH/t48dLb3t0upoAP0rpc3CIhdadNN5s
Ca8n/wCiY69xm7fhQOSuPh5vcpZm8XCr83KoY49o5U8NKce3+zz+2JpzbNJJ
T+bxipBZ72nB9f3TEwrrPUzJFcBUi9gNB+PHR8Rm+3lzT/hBKkVsH2tnLl/a
naHA3Gji2YsbwrJAxW9zr0r0kez3taBxfH5WDiMwXu9xsp2OoFMyyAbpMptq
FyspahnINBDCBUihNNNQdBVySMwFUNQ7zT0sElAPJuRqqKs6r/j4/wDbx46W
3vboWI0AH6V0ubgYNdadNN5sCSWvxN/c+pZbd63S66tN+v8AL5a0tt5bfHpN
Nyjf7Kv01Ui/8SlYgxTR7JYSMIiFGRk+dqaCGK3XQm3p56DrJIq4sH3ptOKZ
h01mmxIoqyPuIqoqzKv0INNuBPlve3QtTQAfpXS5uMzBrrTppvNgQjQyxGPz
PjO3uMmU5H4Cyg+BHsQahBe/5d9PMhUX35n+iyPVSlDPl9omwEC6hXbJDMNd
dIpTrz49T9qyvclwiqXNE3p8QmFnHbctsLuOLmLo2NNHMp98bBv4cdNnZeOS
aX8QI61NbB2NIsbsjwx1hxY8vKXcAKu0e8TGiAa9SsKEe3p1NRxfFkzZrmMx
ll68MadagpySPuIqoomVfoQeSBPlva3S6mgp+ldLm4oYNdadNN5sCSX3YjF5
nxnb3GTKkI/AWUHwIHKMazYvf8u+nmqF2/P6z+unqbf6VRZX5tqtLvl6q+PO
lOnjbhHJ1Q9z+mumquKdiVjllO18rzhAYU1KRIRTcbwqzf6DS5uIcUB7k+jE
emNVNegIK4SxmPzPju3uL5LkfgLKD4EexBrSxe/5d9PMkmo533HZnUTAfWm8
kCfNat3m5mvxOlq8Rwhru2m4WlCX+6MfFy/tbOuhAlx4DJhVLiW3ejaVnFdQ
1K0YEg6nU0408BPNJxErGExjU1Rag7AmFluXgS42NhTsDZmxNMhIoOmV4iAf
+vjrcvNE00w/CW2A96mtkZ2SPGRApnMMcix06IjJGC8je0k1A93SKC48cOQ5
Ohz0sYCmvQq1XyyxNHzfHdvcXyXI/AWUHwI9iDWYlL3/AC76eZCiZn3HZnVZ
gv1p/JAnzWpdpdz1+LaWrwYQ12jTTcLShB3F3LfTnY2621bcturuU+a+7q8b
ufzacb2/5q4+50eWrVs6Ip2JWKRPTIGVhC1Kx+eeQjw18unPxA5INYcSD7s2
lz0R7aVoKLuve7M4EwH1pvJCnjatfNz1+J0tXijDC7tpuFpSRI5QBGAhtrXH
xzUFiDUyyk1Pia6/E1YgBEbz3CmxNMPXI7f3LHDBjLiZCy5B0BdYmZUQclVh
+HvNeCQ4Z5Domlh0im5kJHtUEj967ZlwuDD2nsuNssfBZ8mMgaChu62f/b48
a+InAyp5TXmZ03VKdwHShOzZKSISxaSGRqknV8lyPw6dPgR7EGuMStr+WlIo
S8kz3uxcCYD603khTxtWvm56/E6WrwxLC7tpuFpQh7gpGAhtrXHxjUFiDUyy
k1OhNdfiasQA23nuFNiSDvD1tPUNu203aGzcupbT5bfLSvjzv143N/y1Qx7M
PbSpOxKQ5LBIgBJvSJpJtN0RilQi0NTqKn2+PJeJZ+QTPMXlbEfvDbGnWUMp
erQJcInMUb2xRlXo0l1LnYg63/E111bQV8vNplf8w2RpqQyKmQTIY6S3sA08
ojcMQSQqqAKquh/hqSRE8OWd5bvil8aaoIZGizIXx33YpBjTwSRARqyiKB4m
DyA2lbhHU+ymnhVuDl5hMGMuIEHzCJeAr00dghkTDftWPFlNE+ZLi+nx0ngk
jEiyCKEjGkEg29kFK6G4MLuXDzsvNmZ8AmxTMRMzOfiDRxR1EQtQgyZcu4Kr
IJ5AasI3O2gpUICuupGtPeeS8IcPCuVvzDbGm1DJdstAlwik2o3tiisejSXU
udiDrf8AE111agEuXOmV/wAw8aakMuGQTI0dJb2AbIlEbhiCSFVQBVV8f4dR
JC5cs7y3fFL401QQyB676u5s/wCPsV2ttqbNfCtLfDX+Xl+bjX7B9nC4fHW4
ral9qbL/2Q==</DisplayImageData>-->
<!--DisplayImageData>jfdkjdkfgdgd</DisplayImageData-->
<!--DisplayImageURL>https://qa.uvvu.com:7001/ssp/image?type=avatar&amp;nodeId=urn:dece:org:org:dece:500500&amp;nodeUserId=urn:dece:userid:org:dece:B2F5D0FFF1B7BEC4E0401F0A0599368E</DisplayImageURL-->
<!--DisplayImageURL>www.yahoo1.com</DisplayImageURL-->
    <!--</DisplayImage>-->
<ContactInfo>
        <PrimaryEmail>			
	       <Value>${#Project#primaryemail}</Value>
               <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</PrimaryEmail>
	<AlternateEmail>			
        <Value>${#Project#AlternateEmail}</Value>			
        <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</AlternateEmail>
	<!--Address>
		<PostalAddress>45999 Center Oak Plaza</PostalAddress>
		<PostalCode>20166</PostalCode>
		<Locality>Sterling</Locality>
		<StateOrProvince>NJ</StateOrProvince>
                <Country>US</Country>
	</Address-->
	</ContactInfo>
        <Languages>
		<Language>de</Language>	
	</Languages>
<!-- <DateOfBirth> depricated </DateOfBirth> -->       <LegalGuardian>urn:dece:userid:org:dece:${#Project#USERIDFULL}</LegalGuardian>
       <Credentials> 

               <Username>${#TestCase#UserName}</Username>	
                <Password>${#TestCase#Password}</Password> 
	</Credentials>
<UserRecoveryTokens>
      <RecoveryItem>
		<QuestionID>1200</QuestionID>  
		<QuestionResponse>Turner</QuestionResponse>
       </RecoveryItem>
       <RecoveryItem>
		<QuestionID>1650</QuestionID>  
		<QuestionResponse>Phoenix</QuestionResponse>
       </RecoveryItem> 
</UserRecoveryTokens>
</User>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="8ec19c93-3bf1-4caa-a49b-0e6eb7febc0b"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#NODEACCOUNTID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="20b38595-d250-4ef5-bf73-9341543edfc3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('User_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="cfd35640-a603-4298-b6c4-1263d0334463"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#VersionMajor}' );
String minor = context.expand( '${#Project#VersionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The supplied country code is invalid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code cannot be null.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "API call not authorized";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:UserNotActive";
	errorReason = "User is not active";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

		case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The user does not have permission to create a full-access user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The user does not have permission to create a user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
			expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBe18OrOlder";
			errorReason = "First User must be 18 years or older";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBe18OrOlder";
	break;


	case "NO_MNG_ACC_CNST":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
			errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The first user in a household account must be a full-access user.";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;
	
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

	if(minor == tP.getPropertyValue("versionUrlEncode")){
	assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");
	int lastColon = urlStr.lastIndexOf('%');
	int lastSlash = urlStr.lastIndexOf('/');
	nodeuserid     = urlStr.substring(lastSlash + 1);
	userid = urlStr.substring(lastColon + 3);
     tP.setPropertyValue("NODEUSERID",nodeuserid);
	tP.setPropertyValue("USERID",userid);
	}
	else
	{
	assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	nodeuserid     = urlStr.substring(lastSlash + 1);
	userid = urlStr.substring(lastColon + 1);
     tP.setPropertyValue("NODEUSERID",nodeuserid);
	tP.setPropertyValue("USERID",userid);
	}
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:properties><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/11/Account/urn:dece:accountid:org:dece:F950D206F42BF7F4E0401F0A07995669/User/urn:dece:userid:org:dece:F96E099093EC61E3E0401F0A07995A9C</con:value></con:property><con:property><con:name>tName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>sName</con:name><con:value>E_2_E</con:value></con:property><con:property><con:name>UserName</con:name><con:value>stream_list_view_20140515_05449</con:value></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:DB8F0F6588921CE6E0401F0A05991E36</con:value></con:property><con:property><con:name>NODEUSERIDFULLDecoded</con:name><con:value>urn:dece:userid:org:dece:E242BD618670D40CE0401F0A059921A3</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/iscportal1_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f3628e8-17b4-4b24-9a27-1a62fd725b3a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PoliciesForBasicUser" searchProperties="true" id="0d6545e4-f48b-4750-b9f5-a40889e53673"><con:settings/><con:testStep type="groovy" name="Set pem" id="edbfef1c-3d70-4e42-90c2-f001e3f9c1c5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",testProject.getPropertyValue("Node_OID"));
myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep0 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");
RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_UserLinkConsent");
RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");
RestTestRequestStep testStep4 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_CLGAttestation");
RestTestRequestStep testStep5 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_COPPA");
//String keyStorePath = testCase.getPropertyValue("KeyStorePath");
//String keyStoreAlias = testCase.getPropertyValue("notValidExpiredNode");

def keyStorePath = testCase.getPropertyValue("keyStorePath");
//this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep0, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep4, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep5, keyStorePath);</script></con:config></con:testStep><con:testStep type="groovy" name="Set Encoded NodeUserID" id="50d8e77d-bca0-4795-8028-14351e5d4986"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();



def testStep = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" )
if( testStep.disabled )
  testStep.disabled = false;

def testStep1 = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_CLGAttestation" )
if( testStep1.disabled )
  testStep1.disabled = false;

def testStep2 = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_ManageUserConsent" )
if( testStep2.disabled )
  testStep2.disabled = false;

if(testProject.getPropertyValue("count") != "1"){
//def NODEUSERIDEncoded = URLEncoder.encode(testProject.getPropertyValue("NODEUSERID"),"UTF-8");
//testProject.setPropertyValue("NODEUSERID",NODEUSERIDEncoded)
//testProject.setPropertyValue("NODEUSERIDFAU1_Encoded",NODEUSERIDFAU1_Encoded)
//
//def NODEACCOUNTIDEncoded = URLEncoder.encode(testProject.getPropertyValue("NODEACCOUNTID"),"UTF-8");
//testProject.setPropertyValue("NODEACCOUNTID",NODEACCOUNTIDEncoded)

testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = true;
testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_CLGAttestation" ).disabled = true;
testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_ManageUserConsent" ).disabled = true;
testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_COPPA" ).disabled = true;
}</script></con:config></con:testStep><con:testStep type="groovy" name="set user index and create policies" id="8956da88-fd1c-4da5-bf58-6d7a1fb9545f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def audienceArray = testProject.getPropertyValue("audienceList").toString();
if(audienceArray.contains(";"))
{
def audiencelistArray = testProject.getPropertyValue("audienceList").toString().split(";");
def l = audiencelistArray.length;
log.info "l==="+l;
def userIndex = testProject.getPropertyValue("userIndex").toInteger();
log.info "userindex====="+userIndex;


String nodeoid = testProject.getPropertyValue("nodeoid"+testProject.getPropertyValue("count")+testProject.getPropertyValue("userIndex"));
testProject.setPropertyValue("Node_OID",nodeoid.toString());

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",testProject.getPropertyValue("Node_OID"));
myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep0 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");
RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_UserLinkConsent");
RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");

def keyStorePath = testCase.getPropertyValue("keyStorePath");
//this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep0, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
if(testProject.getPropertyValue("userIndex") != "0"){
	testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = true;
	testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_COPPA" ).disabled = true;
	testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_CLGAttestation" ).disabled = true;
	
}
}</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_CLGAttestation" id="6c638421-d057-46fc-949d-dd3e8196f215"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_CLGAttestation" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="DLASP_CS_1_concat.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#coordinatorSchema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:CLGAttestation</dece:PolicyClass>
      <dece:Resource>urn:dece:userid:org:dece:${#Project#USERID}</dece:Resource>     
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#Project#USERIDFULL}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>
]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="76a6d451-0751-487b-a822-7afe464d5c6d"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#NODEUSERID}"/>
  <con:entry key="PolicyClass" value="${#Project#urnPolicy}CLGAttestation"/>
  <con:entry key="NodeAccountId" value="${#Project#NODEACCOUNTID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_TOU" id="397a1eb5-5d3b-4d39-a742-490112e314e0"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_TOU" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="DLASP_CS_1_concat.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#coordinatorSchema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:TermsOfUse</dece:PolicyClass>
  <dece:Resource>${#Project#policy_TOU}</dece:Resource>    
      <dece:RequestingEntity>urn:dece:userid:org:dece:${#Project#USERID}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#Project#USERIDFULL}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>
]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="76a6d451-0751-487b-a822-7afe464d5c6d"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#NODEUSERID}"/>
  <con:entry key="PolicyClass" value="${#Project#urnPolicy}TermsOfUse"/>
  <con:entry key="NodeAccountId" value="${#Project#NODEACCOUNTID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_COPPA" id="e42092bb-0786-4664-8938-4e2f047d18fb"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_COPPA" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="DLASP_CS_1_concat.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#coordinatorSchema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:GeoPrivacyAssent</dece:PolicyClass>
      <dece:Resource>urn:dece:userid:org:dece:${#Project#USERID}</dece:Resource>     
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#Project#USERIDFULL}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>
]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="76a6d451-0751-487b-a822-7afe464d5c6d"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#NODEUSERID}"/>
  <con:entry key="PolicyClass" value="${#Project#urnPolicy}GeoPrivacyAssent"/>
  <con:entry key="NodeAccountId" value="${#Project#NODEACCOUNTID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_UserLinkConsent" id="280861f1-b019-4883-b265-bf1e3f67842b"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_UserLinkConsent" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="DLASP_CS_1_concat.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting></con:settings><con:encoding/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#coordinatorSchema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:UserLinkConsent</dece:PolicyClass>
      <dece:Resource>urn:dece:userid:org:dece:${#Project#USERID}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#Node_OID}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#Project#USERID}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>
</dece:PolicyList>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="3f24880e-3b76-4d4b-9613-3837945935d0"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#NODEUSERID}"/>
  <con:entry key="PolicyClass" value="${#Project#urnPolicy}UserLinkConsent"/>
  <con:entry key="NodeAccountId" value="${#Project#NODEACCOUNTID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_ManageUserConsent" id="c410d089-3611-49e3-8e3f-58c02dad7a96" disabled="true"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_ManageUserConsent" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="DLASP_CS_1_concat.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" xmlns:dece="${#Project#coordinatorSchema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:ManageUserConsent</dece:PolicyClass>
      <dece:Resource>urn:dece:userid:org:dece:${#Project#USERID}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#Node_OID}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#Project#USERIDFULL}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>
]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="0db5f4bd-bb18-40bf-87fe-157ef3181f84"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#NODEUSERID}"/>
  <con:entry key="PolicyClass" value="${#Project#urnPolicy}ManageUserConsent"/>
  <con:entry key="NodeAccountId" value="${#Project#NODEACCOUNTID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Go to policy create again if necessary" id="1d72de74-df4f-4866-8cb3-ede3023b64d5"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def audiencelistArray = tP.getPropertyValue("audienceList").toString().split(";");
def Length = audiencelistArray.length;
log.info "l====="+Length;
def userIndex   = tP.getPropertyValue("userIndex").toInteger();

if(Length > userIndex+1){
    userIndex++;
    log.info "========"+userIndex
    tP.setPropertyValue("userIndex",userIndex.toString());
    
    testRunner.gotoStepByName("set user index and create policies");
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Set the initial properties" id="f69a4198-916e-4ead-8ea7-3db1e5cc6223"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("userIndex","0");
String nodeoid = tP.getPropertyValue("nodeoid"+tP.getPropertyValue("count")+tP.getPropertyValue("userIndex"));
log.info"========"+nodeoid
tP.setPropertyValue("Node_OID",nodeoid.toString());
testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = false;
testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_COPPA" ).disabled = false;
testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_CLGAttestation" ).disabled = false;
</script></con:config></con:testStep><con:properties><con:property><con:name>UserID</con:name><con:value>9E9EB486B0E941E6E0401F0A05996C5F</con:value></con:property><con:property><con:name>tName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>sName</con:name><con:value>E_2_E</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:E682B98D789E7311E0401F0A05991189</con:value></con:property><con:property><con:name>NODEACCOUNTIDDecoded</con:name><con:value>urn:dece:accountid:org:dece:E682B036D956188DE0401F0A05997A50</con:value></con:property><con:property><con:name>NODEUSERIDFULLDecoded</con:name><con:value>urn:dece:userid:org:dece:E682B036DCFD188DE0401F0A05997A50</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/DLASP_CS_1_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2d787415-6ad6-4403-9bbc-37fb4687847b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ede2863a-87cd-4b07-8480-d41d12995398</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>538eac1e-267d-47ba-b194-f9953171618c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bac177f5-5586-4318-b970-cc997f810ec4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b2dc8a3b-c62a-4c6a-a101-634c57a370ce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>41774e16-4267-4acd-bbcd-b821f3f16b23</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetPem" searchProperties="true" id="78d6bc15-7278-48bb-944d-73c43262ef6e"><con:settings/><con:testStep type="groovy" name="Set Pem" id="120c178d-6204-4a28-ba32-80a34da98923"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import org.apache.commons.lang.SystemUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def projectPath = groovyUtils.projectPath

def eNV = context.expand( '${#Project#ENV}' )

def propertiesPath = null;

if (System.properties['os.name'].toLowerCase().contains('windows')) 
	{
    		log.info "it's Windows OS!!";
    		File temp = new File( projectPath + "\\..\\..\\..\\Properties\\");
    		propertiesPath = temp.getCanonicalPath();
	} 
else 
	{
    		log.info "it's Linux OS!!";
    		File temp = new File(projectPath + "/../../../Properties/");
    		propertiesPath = temp.getCanonicalPath();
	}
	
log.info("Properties File Location : '" + propertiesPath+ "'");




def propMap=[:]
BufferedReader reader = new BufferedReader(new FileReader(propertiesPath + "/" + eNV +"project.properties"));

String line;
while ((line = reader.readLine()) != null)
      {
	       if (line.trim().length()==0) continue;
	       if (line.charAt(0)=='#') continue;
	
	       int delimPosition = line.indexOf("=");
	       String key = line.substring(0, delimPosition-0).trim();
	       String value = line.substring(delimPosition+1).trim();
	       propMap.put(key, value);
      }


if (System.properties['os.name'].toLowerCase().contains('windows')) 
      {
            log.info "it's Windows OS!!!";
            File temp = new File( projectPath + "\\..\\..\\..\\Certs\\" + eNV + "\\");
    		  certPath = temp.getCanonicalPath();      
      } 
else 
      {
            log.info "it's Linux OS!!!";
            File temp = new File(projectPath + "/../../../Certs/" + eNV + "/");
    		  certPath = temp.getCanonicalPath();
      }  
      
 log.info("Cert path: " + certPath );  
                  
def nodeId = context.expand( '${#TestCase#nodeid}' )

log.info "nodeId: "+nodeId;

 if (nodeId == "dece:cs")
       {
             nodeId = "dececs";
       }
 else if (nodeId == "coord:cs")
       {
             nodeId = "coordcs";
       }
 else
       {
             nodeId = nodeId;
       }


//log.info "~~~~~~~~~~~~" +nodeId
boolean imFine = true;
def pwd = null;
def certMatchesNodeID = context.expand( '${#Project#CertMatchesNodeID}' )
log.info("CertMatchesNodeID : '" + certMatchesNodeID + "'");
if (certMatchesNodeID == "YES")
{
		File f1 = new File(certPath+"/"+nodeId + "_concat.pem");
		File f2 = new File(certPath+"/"+nodeId + ".jks");
		File f3 = new File(certPath+"/truststore-"+nodeId + ".jks");
		File f4 = new File(certPath+"/"+nodeId + ".pem");

		log.info("F1 : '" + f1.getPath()+ "'");
		log.info("F2 : '" + f2.getPath()+ "'");
		log.info("F3 : '" + f3.getPath()+ "'");
		log.info("F4 : '" + f4.getPath()+ "'");
	
	// sets the certificate from the specific folder when the certname and NodeId are same
	  if(f1.exists()) 
             {
                   keyStorePath = certPath+"/"+nodeId + "_concat.pem";
                   pwd = "123"
                   log.info("F1 file exists!!!");
                   log.info("keyStorePath : '" + keyStorePath + "'");      
             }
	  else if(f2.exists())
             {
                  	keyStorePath = certPath+"/"+nodeId + ".jks";
                   	pwd = "abcd1234" 
                   	log.info("F2 file exists!!!");
                   log.info("keyStorePath : '" + keyStorePath + "'");          
             }
	  else if(f3.exists())
             {
                  	keyStorePath = certPath+"/truststore-"+nodeId + ".jks";
                   	pwd = "12elma";
				log.info("F3 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");
             }
	  else if(f4.exists()) 
             {
                   	keyStorePath = certPath+"/"+nodeId + ".pem";
                   	pwd = "123";
                   	log.info("F4 file exists!!!");
                   log.info("keyStorePath : '" + keyStorePath + "'");       
             }
	  else
             {
                  	log.info "No cert file is Found!!!";
                  	imFine = false;
             }
}
else
{
	//to get the certificate name from another property based on the nodeid property.
		
	
       def value = propMap.find{ it.value == nodeId }?.key
       def certName = testProject.getPropertyValue(value+"_cert");       
       log.info "cert name .... " + certName;

		File f1 = new File(certPath+"/"+certName + "_concat.pem");
		File f2 = new File(certPath+"/"+certName + ".jks");
		File f3 = new File(certPath+"/truststore-"+certName + ".jks");
		File f4 = new File(certPath+"/"+certName + ".pem");

		log.info("F1 : '" + f1.getPath()+ "'");
		log.info("F2 : '" + f2.getPath()+ "'");
		log.info("F3 : '" + f3.getPath()+ "'");
		log.info("F4 : '" + f4.getPath()+ "'");      
		     
       if(f1.exists()) 
             {
             		
				keyStorePath = certPath+"/"+certName + "_concat.pem";
				pwd = "123";
				log.info("F1 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");     
             }
       else if(f2.exists())
             {
				keyStorePath = certPath+"/"+certName + ".jks";
				pwd = "abcd1234";
				log.info("F2 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");           
             }
       else if(f3.exists())
             {
                  	keyStorePath = certPath+"/truststore-"+certName + ".jks";
                   	pwd = "abcd1234";
                   	log.info("F3 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");
                   	         
             }
       else if(f4.exists()) 
             {
				keyStorePath = certPath+"/"+certName + ".pem";
				pwd = "123";  
				log.info("F4 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");     
             }
       else
			{
			log.info "No cert file is Found!!!";
			imFine = false;
			}                             
}


if(imFine)
{
      def callTSname = testCase.getPropertyValue("sName");
      def callTCname = testCase.getPropertyValue("tName");
      
      def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
      
      callTC.setPropertyValue("keyStorePath","$keyStorePath");
      testCase.setPropertyValue("keyStorePath","$keyStorePath");
      
      SoapUI.settings.setString( SSLSettings.KEYSTORE, keyStorePath );
      SoapUI.settings.setString( SSLSettings.KEYSTORE_PASSWORD, pwd);
      log.info 'pwd='+pwd
}

assert imFine == true;
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set Pem" disabled="true" id="ee8ed630-49fb-482f-9975-137a9a8c16ba"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String nodeId = testCase.getPropertyValue("nodeid");

log.info "nodeId: "+nodeId;

if (nodeId == "dece:cs")
	{
		nodeId = "dececs";
	}
else if (nodeId == "coord:cs")
	{
		nodeId = "coordcs";
	}
else
	{
		nodeId = nodeId;
	}
String certPath = testProject.getPropertyValue("certPath");

File f1 = new File(certPath+"/"+nodeId + "_concat.pem");
File f2 = new File(certPath+"/"+nodeId + ".jks");
File f3 = new File(certPath+"/truststore-"+nodeId + ".jks");

boolean imFine = true;

if(f1.exists()) 
	{
		keyStorePath = certPath+"/"+nodeId + "_concat.pem";
		pwd = "123"	
	 }
 else if(f2.exists())
	 {
	 	keyStorePath = certPath+"/"+nodeId + ".jks";
		pwd = "abcd1234"	
	 }
 else if(f3.exists())
	 {
	 	keyStorePath = certPath+"/truststore-"+nodeId + ".jks";
		pwd = "abcd1234"	
	 }
 else
	 {
	 	log.info "Error!";
	 	imFine = false;
	 }


if(imFine)
{
	log.info "keyStorePath: "+keyStorePath;
	def callTSname = testCase.getPropertyValue("sName");
	def callTCname = testCase.getPropertyValue("tName");
	
	def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
	
	callTC.setPropertyValue("keyStorePath","$keyStorePath");
	
	SoapUI.settings.setString( SSLSettings.KEYSTORE, keyStorePath );
	SoapUI.settings.setString( SSLSettings.KEYSTORE_PASSWORD, pwd);
	log.info 'pwd='+pwd
}

assert imFine == true;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_1</con:value></con:property><con:property><con:name>tName</con:name><con:value>STS</con:value></con:property><con:property><con:name>sName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/DLASP_CS_1_concat.pem</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="E_2_E" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="End_To_End" searchProperties="true" id="6c88cf49-81e0-483d-8943-c6b030d2730d"><con:settings/><con:testStep type="groovy" name="Set ALID CID Properties" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if(tP.getPropertyValue("V2") == "07")
{
	tP.setPropertyValue("alid","urn:dece:alid:file:STREAMS_ALIDVersion_315037.txt");
	tP.setPropertyValue("cid","urn:dece:cid:file:STREAMS_CIDVersion_315037.txt");
}
else if(tP.getPropertyValue("V2") == "11")
{
	tP.setPropertyValue("alid","urn:dece:alid:file:RLGET_REFERENCE_R3_EXAMPLE_ALIDVersion_300133.txt");
	tP.setPropertyValue("cid","urn:dece:cid:file:RLGET_REFERENCE_R3_EXAMPLE_CIDVersion_300133.txt");
}
else if(tP.getPropertyValue("V2") == "21")
{
	tP.setPropertyValue("alid","urn:dece:alid:file:STREAMS_ALIDVersion_828445.txt");
	tP.setPropertyValue("cid","urn:dece:cid:file:STREAMS_CIDVersion_828445.txt");
}


if(tP.getPropertyValue("V2") == tP.getPropertyValue("versionUrlEncode"))
{
	tP.setPropertyValue("urnParentalControlRating","urn%3Adece%3Atype%3Apolicy%3AParentalControl%3ARatingPolicy")
	tP.setPropertyValue("urnParentalControlBlockUnratedContent","urn%3Adece%3Atype%3Apolicy%3AParentalControl%3ABlockUnratedContent")
	tP.setPropertyValue("urnParentalControlAllowAdult","urn%3Adece%3Atype%3Apolicy%3AParentalControl%3AAllowAdult")
	tP.setPropertyValue("urnPolicyID","urn%3Adece%3Apolicyid%3Aorg%3Adece%3A");
	tP.setPropertyValue("urnPolicy","urn%3Adece%3Atype%3Apolicy%3A");
	tP.setPropertyValue("urnAccount","urn:dece:accountid:org:dece:");
	tP.setPropertyValue("urnUser","urn:dece:userid:org:dece:");
	tP.setPropertyValue("urnNode","urn:dece:org:org:dece:");
	tP.setPropertyValue("urnRating","urn:dece:type:rating:");
	tP.setPropertyValue("urnRightsToken","urn:dece:rightstokenid:org:dece:");
	tP.setPropertyValue("urnStream","urn:dece:streamhandleid:org:dece:");	
	tP.setPropertyValue("primaryemail","testing@uvvutesting.biz");
	tP.setPropertyValue("AlternateEmail","testing1@uvvutesting.biz");
	tP.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword")
}
else
{
	tP.setPropertyValue("urnParentalControlRating","urn:dece:type:policy:ParentalControl:RatingPolicy")
	tP.setPropertyValue("urnParentalControlBlockUnratedContent","urn:dece:type:policy:ParentalControl:BlockUnratedContent")
	tP.setPropertyValue("urnParentalControlAllowAdult","urn:dece:type:policy:ParentalControl:AllowAdult")
	tP.setPropertyValue("urnPolicy","urn:dece:type:policy:");
	tP.setPropertyValue("urnPolicyID","urn:dece:policyid:org:dece:");
	tP.setPropertyValue("urnAccount","urn:dece:accountid:org:dece:");
	tP.setPropertyValue("urnUser","urn:dece:userid:org:dece:");
	tP.setPropertyValue("urnNode","urn:dece:org:org:dece:");
	tP.setPropertyValue("urnRating","urn:dece:type:rating:");
	tP.setPropertyValue("urnRightsToken","urn:dece:rightstokenid:org:dece:");
	tP.setPropertyValue("urnStream","urn:dece:streamhandleid:org:dece:");
	tP.setPropertyValue("primaryemail","testing@uvvutesting.biz");
	tP.setPropertyValue("AlternateEmail","testing1@uvvutesting.biz");
	tP.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword")
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Set Initial Values"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("loop","3");
tP.setPropertyValue("count","1");

tP.setPropertyValue("nodeoid10",tP.getPropertyValue("nodeIdportal"));
tP.setPropertyValue("nodeoid11",tP.getPropertyValue("nodeIdportalCS"));
tP.setPropertyValue("audiencelist1","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdportal")+";urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdportalCS")+";");


tP.setPropertyValue("nodeoid20",tP.getPropertyValue("nodeIdRTLCS"));
tP.setPropertyValue("audiencelist2","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));

tP.setPropertyValue("nodeoid30",tP.getPropertyValue("nodeIdDLASPCS"));
tP.setPropertyValue("audiencelist3","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdDLASPCS"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set NodeID and counter"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if(tP.getPropertyValue("count") == "1")
{
tP.setPropertyValue("Node_OID",tP.getPropertyValue("nodeoid10"));
tP.setPropertyValue("audienceList",tP.getPropertyValue("audiencelist1"));
}
if(tP.getPropertyValue("count") == "2")
{
tP.setPropertyValue("Node_OID",tP.getPropertyValue("nodeoid20"));
tP.setPropertyValue("audienceList",tP.getPropertyValue("audiencelist2"));
}
if(tP.getPropertyValue("count") == "3")
{
tP.setPropertyValue("Node_OID",tP.getPropertyValue("nodeoid30"));
tP.setPropertyValue("audienceList",tP.getPropertyValue("audiencelist3"));
}
if(tP.getPropertyValue("count") == "4")
{
tP.setPropertyValue("Node_OID",tP.getPropertyValue("nodeoid40"));
tP.setPropertyValue("audienceList",tP.getPropertyValue("audiencelist4"));
}
if(tP.getPropertyValue("count") == "5")
{
tP.setPropertyValue("Node_OID",tP.getPropertyValue("nodeoid50"));
tP.setPropertyValue("audienceList",tP.getPropertyValue("audiencelist5"));
}</script></con:config></con:testStep><con:testStep type="groovy" name="SetAccountName"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if(tP.getPropertyValue("count") == "1"){
def myTC = tP.getTestSuiteByName("Setup").getTestCaseByName("AccName_Gen");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
}
</script></con:config></con:testStep><con:testStep type="groovy" name="AccountCreate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if(tP.getPropertyValue("count") == "1"){

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("AccountCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
def nodeaccountid = tP.getPropertyValue("NODEACCOUNTID");
tP.setPropertyValue("NODEACCOUNTID_"+tP.getPropertyValue("count"),nodeaccountid);	
def accountid = tP.getPropertyValue("ACCOUNTID");
tP.setPropertyValue("ACCOUNTID_"+tP.getPropertyValue("count"),accountid);	

}
</script></con:config></con:testStep><con:testStep type="groovy" name="SetUsenamesForSixUsers"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if(tP.getPropertyValue("count") == "1"){
def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("UserNameGeneration");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="FirstUserCreate_FAU1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if(tP.getPropertyValue("count") == "1"){
def UserName = tP.getPropertyValue("UserName_FAU1");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");
tC.setPropertyValue("UserClass","urn:dece:role:user:class:full");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("FirstUserCreate");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;


def nodeaccountid = tP.getPropertyValue("NODEACCOUNTID");
tP.setPropertyValue("NODEACCOUNTID_"+tP.getPropertyValue("count"),nodeaccountid);	
def accountid = tP.getPropertyValue("ACCOUNTID");
tP.setPropertyValue("ACCOUNTID_"+tP.getPropertyValue("count"),accountid);	

def nodeuseridfull = tP.getPropertyValue("NODEUSERID");
tP.setPropertyValue("NODEUSERIDFAU1_"+tP.getPropertyValue("count"),nodeuseridfull);
def useridfull = tP.getPropertyValue("USERID");
tP.setPropertyValue("USERIDFAU1_"+tP.getPropertyValue("count"),useridfull);

}
</script></con:config></con:testStep><con:testStep type="groovy" name="STSCreate_FAU1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tP.getPropertyValue("UserName_FAU1");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
if(tP.getPropertyValue("count") != "1")
{
	if(tP.getPropertyValue("V2") == tP.getPropertyValue("versionUrlEncode"))
	{
		def nodeaccountid = URLEncoder.encode(tP.getPropertyValue("NODEACCOUNTID"),"UTF-8");
	     tP.setPropertyValue("NODEACCOUNTID_"+tP.getPropertyValue("count"),nodeaccountid);
	     def nodeuseridfull = URLEncoder.encode(tP.getPropertyValue("NODEUSERID"),"UTF-8");
	     tP.setPropertyValue("NODEUSERIDFAU1_"+tP.getPropertyValue("count"),nodeuseridfull);
	}
	else
	{
		def nodeaccountid = tP.getPropertyValue("NODEACCOUNTID");
	     tP.setPropertyValue("NODEACCOUNTID_"+tP.getPropertyValue("count"),nodeaccountid);
	     def nodeuseridfull = tP.getPropertyValue("NODEUSERID");
	     tP.setPropertyValue("NODEUSERIDFAU1_"+tP.getPropertyValue("count"),nodeuseridfull);
	}
}</script></con:config></con:testStep><con:testStep type="groovy" name="CreatePoliciesForUser_FAU1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PoliciesForFirstUser");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:testStep type="groovy" name="STSCreate_1Year_FAU1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tP.getPropertyValue("UserName_FAU1");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def samlfull = tP.getPropertyValue("SAML");
tP.setPropertyValue("SAMLFULL",samlfull); 

tP.setPropertyValue("SAMLFAU1_"+tP.getPropertyValue("count"),samlfull);

if(tP.getPropertyValue("count") != "1")
{
	def nodeaccountid = tP.getPropertyValue("NODEACCOUNTID");
     tP.setPropertyValue("NODEACCOUNTID_"+tP.getPropertyValue("count"),nodeaccountid);
     def nodeuseridfull = tP.getPropertyValue("NODEUSERID");
     tP.setPropertyValue("NODEUSERIDFAU1_"+tP.getPropertyValue("count"),nodeuseridfull);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="UserCreate_SAU1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if(tP.getPropertyValue("count") == "1"){
def UserName = tP.getPropertyValue("UserName_SAU1");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");
tC.setPropertyValue("UserClass","urn:dece:role:user:class:standard");
tC.setPropertyValue("MeetsAgeOfMajority","false");
tC.setPropertyValue("DateOfBirth","1997-07-01");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("UserCreate_Standard");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def nodeuseridstandard = tP.getPropertyValue("NODEUSERID");
tP.setPropertyValue("NODEUSERIDSAU1_"+tP.getPropertyValue("count"),nodeuseridstandard);
def useridstandard = tP.getPropertyValue("USERID");
tP.setPropertyValue("USERIDSAU1_"+tP.getPropertyValue("count"),useridstandard);

}
</script></con:config></con:testStep><con:testStep type="groovy" name="STSCreate_SAU1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tP.getPropertyValue("UserName_SAU1");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
if(tP.getPropertyValue("count") != "1")
{	
	if(tP.getPropertyValue("V2") == tP.getPropertyValue("versionUrlEncode"))
     {
     def nodeuseridstandard = URLEncoder.encode(tP.getPropertyValue("NODEUSERID"),"UTF-8");
     tP.setPropertyValue("NODEUSERIDSAU1_"+tP.getPropertyValue("count"),nodeuseridstandard);
     }
     else
     {
     def nodeuseridstandard = tP.getPropertyValue("NODEUSERID");
     tP.setPropertyValue("NODEUSERIDSAU1_"+tP.getPropertyValue("count"),nodeuseridstandard);
     }
     
}</script></con:config></con:testStep><con:testStep type="groovy" name="CreatePoliciesForUser_SAU1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PoliciesForStandardUser");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="STSCreate_1Year_SAU1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tP.getPropertyValue("UserName_SAU1");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def samlstandard = tP.getPropertyValue("SAML");

tP.setPropertyValue("SAMLSAU1_"+tP.getPropertyValue("count"),samlstandard);
if(tP.getPropertyValue("count") != "1")
{	
     def nodeuseridstandard = tP.getPropertyValue("NODEUSERID");
     tP.setPropertyValue("NODEUSERIDSAU1_"+tP.getPropertyValue("count"),nodeuseridstandard);
}</script></con:config></con:testStep><con:testStep type="groovy" name="UserCreate_BAU1" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if(tP.getPropertyValue("count") == "1"){
def UserName = tP.getPropertyValue("UserName_BAU1");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("UserCreate_Basic");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def nodeuseridbasic = tP.getPropertyValue("NODEUSERID");
tP.setPropertyValue("NODEUSERIDBAU1_"+tP.getPropertyValue("count"),nodeuseridbasic);
def useridbasic = tP.getPropertyValue("USERID");
tP.setPropertyValue("USERIDBAU1_"+tP.getPropertyValue("count"),useridbasic);
}
</script></con:config></con:testStep><con:testStep type="groovy" name="STSCreate_BAU1" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tP.getPropertyValue("UserName_BAU1");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
if(tP.getPropertyValue("count") != "1")
{	
	if(tP.getPropertyValue("V2") == tP.getPropertyValue("versionUrlEncode"))
	{
     def nodeuseridbasic = URLEncoder.encode(tP.getPropertyValue("NODEUSERID"),"UTF-8");
     tP.setPropertyValue("NODEUSERIDBAU1_"+tP.getPropertyValue("count"),nodeuseridbasic);
	}
	else
	{
     def nodeuseridbasic = tP.getPropertyValue("NODEUSERID");
     tP.setPropertyValue("NODEUSERIDBAU1_"+tP.getPropertyValue("count"),nodeuseridbasic);
	}
}
</script></con:config></con:testStep><con:testStep type="groovy" name="CreatePoliciesForUser_BAU1" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PoliciesForBasicUser");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="STSCreate_1Year_BAU1" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tP.getPropertyValue("UserName_BAU1");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def samlbasic = tP.getPropertyValue("SAML");

tP.setPropertyValue("SAMLBAU1_"+tP.getPropertyValue("count"),samlbasic);
if(tP.getPropertyValue("count") != "1")
{	
     def nodeuseridbasic = tP.getPropertyValue("NODEUSERID");
     tP.setPropertyValue("NODEUSERIDBAU1_"+tP.getPropertyValue("count"),nodeuseridbasic);
}</script></con:config></con:testStep><con:testStep type="groovy" name="UserCreate_FAU2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if(tP.getPropertyValue("count") == "1"){
def UserName = tP.getPropertyValue("UserName_FAU2");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");
tC.setPropertyValue("UserClass","urn:dece:role:user:class:full");
tC.setPropertyValue("MeetsAgeOfMajority","true");
tC.setPropertyValue("DateOfBirth","1986-02-25");
def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("UserCreate_Standard");



myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def nodeuseridfull = tP.getPropertyValue("NODEUSERID");
tP.setPropertyValue("NODEUSERIDFAU2_"+tP.getPropertyValue("count"),nodeuseridfull);
def useridfull = tP.getPropertyValue("USERID");
tP.setPropertyValue("USERIDFAU2_"+tP.getPropertyValue("count"),useridfull);
}
</script></con:config></con:testStep><con:testStep type="groovy" name="STSCreate_FAU2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tP.getPropertyValue("UserName_FAU2");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
if(tP.getPropertyValue("count") != "1")
{	
	if(tP.getPropertyValue("V2") == tP.getPropertyValue("versionUrlEncode"))
	{
     def nodeuseridfull = URLEncoder.encode(tP.getPropertyValue("NODEUSERID"),"UTF-8");
     tP.setPropertyValue("NODEUSERIDFAU2_"+tP.getPropertyValue("count"),nodeuseridfull);
	}
	else
	{
     def nodeuseridfull = tP.getPropertyValue("NODEUSERID");
     tP.setPropertyValue("NODEUSERIDFAU2_"+tP.getPropertyValue("count"),nodeuseridfull);
	}
}</script></con:config></con:testStep><con:testStep type="groovy" name="CreatePoliciesForUser_FAU2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PoliciesForStandardUser");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="STSCreate_1Year_FAU2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tP.getPropertyValue("UserName_FAU2");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def samlfull = tP.getPropertyValue("SAML");

tP.setPropertyValue("SAMLFAU2_"+tP.getPropertyValue("count"),samlfull);
if(tP.getPropertyValue("count") != "1")
{	
     def nodeuseridfull = tP.getPropertyValue("NODEUSERID");
     tP.setPropertyValue("NODEUSERIDFAU2_"+tP.getPropertyValue("count"),nodeuseridfull);
}</script></con:config></con:testStep><con:testStep type="groovy" name="UserCreate_SAU2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if(tP.getPropertyValue("count") == "1"){
def UserName = tP.getPropertyValue("UserName_SAU2");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");
tC.setPropertyValue("UserClass","urn:dece:role:user:class:standard");
tC.setPropertyValue("MeetsAgeOfMajority","false");
tC.setPropertyValue("DateOfBirth","1997-01-07");
def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("UserCreate_Standard");



myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def nodeuseridstandard = tP.getPropertyValue("NODEUSERID");
tP.setPropertyValue("NODEUSERIDSAU2_"+tP.getPropertyValue("count"),nodeuseridstandard);
def useridstandard = tP.getPropertyValue("USERID");
tP.setPropertyValue("USERIDSAU2_"+tP.getPropertyValue("count"),useridstandard);
}
</script></con:config></con:testStep><con:testStep type="groovy" name="STSCreate_SAU2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tP.getPropertyValue("UserName_SAU2");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
if(tP.getPropertyValue("count") != "1")
{	
	if(tP.getPropertyValue("V2") == tP.getPropertyValue("versionUrlEncode"))
	{
     def nodeuseridstandard = URLEncoder.encode(tP.getPropertyValue("NODEUSERID"),"UTF-8");
     tP.setPropertyValue("NODEUSERIDSAU2_"+tP.getPropertyValue("count"),nodeuseridstandard);
	}
	else
	{
     def nodeuseridstandard = tP.getPropertyValue("NODEUSERID");
     tP.setPropertyValue("NODEUSERIDSAU2_"+tP.getPropertyValue("count"),nodeuseridstandard);
	}
}</script></con:config></con:testStep><con:testStep type="groovy" name="CreatePoliciesForUser_SAU2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PoliciesForStandardUser");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="STSCreate_1Year_SAU2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tP.getPropertyValue("UserName_SAU2");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def samlstandard = tP.getPropertyValue("SAML");

tP.setPropertyValue("SAMLSAU2_"+tP.getPropertyValue("count"),samlstandard);
if(tP.getPropertyValue("count") != "1")
{	
     def nodeuseridstandard = tP.getPropertyValue("NODEUSERID");
     tP.setPropertyValue("NODEUSERIDSAU2_"+tP.getPropertyValue("count"),nodeuseridstandard);
}</script></con:config></con:testStep><con:testStep type="groovy" name="UserCreate_BAU2" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if(tP.getPropertyValue("count") == "1"){
def UserName = tP.getPropertyValue("UserName_BAU2");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("UserCreate_Basic");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def nodeuseridbasic = tP.getPropertyValue("NODEUSERID");
tP.setPropertyValue("NODEUSERIDBAU2_"+tP.getPropertyValue("count"),nodeuseridbasic);
def useridbasic = tP.getPropertyValue("USERID");
tP.setPropertyValue("USERIDBAU2_"+tP.getPropertyValue("count"),useridbasic);
}
</script></con:config></con:testStep><con:testStep type="groovy" name="STSCreate_BAU2" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tP.getPropertyValue("UserName_BAU2");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
if(tP.getPropertyValue("count") != "1")
{	
	if(tP.getPropertyValue("V2") == tP.getPropertyValue("versionUrlEncode"))
	{
     def nodeuseridbasic = URLEncoder.encode(tP.getPropertyValue("NODEUSERID"),"UTF-8");
     tP.setPropertyValue("NODEUSERIDBAU2_"+tP.getPropertyValue("count"),nodeuseridbasic);
	}
	else
	{
     def nodeuseridbasic = tP.getPropertyValue("NODEUSERID");
     tP.setPropertyValue("NODEUSERIDBAU2_"+tP.getPropertyValue("count"),nodeuseridbasic);
	}
}</script></con:config></con:testStep><con:testStep type="groovy" name="CreatePoliciesForUser_BAU2" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PoliciesForBasicUser");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="STSCreate_1Year_BAU2" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tP.getPropertyValue("UserName_BAU2");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
def samlbasic = tP.getPropertyValue("SAML");

tP.setPropertyValue("SAMLBAU2_"+tP.getPropertyValue("count"),samlbasic);
if(tP.getPropertyValue("count") != "1")
{	
     def nodeuseridbasic = tP.getPropertyValue("NODEUSERID");
     tP.setPropertyValue("NODEUSERIDBAU2_"+tP.getPropertyValue("count"),nodeuseridbasic);
}</script></con:config></con:testStep><con:testStep type="groovy" name="Increment Counter and loop if necessary"><con:settings/><con:config><script>import com.eviware.soapui.impl.wsdl.panels.support.MockTestSuiteRunner;
import com.eviware.soapui.impl.wsdl.panels.support.MockTestSuiteRunContext;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

int loopuntil = tP.getPropertyValue("loop").toInteger();
int counter   = tP.getPropertyValue("Count").toInteger();


if (counter &lt; loopuntil) {
	counter++;
    tP.setPropertyValue("Count",counter.toString());
    log.info "==========================================================";
    testRunner.gotoStepByName("Set NodeID and counter");
}
</script></con:config></con:testStep><con:properties><con:property><con:name>UserName</con:name><con:value>stream_list_view_20150615_014514</con:value></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>UserClass</con:name><con:value>urn:dece:role:user:class:standard</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1997-01-07</con:value></con:property><con:property><con:name>Consent_Version</con:name><con:value>20121024</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>993282f6-9376-4ef1-a63a-3c8080ed376d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d586b16a-25ab-42e7-843f-4615e6e5b6af</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eceab473-b205-4123-8cc3-1e3b1cc51d7f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8328e7ca-1a6e-4e28-8384-b121130eac4d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f524a7af-4278-406d-9a4d-e50ccabff836</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:requirements/><con:properties><con:property><con:name>AccountDisplayName</con:name><con:value>Ashwin_Acc_Create_20150615_014510</con:value></con:property><con:property><con:name>ACCOUNTID</con:name><con:value>188AE1B462D93094E0533D991F0A7A41</con:value></con:property><con:property><con:name>ACCOUNTID_1</con:name><con:value>188AE1B462283094E0533D991F0A7A41</con:value></con:property><con:property><con:name>accountList</con:name><con:value>urn:dece:accountid:org:dece:155797F4C6281279E05307991F0A72B3</con:value></con:property><con:property><con:name>accountListDLT</con:name><con:value>urn:dece:accountid:org:dece:14F27C6BFFF33EC1E05307991F0A26C8</con:value></con:property><con:property><con:name>ActualStreamHandleIDList</con:name><con:value/></con:property><con:property><con:name>alid</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_561393521.txt</con:value></con:property><con:property><con:name>alidUK</con:name><con:value>urn:dece:alid:file:Pat_Do_Not_Touch_UK_UK_BBFC_Rating_R18.txt</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>apid</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:242394094</con:value></con:property><con:property><con:name>APItestSuite</con:name><con:value>Test Cases Containing APIs</con:value></con:property><con:property><con:name>audienceList</con:name><con:value>urn:dece:org:org:dece:DLASP_CS_1</con:value></con:property><con:property><con:name>audiencelist1</con:name><con:value>urn:dece:org:org:dece:iscportal1;urn:dece:org:org:dece:iscportalcs1;</con:value></con:property><con:property><con:name>audiencelist2</con:name><con:value>urn:dece:org:org:dece:RET_CS_1</con:value></con:property><con:property><con:name>audiencelist3</con:name><con:value>urn:dece:org:org:dece:DLASP_CS_1</con:value></con:property><con:property><con:name>audiencelist4</con:name><con:value>urn:dece:org:org:dece:dece:cs</con:value></con:property><con:property><con:name>audiencelist5</con:name><con:value>urn:dece:org:org:dece:coord:cs</con:value></con:property><con:property><con:name>Batch_HostName</con:name><con:value>https://qa1.b.uvvu.com</con:value></con:property><con:property><con:name>cacheDuration</con:name><con:value>86400</con:value></con:property><con:property><con:name>CertMatchesNodeID</con:name><con:value>YES</con:value></con:property><con:property><con:name>CertMatchesNodeName</con:name><con:value>YES</con:value></con:property><con:property><con:name>certspath</con:name><con:value>C:\certificates\</con:value></con:property><con:property><con:name>certsPath_Linux</con:name><con:value>../../Certs/QALP1/</con:value></con:property><con:property><con:name>certsPath_Windows</con:name><con:value>../../Certs/QALP1/</con:value></con:property><con:property><con:name>cid</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_344946277.txt</con:value></con:property><con:property><con:name>cidUK</con:name><con:value>urn:dece:cid:file:Pat_Do_Not_Touch_UK_UK_BBFC_Rating_R18.txt</con:value></con:property><con:property><con:name>clusterNumber</con:name><con:value>1</con:value></con:property><con:property><con:name>coordinatorSchema</con:name><con:value>http://www.decellc.org/schema/2015/03/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_02</con:name><con:value>http://www.decellc.org/schema/2015/03/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_06</con:name><con:value>http://www.decellc.org/schema/2012/12/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_07</con:name><con:value>http://www.decellc.org/schema/2013/06/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_11</con:name><con:value>http://www.decellc.org/schema/2013/10/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_21</con:name><con:value>http://www.decellc.org/schema/2013/10/coordinator</con:value></con:property><con:property><con:name>coords</con:name><con:value>FALKY,COORD-10000,COORD-3034,COORD-2999,COORD-2509,COORD-627,UV-135,UV-340,Coord-2180</con:value></con:property><con:property><con:name>count</con:name><con:value>3</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DBIdentifier</con:name><con:value>LP1</con:value></con:property><con:property><con:name>DBPassword</con:name><con:value>lp1db_23</con:value></con:property><con:property><con:name>DBUsername</con:name><con:value>DEQA1_APP</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value>urn:dece:org:org:dece:1</con:value></con:property><con:property><con:name>DeleteCount</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Device_HostName</con:name><con:value>https://qa.d.uvvu.com</con:value></con:property><con:property><con:name>disablePriority</con:name><con:value>P3,CHILD,CLG</con:value></con:property><con:property><con:name>DMR_ALID</con:name><con:value>urn:dece:alid:org:200002</con:value></con:property><con:property><con:name>DMR_APID</con:name><con:value>urn:dece:apid:org:200002</con:value></con:property><con:property><con:name>DMR_BID</con:name><con:value>urn:dece:bid:org:200002</con:value></con:property><con:property><con:name>DMR_CID</con:name><con:value>urn:dece:cid:org:200002</con:value></con:property><con:property><con:name>enableFlakyScript</con:name><con:value>false</con:value></con:property><con:property><con:name>enablePriorityScript</con:name><con:value>false</con:value></con:property><con:property><con:name>ENV</con:name><con:value>QALP1</con:value></con:property><con:property><con:name>envIdentifier</con:name><con:value>LP1</con:value></con:property><con:property><con:name>expectDBCreatedByDB</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedByDB</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>expectDBUpdatedByDB</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>ExpirationDateTime</con:name><con:value>2015-05-05T15:57:09.576Z</con:value></con:property><con:property><con:name>FLAKYSELECTOR</con:name><con:value>without_flaky</con:value></con:property><con:property><con:name>Flaky_Disabled</con:name><con:value>true</con:value></con:property><con:property><con:name>idempotentdelaymillisecs</con:name><con:value>60000</con:value></con:property><con:property><con:name>JDBCConnStr</con:name><con:value>jdbc:oracle:thin:@stdeqp-clu1-scan.va.neustar.com:2115/stdecqpdb_stdecqa.neustar.com</con:value></con:property><con:property><con:name>JDBCDriver</con:name><con:value>DECEOracle</con:value></con:property><con:property><con:name>JKSAliasName</con:name><con:value>qalp1</con:value></con:property><con:property><con:name>JKSPassword</con:name><con:value>testing</con:value></con:property><con:property><con:name>loop</con:name><con:value>3</con:value></con:property><con:property><con:name>microService</con:name><con:value>ON</con:value></con:property><con:property><con:name>NODEACCOUNTID</con:name><con:value>urn:dece:accountid:org:dece:188AE1B462D93094E0533D991F0A7A41</con:value></con:property><con:property><con:name>NODEACCOUNTID_1</con:name><con:value>urn:dece:accountid:org:dece:188AE1B462283094E0533D991F0A7A41</con:value></con:property><con:property><con:name>NODEACCOUNTID_2</con:name><con:value>urn:dece:accountid:org:dece:188AE1B462D93094E0533D991F0A7A41</con:value></con:property><con:property><con:name>NODEACCOUNTID_3</con:name><con:value>urn:dece:accountid:org:dece:188AE1B462D93094E0533D991F0A7A41</con:value></con:property><con:property><con:name>NODEACCOUNTID_4</con:name><con:value>urn:dece:accountid:org:dece:E072D07F07DF9AC4E0401F0A07993B75</con:value></con:property><con:property><con:name>NODEACCOUNTID_5</con:name><con:value>urn:dece:accountid:org:dece:E072D07F07E09AC4E0401F0A07993B75</con:value></con:property><con:property><con:name>nodeDLP</con:name><con:value>0914</con:value></con:property><con:property><con:name>nodeIdAccportal</con:name><con:value>ACCESS</con:value></con:property><con:property><con:name>nodeIdAccportal2</con:name><con:value>ACCESS_2</con:value></con:property><con:property><con:name>nodeIdAccportalCS</con:name><con:value>ACCESCS</con:value></con:property><con:property><con:name>nodeIdAccportalCS2</con:name><con:value>ACCESSCS_2</con:value></con:property><con:property><con:name>nodeIdCON</con:name><con:value>CON</con:value></con:property><con:property><con:name>nodeIdCON2</con:name><con:value>CON_2</con:value></con:property><con:property><con:name>nodeIdCONCS</con:name><con:value>CON_CS_1</con:value></con:property><con:property><con:name>nodeIdCONCS2</con:name><con:value>CON_CS_2</con:value></con:property><con:property><con:name>nodeIdCoo</con:name><con:value>COO</con:value></con:property><con:property><con:name>nodeIdCoo2</con:name><con:value>COO_2</con:value></con:property><con:property><con:name>nodeIdCoordCS</con:name><con:value>coord:cs</con:value></con:property><con:property><con:name>nodeIdDECE</con:name><con:value>DECE</con:value></con:property><con:property><con:name>nodeIdDECECS</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>nodeIdDEV</con:name><con:value>DEV</con:value></con:property><con:property><con:name>nodeIdDEV2</con:name><con:value>DEV_2</con:value></con:property><con:property><con:name>nodeIdDEVCS</con:name><con:value>DEV_CS_1</con:value></con:property><con:property><con:name>nodeIdDEVCS2</con:name><con:value>DEV_CS_2</con:value></con:property><con:property><con:name>nodeIdDLASP</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>nodeIdDLASP2</con:name><con:value>DLASP_2</con:value></con:property><con:property><con:name>nodeIdDLASPCS</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>nodeIdDLASPCS2</con:name><con:value>DLASP_CS_2</con:value></con:property><con:property><con:name>nodeIdDSP</con:name><con:value>DSP</con:value></con:property><con:property><con:name>nodeIdDSP2</con:name><con:value>DSP_2</con:value></con:property><con:property><con:name>nodeIdDSPCS</con:name><con:value>DSP_CS_1</con:value></con:property><con:property><con:name>nodeIdDSPCS2</con:name><con:value>DSP_CS_2</con:value></con:property><con:property><con:name>nodeIdLLASP</con:name><con:value>LLASP</con:value></con:property><con:property><con:name>nodeIdLLASP2</con:name><con:value>LLASP_2</con:value></con:property><con:property><con:name>nodeIdLLASPCS</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>nodeIdLLASPCS2</con:name><con:value>LLASP_CS_2</con:value></con:property><con:property><con:name>nodeIdportal</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>nodeIdportal2</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>nodeIdportalCS</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>nodeIdportalCS2</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>nodeIdRTL</con:name><con:value>RET</con:value></con:property><con:property><con:name>nodeIdRTL2</con:name><con:value>RET_2</con:value></con:property><con:property><con:name>nodeIdRTLCS</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>nodeIdRTLCS2</con:name><con:value>RET_CS_2</con:value></con:property><con:property><con:name>nodeoid10</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>nodeoid11</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>nodeoid20</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>nodeoid21</con:name><con:value>3611</con:value></con:property><con:property><con:name>nodeoid30</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>nodeoid31</con:name><con:value>3711</con:value></con:property><con:property><con:name>nodeoid40</con:name><con:value>40</con:value></con:property><con:property><con:name>nodeoid50</con:name><con:value>41</con:value></con:property><con:property><con:name>NODEUSERID</con:name><con:value>urn:dece:userid:org:dece:188AE1B463423094E0533D991F0A7A41</con:value></con:property><con:property><con:name>NODEUSERIDBAU1_1</con:name><con:value>urn:dece:userid:org:dece:F96E164BE49C95D2E0401F0A05997C44</con:value></con:property><con:property><con:name>NODEUSERIDBAU1_2</con:name><con:value>urn:dece:userid:org:dece:F96E09BA3C4685E3E0401F0A07995AB4</con:value></con:property><con:property><con:name>NODEUSERIDBAU1_3</con:name><con:value>urn:dece:userid:org:dece:F96E09BA3C4685E3E0401F0A07995AB4</con:value></con:property><con:property><con:name>NODEUSERIDBAU1_4</con:name><con:value>urn:dece:userid:org:dece:E072D94C26064ADCE0401F0A05993932</con:value></con:property><con:property><con:name>NODEUSERIDBAU1_5</con:name><con:value>urn:dece:userid:org:dece:E072D94C26074ADCE0401F0A05993932</con:value></con:property><con:property><con:name>NODEUSERIDBAU2_1</con:name><con:value>urn:dece:userid:org:dece:F96E099093EC61E3E0401F0A07995A9C</con:value></con:property><con:property><con:name>NODEUSERIDBAU2_2</con:name><con:value>urn:dece:userid:org:dece:F96E0BF138C73593E0401F0A079973F6</con:value></con:property><con:property><con:name>NODEUSERIDBAU2_3</con:name><con:value>urn:dece:userid:org:dece:F96E0BF138C73593E0401F0A079973F6</con:value></con:property><con:property><con:name>NODEUSERIDBAU2_4</con:name><con:value>urn:dece:userid:org:dece:E072D94C26DA4ADCE0401F0A05993932</con:value></con:property><con:property><con:name>NODEUSERIDBAU2_5</con:name><con:value>urn:dece:userid:org:dece:E072D94C26DB4ADCE0401F0A05993932</con:value></con:property><con:property><con:name>NODEUSERIDFAU1_1</con:name><con:value>urn:dece:userid:org:dece:188AE1B462293094E0533D991F0A7A41</con:value></con:property><con:property><con:name>NODEUSERIDFAU1_2</con:name><con:value>urn:dece:userid:org:dece:188AE1B462DB3094E0533D991F0A7A41</con:value></con:property><con:property><con:name>NODEUSERIDFAU1_3</con:name><con:value>urn:dece:userid:org:dece:188AE1B462DB3094E0533D991F0A7A41</con:value></con:property><con:property><con:name>NODEUSERIDFAU1_4</con:name><con:value>urn:dece:userid:org:dece:E072D07F07F99AC4E0401F0A07993B75</con:value></con:property><con:property><con:name>NODEUSERIDFAU1_5</con:name><con:value>urn:dece:userid:org:dece:E072D07F07FA9AC4E0401F0A07993B75</con:value></con:property><con:property><con:name>NODEUSERIDFAU2_1</con:name><con:value>urn:dece:userid:org:dece:188AE1B4628C3094E0533D991F0A7A41</con:value></con:property><con:property><con:name>NODEUSERIDFAU2_2</con:name><con:value>urn:dece:userid:org:dece:188AE1B4633B3094E0533D991F0A7A41</con:value></con:property><con:property><con:name>NODEUSERIDFAU2_3</con:name><con:value>urn:dece:userid:org:dece:188AE1B4633B3094E0533D991F0A7A41</con:value></con:property><con:property><con:name>NODEUSERIDFAU2_4</con:name><con:value>urn:dece:userid:org:dece:E072D94C265B4ADCE0401F0A05993932</con:value></con:property><con:property><con:name>NODEUSERIDFAU2_5</con:name><con:value>urn:dece:userid:org:dece:E072D94C265C4ADCE0401F0A05993932</con:value></con:property><con:property><con:name>NODEUSERIDFULL</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE242BD618670D40CE0401F0A059921A3</con:value></con:property><con:property><con:name>NODEUSERIDSAU1_1</con:name><con:value>urn:dece:userid:org:dece:188AE1B462623094E0533D991F0A7A41</con:value></con:property><con:property><con:name>NODEUSERIDSAU1_2</con:name><con:value>urn:dece:userid:org:dece:188AE1B463303094E0533D991F0A7A41</con:value></con:property><con:property><con:name>NODEUSERIDSAU1_3</con:name><con:value>urn:dece:userid:org:dece:188AE1B463303094E0533D991F0A7A41</con:value></con:property><con:property><con:name>NODEUSERIDSAU1_4</con:name><con:value>urn:dece:userid:org:dece:E072D94C25C64ADCE0401F0A05993932</con:value></con:property><con:property><con:name>NODEUSERIDSAU1_5</con:name><con:value>urn:dece:userid:org:dece:E072D94C25C74ADCE0401F0A05993932</con:value></con:property><con:property><con:name>NODEUSERIDSAU2_1</con:name><con:value>urn:dece:userid:org:dece:188AE1B462B13094E0533D991F0A7A41</con:value></con:property><con:property><con:name>NODEUSERIDSAU2_2</con:name><con:value>urn:dece:userid:org:dece:188AE1B463423094E0533D991F0A7A41</con:value></con:property><con:property><con:name>NODEUSERIDSAU2_3</con:name><con:value>urn:dece:userid:org:dece:188AE1B463423094E0533D991F0A7A41</con:value></con:property><con:property><con:name>NODEUSERIDSAU2_4</con:name><con:value>urn:dece:userid:org:dece:E072D94C26974ADCE0401F0A05993932</con:value></con:property><con:property><con:name>NODEUSERIDSAU2_5</con:name><con:value>urn:dece:userid:org:dece:E072D94C26984ADCE0401F0A05993932</con:value></con:property><con:property><con:name>Node_ID</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>Node_OID</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>OrgID</con:name><con:value>ISC_R1</con:value></con:property><con:property><con:name>policy_TOU</con:name><con:value>https://qa1.c.uvvu.com/Consent/Text/US/urn:dece:type:policy:TermsOfUse:20140811/html</con:value></con:property><con:property><con:name>portalnodeid</con:name><con:value>10</con:value></con:property><con:property><con:name>primaryemail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>Provision_HostName</con:name><con:value>https://qa1.p.uvvu.com</con:value></con:property><con:property><con:name>QC_AutoMapping</con:name><con:value>enabled</con:value></con:property><con:property><con:name>QC_BulkUpdate</con:name><con:value>disabled</con:value></con:property><con:property><con:name>QC_Domain</con:name><con:value>DEFAULT</con:value></con:property><con:property><con:name>QC_password</con:name><con:value>******</con:value></con:property><con:property><con:name>QC_Project</con:name><con:value>DECE</con:value></con:property><con:property><con:name>QC_ProjectPath</con:name><con:value/></con:property><con:property><con:name>QC_ReExport</con:name><con:value>disabled</con:value></con:property><con:property><con:name>QC_ResultExportLevel</con:name><con:value>off</con:value></con:property><con:property><con:name>QC_RunName</con:name><con:value/></con:property><con:property><con:name>QC_soapUI_ARGS</con:name><con:value/></con:property><con:property><con:name>QC_TestLabDirectory</con:name><con:value>Root\DECE_API\DECE_API_FINAL_REGRESSION_1.0.1.5</con:value></con:property><con:property><con:name>QC_TestPlanDirectory</con:name><con:value>Subject\DECE_1.0_Release\DECE_API\APIs\StreamListView</con:value></con:property><con:property><con:name>QC_TestSet</con:name><con:value>StreamListView</con:value></con:property><con:property><con:name>QC_TestType</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>QC_URL</con:name><con:value>http://stprqc01.va.neustar.com:8080/qcbin</con:value></con:property><con:property><con:name>QC_user</con:name><con:value>pgentry</con:value></con:property><con:property><con:name>Query_HostName</con:name><con:value>https://qa1.q.uvvu.com</con:value></con:property><con:property><con:name>Rights_ALID</con:name><con:value>urn:dece:alid:file:RTUPDATE_R3_EXAMPLE_ALIDVersion_212395.txt</con:value></con:property><con:property><con:name>Rights_APID</con:name><con:value>urn:dece:apid:file:INTERACTIVE_MetadataDigitalCreate.txt:39983831</con:value></con:property><con:property><con:name>Rights_CID</con:name><con:value>urn:dece:cid:file:RTUPDATE_R3_EXAMPLE_CIDVersion_212395.txt</con:value></con:property><con:property><con:name>runTeardown</con:name><con:value>false</con:value></con:property><con:property><con:name>SAML</con:name><con:value>nVbbcuI4EP0VyvM4ZXzl5gpUMSHseCAkExKSycuUkNtYE1tyLJnLfv1KBhxMSJbdJ5fare7T3UdHuuAoiW2vzzlkgjBaWycx5V5h7Wp5Rj2GOOEeRQlwT2Bv2r8ee3bd9NB+i1bzB13tt9t0kBs4gd5Eoa27HQfrnTk09GYTO6Frgg2BJV05z8GnXCAqupptWg3dbOpW495se5bjOa26224/a7UZZFzGli51U9uBWvOuFgmReoaxWq3qK6fOsoVhm6ZlPF2PpziCBGm9i21FRaKst/PH9QAwxDGuY5YYF0bF5yLg3pQsKBJ5BrtcwUe5TMPsGNIn4GTxRSv3QuDTkBXLS0QZJRjF5G+k+nMNImJBrR8vWEZElHxYhGWqwDqssY4tl37RjCq0MwNVEGYc6TxC1i7WHYSQAcVQe7jzu9qX86ZWbL3PEOUhyxJeXf43PECXELMUAp3vy9pBOz/giU71LgB7PsVxzskSJoqsKcLAd9MEfH6o2m0GIVmPCZcEXXOFzjiEd7TcdmNAFsDF/xnQwXC2QWYozqH3I83+NMLXycPV4NtDmyO0ajPracmayOwWAA6dC0M52u3yiJQlibY7pi2/OWitW8/OoztZDQMxihbDUTz2X+z1VdZJnZ8bI7xN+eZX2HHTp9fH2cYC032GydfL7Jcf/jU0xzcuf/j6cyOMIV5f+S7k963Rj8ncwc93s1nkf2/7+HFp0595kkU/ZkM7mzx2vn93x/MbqzVtXm6i5mNnNo8HbHxFRtFoM3q5Yy9G/NSIp2z4K2qTEfk6zBbdspwD/FXb/sxP8/kfwGK/VDTwB7WhnBISn4uZspBADwtXL1XiwwVQofXULqUdXi7ljgSenOF2bbXb/SvrmzxAru2YHffKbDjOoNOxhma/1XetvchsURxBvGQ0JCqXktwtbT4HiBOPAw0g05csl0rHtU8iDpBANZ/eyUPAKId7JuXZWrjrDSw3dotvkuCFORZQulzNHa02YeKG3mT9UEBW0WTLqmjyHWCSElDCrXjNJbG5kL14RctcxFZ9ieoUcintmVJZz3bbDYOTJI1BITUSFuQx1NMoLTpj8O3X1hHmhXUw7k9vf19OfxcHwviwvON/+05In4AoB65K+gZymnDijrH39byru3nyLtqH7+cBUedLtlVkBG+RVH+9sUXRpKTKW2F75OWGY0MluHFcV5kvWBJc0r68vKWmSxXo7Yfziqz6az1fLvNiHq7rGJkMb6iOGKZtTAHnUqc29+wFqFFGMc66FErgR8lLexViLiI6FUhAIvlTK5ZnvAKmwNUrwJfEX5/7xKiklK0TsBanbJexfMEoxJ8+crCHlZ8038rPimXB28ROxDrII+uUjwBB6EKt1IWw+YAemMmwREoZyw6DnwpwKnnVWDa5xCIkoea5gI//1JRGdTWEMcup8AdaYTjUzQKn2KTgvTm9C1NIc/lWI//+WNNJQQEM8oXHSRFfXbmeOgJ0caC9u6Qn5dcedD6T3yq63jvze8tBn4453vsH</con:value></con:property><con:property><con:name>SAMLBAU1_1</con:name><con:value>nVbbcps6FH3vVzDksYO5BOzAxJ5xfUlp46Sx00v6ckaIbawWJCIJ7PTrj8CB2I6Tk54Zz3i02Vp77YuWdC5QljrBUAjgkjCqheO+/o/f82zXO4sM37Zcw8WOZ5zhpWt4nrW0zuI4hq6na6EQBYRUSERlX3cs2zUsz7C9W8sPXDdwnE6vZ//UtW/AhYJWLh1L1zZZSkVQh+3rBacBQ4KIgKIMRCBxsBjOLgPlGaCGkz4437KsA/LBSso8ME3ciQFDmuIOZpl5bu75nMciWJCEIllweIwZi77+uHe9XnfWpx3GE9OxLMu0fFP5xIIkJ/rgXbMZ4pAu2XY9QpRRglFK/qCK1AzkisXaME0YJ3KVvQBtm7ZVQRuwwQa2XXqim08BanZvRNojyQUyxArZDdgclsCBYtC+zsO+fvK2Dm733nJExZLxTBys/44S0BJSlkNsiCazht3bEY+Ua3AOOAgpTgtBSriqxiRHGIT2hcOSbC6JUMMXC61uv7YR6keaKQP8N205N3e5KurmkeqMSQJC/p+e7fZri/INpQUM7iMy9+VXSujULbuzX8uCcbib3iV+0q8p7DpvSbXtflwfDms7W4+b1tL8/Sma0VM89POHj+V1HBff11lxmbDPp7NR78pbvGer668/SjSB8GZWfn7//WzlL+ZYPqTfRtPLiK9n+c/uYnI1fvf9Nzq1Qu/9Ivbzu4lV+GPu0yK8iIdfsixJwmg+md9j8NyLwpQwW3UvPtoPcsw3cJO5i8jlk176h2OxZn/4O2945UZldHF9RT7dDF22wnf9p5x2c9g3NpKwKKJfgGWzrMYjHGtT1S8kX5eXykJiY1m7BnmlUUIClfqg2lVJS1AoASJxoJq5XU/97sTuuh8mrj/yvbEzsVzLnlpDy/P93sh1Gw3asjigOGJ0SapYlcpu5+d1gjgLBNAYuFGyAq9A6K8gjpFEWkjn6nAwKuCWKRW3iZc4jpMm2JI5d4TodWUko6jQtSsmr+k1Hy4l8D3ptp096Z4DJjmBSt+rARdqwoVUtbhHZSFTu1OiDoVC3QC8EuHAcc88U5AsT6FiamYsLlLo5Ku8rowptv+OgbCorUTgnHGJUrs+fy+md/itqYTyiUnlIKqUPoDqJhy5iuwmn2d5e0evrAZ+WMSkOmaqrJITvGWy/+lpWqoxaUflKbGGebvhLwGwOAJhvsLPPCxNGzEuyU785npVN4bSk0HT33vUue8UZVnUHe1VWskVvKkk0zYXgAsleA+37DdQs4Uw33TftKwPIrf2fX6FXNGFRBIyNX9avXzDY2MBonpshOrgbN76ktkLqeomYSOP2UapepNUjF99tuAAV37K/EX9rRmPn9p1BGsnjspTvTAkoUm1qm6WhxemAzMFS5QUMr4LfgzgWPB9Y1vklotU0xQVEl7+olUa19cRxqygMhzrtWFXd2ue8iGH4MnpGUyt7Y+X9Ua8eFn/mF0ulAJmSG99yX87G6QeFwx69SaoufT1jXp7quA02dH5R4L7Uu9ZY8fqTl3nw7Q3dVup7/m+1+36bQH3Mhk8Mz+37NT08DwM/gU=</con:value></con:property><con:property><con:name>SAMLBAU1_2</con:name><con:value>nVZdc9o6EH3vr/C4jx3jbwiewAyBpHGbrwJN27x0hLwYNbbkWDKY/PpKJnaAkNz0zjDDaL3aPbt7dKRjjtLECQacQy4Io1o46um/Z35kYwv7ho/ANTzkzgzk2m2jO7edqOP5cORjXQs5LyCkXCAqerpj2Z5h+YbtT61u4HmB2255He9O124h5zK0dGlZulamCeVBlbanFzkNGOKEBxSlwAOBg8ng8iKQngGqMen94w3KKmHeXwiRBaaJWxFgSBLcwiw1j80dn+OIBxMSUySKHJ5yRrynP+1drVatldtieWw6lmWZVteUPhEn8Ue9/6HeDFFI52yzHiLKKMEoIY9IgboEsWCRNkhilhOxSF8JbZu2pUIbUGID2x79qJvPCSp074y0AzLnyOALZNfBxjCHHCgG7fs47Okf3zfBzd5pjiifszzle+t/gwR0CQnLIDJ4XVmN7v0RD7Srfww4CClOCk6WcKVokiEMXLvJYU7KC8Il+SKuVePXSi5/pGYZ4H8Zy7G5jVVCNw90Z0Ri4OL/zGx7XpsotygpoN8tj+7db5cYxeWNN8PTz6Ms+nWf+Hdw1KsgbDtvQDXjflrvk7Xh1tOmeC4+5z+Ts+F4zFw3HZuhmJGv8+615QzWzqcSygWNOsS5nYl2Z3mX/vgjPM/isem3eUgH7Mvnm693d1/Wp59+nH/4djtfurfXy/Mft/FVcfMtzzqp952ZY3p/fs0m9+PRyerSOcf0MRz7PgofB1+H3V/e6OJnnN6w0j0f+4ROM0hhkn6AC+r/sk+cq/vztk8mjzPEe881bdewa6wlYVLM/gAW9VLRIxxpZ3JeSLwtL8pCImNeuQaZ0igugAq9r3YpaQkKKUAkCuQwN+uzbvvU6p4M3KHXPvJP3VPLs+wza2B1ul1/cOLVGrRBsQdxyOicqFxKZTf8eRsgTgMONILcWLICL4Drb0QcIYG0kI7l4WCUw5RJFeflwo4zT6wQ9W1nTdaSqn4UZ5muXTFxTa/zwVxAviPdtrMj3WPAJCOg9F0RnEuGcyF78YCWhUjs1hK1KBTyBsiVCAeOd+SbnKRZAgqpmbKoSKCVLbKqMybf/DsGwryyjk+nv4eT33Z1+l4tbv9b3QfpExHlwFVBJyBnCQcuIqeu5kXV/sELqw4/KCKiDplsqsgJ3iDZ/fTMFUWShih1WTXuxn3fsBPa3K+qyRYtCW4o39zVUuqlEPTrwTyg1kOrWC6LahQdJXK5DG9KrbPNCeBCjn89ZfdAzSaE+a6LokG9l7mx7+IrxIJOBBLyhFOhVct3vBImwNUrIZSML9/7BNlJKfsmoBSHbMNEPiYU4jffGzjAyk+ab+TfiuXR87gOxNrKI+uUTwNBaKxW6kpYv8IMzGRYIjWM5dvBDwU4lHzX2DS5wSIkm2aFgNe/aEqcejrCmBVUhCO9MmwLZoVTrDMInp1ehKlE+emWLfmrt+zPy4uJlK4U6Y0v+W9ng1R0waCry7zC0tNL+WiUyWm8JdBPAPc12m57I/t02Bm1PWdbozvu2VHTwJ1K+i/MLy1bPd0/D/2/</con:value></con:property><con:property><con:name>SAMLBAU1_3</con:name><con:value>nVZdc9o6EH3vr/C4jx0jGxuMPYEZvnLjloQk0LTTl46Q16Biy2DJxsmvv7KJHSAkN70zzDBar3bP7h4d6YLjKGy6fc4hETRmijfqqr99R+8QYhlayzADzVrglua0DVuzLYfYAThNZwGq4nGegse4wEx01aZuWJre0ozWXHdcy3Its9Fptn+pygMkXIaWLg1dVfIoZNwt03bVNGFujDnlLsMRcFcQd9a/nrjS08UVJrV3sUdZJkx6KyE2LkKk4QOBMCQNEkfoAh35XPjcndElwyJN4Dmnz7vq897dbtfYmY04WaKmrutId5D08TldflZ7n6rN4HssiPfrIWYxowSH9AkXoK5BrGJf6YfLOKFiFb0R2kCGXoTWICcaMSz2WUUvCUp0H4x0BDLhWOMrbFTB7iGABBgB5fu911U/f2yC+73zBDMexEnET9Z/BwlYBmG8AV/jVWUVuo9HPNOu3gUQ12MkTDnN4KagyQYT4MptAgHNJ5RL8vlcKcev5Fz+aMUyIH8zlgt0iFVCR2e6M6JL4OL/zOxwXvsoDzhMoZdu51eDr/DUfug/2BiNv67z+c02Ylwn3RLCofMeVD3u5/UpWWtuPW8acmqCYdvZk0V5sL7RV3cmu3v4GQQ3OMYPC91DHZPGxGhl34OxPcqeJkmGrBGdfIFB07zNp6g5D6mTgz39xPDyz69OPljk2SaaLq5n36er3Z/7dHMF1lWrvZ78aBkDJL5Z9s8v47k3vYLOkK6/jq9/kAmsRznq3zm77Bfa7i7Hn/7p33jDK8G8y+X19o48cdzpvtR0WMOxsZKEWbr4A0RUy4Ie3ki5lPPC4n15KSzU14LS1d0UGsUFMKH2il2FtLipFCDqu3KY+/Wl0x7rzqBvDq12pzU2x7qlG5d6X7cdp9UfWJUG7VGcQBzGLKBFrkJl9/x5HyCJXA7Mh0TL4pSsgKvvRBxhgRWP3cvDETMO81iquOGY9jqAXTuLTdNY441pPWZ6M2kTVbmJxZRNk34gIDnSbqN5pN33QOiGQiHwBcO5pDgXshlbnKUiNBoZbjBI5RWQFCrsNq1OC3EabUIooKIo9tMQGpvVpmwN4vv/poYJL62jSX92+3s4+22UB/DN+k6/Va2QPj4tHHhR0gDkOOHMXWRW9byqu3X2zqrC91OfFudM9lUklOyRHH96oUvBk5orL4VVyOsNp4aj4Oi0rjqfn1FS876+sKXeSzXoVcPZ4sa2kWZZWo7DLpQukeGRFDwDzYCkUq4e5/EaGKpDoA/dFjXqk8y1/RhfKlZsJrCASJJHKZcfeCrMgBdPBU/SPv/oO+QopeybgFycsw1D+aIoEL/76CAuKfyk+Vb+7eLEfxnXmVgHeWSd8n0gKFsWq+JeeHyDGySWYakUsjg5DH4uwLnkx8a6yTUWIdm0SAW8/UUpFKqrYkLilAlvpJaGQ9UscYrHDbgvTq/ClMr8fNXm/M2r9uf1ZCb1K8Jq7Uv/21mjJV2IfGhK/xJLV83ly1EmZ8sDlX4GeCrURtsaGeOhPWpbzUOhts3LTt3Ao0p6r8yvLQc9PT0PvX8B</con:value></con:property><con:property><con:name>SAMLBAU1_4</con:name><con:value>nVfZkqrKEn33KwzPo2EzOmB0d0QhqKioOMvLDSwKRJmkmPTrb6Gt2+7de98+90WsJCtz5UDWqldseC7bBhijKHYCv6xIb5X/CLzQ2rGCVaNpJNT4Zouu7YyWUOMswWKQURdYhq6UFYwTpPg4Nvz4rcLSDFejmzWaWTBMu95qc/UXrsnrlfIKRZiYJiovZFfuuT5uX92+VZLIbwcGdnDbNzyE2zFsz4E6ahPNtnHHVHl/vaG8Ooze93EctikKvpgIIteFLzDwqFfqk86ridtzx/aNOInQh08Tv1U+9mZZ9pJxL0FkUyxN0xQtUETHxI79T+W9dN+MTMW3gtu6Y/iB70DDdS5GAUpF8T4wy8C1g8iJ994fTDMUQxemayiHNcjw/j8V6peDK7ofWvoEMsJGDe8N5m5shiwUIR+i8nKmvFX++VkFb3sXkeFjK4g8/GX97yAhP0VuECKzhu+R3dH93OI36Xp/RbCt+NBNsJOicdEmoQERLk8jZDn5yMGk+Uxcvpa/nON7hyH4b0rySj3jJLCpbzIjOTbC8f9Tr+da3aysDDdB7wmVWCBdnzpp3RmsertZ/TjtHxVqe1TerhCelW+gHqX+WH9t1EdffWxyN8wJzNXztm5VL5oBTg1OPB5kzaOr/U3k6ENrffLG2Rrkm8AbaVOUmFBj1tTGujD9uh/xU0GyZpdYn8hCqaeepllin9YO642lYR41x3tHtmOhP4Py0WvEzoTW+sCaj6PWwNkhYUcp6GKP6kvAK5uBELVgt3vmAt3YWqV0j0/6eMOpo6Z51EaOjvHbr5ieYyjiGqLzNcji/6ZOC5IRG49Fp5gUFvk8Y/SuKkqnKnU6AHVskCkisBVxdAFj0T6e9kenJ2S0CLRlF0jgrM5AJtlbaaVpQzkzVytXXyndrqjO+KwPtlKJvJDkfCXpmwFtrPVwy3ZpfS6K5mYW7LhBaPaPWX8Px+pCzcYL5awe5Hy8kOn1VWbnZH1RDyozWSy50vogCupMzqTs6lGSs/1YX8/C7VLI4EXWVMD3ALOUO3u1v/BWDORme3iQRyo4XuXiXu2sVmouL8C0JNrjFYlt0enqIfTMcOe5+yfjfWJ8YfZW513PTfSLfFA7cq8zP/Xmyo6TNHkAZtvlbr06GutuWoL9MdjdPTp1x9gEma23MknbDoaBruxTOAaaLIoaIOmigar0BiDoiUDlgZNfOgexEXTMbkYNWFyqCm6vsTk7pw02erRrMK0Wsx2tG9NTQ5L9qj5Mdoe9ut90J9Xh3EyXQixctjitpg3DYWAeWtpG7sfD3Opr89JuKuUb2K+a9oByL0I3UpsDEF3Oe1e1Z/G6McHnnWNZa3Ez4d2m5arcLLRcKzzj6iLQjhHdEBHHUttzOoxLwFZFAHqH5UHUVLFVJNVUMm2rigboynECLgc2HrKr06CfunDLgSAfrieH40dhTCmTRSrTZNJWcqklAbMoQn++lLsHsBRtOxJtuStqUALaVhlmW5KvZZ8of81j95pHWxaBzOmgIfRL3JIW4kk853lw9sWl3xX26ilfmw2Pbp6QPJqPQz5T8djy9XVwVD0nWkbJfDkcjkf5bpH0jgcyqyx6Pkw5vSSnxxA44+Fif5QCyZiG220cVn0YwVgJPVXJLxMdH1rOzqMH1TojTmkJNtmlt8uWPUPWh5E9Z4b9mT/lmkIJJ9a571UPrWxdXcwbYdPs+JZ0PlN6tKIDEHSFWf1k5ix73C+zUSOzBuC4M9hx7griWZCH+gJmM224nnvVeqmejkYefVlQ/DicZPNexsuaVuVMcdFf4DBytknLzqOJb7JbI26kOr1qOKF7FNjkuOBDbmV7pFjT1Ayb6rSk8Ruoe3YzhANqRqVAblojpXfeXYxL6E3gbYB+nQ4P4W1+UM+T5dPouZOOOelWBOP7sjiAFKncJaeCEf+dwBQSx6xZV9V2WLAgHCM/rrwXuwry0k4IxXHMNjkybmuZbrKSwHfYBt3ggdSRaZ5mujSg64LACRx7Zzk3FF8gdgLfcgpfBY+7nVJ/Bwi9Nka+iaJaGiRwj3DlLxaLfJUVf0aO38DHaBEQnsjwHdLLYodlOJnjOXLoMa0OEIWGxIotWpAr5XEQT/xJBKwYRZ85Iv+JI84QdEIHFUSyOE0xOU5xTFJyMtIkdpmX1HjxUUKoZlSwvTbLt+oUdrzQRQVgygvMxEUv4T68JojCtydbMyC+SovsQnw96P8Y4dd392QQHdMpFHARjohIQdE3fJe9x/JbzPy3vPhuHiSmU5znJLNx5MAbks+vfjVM0SmPbrn+QHyH/dD+Kvhkmfoa1MOZmTrw0faPGwEhlIRyvN+rcjJeTi9JmibXOjQLOhUR8xRD0Q1qjmBCONF5ERyRTz1MUD+iow/UXzw/5J/xJfHen8fkk/ZI15Svyx/cReYIF3cRhXR9/tOLzieXJG8xyuPvZB2XXFkKxH+91cA2LPSIeEoeWRCZv8r1ja0nPyTOYoY5vl2sCvJ5/kNjwICYdcgcC6Jn498Z+M75Z+EjyQ8sMemmXRKjP78pFwPqrWJAGCR+rEiVq+B5aF5xxucQtX8p/WbmSv8++HyO/8jnN+poTsaXZ1Qeus7/Vq4513aBiOzCzhXLWyUnV1Pi3LefhvQHwN/mNN3s0k2pK4AO/5jTTTKnxWb9kcBPkbz/Jv5d8pTTr9/D+38B</con:value></con:property><con:property><con:name>SAMLBAU1_5</con:name><con:value>nVdbk6q6En73V1juR8sBBEGsmakKAoqK9ysvpyAERLlJQNBff4IzOpc1a521z5Om0+n++kLnyzM2A7/ZARijJPWisKrJL7X/tFi23TQZq2GyjtPgaGQ1REfgG2KzZVucxUIOtmpVDeMMaSFOzTB9qTVphm3QQoNmlkyzQ9MdpvXE8YJRq65RgolpovJE16pF4Ie4c3P7UsuSsBOZ2MOd0AwQ7qSwswD6qEM0O+YdU+31+Q3lzWHyuk/TuENR8MlGEPk+fIJRQD1TX3SebdxZeG5oplmC3n3a+KX2fjbP86ecfYoSl2rSNE3RIkV0bOy5/9ReK/fDyNZCJ3pbd80wCj1o+t7VLEHpKN1HdhX4bpR46T74jWmGYujSdAMVsAEZLvynRn04uKH7S0tfQCbYbOC9ydyNzZGDEhRCVF3NtZfaP39Xwbezy8QMsRMlAf62/neQUHhGfhQju4Hvkd3R/b3FH9L1+oxgRwuhn2HvjMZlm8QmRLg6TZDjFSMPk+azcfVW/mqB7x2G4L8pyTP1GSeBTf2QGdlzEU7/n3p9rtWblbXpZ+hVUw22r09iSfVPcHRtFc6WVy2LNqb0yw3CZ+U3UI9Sv6+/N+qjr94PKRZaj6TNwnDOdazmS36WWcpM7amUxsM92qYIwt6kT+m9USFtVuJ8zrZSlF57uMVfmqcomM8Pus0FrdYirbQsxR9T9MQcn5160goVYR5YYHhdxUzGXI/elRvzgDf5C72ZhzIb7phi7XA6dUIqr6Qjf4H5dni6RlMhCSt1oX/tG9ywrSUbbbraJfbu5SOmzzGUcQ3R5RZk+X/bokXZTM3HoltOCod8nil61TWtW5e7XYC6Lsg1CbiaNLqCseQeT/uj1xNzWgKzlQpkcNHnIJfdnbyezYZKbq/XvrHWVFXS51zeBzu5QjZkpVjLxnZAmxsj3jVV2lhIkr2dRxY7iO3+Me/v4Vhf6vl4qV30g1KMlwq9ucncgqyv+kFnJssVW9kcJFGfK7mc3zzKSr4fG5t5vFuJObwqMx1wPcCslO5e7y+DNQPZ+R4elJEOjje5tNe767VeKEswrUjueE1iW3ZVI4aBHVuBv/9kvE+ML+3e+mL1/My4Kge9q/S6i1NvoVmsPFMGYL5bWZv10dyo5wrsj4F19+i1PHMb5a7RzuXZbjCMDG1/hmMwUyRpBki6aKBrvQGIehLQOeAV1+5B4qOurebUoIkrddHv8duLd9pis0f7JtNuM7vRhp+eeFkJ68Ywsw57fb9VJ/Xhwj6vxFS87vC5fuZNj4FF7My2Sj8dFk5/tqhYU7nYwn7ddgeUfxXVRBcGILle9r7uztMNP8EXy3OcjbSdcL7g+Do7jx3fiS+4voxmx4TmJcQ2qd3lPEwrwNUlAHqH1UGa6VK7TKqt5bOdLplAVdIMXA/NdNhcnwb9sw93LIiK4WZyOL4XxpZzRaLymULaSqm0ZWCXRegvVop6ACvJdRPJVVRpBmUw22nDfEfyteoT5e95VG95dBUJKKwBeLFfYVe0mE7SBceBSyitQlXc66diY/MBLZyQMlqMYy7X8dgJjU101AMvWSXZYjUcjkeFtcx6xwOZVQ69GJ5Zo6KcjzHwxsPl/ihHsjmNd7s0rocwgakWB7pWXCcGPrQ9K6AH9RYjTWkZCs1VYOWrnqkYw8RdMMP+PJyygljBmXPpB/VDO9/Ulws+Fuxu6MiXC2UkazoCkSrOWye7aDaP+1U+4nNnAI6W2RwXvihdRGVoLGE+nw03i6DeqrTOo1FAX5cUN44n+aKXc8psVmdtadlf4jjxdlnbLZJJaDd3ZsqfDXrNe7F/FJvZccnF7NoNSLGmZzsW9Gllxm2hEbhCDAfUnDoDRXBGWu9iXc1rHEzg2wD9Ph0ewrf5QX2eLF9Gz510LEi3Ipjel+UFpMlVldwKZvpnAlNKPLvh3FQ7ccmCcIrCtPZanirJSycjFMezO+TKeFsrtNCURa7b5GmBA3JXoTmaUWlAt0SRFdnmneW8ofgGsRuFjlf6Knnc2y31Z4Aw6GAU2ihpnKOM3AW49geLZb6qWjgn128UYrSMCE9UBcBITYHpAr4rcHSXU8hCaXdpRhQEWhBq1XGUTsJJApwUJV85YusLR5wj6MUeKolkeZticp3ilKTkZJ6z1GeezuZTiDJCNZOS7XWaXLtFYS+IfVQCpoLIznz0FO/jW4Io/PbbbJgQ36QwihKIbxf9byP8vndPBtGxvVIBl+FIiBQU/cB36Xssv8TM/ciL7+ZBZnvlfU4ymyYefEPydeujYcpOeXRLGZTdgfiO+6H+XfDFNPU9qoc3++zBR98/ngSEURLO8Xovy8l8Oj1l53N2K4RQ8qmEmKcYiuapBYIZIUWXZXREIfUwQf0VH32g/ub5If+KL0v34SIl33RA2qZ6W/7FY2SBcPkY0UjbF3/70vnikuQtRUX6k6zrkzdLifiPzxrYgaUeEU/JT05K+FGuH2x98kPiLIeYF7rlqmSflz91hkcGWZR8Nv6TgZ+cfxU+kvzAkpJusrIU/X6nWk6ol5oJYZSFqSbXboLPU/OGM73EqPOh9IuZG/97J/QF/i2h3+qjBZlfgVl76Hr/W7nh3doFInIKezcsL7WCvE2J89D9NKXfAf4yqGlBpQWFFgEZfPdBLZBBLQkfvfwlktdfxL9KPuX0+/fw+l8=</con:value></con:property><con:property><con:name>SAMLBAU2_1</con:name><con:value>nVZbU+o6FH73V3S6H53SFlqxHWGm3Nz1CoLXlzMhXUC0TUuSIu5ff5JiERA97jPjDGZ15VvfuuRLTjhK4qofcA5MkJRqYaeh/wNO3XWxGxmuV8eGM0YTA9XkfxDVXS8CD5BV07WQ8xxCygWioqFXLdsxLNew3ZHl+Y7j16qVY8d+0rU7YFxCS5eKpWvLJKbcL8I29JxRP0WccJ+iBLgvsD8MLi986emjkpPePFmxLAKy5kyIzDdNXIkAQxzjCk4T88Tc8jmJuD8kU4pEzuA9ZsQb+vve19fXymutkrKpWbUsy7Q8U/pEnEx/6c2DcjNEIZ2kq3Ub0ZQSjGLyBylSlyBmaaQF8TRlRMySL6Bt07YUtAFLbGDbob908yNAwe6HSFskGUcGnyG7BLuBCTCgGLTbm7Ch//pZB1d7RwxRPklZwnfWf0cJ6ALiNIPI4GVmJbufI+4pV/MEsB9SHOecLOBKjUmGMHCtz2BClheEy+GLuFa0X1ty+UfKKQP8N205MTe5Surmnup0yBS4+D892+zXCuUOxTk0s3s+vQX36vB41IF672kyd5zZ4WxM7NtGQWHTeUVq3e739e6wrmfrfdNz79yzLsX0cZAfeffBsptc4tFFv1szz7zX37dR9HRuHaLxw1Xt9GHwRs5aSdRvP/bPB78h6ADN+ul42OJ32YCd5gd9x32Kujm6f6qOgsckvBX4oheRxUswPazbwZhlIy+3W8Pre5het146+DTm0UP+WHMe27Xp89lL2OGkdXuHWwE9eAYWDswBO+uHf4aLy8H8atD4yGkzh21jKQnDfPwMWJRLNR5hR+vJfiHxvbwoC4mMSeHqZ0qjuAAq9KbapaTFz6UAkciXzVyte95R1/I8y6t120d2t9a1HMvuWYFV9zw38NqlBq1Y7FBsp3RCVCylsqv5+Z4gTnwONAJmLNIcz4Dr3yB2kEBaSG/k4Ugph1EqVdyePdtvrBovKT+e205mU2Y9W9kcp7p2lYpres2CiQC2pd12dUu7bwCTjIASeDXhXI44F7IYc7TIRWxXFqhCIZdXAFMq7FedY9fkJMliUFTNJI3yGCrZLCtKY/LVb9VAmBdWwnGWMoFiuziAX+a3+60shfSJiHLgKqUWyHbCnruoWubzKW93751Vwgd5RNQ5k3UVjOAVk+1PH+Oi5mQ9Kx+JlczXG/4SAPM9EOY3/Mzd0qwjRguyEb+8X+WVIQWlWfZ3jirzSr5Y5EVH60osmYQ3pWba5hBwLhXvbZS+ADXXEOaPLpw1653Ia/s2v1zM6FAgAYmcP61Y/uC1MQSuXhuhPDnLnz5ltkLKuglYin22diwfJYrxt+8W7GPlJ819+fOasuijXXuwNuLIPOUTQxA6VSt1tbx9MR04lbBEamHKNsH3AewLvm1cF3nNRchpGucCvv6iKZFr6AjjNKci7OiFYVN4C57iLQP/w+kTTCHu77f1kn95Wz9cXgylBCZIX/uS/3Y2SDEuGHT1KCi4NPSlfHzK4HS6IfTvBLe13rU6Veuo51RbvXrP2dL6oyNvXcCtTJqfzJ8tGzXdPQ/NfwE=</con:value></con:property><con:property><con:name>SAMLBAU2_2</con:name><con:value>nVZdb+I6EH3fXxGlj1VIHMJXVJAoUJXSr4Vu725fKtcewCVxIHZC2l9/7dCkQGlv90pIyJPxzJmZ42OfCBwGrt8VAmLJIm4M+23zkQJG0Ki5FqqSpuWh2pPVBM+1XDz18BS8KtCaaQyFSGDIhcRctk3XQZ7l1CxUu3Navuf5nlNxPPfBNO4hFiq0cqk4ppGFARd+nrZtJjH3IyyY8DkOQfiS+JPu1aWvPH1cYDI7JxuUecK4M5dy6ds2qVAgEASkQqLQPrF3fE6o8CdsxrFMYnjLSUXbfNu7Xq8r62olime26ziO7bRs5UMFmx2ZnR/FZqBDPo026x7mEWcEB+wVa1BXIOcRNbrBLIqZnIefhEY2cnRoCzJiEeTxI9N+T5Cj+2akHZCxwJaYY1QEG8MUYuAEjF/jYds8+t4EN3vvYszFNIpDsbf+O0jAUwiiJVBLFJUV6L4f8UC7OidA/CEnQSJYCteaJktMQBi3MUxZdsmEIh8VRj5+IxPqxwqWAfmbsZzY21gVdPtAd/psBkL+n5ltz2sT5R4HCXSy61prhNd/Xs8bye2Tc2pTuhytkrM/x047h7DtvAFVjvttvU/Wkltvm1Jn1XLraJz+Or6K038Sdp5dDoeLbop6wk2jFblA3sPNDZ15PwP7oR6krUX3qSkHo+ZguuCXP48HWQ890UV1kp3/OE5cPFrdPo+v6fxCZvgXvaNhhoLZ/VQun6eUX9weH5Pfz83VnwcxF/PZ7wsQeHSzun4gbkRX9BQvRPjCw/ta9OPU7o+vZ3XiNdhwJOtXaDRov9e0XcOusZCESfL0DEQWS02PYd84U/PC8mt50RZGrWnu6i+1RgkJXJodvUtLi58oAWLUV8PcrM9a9YFzeoaqzV6jWmtVB47noDOn6zRarUb1rF5o0AbFHsRexKdM59Iqu+HP1wBJ6AvgFGIrjRIyB2F+EbGPJTaGfKwOR8QF3EVKxWcxOLELL9X4tYWi+BlJtH5dvLKVaVxH8obfxN2phHhHupG7I91jIGzJQOu7JrhQDBdS9WKF00QGqJLiCodE3QCxFmHf9Zo1W7BwGYBGaocRTQKoLOfLvDO22Py7FiYit44Hd4+9ySPKT9+nxe1/K/qgfCjTDkIXdApqlnDgIqoW1XyounbwwirCdxPK9CFTTZUxIxsku5/euaJJUhKlKKvAXbrvG3ZC2/tVldloykhJ+fKuVlKvhKBTDGaFK6tKkqZJPoqGFrlYhbeV1iF7AiRRSvVyFy2A22UI+1sXRYl6L3Np38WXyDmfSCwhVMQx8uU3XgkTEPqVMFSMz777BNlJqfomIZOHbL1APSY04i/fG8Qn2k+Zb9XfOorp+7gOxNrKo+pUTwPJ+Eyv9JXw8gkzSKTCMqVhUbwd/FCAQ8l3jWWTSyxSsekpkfD5F0OLU9vEhEQJl8O+mRu2BTPHKV+W4L87fQiTi/LbLZuJT2/Z31eXEyVdITZLX/bfzhbL6ULA1Jd5jqVtZurRqJLz2ZZAvwHc12hU9/po0Gv06567p9HNsoE7lXQ+mD9atnq6fx46/wI=</con:value></con:property><con:property><con:name>SAMLBAU2_3</con:name><con:value>nVZdb+I6EH3fXxFlH6uQhISvqCBRPra5pd1uod1uXyrjDMRLYtPYIen++muHJgVKe7tXQkKejGfOzBwf+5SjOKp7fc4hEYRRzR929ceO02gHdbww5ou6bbjNuWugOUZGE6F2u94Ap21jXfM5T8GnXCAqunrdsl3Dahh2Y2Z1PNf13Gat4zYedO0OEi5DS5eapWt5HFHuFWm7eppQjyFOuEdRDNwT2Jv2Lyee9PRQiUnvnW5RFgmTXijE2jNNXAsAQxThGmaxeWru+ZwG3JuSJUUiTeAlZ8C7+sveLMtqmVNjydKsW5ZlWh1T+gScLL/qvS/lZgh8umDb9QBRRglGEfmDFKhLECELtH60ZAkRYfxOaNu0LRXagBwb2HbpV918TVCg+2SkPZAJRwYPkV0Gu4EFJEAxaLc3flf/+rkJbvfOEkT5giUxP1j/HSSgG4jYGgKDl5WV6D4f8Ui7eqeAPZ/iKOVkA1eKJmuEgWvXCSxIPiFcki/gWjF+LefyR0qWAf6bsZyau1gldPNId4ZkCVz8n5ntzmsb5Q5FKfTWT/EPat39jN3Vs8+aWWfsjFd+4oQLv1tA2HXegqrG/bI+JGvFrZdN2Bfp+U3jqT66nV1YTfehHfatbHI5Gd1FlxfBt5N4nrMMJ+mt7/QbQzu7C9vzc3K9/E352j4ZTW5GtycXfjtYfZt/ebjPrfbZGN/OZjwbhnSZ2OZPc/P8i03SK/dXcjJbXfvm7D48ucvn4JyfjaLb8+HEPntabe4H07we/IDoQrDOPxPzy0UI8fB8+Wtq5Sbt8G9s+aP7WtNuDfvGUhKm6fw3YFEuFT38oTaW80LiY3lRFhIYi8LVWyuN4gKo0Htql5IWL5UCRAJPDnO7HneaI+tsbDvtQctpdJyR5Vr22OpbrU6n5YybpQZtURxAHDC6ICqXUtktfz4GiGOPAw0gMTYsxSFw/YOIQySQ5tMbeTgY5TBjUsXtLOukzxvaWSD+xyatle38FihruVTXrpj4Tr8n/YWAZE+77fqedt8AJmsCSuAVw7mkOBeyGU9ok4rIrm1QjUIqr4BEqbBXd9sNk5N4HYGCasYsSCOorcN10RqTb//rBsK8sA4n/en142D6aBcH8N36Dr+VrZA+AVEOXJV0BnKccOQucsp63tTdOHpnleH7aUDUOZN9FQnBWyT7n17ponhSceW1sBJ5teHQsBfcPKyryhdsCK54X13YUu+lGvTK4Tyh2lMt3WzSYhwtpXSJDG9KwbPNKeBUytXzjK2AmlUI81O3RYX6IHNl38eXipBOBRIQS/JoxfITT4UpcPVU8CXt88++Q/ZSyr4JyMUx2yCSLwqF+MNHB/aw8pPma/mXsSR4HdeRWDt5ZJ3yfSAIXaqVuhee3+EGZjIskULGkt3gxwIcS75vrJpcYRGSTfNUwPtfNKVQXR1hzFIq/KFeGHZVs8ApntfgvTq9CVMo88tVm/N3r9r7y8lU6leM9MqX/LezQQq6YNDVjV5g6eq5fDnK5HS5o9IvAA+F2m66Q3s0aA2bbv1AqNtVA/cq6b0xv7Xs9PTwPPT+BQ==</con:value></con:property><con:property><con:name>SAMLBAU2_4</con:name><con:value>nVfZcuq6En3nKyjOI0U8MphKUiVjGwyY0Ywvt4wsD+AJyxN8/ZVJYCfZ2fvm3BeM2q3u1YNbS8/Y8D22CzBGceKGQVWVXmr/ofmDYDXZQ6PDtbkG32T5hiB0YKPTZAyhw5o0Mg+1qopxitQAJ0aQvNRYmuEadLtBMzrDdJtCl6WfWnxzX6uuUYyJaaLyRNeqhe8FuHtz+1JL46AbGtjF3cDwEe4msLsE2rhLNLvGHVPt9fkN5c1h/OokSdSlKPhkIog8Dz7B0KeeqU86zybuLl07MJI0Ru8+TfxSe9+b5/lTzj2FsU2xNE1TtEARHRO79j+118p9MzLVwArf1j0jCAMXGp57NUpQGkqc0KwCzw5jN3H8P5hmKIYuTTdQARuQ4YN/atQvBzd0P7T0CWSMjQZ2DOZubIEsFKMAoupqob7U/vlZBd/26rERYCuMffxl/e8goSBDXhghs4Hvkd3R/dziN+l6fUawqwbQS7GboUnZJpEBEa7OYmS5xdjFpPlMXL2Vv1rge4ch+G9K8kx9xElgU99kRnJthJP/p14fa/VmZW14KXrVTUDPzse9ySuDAmXHJBRHtiTo6g6+3CB8VH4D9Sj1+/proz766n1TMO80zXw7YC1j2pudhasKVvRsKVy0xcnHsz3rt4VBmu29c11Hrb6KzrE3G3rZ4tjhqOE4XbFNtaAzqjPKnEp6nu2aVhsKZ+YQQtMcUON5b7V0cmFMr/oFpQ22Kl6xR546dOyxc1zMTP/UX2IO9eiWpTvKpL7VAmY1jDZqZXpJMLCKws2LA3Klvt45vfyK6WMMZVwjdLkFWf7fNmlBMhLjseiVk8Iin2eCXjVV7dWlXg+gng1yVQS2Ko6vYCLap7NzcvtCTotgvlKABEgOQC7ZO2k9n4/k3Fyvvf1aVRRRW/D5AOykCnkhycVa2m+HtLHZRztWofdLUTS3i/DADSNzcMoHDpxoupZPdPWiHeViosv05iazC7K+akeNmeorrrI5ioK2kHMpv3mU5NyZ7DeLaLcScniV5xrg+4BZyT1HG+j+moHcwoFHeayB000uOlpvvdYKWQezimhP1iQ2vafsI+ib0cH3nA/GB8S4bvbXl0PfS/dX+aj15H5vee4v1QMnzeUhWOxWh836ZGyUrAIHE3C4e3SbrrENc3vfyaX5bjgK96qTwQmYy6I4ByRdNNDU/hCEfRFoPHCLa+8otsKeqeTUkMWVuuD1W9uLe95io097BtPpMLvxpjU7tyQ5qO9H6eHoaM5WmdZHSzNbCYlw3eGsnrUMl4FFZM238iAZFdZgvqwcZlKxhYO6aQ8p7yoosdYegvh6cTzNXiSb1hRfDq5lbcTtlPfalqdxi8jyrOiC63o4P8V0S0QcS+0u2SipAFsTAegfV0dxromdMqmmms93mmgARU5ScD2yyYhdn4eDzIM7DoTFaDM9nt4LY0q5LFL5XCZtJVc6EjDLIgyWK1k5gpVo27Foy4o4hxKY79RRviP5Wg2I8tc8Krc82rIIZG4PWsKgwq1oIZkmS54Hl0BcBYrgaOdiY7Z8un1G8ng5ifhcwxMr2G/Ck+a78SpOl6vRaDIuDnraPx3JrLLo5Sjj9hU5O0XAnYx05ySFkjGLdrskqgcwhoka+ZpaXKd7fOy4B58e1puMOKMl2GZX/iFf9Q15P4rtJTMaLIIZ1xYqOLUuA79+7OSbur5sRW2zF1jS5ULt4zUdglARFs2zWbDsyVnl41ZuDcHpYLCTwhPEiyCP9jrMF/PRZunXm5VmNh779FWn+Ek0zZf9nJfn8zpnivpAx1Hs7tKOXcTTwGR3RtLK9vS65UbeSWDTk85H3Nr2SbFmmRm1tVllzm/h3rfbERxSCyoDctsaq/3L4WpcI3/6PkC/ToeH8G1+UB8ny6fRcycdS9KtCCb3ZXkAqVJVIaeCkfydwJQS12xYN9VuVLIgnKAgqb2Wu0ry0k0JxXHNLjky3tYy3WYlge+xLQnwQOrJNE8zCg3opiBwAsfeWc4bii8Qe2FguaWvkse9nVJ/Bwj9LkaBieJGFqbQQbj2F4tlvqpqsCDHbxhgpIeEJwotkQGgqXCC3BF6BDNQOm1F5jggtJWWxNWqkzCZBtMYWAmKP3NE/hNHXCDoRi4qiWR5mmJynOKEpORsZGniMU+Z8RSglFDNuGR7XZbvNCns+pGHSsCUH5qph54iJ7oliMJvT7ZhQHyTltmF+HbQ/zHCr+/uySA6plsq4DIcEZGCom/4LnOP5beY+W958d08SE23PM9JZpPYhW9IPr/61TBlpzy65fYD8R32Q/ur4JNl6mtQD2dm5sJH2z9uBIRQEsrxeq/K2Xg6P6VZlt7q0C7pVEzMUwxFt6glginhRBc9PKGAepigfkRHH6i/eH7IP+NLEydYJuST9knXVG/LH9xFlgiXdxGVdH3x04vOJ5ckbwkqku9kPY9cWUrEf73VwC4s9Yh4Rh55GJu/yvWNrQ9+SJzlDHMDu1yV5PPyh8aAITHrkjkWxh+Nf2fgO+efhY8kP7AkpJsOaYL+/KZaDqiXmgFhmAaJKtVugo9D84YzuUSo+0vpNzM3+vfO5wv8Rz6/1cZLMr58o/bQdf+3csO9tQtEZBd2b1heagW5mhLngf1hSL8D/G1O022FbkuKAHr8Y063yZwW281HAj9F8vqb+HfJh5x+/R5e/ws=</con:value></con:property><con:property><con:name>SAMLBAU2_5</con:name><con:value>nVdZc6rKFn73V1ieR8swOCBWkqpmUlQ0Kk683IKmBZRJGgT99bfR6E6ys/fNuU/aq1ev9a2B1V8/YzPw2R7AGCWpF4VVVXqp/YeHNtPt0kyjzZp8owU5q2FZJtugmzRCzTYyEQNrVRXjDKkhTs0wfamxNNNs0FyDZnSG7dF0r919avMdo1ZdoQQT00Tlia5Vi8APce/q9qWWJWEvMrGHe6EZINxLYW8BtHGPaPbMO6ba6/MN5dVh8uqmadyjKPhkI4h8Hz7BKKCeqU86zzbuLTwnNNMsQe8+bfxSez+b5/lT3nyKEodiaZqmaJ4iOjb2nH9qr5X7YWSr4S66rUUzjEIPmr53MUtQGkrdyK4C34kSL3WDP5hmKIYuTTdQARuQaYX/1KhfDq7ofmjpE8gEmw3smszd2BztUIJCiKrLufpS++dnFbyd1RMzxLsoCfCX9b+DhMIT8qMY2Q18j+yO7ucWv0nX6zOCPTWEfoa9E5qUbRKbEOHqW4J2XjH2MGk+G1ev5a8W+N5hCP6bkjxTH3ES2NQ3mZE8B+H0/6nXx1rdrKxMP0OvOr03tNW8Loi5ExxoRqWdfH6s74Lt4eUK4aPyDdSj1O/rr4366Kv3Q5M8P3onrw/CjbRZG4ykBB7njQQ5Y62maB3BZO3FG9oIZsYRsBuO9QXkuvqIseEwoNnCj5ZxZo3jbjIFFaEeHUZDfcAvnWJrLbfcwhPAAQyn63S3AYi6cIPhGB/qb5I5LGYXN19S8bQecK32ZbZenqmtf16zbUUeegO10u8f5JaU49XaMmxZtZRIfvkV08cYyrhG6HwNsvy/adO8ZKbmYyGWk2JHPs8UvWqqKtYlUQRIdECuCsBRhfEFTATncHQPXp/PaQHMlgqQwFmbg1xyttJqNhvJub1a+cZKVRRBm7fyAdhKFbIhycVKMjZD2lwb8ZZVaGMhCPZmHlnNYWwPDvnAhRNN1/KJrp61vVxMdJleX2VOQdYXba8xU33ZrKz3Aq/N5VzKrx4lOXcnxnoeb5d8Di/yTAOtPmCWsuhqAz1YMbA5d+FeHmvgcJULriauVloh6+CtIjiTFYlNFxUjhoEdW4HvfjA+IMZ1u786W30/My7yXhPlvrg49heq1ZRm8hDMt0trvTqYa+VUgYMJsO4evbZnbqLcMbq5NNsOR5Ghuic4ATNZEGaApIsGmtofgqgvAK0FvOIi7oVOJNpKTg1ZXKnzfr+zOXvHDTb7tG+SQcRsx+vO27EjyWHdGGXW3tXcjTKtjxb2acmn/GWLT/VTx/QYWMS72UYepKNiN5gtKtabVGzgoG47Q8q/8EqicUOQXM6urznzdN2Z4rPl7XZrYTNt+dzO15rzeOfv4jOu69HskNAdATVZans+jdIKcDQBgP5+uRdmmtAtk2qr+WyrCSZQ5DQDlz2bjtjVcTg4+XDbBFExWk/3h/fC2FIuC1Q+k0lbyZWuBOyyCIPFUlb2YCk4TiI4siLMoARmW3WUb0m+lgOi/DWPyjWPjiwAuWmADj+oNJc0n07TRasFzqGwDBXe1Y7F2u4ENHdE8ngxiVu5hie70FhHBy3wkmWSLZaj0WRcWHrWP+zJrNrRi9GpaVTk0yEG3mSkuwcpksy3eLtN43oIE5iqcaCpxWVq4H3XswJ6WG8zwhstQY5dBla+7JuyMUqcBTMazMO3JsdXcLY7D4L6vpuv6/qiE3O2GO6k85kykhUdgUjh5+2jXbDswV3m406+G4IDuWkmhc8LZ14eGTrM57PRehHU25X2aTwO6ItOtSbxNF/085Y8m9WbtqAPdBwn3jbrOkUyDW12a6adk0GvOl7sH3g2O+ituLlyAlKst5Mdc9pbZdbaQCNwuBgOqTl1AjK3G6v9s3UxL3EwhbcB+nU6PIS3+UF9nCyfRs+ddCxItyKY3pflBaRKVYXcCmb6dwJTSjy7sbuq9uKSBeEUhWnttTxVkpdeRiiOZ/fIlXFbyzTHSnxLZDuS0AKSKNMtmlFoQLd5vsk32TvLuaH4AlGMwp1X+ip53O2W+jtAGPQwCm2UNE5RBl2Ea3+xWOarqoZzcv1GIUZ6RHgix4hctytwnSbDykpTYjuixAMRdBROUdqdVq06idJpOE3ALkXJZ47Y/sQR5wh6sYdKIlnepphcpzglKTmapyz1maeT+RSijFDNpGR7PbbVbVPYC2IflYCpILIzHz3FbnxNEIVvv2zDhPgqhVGUQHy96P8Y4de9ezKIju2VCrgMR0CkoOgbvtu6x/JbzK1vefHdPMhsr7zPSWbTxIM3JJ+3fjVM2SmPbimDsnsQ33E/1L8KPpmmvkb18GafPPjo+8eTgDBKwjle72U5mk/Hp+x0yq6F4Eo+lRDzFEPRHWqBYEZI0VmPDiikHiaoH/HRB+ovnh/yz/iy1A0XKfmmA9I21evyB4+RBcLlY0QlbV/89KXzySXJW4qK9DuZ6JM3S4n4r88a2IOlHhG/kZ+clPBXub6x9cEPibMcYl7olKuSfZ7/1hkeGWRR8tH4dwa+c/5Z+EjyA0tKusnKUvTnnWo5oV5qJoRRFqaqVLsKPk7NK870HKPeL6XfzFz53zuhL/AfCf1GGy/I/ArM2kPX+9/KDe/aLhCRU9i7YnmpFeRtSpyHzocp/Q7wt0FNcwrNyTSZeK3HoObIoBa49iOBnyJ5/U38u+RDTr9+D6//BQ==</con:value></con:property><con:property><con:name>SAMLFAU1_1</con:name><con:value>nVbbcuI4EP0VyvNsfMHm4gpUESAz7BJIQpJN5mVLI7dBG1tyJNmYfP1KBhwgJMvsk0vt1unTFx3pQqAkdoO+EMAlYbRWJDEVQWntGhmnAUOCiICiBEQgcTDvX08Ct24HaLfFqI2HXePvNnYiz2u0zSayPdNrImS2Qw+ZuG23Ww5uAWo2lasQGYypkIjKruHajm/aTdPx7+124DhBo1V3mt5Po/YIXChs5VK3jS2pQnSNpZRpYFmr1aq+atQZX1iubTvW0/VkjpeQIKN3scmoDMR7W39cDwFDHOM6Zol1YR34XIQimJMFRTLjsI0VfhbLtuyOpXxCQRbfjGovhGMasXI5QJRRglFM3pCuzzXIJQtr/XjBOJHL5NMkHFsDm1BgEzse/WZYh9TOBDpgyAUyxRI5W6w7iIADxVB7uBt3jW/nda3ces8RFRHjiThc/h4foDnELIXQFLu0ttTOBzxRqd4F4GBMcZwJksNUD2uKMIhtNwGfD1W74RCRYkKEGtBCaHbWPr2j5aYaQ7IAIf9Pg/aaswF5RHEGve+jvy4jj/O36870xaV9Ns9vv/vNOG8+d0sC+86loWrtZnk0lNUQbXY8tJ+eB9f9h+JxkPBimAxWP94Gq/wNmuzpNpxd2TOUCosLiKd264fXwjCfRxH3ixu3ky3cn37iTZ+eb5p+hMMXb3D/bN+yW/E68p21Nxy9+iv+8gf/k/Gh/CmmnZsH+SieW7Pm4G20mE6If8nQVSNqLCb+1eh+3HFpy15fzp4ahKVTPLl2ZD5hk2k0Gw3SfrdKZ4//oW135ufZr38Ay91Sj8F4WLtSXULyazHTFhKaUekapFp8hAQqjZ7epbUjyJTckTBQPdysnXa7P3Iuvabrdhp2xxvZfqMx7HScK7vf6nvOTmQ2LI4oDhiNiI6lJXczNl8TxEkggIbAzZxlSumE8QXiEElUG9M7dQgYFXDPlDwvOyLmfr5ICx9c3lpHjBTFGv8yalMmZ3TG+5EEfiDJSo/3JfkOMEkJaN3WYy3UXAupSvGK8kzGTj1HdQqZUnauRTZwvbZvCZKkMWiiVsLCLIZ6ukzLwlhi83VNhEVpJQKnjEsUl+fB+jS743+7QiifkGgHoVO6BNVMOHHFuLt8PuTdPHkV7eD7WUj08VJVlZzgDZPDX+/DoqekmpT3xHbMqw2/CYDFCQjrC37WcWmqiGFO9uLv7nJ1Kygd6e36+4qc+ms9y/OsbKm6KCyu4C1dVMt2rTngTCnd+p69ALUqFOusa6UifhS8sh9SzOSSziWSkKgRrJXLM94RcxD6HTFWR6c495FyEFKVTkIhT9kGsXoDacZfPpNwgLWfMt+oz4rx8L1jJ7D24qg81TNCErrQK32lrD8ZEMwULFFiyPg++CmAU8EPjVWRKy5SDdSvTMLnf2pa5boGwphlVI6HRmnYV96Sp1ynELw7fYApxb167ZH/fu6ZpBwBDOqNKEiJry/tQB8ButhT723QTwS8/ZWAH7LrfTB/tOzV6XjGe/8C</con:value></con:property><con:property><con:name>SAMLFAU1_2</con:name><con:value>nVbbcuI4EP0VynlMGV9wMtgVqOKWjXPfwCSZfZkSchs02JIjyYbk60cywYMJybL75FK7dfr0RUc6EyhN3KAnBHBJGG2s0oSKoLR2jJzTgCFBREBRCiKQOBj3bq4Dt2kHaLPFaITDjvGzdYr96dTFpt06mZqeEyETxW0w8YnvRk4c275vK1chcgipkIjKjuHazolpn5rOycRuB44btOzmN9f9x2g8AhcKW7k01a41qZXoGHMps8Cylstlc9lqMj6zXNt2rOeb6zGeQ4qM7tk6ozIQ777742YEGJIENzFLrTOr5nMWiWBMZhTJnMN7rOizWLZl+5byiQSZHRnVXohCGrNyOUCUUYJRQt6Qrs8NyDmLGr1kxjiR8/TTJBxbA5uwwiZ2PHpkWHVqBwLVGHKBTDFHzjvWA8TAgWJofH8IO8bRYV0rt044oiJmPBX15X/jA7SAhGUQmWKT1ju1wwH3VKp7BjgIKU5yQQq41cOaIQzivZuAD4dq3HOIyeqaCDWgK6HZWdv0dpbragzJDIT8Pw3aas4a5BElOXTf2u5ba/WWtdAgvKf3x8fjyY92fBmOFjedksC2c2moWrte7gxlNUTrHaOkuL94Fl5Iz9OkH4Uw71+xy/7d5Hb21+XNj+G895RZyePT23f3qUjSpIjzCfa8GeUvLS9aXsCzyzkaDSZ3T+Ihbd1fo+v4FxzTm4I8j+6i+ePC+ZF5pEf4+XxFFtPxwHInV3OfTC7Dvxf2qT8qaP/4MclHLCwSmg0F+JOXhPWS5GrsDbILNrM9ueTFJetU6Wzxr9s2Z36cT38BlpulHoNw2DhXXULyazHTFhKZcekaZFp8hAQqja7epbUjyJXckShQPVyvnXa7N3L63qk77Lds3xvZJ63W0Pedc7v3rec5G5FZs9ihOGA0JjqWltz12HxNEKeBABoBNwuWK6UTxheIQyRRI6QP6hAwKmDClDw7S2LzBSx9D52uPHhlkP3KY3e6MBq3TN7RO96LJfCaJjtOTZMfAJOMgBZuPddCDbaQqhYvqMhl4jQL1KSQK2nnWmUD12ufWIKkWQKaqZWyKE+gmc2zsjKWWH9dE2FRWh9Gk5+D8c/yOFifJrf7b1MH5RMR7SB0Qn1QvYQ9N4y7yeZD1qd7b6INfC+PiD5dqqiSE7xmUv/1Z1b0kFSDsklrw7ty3zXUoK3drKpoUUFwNfLVxa30XClAd9OYF+Q0X5p5UeRlLzyvZXEFb+l6WLZrjQHnSqNeJ2wB1KpQrIMuhIr4TvDKXqeYyzkdSyQhVbPTKJcHvADGIPQLIFRDvzr0eVELqUonYSX32QaJer1oxl8+cHCAtZ8y36vPkvHoT8f2YG3FUXmqB4AkdKZX+jJ4/WQ4MFOwRMkY49vg+wD2Ba8bqyJXXKQaqGku4fM/Da1PHQNhzHIqw6FRGrY1s+QpXzMI/jh9gClluXqnkX9/qJmkHAEM6nUnSImvr9tAHwE629Ld96CfSK//lfTW2XU/mD9atuq0O+Pd3w==</con:value></con:property><con:property><con:name>SAMLFAU1_3</con:name><con:value>nVbbcto6FP0Vxn3sGFvG3DyBGS5J6oaQBFNOk5eOkDegxpaIJQPp11cy4GBCcjjnBUbbW2uvfdGSLgSOI8frCAGJpJyVNnHEhJdZW0aaMI9jQYXHcAzCk8QLOrcDzynbHt5vMUp+v2X8wi623ardMN0KUj/IxuYU4ZmJnHrNJc2wBtWpchUiBZ8JiZlsGY6NqqZdM1F1bDc8VPEQKjs19GSUJpAIha1cyraxI7URLWMh5dKzrPV6XV5XyjyZW45tI+vn7SAgC4ix0b7YZpQFSto7f1IOgUAUkTLhsXVhFXwuQuEFdM6wTBPYxQo/imVbdtNSPqGg8y9GvhdCn814tuxhxhklOKJ/sK7PLcgFD0udaM4TKhfxh0kgWwObsCEmQS77YlhFamcCFRgmAptigdEOawQzSIARKP0Y+S3jy3ldy7aOE8zEjCexKC7/Gx9gK4j4EkJT7NPaUTsf8ESl2hdAPJ+RKBV0BUM9rEtMQOy6CeR8qNJ9AjO6GVChBnQjNDvrkN7RcluNPp2DkP+nQQfN2YJMcJRCGwbTRW3yu//1qZtUrtngYS1Hm64lfozWrYzAoXNmyFu7XR4NZT5E2x1DPuLh6qrrP0v/0k2vHgcViqfrbj+84S8sWH0f2KPnyuB+WI/hwfIrdz2/0ZiM4eby2h3MYE1fGt/r3x+Zc/9wPeyM/9wyi319av4Ybh67vVV98m1CwQmm69pqtBgOh3H16p+ez6xucvXyML18FPL6iac/axN30AuD+v2di+5YMF3cjPh1url7enQW31zWb457QrTydA74F237Mx+k099A5H6px8Dvl65Ul7D8XMy0hYbmLHP1llp8hAQmjbbepbXDS5Xc0dBTPdyuUaPRuURdt+b0uxW76V7a1Uql32yiK7tT77hoLzJbFkcUe5zNqI6lJXc7Np8TJLEngIWQmCueKqUTxieIfSxxyWcjdQg4EzDmSp5FtfkczuaVPxvURCgN49rr5rWZpHWjNOTyjt0lnZmEpKDJCBU0eQSELilo4dZzLdRgC6lq8YJXqYxQeYXLDFIl7YlWWc9xG1VL0HgZgWZqxTxMIygvF8usMpbY/jsmJiKz9ged4P5XL/iVHQjrw/SOv+0roXxCqh2ETqkLqptw4o6x9/m8y7t28i7aw3fSkOrzpcoqE0q2TIqf3qZFj0k+Km+J7ZnnG44NBXDrOK88XriiJB/7/PJWmq5UoL1vzgtG5ZdyulqlWT9ct2IlCt7SFbFsxwqApEqnXsf8GZiVo1hnXQo58aPgub1IMZULFkgsIVbzU8qWZ7wCAhD6FeCrwd+c+8QohFSlk7CRp2y9SL1gNONPHznEI9pPme/V35on4VvHTmAdxFF5qkeApGyuV/pCeP1gPAhXsFRJGU8OwU8BnApeNOZFzrlINVDTVMLHX0pao1oGJoSnTPp9IzMc6mbGU74uwXtzegeTSXP+VqP//lgzaTYCBNQLT9AMX1+5nj4CbH6gvbugH8hv8zP5LbJrvzO/txzU6XjG238B</con:value></con:property><con:property><con:name>SAMLFAU1_4</con:name><con:value>nVdpc6rMEv7ur7B8P1qGRRSxklQNAoqKK65fbuEwLMomw6a//g4mepKcnHPz3ipLnaan++mFnmeeseF7bBdgjOLEDYOqKr3U/tOCjNVi+VajQ1tMg+MssyGYdLtBc60m7FgML9DNWlXFOEVqgBMjSF5qLM00GzTfoBmdYbqtTpduPzGd1r5WXaMYE9NE5YmuVQvfC3D35vallsZBNzSwi7uB4SPcTWB3CbRxl2h2jTum2uvzG8qbw/jVSZKoS1HwyUQQeR58gqFPPVOfdJ5N3F26dmAkaYzefZr4pfa+N8/zp7z5FMY2xdI0TdECRXRM7Nr/1F4r983IVAMrfFv3jCAMXGh47tUoQWkocUKzCjw7jN3E8f9gmqEYujTdQAVsQIYL/qlRvxzc0P3Q0ieQMTYa2DGYu7EFslCMAoiqq4X6UvvnZxV826vHRoCtMPbxl/W/g4SCDHlhhMwGvkd2R/dzi9+k6/UZwa4aQC/FboYmZZtEBkS4OouR5RZjF5PmM3H1Vv5qge8dhuC/Kckz9REngU19kxnJtRFO/p96fazVm5W14aXodT5GZy698h0csUohMvLUVm1p4kwL9eUG4aPyG6hHqd/XXxv10Vfvm/y+dhi1pgm90yxEZwp29PWw7dZd/7Lh/X6+SHZLNRPRZBse6fGxXxQL5zDN1UFw5VpsIuoTQ2Bbg1Nn5UiVReCdde2ATzs7nmXwuLsiJIzqgTNOO2ndGGx2xxYzuwBuYkhNuLHChYrchFnVXbazXZpZno3r/omq63JnVVGu0zzfTXSxdRiLrcIhqX35FdPHGMq4RuhyC7L8v23RgmQkxmPRKyeFRV7PBL1qqtqrS70eQD0b5KoIbFUcX8FEtE9n5+T2hZwWwXylAAlctAXIJXsnrefzkZyb67W3X6uKImoLLh+AnVQhDyS5WEv77ZA2Nvtoxyr0fimK5nYRHprDyByc8oEDJ5qu5RNdvWhHuZjoMr25yeyCrK/aUWOm+qpZ2RxFQVvIuZTfPEpy7kz2m0W0Wwk5vMpzDXB9wKzknqMNdH/NwObCgUd5rIHTTS46Wm+91gpZB7OKaE/WJDa9p+wj6JvRwfecD8YHxLhu9teXQ99L91f5qPXkfm957i/VQ1Oay0Ow2K0Om/XJ2ChZBQ4m4HD36LZcYxvm9r6TS/PdcBTuVSeDEzCXRXEOSLpooKn9IQj7ItA44BbX3lFshz1Tyakhiyt1weu3txf3vMVGn/YMptNhduNNe3ZuS3JQ34/Sw9HRnK0yrY9IT6yERLjucFbP2obLwCKy5lt5kIwKazBfVg4zqdjCQd20h5R3FZRY44cgvl4cT7MXyaY9xZeDa1kbcTvlPN7ytOYisjwruuC6Hs5PMd0WUZOldpdslFSArYkA9I+rozjXxE6ZVFPN5ztNNIAiJym4HtlkxK7Pw0HmwV0ThMVoMz2e3gtjSrksUvlcJm0lVzoSMMsiDJYrWTmClWjbsWjLijiHEpjv1FG+I/laDYjy1zwqtzzasgjk5h60hUGluaKFZJosOQ5cAnEVKIKjnYuN2fZp/ozk8XIScbmGJ1aw34QnzXfjVZwuV6PRZFwc9LR/OpJZZdHLUdbcV+TsFAF3MtKdkxRKxiza7ZKoHsAYJmrka2pxne7xseMefHpYbzHijJYgz678Q77qG/J+FNtLZjRYBLMmL1Rwal0Gfv3YyTd1fdmOeLMXWNLlQu3jNR2CUBEWrbNZsOzJWeXjdm4NwelgsJPCE8SLII/2OswX89Fm6ddblVY2Hvv0Vae4STTNl/2ck+fzetMU9YGOo9jdpR27iKeBye6MpJ3t6XXbjbyTwKYnnYuaa9snxZplZsRrs8qc28K9b/MRHFILKgMyb43V/uVwNa6RP4VvA/TrdHgI3+YH9XGyfBo9d9KxJN2KYHJflgeQKlUVcioYyd8JTClxzYZ1U+1GJQvCCQqS2mu5qyQv3ZRQHNfskiPjbS3TPCvRvEI+ggB6nExzNKPQgOYFoSnyrTvLeUPxBWIvDCy39FXyuLdT6u8Aod/FKDBR3MjCFDoI1/5iscxXVQ0W5PgNA4z0kPBEuakIbV7gmqADWpwo8522xDI8x/V4pcN32Fp1EibTYBoDK0HxZ47IfeKICwTdyEUlkSxPU0yOU5yQlJyNLE085ikzngKUEqoZl2yvy3KdFoVdP/JQCZjyQzP10FPkRLcEUfjtl20YEN+kZXYhvh30f4zw67N7MoiO6ZYKuAxHRKSg6De+y3db91h+i5n7lhffzYPUdMvznGQ2iV34huTzo18NU3bKo1tuXxDfYT+0vwo+Waa+BvVwZmYufLT940ZACCWhHK/3qpyNp/NTmmXprQ58SadiYp5iKLpNLRFMCSe66OEJBdTDBPUjOvpA/cXzQ/4ZX5o4wTIhr7RPuqZ6W/7gLrJEuLyLqKTri59edD65JHlLUJF8J+t55MpSIv7rrQZ2YalHxDPyk4ex+atc39j64IfEWc4wN7DLVUk+L39oDBgSsy6ZY2H80fh3Br5z/ln4SPIDS0K66ZAm6M9PquWAeqkZEIZpkKhS7Sb4ODRvOJNLhLq/lH4zc6N/73y+wH/k81ttvCTjyzdqD133fys33Fu7QER2YfeG5aVWkKspcR7YH4b0O8Dv57Sk/G1Of47k9Tfx75IPOf36Prz+Fw==</con:value></con:property><con:property><con:name>SAMLFAU1_5</con:name><con:value>nVdbc6rKEn73V1iuR8sAgiJWkqpBUFFREby+7MJhQJSbDAj668+g0ZVkZeVk7yqrcJqe7q8v9HzzjE3fq7cBxihO3DAoK9JL5R+T3jZZnt3WTLOBahzkmJpQ52GtyZt1rg4h2+SZSlnBOEVKgBMzSF4qdZphazRfoxmDYdoNoc21nniB3lTKCxRjYpqoPNGVcu57AW5f3b5U0jhohyZ2cTswfYTbCWzrQB21iWbbvGOqvD7fUF4dxq+7JInaFAWfLASR58EnGPrUM/VB59nCbd11AjNJY/Tm08Ivlbe9WZY9ZexTGDtUnaZpihYoomNh1/lVeS3dNyNLCezwtu6YQRi40PTci1mAUlGyC60y8JwwdpOd/xfTDMXQhekaymENMlzwq0L9dnBF90NLH0DG2Kzhncncjc2QjWIUQFSez5SXyq+fVfC214jNANth7ONP638HCQUn5IURsmr4Htkd3c8tfpGu12cE20oAvRS7JzQu2iQyIcLlaYxsNx+5mDSfhcvX8pdzfO8wBP9NSZ6p9zgJbOqLzEiug3DyX+r1vlY3KwvTS9HroouB1WvO5HrfPagNGw0OzewyWnXO4OUK4b3yDdSj1G/rz4366Ku3TeNM2zmTnuQNs562rR74o+xPLiNeN6Zgk1FbiRKl9cSlE0TFZ411o8jEF3YfsQtztRn1hqqxx/KGXYX2vFHyevJMWmHOXTQvQlfmbZN35KpgrhvHVtczZ/ZBEY+syp8Noa/J7jpI8pYZeEdDGRP/l3OjXp3qKHdHK5ErUf18XqV2HaHbOBtzerHylJffMb2PoYhriM7XIIv/qwYtSGZiPhadYlLY5PNM0KuqKJ2q1OkA1HFApojAUcTRBYxF53DcHdyekNEi0OZdIIGzOgOZ5KylhaYN5cxaLLzNQul2RXXGZX2wlkrkhSTnC2mzGtDmchOt6116o4uitZqFW3YQWf1D1t/BsWqo2dhQzupezseGTC+vMicn64u6V5mJMWdLy70oqDM5k7KrR0nOduPNchat50IGL7KmAq4HmLnc2al9w18wkJ3t4F4eqeBwlYs7tbNYqLlsgGlJdMYLEpvR6W4i6FvR1vd274z3iXHD6i3O256Xbi7yXu3IvY5+7OnKlpU0eQBm6/l2uTiYy+6pBPtjsL17dBuuuQozZ9PKJG09GIYbZXeCY6DJoqgBki4aqEpvAMKeCFQOuPmlsxebYcfqZtSgjktVwes1V2f3uMJmj/ZMptVi1qNlc3psSnJQ3QzT7X6n7lbdSXWoW6e5kAiXNT5VT03TZWAe2dpK7ifD3O5remk7lfIV7FctZ0B5pOdilR+A+HLeeaozS5bNCT5vXdteiqsJ5/G2p7KzyPbs6IyrRqgdYropIrZOrc+nYVICjioC0NvP96Kmiq0iqZaSaWtVNEFXTlJw2deTYX1xHPRPHlyzIMyHy8n+8FYYS8pkkco0mbSVXGpJwCqK0NfncncP5qLjxKIjd0UNSkBbK8NsTfI17xPlz3nsXvPoyCKQ2Q1oCv0SO6eFZJLoHAfOgTgPusJOPeZLq+nT/BHJI30ccZmKx3awWYYH1XfjeZzq8+FwPMq3Rto77Mmssml9eGI3Jfl0iIA7Hhq7gxRK5jRar5OoGsAYJkrkq0p+mWzwvuVufXpQbTDilJYgX5/722zeM+XNMHZ0ZtifBVOWF0o4tc99v7pvZcuqoTcj3uoEtnQ+U5t4QYcg7AqzxtHK6/XDbp6Nmpk9AIetWR/nniCeBXm4MWA204ZL3a82So3TaOTTF4PixtEk03sZJ2talbVEo2/gKHbXacvJ40lg1ddm0jxt6EXTjbyDUE8PBkdGkuOTYk1PVsSr05LGreDGd/gIDqgZdQJkHI2U3nl7MS+RP4G3Afp5OjyEt/lBvZ8sH0bPnXTopFsRTO7L4gBSpHKXnApm8j2BKSSuVbOvqu2oYEE4QUFSeS12FeSlnRKK41ptcmTc1jLN1yWa75IfEECHk2mOZro0oHlBYEW+cWc5NxSfIHbCwHYLXwWPu51S3wOEfhujwEJx7RSmcIdw5RuLRb7KSjAjx28YYGSEhCcSftfocFxHZmTSxQwjyXXQ7bAEtyx0yAiulMdhMgkmMbATFH/kiNwHjjhD0I1cVBDJ4jTF5DjFCUnJ0Tylicc8ncynAKWEasYF22vXuVaDwq4feagATPmhlXroKdpF1wRR+Pas10yIr1IYhjHE14P+rxF+fndPBtGx3EIBF+GIiBQUfcF32Xssf8TMfcmL7+ZBarnFeU4ym8QuvCH5+Op3wxSd8uiWIiirDfEd90P9s+CDaepzVA9v1smFj75/XAkIoySc4/VelqP5dHxKT6f0Wgi+4FMxMU8xFN2kdARTQorORnhAAfUwQf2Ijz5Qf/L8kH/Elya7QE/IN+2Ttilflz+4jOgIF5cRhbR9/tObzgeXJG8JypOvZB2P3FkKxN9ea2AbFnpEPCWPjJTwd7m+sPXOD4mzGGJu4BSrgn2ev+sMlwyyMH5v/CsDXzn/KHwk+YElId20TRP09zflYkK9VEwIwzRIFKlyFbyfmlecyTlC7d9Kf5i58r83Qp/jvxL6lTrSyfzyzcpD1/3/yjX32i4QkV3YvWJ5qeTkbkqcB867Kf0G8OtBLdPfDeqPkbz+If5T8i6nn7+H1/8B</con:value></con:property><con:property><con:name>SAMLFAU2_1</con:name><con:value>nVZdc9o6EP0rjPvYMbKNzYcnMEMCpG5DmoQ0ze3LHSGvQY0tOZYMDr++kgEHCMml98mj9ers2Q8d6UzgJHb8vhCQScpZrUhiJvzS2jXyjPkcCyp8hhMQviT+pD++8p265ePtFqMWDLrGvyGxp60QwCTQsk3XxW2z3Wm1Ta+FWw1i25YbEeUqRA4BExIz2TUcy/ZMq2na3r3V9m3Ht1p127N+GbUHyITCVi51y9iQKkTXmEuZ+ggtl8v6slHn2Qw5lmWjx/HVhMwhwUbvbJ1RGSjrbfxJPQQCcUzqhCfoDO35nIXCn9AZwzLPYBMrfC+WhawOUj6hoLNPRrUXwoBFvFxeYMYZJTimK6zrMwY552GtH894RuU8eTcJ29LAJhTEJLbLPhlon9qJQHsMM4FNMcf2BusOIsiAEaj9uAu6xqfTulZuvc8wExHPErG//Ds+wBYQ8xRCU2zT2lA7HfBIpXpnQPyAkTgXdAHXelhTTEBsugnkdKjaTQYRLa6oUANaCM0O7dI7WK6rMaAzEPL/NGinOWuQBxzn0It4J3xeCSexyAJ5zmMeXEKM6RO6Jd2SwK5zaahau14eDGU1ROsdY7aMSNqYfB1d3bnTAQO7cNtWUzZmqyFDo+Ah/XGZWglZDj57zYuX229fG608mV8n8rMzfWLexS/r97AhL7Hz8GU4W10VNy40Lu9+jK7GzdX5zfTW7oRTN7JY8D0bf3u85Tcjwh6/TjLny+Ni+nPhrp4L5EFzOBryfIjHaHLO4HG+Wk6HxeWl+/OcBTIcPYVfkn+6VTo7/Pdt2zM/yae/gcjtUo9BMKiNVJew/FjMtIWGZlS6+qkWHyGBSaOnd2nt8HMldzT0VQ/Xa7vd7g/tc7fptC8aVscdWl6jMeh07JHVb/VdeysyaxYHFC84i6iOpSV3PTYfEySJL4CFkJkLniulE8YHiAMscS1gd+oQcCbgnit5tue58NrNooA4acn2C4k8+9liT5FRu+byO/ue9SMJ2Z4m2/aeJt8BoSkFLdx6roUabCFVLZ7xIpexXV/gOoNcSXumVdZ33LaHBE3SGDRTlPAwj6GeztOyMkisv46JiSitVJCUZxLH5YFA76Z3+G9bCeUTUu0gdErnoLoJb+4Y2/e2+bzJu3n0LtrC9/OQ6vOlyiozStZM9n+9Tosek2pUXhPbMq82/CUAEUcg0Af80GFpqojhgu7E317m6lpQQtLb9vcZ2/Xner5Y5GVLXbeBMgWPdFGR5aAJkFxJ3cs9fwKGKhR00r1SET8IXtn3KeZyziYSS0jUCNbK5QkPiQkI/ZAI1NkpTn2l7IVUpZNQyGO2i1g9gjTjD99JxCfaT5lv1GfJs/C1Y0ewduKoPNU7QlI20yt9p7y8MyCEK1iq1JBnu+DHAI4F3zdWRa64SDVQ01zC+39qWua6BiaE50wGA6M07EpvyVO+pOC/Or2BKdW9eu7R/37vmbQcAQLqkShoia9vbV8fATbbke9N0OMK7rQ/UvB9dr035reWnTodznjvDw==</con:value></con:property><con:property><con:name>SAMLFAU2_2</con:name><con:value>nVZbU+o6FP4rTPcjU3qH0hFmqugRFGQD4uXFiWmAbNq0JClWf/1OClSK6OGcp05WV771rUu+5IyBKDQ9nzFEOY5JJYtCwrzc2lJSSrwYMMw8AiLEPA69sd+/9cya7oHdFqXS7bSUF9ewYAM2bLXeNKFqu7NAbZpGQ3V0E7kIWTCoO8KVsRR1CeOA8JZi6oaj6nXVcCa66xmm51g113aelcoUUSawhUtNV7akMtZSFpwnnqa9vb3V3qxaTOeaqeuG9ti/HcMFioDSPttklAei7a0/rAUIojCENRhH2plW8jkLmDfGcwJ4StE2VvBdLF3Tm5rwCRie/1KKvSjoklmcLy8AiQmGIMQfQNanj/giDip+OI8p5ovo2yQMXQKrKIMqNGzyS9HK1E4EKjGkDKhsAYwt1gjNEEUEosr9qNtSfp3WtXzrhALCZjGNWHn53/ggskZhnKBAZbu0ttROBzxSqfYZgl6XwDBleI0GclgTABHbdhPB06EqQ4pmOLvFTAxoxiQ7bZ/ewXJTjQ6eI8b/T4P2mrMBmYIwRe0wfvVhp2pXhzzrZUlY9yO792T48Nxv5QT2nXND0drN8mAoiyHa7JhGzU6Cz633Jn6dOcMPeGdXofVmDRaL65FjgleSVscf+uBxlNxFw2HfrYLL58xcDladFOjXzsr4sMfPq8ENXzrv1sd8sTIejafxVW84fDCfdH9avV/3p9UedxsPS5p1ni6a4eNk2hxkN9rdupdePX44XUA7INPT/rQepl1t2Hjwb/zf/yyXPeee0mtg9y6fkvrvVpHOHv+ybXfmx+nrHwT5binHoNupXIkuAf6zmEkLDtRZ7uolUnwYR4QrbblLaoeXCrnDgSd6uFkbrutfGud23bLOLb1pX+qOZXWaTeNK9xu+bexEZsPigOJFTGZYxpKSuxmbnwnCyGOIBIiq6zgVSseUHxA7gINKl4zEIYgJQ5NYyLNhuW59zm36x51TTNg6A7az1NdKZRDzO3JH/RlHtCTJhlGS5BGCOMFI6rYcaybmmnFRihVYpzw0amtQIygVyk6lyHqm7Toaw1ESIklUi+IgDVEtWSR5YTS2+ZoqgCy3ji4nLxfjl/w0aN/mdvhvVwbhE2DpwGRC50i0Eh25YOxdNl+yrh+9iHbwfhpgebhETTnFcMOk/OtzVOSMFHOyS2vHu3A/NJSgtcOsimjBGsNi4ot7W8i5EID2rjErYNRWtXS9TvNe2LalUQGvyXpouqmNEUyFRL1P4iUiWoGinXQfFMQPghf2MsWUL8iYA44iMTuVfHnCA2CMmHwAdMXMZ6e+LkohRek4yvgx20UoHi+S8Y/vG+hB6SfMQ/F5i2nw2bEjWHtxRJ7i/ueYzOVK3gXv3wwHjAUsFioW033wYwDHgpeNRZELLlwM1GvK0fd/KlKeWgqAME4J73aU3LAvmTlP/p4g79PpC0yuysUzDf/7O03F+QhAJB53DOf48rb15BEg8z3Z3QY9qrxmp/mT8pbZtb+Yv1r26nQ44+2/</con:value></con:property><con:property><con:name>SAMLFAU2_3</con:name><con:value>nVZRc6o6EP4rDufxDkJALTLVGay1tae2nqKd0750YoiSU0iQBLT99SdBpWJtr/c+MVk2u9/ufvmScw7jyHI9znEqCKO1dRxR7hbWjpal1GWQE+5SGGPuCuT63ujWteqmC3dbtNqw39Fe2me4YQeoobdnM6g3AHD0WXDm6JaNUMs0mwg6M+nKeYaHlAtIRUezTNDUzZYOmhPTcYHtWk7ddprPWu0Rp1zGli51U9uCWvOOFgqRuIaxWq3qK7vO0oVhmSYwfo9ufRTiGGrd801FRaK0u/VH9QAjHEWojlhsnBsVn/OAuz5ZUCiyFG9zBV/lMg2zbUifgJPFD63ci4MhnbNieQEpowTBiLxD1Z8RFiELal60YCkRYfxlEcBUgXW8RjoCDfpDM6rQTgxUQZhyqPMQgm2sBzzHKaYI16YPw47247SpFVsnKaR8ztKYV5f/DQ+mOY5YggOd78raQjs94JFOdc8xcocURRknOb5TZE0gwnw7TYxOD1Ubp3hO1reES4KuuUJn7MM7WG660ScLzMX/GdDecDZBHmGU4e67P716TnuZ83gdLpaXvmjlwwF7+pWhaacAsO9cGMrRbpYHpCxJtNkxnnhX1uzn9XB54beZ83rjWfPUu8tFOAVjb9YfwT/L9xXpBcx+jG7Obpb3r898DNe//ChHK6/nDELWvoUkewf5YAwfJpP4Khg5nnX31IPrQZL0bCe4WN7Tq/C6hX6mwRm4v3u3m3e/n6fXgXm5bD/Bt/dRzh9BPHpNplPJw39GdthzqPc0ic3fg9YvgpzbUcvplOXs4a/admfez2Z/MBK7paLBsF8byClB8b2YKQsJ9Hnh6iZKfLjAVGhdtUtph5tJuSOBK2e4WQPH8S5Br9Gy7Z5tthuXZtO2++02GJjemdcAO5HZoDiAeMHonKhcSnI3tPkeIIpdjmmAUz1nmVQ6rn0TsQ8FrA3pgzwEjHI8YVKeQThrZ+AsWb425NASgBCyXuP221xotTsm7ul96s0FTiuiDEBFlB8wIgnBSrkVsblkNheyGUuYZyIC9RzWKc6ktqdKZl2r4TQNTuIkwgqqEbMgi3A9CZOiNQbffC0dIl5Y+7eeP3658F+KE2F8Wd/hv10rpE9AlANXJfWwHCc+csmAXT2f6m4dvYx24b0sIOqAyb6KlKANkuqvD7oonpRc+Shsh7zccGioBDcO6yrzBTlBJe/L21uKupSB7m44Swjqy3qW51kxj0bDNlIZ3lAdMUzL8DHKpFC9TdgrpkYZxTjpViiBHyQv7VWImQipL6DAseRPrVie8AzwMVfPgKFk/vrUN0YlpWydwGtxzHYRySeMQvztKwe5SPlJ81h+ViwNPiZ2JNZeHlmnfAUIQhdqpW6Ety/ogZgMS6SWsXQ/+LEAx5JXjWWTSyxCEmqWCfz1n5oSqY4GEWIZFcO+Vhj2hbPAKd4S7H44fQpTaHP5WCP//lrTSUEBhOUTj5MivrpzXXUE6GJPfLdJj+qv1W9/p79VdN1P5s+WvT4dcrz7Fw==</con:value></con:property><con:property><con:name>SAMLFAU2_4</con:name><con:value>nVdZc6rKFn73V1ieR8swiANWkqpmUFFRUZx4uYVNgyiTNJP++tuY6E6ys/fNuS9iL1av9a2B1V8/Y9P32B7AGMWJGwZVRXqp/afThi2WaaNGEzXtBsd3zYbJWmYD2jRnm3toohZfqyoYp0gJcGIGyUuNpZlmg+40aEZnmF6r22uxT+1Oy6hV1yjGxDRReaJr1cL3Aty7uX2ppXHQC03s4l5g+gj3EthbAnXSI5o9846p9vr8hvLmMH49JEnUoyj4ZCGIPA8+wdCnnqlPOs8W7i1dJzCTNEbvPi38Unvfm+f5U958CmOHYmmapmieIjoWdp1/aq+V+2ZkKYEdvq1FMwgDF5qeezVLUCpKDqFVBZ4Txm5y8P9gmqEYujTdQAVsQIYL/qlRvxzc0P3Q0ieQMTYb+GAyd2MLZKMYBRBVVwvlpfbPzyr4tlePzQDbYezjL+t/BwkFGfLCCFkNfI/sju7nFr9J1+szgj0lgF6K3QxNyzaJTIhwdR4j2y0mLibNZ+HqrfzVAt87DMF/U5Jn6iNOApv6JjOS6yCc/D/1+lirNytr00vRa9erM34mn06BLU1W9mFr+RZoaWq+015uED4qv4F6lPp9/bVRH331vmk4kLe7ejZPN1eWo1mXpZL6ue6MxOmKMQ8rXtB2p3hiDDJZU2bBRLvsj6w6kgvugkdMdHS6rrJrSqI2t/d0ZbLeiou2JRrtTV3qY1ae6YOTgEKXiqIW0MbqvLXlVyre5StPGkmu3aROkZbraDYacwsjHskC2zqeT2a+OVfwRJhooj4/GVprORulk6H68iumjzGUcY3R5RZk+X/bonnJTMzHQiwnhU0+zwS9qooi1iVRBEh0QK4IwFGEyRVMBed0PpzcAZ/TAtBWfSCBi7oAueTspLWmjeXcWq89Y630+4K64PIh2EkV8kKSi7VkbEe0uTGiHdunjaUgWNtFuG+OImt4yocHOFV1NZ/qykU9ysVUl+nNTeYUZH1Vjyoz01fNyuYo8OpCzqX85lGS88PU2Cyi3YrP4VXWVMANALOSxYM61P01A5uLAzzKExWcbnLhoIrrtVrIOphXBGe6JrHpYt+IoG9Fe987fDA+JMZ1a7C+7AdealzloyrKA3F5HiyVfVPS5BFY7Fb7zfpkbvpZBQ6nYH/36LZccxvmjtHNJW03GoeGcsjgFGiyIGiApIsGqjIYgXAgAJUDbnEVj0I7FK1+To1YXKnz3qC9vbjnLTYHtGcy3S6zm2za83NbkoO6MU73x4N62PZn9fHSylZ8wl93OKtnbdNlYBHZ2lYeJuPCHmrLyn4uFVs4rFvOiPKufD9WOyMQXy8HT3UWyaY9w5e9a9sbYTvjvI7tqc1FZHt2dMF1PdROMd0WUJOldpdsnFSAowoADI6ro6CpQrdMqqXk2k4VTNCXkxRcj2wyZtfn0TDz4K4JwmK8mR1P74WxpFwWqFyTSVvJla4ErLIIw+VK7h/BSnCcWHDkvqBBCWg7ZZzvSL5WQ6L8NY/9Wx4dWQBy0wBtflhprmg+mSVLjgOXQFgFff6gnouN1fbpzhnJk+U04nIVT+3A2IQn1XfjVZwuV+PxdFLs9XRwOpJZZdPLcdY0KnJ2ioA7HeuHkxRK5jza7ZKoHsAYJkrkq0pxnRn42HX3Pj2qtxhhTkuww678fb4amLIxjp0lMx4ugnmzw1dwal+Gfv3YzTd1fdmOOpZIhtXlQhnxmg5B2OcXrbNVsOzpsMon7dwegdPeZKeFxwsXXh4bOswX2niz9OutSiubTHz6qlPcNJrly0HOyZpWb1qCPtRxFLu7tOsU8Syw2J2ZtDODXrfdyDvxbHrSuai5dnxSrHlmRR11XtG4LTR8pxPBEbWgMiB37IkyuOyv5jXyZ/BtgH6dDg/h2/ygPk6WT6PnTjqWpFsRTO7L8gBSpGqfnApm8ncCU0pcq2HfVHtRyYJwgoKk9lruKslLLyUUx7V65Mh4W8t0h5V4TmTbLYEDkijTHM30aUC3eL7JN9k7y3lD8QWiGAa2W/oqedzbKfV3gNDvYRRYKG5kYQoPCNf+YrHMV1UJFuT4DQOM9JDwREDTXYJPYqSmIIs005ZbfLMrcVy/I4ugL9aq0zCZBbMY2AmKP3NE7hNHXCDoRi4qiWR5mmJynOKEpORsZmniMU+Z+RSglFDNuGR7PZbrtijs+pGHSsCUH1qph56iQ3RLEIXfnmzDhPgmLbML8e2g/2OEX9/dk0F0LLdUwGU4AiIFRd/wXe4ey28xc9/y4rt5kFpueZ6TzCaxC9+QfH71q2HKTnl0y+0H4jvsh/ZXwSfL1NegHs6szIWPtn/cCAihJJTj9V6Vs/l0fkqzLL3VoVPSqZiYpxiKblNLBFPCiS56eEIB9TBB/YiOPlB/8fyQf8aXJodgmZBP2iddU70tf3AXWSJc3kUU0vXFTy86n1ySvCWoSL6TiR65spSI/3qrgT1Y6hHxnDzyMLZ+lesbWx/8kDjLGeYGTrkqyeflD40BQ2LWJXMsjD8a/87Ad84/Cx9JfmBJSDft0wT9+U21HFAvNRPCMA0SRardBB+H5g1ncolQ75fSb2Zu9O+dzxf4j3x+q06WZHz5Zu2h6/5v5YZ7axeIyC7s3rC81ApyNSXOA+fDkH4H+Nucpjt9uiP1eSByjzndIXNa6LQeCfwUyetv4t8lH3L69Xt4/S8=</con:value></con:property><con:property><con:name>SAMLFAU2_5</con:name><con:value>nVfZcuq6En3nKyjOI0U8gjGVpMojGDCTjRlebhlZGIMnLE/w9VcmgZ1kZ++bc59ArVb36sGtpWdkBz7dExCCSepFYV2TXxr/abOg2907ZIthSKbFth27tQM823IYjuU4wDE0tWvUNYQyqIUotcP0pUGTFNMiuRZJmRTdI8keQz5RJLtt1C2YIGwaqzyRjXoZ+CHq3dy+NLIk7EU28lAvtAOIeinoGYI+7mHNnn3H1Hh9fkN5c5i8HtI07hEEeHIggL4PnkAUEM/EJ51nB/UMzw3tNEvgu08HvTTezxZF8VQwT1HiEjRJkgTJE1jHQZ77T+O1dj8MHS3cR29ryQ6j0AO2713tCpQO00Pk1AXfjRIvPQR/ME0RFFmZbsEStADFhv80iF8Obuh+aOkTyATZLXSwqbuxBdzDBIYA1pcL7aXxz88q+HbWTOwQ7aMkQF/W/w4SDHPoRzF0Wuge2R3dzy1+k67XZwh6Wgj8DHk5nFRtEtsAovosgXuvHHsIN5+D6rfy10t07zAI/k1JnomPODFs4pvMyJ4LUfr/1Otjrd6sWLafwVcLrFmyXJzJDunnnBVnOg6UDpHHRS83CB+V30A9Sv2+/tqoj756P1R2w2YHRpbKK6dlaCTKvgSnaJlv/dN1aluedtLHkqwWodvNiyGzWRDqbqL0j7MBaSkUSY5zWRrwp4u1KMyaPrw0NUKKV4P+dtkXkXKxEnt1DlyQWcnJWhmeumRU0ST43S5tWhpYzTYu4Ii12V7FqiGMpwEr2nMF5rtRrb29UkS6XtqnfsSrE3FlgpdfMX2MoYprBC+3IKv/6zbJy3ZqPxZSNSn2+PNM4auuaVJTliQBSq5QaKLgauL4KkxE93Q+nLw+X5CiMF+qgixc9IVQyO5GtubzkVI4luVvLU1VRX3BFgNhI9fwhqyUlrxdD0l7tY03tEpuDVF01otoxwxjZ3AqBgcw0U29mJjaRT8q5cRUyNVN5pZ4fdWPOjU1l0xtdRR5faEUcnHzKCvFYbJdLeLNki/AVZnrAtsXqKUiHfSBGVgUYBYHcFTGunC6ycWDLlmWXiqmMKuJ7sTCsZmSuo1B4MS7wD98MD7Axk2nb112fT/bXpWjLil9yTj3DW3HyHNlKCw2y93KOtkrNa+BwUTY3T16bc9eR4W77RbyfDMcRVvtkIOJMFdEcS7gdJGCrvWHQtQXBZ0VvPIqHcVOJDlqQQxpVGvyfr+zvnjnNbL7pG9T3S61Ga86s3NHVsLmdpTtjgf9sFanzZHh5Es+5a8blDfzju1RoIz387UySEflfjA3aruZXK7BoOm4Q8K/8mqic0MhuV4Ovu4u0lVnii47b79fiesp63N7X2cW8d7fxxfUNKP5KSE7ImRoYnPJR2lNcHVREPrH5VGc62K3SqqjFfONLtqCqqSZcD3S6Yi2zsNB7oMNI0TlaDU9nt4L48iFIhLFXMFtpdS6suBURRgYS0U9CkvRdRPRVVRxDmRhvtFGxQbnaznAyl/zqN7y6CqioDBbocMPasyS5NNparCscAnFZajyB/1crpxOQHJnqIyNScwWOprsw+0qOumBlyyTzFiORpNxuTOz/umIZ9WeNEY5s60p+SkWvMnIPJzkSLZn8WaTxs0QJCDV4kDXyut0i45dbxeQw2abEmekDDh6GeyKZd9WtqPENajRYBHOGI6voWx/GQTNY7dYNU2jE3OOFO7ly4XYJhYZCZHKL9pnp6Tp02FZjDvFfiicdjY9KX1evPDKaGuCYjEfrYyg2a618/E4IK8mwU7iaWH0C1aZz5uMI5oDE8WJt8m6bplMQ4fe2Gkn35JWx4v9E09nJ5ONGcsNcLFmuRNz+qw2Z9dgG7hcDIbEgsgFhduPtf5ld7WvcTAFbwP063R4CN/mB/FxsnwaPXfSYeBuhSC9L6sLSJPrKr4V7PTvBKaSeE5rf1PtxRULQikM08ZrdaoiL70MUxzP6eEr422tkBwt86xEd9oSK8iSQrIkpZIC2eZ5hmfoO8t5Q/EFohSFe6/yVfG4t1vq7wBB0EMwdGDSyqMMHCBq/MVila+6Fi7w9RuFCJoR5okqLQoSyVASrVCKqrIi26UpRiX5DtfudlWmUZ9E6TScJsI+hclnjtj+xBEXEHixBysiWd2mCF+nKMUpOdt5lvrUU24/hTDDVDOp2F6PZrttAnlB7MMKMBFETubDp/gQ3xJEoLdfumUDdJOCKEoAul30f4zw6949GVjH8SoFVIUjQlxQ+A3fpe+x/BYz+y0vvpsXMser7nOc2TTxwBuSz1u/GqbqlEe3VEE5PYDuuB/qXwWfTBNfo3p4c3IPPPr+8STAjBJzjtd7Wc720/kpy/PsVgiu4lMJNk9QBNkhDAgyTIouZnSCIfEwQfyIjz5Qf/H8kH/Gl6WH0EjxNx3gtqnflj94jBgQVY8RDbd9+dOXzieXOG8pLNPvZJKP3ywV4r8+a0APVHpYPMM/BS7hr3J9Y+uDHxxnNcS80K1WFfu8/K0zPDzIouSj8e8MfOf8s/CR5AeWFHfTLkvhn3fq1YR6adgARFmYanLjJvg4NW8400sMe7+UfjNz43/vhL5EfyT0a31s4PkV2I2Hrve/lVverV0AxKeQd8Py0ijx2xQ7D90PU/od4G+DmuRUklNIXpDYx6Dm8KAWufYjgZ8ief1N/LvkQ06/fg+v/wU=</con:value></con:property><con:property><con:name>SAMLFULL</con:name><con:value>nVbbcto6FP0Vxn3sGFvG3DyBGS5J6oaQBFNOk5eOkDegxpaIJQPp11cy4GBCcjjnBUbbW2uvfdGSLgSOI8frCAGJpJyVNnHEhJdZW0aaMI9jQYXHcAzCk8QLOrcDzynbHt5vMUp+v2X8wi623ardMN0KUj/IxuYU4ZmJnHrNJc2wBtWpchUiBZ8JiZlsGY6NqqZdM1F1bDc8VPEQKjs19GSUJpAIha1cyraxI7URLWMh5dKzrPV6XV5XyjyZW45tI+vn7SAgC4ix0b7YZpQFSto7f1IOgUAUkTLhsXVhFXwuQuEFdM6wTBPYxQo/imVbdtNSPqGg8y9GvhdCn814tuxhxhklOKJ/sK7PLcgFD0udaM4TKhfxh0kgWwObsCEmQS77YlhFamcCFRgmAptigdEOawQzSIARKP0Y+S3jy3ldy7aOE8zEjCexKC7/Gx9gK4j4EkJT7NPaUTsf8ESl2hdAPJ+RKBV0BUM9rEtMQOy6CeR8qNJ9AjO6GVChBnQjNDvrkN7RcluNPp2DkP+nQQfN2YJMcJRCGwbTRW3yu//1qZtUrtngYS1Hm64lfozWrYzAoXNmyFu7XR4NZT5E2x1DPuLh6qrrP0v/0k2vHgcViqfrbj+84S8sWH0f2KPnyuB+WI/hwfIrdz2/0ZiM4eby2h3MYE1fGt/r3x+Zc/9wPeyM/9wyi319av4Ybh67vVV98m1CwQmm69pqtBgOh3H16p+ez6xucvXyML18FPL6iac/axN30AuD+v2di+5YMF3cjPh1url7enQW31zWb457QrTydA74F237Mx+k099A5H6px8Dvl65Ul7D8XMy0hYbmLHP1llp8hAQmjbbepbXDS5Xc0dBTPdyuUaPRuURdt+b0uxW76V7a1Uql32yiK7tT77hoLzJbFkcUe5zNqI6lJXc7Np8TJLEngIWQmCueKqUTxieIfSxxyWcjdQg4EzDmSp5FtfkczuaVPxvURCgN49rr5rWZpHWjNOTyjt0lnZmEpKDJCBU0eQSELilo4dZzLdRgC6lq8YJXqYxQeYXLDFIl7YlWWc9xG1VL0HgZgWZqxTxMIygvF8usMpbY/jsmJiKz9ged4P5XL/iVHQjrw/SOv+0roXxCqh2ETqkLqptw4o6x9/m8y7t28i7aw3fSkOrzpcoqE0q2TIqf3qZFj0k+Km+J7ZnnG44NBXDrOK88XriiJB/7/PJWmq5UoL1vzgtG5ZdyulqlWT9ct2IlCt7SFbFsxwqApEqnXsf8GZiVo1hnXQo58aPgub1IMZULFkgsIVbzU8qWZ7wCAhD6FeCrwd+c+8QohFSlk7CRp2y9SL1gNONPHznEI9pPme/V35on4VvHTmAdxFF5qkeApGyuV/pCeP1gPAhXsFRJGU8OwU8BnApeNOZFzrlINVDTVMLHX0pao1oGJoSnTPp9IzMc6mbGU74uwXtzegeTSXP+VqP//lgzaTYCBNQLT9AMX1+5nj4CbH6gvbugH8hv8zP5LbJrvzO/txzU6XjG238B</con:value></con:property><con:property><con:name>SAMLSAU1_1</con:name><con:value>nVZbU+o6FP4rTH10SnrBUjrCDIp6mA1uuWy3x5czIV1AtE1rkkLx15+kQAVED/s8dbK68q1vXfIllwLHkRO0hQAuacIqeRwxERTWppFxFiRYUBEwHIMIJAlG7X4vcKpWgLdbjEq30zT+8Z06tixwTNcDz6xNw4np+97UJK4Vek5jihu+p1yFyKDLhMRMNg3Hsi9MyzPti7HlB7YdXDhV1/OfjcojcKGwlUvVMjakctE05lKmAULL5bK6dKsJnyHHsmz01O+NyBxibLQu1xkVgXhr40+qIRCIIlIlSYwu0Z7PZSiCEZ0xLDMOm1jhV7EsZDWQ8gkFnZ0Z5V4Iu2yaFMtrzBJGCY7oO9b16YOcJ2GlHc0STuU8/jIJ29LAJuTEJHaNnRlon9qJQHsMucCmmGN7gzWEKXBgBCq/ht2mcXZa14qtY46ZmCY8FvvLP+MDbAFRkkJoim1aG2qnAx6pVOsSSNBlJMoEXcC9HtYUExCbbgI5HarywGFK8x4VakBzodmhXXoHy3U1OnQGQv6fBu00Zw3yiKMMWsTuhw9eSh/rfpoPn13rdhg6nXxChoNmQWDXuTCUrV0vD4ayHKL1jtd4+NAZQkSul9Hijv79Kl/74aC3qqUv90Q4NsrccfrsvfP56GnWpc9kQtx6v36eZ8MfxF5kvh0+PT49jr0f+W8e5t3lKn+JkHDjK+JPzxvOnPudVA6Sx9HD5Ol9sLqe/Z4/p9nb1VPPfolq9/3zdqdrd9qDjhfev0wGN72/rNtf0/wudkl+/XBXa6Or+/qK56N2s0xnh/++bXvmR9nkBYjcLvUYdDuVW9UlLL8XM22hoTktXINUi4+QwKTR0ru0dgSZkjsaBqqH67Xt++0b+6rmOZ7jWo3ajXXhup1Gw7612vV2zd6KzJrFAcXrhE2pjqUldz023xMkcSCAhcDNRZIppRPGN4gdLHGly4bqECRMwDhR8vyew8J+c2ar0LIuuB/Xo2Rh1zPfqNwn8if7ydtTCXxPkpUe70ryEAhNKWjd1mMt1FwLqUrxhheZjOzqAlcZZErZuRbZwKn5F0jQOI1AE0VxEmYRVNN5WhQGifXXMTERhZUKkiZc4qg4D+jL7A7/bQuhfEKqHYRO6QpUM+HIFVPb5vMpb+/oVbSFb2ch1cdLVVVyStZM9n99DIueknJSPhLbMi83/CEAEUcg0Df80GFpyojhgu7E397l6lZQOtLa9vcN29W3arZYZEVLazUXcQWPdFGR5aARkEwp3WqcvAJDJQo66VopiR8EL+37FDM5ZyOJJcRqBCvF8oR3xAiEfkd01dHJT32k7IVUpZOQy2O260i9gTTjb59JJCDaT5kf1GeZ8PCjY0ewduKoPNUzQlI20yt9pay+GBCSKFiqxDDhu+DHAI4F3zeWRS65SDVQk0zC138qWuWaBiYkyZjsdozCsKu8BU+5SiH4cPoEU4h7+dqj//3cM2kxAgTUG1HQAl9f2oE+Amy2o96boMcF3PG/E/B9dq1P5s+WnTodznjrXw==</con:value></con:property><con:property><con:name>SAMLSAU1_2</con:name><con:value>nVZZc+I4EP4rlPNIGZ8B4wpUEcjBLDmGI5PNS0rIbdCMLYMkc/36lQw4mJAsu0+ubre6vz70qa84iiPbb3EOTJCEllZxRLmfaRtayqifIE64T1EM3BfYH7Qeer5dMX20P6KVup2G9l6velWrVvd0x7TGumsGWK8j19Y916sGgRSrdVOacp5Cl3KBqGhotmld6mZVty6Hpudbtu+alZrjvWmlF2Bc+pYmFXlqC2rFG9pUiJlvGMvlsrJ0KgmbGLZpWsbrQ2+ApxAjrXm1zSgLxJo7e1wJAEMU4QpOYuPKKNhcBdwfkAlFImWwixV8Fcs0zLohbQJOJhdafhaCLg2TTGwjmlCCUUQ2SNXnAcQ0CUqtaJIwIqbxl0lYpnKswwrr2HLphWYUoZ3pqICQcaTzKbJ2vvoQAgOKoTTqdxvaxXldy44OGaI8TFjMi+J/wwN0AVEyg0Dn+7R20M53eKJSzSvAfpfiKOVkAY9qWGcIA991E/D5rkrPDEKy6hEuB3TFFTrjEN6RuK1Gh0yAi//ToIPmbJ28oCiFJn0Jq1EteEnHd2+ju5/3ZbheDh7ua6aVNDIAh8aZIm/tVjwaynyItifGf8evvwfTt8fnP/11n7+tyr3JdPTz/pfdvu/wdDOyN25cDvjoR3BdBVx+sFubofc2X6XGfNhj7SV0e97rxlmHY06iTtm98Vaj+17/8a8avaOL6zv+ozx6M1/r0ebxBuYsHnbWImQPyaAaOyIU3dtZ97E9qU68p7bMjIzugta8Rfodq/d8vdisbn/VBvPac53zUSNP5wB/Ube/84N0/Buw2ItqDLqd0q3sEhLfk5nSkEAPM1N/psiHC6BCa6pTijv8VNIdCXzZw61seV7rxrp2q45jOmbdvTEvHadTr1u3ZqvWcq09yWxRHEFsJzQkKpai3O3YfA8Qxz4HGgDTF0kqmY5r33jsIIFKXdqXlyChHIaJpGcrdJL5Og5rY+YsLT5jGy+cjlc1e66VHhPxRJ9YKxTACqRsWQVS7gMmMwKKudVgcznZXMhizNEiFZFVWaAKhVRyO1M069uud2lwEs8iUFCNOAnSCCqz6SwrjcG3X1tHmGfa/s3wvT14z+6D8WV2x//2hZA2AVEGXCV0DbKZcOKJcfbZfMq6evIp2rtvpQFR10tWVTCCt0iKvz6GRU1JPin7tPa4c/NjRcG1cZxVHi1YEJzPfP5yS0KXFNDcN2aOrMq8ki4WadYL13UMJt0bqh6GaRsDwKkkqfUw+QPUyL0YZ70IOfCj4Lm+CDEVUzoQSEAsZ6eUiWesAAPgagXoyqlfnbtfFELK0glYiVO6diTXF4X42w0H+1jZSfWz/CwTFnx07ISvgzgyT7kBCEInSlKvwfqL4cCJdEskjyXs0PkpB6eCF5V5kXMsQg7UOBXw9Z+SIqiGhjBOUiq6HS1THJJmhlOsZ+B/GH1yk/FyvqiRf9/UdJKNAAa53nGS+Vfvra+uAJ0cEO8u6EnutTv177i3iK75Sf1Zc1Cn4xlv/gM=</con:value></con:property><con:property><con:name>SAMLSAU1_3</con:name><con:value>nVbbcuI4EP0VyvNsfAWMK1DlQMiSISETZ3KZl5SQG1BiS2DJXPL1IxlwMCFZdp9cardOn77oSGccJbHtB5xDKgijlVUSU+7n1paWpdRniBPuU5QA9wX2w+B64NtV00e7LVql321pL17dsyJnbOvYAUd3LcvTPddzdBiPbNNybOSN6tKV8wz6lAtERUuTP2q6Wdet2r3p+ZbjW81q07L/aJUHSLnEli5VU9uSWvGWNhVi5hvGcrmsLp0qSyeGbZqW8XQ9CPEUEqS1zzYZ5YHS9tYfVyPAEMe4illinBkln7OI+yGZUCSyFLaxoq9imYbZNKRPxMnkh1bshahPxyxfdhBllGAUk3ek6nMNYsqiShBPWErENPkyCctUwDqssI4tl/7QjDK1E4FKDFOOdD5F1hbrDsaQAsVQ+X3Xb2k/TutavvU+RZSPWZrw8vK/8QG6gJjNINL5Lq0ttdMBj1SqfQbY71McZ5ws4EYN6wxh4NtuAj4dqnKbwpisBoTLAV1xxc7Yp3ew3FSjSybAxf9p0F5zNiAPKM6g3Z2nt4/9q3DhDtCv4XxQ693Qy+XqVfDnVk5g3zk3FK3dLA+GshiizY7Hiy57fOPLi0mtc8OCp9XjteNe4Z8oXqfI8pL+8BbVLm3XeQwur4bm1egt6zbuJ4MhHv3D7Xgc9X56gxuyps+ZCEKyaAbQsO2gNnz4bdidX945dma378P3p3NY0J5XG3XeG7WRWZ+9vcq6eVFHDOPFHX1eNuZhMI97V2vTXrksadI/bw/YduqjuyiEmXfVuG4V6ezxL9t2Zz7MRq+AxW6pxqDfrfRkl5D4XsyUhUT6OHf1Z0p8uAAqtLbapbTDz6TckciXPdysLc8LLqxzt+44pmM23Quz5jjdZtPqmUEjcK2dyGxYHFDsMDomKpaS3M3YfE8QJz4HGkGqL1gmlY5r3yB2kUCVPr2Th4BRDvdMyrOVuFPbttDbiLu8npprJtbv9RqNtMoNE0M6TIOxgLSkyZZV0uQ7wGRGQAm3mmsuB5sLWYs5WmQitqoLVKWQSWlPlcr6tuvVDE6SWQyKqZGwKIuhOpvO8soYfPO1dYR5bu0OgvD2pRO+5AfC+DK9w3+7SkifiCgHrlI6B9lNOHLHmLt8PuVdP3oX7eCDLCLqfMmyipTgDZPyr49pUWNSjMpHYjvmxYZDQwncOMyriBctCC7Gvri8paZLFWjvmjNHVnVezRaLLO+H6zpGKuENVRHDtI0QcCZ1an3P3oAaBYpx0qVQED8IXtjLFDMxpaFAAhI5P5V8ecIrIASuXgF9OfirU58YpZCydAJW4pitE8sXjGL87SMH+1j5SfOt/CxZGn107AjWXhyZp3wECEInaqUuhPUX44GZhCVSyli6D34M4FjwsrEocsFFyIEaZQK+/lNRGtXSEMYso6Lf1XLDvm7mPMV6Bv6H0yeYXJqLtxr598eaTvIRwCBfeJzk+OrK9dURoJM97d0GPSq/drf5nfyW2bU/mT9b9up0OOPtvw==</con:value></con:property><con:property><con:name>SAMLSAU1_4</con:name><con:value>nVfZcuq6En3nKyjOI0U8YAZTSarkATBgCNiML7eMLA/gCcsTfP2VIbCT7Ox9c+4LRu1W9+rBraVnbPge2wMYozhxw6CqSC+1/1jdrkXTzVaDa5lMg2NNttFl+W7D5PhOG3GmsafZWlXBOEVKgBMjSF5qLM00G3SnQTM6w/Ra3R5LP5FNu1p1hWJMTBOVJ7pWLXwvwL2r25daGge90MAu7gWGj3AvgT0NqJMe0ewZd0y11+cbyqvD+NVJkqhHUfDJRBB5HnyCoU89U590nk3c01w7MJI0Ru8+TfxSe9+b5/lT3nwKY5tiaZqmaJ4iOiZ27X9qr5X7ZmQqgRXe1qIRhIELDc+9GCUoFSVOaFaBZ4exmzj+H0wzFEOXphuogA3IcME/NeqXgyu6H1r6BDLGRgM7BnM3tkAWilEAUXW5UF5q//ysgre9emwE2ApjH39Z/ztIKMiQF0bIbOB7ZHd0P7f4TbpenxHsKQH0UuxmaFq2SWRAhKtvMbLcYuJi0nwmrl7LXy3wvcMQ/DcleaY+4iSwqW8yI7k2wsn/U6+PtbpZWRleil7P0pzbTvq8aE5E8pH4aaZwDjUttl735Qrho/IN1KPU7+uvjfroq/dNwzMDGNlvJZq9fjtd8pHtnui4E3ZHdUrcCq3d7GzH/W5rV4zE89ibrPHQKQC2hKMGNiEXbez2OAqHaTF065W9Ul+6W7BV1HFXnDljYbY4tBwmS4ulO8O7ZGYtJsvMPyi0Oxwk9uGUjloj082m6WAbbjbnua3zTX40nc67ZmVmHE/SRrfYCdc0C08RuvjlV0wfYyjjGqPzNcjy/6ZF85KRGI+FWE4Ki3yeCXpVFUWsS6IIkGiDXBGArQiTC5gK9vHkHN0Bn9MCmC/7QAJndQFyyd5Kq/l8LOfmauXtVkq/L6gLLh+CrVQhLyS5WEm7zYg21rtoy/bpnSYI5mYR7pujyBwe86EDp6qu5lNdOasHuZjqMr2+yuyCrC/qQWVm+rJZWR8EXl3IuZRfPUpy7kx360W0XfI5vMhzFXADwCxl0VGHur9iYHPhwIM8UcHxKhccVVyt1ELWwVtFsKcrEpsu9ncR9M1o73vOB+NDYlw3B6vzfuClu4t8UEV5IGqngabsm9JcHoHFdrlfr47Gup9V4HAK9nePbss1NmFu77q5NN+OxuFOcTI4BXNZEOaApIsGqjIYgXAgAJUDbnERD0I7FM1+To1YXKnz3qC9ObunDTYGtGcw3S6znazbb6e2JAf13TjdHxzV2fRn9bFmZks+4S9bnNWztuEysIis+UYeJuPCGs61yv5NKjZwWDftEeVd+H6sdkYgvpwdT7UXybo9w+e9a1lrYTPjvI7lqc1FZHlWdMZ1PZwfY7otoCZLbc/ZOKkAWxUAGByWB2GuCt0yqaaSz7eqYIC+nKTgcmCTMbs6jYaZB7dNEBbj9exwfC+MKeWyQOVzmbSVXOlKwCyLMNSWcv8AloJtx4It94U5lMB8q4zzLcnXckiUv+axf82jLQtAbu5Amx9WmkuaT2aJxnHgHAjLoM876qlYm22f7pyQPNGmEZereGoFu3V4VH03XsapthyPp5Nir6eD44HMKovWxllzV5GzYwTc6Vh3jlIoGW/RdptE9QDGMFEiX1WKy2yHD11379OjeosR3mgJdtilv8+XA0PejWNbY8bDRfDW7PAVnFrnoV8/dPN1XdfaUccUA0s6n6ldvKJDEPb5RetkFix7dJb5pJ1bI3DcG+y08HjhzMvjnQ7zxXy81vx6q9LKJhOfvugUN41muTbIOXk+rzdNQR/qOIrdbdq1i3gWmOzWSNrZjl613cg78mx61LmoubJ9Uqy3zIw66ltlzm3gzrc7ERxRCyoDcseaKIPz/mJcIn8GbwP063R4CG/zg/o4WT6Nnjvp0Ei3Ipjcl+UBpEjVPjkVjOTvBKaUuGbDuqr2opIF4QQFSe213FWSl15KKI5r9siRcVvLdIeVeE5kW2KbA5Io0xzN9GlAt3gyN5vsneXcUHyBKIaB5Za+Sh53O6X+DhD6PYwCE8WNLEyhg3DtLxbLfFWVYEGO3zDASA8JT6QFqcWIgOmIIs+xNCcxEitLstxuMR2GF9u16jRMZsEsBlaC4s8ckfvEERcIupGLSiJZnqaYHKc4ISk5GVmaeMxTZjwFKCVUMy7ZXo/lui2KnJeRh0rAlB+aqYeeIie6JojCtyfbMCC+SsvsQnw96P8Y4dd392QQHdMtFXAZjoBIQdE3fJe5x/JbzNy3vPhuHqSmW57nJLNJ7MIbks+vfjVM2SmPbrn+QHyH/dD+Kvhkmfoa1MOZmbnw0faPGwEhlIRyvN6rcjKeTk9plqXXOnRKOhUT8xRD0W1KQzAlnOish0cUUA8T1I/o6AP1F88P+Wd8aeIEWkI+aZ90TfW6/MFdREO4vIsopOuLn150PrkkeUtQkXwnEz1yZSkR//VWA3uw1CPiN/LIw9j8Va5vbH3wQ+IsZ5gb2OWqJJ/nPzQGDIlZl8yxMP5o/DsD3zn/LHwk+YElId20TxP05zfVckC91AwIwzRIFKl2FXwcmlecyTlCvV9Kv5m50r93Pl/gP/L5jTrRyPjyjdpD1/3fyg332i4QkV3YvWJ5qRXkakqcB/aHIf0O8Lc5TXf6dEfq80DkHnO6Q+a00Gk9EvgpktffxL9LPuT06/fw+l8=</con:value></con:property><con:property><con:name>SAMLSAU1_5</con:name><con:value>nVfZcuq6En3nKyjOI0U8gjGVpEoeAAOGAGZ8uWVk2Rg8YXmCr78yBHaSnb1vzn0CtVrdqwe3lp6x6XtsB2CM4sQNg6qmvNT+w9ntNuR4odG2hV2DFyDXaDMmbNiCxdlm07QRsmpVDeMUaQFOzCB5qbE0wzVooUEzBsN2aLpDc09sq7WtVZcoxsQ0UXmia9XC9wLcubp9qaVx0AlN7OJOYPoIdxLYmQN91CGaHfOOqfb6fEN5dRi/7pMk6lAUfLIQRJ4Hn2DoU8/UJ51nC3fmrhOYSRqjd58Wfqm9n83z/CnnnsLYoViapilapIiOhV3nn9pr5X4YWVpgh7e1bAZh4ELTcy9mCUpHyT60qsBzwthN9v4fTDMUQ5emG6iADcjwwT816peDK7ofWvoEMsZmA+9N5m5shmwUowCi6mKmvdT++VkFb2eN2AywHcY+/rL+d5BQkCEvjJDVwPfI7uh+bvGbdL0+I9jRAuil2M3QuGyTyIQIV99iZLvFyMWk+SxcvZa/WuB7hyH4b0ryTH3ESWBT32RGcR2Ek/+nXh9rdbOyNL0UvYYjrT5mjkIRFSevxXUpJ1/52DC78ublCuGj8g3Uo9Tv66+N+uir90N59xLlvYMhx4DbGbt6vQ6DwWq2CpPwtFYEAev+MdBPzWN7E/MiZlbr3SzPino7j/uBeRx2JxGftDZtKR/hCmuKw+KQz9bthQuUc7+ttqSVEUnsTp5d5HOKBFgs25P+ZZPtQ1+1QG824PuemJiro9DqeSgdqHpgW8P6NKkgXik45ZK6yyHy61EmYPDyK6aPMZRxDdH5GmT5f92kRcVMzMdCLieFTT7PBL3qmibXFVkGSHZArknA0aTRBYwl53jaH92emNMSmC66QAFnfQZyxdkoy+l0qObWcultl1q3K+kzPu+DjVIhG4paLJXtekCbq220Ybv0di5J1noW7rhBZPWPeX8Px7qh52NDO+sHtRgbKr26ypyCrC/6QWcmxoKrrA6SqM/UXMmvHhU134+3q1m0WYg5vKhTHfA9wCxUea/3DX/JQG62hwd1pIPjVS7tdXm51AvVAG8VyRkvSWyG3N1G0Leine/tPxjvE+OG1Vuedz0v3V7Ugy6rPXl+6s21HadM1QGYbRa71fJorrpZBfbHYHf36DZdcx3mzradK9PNYBhutX0Gx2CqStIUkHTRQNd6AxD2JKDzwC0u8kFqhbLVzakBiyt10eu11mf3tMZmj/ZMpt1mNqNV6+3UUtSgvh2mu8Ne36+7k/pwbmULMREvG5zVs5bpMrCI7Ola7SfDwu5P55Xdm1KsYb9uOQPKu4jdWBcGIL6c957uzJJVa4LPO9e2V9J6wnuC7encLLI9OzrjuhFOjzHdkhDHUptzNkwqwNElAHqHxUGa6lK7TKql5dONLpmgqyYpuBzYZMguT4N+5sENB8JiuJocju+FsZRclah8qpK2UittBVhlEfrzhdo9gIXkOLHkqF1pChUw3WjDfEPytegT5a957F7z6KgSULktaIn9CregxWSSzHkenANpEXTFvX4qVlbLp4UTUkfzccTnOh7bwXYVHnXfjRdxOl8Mh+NRsTPS3vFAZpVNz4cZt62o2TEC7nho7I9KqJhv0WaTRPUAxjDRIl/Xistkiw9td+fTg3qTkd5oBQrswt/li56pboexM2eG/VnwxgliBaf2ue/XD+18VTfmrUiw5MBWzmdqGy/pEIRdcdY8WQXLHveLfNTK7QE47kx2XHiidBbV4daA+Ww6XM39erPSzEYjn74YFD+OJvm8l/PqdFrnLMnoGziK3U3adop4Eljsxkxa2ZZettzIO4psejT4iFs6PinWW2ZFgv5WmfJruPUdIYIDakZlQBXskdY77y7mJfIn8DZAv06Hh/A2P6iPk+XT6LmTjjnpVgST+7K8gDSl2iW3gpn8ncCUEtdq2FfVTlSyIJygIKm9lqdK8tJJCcVxrQ65Mm5rlRZYReRltikLPFBkleZppksDuimKnMixd5ZzQ/EFohwGtlv6Knnc7Zb6O0DodzAKLBQ3sjCFe4Rrf7FY5quqBTNy/YYBRkZIeKIoiCxo8zTfYlptRm6rIqcSvIzEyyorK6BWHYfJJJjEwE5Q/JkjNj9xxBmCbuSikkiWtykm1ylOSEpOZpYmHvOUmU8BSgnVjEu212H5dpPCrh95qARM+aGVeugp2kfXBFH49ss2TIivUhiGMcTXi/6PEX7duyeD6FhuqYDLcCRECoo+x8J0mmKneY/lt5j5b3nx3TxILbe8z0lmk9iFNySft341TNkpj24pg7I6EN9xP9S/Cj6Zpr5G9fBmZS589P3jSUAYJeEcr/eynMyn01OaZem1EELJp2JinmIoukXNEUwJKTob4REF1MME9SM++kD9xfND/hlfmuyDeUK+aZ+0TfW6/MFjZI5w+RjRSNsXP33pfHJJ8pagIvlOJnvkzVIi/uuzBnZgqUfEb+QnJyX8Va5vbH3wQ+Ish5gbOOWqZJ/nv3WGSwZZGH80/p2B75x/Fj6S/MCSkG7apQn68061nFAvNRPCMA0STaldBR+n5hVnco5Q55fSb2au/O+d0Bf4j4R+rY/mZH75Zu2h6/5v5YZ7bReIyCnsXrG81AryNiXOA+fDlH4H+NugpoUuLai0CGT+MagFMqgloflI4KdIXn8T/y75kNOv38PrfwE=</con:value></con:property><con:property><con:name>SAMLSAU2_1</con:name><con:value>nVZbU+o6FP4rTH10StpSBDrCDIpuq3gDZHN4ORPSVYi2CTYpF3/9TgpUQPSwz1Mnqyvf+tYlX3IucBw5XlMISCTlrLCIIya8zFo30oR5HAsqPIZjEJ4kXrd53/acouXhzRaj4Lfqxr/hyCJQI7YZWqXAdGtWYOLqKDRd1yLqn1OpuBXlKkQKPhMSM1k3HMsum9aZaZd7VtWzHc+xizWnNjQKfUiEwlYuRctYk1qIujGRcuohNJ/Pi/NSkSdj5FiWjQb37S6ZQIyNxvkqoyxQ0lj7k2IABKKIFAmP0Tna8TkPhNelY4ZlmsA6VvBdLAtZNaR8AkHHJ0a+FwKfhTxbXmLGGSU4oh9Y1+ce5IQHhWY05gmVk/jbJGxLA5uwICaxXXZioF1qRwLtMEwENsUE22usDoSQACNQeOn4dePkuK5lW3sJZiLkSSx2l3/HB9gMIj6FwBSbtNbUjgc8UKnGORDPZyRKBZ3Bgx7WKSYg1t0EcjxU4SmBkC7aVKgBXQjNDm3T21uuqtGiYxDy/zRoqzkrkD6OUmj0yC/fvyJdtBiUefvm9/Ps5v1ZtB+jzlU9I7DtnBny1q6We0OZD9FqBwxdene2bFXi5vC28tHsOP+8lE7Dzl3zag6nN+Erj/3T6GIkuncIy2YZAle0btFjPOaDssvt+W2FPt1Myn2a9iG2npcTZk2czvI1iC9dPH0Z1IZnLb6cV3+n0fOV+3LzMXxYDFwYBji4aH+c0pGTVoc90b+7KQ3v3P6t76QJnv8Kate9MLl1zkbpciAe0qBm1fN0tvjv2jZnvpuOXoHIzVKPgd8qXKsuYfmzmGkLDcwwc/WmWnyEBCaNht6ltcNLldzRwFM9XK3tarV5ZV+4Z86FXbJq7pVVLpVatZp9bTUrTdfeiMyKxR7FS85CqmNpyV2Nzc8ESewJYAEk5oynSumE8QNiC0tc8FlHHQLOBPS4kmelRuDWlqqT0rXnEfn4eHtzolAsjcIDl4/sMWmGEpIdTbbtHU3uAKFTClq49VwLNdhCqlq841kqI7s4w0UGqZL2RKus57jVMhI0nkagmaKYB2kExelkmlUGidXXMTERmZUKMuWJxFF2INC36e3/21RC+QRUOwid0gWobsKBO8be5PMl77ODd9EGvpkGVJ8vVVaZULJisvvrc1r0mOSj8pnYhnm+4S8BiDgAgX7gh/ZLk0cMZnQr/uYyV9eCEpLGpr/v2C6+F9PZLM1a6rollCh4pIuKLAd1gaRK6pY9/gYM5SjoqHslJ74XPLfvUkzlhHUllhCrESxkyyMeEl0Q+iHhq7OzOPaVshNSlU7CQh6yXUbqEaQZ//hOIh7Rfsr8pD5zngSfHTuAtRVH5aneEZKysV7pO2X5zYAQrmCpUkOebIMfAjgUfNeYFznnItVAjVIJ3/8paJmrG5gQnjLpt4zMsC29GU+5nIL36fQFJlP3/LlH//u9Z9JsBAioR6KgGb6+tT19BNh4S77XQQ8ruFP9ScF32TW+mL9atuq0P+ONPw==</con:value></con:property><con:property><con:name>SAMLSAU2_2</con:name><con:value>nVZbU+o6FP4rTH10StIbl44wgyJnd7aox+Jl++KENNBom2KScvHXn6RApYgeznnqZHXlW9+65EvOBEoT2+8JQbikGast04QJv7B2jJwzP0OCCp+hlAhfYj/sDa98uw59tN1i1IJ+x3hp2sjFaByZNiTIdLEzMccTCE3UmrgtZOF20/GUqxA5CZiQiMmOYUPLM2HDtLwRbPmW40O77jiNZ6P2QLhQ2MqlDo0NqaXoGLGUMx+AxWJRXzj1jE+BDaEFnoZXIY5Jiozu2TqjIhDvbvxxPSKYJAmu4ywFZ6DicxYJP6RThmTOySZW9F0sCGAbKJ9I0OmJUe4lUcAmWbG8QCxjFKOEfiBdnyGRcRbVesk041TG6bdJWFADm2SJTWy57MQAVWpHAlUYcoFMESNrg3VHJoQThknt/i7oGCfHda3YOuKIiUnGU1Fd/jc+hM1Jks1IZIptWhtqxwMeqFT3jGA/YDjJBZ2Taz2sM4SJ2HST4OOharecTOjyigo1oEuh2YFdenvLdTX6dEqE/D8N2mnOGuQBJTnpikdnQKbeNGjBJHr4Hdu/ruw/KXD4aNgpCOw6F4aytevl3lCWQ7TeEX2sxq3zxuoGYnC/OsXzuRe0Au8RDv4a0FNvmXhiEHmCP/6+fL5PXxvDYWwJm15xJ7u/fbsQs8ky4O3z5PHv37aLH/kHH2Q3ichumk+zJhpdPsEp+AAessBi+NiYtSaL0XmyCuXzr6a1HI6no+imKe8GUDzw8PT6j/Mevk/pmwxHV2k7eg2bUfOJxVHrstEIOmU6O/yrtu2ZD/PxK8Fyu9RjEPRrA9UlJH8WM22hkTkpXP2ZFh8hCZNGV+/S2uHnSu5o5KsertdWq9W7tM7dhuPaDmy7l9BznH67bQ1gr9lzra3IrFnsUbzI2ITqWFpy12PzM0Gc+oKwiHBznuVK6YTxA2IfSVQL2J06BBkTZJQpeX6Xb8jj0nt1Wdt6jVZjmMZx/AaVul5n8obd8N5EEl7RZMuqaPIdwXRGiRZuPddCDbaQqhbvaJ7LxKrPUZ2RXEk71yrr227LA4Kms4RopiDNojwh9Vk8KyoDxPprmwiLwnp3OXq5CF+K4wC+TW7/37YOyiei2kHohM6J6iX5csPYvrfN5kvWjYM30Ra+l0dUny5VVMkpXjOp/vqcFT0k5aBs09ryLt33DRVosJ9VGS2aU1yOfHlxKz1XCtDdNuYdWfX3ej6f50UvXNcBXMEDXQ8AbRASnCuNWo2yN8JAiQKOuhBK4nvBS3uVYi5jFkokSapmp1Ysj3gBhEToF0Cghn557POiElKVTpKlPGS7SNTrRTP+8YGDfaz9lPlWfRYZjz47dgBrJ47KUz0AJGVTvdKXweqb4cCZgqVKxjK+C34I4FDwqrEscslFqoEa55J8/6em9aljIIyznMmgbxSGXc0seMrVjPifTl9gClku32n03x9qJi1GABP1uhO0wNfXra+PAJvu6O4m6EHptfvtn6S3yq77xfzVslOn/Rnv/gM=</con:value></con:property><con:property><con:name>SAMLSAU2_3</con:name><con:value>nVbbcuI4EP0VyvM4ZXzl5gpUMSHseCAkExKSycuUkNtYE1tyLJnLfv1KBhxMSJbdJ5fare7T3UdHuuAoiW2vzzlkgjBaWycx5V5h7Wp5Rj2GOOEeRQlwT2Bv2r8ee3bd9NB+i1bzB13tt9t0kBs4gd5Eoa27HQfrnTk09GYTO6Frgg2BJV05z8GnXCAqupptWg3dbOpW495se5bjOa26224/a7UZZFzGli51U9uBWvOuFgmReoaxWq3qK6fOsoVhm6ZlPF2PpziCBGm9i21FRaKst/PH9QAwxDGuY5YYF0bF5yLg3pQsKBJ5BrtcwUe5TMPsGNIn4GTxRSv3QuDTkBXLS0QZJRjF5G+k+nMNImJBrR8vWEZElHxYhGWqwDqssY4tl37RjCq0MwNVEGYc6TxC1i7WHYSQAcVQe7jzu9qX86ZWbL3PEOUhyxJeXf43PECXELMUAp3vy9pBOz/giU71LgB7PsVxzskSJoqsKcLAd9MEfH6o2m0GIVmPCZcEXXOFzjiEd7TcdmNAFsDF/xnQwXC2QWYozqH3I83+NMLXycPV4NtDmyO0ajPracmayOwWAA6dC0M52u3yiJQlibY7pi2/OWitW8/OoztZDQMxihbDUTz2X+z1VdZJnZ8bI7xN+eZX2HHTp9fH2cYC032GydfL7Jcf/jU0xzcuf/j6cyOMIV5f+S7k963Rj8ncwc93s1nkf2/7+HFp0595kkU/ZkM7mzx2vn93x/MbqzVtXm6i5mNnNo8HbHxFRtFoM3q5Yy9G/NSIp2z4K2qTEfk6zBbdspwD/FXb/sxP8/kfwGK/VDTwB7WhnBISn4uZspBADwtXL1XiwwVQofXULqUdXi7ljgSenOF2bbXb/SvrmzxAru2YHffKbDjOoNOxhma/1XetvchsURxBvGQ0JCqXktwtbT4HiBOPAw0g05csl0rHtU8iDpBANZ/eyUPAKId7JuXZWrjrDSw3dotvkuCFORZQulzNHa02YeKG3mT9UEBW0WTLqmjyHWCSElDCrXjNJbG5kL14RctcxFZ9ieoUcintmVJZz3bbDYOTJI1BITUSFuQx1NMoLTpj8O3X1hHmhXUw7k9vf19OfxcHwviwvON/+05In4AoB65K+gZymnDijrH39byru3nyLtqH7+cBUedLtlVkBG+RVH+9sUXRpKTKW2F75OWGY0MluHFcV5kvWBJc0r68vKWmSxXo7Yfziqz6az1fLvNiHq7rGJkMb6iOGKZtTAHnUqc29+wFqFFGMc66FErgR8lLexViLiI6FUhAIvlTK5ZnvAKmwNUrwJfEX5/7xKiklK0TsBanbJexfMEoxJ8+crCHlZ8038rPimXB28ROxDrII+uUjwBB6EKt1IWw+YAemMmwREoZyw6DnwpwKnnVWDa5xCIkoea5gI//1JRGdTWEMcup8AdaYTjUzQKn2KTgvTm9C1NIc/lWI//+WNNJQQEM8oXHSRFfXbmeOgJ0caC9u6Qn5dcedD6T3yq63jvze8tBn4453vsH</con:value></con:property><con:property><con:name>SAMLSAU2_4</con:name><con:value>nVfZkqrKEn33KwzPo2EziCJGd0cUAoqKE84vN7AoBmWSAgG//hZ26+5p77vPjTDUSrIyVw5krXrGhu+xXYAxihM3DKqq9FL7z6HJtTombTSEFo0aHNcm/9oG1xAM69BqCmzbZJhaVcU4RWqAEyNIXmoszTQbNN+gmSXDdFtCl+48cRy/r1XXKMbENFF5omvV3PcC3L25famlcdANDezibmD4CHcT2NWBNu4Sza5xx1R7fX5DeXMYvzpJEnUpCj6ZCCLPg08w9Kln6pPOs4m7umsHRpLG6N2niV9q73uzLHvKmk9hbFMsTdMULVBEx8Su/U/ttXLfjEw1sMK3dc8IwsCFhudejRKUhhInNKvAs8PYTRz/N6YZiqFL0w2UwwZkuOCfGvXLwQ3dX1r6BDLGRgM7BnM3tkAWilEAUXW1UF9q//xdBd/2LmMjwFYY+/jL+t9BQsEFeWGEzAa+R3ZH9/cWf0jX6zOCXTWAXordC5qUbRIZEOHqLEaWm49dTJrPxNVb+as5vncYgv+mJM/UR5wENvVDZiTXRjj5f+r1sVZvVtaGl6LXtbz39/NJuHbQ4VQsx2PaNQY9GetAfblB+Kj8BupR6vf110Z99NX7plWnOGGZrztsm0qYtaW7A+U0HoRFKDmM0/QKTsfaemmNkvZ+t2WGi8gRC8on2HMtZIrZRj0s6rNF7lA5qLSPirJVD3S64uaJkGBx57jnqRD0xmba1Nvu1jt3YI4vR1toDq0MsIOoN+4rMd/WvYl4tpDK68qWn7Kjll0R81GIw01y4NMrslaTYzB/+RXTxxjKuEaouAVZ/t+2aEEyEuOx6JWTwiKvZ4JeNVXt1aVeD6CeDTJVBLYqjq9gItqns3Ny+0JGi2C+UoAECm0BMsneSev5fCRn5nrt7deqoojagssGYCdVyANJztfSfjukjc0+2rEKvddF0dwuwkNzGJmDUzZw4ERbatlkqRbaUc4nS5ne3GR2TtZX7agx0+WqWdkcRUFbyJmU3TxKcuZM9ptFtFsJGbzKcw1wfcCs5J6jDZb+moHNhQOP8lgDp5tcdLTeeq3l8hLMKqI9WZPYlj1lH0HfjA6+53wwPiDGl2Z/XRz6Xrq/yketJ/d7+rmvq4emNJeHYLFbHTbrk7FRLhU4mIDD3aPbco1tmNn7TibNd8NRuFedC5yAuSyKc0DSRQNN7Q9B2BeBxgE3v/aOYjvsmUpGDVlcqQtev70t3PMWG33aM5hOh9mNN+3ZuS3JQX0/Sg9HR3O2yrQ+0s3LSkiE6w5f6pe24TIwj6z5Vh4ko9wazPXKYSblWziom/aQ8q6CEmv8EMTXwvE0e5Fs2lNcHFzL2ojbKefxlqc1F5HlWVGB68twforptoiaLLUrLqOkAmxNBKB/XB3FuSZ2yqSaajbfaaIBFDlJwfXIJiN2fR4OLh7cNUGYjzbT4+m9MKaUySKVzWXSVnKlIwGzLMJAX8nKEaxE245FW1bEOZTAfKeOsh3J12pAlL/mUbnl0ZZFIDf3oC0MKs0VLSTTROc4UATiKlAERzvnG7Pt0/wZyWN9EnGZhidWsN+EJ81341Wc6qvRaDLOD8u0fzqSWWXR+ujS3FfkyykC7mS0dE5SKBmzaLdLonoAY5ioka+p+XW6x8eOe/DpYb3FiDNagjy78g/Zqm/I+1Fs68xosAhmTV6o4NQqBn792Mk29aXejnizF1hSUVD7eE2HIFSERets5ix7clbZuJ1ZQ3A6GOwk9wSxEOTRfgmzxXy00f16q9K6jMc+fV1S3CSaZno/4+T5vN40xeVgiaPY3aUdO4+ngcnujKR92dPrtht5J4FNT0suaq5tnxRrdjEjXptV5twW7n2bj+CQWlAXIPPWWO0Xh6txjfwpfBugX6fDQ/g2P6iPk+XT6LmTDp10K4LJfVkeQKpUVcipYCR/JjClxDUb1k21G5UsCCcoSGqv5a6SvHRTQnFcs0uOjLe1TPOsJHA9ti3wHJB6Ms3RjEIDuiUITaHJ3lnOG4ovEHthYLmlr5LHvZ1SfwYI/S5GgYnixiVMoYNw7Q8Wy3xV1WBBjt8wwGgZEp4o0jQB2iZ8oiWwighEoSXzDKBFQQKi2JNq1UmYTINpDKwExZ85IveJIy4QdCMXlUSyPE0xOU5xQlJyNi5p4jFPF+MpQCmhmnHJ9ros12lR2PUjD5WAKT80Uw89RU50SxCF337ZhgHxTVpmF+LbQf/bCL8+uyeD6JhuqYDLcERECoq+8d0O+bzH8i1m7kdefDcPUtMtz3OS2SR24RuSz49+NUzZKY9uuX1BfIf90P4q+GSZ+hrUw5l5ceGj7R83AkIoCeV4vVflbDydn9LLJb3VgS/pVEzMUwxFtykdwZRwomIZnlBAPUxQf0VHH6i/eH7IP+NLEyfQE/JK+6RrqrflX9xFdITLu4hKuj7/24vOJ5ckbwnKk59kPY9cWUrEf7zVwC4s9Yh4Rn6yMDZ/lesHWx/8kDjLGeYGdrkqyWfxm8aAITHrkjkWxh+N/2TgJ+efhY8kP7AkpJsOaYJ+/6RaDqiXmgFhmAaJWg4CIvg4NG84kyJC3V9K38zc6N87n8/xb/n8VhvrZHz5Ru2h6/5v5YZ7axeIyC7s3rC81HJyNSXOA/vDkH4H+G1O07xC85IigB73mNM8mdMi33ok8FMkr9/E3yUfcvr1fXj9Lw==</con:value></con:property><con:property><con:name>SAMLSAU2_5</con:name><con:value>nVfZkqrKEn33KwzPo6EgIIrR3RGFoKLihPPLDSxKQJmkmPTrb6GtW3v33rfPDR+wkqzMlQNZq96w7jpMC2CMwsj2vaIivZf+wxqoqSMeVWqNul7h+IZR2TG0XhF4Wte5Gm1ACEtFBeMYKR6OdC96LzF0ja3QjQpdm9eYFk23OL7KCPVtqbhEISamiUqVLhUz1/Fw6+r2vRSHXsvXsY1bnu4i3IpgSwPqsEU0W/odU+nj7Yby6jD8sKIoaFEUrBoIIseBVei71Bv1ovNm4JZmm54exSH69Gng99Ln3jRNqylb9UOTYmiapmiBIjoGts1/Sh+F+2ZkKN7ev63buud7NtQd+6LnoFQUWb5RBI7ph3ZkuX8wXaNqdG66gjJYgTXO+6dE/XJwRfdDSy8gQ6xXsKXX7sZmaI9C5EFUXMyU99I/P6vgbe881D2890MXf1n/O0jIS5DjB8io4Htkd3Q/t/hNuj7eEGwpHnRibCdolLdJoEOEi5MQ7e1saGPSfAYuXstfzPC9wxD8NyV5o55xEtjUN5mRbBPh6P+p13OtblaWuhOjDx2xltrl9s7JrJtNJ1D73cGpl3in2H+/QnhWvoF6lPpz/bVRH331uck2Brv+pKbR0rJ9Kh+GLMCTzeZC88Jm5sfl8qhxDqVeE3pTVyU9DrpKwpe9k7Y6DsecqnRGRKE3HJ1YLTsVlHjR7fiCyNYHXeWYGdOoKfmzVcCOGFcIEqspNhssdwK9eVyfzEZ1Ydc8W+bisGgexGmnD3vbUT+VFCYadsNCtKUZX1OOdi+2Y3FwLtub918xPceQxzVA52uQ+f91nRYkPdIfi3Y+Kfbk84zQh6oo7bLUbgPUNkGqiMBUxOEFjETzeLKOdldIaRFMFx0ggbM6A6lkbqTldDqQU2O5dLZLpdMR1RmX9sBGKpAXkpwtpe26T+urbbBhOvRWE0VjPfN3bD8wese0Z8GROlfT0Vw5qwc5G81lenWVmRlZX9SDWhvPF2xhdRAFdSanUnr1KMmpNdquZsFmIaTwIk9VwHVBbSG3LbU3d5c1yM4seJCHKjhe5aKltpdLNZPnYFIQzdGSxDZvd7YBdI1g5zrWk/EeMT43usvzruvE24t8UNtyt62dupqyY6Wp3AezzWK3Wh71VScpwN4I7O4e7bqtr/3U3DZTabrpD/ytYiVwBKayKE4BSRcNVKXbB35XBCoH7OzSPoi83zY6KdVncKEsOF1+fbZPa6x3aUevNZu1zXDFT068JHvl7SDeHSzVWnfG5YFmJAshEi4bnJQTXrdrMAv207XciwbZvjfVCruJlK1hr2yYfcq5CJ1QbfRBeDlbjmrOohU/xuedvd+vxPWYcxp7R2Vnwd7ZB2dcnvvTY0jzImIZanNOBlEBmKoIQPewIN2ois08qYaSTjeqqIOOHMXgcmCiAbM89XuJAzcs8LPBanw4fhbGkFJZpNKpTNpKLjQlYORF6GkLuXMAC9E0Q9GUO+IUSmC6UQbphuRr0SPKX/PYuebRlEUgs1vAC70Cu6CFaBxpHAfOnrjwOoKlnrKVwbt044TkoTYKuFTFo723XflH1bXDRRhri8FgNMx287h7PJBZtae1QcJuC3JyDIA9Gsyto+RL+iTYbKKg7MEQRkrgqkp2GW/xoWnvXLpfrtfECS3BBrNwd+miq8vbQWhqtUFv5k3YhlDA8f7cc8uHZroqzzU+aBhtby+dz9Q2XNI+8DvCrH4yMoY5Wot0yKf7PjjudGaUOYJ4FuTBdg7T2XSw0txyvVBPhkOXvswpbhSMU62bcvJ0WmYNcd6b4yC0N3HTzMKxZzAbPeKTLb3k7cA5Ckx8nHMBuzRdUqxJYgQNdVKYcmu4dc1GAPvUjEqA3NgPle55d9EvgTuGtwH6dTo8hLf5QT1PlpfRcycdGulWBKP7Mj+AFKnYIaeCHv2dwOQS26jsr6qtIGdBOEJeVPrId+XkpRUTimMbLXJk3NYy3WAkgWszvNDkgNSWaY6udWhA1wWBFVjmznJuKL5AbPve3s595Tzudkr9HSB0Wxh5BgoriR9DC+HSXyzm+Soq3owcv76H0dwnPLHJihIPGJFr1kSZ5aQG16T5NqB5qd4hP6lUHPnR2BuHYB+h8JUj1l844gxBO7BRTiTz0xST4xRHJCUnPYkjp1ZN9KqHYkI1w5zttRiuWaew7QYOygFTrm/EDqoGVnBNEIVvT6aiQ3yVQt8PIb4e9H+M8Ou7ezKIjmHnCjgPR0SkoOgbvsveY/ktZu5bXnw3D2LDzs9zktkotOENyeurXw2Td8qjW/KgjBbEd9wP9a+CF9PU16ge3ozEho++f1wJCKMknOPjXpaTXj1V4ySJr4Vo5HwqJOapGkXzlIZgTEjRee4fkUc9TFA/4qMP1F88P+Sv+OLI8rSIfNMuaZvidfmDy4iGcH4ZUUjbZz+96by4JHmLUBZ9J2s75M6SI/7rtQa2YK5HxBPySEkJf5XrG1tPfkic+RCzPTNf5ezz/LfOsMkg88Nn498Z+M75q/CR5AeWiHTTLo7Qn98U8wn1XtIh9GMvUvJJQATPU/OKMzoHqPVL6TczV/73Segz/EdCv1aHGplfrl566Nr/W7liX9sFIrIL21cs76WM3E2Jc898mtKfAH8b1HSjQzdkWgBt7jGoG2RQi436I4EvkXz8Jv5d8pTTr9/Dx38B</con:value></con:property><con:property><con:name>SchemaNameSpace</con:name><con:value>http://www.decellc.org/schema/2013/06/coordinator</con:value></con:property><con:property><con:name>scriptsPath_Linux</con:name><con:value>/opt/dece/scripts</con:value></con:property><con:property><con:name>scriptsPath_Windows</con:name><con:value>C:\Scripts</con:value></con:property><con:property><con:name>StreamCreateCount</con:name><con:value>2</con:value></con:property><con:property><con:name>StreamDeleteCount</con:name><con:value>0</con:value></con:property><con:property><con:name>StreamDeleteList</con:name><con:value/></con:property><con:property><con:name>streamlimit</con:name><con:value>12</con:value></con:property><con:property><con:name>streamMaxCreateExpireTimeDiffhours</con:name><con:value>24</con:value></con:property><con:property><con:name>streamMaxDisplayCount</con:name><con:value>1000</con:value></con:property><con:property><con:name>streamRenewTimeHours</con:name><con:value>6</con:value></con:property><con:property><con:name>Streams_ALID</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_561393521.txt</con:value></con:property><con:property><con:name>Streams_APID</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:242394094</con:value></con:property><con:property><con:name>Streams_CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_344946277.txt</con:value></con:property><con:property><con:name>targerHostd</con:name><con:value>qa.d.uvvu.com</con:value></con:property><con:property><con:name>targetDeviceDomain</con:name><con:value>qa.d.uvvu.com</con:value></con:property><con:property><con:name>targethost</con:name><con:value>qa1.p.uvvu.com</con:value></con:property><con:property><con:name>targetHostB</con:name><con:value>qa1.b.uvvu.com</con:value></con:property><con:property><con:name>targetHostC</con:name><con:value>qa1.c.uvvu.com</con:value></con:property><con:property><con:name>targetHostd</con:name><con:value>qa.d.uvvu.com</con:value></con:property><con:property><con:name>targetHostP</con:name><con:value>qa1.p.uvvu.com</con:value></con:property><con:property><con:name>targetHostq</con:name><con:value>qa1.q.uvvu.com</con:value></con:property><con:property><con:name>targetHostS</con:name><con:value>qa1.s.uvvu.com</con:value></con:property><con:property><con:name>targetjdbc</con:name><con:value>jdbc:oracle:thin:deqa1/dec2010@10.31.153.5:2115/stdecqpdb_stdecqa.neustar.com</con:value></con:property><con:property><con:name>targetport</con:name><con:value>443</con:value></con:property><con:property><con:name>targetPortd</con:name><con:value>7001</con:value></con:property><con:property><con:name>targetPortq</con:name><con:value>443</con:value></con:property><con:property><con:name>targetSystem</con:name><con:value>LP1</con:value></con:property><con:property><con:name>targetURL</con:name><con:value>qa1.p.uvvu.com</con:value></con:property><con:property><con:name>targetUrlSHost</con:name><con:value>qa1.s.uvvu.com</con:value></con:property><con:property><con:name>tester</con:name><con:value>pjg</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>TOU</con:name><con:value>qa.c.uvvu.com</con:value></con:property><con:property><con:name>TOUUrl</con:name><con:value>qa1.c.uvvu.com</con:value></con:property><con:property><con:name>TOU_US</con:name><con:value>20140811</con:value></con:property><con:property><con:name>URLEncode</con:name><con:value>NO</con:value></con:property><con:property><con:name>urnaccount</con:name><con:value>urn:dece:accountid:org:dece:</con:value></con:property><con:property><con:name>urnError</con:name><con:value>urn:dece:errorid:org:dece:</con:value></con:property><con:property><con:name>urnGenericRightsToken</con:name><con:value>urn:dece:stream:generic</con:value></con:property><con:property><con:name>urnLocker</con:name><con:value>urn:dece:rightslockerid:org:dece:</con:value></con:property><con:property><con:name>urnNode</con:name><con:value>urn:dece:org:org:dece:</con:value></con:property><con:property><con:name>urnParentalControlAllowAdult</con:name><con:value>urn:dece:type:policy:ParentalControl:AllowAdult</con:value></con:property><con:property><con:name>urnParentalControlBlockUnratedContent</con:name><con:value>urn:dece:type:policy:ParentalControl:BlockUnratedContent</con:value></con:property><con:property><con:name>urnParentalControlRating</con:name><con:value>urn:dece:type:policy:ParentalControl:RatingPolicy</con:value></con:property><con:property><con:name>urnPolicy</con:name><con:value>urn:dece:type:policy:</con:value></con:property><con:property><con:name>urnPolicyID</con:name><con:value>urn:dece:policyid:org:dece:</con:value></con:property><con:property><con:name>urnRating</con:name><con:value>urn:dece:type:rating:</con:value></con:property><con:property><con:name>urnRightsLocker</con:name><con:value/></con:property><con:property><con:name>urnRightsToken</con:name><con:value>urn:dece:rightstokenid:org:dece:</con:value></con:property><con:property><con:name>urnstream</con:name><con:value>urn:dece:streamhandleid:org:dece:</con:value></con:property><con:property><con:name>urntokenType_userpassword</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>userBasic1Org1Name</con:name><con:value>pjgOrg1Basic1</con:value></con:property><con:property><con:name>userBasic1Org1Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>USERID</con:name><con:value>188AE1B463423094E0533D991F0A7A41</con:value></con:property><con:property><con:name>USERIDBAU1_1</con:name><con:value>F96E164BE49C95D2E0401F0A05997C44</con:value></con:property><con:property><con:name>USERIDBAU2_1</con:name><con:value>F96E099093EC61E3E0401F0A07995A9C</con:value></con:property><con:property><con:name>USERIDFAU1_1</con:name><con:value>188AE1B462293094E0533D991F0A7A41</con:value></con:property><con:property><con:name>USERIDFAU2_1</con:name><con:value>188AE1B4628C3094E0533D991F0A7A41</con:value></con:property><con:property><con:name>USERIDFULL</con:name><con:value>urn:dece:userid:org:dece:188AE1B462293094E0533D991F0A7A41</con:value></con:property><con:property><con:name>USERIDSAU1_1</con:name><con:value>188AE1B462623094E0533D991F0A7A41</con:value></con:property><con:property><con:name>USERIDSAU2_1</con:name><con:value>188AE1B462B13094E0533D991F0A7A41</con:value></con:property><con:property><con:name>userIndex</con:name><con:value>0</con:value></con:property><con:property><con:name>UserName</con:name><con:value>stream_list_view_20150615_014515</con:value></con:property><con:property><con:name>UserName_BAU1</con:name><con:value>stream_list_view_20150615_014512</con:value></con:property><con:property><con:name>UserName_BAU2</con:name><con:value>stream_list_view_20150615_014515</con:value></con:property><con:property><con:name>UserName_FAU1</con:name><con:value>stream_list_view_20150615_014510</con:value></con:property><con:property><con:name>UserName_FAU2</con:name><con:value>stream_list_view_20150615_014513</con:value></con:property><con:property><con:name>UserName_SAU1</con:name><con:value>stream_list_view_20150615_014511</con:value></con:property><con:property><con:name>UserName_SAU2</con:name><con:value>stream_list_view_20150615_014514</con:value></con:property><con:property><con:name>userPropertyNameArray</con:name><con:value>UserName_FAU1,UserName_SAU1,UserName_FAU2,UserName_SAU2,UserName_BAU1,UserName_BAU2</con:value></con:property><con:property><con:name>userStandard1Org1Name</con:name><con:value>pjgOrg1Standard1</con:value></con:property><con:property><con:name>userStandard1Org1Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>userStandard2Org1Name</con:name><con:value>pjgorg1standard1</con:value></con:property><con:property><con:name>userStandard2Org1Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>V1</con:name><con:value>2015</con:value></con:property><con:property><con:name>V2</con:name><con:value>02</con:value></con:property><con:property><con:name>versionMajor</con:name><con:value>2015</con:value></con:property><con:property><con:name>versionMinor</con:name><con:value>02</con:value></con:property><con:property><con:name>versionUrlEncode</con:name><con:value>06</con:value></con:property></con:properties><con:wssContainer/><con:databaseConnectionContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:eventHandlers type="TestRunListener.afterRun" name="TestRunListener.afterRun"><con:script>if(testStepResult.getTestStep().config.type.toString() == "restrequest")
{
                byte [] tempByteArrRequest = testStepResult.getRawRequestData();
                String tempRequest = new String(tempByteArrRequest);

                log.info("-----------------------------&lt;" + testStepResult.getTestStep().getName() + " Request>--------------------------------");
                log.info(tempRequest);
                log.info("-----------------------------&lt;/" + testStepResult.getTestStep().getName() + " Request>--------------------------------");

                byte [] tempByteArrResponse = testStepResult.getRawResponseData();
                String tempResponse = new String(tempByteArrResponse);


                log.info("-----------------------------&lt;" + testStepResult.getTestStep().getName() + " Response>--------------------------------");
                log.info(tempResponse);
                log.info("-----------------------------&lt;/" + testStepResult.getTestStep().getName() + " Response>--------------------------------");
}
</con:script></con:eventHandlers><con:eventHandlers type="TestSuiteRunListener.afterTestCase" name="TestSuiteRunListener.afterTestCase"><con:script>log.info "#####################    Listener Started ######################################"

import com.eviware.soapui.model.testsuite.TestRunner.Status

def tS = testRunner.getTestSuite();
def tP = tS.getProject();



def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView tear down")

//myTC.setPropertyValue("tName",tC.getName());
//myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

log.info "          Listner StreamListview callled               "

def activeCount=myTC.getPropertyValue("ActiveStreamCountList");
assert runnerTC.status == Status.FINISHED;

int StreamCreateCount=Integer.parseInt(tP.getPropertyValue("StreamCreateCount"));

log.info "  listner StreamCreateCount   :  $StreamCreateCount   "  

if(StreamCreateCount>0)
{
def myTC1 = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamDelete for TearDown")

//	myTC1.setPropertyValue("tName",tC.getName());
//	myTC1.setPropertyValue("sName",tS.getName());


	def runnerTC1 = myTC1.run( null , false );

	assert runnerTC1.status == Status.FINISHED;
	
}
log.info "#####################    Listener Finished ######################################"

</con:script></con:eventHandlers><con:sensitiveInformation/></con:soapui-project>